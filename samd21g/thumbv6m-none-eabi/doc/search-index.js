var searchIndex = JSON.parse('{\
"aligned":{"doc":"A newtype with alignment of at least `A` bytes","i":[[3,"A2","aligned","2-byte alignment",null,null],[3,"A4","","4-byte alignment",null,null],[3,"A8","","8-byte alignment",null,null],[3,"A16","","16-byte alignment",null,null],[3,"Aligned","","A newtype with alignment of at least `A` bytes",null,null],[5,"Aligned","","Changes the alignment of `value` to be at least `A` bytes",null,[[],["aligned",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"index","","",4,[[["rangeto",3]],["aligned",3]]],[11,"hash","","",4,[[]]],[11,"clone","","",4,[[]]],[11,"default","","",4,[[]]],[11,"as_slice","","",4,[[]]],[11,"as_mut_slice","","",4,[[]]]],"p":[[3,"A2"],[3,"A4"],[3,"A8"],[3,"A16"],[3,"Aligned"]]},\
"as_slice":{"doc":"`AsSlice` and `AsMutSlice` traits","i":[[8,"AsSlice","as_slice","Something that can be seen as an immutable slice",null,null],[16,"Element","","The element type of the slice view",0,null],[10,"as_slice","","Returns the immutable slice view of `Self`",0,[[]]],[8,"AsMutSlice","","Something that can be seen as an mutable slice",null,null],[10,"as_mut_slice","","Returns the mutable slice view of `Self`",1,[[]]]],"p":[[8,"AsSlice"],[8,"AsMutSlice"]]},\
"atsamd21g":{"doc":"Peripheral access API for ATSAMD21G microcontrollers…","i":[[3,"CorePeripherals","atsamd21g","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",0,null],[12,"CPUID","","CPUID",0,null],[12,"DCB","","Debug Control Block",0,null],[12,"DWT","","Data Watchpoint and Trace unit",0,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",0,null],[12,"FPU","","Floating Point Unit (only present on…",0,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",0,null],[12,"MPU","","Memory Protection Unit",0,null],[12,"NVIC","","Nested Vector Interrupt Controller",0,null],[12,"SCB","","System Control Block",0,null],[12,"SYST","","SysTick: System Timer",0,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",0,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[3,"AC","","Analog Comparators",null,null],[3,"ADC","","Analog Digital Converter",null,null],[3,"DAC","","Digital Analog Converter",null,null],[3,"DMAC","","Direct Memory Access Controller",null,null],[3,"DSU","","Device Service Unit",null,null],[3,"EIC","","External Interrupt Controller",null,null],[3,"EVSYS","","Event System Interface",null,null],[3,"GCLK","","Generic Clock Generator",null,null],[3,"HMATRIX","","HSB Matrix",null,null],[3,"I2S","","Inter-IC Sound Interface",null,null],[3,"MTB","","Cortex-M0+ Micro-Trace Buffer",null,null],[3,"NVMCTRL","","Non-Volatile Memory Controller",null,null],[3,"PAC0","","Peripheral Access Controller 0",null,null],[3,"PAC1","","Peripheral Access Controller 1",null,null],[3,"PAC2","","Peripheral Access Controller 2",null,null],[3,"PM","","Power Manager",null,null],[3,"PORT","","Port Module",null,null],[3,"PORT_IOBUS","","Port Module (IOBUS)",null,null],[3,"RTC","","Real-Time Counter",null,null],[3,"SERCOM0","","Serial Communication Interface 0",null,null],[3,"SERCOM1","","Serial Communication Interface 1",null,null],[3,"SERCOM2","","Serial Communication Interface 2",null,null],[3,"SERCOM3","","Serial Communication Interface 3",null,null],[3,"SERCOM4","","Serial Communication Interface 4",null,null],[3,"SERCOM5","","Serial Communication Interface 5",null,null],[3,"SYSCTRL","","System Control",null,null],[3,"TC3","","Basic Timer Counter 3",null,null],[3,"TC4","","Basic Timer Counter 4",null,null],[3,"TC5","","Basic Timer Counter 5",null,null],[3,"TCC0","","Timer Counter Control 0",null,null],[3,"TCC1","","Timer Counter Control 1",null,null],[3,"TCC2","","Timer Counter Control 2",null,null],[3,"USB","","Universal Serial Bus",null,null],[3,"WDT","","Watchdog Timer",null,null],[3,"Peripherals","","All the peripherals",null,null],[12,"AC","","AC",1,null],[12,"ADC","","ADC",1,null],[12,"DAC","","DAC",1,null],[12,"DMAC","","DMAC",1,null],[12,"DSU","","DSU",1,null],[12,"EIC","","EIC",1,null],[12,"EVSYS","","EVSYS",1,null],[12,"GCLK","","GCLK",1,null],[12,"HMATRIX","","HMATRIX",1,null],[12,"I2S","","I2S",1,null],[12,"MTB","","MTB",1,null],[12,"NVMCTRL","","NVMCTRL",1,null],[12,"PAC0","","PAC0",1,null],[12,"PAC1","","PAC1",1,null],[12,"PAC2","","PAC2",1,null],[12,"PM","","PM",1,null],[12,"PORT","","PORT",1,null],[12,"PORT_IOBUS","","PORT_IOBUS",1,null],[12,"RTC","","RTC",1,null],[12,"SERCOM0","","SERCOM0",1,null],[12,"SERCOM1","","SERCOM1",1,null],[12,"SERCOM2","","SERCOM2",1,null],[12,"SERCOM3","","SERCOM3",1,null],[12,"SERCOM4","","SERCOM4",1,null],[12,"SERCOM5","","SERCOM5",1,null],[12,"SYSCTRL","","SYSCTRL",1,null],[12,"TC3","","TC3",1,null],[12,"TC4","","TC4",1,null],[12,"TC5","","TC5",1,null],[12,"TCC0","","TCC0",1,null],[12,"TCC1","","TCC1",1,null],[12,"TCC2","","TCC2",1,null],[12,"USB","","USB",1,null],[12,"WDT","","WDT",1,null],[4,"Interrupt","","Enumeration of all the interrupts",null,null],[13,"PM","","0 - PM",2,null],[13,"SYSCTRL","","1 - SYSCTRL",2,null],[13,"WDT","","2 - WDT",2,null],[13,"RTC","","3 - RTC",2,null],[13,"EIC","","4 - EIC",2,null],[13,"NVMCTRL","","5 - NVMCTRL",2,null],[13,"DMAC","","6 - DMAC",2,null],[13,"USB","","7 - USB",2,null],[13,"EVSYS","","8 - EVSYS",2,null],[13,"SERCOM0","","9 - SERCOM0",2,null],[13,"SERCOM1","","10 - SERCOM1",2,null],[13,"SERCOM2","","11 - SERCOM2",2,null],[13,"SERCOM3","","12 - SERCOM3",2,null],[13,"SERCOM4","","13 - SERCOM4",2,null],[13,"SERCOM5","","14 - SERCOM5",2,null],[13,"TCC0","","15 - TCC0",2,null],[13,"TCC1","","16 - TCC1",2,null],[13,"TCC2","","17 - TCC2",2,null],[13,"TC3","","18 - TC3",2,null],[13,"TC4","","19 - TC4",2,null],[13,"TC5","","20 - TC5",2,null],[13,"ADC","","23 - ADC",2,null],[13,"AC","","24 - AC",2,null],[13,"DAC","","25 - DAC",2,null],[13,"I2S","","27 - I2S",2,null],[0,"generic","","Common register and bit access and modify traits",null,null],[3,"Reg","atsamd21g::generic","This structure provides volatile access to registers.",null,null],[3,"R","","Register/field reader.",null,null],[3,"W","","Register writer.",null,null],[4,"Variant","","Used if enumerated values cover not the whole range.",null,null],[13,"Val","","Expected variant.",3,null],[13,"Res","","Raw bits.",3,null],[8,"Readable","","Trait implemented by readable registers to enable the…",null,null],[8,"Writable","","Trait implemented by writeable registers.",null,null],[8,"ResetValue","","Reset value of the register.",null,null],[16,"Type","","Raw register type (`u8`, `u16`, `u32`, ...).",4,null],[10,"reset_value","","Reset value of the register.",4,[[]]],[11,"as_ptr","","Returns the underlying memory address of register.",5,[[]]],[11,"read","","Reads the contents of a `Readable` register.",5,[[],["r",3]]],[11,"reset","","Writes the reset value to `Writable` register.",5,[[]]],[11,"write","","Writes bits to a `Writable` register.",5,[[]]],[11,"write_with_zero","","Writes 0 to a `Writable` register.",5,[[]]],[11,"modify","","Modifies the contents of the register by reading and then…",5,[[]]],[11,"bits","","Reads raw bits from register/field.",6,[[]]],[11,"bit","","Value of the field as raw bits.",6,[[]]],[11,"bit_is_clear","","Returns `true` if the bit is clear (0).",6,[[]]],[11,"bit_is_set","","Returns `true` if the bit is set (1).",6,[[]]],[11,"bits","","Writes raw bits to the register.",7,[[]]],[0,"ac","atsamd21g","Analog Comparators",null,null],[3,"RegisterBlock","atsamd21g::ac","Register block",null,null],[12,"ctrla","","0x00 - Control A",8,null],[12,"ctrlb","","0x01 - Control B",8,null],[12,"evctrl","","0x02 - Event Control",8,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",8,null],[12,"intenset","","0x05 - Interrupt Enable Set",8,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",8,null],[12,"statusa","","0x08 - Status A",8,null],[12,"statusb","","0x09 - Status B",8,null],[12,"statusc","","0x0a - Status C",8,null],[12,"winctrl","","0x0c - Window Control",8,null],[12,"compctrl","","0x10 - Comparator Control n",8,null],[12,"scaler","","0x20 - Scaler n",8,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd21g::ac::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"LPMUX_W","","Write proxy for field `LPMUX`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"LPMUX_R","","Reader of field `LPMUX`",null,null],[11,"set_bit","","Sets the field bit",9,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",9,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",9,[[],["w",6]]],[11,"set_bit","","Sets the field bit",10,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",10,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",10,[[],["w",6]]],[11,"set_bit","","Sets the field bit",11,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",11,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",11,[[],["w",6]]],[11,"set_bit","","Sets the field bit",12,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",12,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",12,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"lpmux","","Bit 7 - Low-Power Mux",6,[[],["lpmux_r",6]]],[11,"enable","atsamd21g::ac::ctrla","Bit 1 - Enable",13,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",13,[[],["runstdby_r",6]]],[11,"lpmux","","Bit 7 - Low-Power Mux",13,[[],["lpmux_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"lpmux","","Bit 7 - Low-Power Mux",7,[[],["lpmux_w",3]]],[11,"swrst","atsamd21g::ac::ctrla","Bit 0 - Software Reset",14,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",14,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",14,[[],["runstdby_w",3]]],[11,"lpmux","","Bit 7 - Low-Power Mux",14,[[],["lpmux_w",3]]],[0,"ctrlb","atsamd21g::ac","Control B",null,null],[3,"START0_W","atsamd21g::ac::ctrlb","Write proxy for field `START0`",null,null],[3,"START1_W","","Write proxy for field `START1`",null,null],[6,"W","","Writer for register CTRLB",null,null],[11,"set_bit","","Sets the field bit",15,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",15,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",15,[[],["w",6]]],[11,"set_bit","","Sets the field bit",16,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",16,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",16,[[],["w",6]]],[11,"start0","atsamd21g::generic","Bit 0 - Comparator 0 Start Comparison",7,[[],["start0_w",3]]],[11,"start1","","Bit 1 - Comparator 1 Start Comparison",7,[[],["start1_w",3]]],[11,"start0","atsamd21g::ac::ctrlb","Bit 0 - Comparator 0 Start Comparison",17,[[],["start0_w",3]]],[11,"start1","","Bit 1 - Comparator 1 Start Comparison",17,[[],["start1_w",3]]],[0,"evctrl","atsamd21g::ac","Event Control",null,null],[3,"COMPEO0_W","atsamd21g::ac::evctrl","Write proxy for field `COMPEO0`",null,null],[3,"COMPEO1_W","","Write proxy for field `COMPEO1`",null,null],[3,"WINEO0_W","","Write proxy for field `WINEO0`",null,null],[3,"COMPEI0_W","","Write proxy for field `COMPEI0`",null,null],[3,"COMPEI1_W","","Write proxy for field `COMPEI1`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"COMPEO0_R","","Reader of field `COMPEO0`",null,null],[6,"COMPEO1_R","","Reader of field `COMPEO1`",null,null],[6,"WINEO0_R","","Reader of field `WINEO0`",null,null],[6,"COMPEI0_R","","Reader of field `COMPEI0`",null,null],[6,"COMPEI1_R","","Reader of field `COMPEI1`",null,null],[11,"set_bit","","Sets the field bit",18,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",18,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",18,[[],["w",6]]],[11,"set_bit","","Sets the field bit",19,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",19,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",19,[[],["w",6]]],[11,"set_bit","","Sets the field bit",20,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",20,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",20,[[],["w",6]]],[11,"set_bit","","Sets the field bit",21,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",21,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",21,[[],["w",6]]],[11,"set_bit","","Sets the field bit",22,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",22,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",22,[[],["w",6]]],[11,"compeo0","atsamd21g::generic","Bit 0 - Comparator 0 Event Output Enable",6,[[],["compeo0_r",6]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",6,[[],["compeo1_r",6]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",6,[[],["wineo0_r",6]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",6,[[],["compei0_r",6]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",6,[[],["compei1_r",6]]],[11,"compeo0","atsamd21g::ac::evctrl","Bit 0 - Comparator 0 Event Output Enable",23,[[],["compeo0_r",6]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",23,[[],["compeo1_r",6]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",23,[[],["wineo0_r",6]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",23,[[],["compei0_r",6]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",23,[[],["compei1_r",6]]],[11,"compeo0","atsamd21g::generic","Bit 0 - Comparator 0 Event Output Enable",7,[[],["compeo0_w",3]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",7,[[],["compeo1_w",3]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",7,[[],["wineo0_w",3]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",7,[[],["compei0_w",3]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",7,[[],["compei1_w",3]]],[11,"compeo0","atsamd21g::ac::evctrl","Bit 0 - Comparator 0 Event Output Enable",24,[[],["compeo0_w",3]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",24,[[],["compeo1_w",3]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",24,[[],["wineo0_w",3]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",24,[[],["compei0_w",3]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",24,[[],["compei1_w",3]]],[0,"intenclr","atsamd21g::ac","Interrupt Enable Clear",null,null],[3,"COMP0_W","atsamd21g::ac::intenclr","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",25,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",25,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",25,[[],["w",6]]],[11,"set_bit","","Sets the field bit",26,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",26,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",26,[[],["w",6]]],[11,"set_bit","","Sets the field bit",27,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",27,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",27,[[],["w",6]]],[11,"comp0","atsamd21g::generic","Bit 0 - Comparator 0 Interrupt Enable",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",6,[[],["win0_r",6]]],[11,"comp0","atsamd21g::ac::intenclr","Bit 0 - Comparator 0 Interrupt Enable",28,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",28,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",28,[[],["win0_r",6]]],[11,"comp0","atsamd21g::generic","Bit 0 - Comparator 0 Interrupt Enable",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",7,[[],["win0_w",3]]],[11,"comp0","atsamd21g::ac::intenclr","Bit 0 - Comparator 0 Interrupt Enable",29,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",29,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",29,[[],["win0_w",3]]],[0,"intenset","atsamd21g::ac","Interrupt Enable Set",null,null],[3,"COMP0_W","atsamd21g::ac::intenset","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",30,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",30,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",30,[[],["w",6]]],[11,"set_bit","","Sets the field bit",31,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",31,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",31,[[],["w",6]]],[11,"set_bit","","Sets the field bit",32,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",32,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",32,[[],["w",6]]],[11,"comp0","atsamd21g::generic","Bit 0 - Comparator 0 Interrupt Enable",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",6,[[],["win0_r",6]]],[11,"comp0","atsamd21g::ac::intenset","Bit 0 - Comparator 0 Interrupt Enable",33,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",33,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",33,[[],["win0_r",6]]],[11,"comp0","atsamd21g::generic","Bit 0 - Comparator 0 Interrupt Enable",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",7,[[],["win0_w",3]]],[11,"comp0","atsamd21g::ac::intenset","Bit 0 - Comparator 0 Interrupt Enable",34,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",34,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",34,[[],["win0_w",3]]],[0,"intflag","atsamd21g::ac","Interrupt Flag Status and Clear",null,null],[3,"COMP0_W","atsamd21g::ac::intflag","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",35,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",35,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",35,[[],["w",6]]],[11,"set_bit","","Sets the field bit",36,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",36,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",36,[[],["w",6]]],[11,"set_bit","","Sets the field bit",37,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",37,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",37,[[],["w",6]]],[11,"comp0","atsamd21g::generic","Bit 0 - Comparator 0",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0",6,[[],["win0_r",6]]],[11,"comp0","atsamd21g::ac::intflag","Bit 0 - Comparator 0",38,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1",38,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0",38,[[],["win0_r",6]]],[11,"comp0","atsamd21g::generic","Bit 0 - Comparator 0",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0",7,[[],["win0_w",3]]],[11,"comp0","atsamd21g::ac::intflag","Bit 0 - Comparator 0",39,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1",39,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0",39,[[],["win0_w",3]]],[0,"statusa","atsamd21g::ac","Status A",null,null],[4,"WSTATE0_A","atsamd21g::ac::statusa","Window 0 Current State",null,null],[13,"ABOVE","","0: Signal is above window",40,null],[13,"INSIDE","","1: Signal is inside window",40,null],[13,"BELOW","","2: Signal is below window",40,null],[6,"R","","Reader of register STATUSA",null,null],[6,"STATE0_R","","Reader of field `STATE0`",null,null],[6,"STATE1_R","","Reader of field `STATE1`",null,null],[6,"WSTATE0_R","","Reader of field `WSTATE0`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["wstate0_a",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"variant","atsamd21g::ac::statusa","Get enumerated values variant",41,[[],[["variant",4],["wstate0_a",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",41,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",41,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",41,[[]]],[11,"state0","atsamd21g::generic","Bit 0 - Comparator 0 Current State",6,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",6,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",6,[[],["wstate0_r",6]]],[11,"state0","atsamd21g::ac::statusa","Bit 0 - Comparator 0 Current State",42,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",42,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",42,[[],["wstate0_r",6]]],[0,"statusb","atsamd21g::ac","Status B",null,null],[6,"R","atsamd21g::ac::statusb","Reader of register STATUSB",null,null],[6,"READY0_R","","Reader of field `READY0`",null,null],[6,"READY1_R","","Reader of field `READY1`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"ready0","atsamd21g::generic","Bit 0 - Comparator 0 Ready",6,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - Comparator 1 Ready",6,[[],["ready1_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"ready0","atsamd21g::ac::statusb","Bit 0 - Comparator 0 Ready",43,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - Comparator 1 Ready",43,[[],["ready1_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",43,[[],["syncbusy_r",6]]],[0,"statusc","atsamd21g::ac","Status C",null,null],[4,"WSTATE0_A","atsamd21g::ac::statusc","Window 0 Current State",null,null],[13,"ABOVE","","0: Signal is above window",44,null],[13,"INSIDE","","1: Signal is inside window",44,null],[13,"BELOW","","2: Signal is below window",44,null],[6,"R","","Reader of register STATUSC",null,null],[6,"STATE0_R","","Reader of field `STATE0`",null,null],[6,"STATE1_R","","Reader of field `STATE1`",null,null],[6,"WSTATE0_R","","Reader of field `WSTATE0`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["wstate0_a",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"variant","atsamd21g::ac::statusc","Get enumerated values variant",45,[[],[["variant",4],["wstate0_a",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",45,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",45,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",45,[[]]],[11,"state0","atsamd21g::generic","Bit 0 - Comparator 0 Current State",6,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",6,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",6,[[],["wstate0_r",6]]],[11,"state0","atsamd21g::ac::statusc","Bit 0 - Comparator 0 Current State",46,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",46,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",46,[[],["wstate0_r",6]]],[0,"winctrl","atsamd21g::ac","Window Control",null,null],[3,"WEN0_W","atsamd21g::ac::winctrl","Write proxy for field `WEN0`",null,null],[3,"WINTSEL0_W","","Write proxy for field `WINTSEL0`",null,null],[4,"WINTSEL0_A","","Window 0 Interrupt Selection",null,null],[13,"ABOVE","","0: Interrupt on signal above window",47,null],[13,"INSIDE","","1: Interrupt on signal inside window",47,null],[13,"BELOW","","2: Interrupt on signal below window",47,null],[13,"OUTSIDE","","3: Interrupt on signal outside window",47,null],[6,"R","","Reader of register WINCTRL",null,null],[6,"W","","Writer for register WINCTRL",null,null],[6,"WEN0_R","","Reader of field `WEN0`",null,null],[6,"WINTSEL0_R","","Reader of field `WINTSEL0`",null,null],[11,"set_bit","","Sets the field bit",48,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",48,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",48,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["wintsel0_a",4]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"is_outside","","Checks if the value of the field is `OUTSIDE`",6,[[]]],[11,"variant","atsamd21g::ac::winctrl","Get enumerated values variant",49,[[],["wintsel0_a",4]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",49,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",49,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",49,[[]]],[11,"is_outside","","Checks if the value of the field is `OUTSIDE`",49,[[]]],[11,"variant","","Writes `variant` to the field",50,[[["wintsel0_a",4]],["w",6]]],[11,"above","","Interrupt on signal above window",50,[[],["w",6]]],[11,"inside","","Interrupt on signal inside window",50,[[],["w",6]]],[11,"below","","Interrupt on signal below window",50,[[],["w",6]]],[11,"outside","","Interrupt on signal outside window",50,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",50,[[],["w",6]]],[11,"wen0","atsamd21g::generic","Bit 0 - Window 0 Mode Enable",6,[[],["wen0_r",6]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",6,[[],["wintsel0_r",6]]],[11,"wen0","atsamd21g::ac::winctrl","Bit 0 - Window 0 Mode Enable",51,[[],["wen0_r",6]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",51,[[],["wintsel0_r",6]]],[11,"wen0","atsamd21g::generic","Bit 0 - Window 0 Mode Enable",7,[[],["wen0_w",3]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",7,[[],["wintsel0_w",3]]],[11,"wen0","atsamd21g::ac::winctrl","Bit 0 - Window 0 Mode Enable",52,[[],["wen0_w",3]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",52,[[],["wintsel0_w",3]]],[0,"compctrl","atsamd21g::ac","Comparator Control n",null,null],[3,"ENABLE_W","atsamd21g::ac::compctrl","Write proxy for field `ENABLE`",null,null],[3,"SINGLE_W","","Write proxy for field `SINGLE`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"INTSEL_W","","Write proxy for field `INTSEL`",null,null],[3,"MUXNEG_W","","Write proxy for field `MUXNEG`",null,null],[3,"MUXPOS_W","","Write proxy for field `MUXPOS`",null,null],[3,"SWAP_W","","Write proxy for field `SWAP`",null,null],[3,"OUT_W","","Write proxy for field `OUT`",null,null],[3,"HYST_W","","Write proxy for field `HYST`",null,null],[3,"FLEN_W","","Write proxy for field `FLEN`",null,null],[4,"SPEED_A","","Speed Selection",null,null],[13,"LOW","","0: Low speed",53,null],[13,"HIGH","","1: High speed",53,null],[4,"INTSEL_A","","Interrupt Selection",null,null],[13,"TOGGLE","","0: Interrupt on comparator output toggle",54,null],[13,"RISING","","1: Interrupt on comparator output rising",54,null],[13,"FALLING","","2: Interrupt on comparator output falling",54,null],[13,"EOC","","3: Interrupt on end of comparison (single-shot mode only)",54,null],[4,"MUXNEG_A","","Negative Input Mux Selection",null,null],[13,"PIN0","","0: I/O pin 0",55,null],[13,"PIN1","","1: I/O pin 1",55,null],[13,"PIN2","","2: I/O pin 2",55,null],[13,"PIN3","","3: I/O pin 3",55,null],[13,"GND","","4: Ground",55,null],[13,"VSCALE","","5: VDD scaler",55,null],[13,"BANDGAP","","6: Internal bandgap voltage",55,null],[13,"DAC","","7: DAC output",55,null],[4,"MUXPOS_A","","Positive Input Mux Selection",null,null],[13,"PIN0","","0: I/O pin 0",56,null],[13,"PIN1","","1: I/O pin 1",56,null],[13,"PIN2","","2: I/O pin 2",56,null],[13,"PIN3","","3: I/O pin 3",56,null],[4,"OUT_A","","Output",null,null],[13,"OFF","","0: The output of COMPn is not routed to the COMPn I/O port",57,null],[13,"ASYNC","","1: The asynchronous output of COMPn is routed to the COMPn…",57,null],[13,"SYNC","","2: The synchronous output (including filtering) of COMPn…",57,null],[4,"FLEN_A","","Filter Length",null,null],[13,"OFF","","0: No filtering",58,null],[13,"MAJ3","","1: 3-bit majority function (2 of 3)",58,null],[13,"MAJ5","","2: 5-bit majority function (3 of 5)",58,null],[6,"R","","Reader of register COMPCTRL%s",null,null],[6,"W","","Writer for register COMPCTRL%s",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SINGLE_R","","Reader of field `SINGLE`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"INTSEL_R","","Reader of field `INTSEL`",null,null],[6,"MUXNEG_R","","Reader of field `MUXNEG`",null,null],[6,"MUXPOS_R","","Reader of field `MUXPOS`",null,null],[6,"SWAP_R","","Reader of field `SWAP`",null,null],[6,"OUT_R","","Reader of field `OUT`",null,null],[6,"HYST_R","","Reader of field `HYST`",null,null],[6,"FLEN_R","","Reader of field `FLEN`",null,null],[11,"set_bit","","Sets the field bit",59,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",59,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",59,[[],["w",6]]],[11,"set_bit","","Sets the field bit",60,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",60,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",60,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["speed_a",4]]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::ac::compctrl","Get enumerated values variant",61,[[],[["variant",4],["speed_a",4]]]],[11,"is_low","","Checks if the value of the field is `LOW`",61,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",61,[[]]],[11,"variant","","Writes `variant` to the field",62,[[["speed_a",4]],["w",6]]],[11,"low","","Low speed",62,[[],["w",6]]],[11,"high","","High speed",62,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",62,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["intsel_a",4]]],[11,"is_toggle","","Checks if the value of the field is `TOGGLE`",6,[[]]],[11,"is_rising","","Checks if the value of the field is `RISING`",6,[[]]],[11,"is_falling","","Checks if the value of the field is `FALLING`",6,[[]]],[11,"is_eoc","","Checks if the value of the field is `EOC`",6,[[]]],[11,"variant","atsamd21g::ac::compctrl","Get enumerated values variant",63,[[],["intsel_a",4]]],[11,"is_toggle","","Checks if the value of the field is `TOGGLE`",63,[[]]],[11,"is_rising","","Checks if the value of the field is `RISING`",63,[[]]],[11,"is_falling","","Checks if the value of the field is `FALLING`",63,[[]]],[11,"is_eoc","","Checks if the value of the field is `EOC`",63,[[]]],[11,"variant","","Writes `variant` to the field",64,[[["intsel_a",4]],["w",6]]],[11,"toggle","","Interrupt on comparator output toggle",64,[[],["w",6]]],[11,"rising","","Interrupt on comparator output rising",64,[[],["w",6]]],[11,"falling","","Interrupt on comparator output falling",64,[[],["w",6]]],[11,"eoc","","Interrupt on end of comparison (single-shot mode only)",64,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",64,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["muxneg_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",6,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",6,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"variant","atsamd21g::ac::compctrl","Get enumerated values variant",65,[[],["muxneg_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",65,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",65,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",65,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",65,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",65,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",65,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",65,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",65,[[]]],[11,"variant","","Writes `variant` to the field",66,[[["muxneg_a",4]],["w",6]]],[11,"pin0","","I/O pin 0",66,[[],["w",6]]],[11,"pin1","","I/O pin 1",66,[[],["w",6]]],[11,"pin2","","I/O pin 2",66,[[],["w",6]]],[11,"pin3","","I/O pin 3",66,[[],["w",6]]],[11,"gnd","","Ground",66,[[],["w",6]]],[11,"vscale","","VDD scaler",66,[[],["w",6]]],[11,"bandgap","","Internal bandgap voltage",66,[[],["w",6]]],[11,"dac","","DAC output",66,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",66,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["muxpos_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"variant","atsamd21g::ac::compctrl","Get enumerated values variant",67,[[],["muxpos_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",67,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",67,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",67,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",67,[[]]],[11,"variant","","Writes `variant` to the field",68,[[["muxpos_a",4]],["w",6]]],[11,"pin0","","I/O pin 0",68,[[],["w",6]]],[11,"pin1","","I/O pin 1",68,[[],["w",6]]],[11,"pin2","","I/O pin 2",68,[[],["w",6]]],[11,"pin3","","I/O pin 3",68,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",68,[[],["w",6]]],[11,"set_bit","","Sets the field bit",69,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",69,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",69,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["out_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"variant","atsamd21g::ac::compctrl","Get enumerated values variant",70,[[],[["variant",4],["out_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",70,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",70,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",70,[[]]],[11,"variant","","Writes `variant` to the field",71,[[["out_a",4]],["w",6]]],[11,"off","","The output of COMPn is not routed to the COMPn I/O port",71,[[],["w",6]]],[11,"async_","","The asynchronous output of COMPn is routed to the COMPn…",71,[[],["w",6]]],[11,"sync","","The synchronous output (including filtering) of COMPn is…",71,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",71,[[],["w",6]]],[11,"set_bit","","Sets the field bit",72,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",72,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",72,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["flen_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_maj3","","Checks if the value of the field is `MAJ3`",6,[[]]],[11,"is_maj5","","Checks if the value of the field is `MAJ5`",6,[[]]],[11,"variant","atsamd21g::ac::compctrl","Get enumerated values variant",73,[[],[["variant",4],["flen_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",73,[[]]],[11,"is_maj3","","Checks if the value of the field is `MAJ3`",73,[[]]],[11,"is_maj5","","Checks if the value of the field is `MAJ5`",73,[[]]],[11,"variant","","Writes `variant` to the field",74,[[["flen_a",4]],["w",6]]],[11,"off","","No filtering",74,[[],["w",6]]],[11,"maj3","","3-bit majority function (2 of 3)",74,[[],["w",6]]],[11,"maj5","","5-bit majority function (3 of 5)",74,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",74,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 0 - Enable",6,[[],["enable_r",6]]],[11,"single","","Bit 1 - Single-Shot Mode",6,[[],["single_r",6]]],[11,"speed","","Bits 2:3 - Speed Selection",6,[[],["speed_r",6]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",6,[[],["intsel_r",6]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",6,[[],["muxneg_r",6]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",6,[[],["muxpos_r",6]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",6,[[],["swap_r",6]]],[11,"out","","Bits 16:17 - Output",6,[[],["out_r",6]]],[11,"hyst","","Bit 19 - Hysteresis Enable",6,[[],["hyst_r",6]]],[11,"flen","","Bits 24:26 - Filter Length",6,[[],["flen_r",6]]],[11,"enable","atsamd21g::ac::compctrl","Bit 0 - Enable",75,[[],["enable_r",6]]],[11,"single","","Bit 1 - Single-Shot Mode",75,[[],["single_r",6]]],[11,"speed","","Bits 2:3 - Speed Selection",75,[[],["speed_r",6]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",75,[[],["intsel_r",6]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",75,[[],["muxneg_r",6]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",75,[[],["muxpos_r",6]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",75,[[],["swap_r",6]]],[11,"out","","Bits 16:17 - Output",75,[[],["out_r",6]]],[11,"hyst","","Bit 19 - Hysteresis Enable",75,[[],["hyst_r",6]]],[11,"flen","","Bits 24:26 - Filter Length",75,[[],["flen_r",6]]],[11,"enable","atsamd21g::generic","Bit 0 - Enable",7,[[],["enable_w",3]]],[11,"single","","Bit 1 - Single-Shot Mode",7,[[],["single_w",3]]],[11,"speed","","Bits 2:3 - Speed Selection",7,[[],["speed_w",3]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",7,[[],["intsel_w",3]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",7,[[],["muxneg_w",3]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",7,[[],["muxpos_w",3]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",7,[[],["swap_w",3]]],[11,"out","","Bits 16:17 - Output",7,[[],["out_w",3]]],[11,"hyst","","Bit 19 - Hysteresis Enable",7,[[],["hyst_w",3]]],[11,"flen","","Bits 24:26 - Filter Length",7,[[],["flen_w",3]]],[11,"enable","atsamd21g::ac::compctrl","Bit 0 - Enable",76,[[],["enable_w",3]]],[11,"single","","Bit 1 - Single-Shot Mode",76,[[],["single_w",3]]],[11,"speed","","Bits 2:3 - Speed Selection",76,[[],["speed_w",3]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",76,[[],["intsel_w",3]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",76,[[],["muxneg_w",3]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",76,[[],["muxpos_w",3]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",76,[[],["swap_w",3]]],[11,"out","","Bits 16:17 - Output",76,[[],["out_w",3]]],[11,"hyst","","Bit 19 - Hysteresis Enable",76,[[],["hyst_w",3]]],[11,"flen","","Bits 24:26 - Filter Length",76,[[],["flen_w",3]]],[0,"scaler","atsamd21g::ac","Scaler n",null,null],[3,"VALUE_W","atsamd21g::ac::scaler","Write proxy for field `VALUE`",null,null],[6,"R","","Reader of register SCALER%s",null,null],[6,"W","","Writer for register SCALER%s",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[11,"bits","","Writes raw bits to the field",77,[[],["w",6]]],[11,"value","atsamd21g::generic","Bits 0:5 - Scaler Value",6,[[],["value_r",6]]],[11,"value","atsamd21g::ac::scaler","Bits 0:5 - Scaler Value",78,[[],["value_r",6]]],[11,"value","atsamd21g::generic","Bits 0:5 - Scaler Value",7,[[],["value_w",3]]],[11,"value","atsamd21g::ac::scaler","Bits 0:5 - Scaler Value",79,[[],["value_w",3]]],[6,"CTRLA","atsamd21g::ac","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUSA","","Status A",null,null],[6,"STATUSB","","Status B",null,null],[6,"STATUSC","","Status C",null,null],[6,"WINCTRL","","Window Control",null,null],[6,"COMPCTRL","","Comparator Control n",null,null],[6,"SCALER","","Scaler n",null,null],[0,"adc","atsamd21g","Analog Digital Converter",null,null],[3,"RegisterBlock","atsamd21g::adc","Register block",null,null],[12,"ctrla","","0x00 - Control A",80,null],[12,"refctrl","","0x01 - Reference Control",80,null],[12,"avgctrl","","0x02 - Average Control",80,null],[12,"sampctrl","","0x03 - Sampling Time Control",80,null],[12,"ctrlb","","0x04 - Control B",80,null],[12,"winctrl","","0x08 - Window Monitor Control",80,null],[12,"swtrig","","0x0c - Software Trigger",80,null],[12,"inputctrl","","0x10 - Input Control",80,null],[12,"evctrl","","0x14 - Event Control",80,null],[12,"intenclr","","0x16 - Interrupt Enable Clear",80,null],[12,"intenset","","0x17 - Interrupt Enable Set",80,null],[12,"intflag","","0x18 - Interrupt Flag Status and Clear",80,null],[12,"status","","0x19 - Status",80,null],[12,"result","","0x1a - Result",80,null],[12,"winlt","","0x1c - Window Monitor Lower Threshold",80,null],[12,"winut","","0x20 - Window Monitor Upper Threshold",80,null],[12,"gaincorr","","0x24 - Gain Correction",80,null],[12,"offsetcorr","","0x26 - Offset Correction",80,null],[12,"calib","","0x28 - Calibration",80,null],[12,"dbgctrl","","0x2a - Debug Control",80,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd21g::adc::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"set_bit","","Sets the field bit",81,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",81,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",81,[[],["w",6]]],[11,"set_bit","","Sets the field bit",82,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",82,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",82,[[],["w",6]]],[11,"set_bit","","Sets the field bit",83,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",83,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",83,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"swrst","atsamd21g::adc::ctrla","Bit 0 - Software Reset",84,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",84,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",84,[[],["runstdby_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"swrst","atsamd21g::adc::ctrla","Bit 0 - Software Reset",85,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",85,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",85,[[],["runstdby_w",3]]],[0,"refctrl","atsamd21g::adc","Reference Control",null,null],[3,"REFSEL_W","atsamd21g::adc::refctrl","Write proxy for field `REFSEL`",null,null],[3,"REFCOMP_W","","Write proxy for field `REFCOMP`",null,null],[4,"REFSEL_A","","Reference Selection",null,null],[13,"INT1V","","0: 1.0V voltage reference",86,null],[13,"INTVCC0","","1: 1/1.48 VDDANA",86,null],[13,"INTVCC1","","2: 1/2 VDDANA (only for VDDANA > 2.0V)",86,null],[13,"AREFA","","3: External reference",86,null],[13,"AREFB","","4: External reference",86,null],[6,"R","","Reader of register REFCTRL",null,null],[6,"W","","Writer for register REFCTRL",null,null],[6,"REFSEL_R","","Reader of field `REFSEL`",null,null],[6,"REFCOMP_R","","Reader of field `REFCOMP`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["refsel_a",4],["variant",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",6,[[]]],[11,"is_intvcc0","","Checks if the value of the field is `INTVCC0`",6,[[]]],[11,"is_intvcc1","","Checks if the value of the field is `INTVCC1`",6,[[]]],[11,"is_arefa","","Checks if the value of the field is `AREFA`",6,[[]]],[11,"is_arefb","","Checks if the value of the field is `AREFB`",6,[[]]],[11,"variant","atsamd21g::adc::refctrl","Get enumerated values variant",87,[[],[["refsel_a",4],["variant",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",87,[[]]],[11,"is_intvcc0","","Checks if the value of the field is `INTVCC0`",87,[[]]],[11,"is_intvcc1","","Checks if the value of the field is `INTVCC1`",87,[[]]],[11,"is_arefa","","Checks if the value of the field is `AREFA`",87,[[]]],[11,"is_arefb","","Checks if the value of the field is `AREFB`",87,[[]]],[11,"variant","","Writes `variant` to the field",88,[[["refsel_a",4]],["w",6]]],[11,"int1v","","1.0V voltage reference",88,[[],["w",6]]],[11,"intvcc0","","1/1.48 VDDANA",88,[[],["w",6]]],[11,"intvcc1","","1/2 VDDANA (only for VDDANA > 2.0V)",88,[[],["w",6]]],[11,"arefa","","External reference",88,[[],["w",6]]],[11,"arefb","","External reference",88,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",88,[[],["w",6]]],[11,"set_bit","","Sets the field bit",89,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",89,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",89,[[],["w",6]]],[11,"refsel","atsamd21g::generic","Bits 0:3 - Reference Selection",6,[[],["refsel_r",6]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",6,[[],["refcomp_r",6]]],[11,"refsel","atsamd21g::adc::refctrl","Bits 0:3 - Reference Selection",90,[[],["refsel_r",6]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",90,[[],["refcomp_r",6]]],[11,"refsel","atsamd21g::generic","Bits 0:3 - Reference Selection",7,[[],["refsel_w",3]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",7,[[],["refcomp_w",3]]],[11,"refsel","atsamd21g::adc::refctrl","Bits 0:3 - Reference Selection",91,[[],["refsel_w",3]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",91,[[],["refcomp_w",3]]],[0,"avgctrl","atsamd21g::adc","Average Control",null,null],[3,"SAMPLENUM_W","atsamd21g::adc::avgctrl","Write proxy for field `SAMPLENUM`",null,null],[3,"ADJRES_W","","Write proxy for field `ADJRES`",null,null],[4,"SAMPLENUM_A","","Number of Samples to be Collected",null,null],[13,"_1","","0: 1 sample",92,null],[13,"_2","","1: 2 samples",92,null],[13,"_4","","2: 4 samples",92,null],[13,"_8","","3: 8 samples",92,null],[13,"_16","","4: 16 samples",92,null],[13,"_32","","5: 32 samples",92,null],[13,"_64","","6: 64 samples",92,null],[13,"_128","","7: 128 samples",92,null],[13,"_256","","8: 256 samples",92,null],[13,"_512","","9: 512 samples",92,null],[13,"_1024","","10: 1024 samples",92,null],[6,"R","","Reader of register AVGCTRL",null,null],[6,"W","","Writer for register AVGCTRL",null,null],[6,"SAMPLENUM_R","","Reader of field `SAMPLENUM`",null,null],[6,"ADJRES_R","","Reader of field `ADJRES`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["samplenum_a",4]]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",6,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"variant","atsamd21g::adc::avgctrl","Get enumerated values variant",93,[[],[["variant",4],["samplenum_a",4]]]],[11,"is_1","","Checks if the value of the field is `_1`",93,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",93,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",93,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",93,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",93,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",93,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",93,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",93,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",93,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",93,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",93,[[]]],[11,"variant","","Writes `variant` to the field",94,[[["samplenum_a",4]],["w",6]]],[11,"_1","","1 sample",94,[[],["w",6]]],[11,"_2","","2 samples",94,[[],["w",6]]],[11,"_4","","4 samples",94,[[],["w",6]]],[11,"_8","","8 samples",94,[[],["w",6]]],[11,"_16","","16 samples",94,[[],["w",6]]],[11,"_32","","32 samples",94,[[],["w",6]]],[11,"_64","","64 samples",94,[[],["w",6]]],[11,"_128","","128 samples",94,[[],["w",6]]],[11,"_256","","256 samples",94,[[],["w",6]]],[11,"_512","","512 samples",94,[[],["w",6]]],[11,"_1024","","1024 samples",94,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",94,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",95,[[],["w",6]]],[11,"samplenum","atsamd21g::generic","Bits 0:3 - Number of Samples to be Collected",6,[[],["samplenum_r",6]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",6,[[],["adjres_r",6]]],[11,"samplenum","atsamd21g::adc::avgctrl","Bits 0:3 - Number of Samples to be Collected",96,[[],["samplenum_r",6]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",96,[[],["adjres_r",6]]],[11,"samplenum","atsamd21g::generic","Bits 0:3 - Number of Samples to be Collected",7,[[],["samplenum_w",3]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",7,[[],["adjres_w",3]]],[11,"samplenum","atsamd21g::adc::avgctrl","Bits 0:3 - Number of Samples to be Collected",97,[[],["samplenum_w",3]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",97,[[],["adjres_w",3]]],[0,"sampctrl","atsamd21g::adc","Sampling Time Control",null,null],[3,"SAMPLEN_W","atsamd21g::adc::sampctrl","Write proxy for field `SAMPLEN`",null,null],[6,"R","","Reader of register SAMPCTRL",null,null],[6,"W","","Writer for register SAMPCTRL",null,null],[6,"SAMPLEN_R","","Reader of field `SAMPLEN`",null,null],[11,"bits","","Writes raw bits to the field",98,[[],["w",6]]],[11,"samplen","atsamd21g::generic","Bits 0:5 - Sampling Time Length",6,[[],["samplen_r",6]]],[11,"samplen","atsamd21g::adc::sampctrl","Bits 0:5 - Sampling Time Length",99,[[],["samplen_r",6]]],[11,"samplen","atsamd21g::generic","Bits 0:5 - Sampling Time Length",7,[[],["samplen_w",3]]],[11,"samplen","atsamd21g::adc::sampctrl","Bits 0:5 - Sampling Time Length",100,[[],["samplen_w",3]]],[0,"ctrlb","atsamd21g::adc","Control B",null,null],[3,"DIFFMODE_W","atsamd21g::adc::ctrlb","Write proxy for field `DIFFMODE`",null,null],[3,"LEFTADJ_W","","Write proxy for field `LEFTADJ`",null,null],[3,"FREERUN_W","","Write proxy for field `FREERUN`",null,null],[3,"CORREN_W","","Write proxy for field `CORREN`",null,null],[3,"RESSEL_W","","Write proxy for field `RESSEL`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"RESSEL_A","","Conversion Result Resolution",null,null],[13,"_12BIT","","0: 12-bit result",101,null],[13,"_16BIT","","1: For averaging mode output",101,null],[13,"_10BIT","","2: 10-bit result",101,null],[13,"_8BIT","","3: 8-bit result",101,null],[4,"PRESCALER_A","","Prescaler Configuration",null,null],[13,"DIV4","","0: Peripheral clock divided by 4",102,null],[13,"DIV8","","1: Peripheral clock divided by 8",102,null],[13,"DIV16","","2: Peripheral clock divided by 16",102,null],[13,"DIV32","","3: Peripheral clock divided by 32",102,null],[13,"DIV64","","4: Peripheral clock divided by 64",102,null],[13,"DIV128","","5: Peripheral clock divided by 128",102,null],[13,"DIV256","","6: Peripheral clock divided by 256",102,null],[13,"DIV512","","7: Peripheral clock divided by 512",102,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"DIFFMODE_R","","Reader of field `DIFFMODE`",null,null],[6,"LEFTADJ_R","","Reader of field `LEFTADJ`",null,null],[6,"FREERUN_R","","Reader of field `FREERUN`",null,null],[6,"CORREN_R","","Reader of field `CORREN`",null,null],[6,"RESSEL_R","","Reader of field `RESSEL`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",105,[[],["w",6]]],[11,"set_bit","","Sets the field bit",106,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",106,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",106,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["ressel_a",4]]],[11,"is_12bit","","Checks if the value of the field is `_12BIT`",6,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",6,[[]]],[11,"is_10bit","","Checks if the value of the field is `_10BIT`",6,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",6,[[]]],[11,"variant","atsamd21g::adc::ctrlb","Get enumerated values variant",107,[[],["ressel_a",4]]],[11,"is_12bit","","Checks if the value of the field is `_12BIT`",107,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",107,[[]]],[11,"is_10bit","","Checks if the value of the field is `_10BIT`",107,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",107,[[]]],[11,"variant","","Writes `variant` to the field",108,[[["ressel_a",4]],["w",6]]],[11,"_12bit","","12-bit result",108,[[],["w",6]]],[11,"_16bit","","For averaging mode output",108,[[],["w",6]]],[11,"_10bit","","10-bit result",108,[[],["w",6]]],[11,"_8bit","","8-bit result",108,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",108,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"variant","atsamd21g::adc::ctrlb","Get enumerated values variant",109,[[],["prescaler_a",4]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",109,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",109,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",109,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",109,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",109,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",109,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",109,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",109,[[]]],[11,"variant","","Writes `variant` to the field",110,[[["prescaler_a",4]],["w",6]]],[11,"div4","","Peripheral clock divided by 4",110,[[],["w",6]]],[11,"div8","","Peripheral clock divided by 8",110,[[],["w",6]]],[11,"div16","","Peripheral clock divided by 16",110,[[],["w",6]]],[11,"div32","","Peripheral clock divided by 32",110,[[],["w",6]]],[11,"div64","","Peripheral clock divided by 64",110,[[],["w",6]]],[11,"div128","","Peripheral clock divided by 128",110,[[],["w",6]]],[11,"div256","","Peripheral clock divided by 256",110,[[],["w",6]]],[11,"div512","","Peripheral clock divided by 512",110,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",110,[[],["w",6]]],[11,"diffmode","atsamd21g::generic","Bit 0 - Differential Mode",6,[[],["diffmode_r",6]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",6,[[],["leftadj_r",6]]],[11,"freerun","","Bit 2 - Free Running Mode",6,[[],["freerun_r",6]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",6,[[],["corren_r",6]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",6,[[],["ressel_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",6,[[],["prescaler_r",6]]],[11,"diffmode","atsamd21g::adc::ctrlb","Bit 0 - Differential Mode",111,[[],["diffmode_r",6]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",111,[[],["leftadj_r",6]]],[11,"freerun","","Bit 2 - Free Running Mode",111,[[],["freerun_r",6]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",111,[[],["corren_r",6]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",111,[[],["ressel_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",111,[[],["prescaler_r",6]]],[11,"diffmode","atsamd21g::generic","Bit 0 - Differential Mode",7,[[],["diffmode_w",3]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",7,[[],["leftadj_w",3]]],[11,"freerun","","Bit 2 - Free Running Mode",7,[[],["freerun_w",3]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",7,[[],["corren_w",3]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",7,[[],["ressel_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",7,[[],["prescaler_w",3]]],[11,"diffmode","atsamd21g::adc::ctrlb","Bit 0 - Differential Mode",112,[[],["diffmode_w",3]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",112,[[],["leftadj_w",3]]],[11,"freerun","","Bit 2 - Free Running Mode",112,[[],["freerun_w",3]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",112,[[],["corren_w",3]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",112,[[],["ressel_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",112,[[],["prescaler_w",3]]],[0,"winctrl","atsamd21g::adc","Window Monitor Control",null,null],[3,"WINMODE_W","atsamd21g::adc::winctrl","Write proxy for field `WINMODE`",null,null],[4,"WINMODE_A","","Window Monitor Mode",null,null],[13,"DISABLE","","0: No window mode (default)",113,null],[13,"MODE1","","1: Mode 1: RESULT > WINLT",113,null],[13,"MODE2","","2: Mode 2: RESULT < WINUT",113,null],[13,"MODE3","","3: Mode 3: WINLT < RESULT < WINUT",113,null],[13,"MODE4","","4: Mode 4: !(WINLT < RESULT < WINUT)",113,null],[6,"R","","Reader of register WINCTRL",null,null],[6,"W","","Writer for register WINCTRL",null,null],[6,"WINMODE_R","","Reader of field `WINMODE`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["winmode_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_mode1","","Checks if the value of the field is `MODE1`",6,[[]]],[11,"is_mode2","","Checks if the value of the field is `MODE2`",6,[[]]],[11,"is_mode3","","Checks if the value of the field is `MODE3`",6,[[]]],[11,"is_mode4","","Checks if the value of the field is `MODE4`",6,[[]]],[11,"variant","atsamd21g::adc::winctrl","Get enumerated values variant",114,[[],[["variant",4],["winmode_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",114,[[]]],[11,"is_mode1","","Checks if the value of the field is `MODE1`",114,[[]]],[11,"is_mode2","","Checks if the value of the field is `MODE2`",114,[[]]],[11,"is_mode3","","Checks if the value of the field is `MODE3`",114,[[]]],[11,"is_mode4","","Checks if the value of the field is `MODE4`",114,[[]]],[11,"variant","","Writes `variant` to the field",115,[[["winmode_a",4]],["w",6]]],[11,"disable","","No window mode (default)",115,[[],["w",6]]],[11,"mode1","","Mode 1: RESULT > WINLT",115,[[],["w",6]]],[11,"mode2","","Mode 2: RESULT < WINUT",115,[[],["w",6]]],[11,"mode3","","Mode 3: WINLT < RESULT < WINUT",115,[[],["w",6]]],[11,"mode4","","Mode 4: !(WINLT < RESULT < WINUT)",115,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",115,[[],["w",6]]],[11,"winmode","atsamd21g::generic","Bits 0:2 - Window Monitor Mode",6,[[],["winmode_r",6]]],[11,"winmode","atsamd21g::adc::winctrl","Bits 0:2 - Window Monitor Mode",116,[[],["winmode_r",6]]],[11,"winmode","atsamd21g::generic","Bits 0:2 - Window Monitor Mode",7,[[],["winmode_w",3]]],[11,"winmode","atsamd21g::adc::winctrl","Bits 0:2 - Window Monitor Mode",117,[[],["winmode_w",3]]],[0,"swtrig","atsamd21g::adc","Software Trigger",null,null],[3,"FLUSH_W","atsamd21g::adc::swtrig","Write proxy for field `FLUSH`",null,null],[3,"START_W","","Write proxy for field `START`",null,null],[6,"R","","Reader of register SWTRIG",null,null],[6,"W","","Writer for register SWTRIG",null,null],[6,"FLUSH_R","","Reader of field `FLUSH`",null,null],[6,"START_R","","Reader of field `START`",null,null],[11,"set_bit","","Sets the field bit",118,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",118,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",118,[[],["w",6]]],[11,"set_bit","","Sets the field bit",119,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",119,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",119,[[],["w",6]]],[11,"flush","atsamd21g::generic","Bit 0 - ADC Conversion Flush",6,[[],["flush_r",6]]],[11,"start","","Bit 1 - ADC Start Conversion",6,[[],["start_r",6]]],[11,"flush","atsamd21g::adc::swtrig","Bit 0 - ADC Conversion Flush",120,[[],["flush_r",6]]],[11,"start","","Bit 1 - ADC Start Conversion",120,[[],["start_r",6]]],[11,"flush","atsamd21g::generic","Bit 0 - ADC Conversion Flush",7,[[],["flush_w",3]]],[11,"start","","Bit 1 - ADC Start Conversion",7,[[],["start_w",3]]],[11,"flush","atsamd21g::adc::swtrig","Bit 0 - ADC Conversion Flush",121,[[],["flush_w",3]]],[11,"start","","Bit 1 - ADC Start Conversion",121,[[],["start_w",3]]],[0,"inputctrl","atsamd21g::adc","Input Control",null,null],[3,"MUXPOS_W","atsamd21g::adc::inputctrl","Write proxy for field `MUXPOS`",null,null],[3,"MUXNEG_W","","Write proxy for field `MUXNEG`",null,null],[3,"INPUTSCAN_W","","Write proxy for field `INPUTSCAN`",null,null],[3,"INPUTOFFSET_W","","Write proxy for field `INPUTOFFSET`",null,null],[3,"GAIN_W","","Write proxy for field `GAIN`",null,null],[4,"MUXPOS_A","","Positive Mux Input Selection",null,null],[13,"PIN0","","0: ADC AIN0 Pin",122,null],[13,"PIN1","","1: ADC AIN1 Pin",122,null],[13,"PIN2","","2: ADC AIN2 Pin",122,null],[13,"PIN3","","3: ADC AIN3 Pin",122,null],[13,"PIN4","","4: ADC AIN4 Pin",122,null],[13,"PIN5","","5: ADC AIN5 Pin",122,null],[13,"PIN6","","6: ADC AIN6 Pin",122,null],[13,"PIN7","","7: ADC AIN7 Pin",122,null],[13,"PIN8","","8: ADC AIN8 Pin",122,null],[13,"PIN9","","9: ADC AIN9 Pin",122,null],[13,"PIN10","","10: ADC AIN10 Pin",122,null],[13,"PIN11","","11: ADC AIN11 Pin",122,null],[13,"PIN12","","12: ADC AIN12 Pin",122,null],[13,"PIN13","","13: ADC AIN13 Pin",122,null],[13,"PIN14","","14: ADC AIN14 Pin",122,null],[13,"PIN15","","15: ADC AIN15 Pin",122,null],[13,"PIN16","","16: ADC AIN16 Pin",122,null],[13,"PIN17","","17: ADC AIN17 Pin",122,null],[13,"PIN18","","18: ADC AIN18 Pin",122,null],[13,"PIN19","","19: ADC AIN19 Pin",122,null],[13,"TEMP","","24: Temperature Reference",122,null],[13,"BANDGAP","","25: Bandgap Voltage",122,null],[13,"SCALEDCOREVCC","","26: 1/4  Scaled Core Supply",122,null],[13,"SCALEDIOVCC","","27: 1/4  Scaled I/O Supply",122,null],[13,"DAC","","28: DAC Output",122,null],[4,"MUXNEG_A","","Negative Mux Input Selection",null,null],[13,"PIN0","","0: ADC AIN0 Pin",123,null],[13,"PIN1","","1: ADC AIN1 Pin",123,null],[13,"PIN2","","2: ADC AIN2 Pin",123,null],[13,"PIN3","","3: ADC AIN3 Pin",123,null],[13,"PIN4","","4: ADC AIN4 Pin",123,null],[13,"PIN5","","5: ADC AIN5 Pin",123,null],[13,"PIN6","","6: ADC AIN6 Pin",123,null],[13,"PIN7","","7: ADC AIN7 Pin",123,null],[13,"GND","","24: Internal Ground",123,null],[13,"IOGND","","25: I/O Ground",123,null],[4,"GAIN_A","","Gain Factor Selection",null,null],[13,"_1X","","0: 1x",124,null],[13,"_2X","","1: 2x",124,null],[13,"_4X","","2: 4x",124,null],[13,"_8X","","3: 8x",124,null],[13,"_16X","","4: 16x",124,null],[13,"DIV2","","15: 1/2x",124,null],[6,"R","","Reader of register INPUTCTRL",null,null],[6,"W","","Writer for register INPUTCTRL",null,null],[6,"MUXPOS_R","","Reader of field `MUXPOS`",null,null],[6,"MUXNEG_R","","Reader of field `MUXNEG`",null,null],[6,"INPUTSCAN_R","","Reader of field `INPUTSCAN`",null,null],[6,"INPUTOFFSET_R","","Reader of field `INPUTOFFSET`",null,null],[6,"GAIN_R","","Reader of field `GAIN`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["muxpos_a",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",6,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",6,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",6,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",6,[[]]],[11,"is_pin8","","Checks if the value of the field is `PIN8`",6,[[]]],[11,"is_pin9","","Checks if the value of the field is `PIN9`",6,[[]]],[11,"is_pin10","","Checks if the value of the field is `PIN10`",6,[[]]],[11,"is_pin11","","Checks if the value of the field is `PIN11`",6,[[]]],[11,"is_pin12","","Checks if the value of the field is `PIN12`",6,[[]]],[11,"is_pin13","","Checks if the value of the field is `PIN13`",6,[[]]],[11,"is_pin14","","Checks if the value of the field is `PIN14`",6,[[]]],[11,"is_pin15","","Checks if the value of the field is `PIN15`",6,[[]]],[11,"is_pin16","","Checks if the value of the field is `PIN16`",6,[[]]],[11,"is_pin17","","Checks if the value of the field is `PIN17`",6,[[]]],[11,"is_pin18","","Checks if the value of the field is `PIN18`",6,[[]]],[11,"is_pin19","","Checks if the value of the field is `PIN19`",6,[[]]],[11,"is_temp","","Checks if the value of the field is `TEMP`",6,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",6,[[]]],[11,"is_scaledcorevcc","","Checks if the value of the field is `SCALEDCOREVCC`",6,[[]]],[11,"is_scalediovcc","","Checks if the value of the field is `SCALEDIOVCC`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"variant","atsamd21g::adc::inputctrl","Get enumerated values variant",125,[[],[["variant",4],["muxpos_a",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",125,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",125,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",125,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",125,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",125,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",125,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",125,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",125,[[]]],[11,"is_pin8","","Checks if the value of the field is `PIN8`",125,[[]]],[11,"is_pin9","","Checks if the value of the field is `PIN9`",125,[[]]],[11,"is_pin10","","Checks if the value of the field is `PIN10`",125,[[]]],[11,"is_pin11","","Checks if the value of the field is `PIN11`",125,[[]]],[11,"is_pin12","","Checks if the value of the field is `PIN12`",125,[[]]],[11,"is_pin13","","Checks if the value of the field is `PIN13`",125,[[]]],[11,"is_pin14","","Checks if the value of the field is `PIN14`",125,[[]]],[11,"is_pin15","","Checks if the value of the field is `PIN15`",125,[[]]],[11,"is_pin16","","Checks if the value of the field is `PIN16`",125,[[]]],[11,"is_pin17","","Checks if the value of the field is `PIN17`",125,[[]]],[11,"is_pin18","","Checks if the value of the field is `PIN18`",125,[[]]],[11,"is_pin19","","Checks if the value of the field is `PIN19`",125,[[]]],[11,"is_temp","","Checks if the value of the field is `TEMP`",125,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",125,[[]]],[11,"is_scaledcorevcc","","Checks if the value of the field is `SCALEDCOREVCC`",125,[[]]],[11,"is_scalediovcc","","Checks if the value of the field is `SCALEDIOVCC`",125,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",125,[[]]],[11,"variant","","Writes `variant` to the field",126,[[["muxpos_a",4]],["w",6]]],[11,"pin0","","ADC AIN0 Pin",126,[[],["w",6]]],[11,"pin1","","ADC AIN1 Pin",126,[[],["w",6]]],[11,"pin2","","ADC AIN2 Pin",126,[[],["w",6]]],[11,"pin3","","ADC AIN3 Pin",126,[[],["w",6]]],[11,"pin4","","ADC AIN4 Pin",126,[[],["w",6]]],[11,"pin5","","ADC AIN5 Pin",126,[[],["w",6]]],[11,"pin6","","ADC AIN6 Pin",126,[[],["w",6]]],[11,"pin7","","ADC AIN7 Pin",126,[[],["w",6]]],[11,"pin8","","ADC AIN8 Pin",126,[[],["w",6]]],[11,"pin9","","ADC AIN9 Pin",126,[[],["w",6]]],[11,"pin10","","ADC AIN10 Pin",126,[[],["w",6]]],[11,"pin11","","ADC AIN11 Pin",126,[[],["w",6]]],[11,"pin12","","ADC AIN12 Pin",126,[[],["w",6]]],[11,"pin13","","ADC AIN13 Pin",126,[[],["w",6]]],[11,"pin14","","ADC AIN14 Pin",126,[[],["w",6]]],[11,"pin15","","ADC AIN15 Pin",126,[[],["w",6]]],[11,"pin16","","ADC AIN16 Pin",126,[[],["w",6]]],[11,"pin17","","ADC AIN17 Pin",126,[[],["w",6]]],[11,"pin18","","ADC AIN18 Pin",126,[[],["w",6]]],[11,"pin19","","ADC AIN19 Pin",126,[[],["w",6]]],[11,"temp","","Temperature Reference",126,[[],["w",6]]],[11,"bandgap","","Bandgap Voltage",126,[[],["w",6]]],[11,"scaledcorevcc","","1/4 Scaled Core Supply",126,[[],["w",6]]],[11,"scalediovcc","","1/4 Scaled I/O Supply",126,[[],["w",6]]],[11,"dac","","DAC Output",126,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",126,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["muxneg_a",4],["variant",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",6,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",6,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",6,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",6,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",6,[[]]],[11,"is_iognd","","Checks if the value of the field is `IOGND`",6,[[]]],[11,"variant","atsamd21g::adc::inputctrl","Get enumerated values variant",127,[[],[["muxneg_a",4],["variant",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",127,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",127,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",127,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",127,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",127,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",127,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",127,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",127,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",127,[[]]],[11,"is_iognd","","Checks if the value of the field is `IOGND`",127,[[]]],[11,"variant","","Writes `variant` to the field",128,[[["muxneg_a",4]],["w",6]]],[11,"pin0","","ADC AIN0 Pin",128,[[],["w",6]]],[11,"pin1","","ADC AIN1 Pin",128,[[],["w",6]]],[11,"pin2","","ADC AIN2 Pin",128,[[],["w",6]]],[11,"pin3","","ADC AIN3 Pin",128,[[],["w",6]]],[11,"pin4","","ADC AIN4 Pin",128,[[],["w",6]]],[11,"pin5","","ADC AIN5 Pin",128,[[],["w",6]]],[11,"pin6","","ADC AIN6 Pin",128,[[],["w",6]]],[11,"pin7","","ADC AIN7 Pin",128,[[],["w",6]]],[11,"gnd","","Internal Ground",128,[[],["w",6]]],[11,"iognd","","I/O Ground",128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",129,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",130,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["gain_a",4],["variant",4]]]],[11,"is_1x","","Checks if the value of the field is `_1X`",6,[[]]],[11,"is_2x","","Checks if the value of the field is `_2X`",6,[[]]],[11,"is_4x","","Checks if the value of the field is `_4X`",6,[[]]],[11,"is_8x","","Checks if the value of the field is `_8X`",6,[[]]],[11,"is_16x","","Checks if the value of the field is `_16X`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"variant","atsamd21g::adc::inputctrl","Get enumerated values variant",131,[[],[["gain_a",4],["variant",4]]]],[11,"is_1x","","Checks if the value of the field is `_1X`",131,[[]]],[11,"is_2x","","Checks if the value of the field is `_2X`",131,[[]]],[11,"is_4x","","Checks if the value of the field is `_4X`",131,[[]]],[11,"is_8x","","Checks if the value of the field is `_8X`",131,[[]]],[11,"is_16x","","Checks if the value of the field is `_16X`",131,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",131,[[]]],[11,"variant","","Writes `variant` to the field",132,[[["gain_a",4]],["w",6]]],[11,"_1x","","1x",132,[[],["w",6]]],[11,"_2x","","2x",132,[[],["w",6]]],[11,"_4x","","4x",132,[[],["w",6]]],[11,"_8x","","8x",132,[[],["w",6]]],[11,"_16x","","16x",132,[[],["w",6]]],[11,"div2","","1/2x",132,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",132,[[],["w",6]]],[11,"muxpos","atsamd21g::generic","Bits 0:4 - Positive Mux Input Selection",6,[[],["muxpos_r",6]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",6,[[],["muxneg_r",6]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",6,[[],["inputscan_r",6]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",6,[[],["inputoffset_r",6]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",6,[[],["gain_r",6]]],[11,"muxpos","atsamd21g::adc::inputctrl","Bits 0:4 - Positive Mux Input Selection",133,[[],["muxpos_r",6]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",133,[[],["muxneg_r",6]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",133,[[],["inputscan_r",6]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",133,[[],["inputoffset_r",6]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",133,[[],["gain_r",6]]],[11,"muxpos","atsamd21g::generic","Bits 0:4 - Positive Mux Input Selection",7,[[],["muxpos_w",3]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",7,[[],["muxneg_w",3]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",7,[[],["inputscan_w",3]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",7,[[],["inputoffset_w",3]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",7,[[],["gain_w",3]]],[11,"muxpos","atsamd21g::adc::inputctrl","Bits 0:4 - Positive Mux Input Selection",134,[[],["muxpos_w",3]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",134,[[],["muxneg_w",3]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",134,[[],["inputscan_w",3]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",134,[[],["inputoffset_w",3]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",134,[[],["gain_w",3]]],[0,"evctrl","atsamd21g::adc","Event Control",null,null],[3,"STARTEI_W","atsamd21g::adc::evctrl","Write proxy for field `STARTEI`",null,null],[3,"SYNCEI_W","","Write proxy for field `SYNCEI`",null,null],[3,"RESRDYEO_W","","Write proxy for field `RESRDYEO`",null,null],[3,"WINMONEO_W","","Write proxy for field `WINMONEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"STARTEI_R","","Reader of field `STARTEI`",null,null],[6,"SYNCEI_R","","Reader of field `SYNCEI`",null,null],[6,"RESRDYEO_R","","Reader of field `RESRDYEO`",null,null],[6,"WINMONEO_R","","Reader of field `WINMONEO`",null,null],[11,"set_bit","","Sets the field bit",135,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",135,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",135,[[],["w",6]]],[11,"set_bit","","Sets the field bit",136,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",136,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",136,[[],["w",6]]],[11,"set_bit","","Sets the field bit",137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",138,[[],["w",6]]],[11,"startei","atsamd21g::generic","Bit 0 - Start Conversion Event In",6,[[],["startei_r",6]]],[11,"syncei","","Bit 1 - Synchronization Event In",6,[[],["syncei_r",6]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",6,[[],["resrdyeo_r",6]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",6,[[],["winmoneo_r",6]]],[11,"startei","atsamd21g::adc::evctrl","Bit 0 - Start Conversion Event In",139,[[],["startei_r",6]]],[11,"syncei","","Bit 1 - Synchronization Event In",139,[[],["syncei_r",6]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",139,[[],["resrdyeo_r",6]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",139,[[],["winmoneo_r",6]]],[11,"startei","atsamd21g::generic","Bit 0 - Start Conversion Event In",7,[[],["startei_w",3]]],[11,"syncei","","Bit 1 - Synchronization Event In",7,[[],["syncei_w",3]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",7,[[],["resrdyeo_w",3]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",7,[[],["winmoneo_w",3]]],[11,"startei","atsamd21g::adc::evctrl","Bit 0 - Start Conversion Event In",140,[[],["startei_w",3]]],[11,"syncei","","Bit 1 - Synchronization Event In",140,[[],["syncei_w",3]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",140,[[],["resrdyeo_w",3]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",140,[[],["winmoneo_w",3]]],[0,"intenclr","atsamd21g::adc","Interrupt Enable Clear",null,null],[3,"RESRDY_W","atsamd21g::adc::intenclr","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",141,[[],["w",6]]],[11,"set_bit","","Sets the field bit",142,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",142,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",142,[[],["w",6]]],[11,"set_bit","","Sets the field bit",143,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",143,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",144,[[],["w",6]]],[11,"resrdy","atsamd21g::generic","Bit 0 - Result Ready Interrupt Enable",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",6,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd21g::adc::intenclr","Bit 0 - Result Ready Interrupt Enable",145,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",145,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",145,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",145,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd21g::generic","Bit 0 - Result Ready Interrupt Enable",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",7,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"resrdy","atsamd21g::adc::intenclr","Bit 0 - Result Ready Interrupt Enable",146,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",146,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",146,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",146,[[],["syncrdy_w",3]]],[0,"intenset","atsamd21g::adc","Interrupt Enable Set",null,null],[3,"RESRDY_W","atsamd21g::adc::intenset","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",149,[[],["w",6]]],[11,"set_bit","","Sets the field bit",150,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",150,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",150,[[],["w",6]]],[11,"resrdy","atsamd21g::generic","Bit 0 - Result Ready Interrupt Enable",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",6,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd21g::adc::intenset","Bit 0 - Result Ready Interrupt Enable",151,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",151,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",151,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",151,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd21g::generic","Bit 0 - Result Ready Interrupt Enable",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",7,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"resrdy","atsamd21g::adc::intenset","Bit 0 - Result Ready Interrupt Enable",152,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",152,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",152,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",152,[[],["syncrdy_w",3]]],[0,"intflag","atsamd21g::adc","Interrupt Flag Status and Clear",null,null],[3,"RESRDY_W","atsamd21g::adc::intflag","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",156,[[],["w",6]]],[11,"resrdy","atsamd21g::generic","Bit 0 - Result Ready",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor",6,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd21g::adc::intflag","Bit 0 - Result Ready",157,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun",157,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor",157,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",157,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd21g::generic","Bit 0 - Result Ready",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor",7,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"resrdy","atsamd21g::adc::intflag","Bit 0 - Result Ready",158,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun",158,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor",158,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",158,[[],["syncrdy_w",3]]],[0,"status","atsamd21g::adc","Status",null,null],[6,"R","atsamd21g::adc::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::adc::status","Bit 7 - Synchronization Busy",159,[[],["syncbusy_r",6]]],[0,"result","atsamd21g::adc","Result",null,null],[6,"R","atsamd21g::adc::result","Reader of register RESULT",null,null],[6,"RESULT_R","","Reader of field `RESULT`",null,null],[11,"result","atsamd21g::generic","Bits 0:15 - Result Conversion Value",6,[[],["result_r",6]]],[11,"result","atsamd21g::adc::result","Bits 0:15 - Result Conversion Value",160,[[],["result_r",6]]],[0,"winlt","atsamd21g::adc","Window Monitor Lower Threshold",null,null],[3,"WINLT_W","atsamd21g::adc::winlt","Write proxy for field `WINLT`",null,null],[6,"R","","Reader of register WINLT",null,null],[6,"W","","Writer for register WINLT",null,null],[6,"WINLT_R","","Reader of field `WINLT`",null,null],[11,"bits","","Writes raw bits to the field",161,[[],["w",6]]],[11,"winlt","atsamd21g::generic","Bits 0:15 - Window Lower Threshold",6,[[],["winlt_r",6]]],[11,"winlt","atsamd21g::adc::winlt","Bits 0:15 - Window Lower Threshold",162,[[],["winlt_r",6]]],[11,"winlt","atsamd21g::generic","Bits 0:15 - Window Lower Threshold",7,[[],["winlt_w",3]]],[11,"winlt","atsamd21g::adc::winlt","Bits 0:15 - Window Lower Threshold",163,[[],["winlt_w",3]]],[0,"winut","atsamd21g::adc","Window Monitor Upper Threshold",null,null],[3,"WINUT_W","atsamd21g::adc::winut","Write proxy for field `WINUT`",null,null],[6,"R","","Reader of register WINUT",null,null],[6,"W","","Writer for register WINUT",null,null],[6,"WINUT_R","","Reader of field `WINUT`",null,null],[11,"bits","","Writes raw bits to the field",164,[[],["w",6]]],[11,"winut","atsamd21g::generic","Bits 0:15 - Window Upper Threshold",6,[[],["winut_r",6]]],[11,"winut","atsamd21g::adc::winut","Bits 0:15 - Window Upper Threshold",165,[[],["winut_r",6]]],[11,"winut","atsamd21g::generic","Bits 0:15 - Window Upper Threshold",7,[[],["winut_w",3]]],[11,"winut","atsamd21g::adc::winut","Bits 0:15 - Window Upper Threshold",166,[[],["winut_w",3]]],[0,"gaincorr","atsamd21g::adc","Gain Correction",null,null],[3,"GAINCORR_W","atsamd21g::adc::gaincorr","Write proxy for field `GAINCORR`",null,null],[6,"R","","Reader of register GAINCORR",null,null],[6,"W","","Writer for register GAINCORR",null,null],[6,"GAINCORR_R","","Reader of field `GAINCORR`",null,null],[11,"bits","","Writes raw bits to the field",167,[[],["w",6]]],[11,"gaincorr","atsamd21g::generic","Bits 0:11 - Gain Correction Value",6,[[],["gaincorr_r",6]]],[11,"gaincorr","atsamd21g::adc::gaincorr","Bits 0:11 - Gain Correction Value",168,[[],["gaincorr_r",6]]],[11,"gaincorr","atsamd21g::generic","Bits 0:11 - Gain Correction Value",7,[[],["gaincorr_w",3]]],[11,"gaincorr","atsamd21g::adc::gaincorr","Bits 0:11 - Gain Correction Value",169,[[],["gaincorr_w",3]]],[0,"offsetcorr","atsamd21g::adc","Offset Correction",null,null],[3,"OFFSETCORR_W","atsamd21g::adc::offsetcorr","Write proxy for field `OFFSETCORR`",null,null],[6,"R","","Reader of register OFFSETCORR",null,null],[6,"W","","Writer for register OFFSETCORR",null,null],[6,"OFFSETCORR_R","","Reader of field `OFFSETCORR`",null,null],[11,"bits","","Writes raw bits to the field",170,[[],["w",6]]],[11,"offsetcorr","atsamd21g::generic","Bits 0:11 - Offset Correction Value",6,[[],["offsetcorr_r",6]]],[11,"offsetcorr","atsamd21g::adc::offsetcorr","Bits 0:11 - Offset Correction Value",171,[[],["offsetcorr_r",6]]],[11,"offsetcorr","atsamd21g::generic","Bits 0:11 - Offset Correction Value",7,[[],["offsetcorr_w",3]]],[11,"offsetcorr","atsamd21g::adc::offsetcorr","Bits 0:11 - Offset Correction Value",172,[[],["offsetcorr_w",3]]],[0,"calib","atsamd21g::adc","Calibration",null,null],[3,"LINEARITY_CAL_W","atsamd21g::adc::calib","Write proxy for field `LINEARITY_CAL`",null,null],[3,"BIAS_CAL_W","","Write proxy for field `BIAS_CAL`",null,null],[6,"R","","Reader of register CALIB",null,null],[6,"W","","Writer for register CALIB",null,null],[6,"LINEARITY_CAL_R","","Reader of field `LINEARITY_CAL`",null,null],[6,"BIAS_CAL_R","","Reader of field `BIAS_CAL`",null,null],[11,"bits","","Writes raw bits to the field",173,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",174,[[],["w",6]]],[11,"linearity_cal","atsamd21g::generic","Bits 0:7 - Linearity Calibration Value",6,[[],["linearity_cal_r",6]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",6,[[],["bias_cal_r",6]]],[11,"linearity_cal","atsamd21g::adc::calib","Bits 0:7 - Linearity Calibration Value",175,[[],["linearity_cal_r",6]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",175,[[],["bias_cal_r",6]]],[11,"linearity_cal","atsamd21g::generic","Bits 0:7 - Linearity Calibration Value",7,[[],["linearity_cal_w",3]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",7,[[],["bias_cal_w",3]]],[11,"linearity_cal","atsamd21g::adc::calib","Bits 0:7 - Linearity Calibration Value",176,[[],["linearity_cal_w",3]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",176,[[],["bias_cal_w",3]]],[0,"dbgctrl","atsamd21g::adc","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::adc::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",177,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",177,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",177,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::adc::dbgctrl","Bit 0 - Debug Run",178,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::adc::dbgctrl","Bit 0 - Debug Run",179,[[],["dbgrun_w",3]]],[6,"CTRLA","atsamd21g::adc","Control A",null,null],[6,"REFCTRL","","Reference Control",null,null],[6,"AVGCTRL","","Average Control",null,null],[6,"SAMPCTRL","","Sampling Time Control",null,null],[6,"CTRLB","","Control B",null,null],[6,"WINCTRL","","Window Monitor Control",null,null],[6,"SWTRIG","","Software Trigger",null,null],[6,"INPUTCTRL","","Input Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"RESULT","","Result",null,null],[6,"WINLT","","Window Monitor Lower Threshold",null,null],[6,"WINUT","","Window Monitor Upper Threshold",null,null],[6,"GAINCORR","","Gain Correction",null,null],[6,"OFFSETCORR","","Offset Correction",null,null],[6,"CALIB","","Calibration",null,null],[6,"DBGCTRL","","Debug Control",null,null],[0,"dac","atsamd21g","Digital Analog Converter",null,null],[3,"RegisterBlock","atsamd21g::dac","Register block",null,null],[12,"ctrla","","0x00 - Control A",180,null],[12,"ctrlb","","0x01 - Control B",180,null],[12,"evctrl","","0x02 - Event Control",180,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",180,null],[12,"intenset","","0x05 - Interrupt Enable Set",180,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",180,null],[12,"status","","0x07 - Status",180,null],[12,"data","","0x08 - Data",180,null],[12,"databuf","","0x0c - Data Buffer",180,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd21g::dac::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"set_bit","","Sets the field bit",181,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",181,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",183,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"swrst","atsamd21g::dac::ctrla","Bit 0 - Software Reset",184,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",184,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",184,[[],["runstdby_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"swrst","atsamd21g::dac::ctrla","Bit 0 - Software Reset",185,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",185,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",185,[[],["runstdby_w",3]]],[0,"ctrlb","atsamd21g::dac","Control B",null,null],[3,"EOEN_W","atsamd21g::dac::ctrlb","Write proxy for field `EOEN`",null,null],[3,"IOEN_W","","Write proxy for field `IOEN`",null,null],[3,"LEFTADJ_W","","Write proxy for field `LEFTADJ`",null,null],[3,"VPD_W","","Write proxy for field `VPD`",null,null],[3,"BDWP_W","","Write proxy for field `BDWP`",null,null],[3,"REFSEL_W","","Write proxy for field `REFSEL`",null,null],[4,"REFSEL_A","","Reference Selection",null,null],[13,"INT1V","","0: Internal 1.0V reference",186,null],[13,"AVCC","","1: AVCC",186,null],[13,"VREFP","","2: External reference",186,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"EOEN_R","","Reader of field `EOEN`",null,null],[6,"IOEN_R","","Reader of field `IOEN`",null,null],[6,"LEFTADJ_R","","Reader of field `LEFTADJ`",null,null],[6,"VPD_R","","Reader of field `VPD`",null,null],[6,"BDWP_R","","Reader of field `BDWP`",null,null],[6,"REFSEL_R","","Reader of field `REFSEL`",null,null],[11,"set_bit","","Sets the field bit",187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",187,[[],["w",6]]],[11,"set_bit","","Sets the field bit",188,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",188,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",188,[[],["w",6]]],[11,"set_bit","","Sets the field bit",189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",191,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["refsel_a",4],["variant",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",6,[[]]],[11,"is_avcc","","Checks if the value of the field is `AVCC`",6,[[]]],[11,"is_vrefp","","Checks if the value of the field is `VREFP`",6,[[]]],[11,"variant","atsamd21g::dac::ctrlb","Get enumerated values variant",192,[[],[["refsel_a",4],["variant",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",192,[[]]],[11,"is_avcc","","Checks if the value of the field is `AVCC`",192,[[]]],[11,"is_vrefp","","Checks if the value of the field is `VREFP`",192,[[]]],[11,"variant","","Writes `variant` to the field",193,[[["refsel_a",4]],["w",6]]],[11,"int1v","","Internal 1.0V reference",193,[[],["w",6]]],[11,"avcc","","AVCC",193,[[],["w",6]]],[11,"vrefp","","External reference",193,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",193,[[],["w",6]]],[11,"eoen","atsamd21g::generic","Bit 0 - External Output Enable",6,[[],["eoen_r",6]]],[11,"ioen","","Bit 1 - Internal Output Enable",6,[[],["ioen_r",6]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",6,[[],["leftadj_r",6]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",6,[[],["vpd_r",6]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",6,[[],["bdwp_r",6]]],[11,"refsel","","Bits 6:7 - Reference Selection",6,[[],["refsel_r",6]]],[11,"eoen","atsamd21g::dac::ctrlb","Bit 0 - External Output Enable",194,[[],["eoen_r",6]]],[11,"ioen","","Bit 1 - Internal Output Enable",194,[[],["ioen_r",6]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",194,[[],["leftadj_r",6]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",194,[[],["vpd_r",6]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",194,[[],["bdwp_r",6]]],[11,"refsel","","Bits 6:7 - Reference Selection",194,[[],["refsel_r",6]]],[11,"eoen","atsamd21g::generic","Bit 0 - External Output Enable",7,[[],["eoen_w",3]]],[11,"ioen","","Bit 1 - Internal Output Enable",7,[[],["ioen_w",3]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",7,[[],["leftadj_w",3]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",7,[[],["vpd_w",3]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",7,[[],["bdwp_w",3]]],[11,"refsel","","Bits 6:7 - Reference Selection",7,[[],["refsel_w",3]]],[11,"eoen","atsamd21g::dac::ctrlb","Bit 0 - External Output Enable",195,[[],["eoen_w",3]]],[11,"ioen","","Bit 1 - Internal Output Enable",195,[[],["ioen_w",3]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",195,[[],["leftadj_w",3]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",195,[[],["vpd_w",3]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",195,[[],["bdwp_w",3]]],[11,"refsel","","Bits 6:7 - Reference Selection",195,[[],["refsel_w",3]]],[0,"evctrl","atsamd21g::dac","Event Control",null,null],[3,"STARTEI_W","atsamd21g::dac::evctrl","Write proxy for field `STARTEI`",null,null],[3,"EMPTYEO_W","","Write proxy for field `EMPTYEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"STARTEI_R","","Reader of field `STARTEI`",null,null],[6,"EMPTYEO_R","","Reader of field `EMPTYEO`",null,null],[11,"set_bit","","Sets the field bit",196,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",196,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",196,[[],["w",6]]],[11,"set_bit","","Sets the field bit",197,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",197,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",197,[[],["w",6]]],[11,"startei","atsamd21g::generic","Bit 0 - Start Conversion Event Input",6,[[],["startei_r",6]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",6,[[],["emptyeo_r",6]]],[11,"startei","atsamd21g::dac::evctrl","Bit 0 - Start Conversion Event Input",198,[[],["startei_r",6]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",198,[[],["emptyeo_r",6]]],[11,"startei","atsamd21g::generic","Bit 0 - Start Conversion Event Input",7,[[],["startei_w",3]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",7,[[],["emptyeo_w",3]]],[11,"startei","atsamd21g::dac::evctrl","Bit 0 - Start Conversion Event Input",199,[[],["startei_w",3]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",199,[[],["emptyeo_w",3]]],[0,"intenclr","atsamd21g::dac","Interrupt Enable Clear",null,null],[3,"UNDERRUN_W","atsamd21g::dac::intenclr","Write proxy for field `UNDERRUN`",null,null],[3,"EMPTY_W","","Write proxy for field `EMPTY`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"UNDERRUN_R","","Reader of field `UNDERRUN`",null,null],[6,"EMPTY_R","","Reader of field `EMPTY`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",200,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",200,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",200,[[],["w",6]]],[11,"set_bit","","Sets the field bit",201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",202,[[],["w",6]]],[11,"underrun","atsamd21g::generic","Bit 0 - Underrun Interrupt Enable",6,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",6,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"underrun","atsamd21g::dac::intenclr","Bit 0 - Underrun Interrupt Enable",203,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",203,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",203,[[],["syncrdy_r",6]]],[11,"underrun","atsamd21g::generic","Bit 0 - Underrun Interrupt Enable",7,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",7,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"underrun","atsamd21g::dac::intenclr","Bit 0 - Underrun Interrupt Enable",204,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",204,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",204,[[],["syncrdy_w",3]]],[0,"intenset","atsamd21g::dac","Interrupt Enable Set",null,null],[3,"UNDERRUN_W","atsamd21g::dac::intenset","Write proxy for field `UNDERRUN`",null,null],[3,"EMPTY_W","","Write proxy for field `EMPTY`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"UNDERRUN_R","","Reader of field `UNDERRUN`",null,null],[6,"EMPTY_R","","Reader of field `EMPTY`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",205,[[],["w",6]]],[11,"set_bit","","Sets the field bit",206,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",206,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",206,[[],["w",6]]],[11,"set_bit","","Sets the field bit",207,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",207,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",207,[[],["w",6]]],[11,"underrun","atsamd21g::generic","Bit 0 - Underrun Interrupt Enable",6,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",6,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"underrun","atsamd21g::dac::intenset","Bit 0 - Underrun Interrupt Enable",208,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",208,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",208,[[],["syncrdy_r",6]]],[11,"underrun","atsamd21g::generic","Bit 0 - Underrun Interrupt Enable",7,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",7,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"underrun","atsamd21g::dac::intenset","Bit 0 - Underrun Interrupt Enable",209,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",209,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",209,[[],["syncrdy_w",3]]],[0,"intflag","atsamd21g::dac","Interrupt Flag Status and Clear",null,null],[3,"UNDERRUN_W","atsamd21g::dac::intflag","Write proxy for field `UNDERRUN`",null,null],[3,"EMPTY_W","","Write proxy for field `EMPTY`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"UNDERRUN_R","","Reader of field `UNDERRUN`",null,null],[6,"EMPTY_R","","Reader of field `EMPTY`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",210,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",210,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",211,[[],["w",6]]],[11,"set_bit","","Sets the field bit",212,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",212,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",212,[[],["w",6]]],[11,"underrun","atsamd21g::generic","Bit 0 - Underrun",6,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty",6,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"underrun","atsamd21g::dac::intflag","Bit 0 - Underrun",213,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty",213,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",213,[[],["syncrdy_r",6]]],[11,"underrun","atsamd21g::generic","Bit 0 - Underrun",7,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty",7,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"underrun","atsamd21g::dac::intflag","Bit 0 - Underrun",214,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty",214,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",214,[[],["syncrdy_w",3]]],[0,"status","atsamd21g::dac","Status",null,null],[6,"R","atsamd21g::dac::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy Status",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::dac::status","Bit 7 - Synchronization Busy Status",215,[[],["syncbusy_r",6]]],[0,"data","atsamd21g::dac","Data",null,null],[3,"DATA_W","atsamd21g::dac::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",216,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:15 - Data value to be converted",6,[[],["data_r",6]]],[11,"data","atsamd21g::dac::data","Bits 0:15 - Data value to be converted",217,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:15 - Data value to be converted",7,[[],["data_w",3]]],[11,"data","atsamd21g::dac::data","Bits 0:15 - Data value to be converted",218,[[],["data_w",3]]],[0,"databuf","atsamd21g::dac","Data Buffer",null,null],[3,"DATABUF_W","atsamd21g::dac::databuf","Write proxy for field `DATABUF`",null,null],[6,"R","","Reader of register DATABUF",null,null],[6,"W","","Writer for register DATABUF",null,null],[6,"DATABUF_R","","Reader of field `DATABUF`",null,null],[11,"bits","","Writes raw bits to the field",219,[[],["w",6]]],[11,"databuf","atsamd21g::generic","Bits 0:15 - Data Buffer",6,[[],["databuf_r",6]]],[11,"databuf","atsamd21g::dac::databuf","Bits 0:15 - Data Buffer",220,[[],["databuf_r",6]]],[11,"databuf","atsamd21g::generic","Bits 0:15 - Data Buffer",7,[[],["databuf_w",3]]],[11,"databuf","atsamd21g::dac::databuf","Bits 0:15 - Data Buffer",221,[[],["databuf_w",3]]],[6,"CTRLA","atsamd21g::dac","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DATA","","Data",null,null],[6,"DATABUF","","Data Buffer",null,null],[0,"dmac","atsamd21g","Direct Memory Access Controller",null,null],[3,"RegisterBlock","atsamd21g::dmac","Register block",null,null],[12,"ctrl","","0x00 - Control",222,null],[12,"crcctrl","","0x02 - CRC Control",222,null],[12,"crcdatain","","0x04 - CRC Data Input",222,null],[12,"crcchksum","","0x08 - CRC Checksum",222,null],[12,"crcstatus","","0x0c - CRC Status",222,null],[12,"dbgctrl","","0x0d - Debug Control",222,null],[12,"qosctrl","","0x0e - QOS Control",222,null],[12,"swtrigctrl","","0x10 - Software Trigger Control",222,null],[12,"prictrl0","","0x14 - Priority Control 0",222,null],[12,"intpend","","0x20 - Interrupt Pending",222,null],[12,"intstatus","","0x24 - Interrupt Status",222,null],[12,"busych","","0x28 - Busy Channels",222,null],[12,"pendch","","0x2c - Pending Channels",222,null],[12,"active","","0x30 - Active Channel and Levels",222,null],[12,"baseaddr","","0x34 - Descriptor Memory Section Base Address",222,null],[12,"wrbaddr","","0x38 - Write-Back Memory Section Base Address",222,null],[12,"chid","","0x3f - Channel ID",222,null],[12,"chctrla","","0x40 - Channel Control A",222,null],[12,"chctrlb","","0x44 - Channel Control B",222,null],[12,"chintenclr","","0x4c - Channel Interrupt Enable Clear",222,null],[12,"chintenset","","0x4d - Channel Interrupt Enable Set",222,null],[12,"chintflag","","0x4e - Channel Interrupt Flag Status and Clear",222,null],[12,"chstatus","","0x4f - Channel Status",222,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd21g::dmac::ctrl","Write proxy for field `SWRST`",null,null],[3,"DMAENABLE_W","","Write proxy for field `DMAENABLE`",null,null],[3,"CRCENABLE_W","","Write proxy for field `CRCENABLE`",null,null],[3,"LVLEN0_W","","Write proxy for field `LVLEN0`",null,null],[3,"LVLEN1_W","","Write proxy for field `LVLEN1`",null,null],[3,"LVLEN2_W","","Write proxy for field `LVLEN2`",null,null],[3,"LVLEN3_W","","Write proxy for field `LVLEN3`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"DMAENABLE_R","","Reader of field `DMAENABLE`",null,null],[6,"CRCENABLE_R","","Reader of field `CRCENABLE`",null,null],[6,"LVLEN0_R","","Reader of field `LVLEN0`",null,null],[6,"LVLEN1_R","","Reader of field `LVLEN1`",null,null],[6,"LVLEN2_R","","Reader of field `LVLEN2`",null,null],[6,"LVLEN3_R","","Reader of field `LVLEN3`",null,null],[11,"set_bit","","Sets the field bit",223,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",223,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",223,[[],["w",6]]],[11,"set_bit","","Sets the field bit",224,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",224,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",224,[[],["w",6]]],[11,"set_bit","","Sets the field bit",225,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",225,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",225,[[],["w",6]]],[11,"set_bit","","Sets the field bit",226,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",226,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",226,[[],["w",6]]],[11,"set_bit","","Sets the field bit",227,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",227,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",227,[[],["w",6]]],[11,"set_bit","","Sets the field bit",228,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",228,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",228,[[],["w",6]]],[11,"set_bit","","Sets the field bit",229,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",229,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",229,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"dmaenable","","Bit 1 - DMA Enable",6,[[],["dmaenable_r",6]]],[11,"crcenable","","Bit 2 - CRC Enable",6,[[],["crcenable_r",6]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",6,[[],["lvlen0_r",6]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",6,[[],["lvlen1_r",6]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",6,[[],["lvlen2_r",6]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",6,[[],["lvlen3_r",6]]],[11,"swrst","atsamd21g::dmac::ctrl","Bit 0 - Software Reset",230,[[],["swrst_r",6]]],[11,"dmaenable","","Bit 1 - DMA Enable",230,[[],["dmaenable_r",6]]],[11,"crcenable","","Bit 2 - CRC Enable",230,[[],["crcenable_r",6]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",230,[[],["lvlen0_r",6]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",230,[[],["lvlen1_r",6]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",230,[[],["lvlen2_r",6]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",230,[[],["lvlen3_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"dmaenable","","Bit 1 - DMA Enable",7,[[],["dmaenable_w",3]]],[11,"crcenable","","Bit 2 - CRC Enable",7,[[],["crcenable_w",3]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",7,[[],["lvlen0_w",3]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",7,[[],["lvlen1_w",3]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",7,[[],["lvlen2_w",3]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",7,[[],["lvlen3_w",3]]],[11,"swrst","atsamd21g::dmac::ctrl","Bit 0 - Software Reset",231,[[],["swrst_w",3]]],[11,"dmaenable","","Bit 1 - DMA Enable",231,[[],["dmaenable_w",3]]],[11,"crcenable","","Bit 2 - CRC Enable",231,[[],["crcenable_w",3]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",231,[[],["lvlen0_w",3]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",231,[[],["lvlen1_w",3]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",231,[[],["lvlen2_w",3]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",231,[[],["lvlen3_w",3]]],[0,"crcctrl","atsamd21g::dmac","CRC Control",null,null],[3,"CRCBEATSIZE_W","atsamd21g::dmac::crcctrl","Write proxy for field `CRCBEATSIZE`",null,null],[3,"CRCPOLY_W","","Write proxy for field `CRCPOLY`",null,null],[3,"CRCSRC_W","","Write proxy for field `CRCSRC`",null,null],[4,"CRCBEATSIZE_A","","CRC Beat Size",null,null],[13,"BYTE","","0: 8-bit bus transfer",232,null],[13,"HWORD","","1: 16-bit bus transfer",232,null],[13,"WORD","","2: 32-bit bus transfer",232,null],[4,"CRCPOLY_A","","CRC Polynomial Type",null,null],[13,"CRC16","","0: CRC-16 (CRC-CCITT)",233,null],[13,"CRC32","","1: CRC32 (IEEE 802.3)",233,null],[4,"CRCSRC_A","","CRC Input Source",null,null],[13,"NOACT","","0: No action",234,null],[13,"IO","","1: I/O interface",234,null],[6,"R","","Reader of register CRCCTRL",null,null],[6,"W","","Writer for register CRCCTRL",null,null],[6,"CRCBEATSIZE_R","","Reader of field `CRCBEATSIZE`",null,null],[6,"CRCPOLY_R","","Reader of field `CRCPOLY`",null,null],[6,"CRCSRC_R","","Reader of field `CRCSRC`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["crcbeatsize_a",4]]]],[11,"is_byte","","Checks if the value of the field is `BYTE`",6,[[]]],[11,"is_hword","","Checks if the value of the field is `HWORD`",6,[[]]],[11,"is_word","","Checks if the value of the field is `WORD`",6,[[]]],[11,"variant","atsamd21g::dmac::crcctrl","Get enumerated values variant",235,[[],[["variant",4],["crcbeatsize_a",4]]]],[11,"is_byte","","Checks if the value of the field is `BYTE`",235,[[]]],[11,"is_hword","","Checks if the value of the field is `HWORD`",235,[[]]],[11,"is_word","","Checks if the value of the field is `WORD`",235,[[]]],[11,"variant","","Writes `variant` to the field",236,[[["crcbeatsize_a",4]],["w",6]]],[11,"byte","","8-bit bus transfer",236,[[],["w",6]]],[11,"hword","","16-bit bus transfer",236,[[],["w",6]]],[11,"word","","32-bit bus transfer",236,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",236,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["crcpoly_a",4]]]],[11,"is_crc16","","Checks if the value of the field is `CRC16`",6,[[]]],[11,"is_crc32","","Checks if the value of the field is `CRC32`",6,[[]]],[11,"variant","atsamd21g::dmac::crcctrl","Get enumerated values variant",237,[[],[["variant",4],["crcpoly_a",4]]]],[11,"is_crc16","","Checks if the value of the field is `CRC16`",237,[[]]],[11,"is_crc32","","Checks if the value of the field is `CRC32`",237,[[]]],[11,"variant","","Writes `variant` to the field",238,[[["crcpoly_a",4]],["w",6]]],[11,"crc16","","CRC-16 (CRC-CCITT)",238,[[],["w",6]]],[11,"crc32","","CRC32 (IEEE 802.3)",238,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",238,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["crcsrc_a",4],["variant",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",6,[[]]],[11,"variant","atsamd21g::dmac::crcctrl","Get enumerated values variant",239,[[],[["crcsrc_a",4],["variant",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",239,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",239,[[]]],[11,"variant","","Writes `variant` to the field",240,[[["crcsrc_a",4]],["w",6]]],[11,"noact","","No action",240,[[],["w",6]]],[11,"io","","I/O interface",240,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",240,[[],["w",6]]],[11,"crcbeatsize","atsamd21g::generic","Bits 0:1 - CRC Beat Size",6,[[],["crcbeatsize_r",6]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",6,[[],["crcpoly_r",6]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",6,[[],["crcsrc_r",6]]],[11,"crcbeatsize","atsamd21g::dmac::crcctrl","Bits 0:1 - CRC Beat Size",241,[[],["crcbeatsize_r",6]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",241,[[],["crcpoly_r",6]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",241,[[],["crcsrc_r",6]]],[11,"crcbeatsize","atsamd21g::generic","Bits 0:1 - CRC Beat Size",7,[[],["crcbeatsize_w",3]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",7,[[],["crcpoly_w",3]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",7,[[],["crcsrc_w",3]]],[11,"crcbeatsize","atsamd21g::dmac::crcctrl","Bits 0:1 - CRC Beat Size",242,[[],["crcbeatsize_w",3]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",242,[[],["crcpoly_w",3]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",242,[[],["crcsrc_w",3]]],[0,"crcdatain","atsamd21g::dmac","CRC Data Input",null,null],[3,"CRCDATAIN_W","atsamd21g::dmac::crcdatain","Write proxy for field `CRCDATAIN`",null,null],[6,"R","","Reader of register CRCDATAIN",null,null],[6,"W","","Writer for register CRCDATAIN",null,null],[6,"CRCDATAIN_R","","Reader of field `CRCDATAIN`",null,null],[11,"bits","","Writes raw bits to the field",243,[[],["w",6]]],[11,"crcdatain","atsamd21g::generic","Bits 0:31 - CRC Data Input",6,[[],["crcdatain_r",6]]],[11,"crcdatain","atsamd21g::dmac::crcdatain","Bits 0:31 - CRC Data Input",244,[[],["crcdatain_r",6]]],[11,"crcdatain","atsamd21g::generic","Bits 0:31 - CRC Data Input",7,[[],["crcdatain_w",3]]],[11,"crcdatain","atsamd21g::dmac::crcdatain","Bits 0:31 - CRC Data Input",245,[[],["crcdatain_w",3]]],[0,"crcchksum","atsamd21g::dmac","CRC Checksum",null,null],[3,"CRCCHKSUM_W","atsamd21g::dmac::crcchksum","Write proxy for field `CRCCHKSUM`",null,null],[6,"R","","Reader of register CRCCHKSUM",null,null],[6,"W","","Writer for register CRCCHKSUM",null,null],[6,"CRCCHKSUM_R","","Reader of field `CRCCHKSUM`",null,null],[11,"bits","","Writes raw bits to the field",246,[[],["w",6]]],[11,"crcchksum","atsamd21g::generic","Bits 0:31 - CRC Checksum",6,[[],["crcchksum_r",6]]],[11,"crcchksum","atsamd21g::dmac::crcchksum","Bits 0:31 - CRC Checksum",247,[[],["crcchksum_r",6]]],[11,"crcchksum","atsamd21g::generic","Bits 0:31 - CRC Checksum",7,[[],["crcchksum_w",3]]],[11,"crcchksum","atsamd21g::dmac::crcchksum","Bits 0:31 - CRC Checksum",248,[[],["crcchksum_w",3]]],[0,"crcstatus","atsamd21g::dmac","CRC Status",null,null],[3,"CRCBUSY_W","atsamd21g::dmac::crcstatus","Write proxy for field `CRCBUSY`",null,null],[6,"R","","Reader of register CRCSTATUS",null,null],[6,"W","","Writer for register CRCSTATUS",null,null],[6,"CRCBUSY_R","","Reader of field `CRCBUSY`",null,null],[6,"CRCZERO_R","","Reader of field `CRCZERO`",null,null],[11,"set_bit","","Sets the field bit",249,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",249,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",249,[[],["w",6]]],[11,"crcbusy","atsamd21g::generic","Bit 0 - CRC Module Busy",6,[[],["crcbusy_r",6]]],[11,"crczero","","Bit 1 - CRC Zero",6,[[],["crczero_r",6]]],[11,"crcbusy","atsamd21g::dmac::crcstatus","Bit 0 - CRC Module Busy",250,[[],["crcbusy_r",6]]],[11,"crczero","","Bit 1 - CRC Zero",250,[[],["crczero_r",6]]],[11,"crcbusy","atsamd21g::generic","Bit 0 - CRC Module Busy",7,[[],["crcbusy_w",3]]],[11,"crcbusy","atsamd21g::dmac::crcstatus","Bit 0 - CRC Module Busy",251,[[],["crcbusy_w",3]]],[0,"dbgctrl","atsamd21g::dmac","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::dmac::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",252,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",252,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",252,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::dmac::dbgctrl","Bit 0 - Debug Run",253,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::dmac::dbgctrl","Bit 0 - Debug Run",254,[[],["dbgrun_w",3]]],[0,"qosctrl","atsamd21g::dmac","QOS Control",null,null],[3,"WRBQOS_W","atsamd21g::dmac::qosctrl","Write proxy for field `WRBQOS`",null,null],[3,"FQOS_W","","Write proxy for field `FQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[4,"WRBQOS_A","","Write-Back Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",255,null],[13,"LOW","","1: Sensitive Bandwidth",255,null],[13,"MEDIUM","","2: Sensitive Latency",255,null],[13,"HIGH","","3: Critical Latency",255,null],[4,"FQOS_A","","Fetch Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",256,null],[13,"LOW","","1: Sensitive Bandwidth",256,null],[13,"MEDIUM","","2: Sensitive Latency",256,null],[13,"HIGH","","3: Critical Latency",256,null],[4,"DQOS_A","","Data Transfer Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",257,null],[13,"LOW","","1: Sensitive Bandwidth",257,null],[13,"MEDIUM","","2: Sensitive Latency",257,null],[13,"HIGH","","3: Critical Latency",257,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"WRBQOS_R","","Reader of field `WRBQOS`",null,null],[6,"FQOS_R","","Reader of field `FQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["wrbqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::dmac::qosctrl","Get enumerated values variant",258,[[],["wrbqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",258,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",258,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",258,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",258,[[]]],[11,"variant","","Writes `variant` to the field",259,[[["wrbqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",259,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",259,[[],["w",6]]],[11,"medium","","Sensitive Latency",259,[[],["w",6]]],[11,"high","","Critical Latency",259,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",259,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["fqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::dmac::qosctrl","Get enumerated values variant",260,[[],["fqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",260,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",260,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",260,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",260,[[]]],[11,"variant","","Writes `variant` to the field",261,[[["fqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",261,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",261,[[],["w",6]]],[11,"medium","","Sensitive Latency",261,[[],["w",6]]],[11,"high","","Critical Latency",261,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",261,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::dmac::qosctrl","Get enumerated values variant",262,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",262,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",262,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",262,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",262,[[]]],[11,"variant","","Writes `variant` to the field",263,[[["dqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",263,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",263,[[],["w",6]]],[11,"medium","","Sensitive Latency",263,[[],["w",6]]],[11,"high","","Critical Latency",263,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",263,[[],["w",6]]],[11,"wrbqos","atsamd21g::generic","Bits 0:1 - Write-Back Quality of Service",6,[[],["wrbqos_r",6]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",6,[[],["fqos_r",6]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",6,[[],["dqos_r",6]]],[11,"wrbqos","atsamd21g::dmac::qosctrl","Bits 0:1 - Write-Back Quality of Service",264,[[],["wrbqos_r",6]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",264,[[],["fqos_r",6]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",264,[[],["dqos_r",6]]],[11,"wrbqos","atsamd21g::generic","Bits 0:1 - Write-Back Quality of Service",7,[[],["wrbqos_w",3]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",7,[[],["fqos_w",3]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",7,[[],["dqos_w",3]]],[11,"wrbqos","atsamd21g::dmac::qosctrl","Bits 0:1 - Write-Back Quality of Service",265,[[],["wrbqos_w",3]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",265,[[],["fqos_w",3]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",265,[[],["dqos_w",3]]],[0,"swtrigctrl","atsamd21g::dmac","Software Trigger Control",null,null],[3,"SWTRIG0_W","atsamd21g::dmac::swtrigctrl","Write proxy for field `SWTRIG0`",null,null],[3,"SWTRIG1_W","","Write proxy for field `SWTRIG1`",null,null],[3,"SWTRIG2_W","","Write proxy for field `SWTRIG2`",null,null],[3,"SWTRIG3_W","","Write proxy for field `SWTRIG3`",null,null],[3,"SWTRIG4_W","","Write proxy for field `SWTRIG4`",null,null],[3,"SWTRIG5_W","","Write proxy for field `SWTRIG5`",null,null],[3,"SWTRIG6_W","","Write proxy for field `SWTRIG6`",null,null],[3,"SWTRIG7_W","","Write proxy for field `SWTRIG7`",null,null],[3,"SWTRIG8_W","","Write proxy for field `SWTRIG8`",null,null],[3,"SWTRIG9_W","","Write proxy for field `SWTRIG9`",null,null],[3,"SWTRIG10_W","","Write proxy for field `SWTRIG10`",null,null],[3,"SWTRIG11_W","","Write proxy for field `SWTRIG11`",null,null],[6,"R","","Reader of register SWTRIGCTRL",null,null],[6,"W","","Writer for register SWTRIGCTRL",null,null],[6,"SWTRIG0_R","","Reader of field `SWTRIG0`",null,null],[6,"SWTRIG1_R","","Reader of field `SWTRIG1`",null,null],[6,"SWTRIG2_R","","Reader of field `SWTRIG2`",null,null],[6,"SWTRIG3_R","","Reader of field `SWTRIG3`",null,null],[6,"SWTRIG4_R","","Reader of field `SWTRIG4`",null,null],[6,"SWTRIG5_R","","Reader of field `SWTRIG5`",null,null],[6,"SWTRIG6_R","","Reader of field `SWTRIG6`",null,null],[6,"SWTRIG7_R","","Reader of field `SWTRIG7`",null,null],[6,"SWTRIG8_R","","Reader of field `SWTRIG8`",null,null],[6,"SWTRIG9_R","","Reader of field `SWTRIG9`",null,null],[6,"SWTRIG10_R","","Reader of field `SWTRIG10`",null,null],[6,"SWTRIG11_R","","Reader of field `SWTRIG11`",null,null],[11,"set_bit","","Sets the field bit",266,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",266,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",266,[[],["w",6]]],[11,"set_bit","","Sets the field bit",267,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",267,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",267,[[],["w",6]]],[11,"set_bit","","Sets the field bit",268,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",268,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",268,[[],["w",6]]],[11,"set_bit","","Sets the field bit",269,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",269,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",269,[[],["w",6]]],[11,"set_bit","","Sets the field bit",270,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",270,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",270,[[],["w",6]]],[11,"set_bit","","Sets the field bit",271,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",271,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",271,[[],["w",6]]],[11,"set_bit","","Sets the field bit",272,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",272,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",272,[[],["w",6]]],[11,"set_bit","","Sets the field bit",273,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",273,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",273,[[],["w",6]]],[11,"set_bit","","Sets the field bit",274,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",274,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",274,[[],["w",6]]],[11,"set_bit","","Sets the field bit",275,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",275,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",275,[[],["w",6]]],[11,"set_bit","","Sets the field bit",276,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",276,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",276,[[],["w",6]]],[11,"set_bit","","Sets the field bit",277,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",277,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",277,[[],["w",6]]],[11,"swtrig0","atsamd21g::generic","Bit 0 - Channel 0 Software Trigger",6,[[],["swtrig0_r",6]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",6,[[],["swtrig1_r",6]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",6,[[],["swtrig2_r",6]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",6,[[],["swtrig3_r",6]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",6,[[],["swtrig4_r",6]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",6,[[],["swtrig5_r",6]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",6,[[],["swtrig6_r",6]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",6,[[],["swtrig7_r",6]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",6,[[],["swtrig8_r",6]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",6,[[],["swtrig9_r",6]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",6,[[],["swtrig10_r",6]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",6,[[],["swtrig11_r",6]]],[11,"swtrig0","atsamd21g::dmac::swtrigctrl","Bit 0 - Channel 0 Software Trigger",278,[[],["swtrig0_r",6]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",278,[[],["swtrig1_r",6]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",278,[[],["swtrig2_r",6]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",278,[[],["swtrig3_r",6]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",278,[[],["swtrig4_r",6]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",278,[[],["swtrig5_r",6]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",278,[[],["swtrig6_r",6]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",278,[[],["swtrig7_r",6]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",278,[[],["swtrig8_r",6]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",278,[[],["swtrig9_r",6]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",278,[[],["swtrig10_r",6]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",278,[[],["swtrig11_r",6]]],[11,"swtrig0","atsamd21g::generic","Bit 0 - Channel 0 Software Trigger",7,[[],["swtrig0_w",3]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",7,[[],["swtrig1_w",3]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",7,[[],["swtrig2_w",3]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",7,[[],["swtrig3_w",3]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",7,[[],["swtrig4_w",3]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",7,[[],["swtrig5_w",3]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",7,[[],["swtrig6_w",3]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",7,[[],["swtrig7_w",3]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",7,[[],["swtrig8_w",3]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",7,[[],["swtrig9_w",3]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",7,[[],["swtrig10_w",3]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",7,[[],["swtrig11_w",3]]],[11,"swtrig0","atsamd21g::dmac::swtrigctrl","Bit 0 - Channel 0 Software Trigger",279,[[],["swtrig0_w",3]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",279,[[],["swtrig1_w",3]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",279,[[],["swtrig2_w",3]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",279,[[],["swtrig3_w",3]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",279,[[],["swtrig4_w",3]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",279,[[],["swtrig5_w",3]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",279,[[],["swtrig6_w",3]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",279,[[],["swtrig7_w",3]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",279,[[],["swtrig8_w",3]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",279,[[],["swtrig9_w",3]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",279,[[],["swtrig10_w",3]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",279,[[],["swtrig11_w",3]]],[0,"prictrl0","atsamd21g::dmac","Priority Control 0",null,null],[3,"LVLPRI0_W","atsamd21g::dmac::prictrl0","Write proxy for field `LVLPRI0`",null,null],[3,"RRLVLEN0_W","","Write proxy for field `RRLVLEN0`",null,null],[3,"LVLPRI1_W","","Write proxy for field `LVLPRI1`",null,null],[3,"RRLVLEN1_W","","Write proxy for field `RRLVLEN1`",null,null],[3,"LVLPRI2_W","","Write proxy for field `LVLPRI2`",null,null],[3,"RRLVLEN2_W","","Write proxy for field `RRLVLEN2`",null,null],[3,"LVLPRI3_W","","Write proxy for field `LVLPRI3`",null,null],[3,"RRLVLEN3_W","","Write proxy for field `RRLVLEN3`",null,null],[6,"R","","Reader of register PRICTRL0",null,null],[6,"W","","Writer for register PRICTRL0",null,null],[6,"LVLPRI0_R","","Reader of field `LVLPRI0`",null,null],[6,"RRLVLEN0_R","","Reader of field `RRLVLEN0`",null,null],[6,"LVLPRI1_R","","Reader of field `LVLPRI1`",null,null],[6,"RRLVLEN1_R","","Reader of field `RRLVLEN1`",null,null],[6,"LVLPRI2_R","","Reader of field `LVLPRI2`",null,null],[6,"RRLVLEN2_R","","Reader of field `RRLVLEN2`",null,null],[6,"LVLPRI3_R","","Reader of field `LVLPRI3`",null,null],[6,"RRLVLEN3_R","","Reader of field `RRLVLEN3`",null,null],[11,"bits","","Writes raw bits to the field",280,[[],["w",6]]],[11,"set_bit","","Sets the field bit",281,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",281,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",281,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",282,[[],["w",6]]],[11,"set_bit","","Sets the field bit",283,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",283,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",283,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",284,[[],["w",6]]],[11,"set_bit","","Sets the field bit",285,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",285,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",285,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",286,[[],["w",6]]],[11,"set_bit","","Sets the field bit",287,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",287,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",287,[[],["w",6]]],[11,"lvlpri0","atsamd21g::generic","Bits 0:3 - Level 0 Channel Priority Number",6,[[],["lvlpri0_r",6]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",6,[[],["rrlvlen0_r",6]]],[11,"lvlpri1","","Bits 8:11 - Level 1 Channel Priority Number",6,[[],["lvlpri1_r",6]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",6,[[],["rrlvlen1_r",6]]],[11,"lvlpri2","","Bits 16:19 - Level 2 Channel Priority Number",6,[[],["lvlpri2_r",6]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",6,[[],["rrlvlen2_r",6]]],[11,"lvlpri3","","Bits 24:27 - Level 3 Channel Priority Number",6,[[],["lvlpri3_r",6]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",6,[[],["rrlvlen3_r",6]]],[11,"lvlpri0","atsamd21g::dmac::prictrl0","Bits 0:3 - Level 0 Channel Priority Number",288,[[],["lvlpri0_r",6]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",288,[[],["rrlvlen0_r",6]]],[11,"lvlpri1","","Bits 8:11 - Level 1 Channel Priority Number",288,[[],["lvlpri1_r",6]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",288,[[],["rrlvlen1_r",6]]],[11,"lvlpri2","","Bits 16:19 - Level 2 Channel Priority Number",288,[[],["lvlpri2_r",6]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",288,[[],["rrlvlen2_r",6]]],[11,"lvlpri3","","Bits 24:27 - Level 3 Channel Priority Number",288,[[],["lvlpri3_r",6]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",288,[[],["rrlvlen3_r",6]]],[11,"lvlpri0","atsamd21g::generic","Bits 0:3 - Level 0 Channel Priority Number",7,[[],["lvlpri0_w",3]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",7,[[],["rrlvlen0_w",3]]],[11,"lvlpri1","","Bits 8:11 - Level 1 Channel Priority Number",7,[[],["lvlpri1_w",3]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",7,[[],["rrlvlen1_w",3]]],[11,"lvlpri2","","Bits 16:19 - Level 2 Channel Priority Number",7,[[],["lvlpri2_w",3]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",7,[[],["rrlvlen2_w",3]]],[11,"lvlpri3","","Bits 24:27 - Level 3 Channel Priority Number",7,[[],["lvlpri3_w",3]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",7,[[],["rrlvlen3_w",3]]],[11,"lvlpri0","atsamd21g::dmac::prictrl0","Bits 0:3 - Level 0 Channel Priority Number",289,[[],["lvlpri0_w",3]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",289,[[],["rrlvlen0_w",3]]],[11,"lvlpri1","","Bits 8:11 - Level 1 Channel Priority Number",289,[[],["lvlpri1_w",3]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",289,[[],["rrlvlen1_w",3]]],[11,"lvlpri2","","Bits 16:19 - Level 2 Channel Priority Number",289,[[],["lvlpri2_w",3]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",289,[[],["rrlvlen2_w",3]]],[11,"lvlpri3","","Bits 24:27 - Level 3 Channel Priority Number",289,[[],["lvlpri3_w",3]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",289,[[],["rrlvlen3_w",3]]],[0,"intpend","atsamd21g::dmac","Interrupt Pending",null,null],[3,"ID_W","atsamd21g::dmac::intpend","Write proxy for field `ID`",null,null],[3,"TERR_W","","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register INTPEND",null,null],[6,"W","","Writer for register INTPEND",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"PEND_R","","Reader of field `PEND`",null,null],[11,"bits","","Writes raw bits to the field",290,[[],["w",6]]],[11,"set_bit","","Sets the field bit",291,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",291,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",291,[[],["w",6]]],[11,"set_bit","","Sets the field bit",292,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",292,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",292,[[],["w",6]]],[11,"set_bit","","Sets the field bit",293,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",293,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",293,[[],["w",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Channel ID",6,[[],["id_r",6]]],[11,"terr","","Bit 8 - Transfer Error",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 9 - Transfer Complete",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 10 - Channel Suspend",6,[[],["susp_r",6]]],[11,"ferr","","Bit 13 - Fetch Error",6,[[],["ferr_r",6]]],[11,"busy","","Bit 14 - Busy",6,[[],["busy_r",6]]],[11,"pend","","Bit 15 - Pending",6,[[],["pend_r",6]]],[11,"id","atsamd21g::dmac::intpend","Bits 0:3 - Channel ID",294,[[],["id_r",6]]],[11,"terr","","Bit 8 - Transfer Error",294,[[],["terr_r",6]]],[11,"tcmpl","","Bit 9 - Transfer Complete",294,[[],["tcmpl_r",6]]],[11,"susp","","Bit 10 - Channel Suspend",294,[[],["susp_r",6]]],[11,"ferr","","Bit 13 - Fetch Error",294,[[],["ferr_r",6]]],[11,"busy","","Bit 14 - Busy",294,[[],["busy_r",6]]],[11,"pend","","Bit 15 - Pending",294,[[],["pend_r",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Channel ID",7,[[],["id_w",3]]],[11,"terr","","Bit 8 - Transfer Error",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 9 - Transfer Complete",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 10 - Channel Suspend",7,[[],["susp_w",3]]],[11,"id","atsamd21g::dmac::intpend","Bits 0:3 - Channel ID",295,[[],["id_w",3]]],[11,"terr","","Bit 8 - Transfer Error",295,[[],["terr_w",3]]],[11,"tcmpl","","Bit 9 - Transfer Complete",295,[[],["tcmpl_w",3]]],[11,"susp","","Bit 10 - Channel Suspend",295,[[],["susp_w",3]]],[0,"intstatus","atsamd21g::dmac","Interrupt Status",null,null],[6,"R","atsamd21g::dmac::intstatus","Reader of register INTSTATUS",null,null],[6,"CHINT0_R","","Reader of field `CHINT0`",null,null],[6,"CHINT1_R","","Reader of field `CHINT1`",null,null],[6,"CHINT2_R","","Reader of field `CHINT2`",null,null],[6,"CHINT3_R","","Reader of field `CHINT3`",null,null],[6,"CHINT4_R","","Reader of field `CHINT4`",null,null],[6,"CHINT5_R","","Reader of field `CHINT5`",null,null],[6,"CHINT6_R","","Reader of field `CHINT6`",null,null],[6,"CHINT7_R","","Reader of field `CHINT7`",null,null],[6,"CHINT8_R","","Reader of field `CHINT8`",null,null],[6,"CHINT9_R","","Reader of field `CHINT9`",null,null],[6,"CHINT10_R","","Reader of field `CHINT10`",null,null],[6,"CHINT11_R","","Reader of field `CHINT11`",null,null],[11,"chint0","atsamd21g::generic","Bit 0 - Channel 0 Pending Interrupt",6,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",6,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",6,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",6,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",6,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",6,[[],["chint5_r",6]]],[11,"chint6","","Bit 6 - Channel 6 Pending Interrupt",6,[[],["chint6_r",6]]],[11,"chint7","","Bit 7 - Channel 7 Pending Interrupt",6,[[],["chint7_r",6]]],[11,"chint8","","Bit 8 - Channel 8 Pending Interrupt",6,[[],["chint8_r",6]]],[11,"chint9","","Bit 9 - Channel 9 Pending Interrupt",6,[[],["chint9_r",6]]],[11,"chint10","","Bit 10 - Channel 10 Pending Interrupt",6,[[],["chint10_r",6]]],[11,"chint11","","Bit 11 - Channel 11 Pending Interrupt",6,[[],["chint11_r",6]]],[11,"chint0","atsamd21g::dmac::intstatus","Bit 0 - Channel 0 Pending Interrupt",296,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",296,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",296,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",296,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",296,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",296,[[],["chint5_r",6]]],[11,"chint6","","Bit 6 - Channel 6 Pending Interrupt",296,[[],["chint6_r",6]]],[11,"chint7","","Bit 7 - Channel 7 Pending Interrupt",296,[[],["chint7_r",6]]],[11,"chint8","","Bit 8 - Channel 8 Pending Interrupt",296,[[],["chint8_r",6]]],[11,"chint9","","Bit 9 - Channel 9 Pending Interrupt",296,[[],["chint9_r",6]]],[11,"chint10","","Bit 10 - Channel 10 Pending Interrupt",296,[[],["chint10_r",6]]],[11,"chint11","","Bit 11 - Channel 11 Pending Interrupt",296,[[],["chint11_r",6]]],[0,"busych","atsamd21g::dmac","Busy Channels",null,null],[6,"R","atsamd21g::dmac::busych","Reader of register BUSYCH",null,null],[6,"BUSYCH0_R","","Reader of field `BUSYCH0`",null,null],[6,"BUSYCH1_R","","Reader of field `BUSYCH1`",null,null],[6,"BUSYCH2_R","","Reader of field `BUSYCH2`",null,null],[6,"BUSYCH3_R","","Reader of field `BUSYCH3`",null,null],[6,"BUSYCH4_R","","Reader of field `BUSYCH4`",null,null],[6,"BUSYCH5_R","","Reader of field `BUSYCH5`",null,null],[6,"BUSYCH6_R","","Reader of field `BUSYCH6`",null,null],[6,"BUSYCH7_R","","Reader of field `BUSYCH7`",null,null],[6,"BUSYCH8_R","","Reader of field `BUSYCH8`",null,null],[6,"BUSYCH9_R","","Reader of field `BUSYCH9`",null,null],[6,"BUSYCH10_R","","Reader of field `BUSYCH10`",null,null],[6,"BUSYCH11_R","","Reader of field `BUSYCH11`",null,null],[11,"busych0","atsamd21g::generic","Bit 0 - Busy Channel 0",6,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",6,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",6,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",6,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",6,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",6,[[],["busych5_r",6]]],[11,"busych6","","Bit 6 - Busy Channel 6",6,[[],["busych6_r",6]]],[11,"busych7","","Bit 7 - Busy Channel 7",6,[[],["busych7_r",6]]],[11,"busych8","","Bit 8 - Busy Channel 8",6,[[],["busych8_r",6]]],[11,"busych9","","Bit 9 - Busy Channel 9",6,[[],["busych9_r",6]]],[11,"busych10","","Bit 10 - Busy Channel 10",6,[[],["busych10_r",6]]],[11,"busych11","","Bit 11 - Busy Channel 11",6,[[],["busych11_r",6]]],[11,"busych0","atsamd21g::dmac::busych","Bit 0 - Busy Channel 0",297,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",297,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",297,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",297,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",297,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",297,[[],["busych5_r",6]]],[11,"busych6","","Bit 6 - Busy Channel 6",297,[[],["busych6_r",6]]],[11,"busych7","","Bit 7 - Busy Channel 7",297,[[],["busych7_r",6]]],[11,"busych8","","Bit 8 - Busy Channel 8",297,[[],["busych8_r",6]]],[11,"busych9","","Bit 9 - Busy Channel 9",297,[[],["busych9_r",6]]],[11,"busych10","","Bit 10 - Busy Channel 10",297,[[],["busych10_r",6]]],[11,"busych11","","Bit 11 - Busy Channel 11",297,[[],["busych11_r",6]]],[0,"pendch","atsamd21g::dmac","Pending Channels",null,null],[6,"R","atsamd21g::dmac::pendch","Reader of register PENDCH",null,null],[6,"PENDCH0_R","","Reader of field `PENDCH0`",null,null],[6,"PENDCH1_R","","Reader of field `PENDCH1`",null,null],[6,"PENDCH2_R","","Reader of field `PENDCH2`",null,null],[6,"PENDCH3_R","","Reader of field `PENDCH3`",null,null],[6,"PENDCH4_R","","Reader of field `PENDCH4`",null,null],[6,"PENDCH5_R","","Reader of field `PENDCH5`",null,null],[6,"PENDCH6_R","","Reader of field `PENDCH6`",null,null],[6,"PENDCH7_R","","Reader of field `PENDCH7`",null,null],[6,"PENDCH8_R","","Reader of field `PENDCH8`",null,null],[6,"PENDCH9_R","","Reader of field `PENDCH9`",null,null],[6,"PENDCH10_R","","Reader of field `PENDCH10`",null,null],[6,"PENDCH11_R","","Reader of field `PENDCH11`",null,null],[11,"pendch0","atsamd21g::generic","Bit 0 - Pending Channel 0",6,[[],["pendch0_r",6]]],[11,"pendch1","","Bit 1 - Pending Channel 1",6,[[],["pendch1_r",6]]],[11,"pendch2","","Bit 2 - Pending Channel 2",6,[[],["pendch2_r",6]]],[11,"pendch3","","Bit 3 - Pending Channel 3",6,[[],["pendch3_r",6]]],[11,"pendch4","","Bit 4 - Pending Channel 4",6,[[],["pendch4_r",6]]],[11,"pendch5","","Bit 5 - Pending Channel 5",6,[[],["pendch5_r",6]]],[11,"pendch6","","Bit 6 - Pending Channel 6",6,[[],["pendch6_r",6]]],[11,"pendch7","","Bit 7 - Pending Channel 7",6,[[],["pendch7_r",6]]],[11,"pendch8","","Bit 8 - Pending Channel 8",6,[[],["pendch8_r",6]]],[11,"pendch9","","Bit 9 - Pending Channel 9",6,[[],["pendch9_r",6]]],[11,"pendch10","","Bit 10 - Pending Channel 10",6,[[],["pendch10_r",6]]],[11,"pendch11","","Bit 11 - Pending Channel 11",6,[[],["pendch11_r",6]]],[11,"pendch0","atsamd21g::dmac::pendch","Bit 0 - Pending Channel 0",298,[[],["pendch0_r",6]]],[11,"pendch1","","Bit 1 - Pending Channel 1",298,[[],["pendch1_r",6]]],[11,"pendch2","","Bit 2 - Pending Channel 2",298,[[],["pendch2_r",6]]],[11,"pendch3","","Bit 3 - Pending Channel 3",298,[[],["pendch3_r",6]]],[11,"pendch4","","Bit 4 - Pending Channel 4",298,[[],["pendch4_r",6]]],[11,"pendch5","","Bit 5 - Pending Channel 5",298,[[],["pendch5_r",6]]],[11,"pendch6","","Bit 6 - Pending Channel 6",298,[[],["pendch6_r",6]]],[11,"pendch7","","Bit 7 - Pending Channel 7",298,[[],["pendch7_r",6]]],[11,"pendch8","","Bit 8 - Pending Channel 8",298,[[],["pendch8_r",6]]],[11,"pendch9","","Bit 9 - Pending Channel 9",298,[[],["pendch9_r",6]]],[11,"pendch10","","Bit 10 - Pending Channel 10",298,[[],["pendch10_r",6]]],[11,"pendch11","","Bit 11 - Pending Channel 11",298,[[],["pendch11_r",6]]],[0,"active","atsamd21g::dmac","Active Channel and Levels",null,null],[6,"R","atsamd21g::dmac::active","Reader of register ACTIVE",null,null],[6,"LVLEX0_R","","Reader of field `LVLEX0`",null,null],[6,"LVLEX1_R","","Reader of field `LVLEX1`",null,null],[6,"LVLEX2_R","","Reader of field `LVLEX2`",null,null],[6,"LVLEX3_R","","Reader of field `LVLEX3`",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"ABUSY_R","","Reader of field `ABUSY`",null,null],[6,"BTCNT_R","","Reader of field `BTCNT`",null,null],[11,"lvlex0","atsamd21g::generic","Bit 0 - Level 0 Channel Trigger Request Executing",6,[[],["lvlex0_r",6]]],[11,"lvlex1","","Bit 1 - Level 1 Channel Trigger Request Executing",6,[[],["lvlex1_r",6]]],[11,"lvlex2","","Bit 2 - Level 2 Channel Trigger Request Executing",6,[[],["lvlex2_r",6]]],[11,"lvlex3","","Bit 3 - Level 3 Channel Trigger Request Executing",6,[[],["lvlex3_r",6]]],[11,"id","","Bits 8:12 - Active Channel ID",6,[[],["id_r",6]]],[11,"abusy","","Bit 15 - Active Channel Busy",6,[[],["abusy_r",6]]],[11,"btcnt","","Bits 16:31 - Active Channel Block Transfer Count",6,[[],["btcnt_r",6]]],[11,"lvlex0","atsamd21g::dmac::active","Bit 0 - Level 0 Channel Trigger Request Executing",299,[[],["lvlex0_r",6]]],[11,"lvlex1","","Bit 1 - Level 1 Channel Trigger Request Executing",299,[[],["lvlex1_r",6]]],[11,"lvlex2","","Bit 2 - Level 2 Channel Trigger Request Executing",299,[[],["lvlex2_r",6]]],[11,"lvlex3","","Bit 3 - Level 3 Channel Trigger Request Executing",299,[[],["lvlex3_r",6]]],[11,"id","","Bits 8:12 - Active Channel ID",299,[[],["id_r",6]]],[11,"abusy","","Bit 15 - Active Channel Busy",299,[[],["abusy_r",6]]],[11,"btcnt","","Bits 16:31 - Active Channel Block Transfer Count",299,[[],["btcnt_r",6]]],[0,"baseaddr","atsamd21g::dmac","Descriptor Memory Section Base Address",null,null],[3,"BASEADDR_W","atsamd21g::dmac::baseaddr","Write proxy for field `BASEADDR`",null,null],[6,"R","","Reader of register BASEADDR",null,null],[6,"W","","Writer for register BASEADDR",null,null],[6,"BASEADDR_R","","Reader of field `BASEADDR`",null,null],[11,"bits","","Writes raw bits to the field",300,[[],["w",6]]],[11,"baseaddr","atsamd21g::generic","Bits 0:31 - Descriptor Memory Base Address",6,[[],["baseaddr_r",6]]],[11,"baseaddr","atsamd21g::dmac::baseaddr","Bits 0:31 - Descriptor Memory Base Address",301,[[],["baseaddr_r",6]]],[11,"baseaddr","atsamd21g::generic","Bits 0:31 - Descriptor Memory Base Address",7,[[],["baseaddr_w",3]]],[11,"baseaddr","atsamd21g::dmac::baseaddr","Bits 0:31 - Descriptor Memory Base Address",302,[[],["baseaddr_w",3]]],[0,"wrbaddr","atsamd21g::dmac","Write-Back Memory Section Base Address",null,null],[3,"WRBADDR_W","atsamd21g::dmac::wrbaddr","Write proxy for field `WRBADDR`",null,null],[6,"R","","Reader of register WRBADDR",null,null],[6,"W","","Writer for register WRBADDR",null,null],[6,"WRBADDR_R","","Reader of field `WRBADDR`",null,null],[11,"bits","","Writes raw bits to the field",303,[[],["w",6]]],[11,"wrbaddr","atsamd21g::generic","Bits 0:31 - Write-Back Memory Base Address",6,[[],["wrbaddr_r",6]]],[11,"wrbaddr","atsamd21g::dmac::wrbaddr","Bits 0:31 - Write-Back Memory Base Address",304,[[],["wrbaddr_r",6]]],[11,"wrbaddr","atsamd21g::generic","Bits 0:31 - Write-Back Memory Base Address",7,[[],["wrbaddr_w",3]]],[11,"wrbaddr","atsamd21g::dmac::wrbaddr","Bits 0:31 - Write-Back Memory Base Address",305,[[],["wrbaddr_w",3]]],[0,"chid","atsamd21g::dmac","Channel ID",null,null],[3,"ID_W","atsamd21g::dmac::chid","Write proxy for field `ID`",null,null],[6,"R","","Reader of register CHID",null,null],[6,"W","","Writer for register CHID",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[11,"bits","","Writes raw bits to the field",306,[[],["w",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Channel ID",6,[[],["id_r",6]]],[11,"id","atsamd21g::dmac::chid","Bits 0:3 - Channel ID",307,[[],["id_r",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Channel ID",7,[[],["id_w",3]]],[11,"id","atsamd21g::dmac::chid","Bits 0:3 - Channel ID",308,[[],["id_w",3]]],[0,"chctrla","atsamd21g::dmac","Channel Control A",null,null],[3,"SWRST_W","atsamd21g::dmac::chctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CHCTRLA",null,null],[6,"W","","Writer for register CHCTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",310,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",310,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",310,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Channel Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Channel Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd21g::dmac::chctrla","Bit 0 - Channel Software Reset",311,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Channel Enable",311,[[],["enable_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Channel Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Channel Enable",7,[[],["enable_w",3]]],[11,"swrst","atsamd21g::dmac::chctrla","Bit 0 - Channel Software Reset",312,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Channel Enable",312,[[],["enable_w",3]]],[0,"chctrlb","atsamd21g::dmac","Channel Control B",null,null],[3,"EVACT_W","atsamd21g::dmac::chctrlb","Write proxy for field `EVACT`",null,null],[3,"EVIE_W","","Write proxy for field `EVIE`",null,null],[3,"EVOE_W","","Write proxy for field `EVOE`",null,null],[3,"LVL_W","","Write proxy for field `LVL`",null,null],[3,"TRIGSRC_W","","Write proxy for field `TRIGSRC`",null,null],[3,"TRIGACT_W","","Write proxy for field `TRIGACT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"EVACT_A","","Event Input Action",null,null],[13,"NOACT","","0: No action",313,null],[13,"TRIG","","1: Transfer and periodic transfer trigger",313,null],[13,"CTRIG","","2: Conditional transfer trigger",313,null],[13,"CBLOCK","","3: Conditional block transfer",313,null],[13,"SUSPEND","","4: Channel suspend operation",313,null],[13,"RESUME","","5: Channel resume operation",313,null],[13,"SSKIP","","6: Skip next block suspend action",313,null],[4,"LVL_A","","Channel Arbitration Level",null,null],[13,"LVL0","","0: Channel Priority Level 0",314,null],[13,"LVL1","","1: Channel Priority Level 1",314,null],[13,"LVL2","","2: Channel Priority Level 2",314,null],[13,"LVL3","","3: Channel Priority Level 3",314,null],[4,"TRIGSRC_A","","Trigger Source",null,null],[13,"DISABLE","","0: Only software/event triggers",315,null],[13,"SERCOM0_RX","","1: SERCOM0 RX Trigger",315,null],[13,"SERCOM0_TX","","2: SERCOM0 TX Trigger",315,null],[13,"SERCOM1_RX","","3: SERCOM1 RX Trigger",315,null],[13,"SERCOM1_TX","","4: SERCOM1 TX Trigger",315,null],[13,"SERCOM2_RX","","5: SERCOM2 RX Trigger",315,null],[13,"SERCOM2_TX","","6: SERCOM2 TX Trigger",315,null],[13,"SERCOM3_RX","","7: SERCOM3 RX Trigger",315,null],[13,"SERCOM3_TX","","8: SERCOM3 TX Trigger",315,null],[13,"SERCOM4_RX","","9: SERCOM4 RX Trigger",315,null],[13,"SERCOM4_TX","","10: SERCOM4 TX Trigger",315,null],[13,"SERCOM5_RX","","11: SERCOM5 RX Trigger",315,null],[13,"SERCOM5_TX","","12: SERCOM5 TX Trigger",315,null],[13,"TCC0_OVF","","13: TCC0 Overflow Trigger",315,null],[13,"TCC0_MC0","","14: TCC0 Match/Compare 0 Trigger",315,null],[13,"TCC0_MC1","","15: TCC0 Match/Compare 1 Trigger",315,null],[13,"TCC0_MC2","","16: TCC0 Match/Compare 2 Trigger",315,null],[13,"TCC0_MC3","","17: TCC0 Match/Compare 3 Trigger",315,null],[13,"TCC1_OVF","","18: TCC1 Overflow Trigger",315,null],[13,"TCC1_MC0","","19: TCC1 Match/Compare 0 Trigger",315,null],[13,"TCC1_MC1","","20: TCC1 Match/Compare 1 Trigger",315,null],[13,"TCC2_OVF","","21: TCC2 Overflow Trigger",315,null],[13,"TCC2_MC0","","22: TCC2 Match/Compare 0 Trigger",315,null],[13,"TCC2_MC1","","23: TCC2 Match/Compare 1 Trigger",315,null],[13,"TC3_OVF","","24: TC3 Overflow Trigger",315,null],[13,"TC3_MC0","","25: TC3 Match/Compare 0 Trigger",315,null],[13,"TC3_MC1","","26: TC3 Match/Compare 1 Trigger",315,null],[13,"TC4_OVF","","27: TC4 Overflow Trigger",315,null],[13,"TC4_MC0","","28: TC4 Match/Compare 0 Trigger",315,null],[13,"TC4_MC1","","29: TC4 Match/Compare 1 Trigger",315,null],[13,"TC5_OVF","","30: TC5 Overflow Trigger",315,null],[13,"TC5_MC0","","31: TC5 Match/Compare 0 Trigger",315,null],[13,"TC5_MC1","","32: TC5 Match/Compare 1 Trigger",315,null],[13,"TC6_OVF","","33: TC6 Overflow Trigger",315,null],[13,"TC6_MC0","","34: TC6 Match/Compare 0 Trigger",315,null],[13,"TC6_MC1","","35: TC6 Match/Compare 1 Trigger",315,null],[13,"TC7_OVF","","36: TC7 Overflow Trigger",315,null],[13,"TC7_MC0","","37: TC7 Match/Compare 0 Trigger",315,null],[13,"TC7_MC1","","38: TC7 Match/Compare 1 Trigger",315,null],[13,"ADC_RESRDY","","39: ADC Result Ready Trigger",315,null],[13,"DAC_EMPTY","","40: DAC Empty Trigger",315,null],[13,"I2S_RX_0","","41: I2S RX 0 Trigger",315,null],[13,"I2S_RX_1","","42: I2S RX 1 Trigger",315,null],[13,"I2S_TX_0","","43: I2S TX 0 Trigger",315,null],[13,"I2S_TX_1","","44: I2S TX 1 Trigger",315,null],[13,"TCC3_OVF","","45: TCC3 Overflow Trigger",315,null],[13,"TCC3_MC0","","46: TCC3 Match/Compare 0 Trigger",315,null],[13,"TCC3_MC1","","47: TCC3 Match/Compare 1 Trigger",315,null],[13,"TCC3_MC2","","48: Match/Compare 2 Trigger",315,null],[13,"TCC3_MC3","","49: Match/Compare 3 Trigger",315,null],[4,"TRIGACT_A","","Trigger Action",null,null],[13,"BLOCK","","0: One trigger required for each block transfer",316,null],[13,"BEAT","","2: One trigger required for each beat transfer",316,null],[13,"TRANSACTION","","3: One trigger required for each transaction",316,null],[4,"CMD_A","","Software Command",null,null],[13,"NOACT","","0: No action",317,null],[13,"SUSPEND","","1: Channel suspend operation",317,null],[13,"RESUME","","2: Channel resume operation",317,null],[6,"R","","Reader of register CHCTRLB",null,null],[6,"W","","Writer for register CHCTRLB",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"EVIE_R","","Reader of field `EVIE`",null,null],[6,"EVOE_R","","Reader of field `EVOE`",null,null],[6,"LVL_R","","Reader of field `LVL`",null,null],[6,"TRIGSRC_R","","Reader of field `TRIGSRC`",null,null],[6,"TRIGACT_R","","Reader of field `TRIGACT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["evact_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_trig","","Checks if the value of the field is `TRIG`",6,[[]]],[11,"is_ctrig","","Checks if the value of the field is `CTRIG`",6,[[]]],[11,"is_cblock","","Checks if the value of the field is `CBLOCK`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"is_sskip","","Checks if the value of the field is `SSKIP`",6,[[]]],[11,"variant","atsamd21g::dmac::chctrlb","Get enumerated values variant",318,[[],[["variant",4],["evact_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",318,[[]]],[11,"is_trig","","Checks if the value of the field is `TRIG`",318,[[]]],[11,"is_ctrig","","Checks if the value of the field is `CTRIG`",318,[[]]],[11,"is_cblock","","Checks if the value of the field is `CBLOCK`",318,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",318,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",318,[[]]],[11,"is_sskip","","Checks if the value of the field is `SSKIP`",318,[[]]],[11,"variant","","Writes `variant` to the field",319,[[["evact_a",4]],["w",6]]],[11,"noact","","No action",319,[[],["w",6]]],[11,"trig","","Transfer and periodic transfer trigger",319,[[],["w",6]]],[11,"ctrig","","Conditional transfer trigger",319,[[],["w",6]]],[11,"cblock","","Conditional block transfer",319,[[],["w",6]]],[11,"suspend","","Channel suspend operation",319,[[],["w",6]]],[11,"resume","","Channel resume operation",319,[[],["w",6]]],[11,"sskip","","Skip next block suspend action",319,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",319,[[],["w",6]]],[11,"set_bit","","Sets the field bit",320,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",320,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",321,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",321,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",321,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["lvl_a",4]]],[11,"is_lvl0","","Checks if the value of the field is `LVL0`",6,[[]]],[11,"is_lvl1","","Checks if the value of the field is `LVL1`",6,[[]]],[11,"is_lvl2","","Checks if the value of the field is `LVL2`",6,[[]]],[11,"is_lvl3","","Checks if the value of the field is `LVL3`",6,[[]]],[11,"variant","atsamd21g::dmac::chctrlb","Get enumerated values variant",322,[[],["lvl_a",4]]],[11,"is_lvl0","","Checks if the value of the field is `LVL0`",322,[[]]],[11,"is_lvl1","","Checks if the value of the field is `LVL1`",322,[[]]],[11,"is_lvl2","","Checks if the value of the field is `LVL2`",322,[[]]],[11,"is_lvl3","","Checks if the value of the field is `LVL3`",322,[[]]],[11,"variant","","Writes `variant` to the field",323,[[["lvl_a",4]],["w",6]]],[11,"lvl0","","Channel Priority Level 0",323,[[],["w",6]]],[11,"lvl1","","Channel Priority Level 1",323,[[],["w",6]]],[11,"lvl2","","Channel Priority Level 2",323,[[],["w",6]]],[11,"lvl3","","Channel Priority Level 3",323,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",323,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["trigsrc_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_sercom0_rx","","Checks if the value of the field is `SERCOM0_RX`",6,[[]]],[11,"is_sercom0_tx","","Checks if the value of the field is `SERCOM0_TX`",6,[[]]],[11,"is_sercom1_rx","","Checks if the value of the field is `SERCOM1_RX`",6,[[]]],[11,"is_sercom1_tx","","Checks if the value of the field is `SERCOM1_TX`",6,[[]]],[11,"is_sercom2_rx","","Checks if the value of the field is `SERCOM2_RX`",6,[[]]],[11,"is_sercom2_tx","","Checks if the value of the field is `SERCOM2_TX`",6,[[]]],[11,"is_sercom3_rx","","Checks if the value of the field is `SERCOM3_RX`",6,[[]]],[11,"is_sercom3_tx","","Checks if the value of the field is `SERCOM3_TX`",6,[[]]],[11,"is_sercom4_rx","","Checks if the value of the field is `SERCOM4_RX`",6,[[]]],[11,"is_sercom4_tx","","Checks if the value of the field is `SERCOM4_TX`",6,[[]]],[11,"is_sercom5_rx","","Checks if the value of the field is `SERCOM5_RX`",6,[[]]],[11,"is_sercom5_tx","","Checks if the value of the field is `SERCOM5_TX`",6,[[]]],[11,"is_tcc0_ovf","","Checks if the value of the field is `TCC0_OVF`",6,[[]]],[11,"is_tcc0_mc0","","Checks if the value of the field is `TCC0_MC0`",6,[[]]],[11,"is_tcc0_mc1","","Checks if the value of the field is `TCC0_MC1`",6,[[]]],[11,"is_tcc0_mc2","","Checks if the value of the field is `TCC0_MC2`",6,[[]]],[11,"is_tcc0_mc3","","Checks if the value of the field is `TCC0_MC3`",6,[[]]],[11,"is_tcc1_ovf","","Checks if the value of the field is `TCC1_OVF`",6,[[]]],[11,"is_tcc1_mc0","","Checks if the value of the field is `TCC1_MC0`",6,[[]]],[11,"is_tcc1_mc1","","Checks if the value of the field is `TCC1_MC1`",6,[[]]],[11,"is_tcc2_ovf","","Checks if the value of the field is `TCC2_OVF`",6,[[]]],[11,"is_tcc2_mc0","","Checks if the value of the field is `TCC2_MC0`",6,[[]]],[11,"is_tcc2_mc1","","Checks if the value of the field is `TCC2_MC1`",6,[[]]],[11,"is_tc3_ovf","","Checks if the value of the field is `TC3_OVF`",6,[[]]],[11,"is_tc3_mc0","","Checks if the value of the field is `TC3_MC0`",6,[[]]],[11,"is_tc3_mc1","","Checks if the value of the field is `TC3_MC1`",6,[[]]],[11,"is_tc4_ovf","","Checks if the value of the field is `TC4_OVF`",6,[[]]],[11,"is_tc4_mc0","","Checks if the value of the field is `TC4_MC0`",6,[[]]],[11,"is_tc4_mc1","","Checks if the value of the field is `TC4_MC1`",6,[[]]],[11,"is_tc5_ovf","","Checks if the value of the field is `TC5_OVF`",6,[[]]],[11,"is_tc5_mc0","","Checks if the value of the field is `TC5_MC0`",6,[[]]],[11,"is_tc5_mc1","","Checks if the value of the field is `TC5_MC1`",6,[[]]],[11,"is_tc6_ovf","","Checks if the value of the field is `TC6_OVF`",6,[[]]],[11,"is_tc6_mc0","","Checks if the value of the field is `TC6_MC0`",6,[[]]],[11,"is_tc6_mc1","","Checks if the value of the field is `TC6_MC1`",6,[[]]],[11,"is_tc7_ovf","","Checks if the value of the field is `TC7_OVF`",6,[[]]],[11,"is_tc7_mc0","","Checks if the value of the field is `TC7_MC0`",6,[[]]],[11,"is_tc7_mc1","","Checks if the value of the field is `TC7_MC1`",6,[[]]],[11,"is_adc_resrdy","","Checks if the value of the field is `ADC_RESRDY`",6,[[]]],[11,"is_dac_empty","","Checks if the value of the field is `DAC_EMPTY`",6,[[]]],[11,"is_i2s_rx_0","","Checks if the value of the field is `I2S_RX_0`",6,[[]]],[11,"is_i2s_rx_1","","Checks if the value of the field is `I2S_RX_1`",6,[[]]],[11,"is_i2s_tx_0","","Checks if the value of the field is `I2S_TX_0`",6,[[]]],[11,"is_i2s_tx_1","","Checks if the value of the field is `I2S_TX_1`",6,[[]]],[11,"is_tcc3_ovf","","Checks if the value of the field is `TCC3_OVF`",6,[[]]],[11,"is_tcc3_mc0","","Checks if the value of the field is `TCC3_MC0`",6,[[]]],[11,"is_tcc3_mc1","","Checks if the value of the field is `TCC3_MC1`",6,[[]]],[11,"is_tcc3_mc2","","Checks if the value of the field is `TCC3_MC2`",6,[[]]],[11,"is_tcc3_mc3","","Checks if the value of the field is `TCC3_MC3`",6,[[]]],[11,"variant","atsamd21g::dmac::chctrlb","Get enumerated values variant",324,[[],[["trigsrc_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",324,[[]]],[11,"is_sercom0_rx","","Checks if the value of the field is `SERCOM0_RX`",324,[[]]],[11,"is_sercom0_tx","","Checks if the value of the field is `SERCOM0_TX`",324,[[]]],[11,"is_sercom1_rx","","Checks if the value of the field is `SERCOM1_RX`",324,[[]]],[11,"is_sercom1_tx","","Checks if the value of the field is `SERCOM1_TX`",324,[[]]],[11,"is_sercom2_rx","","Checks if the value of the field is `SERCOM2_RX`",324,[[]]],[11,"is_sercom2_tx","","Checks if the value of the field is `SERCOM2_TX`",324,[[]]],[11,"is_sercom3_rx","","Checks if the value of the field is `SERCOM3_RX`",324,[[]]],[11,"is_sercom3_tx","","Checks if the value of the field is `SERCOM3_TX`",324,[[]]],[11,"is_sercom4_rx","","Checks if the value of the field is `SERCOM4_RX`",324,[[]]],[11,"is_sercom4_tx","","Checks if the value of the field is `SERCOM4_TX`",324,[[]]],[11,"is_sercom5_rx","","Checks if the value of the field is `SERCOM5_RX`",324,[[]]],[11,"is_sercom5_tx","","Checks if the value of the field is `SERCOM5_TX`",324,[[]]],[11,"is_tcc0_ovf","","Checks if the value of the field is `TCC0_OVF`",324,[[]]],[11,"is_tcc0_mc0","","Checks if the value of the field is `TCC0_MC0`",324,[[]]],[11,"is_tcc0_mc1","","Checks if the value of the field is `TCC0_MC1`",324,[[]]],[11,"is_tcc0_mc2","","Checks if the value of the field is `TCC0_MC2`",324,[[]]],[11,"is_tcc0_mc3","","Checks if the value of the field is `TCC0_MC3`",324,[[]]],[11,"is_tcc1_ovf","","Checks if the value of the field is `TCC1_OVF`",324,[[]]],[11,"is_tcc1_mc0","","Checks if the value of the field is `TCC1_MC0`",324,[[]]],[11,"is_tcc1_mc1","","Checks if the value of the field is `TCC1_MC1`",324,[[]]],[11,"is_tcc2_ovf","","Checks if the value of the field is `TCC2_OVF`",324,[[]]],[11,"is_tcc2_mc0","","Checks if the value of the field is `TCC2_MC0`",324,[[]]],[11,"is_tcc2_mc1","","Checks if the value of the field is `TCC2_MC1`",324,[[]]],[11,"is_tc3_ovf","","Checks if the value of the field is `TC3_OVF`",324,[[]]],[11,"is_tc3_mc0","","Checks if the value of the field is `TC3_MC0`",324,[[]]],[11,"is_tc3_mc1","","Checks if the value of the field is `TC3_MC1`",324,[[]]],[11,"is_tc4_ovf","","Checks if the value of the field is `TC4_OVF`",324,[[]]],[11,"is_tc4_mc0","","Checks if the value of the field is `TC4_MC0`",324,[[]]],[11,"is_tc4_mc1","","Checks if the value of the field is `TC4_MC1`",324,[[]]],[11,"is_tc5_ovf","","Checks if the value of the field is `TC5_OVF`",324,[[]]],[11,"is_tc5_mc0","","Checks if the value of the field is `TC5_MC0`",324,[[]]],[11,"is_tc5_mc1","","Checks if the value of the field is `TC5_MC1`",324,[[]]],[11,"is_tc6_ovf","","Checks if the value of the field is `TC6_OVF`",324,[[]]],[11,"is_tc6_mc0","","Checks if the value of the field is `TC6_MC0`",324,[[]]],[11,"is_tc6_mc1","","Checks if the value of the field is `TC6_MC1`",324,[[]]],[11,"is_tc7_ovf","","Checks if the value of the field is `TC7_OVF`",324,[[]]],[11,"is_tc7_mc0","","Checks if the value of the field is `TC7_MC0`",324,[[]]],[11,"is_tc7_mc1","","Checks if the value of the field is `TC7_MC1`",324,[[]]],[11,"is_adc_resrdy","","Checks if the value of the field is `ADC_RESRDY`",324,[[]]],[11,"is_dac_empty","","Checks if the value of the field is `DAC_EMPTY`",324,[[]]],[11,"is_i2s_rx_0","","Checks if the value of the field is `I2S_RX_0`",324,[[]]],[11,"is_i2s_rx_1","","Checks if the value of the field is `I2S_RX_1`",324,[[]]],[11,"is_i2s_tx_0","","Checks if the value of the field is `I2S_TX_0`",324,[[]]],[11,"is_i2s_tx_1","","Checks if the value of the field is `I2S_TX_1`",324,[[]]],[11,"is_tcc3_ovf","","Checks if the value of the field is `TCC3_OVF`",324,[[]]],[11,"is_tcc3_mc0","","Checks if the value of the field is `TCC3_MC0`",324,[[]]],[11,"is_tcc3_mc1","","Checks if the value of the field is `TCC3_MC1`",324,[[]]],[11,"is_tcc3_mc2","","Checks if the value of the field is `TCC3_MC2`",324,[[]]],[11,"is_tcc3_mc3","","Checks if the value of the field is `TCC3_MC3`",324,[[]]],[11,"variant","","Writes `variant` to the field",325,[[["trigsrc_a",4]],["w",6]]],[11,"disable","","Only software/event triggers",325,[[],["w",6]]],[11,"sercom0_rx","","SERCOM0 RX Trigger",325,[[],["w",6]]],[11,"sercom0_tx","","SERCOM0 TX Trigger",325,[[],["w",6]]],[11,"sercom1_rx","","SERCOM1 RX Trigger",325,[[],["w",6]]],[11,"sercom1_tx","","SERCOM1 TX Trigger",325,[[],["w",6]]],[11,"sercom2_rx","","SERCOM2 RX Trigger",325,[[],["w",6]]],[11,"sercom2_tx","","SERCOM2 TX Trigger",325,[[],["w",6]]],[11,"sercom3_rx","","SERCOM3 RX Trigger",325,[[],["w",6]]],[11,"sercom3_tx","","SERCOM3 TX Trigger",325,[[],["w",6]]],[11,"sercom4_rx","","SERCOM4 RX Trigger",325,[[],["w",6]]],[11,"sercom4_tx","","SERCOM4 TX Trigger",325,[[],["w",6]]],[11,"sercom5_rx","","SERCOM5 RX Trigger",325,[[],["w",6]]],[11,"sercom5_tx","","SERCOM5 TX Trigger",325,[[],["w",6]]],[11,"tcc0_ovf","","TCC0 Overflow Trigger",325,[[],["w",6]]],[11,"tcc0_mc0","","TCC0 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tcc0_mc1","","TCC0 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tcc0_mc2","","TCC0 Match/Compare 2 Trigger",325,[[],["w",6]]],[11,"tcc0_mc3","","TCC0 Match/Compare 3 Trigger",325,[[],["w",6]]],[11,"tcc1_ovf","","TCC1 Overflow Trigger",325,[[],["w",6]]],[11,"tcc1_mc0","","TCC1 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tcc1_mc1","","TCC1 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tcc2_ovf","","TCC2 Overflow Trigger",325,[[],["w",6]]],[11,"tcc2_mc0","","TCC2 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tcc2_mc1","","TCC2 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tc3_ovf","","TC3 Overflow Trigger",325,[[],["w",6]]],[11,"tc3_mc0","","TC3 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tc3_mc1","","TC3 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tc4_ovf","","TC4 Overflow Trigger",325,[[],["w",6]]],[11,"tc4_mc0","","TC4 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tc4_mc1","","TC4 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tc5_ovf","","TC5 Overflow Trigger",325,[[],["w",6]]],[11,"tc5_mc0","","TC5 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tc5_mc1","","TC5 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tc6_ovf","","TC6 Overflow Trigger",325,[[],["w",6]]],[11,"tc6_mc0","","TC6 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tc6_mc1","","TC6 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tc7_ovf","","TC7 Overflow Trigger",325,[[],["w",6]]],[11,"tc7_mc0","","TC7 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tc7_mc1","","TC7 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"adc_resrdy","","ADC Result Ready Trigger",325,[[],["w",6]]],[11,"dac_empty","","DAC Empty Trigger",325,[[],["w",6]]],[11,"i2s_rx_0","","I2S RX 0 Trigger",325,[[],["w",6]]],[11,"i2s_rx_1","","I2S RX 1 Trigger",325,[[],["w",6]]],[11,"i2s_tx_0","","I2S TX 0 Trigger",325,[[],["w",6]]],[11,"i2s_tx_1","","I2S TX 1 Trigger",325,[[],["w",6]]],[11,"tcc3_ovf","","TCC3 Overflow Trigger",325,[[],["w",6]]],[11,"tcc3_mc0","","TCC3 Match/Compare 0 Trigger",325,[[],["w",6]]],[11,"tcc3_mc1","","TCC3 Match/Compare 1 Trigger",325,[[],["w",6]]],[11,"tcc3_mc2","","Match/Compare 2 Trigger",325,[[],["w",6]]],[11,"tcc3_mc3","","Match/Compare 3 Trigger",325,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",325,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["trigact_a",4]]]],[11,"is_block","","Checks if the value of the field is `BLOCK`",6,[[]]],[11,"is_beat","","Checks if the value of the field is `BEAT`",6,[[]]],[11,"is_transaction","","Checks if the value of the field is `TRANSACTION`",6,[[]]],[11,"variant","atsamd21g::dmac::chctrlb","Get enumerated values variant",326,[[],[["variant",4],["trigact_a",4]]]],[11,"is_block","","Checks if the value of the field is `BLOCK`",326,[[]]],[11,"is_beat","","Checks if the value of the field is `BEAT`",326,[[]]],[11,"is_transaction","","Checks if the value of the field is `TRANSACTION`",326,[[]]],[11,"variant","","Writes `variant` to the field",327,[[["trigact_a",4]],["w",6]]],[11,"block","","One trigger required for each block transfer",327,[[],["w",6]]],[11,"beat","","One trigger required for each beat transfer",327,[[],["w",6]]],[11,"transaction","","One trigger required for each transaction",327,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",327,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"variant","atsamd21g::dmac::chctrlb","Get enumerated values variant",328,[[],[["variant",4],["cmd_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",328,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",328,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",328,[[]]],[11,"variant","","Writes `variant` to the field",329,[[["cmd_a",4]],["w",6]]],[11,"noact","","No action",329,[[],["w",6]]],[11,"suspend","","Channel suspend operation",329,[[],["w",6]]],[11,"resume","","Channel resume operation",329,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",329,[[],["w",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Input Action",6,[[],["evact_r",6]]],[11,"evie","","Bit 3 - Channel Event Input Enable",6,[[],["evie_r",6]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",6,[[],["evoe_r",6]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",6,[[],["lvl_r",6]]],[11,"trigsrc","","Bits 8:13 - Trigger Source",6,[[],["trigsrc_r",6]]],[11,"trigact","","Bits 22:23 - Trigger Action",6,[[],["trigact_r",6]]],[11,"cmd","","Bits 24:25 - Software Command",6,[[],["cmd_r",6]]],[11,"evact","atsamd21g::dmac::chctrlb","Bits 0:2 - Event Input Action",330,[[],["evact_r",6]]],[11,"evie","","Bit 3 - Channel Event Input Enable",330,[[],["evie_r",6]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",330,[[],["evoe_r",6]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",330,[[],["lvl_r",6]]],[11,"trigsrc","","Bits 8:13 - Trigger Source",330,[[],["trigsrc_r",6]]],[11,"trigact","","Bits 22:23 - Trigger Action",330,[[],["trigact_r",6]]],[11,"cmd","","Bits 24:25 - Software Command",330,[[],["cmd_r",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Input Action",7,[[],["evact_w",3]]],[11,"evie","","Bit 3 - Channel Event Input Enable",7,[[],["evie_w",3]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",7,[[],["evoe_w",3]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",7,[[],["lvl_w",3]]],[11,"trigsrc","","Bits 8:13 - Trigger Source",7,[[],["trigsrc_w",3]]],[11,"trigact","","Bits 22:23 - Trigger Action",7,[[],["trigact_w",3]]],[11,"cmd","","Bits 24:25 - Software Command",7,[[],["cmd_w",3]]],[11,"evact","atsamd21g::dmac::chctrlb","Bits 0:2 - Event Input Action",331,[[],["evact_w",3]]],[11,"evie","","Bit 3 - Channel Event Input Enable",331,[[],["evie_w",3]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",331,[[],["evoe_w",3]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",331,[[],["lvl_w",3]]],[11,"trigsrc","","Bits 8:13 - Trigger Source",331,[[],["trigsrc_w",3]]],[11,"trigact","","Bits 22:23 - Trigger Action",331,[[],["trigact_w",3]]],[11,"cmd","","Bits 24:25 - Software Command",331,[[],["cmd_w",3]]],[0,"chintenclr","atsamd21g::dmac","Channel Interrupt Enable Clear",null,null],[3,"TERR_W","atsamd21g::dmac::chintenclr","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTENCLR",null,null],[6,"W","","Writer for register CHINTENCLR",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",332,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",332,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",332,[[],["w",6]]],[11,"set_bit","","Sets the field bit",333,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",333,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",333,[[],["w",6]]],[11,"set_bit","","Sets the field bit",334,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",334,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",334,[[],["w",6]]],[11,"terr","atsamd21g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",6,[[],["susp_r",6]]],[11,"terr","atsamd21g::dmac::chintenclr","Bit 0 - Channel Transfer Error Interrupt Enable",335,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",335,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",335,[[],["susp_r",6]]],[11,"terr","atsamd21g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",7,[[],["susp_w",3]]],[11,"terr","atsamd21g::dmac::chintenclr","Bit 0 - Channel Transfer Error Interrupt Enable",336,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",336,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",336,[[],["susp_w",3]]],[0,"chintenset","atsamd21g::dmac","Channel Interrupt Enable Set",null,null],[3,"TERR_W","atsamd21g::dmac::chintenset","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTENSET",null,null],[6,"W","","Writer for register CHINTENSET",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",337,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",337,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",337,[[],["w",6]]],[11,"set_bit","","Sets the field bit",338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",338,[[],["w",6]]],[11,"set_bit","","Sets the field bit",339,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",339,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",339,[[],["w",6]]],[11,"terr","atsamd21g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",6,[[],["susp_r",6]]],[11,"terr","atsamd21g::dmac::chintenset","Bit 0 - Channel Transfer Error Interrupt Enable",340,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",340,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",340,[[],["susp_r",6]]],[11,"terr","atsamd21g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",7,[[],["susp_w",3]]],[11,"terr","atsamd21g::dmac::chintenset","Bit 0 - Channel Transfer Error Interrupt Enable",341,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",341,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",341,[[],["susp_w",3]]],[0,"chintflag","atsamd21g::dmac","Channel Interrupt Flag Status and Clear",null,null],[3,"TERR_W","atsamd21g::dmac::chintflag","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTFLAG",null,null],[6,"W","","Writer for register CHINTFLAG",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",342,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",342,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",342,[[],["w",6]]],[11,"set_bit","","Sets the field bit",343,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",343,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",343,[[],["w",6]]],[11,"set_bit","","Sets the field bit",344,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",344,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",344,[[],["w",6]]],[11,"terr","atsamd21g::generic","Bit 0 - Channel Transfer Error",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend",6,[[],["susp_r",6]]],[11,"terr","atsamd21g::dmac::chintflag","Bit 0 - Channel Transfer Error",345,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",345,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend",345,[[],["susp_r",6]]],[11,"terr","atsamd21g::generic","Bit 0 - Channel Transfer Error",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend",7,[[],["susp_w",3]]],[11,"terr","atsamd21g::dmac::chintflag","Bit 0 - Channel Transfer Error",346,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",346,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend",346,[[],["susp_w",3]]],[0,"chstatus","atsamd21g::dmac","Channel Status",null,null],[6,"R","atsamd21g::dmac::chstatus","Reader of register CHSTATUS",null,null],[6,"PEND_R","","Reader of field `PEND`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[11,"pend","atsamd21g::generic","Bit 0 - Channel Pending",6,[[],["pend_r",6]]],[11,"busy","","Bit 1 - Channel Busy",6,[[],["busy_r",6]]],[11,"ferr","","Bit 2 - Channel Fetch Error",6,[[],["ferr_r",6]]],[11,"pend","atsamd21g::dmac::chstatus","Bit 0 - Channel Pending",347,[[],["pend_r",6]]],[11,"busy","","Bit 1 - Channel Busy",347,[[],["busy_r",6]]],[11,"ferr","","Bit 2 - Channel Fetch Error",347,[[],["ferr_r",6]]],[6,"CTRL","atsamd21g::dmac","Control",null,null],[6,"CRCCTRL","","CRC Control",null,null],[6,"CRCDATAIN","","CRC Data Input",null,null],[6,"CRCCHKSUM","","CRC Checksum",null,null],[6,"CRCSTATUS","","CRC Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"QOSCTRL","","QOS Control",null,null],[6,"SWTRIGCTRL","","Software Trigger Control",null,null],[6,"PRICTRL0","","Priority Control 0",null,null],[6,"INTPEND","","Interrupt Pending",null,null],[6,"INTSTATUS","","Interrupt Status",null,null],[6,"BUSYCH","","Busy Channels",null,null],[6,"PENDCH","","Pending Channels",null,null],[6,"ACTIVE","","Active Channel and Levels",null,null],[6,"BASEADDR","","Descriptor Memory Section Base Address",null,null],[6,"WRBADDR","","Write-Back Memory Section Base Address",null,null],[6,"CHID","","Channel ID",null,null],[6,"CHCTRLA","","Channel Control A",null,null],[6,"CHCTRLB","","Channel Control B",null,null],[6,"CHINTENCLR","","Channel Interrupt Enable Clear",null,null],[6,"CHINTENSET","","Channel Interrupt Enable Set",null,null],[6,"CHINTFLAG","","Channel Interrupt Flag Status and Clear",null,null],[6,"CHSTATUS","","Channel Status",null,null],[0,"dsu","atsamd21g","Device Service Unit",null,null],[3,"RegisterBlock","atsamd21g::dsu","Register block",null,null],[12,"ctrl","","0x00 - Control",348,null],[12,"statusa","","0x01 - Status A",348,null],[12,"statusb","","0x02 - Status B",348,null],[12,"addr","","0x04 - Address",348,null],[12,"length","","0x08 - Length",348,null],[12,"data","","0x0c - Data",348,null],[12,"dcc","","0x10 - Debug Communication Channel n",348,null],[12,"did","","0x18 - Device Identification",348,null],[12,"entry","","0x1000 - CoreSight ROM Table Entry 0",348,null],[12,"entry1","","0x1004 - CoreSight ROM Table Entry 1",348,null],[12,"end","","0x1008 - CoreSight ROM Table End",348,null],[12,"memtype","","0x1fcc - CoreSight ROM Table Memory Type",348,null],[12,"pid4","","0x1fd0 - Peripheral Identification 4",348,null],[12,"pid0","","0x1fe0 - Peripheral Identification 0",348,null],[12,"pid1","","0x1fe4 - Peripheral Identification 1",348,null],[12,"pid2","","0x1fe8 - Peripheral Identification 2",348,null],[12,"pid3","","0x1fec - Peripheral Identification 3",348,null],[12,"cid0","","0x1ff0 - Component Identification 0",348,null],[12,"cid1","","0x1ff4 - Component Identification 1",348,null],[12,"cid2","","0x1ff8 - Component Identification 2",348,null],[12,"cid3","","0x1ffc - Component Identification 3",348,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd21g::dsu::ctrl","Write proxy for field `SWRST`",null,null],[3,"CRC_W","","Write proxy for field `CRC`",null,null],[3,"MBIST_W","","Write proxy for field `MBIST`",null,null],[3,"CE_W","","Write proxy for field `CE`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",349,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",349,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",349,[[],["w",6]]],[11,"set_bit","","Sets the field bit",350,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",350,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",350,[[],["w",6]]],[11,"set_bit","","Sets the field bit",351,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",351,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",351,[[],["w",6]]],[11,"set_bit","","Sets the field bit",352,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",352,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",352,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"crc","","Bit 2 - 32-bit Cyclic Redundancy Check",7,[[],["crc_w",3]]],[11,"mbist","","Bit 3 - Memory Built-In Self-Test",7,[[],["mbist_w",3]]],[11,"ce","","Bit 4 - Chip Erase",7,[[],["ce_w",3]]],[11,"swrst","atsamd21g::dsu::ctrl","Bit 0 - Software Reset",353,[[],["swrst_w",3]]],[11,"crc","","Bit 2 - 32-bit Cyclic Redundancy Check",353,[[],["crc_w",3]]],[11,"mbist","","Bit 3 - Memory Built-In Self-Test",353,[[],["mbist_w",3]]],[11,"ce","","Bit 4 - Chip Erase",353,[[],["ce_w",3]]],[0,"statusa","atsamd21g::dsu","Status A",null,null],[3,"DONE_W","atsamd21g::dsu::statusa","Write proxy for field `DONE`",null,null],[3,"CRSTEXT_W","","Write proxy for field `CRSTEXT`",null,null],[3,"BERR_W","","Write proxy for field `BERR`",null,null],[3,"FAIL_W","","Write proxy for field `FAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[6,"R","","Reader of register STATUSA",null,null],[6,"W","","Writer for register STATUSA",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[6,"CRSTEXT_R","","Reader of field `CRSTEXT`",null,null],[6,"BERR_R","","Reader of field `BERR`",null,null],[6,"FAIL_R","","Reader of field `FAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[11,"set_bit","","Sets the field bit",354,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",354,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",354,[[],["w",6]]],[11,"set_bit","","Sets the field bit",355,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",355,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",355,[[],["w",6]]],[11,"set_bit","","Sets the field bit",356,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",356,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",356,[[],["w",6]]],[11,"set_bit","","Sets the field bit",357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",358,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",358,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",358,[[],["w",6]]],[11,"done","atsamd21g::generic","Bit 0 - Done",6,[[],["done_r",6]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",6,[[],["crstext_r",6]]],[11,"berr","","Bit 2 - Bus Error",6,[[],["berr_r",6]]],[11,"fail","","Bit 3 - Failure",6,[[],["fail_r",6]]],[11,"perr","","Bit 4 - Protection Error",6,[[],["perr_r",6]]],[11,"done","atsamd21g::dsu::statusa","Bit 0 - Done",359,[[],["done_r",6]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",359,[[],["crstext_r",6]]],[11,"berr","","Bit 2 - Bus Error",359,[[],["berr_r",6]]],[11,"fail","","Bit 3 - Failure",359,[[],["fail_r",6]]],[11,"perr","","Bit 4 - Protection Error",359,[[],["perr_r",6]]],[11,"done","atsamd21g::generic","Bit 0 - Done",7,[[],["done_w",3]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",7,[[],["crstext_w",3]]],[11,"berr","","Bit 2 - Bus Error",7,[[],["berr_w",3]]],[11,"fail","","Bit 3 - Failure",7,[[],["fail_w",3]]],[11,"perr","","Bit 4 - Protection Error",7,[[],["perr_w",3]]],[11,"done","atsamd21g::dsu::statusa","Bit 0 - Done",360,[[],["done_w",3]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",360,[[],["crstext_w",3]]],[11,"berr","","Bit 2 - Bus Error",360,[[],["berr_w",3]]],[11,"fail","","Bit 3 - Failure",360,[[],["fail_w",3]]],[11,"perr","","Bit 4 - Protection Error",360,[[],["perr_w",3]]],[0,"statusb","atsamd21g::dsu","Status B",null,null],[6,"R","atsamd21g::dsu::statusb","Reader of register STATUSB",null,null],[6,"PROT_R","","Reader of field `PROT`",null,null],[6,"DBGPRES_R","","Reader of field `DBGPRES`",null,null],[6,"DCCD0_R","","Reader of field `DCCD0`",null,null],[6,"DCCD1_R","","Reader of field `DCCD1`",null,null],[6,"HPE_R","","Reader of field `HPE`",null,null],[11,"prot","atsamd21g::generic","Bit 0 - Protected",6,[[],["prot_r",6]]],[11,"dbgpres","","Bit 1 - Debugger Present",6,[[],["dbgpres_r",6]]],[11,"dccd0","","Bit 2 - Debug Communication Channel 0 Dirty",6,[[],["dccd0_r",6]]],[11,"dccd1","","Bit 3 - Debug Communication Channel 1 Dirty",6,[[],["dccd1_r",6]]],[11,"hpe","","Bit 4 - Hot-Plugging Enable",6,[[],["hpe_r",6]]],[11,"prot","atsamd21g::dsu::statusb","Bit 0 - Protected",361,[[],["prot_r",6]]],[11,"dbgpres","","Bit 1 - Debugger Present",361,[[],["dbgpres_r",6]]],[11,"dccd0","","Bit 2 - Debug Communication Channel 0 Dirty",361,[[],["dccd0_r",6]]],[11,"dccd1","","Bit 3 - Debug Communication Channel 1 Dirty",361,[[],["dccd1_r",6]]],[11,"hpe","","Bit 4 - Hot-Plugging Enable",361,[[],["hpe_r",6]]],[0,"addr","atsamd21g::dsu","Address",null,null],[3,"ADDR_W","atsamd21g::dsu::addr","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",362,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 2:31 - Address",6,[[],["addr_r",6]]],[11,"addr","atsamd21g::dsu::addr","Bits 2:31 - Address",363,[[],["addr_r",6]]],[11,"addr","atsamd21g::generic","Bits 2:31 - Address",7,[[],["addr_w",3]]],[11,"addr","atsamd21g::dsu::addr","Bits 2:31 - Address",364,[[],["addr_w",3]]],[0,"length","atsamd21g::dsu","Length",null,null],[3,"LENGTH_W","atsamd21g::dsu::length","Write proxy for field `LENGTH`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"bits","","Writes raw bits to the field",365,[[],["w",6]]],[11,"length","atsamd21g::generic","Bits 2:31 - Length",6,[[],["length_r",6]]],[11,"length","atsamd21g::dsu::length","Bits 2:31 - Length",366,[[],["length_r",6]]],[11,"length","atsamd21g::generic","Bits 2:31 - Length",7,[[],["length_w",3]]],[11,"length","atsamd21g::dsu::length","Bits 2:31 - Length",367,[[],["length_w",3]]],[0,"data","atsamd21g::dsu","Data",null,null],[3,"DATA_W","atsamd21g::dsu::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",368,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:31 - Data",6,[[],["data_r",6]]],[11,"data","atsamd21g::dsu::data","Bits 0:31 - Data",369,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:31 - Data",7,[[],["data_w",3]]],[11,"data","atsamd21g::dsu::data","Bits 0:31 - Data",370,[[],["data_w",3]]],[0,"dcc","atsamd21g::dsu","Debug Communication Channel n",null,null],[3,"DATA_W","atsamd21g::dsu::dcc","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DCC%s",null,null],[6,"W","","Writer for register DCC%s",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",371,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:31 - Data",6,[[],["data_r",6]]],[11,"data","atsamd21g::dsu::dcc","Bits 0:31 - Data",372,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:31 - Data",7,[[],["data_w",3]]],[11,"data","atsamd21g::dsu::dcc","Bits 0:31 - Data",373,[[],["data_w",3]]],[0,"did","atsamd21g::dsu","Device Identification",null,null],[6,"R","atsamd21g::dsu::did","Reader of register DID",null,null],[6,"DEVSEL_R","","Reader of field `DEVSEL`",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[6,"DIE_R","","Reader of field `DIE`",null,null],[6,"SERIES_R","","Reader of field `SERIES`",null,null],[6,"FAMILY_R","","Reader of field `FAMILY`",null,null],[6,"PROCESSOR_R","","Reader of field `PROCESSOR`",null,null],[11,"devsel","atsamd21g::generic","Bits 0:7 - Device Select",6,[[],["devsel_r",6]]],[11,"revision","","Bits 8:11 - Revision",6,[[],["revision_r",6]]],[11,"die","","Bits 12:15 - Die Identification",6,[[],["die_r",6]]],[11,"series","","Bits 16:21 - Product Series",6,[[],["series_r",6]]],[11,"family","","Bits 23:27 - Product Family",6,[[],["family_r",6]]],[11,"processor","","Bits 28:31 - Processor",6,[[],["processor_r",6]]],[11,"devsel","atsamd21g::dsu::did","Bits 0:7 - Device Select",374,[[],["devsel_r",6]]],[11,"revision","","Bits 8:11 - Revision",374,[[],["revision_r",6]]],[11,"die","","Bits 12:15 - Die Identification",374,[[],["die_r",6]]],[11,"series","","Bits 16:21 - Product Series",374,[[],["series_r",6]]],[11,"family","","Bits 23:27 - Product Family",374,[[],["family_r",6]]],[11,"processor","","Bits 28:31 - Processor",374,[[],["processor_r",6]]],[0,"entry","atsamd21g::dsu","CoreSight ROM Table Entry 0",null,null],[6,"R","atsamd21g::dsu::entry","Reader of register ENTRY",null,null],[6,"EPRES_R","","Reader of field `EPRES`",null,null],[6,"FMT_R","","Reader of field `FMT`",null,null],[6,"ADDOFF_R","","Reader of field `ADDOFF`",null,null],[11,"epres","atsamd21g::generic","Bit 0 - Entry Present",6,[[],["epres_r",6]]],[11,"fmt","","Bit 1 - Format",6,[[],["fmt_r",6]]],[11,"addoff","","Bits 12:31 - Address Offset",6,[[],["addoff_r",6]]],[11,"epres","atsamd21g::dsu::entry","Bit 0 - Entry Present",375,[[],["epres_r",6]]],[11,"fmt","","Bit 1 - Format",375,[[],["fmt_r",6]]],[11,"addoff","","Bits 12:31 - Address Offset",375,[[],["addoff_r",6]]],[0,"entry1","atsamd21g::dsu","CoreSight ROM Table Entry 1",null,null],[6,"R","atsamd21g::dsu::entry1","Reader of register ENTRY1",null,null],[0,"end","atsamd21g::dsu","CoreSight ROM Table End",null,null],[6,"R","atsamd21g::dsu::end","Reader of register END",null,null],[6,"END_R","","Reader of field `END`",null,null],[11,"end","atsamd21g::generic","Bits 0:31 - End Marker",6,[[],["end_r",6]]],[11,"end","atsamd21g::dsu::end","Bits 0:31 - End Marker",376,[[],["end_r",6]]],[0,"memtype","atsamd21g::dsu","CoreSight ROM Table Memory Type",null,null],[6,"R","atsamd21g::dsu::memtype","Reader of register MEMTYPE",null,null],[6,"SMEMP_R","","Reader of field `SMEMP`",null,null],[11,"smemp","atsamd21g::generic","Bit 0 - System Memory Present",6,[[],["smemp_r",6]]],[11,"smemp","atsamd21g::dsu::memtype","Bit 0 - System Memory Present",377,[[],["smemp_r",6]]],[0,"pid4","atsamd21g::dsu","Peripheral Identification 4",null,null],[6,"R","atsamd21g::dsu::pid4","Reader of register PID4",null,null],[6,"JEPCC_R","","Reader of field `JEPCC`",null,null],[6,"FKBC_R","","Reader of field `FKBC`",null,null],[11,"jepcc","atsamd21g::generic","Bits 0:3 - JEP-106 Continuation Code",6,[[],["jepcc_r",6]]],[11,"fkbc","","Bits 4:7 - 4KB Count",6,[[],["fkbc_r",6]]],[11,"jepcc","atsamd21g::dsu::pid4","Bits 0:3 - JEP-106 Continuation Code",378,[[],["jepcc_r",6]]],[11,"fkbc","","Bits 4:7 - 4KB Count",378,[[],["fkbc_r",6]]],[0,"pid0","atsamd21g::dsu","Peripheral Identification 0",null,null],[6,"R","atsamd21g::dsu::pid0","Reader of register PID0",null,null],[6,"PARTNBL_R","","Reader of field `PARTNBL`",null,null],[11,"partnbl","atsamd21g::generic","Bits 0:7 - Part Number Low",6,[[],["partnbl_r",6]]],[11,"partnbl","atsamd21g::dsu::pid0","Bits 0:7 - Part Number Low",379,[[],["partnbl_r",6]]],[0,"pid1","atsamd21g::dsu","Peripheral Identification 1",null,null],[6,"R","atsamd21g::dsu::pid1","Reader of register PID1",null,null],[6,"PARTNBH_R","","Reader of field `PARTNBH`",null,null],[6,"JEPIDCL_R","","Reader of field `JEPIDCL`",null,null],[11,"partnbh","atsamd21g::generic","Bits 0:3 - Part Number High",6,[[],["partnbh_r",6]]],[11,"jepidcl","","Bits 4:7 - Low part of the JEP-106 Identity Code",6,[[],["jepidcl_r",6]]],[11,"partnbh","atsamd21g::dsu::pid1","Bits 0:3 - Part Number High",380,[[],["partnbh_r",6]]],[11,"jepidcl","","Bits 4:7 - Low part of the JEP-106 Identity Code",380,[[],["jepidcl_r",6]]],[0,"pid2","atsamd21g::dsu","Peripheral Identification 2",null,null],[6,"R","atsamd21g::dsu::pid2","Reader of register PID2",null,null],[6,"JEPIDCH_R","","Reader of field `JEPIDCH`",null,null],[6,"JEPU_R","","Reader of field `JEPU`",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[11,"jepidch","atsamd21g::generic","Bits 0:2 - JEP-106 Identity Code High",6,[[],["jepidch_r",6]]],[11,"jepu","","Bit 3 - JEP-106 Identity Code is used",6,[[],["jepu_r",6]]],[11,"revision","","Bits 4:7 - Revision Number",6,[[],["revision_r",6]]],[11,"jepidch","atsamd21g::dsu::pid2","Bits 0:2 - JEP-106 Identity Code High",381,[[],["jepidch_r",6]]],[11,"jepu","","Bit 3 - JEP-106 Identity Code is used",381,[[],["jepu_r",6]]],[11,"revision","","Bits 4:7 - Revision Number",381,[[],["revision_r",6]]],[0,"pid3","atsamd21g::dsu","Peripheral Identification 3",null,null],[6,"R","atsamd21g::dsu::pid3","Reader of register PID3",null,null],[6,"CUSMOD_R","","Reader of field `CUSMOD`",null,null],[6,"REVAND_R","","Reader of field `REVAND`",null,null],[11,"cusmod","atsamd21g::generic","Bits 0:3 - ARM CUSMOD",6,[[],["cusmod_r",6]]],[11,"revand","","Bits 4:7 - Revision Number",6,[[],["revand_r",6]]],[11,"cusmod","atsamd21g::dsu::pid3","Bits 0:3 - ARM CUSMOD",382,[[],["cusmod_r",6]]],[11,"revand","","Bits 4:7 - Revision Number",382,[[],["revand_r",6]]],[0,"cid0","atsamd21g::dsu","Component Identification 0",null,null],[6,"R","atsamd21g::dsu::cid0","Reader of register CID0",null,null],[6,"PREAMBLEB0_R","","Reader of field `PREAMBLEB0`",null,null],[11,"preambleb0","atsamd21g::generic","Bits 0:7 - Preamble Byte 0",6,[[],["preambleb0_r",6]]],[11,"preambleb0","atsamd21g::dsu::cid0","Bits 0:7 - Preamble Byte 0",383,[[],["preambleb0_r",6]]],[0,"cid1","atsamd21g::dsu","Component Identification 1",null,null],[6,"R","atsamd21g::dsu::cid1","Reader of register CID1",null,null],[6,"PREAMBLE_R","","Reader of field `PREAMBLE`",null,null],[6,"CCLASS_R","","Reader of field `CCLASS`",null,null],[11,"preamble","atsamd21g::generic","Bits 0:3 - Preamble",6,[[],["preamble_r",6]]],[11,"cclass","","Bits 4:7 - Component Class",6,[[],["cclass_r",6]]],[11,"preamble","atsamd21g::dsu::cid1","Bits 0:3 - Preamble",384,[[],["preamble_r",6]]],[11,"cclass","","Bits 4:7 - Component Class",384,[[],["cclass_r",6]]],[0,"cid2","atsamd21g::dsu","Component Identification 2",null,null],[6,"R","atsamd21g::dsu::cid2","Reader of register CID2",null,null],[6,"PREAMBLEB2_R","","Reader of field `PREAMBLEB2`",null,null],[11,"preambleb2","atsamd21g::generic","Bits 0:7 - Preamble Byte 2",6,[[],["preambleb2_r",6]]],[11,"preambleb2","atsamd21g::dsu::cid2","Bits 0:7 - Preamble Byte 2",385,[[],["preambleb2_r",6]]],[0,"cid3","atsamd21g::dsu","Component Identification 3",null,null],[6,"R","atsamd21g::dsu::cid3","Reader of register CID3",null,null],[6,"PREAMBLEB3_R","","Reader of field `PREAMBLEB3`",null,null],[11,"preambleb3","atsamd21g::generic","Bits 0:7 - Preamble Byte 3",6,[[],["preambleb3_r",6]]],[11,"preambleb3","atsamd21g::dsu::cid3","Bits 0:7 - Preamble Byte 3",386,[[],["preambleb3_r",6]]],[6,"CTRL","atsamd21g::dsu","Control",null,null],[6,"STATUSA","","Status A",null,null],[6,"STATUSB","","Status B",null,null],[6,"ADDR","","Address",null,null],[6,"LENGTH","","Length",null,null],[6,"DATA","","Data",null,null],[6,"DCC","","Debug Communication Channel n",null,null],[6,"DID","","Device Identification",null,null],[6,"ENTRY","","CoreSight ROM Table Entry 0",null,null],[6,"ENTRY1","","CoreSight ROM Table Entry 1",null,null],[6,"END","","CoreSight ROM Table End",null,null],[6,"MEMTYPE","","CoreSight ROM Table Memory Type",null,null],[6,"PID4","","Peripheral Identification 4",null,null],[6,"PID0","","Peripheral Identification 0",null,null],[6,"PID1","","Peripheral Identification 1",null,null],[6,"PID2","","Peripheral Identification 2",null,null],[6,"PID3","","Peripheral Identification 3",null,null],[6,"CID0","","Component Identification 0",null,null],[6,"CID1","","Component Identification 1",null,null],[6,"CID2","","Component Identification 2",null,null],[6,"CID3","","Component Identification 3",null,null],[0,"eic","atsamd21g","External Interrupt Controller",null,null],[3,"RegisterBlock","atsamd21g::eic","Register block",null,null],[12,"ctrl","","0x00 - Control",387,null],[12,"status","","0x01 - Status",387,null],[12,"nmictrl","","0x02 - Non-Maskable Interrupt Control",387,null],[12,"nmiflag","","0x03 - Non-Maskable Interrupt Flag Status and Clear",387,null],[12,"evctrl","","0x04 - Event Control",387,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",387,null],[12,"intenset","","0x0c - Interrupt Enable Set",387,null],[12,"intflag","","0x10 - Interrupt Flag Status and Clear",387,null],[12,"wakeup","","0x14 - Wake-Up Enable",387,null],[12,"config","","0x18 - Configuration n",387,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd21g::eic::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",388,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",388,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",388,[[],["w",6]]],[11,"set_bit","","Sets the field bit",389,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",389,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",389,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd21g::eic::ctrl","Bit 0 - Software Reset",390,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",390,[[],["enable_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"swrst","atsamd21g::eic::ctrl","Bit 0 - Software Reset",391,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",391,[[],["enable_w",3]]],[0,"status","atsamd21g::eic","Status",null,null],[6,"R","atsamd21g::eic::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::eic::status","Bit 7 - Synchronization Busy",392,[[],["syncbusy_r",6]]],[0,"nmictrl","atsamd21g::eic","Non-Maskable Interrupt Control",null,null],[3,"NMISENSE_W","atsamd21g::eic::nmictrl","Write proxy for field `NMISENSE`",null,null],[3,"NMIFILTEN_W","","Write proxy for field `NMIFILTEN`",null,null],[4,"NMISENSE_A","","Non-Maskable Interrupt Sense",null,null],[13,"NONE","","0: No detection",393,null],[13,"RISE","","1: Rising-edge detection",393,null],[13,"FALL","","2: Falling-edge detection",393,null],[13,"BOTH","","3: Both-edges detection",393,null],[13,"HIGH","","4: High-level detection",393,null],[13,"LOW","","5: Low-level detection",393,null],[6,"R","","Reader of register NMICTRL",null,null],[6,"W","","Writer for register NMICTRL",null,null],[6,"NMISENSE_R","","Reader of field `NMISENSE`",null,null],[6,"NMIFILTEN_R","","Reader of field `NMIFILTEN`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["nmisense_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::nmictrl","Get enumerated values variant",394,[[],[["variant",4],["nmisense_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",394,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",394,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",394,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",394,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",394,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",394,[[]]],[11,"variant","","Writes `variant` to the field",395,[[["nmisense_a",4]],["w",6]]],[11,"none","","No detection",395,[[],["w",6]]],[11,"rise","","Rising-edge detection",395,[[],["w",6]]],[11,"fall","","Falling-edge detection",395,[[],["w",6]]],[11,"both","","Both-edges detection",395,[[],["w",6]]],[11,"high","","High-level detection",395,[[],["w",6]]],[11,"low","","Low-level detection",395,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",395,[[],["w",6]]],[11,"set_bit","","Sets the field bit",396,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",396,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",396,[[],["w",6]]],[11,"nmisense","atsamd21g::generic","Bits 0:2 - Non-Maskable Interrupt Sense",6,[[],["nmisense_r",6]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",6,[[],["nmifilten_r",6]]],[11,"nmisense","atsamd21g::eic::nmictrl","Bits 0:2 - Non-Maskable Interrupt Sense",397,[[],["nmisense_r",6]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",397,[[],["nmifilten_r",6]]],[11,"nmisense","atsamd21g::generic","Bits 0:2 - Non-Maskable Interrupt Sense",7,[[],["nmisense_w",3]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",7,[[],["nmifilten_w",3]]],[11,"nmisense","atsamd21g::eic::nmictrl","Bits 0:2 - Non-Maskable Interrupt Sense",398,[[],["nmisense_w",3]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",398,[[],["nmifilten_w",3]]],[0,"nmiflag","atsamd21g::eic","Non-Maskable Interrupt Flag Status and Clear",null,null],[3,"NMI_W","atsamd21g::eic::nmiflag","Write proxy for field `NMI`",null,null],[6,"R","","Reader of register NMIFLAG",null,null],[6,"W","","Writer for register NMIFLAG",null,null],[6,"NMI_R","","Reader of field `NMI`",null,null],[11,"set_bit","","Sets the field bit",399,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",399,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",399,[[],["w",6]]],[11,"nmi","atsamd21g::generic","Bit 0 - Non-Maskable Interrupt",6,[[],["nmi_r",6]]],[11,"nmi","atsamd21g::eic::nmiflag","Bit 0 - Non-Maskable Interrupt",400,[[],["nmi_r",6]]],[11,"nmi","atsamd21g::generic","Bit 0 - Non-Maskable Interrupt",7,[[],["nmi_w",3]]],[11,"nmi","atsamd21g::eic::nmiflag","Bit 0 - Non-Maskable Interrupt",401,[[],["nmi_w",3]]],[0,"evctrl","atsamd21g::eic","Event Control",null,null],[3,"EXTINTEO0_W","atsamd21g::eic::evctrl","Write proxy for field `EXTINTEO0`",null,null],[3,"EXTINTEO1_W","","Write proxy for field `EXTINTEO1`",null,null],[3,"EXTINTEO2_W","","Write proxy for field `EXTINTEO2`",null,null],[3,"EXTINTEO3_W","","Write proxy for field `EXTINTEO3`",null,null],[3,"EXTINTEO4_W","","Write proxy for field `EXTINTEO4`",null,null],[3,"EXTINTEO5_W","","Write proxy for field `EXTINTEO5`",null,null],[3,"EXTINTEO6_W","","Write proxy for field `EXTINTEO6`",null,null],[3,"EXTINTEO7_W","","Write proxy for field `EXTINTEO7`",null,null],[3,"EXTINTEO8_W","","Write proxy for field `EXTINTEO8`",null,null],[3,"EXTINTEO9_W","","Write proxy for field `EXTINTEO9`",null,null],[3,"EXTINTEO10_W","","Write proxy for field `EXTINTEO10`",null,null],[3,"EXTINTEO11_W","","Write proxy for field `EXTINTEO11`",null,null],[3,"EXTINTEO12_W","","Write proxy for field `EXTINTEO12`",null,null],[3,"EXTINTEO13_W","","Write proxy for field `EXTINTEO13`",null,null],[3,"EXTINTEO14_W","","Write proxy for field `EXTINTEO14`",null,null],[3,"EXTINTEO15_W","","Write proxy for field `EXTINTEO15`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EXTINTEO0_R","","Reader of field `EXTINTEO0`",null,null],[6,"EXTINTEO1_R","","Reader of field `EXTINTEO1`",null,null],[6,"EXTINTEO2_R","","Reader of field `EXTINTEO2`",null,null],[6,"EXTINTEO3_R","","Reader of field `EXTINTEO3`",null,null],[6,"EXTINTEO4_R","","Reader of field `EXTINTEO4`",null,null],[6,"EXTINTEO5_R","","Reader of field `EXTINTEO5`",null,null],[6,"EXTINTEO6_R","","Reader of field `EXTINTEO6`",null,null],[6,"EXTINTEO7_R","","Reader of field `EXTINTEO7`",null,null],[6,"EXTINTEO8_R","","Reader of field `EXTINTEO8`",null,null],[6,"EXTINTEO9_R","","Reader of field `EXTINTEO9`",null,null],[6,"EXTINTEO10_R","","Reader of field `EXTINTEO10`",null,null],[6,"EXTINTEO11_R","","Reader of field `EXTINTEO11`",null,null],[6,"EXTINTEO12_R","","Reader of field `EXTINTEO12`",null,null],[6,"EXTINTEO13_R","","Reader of field `EXTINTEO13`",null,null],[6,"EXTINTEO14_R","","Reader of field `EXTINTEO14`",null,null],[6,"EXTINTEO15_R","","Reader of field `EXTINTEO15`",null,null],[11,"set_bit","","Sets the field bit",402,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",402,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",402,[[],["w",6]]],[11,"set_bit","","Sets the field bit",403,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",403,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",403,[[],["w",6]]],[11,"set_bit","","Sets the field bit",404,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",404,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",404,[[],["w",6]]],[11,"set_bit","","Sets the field bit",405,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",405,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",405,[[],["w",6]]],[11,"set_bit","","Sets the field bit",406,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",406,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",406,[[],["w",6]]],[11,"set_bit","","Sets the field bit",407,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",407,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",407,[[],["w",6]]],[11,"set_bit","","Sets the field bit",408,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",408,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",408,[[],["w",6]]],[11,"set_bit","","Sets the field bit",409,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",409,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",409,[[],["w",6]]],[11,"set_bit","","Sets the field bit",410,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",410,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",410,[[],["w",6]]],[11,"set_bit","","Sets the field bit",411,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",411,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",411,[[],["w",6]]],[11,"set_bit","","Sets the field bit",412,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",412,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",412,[[],["w",6]]],[11,"set_bit","","Sets the field bit",413,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",413,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",413,[[],["w",6]]],[11,"set_bit","","Sets the field bit",414,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",414,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",414,[[],["w",6]]],[11,"set_bit","","Sets the field bit",415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",415,[[],["w",6]]],[11,"set_bit","","Sets the field bit",416,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",416,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",416,[[],["w",6]]],[11,"set_bit","","Sets the field bit",417,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",417,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",417,[[],["w",6]]],[11,"extinteo0","atsamd21g::generic","Bit 0 - External Interrupt 0 Event Output Enable",6,[[],["extinteo0_r",6]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",6,[[],["extinteo1_r",6]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",6,[[],["extinteo2_r",6]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",6,[[],["extinteo3_r",6]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",6,[[],["extinteo4_r",6]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",6,[[],["extinteo5_r",6]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",6,[[],["extinteo6_r",6]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",6,[[],["extinteo7_r",6]]],[11,"extinteo8","","Bit 8 - External Interrupt 8 Event Output Enable",6,[[],["extinteo8_r",6]]],[11,"extinteo9","","Bit 9 - External Interrupt 9 Event Output Enable",6,[[],["extinteo9_r",6]]],[11,"extinteo10","","Bit 10 - External Interrupt 10 Event Output Enable",6,[[],["extinteo10_r",6]]],[11,"extinteo11","","Bit 11 - External Interrupt 11 Event Output Enable",6,[[],["extinteo11_r",6]]],[11,"extinteo12","","Bit 12 - External Interrupt 12 Event Output Enable",6,[[],["extinteo12_r",6]]],[11,"extinteo13","","Bit 13 - External Interrupt 13 Event Output Enable",6,[[],["extinteo13_r",6]]],[11,"extinteo14","","Bit 14 - External Interrupt 14 Event Output Enable",6,[[],["extinteo14_r",6]]],[11,"extinteo15","","Bit 15 - External Interrupt 15 Event Output Enable",6,[[],["extinteo15_r",6]]],[11,"extinteo0","atsamd21g::eic::evctrl","Bit 0 - External Interrupt 0 Event Output Enable",418,[[],["extinteo0_r",6]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",418,[[],["extinteo1_r",6]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",418,[[],["extinteo2_r",6]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",418,[[],["extinteo3_r",6]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",418,[[],["extinteo4_r",6]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",418,[[],["extinteo5_r",6]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",418,[[],["extinteo6_r",6]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",418,[[],["extinteo7_r",6]]],[11,"extinteo8","","Bit 8 - External Interrupt 8 Event Output Enable",418,[[],["extinteo8_r",6]]],[11,"extinteo9","","Bit 9 - External Interrupt 9 Event Output Enable",418,[[],["extinteo9_r",6]]],[11,"extinteo10","","Bit 10 - External Interrupt 10 Event Output Enable",418,[[],["extinteo10_r",6]]],[11,"extinteo11","","Bit 11 - External Interrupt 11 Event Output Enable",418,[[],["extinteo11_r",6]]],[11,"extinteo12","","Bit 12 - External Interrupt 12 Event Output Enable",418,[[],["extinteo12_r",6]]],[11,"extinteo13","","Bit 13 - External Interrupt 13 Event Output Enable",418,[[],["extinteo13_r",6]]],[11,"extinteo14","","Bit 14 - External Interrupt 14 Event Output Enable",418,[[],["extinteo14_r",6]]],[11,"extinteo15","","Bit 15 - External Interrupt 15 Event Output Enable",418,[[],["extinteo15_r",6]]],[11,"extinteo0","atsamd21g::generic","Bit 0 - External Interrupt 0 Event Output Enable",7,[[],["extinteo0_w",3]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",7,[[],["extinteo1_w",3]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",7,[[],["extinteo2_w",3]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",7,[[],["extinteo3_w",3]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",7,[[],["extinteo4_w",3]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",7,[[],["extinteo5_w",3]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",7,[[],["extinteo6_w",3]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",7,[[],["extinteo7_w",3]]],[11,"extinteo8","","Bit 8 - External Interrupt 8 Event Output Enable",7,[[],["extinteo8_w",3]]],[11,"extinteo9","","Bit 9 - External Interrupt 9 Event Output Enable",7,[[],["extinteo9_w",3]]],[11,"extinteo10","","Bit 10 - External Interrupt 10 Event Output Enable",7,[[],["extinteo10_w",3]]],[11,"extinteo11","","Bit 11 - External Interrupt 11 Event Output Enable",7,[[],["extinteo11_w",3]]],[11,"extinteo12","","Bit 12 - External Interrupt 12 Event Output Enable",7,[[],["extinteo12_w",3]]],[11,"extinteo13","","Bit 13 - External Interrupt 13 Event Output Enable",7,[[],["extinteo13_w",3]]],[11,"extinteo14","","Bit 14 - External Interrupt 14 Event Output Enable",7,[[],["extinteo14_w",3]]],[11,"extinteo15","","Bit 15 - External Interrupt 15 Event Output Enable",7,[[],["extinteo15_w",3]]],[11,"extinteo0","atsamd21g::eic::evctrl","Bit 0 - External Interrupt 0 Event Output Enable",419,[[],["extinteo0_w",3]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",419,[[],["extinteo1_w",3]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",419,[[],["extinteo2_w",3]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",419,[[],["extinteo3_w",3]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",419,[[],["extinteo4_w",3]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",419,[[],["extinteo5_w",3]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",419,[[],["extinteo6_w",3]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",419,[[],["extinteo7_w",3]]],[11,"extinteo8","","Bit 8 - External Interrupt 8 Event Output Enable",419,[[],["extinteo8_w",3]]],[11,"extinteo9","","Bit 9 - External Interrupt 9 Event Output Enable",419,[[],["extinteo9_w",3]]],[11,"extinteo10","","Bit 10 - External Interrupt 10 Event Output Enable",419,[[],["extinteo10_w",3]]],[11,"extinteo11","","Bit 11 - External Interrupt 11 Event Output Enable",419,[[],["extinteo11_w",3]]],[11,"extinteo12","","Bit 12 - External Interrupt 12 Event Output Enable",419,[[],["extinteo12_w",3]]],[11,"extinteo13","","Bit 13 - External Interrupt 13 Event Output Enable",419,[[],["extinteo13_w",3]]],[11,"extinteo14","","Bit 14 - External Interrupt 14 Event Output Enable",419,[[],["extinteo14_w",3]]],[11,"extinteo15","","Bit 15 - External Interrupt 15 Event Output Enable",419,[[],["extinteo15_w",3]]],[0,"intenclr","atsamd21g::eic","Interrupt Enable Clear",null,null],[3,"EXTINT0_W","atsamd21g::eic::intenclr","Write proxy for field `EXTINT0`",null,null],[3,"EXTINT1_W","","Write proxy for field `EXTINT1`",null,null],[3,"EXTINT2_W","","Write proxy for field `EXTINT2`",null,null],[3,"EXTINT3_W","","Write proxy for field `EXTINT3`",null,null],[3,"EXTINT4_W","","Write proxy for field `EXTINT4`",null,null],[3,"EXTINT5_W","","Write proxy for field `EXTINT5`",null,null],[3,"EXTINT6_W","","Write proxy for field `EXTINT6`",null,null],[3,"EXTINT7_W","","Write proxy for field `EXTINT7`",null,null],[3,"EXTINT8_W","","Write proxy for field `EXTINT8`",null,null],[3,"EXTINT9_W","","Write proxy for field `EXTINT9`",null,null],[3,"EXTINT10_W","","Write proxy for field `EXTINT10`",null,null],[3,"EXTINT11_W","","Write proxy for field `EXTINT11`",null,null],[3,"EXTINT12_W","","Write proxy for field `EXTINT12`",null,null],[3,"EXTINT13_W","","Write proxy for field `EXTINT13`",null,null],[3,"EXTINT14_W","","Write proxy for field `EXTINT14`",null,null],[3,"EXTINT15_W","","Write proxy for field `EXTINT15`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"EXTINT0_R","","Reader of field `EXTINT0`",null,null],[6,"EXTINT1_R","","Reader of field `EXTINT1`",null,null],[6,"EXTINT2_R","","Reader of field `EXTINT2`",null,null],[6,"EXTINT3_R","","Reader of field `EXTINT3`",null,null],[6,"EXTINT4_R","","Reader of field `EXTINT4`",null,null],[6,"EXTINT5_R","","Reader of field `EXTINT5`",null,null],[6,"EXTINT6_R","","Reader of field `EXTINT6`",null,null],[6,"EXTINT7_R","","Reader of field `EXTINT7`",null,null],[6,"EXTINT8_R","","Reader of field `EXTINT8`",null,null],[6,"EXTINT9_R","","Reader of field `EXTINT9`",null,null],[6,"EXTINT10_R","","Reader of field `EXTINT10`",null,null],[6,"EXTINT11_R","","Reader of field `EXTINT11`",null,null],[6,"EXTINT12_R","","Reader of field `EXTINT12`",null,null],[6,"EXTINT13_R","","Reader of field `EXTINT13`",null,null],[6,"EXTINT14_R","","Reader of field `EXTINT14`",null,null],[6,"EXTINT15_R","","Reader of field `EXTINT15`",null,null],[11,"set_bit","","Sets the field bit",420,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",420,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",420,[[],["w",6]]],[11,"set_bit","","Sets the field bit",421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",422,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",422,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",422,[[],["w",6]]],[11,"set_bit","","Sets the field bit",423,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",423,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",423,[[],["w",6]]],[11,"set_bit","","Sets the field bit",424,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",424,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",424,[[],["w",6]]],[11,"set_bit","","Sets the field bit",425,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",425,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",425,[[],["w",6]]],[11,"set_bit","","Sets the field bit",426,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",426,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",426,[[],["w",6]]],[11,"set_bit","","Sets the field bit",427,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",427,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",427,[[],["w",6]]],[11,"set_bit","","Sets the field bit",428,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",428,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",428,[[],["w",6]]],[11,"set_bit","","Sets the field bit",429,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",429,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",429,[[],["w",6]]],[11,"set_bit","","Sets the field bit",430,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",430,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",430,[[],["w",6]]],[11,"set_bit","","Sets the field bit",431,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",431,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",431,[[],["w",6]]],[11,"set_bit","","Sets the field bit",432,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",432,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",432,[[],["w",6]]],[11,"set_bit","","Sets the field bit",433,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",433,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",433,[[],["w",6]]],[11,"set_bit","","Sets the field bit",434,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",434,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",434,[[],["w",6]]],[11,"set_bit","","Sets the field bit",435,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",435,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",435,[[],["w",6]]],[11,"extint0","atsamd21g::generic","Bit 0 - External Interrupt 0 Enable",6,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",6,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",6,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",6,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",6,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",6,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",6,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",6,[[],["extint7_r",6]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",6,[[],["extint8_r",6]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",6,[[],["extint9_r",6]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",6,[[],["extint10_r",6]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",6,[[],["extint11_r",6]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",6,[[],["extint12_r",6]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",6,[[],["extint13_r",6]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",6,[[],["extint14_r",6]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",6,[[],["extint15_r",6]]],[11,"extint0","atsamd21g::eic::intenclr","Bit 0 - External Interrupt 0 Enable",436,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",436,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",436,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",436,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",436,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",436,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",436,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",436,[[],["extint7_r",6]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",436,[[],["extint8_r",6]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",436,[[],["extint9_r",6]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",436,[[],["extint10_r",6]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",436,[[],["extint11_r",6]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",436,[[],["extint12_r",6]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",436,[[],["extint13_r",6]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",436,[[],["extint14_r",6]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",436,[[],["extint15_r",6]]],[11,"extint0","atsamd21g::generic","Bit 0 - External Interrupt 0 Enable",7,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",7,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",7,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",7,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",7,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",7,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",7,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",7,[[],["extint7_w",3]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",7,[[],["extint8_w",3]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",7,[[],["extint9_w",3]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",7,[[],["extint10_w",3]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",7,[[],["extint11_w",3]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",7,[[],["extint12_w",3]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",7,[[],["extint13_w",3]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",7,[[],["extint14_w",3]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",7,[[],["extint15_w",3]]],[11,"extint0","atsamd21g::eic::intenclr","Bit 0 - External Interrupt 0 Enable",437,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",437,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",437,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",437,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",437,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",437,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",437,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",437,[[],["extint7_w",3]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",437,[[],["extint8_w",3]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",437,[[],["extint9_w",3]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",437,[[],["extint10_w",3]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",437,[[],["extint11_w",3]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",437,[[],["extint12_w",3]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",437,[[],["extint13_w",3]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",437,[[],["extint14_w",3]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",437,[[],["extint15_w",3]]],[0,"intenset","atsamd21g::eic","Interrupt Enable Set",null,null],[3,"EXTINT0_W","atsamd21g::eic::intenset","Write proxy for field `EXTINT0`",null,null],[3,"EXTINT1_W","","Write proxy for field `EXTINT1`",null,null],[3,"EXTINT2_W","","Write proxy for field `EXTINT2`",null,null],[3,"EXTINT3_W","","Write proxy for field `EXTINT3`",null,null],[3,"EXTINT4_W","","Write proxy for field `EXTINT4`",null,null],[3,"EXTINT5_W","","Write proxy for field `EXTINT5`",null,null],[3,"EXTINT6_W","","Write proxy for field `EXTINT6`",null,null],[3,"EXTINT7_W","","Write proxy for field `EXTINT7`",null,null],[3,"EXTINT8_W","","Write proxy for field `EXTINT8`",null,null],[3,"EXTINT9_W","","Write proxy for field `EXTINT9`",null,null],[3,"EXTINT10_W","","Write proxy for field `EXTINT10`",null,null],[3,"EXTINT11_W","","Write proxy for field `EXTINT11`",null,null],[3,"EXTINT12_W","","Write proxy for field `EXTINT12`",null,null],[3,"EXTINT13_W","","Write proxy for field `EXTINT13`",null,null],[3,"EXTINT14_W","","Write proxy for field `EXTINT14`",null,null],[3,"EXTINT15_W","","Write proxy for field `EXTINT15`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"EXTINT0_R","","Reader of field `EXTINT0`",null,null],[6,"EXTINT1_R","","Reader of field `EXTINT1`",null,null],[6,"EXTINT2_R","","Reader of field `EXTINT2`",null,null],[6,"EXTINT3_R","","Reader of field `EXTINT3`",null,null],[6,"EXTINT4_R","","Reader of field `EXTINT4`",null,null],[6,"EXTINT5_R","","Reader of field `EXTINT5`",null,null],[6,"EXTINT6_R","","Reader of field `EXTINT6`",null,null],[6,"EXTINT7_R","","Reader of field `EXTINT7`",null,null],[6,"EXTINT8_R","","Reader of field `EXTINT8`",null,null],[6,"EXTINT9_R","","Reader of field `EXTINT9`",null,null],[6,"EXTINT10_R","","Reader of field `EXTINT10`",null,null],[6,"EXTINT11_R","","Reader of field `EXTINT11`",null,null],[6,"EXTINT12_R","","Reader of field `EXTINT12`",null,null],[6,"EXTINT13_R","","Reader of field `EXTINT13`",null,null],[6,"EXTINT14_R","","Reader of field `EXTINT14`",null,null],[6,"EXTINT15_R","","Reader of field `EXTINT15`",null,null],[11,"set_bit","","Sets the field bit",438,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",438,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",438,[[],["w",6]]],[11,"set_bit","","Sets the field bit",439,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",439,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",439,[[],["w",6]]],[11,"set_bit","","Sets the field bit",440,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",440,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",440,[[],["w",6]]],[11,"set_bit","","Sets the field bit",441,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",441,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",441,[[],["w",6]]],[11,"set_bit","","Sets the field bit",442,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",442,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",442,[[],["w",6]]],[11,"set_bit","","Sets the field bit",443,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",443,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",443,[[],["w",6]]],[11,"set_bit","","Sets the field bit",444,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",444,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",445,[[],["w",6]]],[11,"set_bit","","Sets the field bit",446,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",446,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",448,[[],["w",6]]],[11,"set_bit","","Sets the field bit",449,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",449,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",449,[[],["w",6]]],[11,"set_bit","","Sets the field bit",450,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",450,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",450,[[],["w",6]]],[11,"set_bit","","Sets the field bit",451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",452,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",452,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",453,[[],["w",6]]],[11,"extint0","atsamd21g::generic","Bit 0 - External Interrupt 0 Enable",6,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",6,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",6,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",6,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",6,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",6,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",6,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",6,[[],["extint7_r",6]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",6,[[],["extint8_r",6]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",6,[[],["extint9_r",6]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",6,[[],["extint10_r",6]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",6,[[],["extint11_r",6]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",6,[[],["extint12_r",6]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",6,[[],["extint13_r",6]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",6,[[],["extint14_r",6]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",6,[[],["extint15_r",6]]],[11,"extint0","atsamd21g::eic::intenset","Bit 0 - External Interrupt 0 Enable",454,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",454,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",454,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",454,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",454,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",454,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",454,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",454,[[],["extint7_r",6]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",454,[[],["extint8_r",6]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",454,[[],["extint9_r",6]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",454,[[],["extint10_r",6]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",454,[[],["extint11_r",6]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",454,[[],["extint12_r",6]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",454,[[],["extint13_r",6]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",454,[[],["extint14_r",6]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",454,[[],["extint15_r",6]]],[11,"extint0","atsamd21g::generic","Bit 0 - External Interrupt 0 Enable",7,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",7,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",7,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",7,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",7,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",7,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",7,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",7,[[],["extint7_w",3]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",7,[[],["extint8_w",3]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",7,[[],["extint9_w",3]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",7,[[],["extint10_w",3]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",7,[[],["extint11_w",3]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",7,[[],["extint12_w",3]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",7,[[],["extint13_w",3]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",7,[[],["extint14_w",3]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",7,[[],["extint15_w",3]]],[11,"extint0","atsamd21g::eic::intenset","Bit 0 - External Interrupt 0 Enable",455,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",455,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",455,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",455,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",455,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",455,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",455,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",455,[[],["extint7_w",3]]],[11,"extint8","","Bit 8 - External Interrupt 8 Enable",455,[[],["extint8_w",3]]],[11,"extint9","","Bit 9 - External Interrupt 9 Enable",455,[[],["extint9_w",3]]],[11,"extint10","","Bit 10 - External Interrupt 10 Enable",455,[[],["extint10_w",3]]],[11,"extint11","","Bit 11 - External Interrupt 11 Enable",455,[[],["extint11_w",3]]],[11,"extint12","","Bit 12 - External Interrupt 12 Enable",455,[[],["extint12_w",3]]],[11,"extint13","","Bit 13 - External Interrupt 13 Enable",455,[[],["extint13_w",3]]],[11,"extint14","","Bit 14 - External Interrupt 14 Enable",455,[[],["extint14_w",3]]],[11,"extint15","","Bit 15 - External Interrupt 15 Enable",455,[[],["extint15_w",3]]],[0,"intflag","atsamd21g::eic","Interrupt Flag Status and Clear",null,null],[3,"EXTINT0_W","atsamd21g::eic::intflag","Write proxy for field `EXTINT0`",null,null],[3,"EXTINT1_W","","Write proxy for field `EXTINT1`",null,null],[3,"EXTINT2_W","","Write proxy for field `EXTINT2`",null,null],[3,"EXTINT3_W","","Write proxy for field `EXTINT3`",null,null],[3,"EXTINT4_W","","Write proxy for field `EXTINT4`",null,null],[3,"EXTINT5_W","","Write proxy for field `EXTINT5`",null,null],[3,"EXTINT6_W","","Write proxy for field `EXTINT6`",null,null],[3,"EXTINT7_W","","Write proxy for field `EXTINT7`",null,null],[3,"EXTINT8_W","","Write proxy for field `EXTINT8`",null,null],[3,"EXTINT9_W","","Write proxy for field `EXTINT9`",null,null],[3,"EXTINT10_W","","Write proxy for field `EXTINT10`",null,null],[3,"EXTINT11_W","","Write proxy for field `EXTINT11`",null,null],[3,"EXTINT12_W","","Write proxy for field `EXTINT12`",null,null],[3,"EXTINT13_W","","Write proxy for field `EXTINT13`",null,null],[3,"EXTINT14_W","","Write proxy for field `EXTINT14`",null,null],[3,"EXTINT15_W","","Write proxy for field `EXTINT15`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"EXTINT0_R","","Reader of field `EXTINT0`",null,null],[6,"EXTINT1_R","","Reader of field `EXTINT1`",null,null],[6,"EXTINT2_R","","Reader of field `EXTINT2`",null,null],[6,"EXTINT3_R","","Reader of field `EXTINT3`",null,null],[6,"EXTINT4_R","","Reader of field `EXTINT4`",null,null],[6,"EXTINT5_R","","Reader of field `EXTINT5`",null,null],[6,"EXTINT6_R","","Reader of field `EXTINT6`",null,null],[6,"EXTINT7_R","","Reader of field `EXTINT7`",null,null],[6,"EXTINT8_R","","Reader of field `EXTINT8`",null,null],[6,"EXTINT9_R","","Reader of field `EXTINT9`",null,null],[6,"EXTINT10_R","","Reader of field `EXTINT10`",null,null],[6,"EXTINT11_R","","Reader of field `EXTINT11`",null,null],[6,"EXTINT12_R","","Reader of field `EXTINT12`",null,null],[6,"EXTINT13_R","","Reader of field `EXTINT13`",null,null],[6,"EXTINT14_R","","Reader of field `EXTINT14`",null,null],[6,"EXTINT15_R","","Reader of field `EXTINT15`",null,null],[11,"set_bit","","Sets the field bit",456,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",456,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",456,[[],["w",6]]],[11,"set_bit","","Sets the field bit",457,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",457,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",457,[[],["w",6]]],[11,"set_bit","","Sets the field bit",458,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",458,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",458,[[],["w",6]]],[11,"set_bit","","Sets the field bit",459,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",459,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",459,[[],["w",6]]],[11,"set_bit","","Sets the field bit",460,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",460,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",460,[[],["w",6]]],[11,"set_bit","","Sets the field bit",461,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",461,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",461,[[],["w",6]]],[11,"set_bit","","Sets the field bit",462,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",462,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",462,[[],["w",6]]],[11,"set_bit","","Sets the field bit",463,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",463,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",463,[[],["w",6]]],[11,"set_bit","","Sets the field bit",464,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",464,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",464,[[],["w",6]]],[11,"set_bit","","Sets the field bit",465,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",465,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",465,[[],["w",6]]],[11,"set_bit","","Sets the field bit",466,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",466,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",466,[[],["w",6]]],[11,"set_bit","","Sets the field bit",467,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",467,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",468,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",468,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",468,[[],["w",6]]],[11,"set_bit","","Sets the field bit",469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",469,[[],["w",6]]],[11,"set_bit","","Sets the field bit",470,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",470,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",470,[[],["w",6]]],[11,"set_bit","","Sets the field bit",471,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",471,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",471,[[],["w",6]]],[11,"extint0","atsamd21g::generic","Bit 0 - External Interrupt 0",6,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1",6,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2",6,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3",6,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4",6,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5",6,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6",6,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7",6,[[],["extint7_r",6]]],[11,"extint8","","Bit 8 - External Interrupt 8",6,[[],["extint8_r",6]]],[11,"extint9","","Bit 9 - External Interrupt 9",6,[[],["extint9_r",6]]],[11,"extint10","","Bit 10 - External Interrupt 10",6,[[],["extint10_r",6]]],[11,"extint11","","Bit 11 - External Interrupt 11",6,[[],["extint11_r",6]]],[11,"extint12","","Bit 12 - External Interrupt 12",6,[[],["extint12_r",6]]],[11,"extint13","","Bit 13 - External Interrupt 13",6,[[],["extint13_r",6]]],[11,"extint14","","Bit 14 - External Interrupt 14",6,[[],["extint14_r",6]]],[11,"extint15","","Bit 15 - External Interrupt 15",6,[[],["extint15_r",6]]],[11,"extint0","atsamd21g::eic::intflag","Bit 0 - External Interrupt 0",472,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1",472,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2",472,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3",472,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4",472,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5",472,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6",472,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7",472,[[],["extint7_r",6]]],[11,"extint8","","Bit 8 - External Interrupt 8",472,[[],["extint8_r",6]]],[11,"extint9","","Bit 9 - External Interrupt 9",472,[[],["extint9_r",6]]],[11,"extint10","","Bit 10 - External Interrupt 10",472,[[],["extint10_r",6]]],[11,"extint11","","Bit 11 - External Interrupt 11",472,[[],["extint11_r",6]]],[11,"extint12","","Bit 12 - External Interrupt 12",472,[[],["extint12_r",6]]],[11,"extint13","","Bit 13 - External Interrupt 13",472,[[],["extint13_r",6]]],[11,"extint14","","Bit 14 - External Interrupt 14",472,[[],["extint14_r",6]]],[11,"extint15","","Bit 15 - External Interrupt 15",472,[[],["extint15_r",6]]],[11,"extint0","atsamd21g::generic","Bit 0 - External Interrupt 0",7,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1",7,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2",7,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3",7,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4",7,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5",7,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6",7,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7",7,[[],["extint7_w",3]]],[11,"extint8","","Bit 8 - External Interrupt 8",7,[[],["extint8_w",3]]],[11,"extint9","","Bit 9 - External Interrupt 9",7,[[],["extint9_w",3]]],[11,"extint10","","Bit 10 - External Interrupt 10",7,[[],["extint10_w",3]]],[11,"extint11","","Bit 11 - External Interrupt 11",7,[[],["extint11_w",3]]],[11,"extint12","","Bit 12 - External Interrupt 12",7,[[],["extint12_w",3]]],[11,"extint13","","Bit 13 - External Interrupt 13",7,[[],["extint13_w",3]]],[11,"extint14","","Bit 14 - External Interrupt 14",7,[[],["extint14_w",3]]],[11,"extint15","","Bit 15 - External Interrupt 15",7,[[],["extint15_w",3]]],[11,"extint0","atsamd21g::eic::intflag","Bit 0 - External Interrupt 0",473,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1",473,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2",473,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3",473,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4",473,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5",473,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6",473,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7",473,[[],["extint7_w",3]]],[11,"extint8","","Bit 8 - External Interrupt 8",473,[[],["extint8_w",3]]],[11,"extint9","","Bit 9 - External Interrupt 9",473,[[],["extint9_w",3]]],[11,"extint10","","Bit 10 - External Interrupt 10",473,[[],["extint10_w",3]]],[11,"extint11","","Bit 11 - External Interrupt 11",473,[[],["extint11_w",3]]],[11,"extint12","","Bit 12 - External Interrupt 12",473,[[],["extint12_w",3]]],[11,"extint13","","Bit 13 - External Interrupt 13",473,[[],["extint13_w",3]]],[11,"extint14","","Bit 14 - External Interrupt 14",473,[[],["extint14_w",3]]],[11,"extint15","","Bit 15 - External Interrupt 15",473,[[],["extint15_w",3]]],[0,"wakeup","atsamd21g::eic","Wake-Up Enable",null,null],[3,"WAKEUPEN0_W","atsamd21g::eic::wakeup","Write proxy for field `WAKEUPEN0`",null,null],[3,"WAKEUPEN1_W","","Write proxy for field `WAKEUPEN1`",null,null],[3,"WAKEUPEN2_W","","Write proxy for field `WAKEUPEN2`",null,null],[3,"WAKEUPEN3_W","","Write proxy for field `WAKEUPEN3`",null,null],[3,"WAKEUPEN4_W","","Write proxy for field `WAKEUPEN4`",null,null],[3,"WAKEUPEN5_W","","Write proxy for field `WAKEUPEN5`",null,null],[3,"WAKEUPEN6_W","","Write proxy for field `WAKEUPEN6`",null,null],[3,"WAKEUPEN7_W","","Write proxy for field `WAKEUPEN7`",null,null],[3,"WAKEUPEN8_W","","Write proxy for field `WAKEUPEN8`",null,null],[3,"WAKEUPEN9_W","","Write proxy for field `WAKEUPEN9`",null,null],[3,"WAKEUPEN10_W","","Write proxy for field `WAKEUPEN10`",null,null],[3,"WAKEUPEN11_W","","Write proxy for field `WAKEUPEN11`",null,null],[3,"WAKEUPEN12_W","","Write proxy for field `WAKEUPEN12`",null,null],[3,"WAKEUPEN13_W","","Write proxy for field `WAKEUPEN13`",null,null],[3,"WAKEUPEN14_W","","Write proxy for field `WAKEUPEN14`",null,null],[3,"WAKEUPEN15_W","","Write proxy for field `WAKEUPEN15`",null,null],[6,"R","","Reader of register WAKEUP",null,null],[6,"W","","Writer for register WAKEUP",null,null],[6,"WAKEUPEN0_R","","Reader of field `WAKEUPEN0`",null,null],[6,"WAKEUPEN1_R","","Reader of field `WAKEUPEN1`",null,null],[6,"WAKEUPEN2_R","","Reader of field `WAKEUPEN2`",null,null],[6,"WAKEUPEN3_R","","Reader of field `WAKEUPEN3`",null,null],[6,"WAKEUPEN4_R","","Reader of field `WAKEUPEN4`",null,null],[6,"WAKEUPEN5_R","","Reader of field `WAKEUPEN5`",null,null],[6,"WAKEUPEN6_R","","Reader of field `WAKEUPEN6`",null,null],[6,"WAKEUPEN7_R","","Reader of field `WAKEUPEN7`",null,null],[6,"WAKEUPEN8_R","","Reader of field `WAKEUPEN8`",null,null],[6,"WAKEUPEN9_R","","Reader of field `WAKEUPEN9`",null,null],[6,"WAKEUPEN10_R","","Reader of field `WAKEUPEN10`",null,null],[6,"WAKEUPEN11_R","","Reader of field `WAKEUPEN11`",null,null],[6,"WAKEUPEN12_R","","Reader of field `WAKEUPEN12`",null,null],[6,"WAKEUPEN13_R","","Reader of field `WAKEUPEN13`",null,null],[6,"WAKEUPEN14_R","","Reader of field `WAKEUPEN14`",null,null],[6,"WAKEUPEN15_R","","Reader of field `WAKEUPEN15`",null,null],[11,"set_bit","","Sets the field bit",474,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",474,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",474,[[],["w",6]]],[11,"set_bit","","Sets the field bit",475,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",475,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",475,[[],["w",6]]],[11,"set_bit","","Sets the field bit",476,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",476,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",476,[[],["w",6]]],[11,"set_bit","","Sets the field bit",477,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",477,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",477,[[],["w",6]]],[11,"set_bit","","Sets the field bit",478,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",478,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",478,[[],["w",6]]],[11,"set_bit","","Sets the field bit",479,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",479,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",479,[[],["w",6]]],[11,"set_bit","","Sets the field bit",480,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",480,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",480,[[],["w",6]]],[11,"set_bit","","Sets the field bit",481,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",481,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",481,[[],["w",6]]],[11,"set_bit","","Sets the field bit",482,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",482,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",482,[[],["w",6]]],[11,"set_bit","","Sets the field bit",483,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",483,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",483,[[],["w",6]]],[11,"set_bit","","Sets the field bit",484,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",484,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",484,[[],["w",6]]],[11,"set_bit","","Sets the field bit",485,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",485,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",485,[[],["w",6]]],[11,"set_bit","","Sets the field bit",486,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",486,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",486,[[],["w",6]]],[11,"set_bit","","Sets the field bit",487,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",487,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",487,[[],["w",6]]],[11,"set_bit","","Sets the field bit",488,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",488,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",488,[[],["w",6]]],[11,"set_bit","","Sets the field bit",489,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",489,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",489,[[],["w",6]]],[11,"wakeupen0","atsamd21g::generic","Bit 0 - External Interrupt 0 Wake-up Enable",6,[[],["wakeupen0_r",6]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",6,[[],["wakeupen1_r",6]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",6,[[],["wakeupen2_r",6]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",6,[[],["wakeupen3_r",6]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",6,[[],["wakeupen4_r",6]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",6,[[],["wakeupen5_r",6]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",6,[[],["wakeupen6_r",6]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",6,[[],["wakeupen7_r",6]]],[11,"wakeupen8","","Bit 8 - External Interrupt 8 Wake-up Enable",6,[[],["wakeupen8_r",6]]],[11,"wakeupen9","","Bit 9 - External Interrupt 9 Wake-up Enable",6,[[],["wakeupen9_r",6]]],[11,"wakeupen10","","Bit 10 - External Interrupt 10 Wake-up Enable",6,[[],["wakeupen10_r",6]]],[11,"wakeupen11","","Bit 11 - External Interrupt 11 Wake-up Enable",6,[[],["wakeupen11_r",6]]],[11,"wakeupen12","","Bit 12 - External Interrupt 12 Wake-up Enable",6,[[],["wakeupen12_r",6]]],[11,"wakeupen13","","Bit 13 - External Interrupt 13 Wake-up Enable",6,[[],["wakeupen13_r",6]]],[11,"wakeupen14","","Bit 14 - External Interrupt 14 Wake-up Enable",6,[[],["wakeupen14_r",6]]],[11,"wakeupen15","","Bit 15 - External Interrupt 15 Wake-up Enable",6,[[],["wakeupen15_r",6]]],[11,"wakeupen0","atsamd21g::eic::wakeup","Bit 0 - External Interrupt 0 Wake-up Enable",490,[[],["wakeupen0_r",6]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",490,[[],["wakeupen1_r",6]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",490,[[],["wakeupen2_r",6]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",490,[[],["wakeupen3_r",6]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",490,[[],["wakeupen4_r",6]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",490,[[],["wakeupen5_r",6]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",490,[[],["wakeupen6_r",6]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",490,[[],["wakeupen7_r",6]]],[11,"wakeupen8","","Bit 8 - External Interrupt 8 Wake-up Enable",490,[[],["wakeupen8_r",6]]],[11,"wakeupen9","","Bit 9 - External Interrupt 9 Wake-up Enable",490,[[],["wakeupen9_r",6]]],[11,"wakeupen10","","Bit 10 - External Interrupt 10 Wake-up Enable",490,[[],["wakeupen10_r",6]]],[11,"wakeupen11","","Bit 11 - External Interrupt 11 Wake-up Enable",490,[[],["wakeupen11_r",6]]],[11,"wakeupen12","","Bit 12 - External Interrupt 12 Wake-up Enable",490,[[],["wakeupen12_r",6]]],[11,"wakeupen13","","Bit 13 - External Interrupt 13 Wake-up Enable",490,[[],["wakeupen13_r",6]]],[11,"wakeupen14","","Bit 14 - External Interrupt 14 Wake-up Enable",490,[[],["wakeupen14_r",6]]],[11,"wakeupen15","","Bit 15 - External Interrupt 15 Wake-up Enable",490,[[],["wakeupen15_r",6]]],[11,"wakeupen0","atsamd21g::generic","Bit 0 - External Interrupt 0 Wake-up Enable",7,[[],["wakeupen0_w",3]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",7,[[],["wakeupen1_w",3]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",7,[[],["wakeupen2_w",3]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",7,[[],["wakeupen3_w",3]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",7,[[],["wakeupen4_w",3]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",7,[[],["wakeupen5_w",3]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",7,[[],["wakeupen6_w",3]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",7,[[],["wakeupen7_w",3]]],[11,"wakeupen8","","Bit 8 - External Interrupt 8 Wake-up Enable",7,[[],["wakeupen8_w",3]]],[11,"wakeupen9","","Bit 9 - External Interrupt 9 Wake-up Enable",7,[[],["wakeupen9_w",3]]],[11,"wakeupen10","","Bit 10 - External Interrupt 10 Wake-up Enable",7,[[],["wakeupen10_w",3]]],[11,"wakeupen11","","Bit 11 - External Interrupt 11 Wake-up Enable",7,[[],["wakeupen11_w",3]]],[11,"wakeupen12","","Bit 12 - External Interrupt 12 Wake-up Enable",7,[[],["wakeupen12_w",3]]],[11,"wakeupen13","","Bit 13 - External Interrupt 13 Wake-up Enable",7,[[],["wakeupen13_w",3]]],[11,"wakeupen14","","Bit 14 - External Interrupt 14 Wake-up Enable",7,[[],["wakeupen14_w",3]]],[11,"wakeupen15","","Bit 15 - External Interrupt 15 Wake-up Enable",7,[[],["wakeupen15_w",3]]],[11,"wakeupen0","atsamd21g::eic::wakeup","Bit 0 - External Interrupt 0 Wake-up Enable",491,[[],["wakeupen0_w",3]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",491,[[],["wakeupen1_w",3]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",491,[[],["wakeupen2_w",3]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",491,[[],["wakeupen3_w",3]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",491,[[],["wakeupen4_w",3]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",491,[[],["wakeupen5_w",3]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",491,[[],["wakeupen6_w",3]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",491,[[],["wakeupen7_w",3]]],[11,"wakeupen8","","Bit 8 - External Interrupt 8 Wake-up Enable",491,[[],["wakeupen8_w",3]]],[11,"wakeupen9","","Bit 9 - External Interrupt 9 Wake-up Enable",491,[[],["wakeupen9_w",3]]],[11,"wakeupen10","","Bit 10 - External Interrupt 10 Wake-up Enable",491,[[],["wakeupen10_w",3]]],[11,"wakeupen11","","Bit 11 - External Interrupt 11 Wake-up Enable",491,[[],["wakeupen11_w",3]]],[11,"wakeupen12","","Bit 12 - External Interrupt 12 Wake-up Enable",491,[[],["wakeupen12_w",3]]],[11,"wakeupen13","","Bit 13 - External Interrupt 13 Wake-up Enable",491,[[],["wakeupen13_w",3]]],[11,"wakeupen14","","Bit 14 - External Interrupt 14 Wake-up Enable",491,[[],["wakeupen14_w",3]]],[11,"wakeupen15","","Bit 15 - External Interrupt 15 Wake-up Enable",491,[[],["wakeupen15_w",3]]],[0,"config","atsamd21g::eic","Configuration n",null,null],[3,"SENSE0_W","atsamd21g::eic::config","Write proxy for field `SENSE0`",null,null],[3,"FILTEN0_W","","Write proxy for field `FILTEN0`",null,null],[3,"SENSE1_W","","Write proxy for field `SENSE1`",null,null],[3,"FILTEN1_W","","Write proxy for field `FILTEN1`",null,null],[3,"SENSE2_W","","Write proxy for field `SENSE2`",null,null],[3,"FILTEN2_W","","Write proxy for field `FILTEN2`",null,null],[3,"SENSE3_W","","Write proxy for field `SENSE3`",null,null],[3,"FILTEN3_W","","Write proxy for field `FILTEN3`",null,null],[3,"SENSE4_W","","Write proxy for field `SENSE4`",null,null],[3,"FILTEN4_W","","Write proxy for field `FILTEN4`",null,null],[3,"SENSE5_W","","Write proxy for field `SENSE5`",null,null],[3,"FILTEN5_W","","Write proxy for field `FILTEN5`",null,null],[3,"SENSE6_W","","Write proxy for field `SENSE6`",null,null],[3,"FILTEN6_W","","Write proxy for field `FILTEN6`",null,null],[3,"SENSE7_W","","Write proxy for field `SENSE7`",null,null],[3,"FILTEN7_W","","Write proxy for field `FILTEN7`",null,null],[4,"SENSE0_A","","Input Sense 0 Configuration",null,null],[13,"NONE","","0: No detection",492,null],[13,"RISE","","1: Rising-edge detection",492,null],[13,"FALL","","2: Falling-edge detection",492,null],[13,"BOTH","","3: Both-edges detection",492,null],[13,"HIGH","","4: High-level detection",492,null],[13,"LOW","","5: Low-level detection",492,null],[4,"SENSE1_A","","Input Sense 1 Configuration",null,null],[13,"NONE","","0: No detection",493,null],[13,"RISE","","1: Rising edge detection",493,null],[13,"FALL","","2: Falling edge detection",493,null],[13,"BOTH","","3: Both edges detection",493,null],[13,"HIGH","","4: High level detection",493,null],[13,"LOW","","5: Low level detection",493,null],[4,"SENSE2_A","","Input Sense 2 Configuration",null,null],[13,"NONE","","0: No detection",494,null],[13,"RISE","","1: Rising edge detection",494,null],[13,"FALL","","2: Falling edge detection",494,null],[13,"BOTH","","3: Both edges detection",494,null],[13,"HIGH","","4: High level detection",494,null],[13,"LOW","","5: Low level detection",494,null],[4,"SENSE3_A","","Input Sense 3 Configuration",null,null],[13,"NONE","","0: No detection",495,null],[13,"RISE","","1: Rising edge detection",495,null],[13,"FALL","","2: Falling edge detection",495,null],[13,"BOTH","","3: Both edges detection",495,null],[13,"HIGH","","4: High level detection",495,null],[13,"LOW","","5: Low level detection",495,null],[4,"SENSE4_A","","Input Sense 4 Configuration",null,null],[13,"NONE","","0: No detection",496,null],[13,"RISE","","1: Rising edge detection",496,null],[13,"FALL","","2: Falling edge detection",496,null],[13,"BOTH","","3: Both edges detection",496,null],[13,"HIGH","","4: High level detection",496,null],[13,"LOW","","5: Low level detection",496,null],[4,"SENSE5_A","","Input Sense 5 Configuration",null,null],[13,"NONE","","0: No detection",497,null],[13,"RISE","","1: Rising edge detection",497,null],[13,"FALL","","2: Falling edge detection",497,null],[13,"BOTH","","3: Both edges detection",497,null],[13,"HIGH","","4: High level detection",497,null],[13,"LOW","","5: Low level detection",497,null],[4,"SENSE6_A","","Input Sense 6 Configuration",null,null],[13,"NONE","","0: No detection",498,null],[13,"RISE","","1: Rising edge detection",498,null],[13,"FALL","","2: Falling edge detection",498,null],[13,"BOTH","","3: Both edges detection",498,null],[13,"HIGH","","4: High level detection",498,null],[13,"LOW","","5: Low level detection",498,null],[4,"SENSE7_A","","Input Sense 7 Configuration",null,null],[13,"NONE","","0: No detection",499,null],[13,"RISE","","1: Rising edge detection",499,null],[13,"FALL","","2: Falling edge detection",499,null],[13,"BOTH","","3: Both edges detection",499,null],[13,"HIGH","","4: High level detection",499,null],[13,"LOW","","5: Low level detection",499,null],[6,"R","","Reader of register CONFIG%s",null,null],[6,"W","","Writer for register CONFIG%s",null,null],[6,"SENSE0_R","","Reader of field `SENSE0`",null,null],[6,"FILTEN0_R","","Reader of field `FILTEN0`",null,null],[6,"SENSE1_R","","Reader of field `SENSE1`",null,null],[6,"FILTEN1_R","","Reader of field `FILTEN1`",null,null],[6,"SENSE2_R","","Reader of field `SENSE2`",null,null],[6,"FILTEN2_R","","Reader of field `FILTEN2`",null,null],[6,"SENSE3_R","","Reader of field `SENSE3`",null,null],[6,"FILTEN3_R","","Reader of field `FILTEN3`",null,null],[6,"SENSE4_R","","Reader of field `SENSE4`",null,null],[6,"FILTEN4_R","","Reader of field `FILTEN4`",null,null],[6,"SENSE5_R","","Reader of field `SENSE5`",null,null],[6,"FILTEN5_R","","Reader of field `FILTEN5`",null,null],[6,"SENSE6_R","","Reader of field `SENSE6`",null,null],[6,"FILTEN6_R","","Reader of field `FILTEN6`",null,null],[6,"SENSE7_R","","Reader of field `SENSE7`",null,null],[6,"FILTEN7_R","","Reader of field `FILTEN7`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense0_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",500,[[],[["variant",4],["sense0_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",500,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",500,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",500,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",500,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",500,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",500,[[]]],[11,"variant","","Writes `variant` to the field",501,[[["sense0_a",4]],["w",6]]],[11,"none","","No detection",501,[[],["w",6]]],[11,"rise","","Rising-edge detection",501,[[],["w",6]]],[11,"fall","","Falling-edge detection",501,[[],["w",6]]],[11,"both","","Both-edges detection",501,[[],["w",6]]],[11,"high","","High-level detection",501,[[],["w",6]]],[11,"low","","Low-level detection",501,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",501,[[],["w",6]]],[11,"set_bit","","Sets the field bit",502,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",502,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",502,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["sense1_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",503,[[],[["sense1_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",503,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",503,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",503,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",503,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",503,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",503,[[]]],[11,"variant","","Writes `variant` to the field",504,[[["sense1_a",4]],["w",6]]],[11,"none","","No detection",504,[[],["w",6]]],[11,"rise","","Rising edge detection",504,[[],["w",6]]],[11,"fall","","Falling edge detection",504,[[],["w",6]]],[11,"both","","Both edges detection",504,[[],["w",6]]],[11,"high","","High level detection",504,[[],["w",6]]],[11,"low","","Low level detection",504,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",504,[[],["w",6]]],[11,"set_bit","","Sets the field bit",505,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",505,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",505,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["sense2_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",506,[[],[["sense2_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",506,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",506,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",506,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",506,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",506,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",506,[[]]],[11,"variant","","Writes `variant` to the field",507,[[["sense2_a",4]],["w",6]]],[11,"none","","No detection",507,[[],["w",6]]],[11,"rise","","Rising edge detection",507,[[],["w",6]]],[11,"fall","","Falling edge detection",507,[[],["w",6]]],[11,"both","","Both edges detection",507,[[],["w",6]]],[11,"high","","High level detection",507,[[],["w",6]]],[11,"low","","Low level detection",507,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",507,[[],["w",6]]],[11,"set_bit","","Sets the field bit",508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",508,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense3_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",509,[[],[["variant",4],["sense3_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",509,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",509,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",509,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",509,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",509,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",509,[[]]],[11,"variant","","Writes `variant` to the field",510,[[["sense3_a",4]],["w",6]]],[11,"none","","No detection",510,[[],["w",6]]],[11,"rise","","Rising edge detection",510,[[],["w",6]]],[11,"fall","","Falling edge detection",510,[[],["w",6]]],[11,"both","","Both edges detection",510,[[],["w",6]]],[11,"high","","High level detection",510,[[],["w",6]]],[11,"low","","Low level detection",510,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",510,[[],["w",6]]],[11,"set_bit","","Sets the field bit",511,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",511,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",511,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["sense4_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",512,[[],[["sense4_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",512,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",512,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",512,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",512,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",512,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",512,[[]]],[11,"variant","","Writes `variant` to the field",513,[[["sense4_a",4]],["w",6]]],[11,"none","","No detection",513,[[],["w",6]]],[11,"rise","","Rising edge detection",513,[[],["w",6]]],[11,"fall","","Falling edge detection",513,[[],["w",6]]],[11,"both","","Both edges detection",513,[[],["w",6]]],[11,"high","","High level detection",513,[[],["w",6]]],[11,"low","","Low level detection",513,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",513,[[],["w",6]]],[11,"set_bit","","Sets the field bit",514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",514,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense5_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",515,[[],[["variant",4],["sense5_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",515,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",515,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",515,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",515,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",515,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",515,[[]]],[11,"variant","","Writes `variant` to the field",516,[[["sense5_a",4]],["w",6]]],[11,"none","","No detection",516,[[],["w",6]]],[11,"rise","","Rising edge detection",516,[[],["w",6]]],[11,"fall","","Falling edge detection",516,[[],["w",6]]],[11,"both","","Both edges detection",516,[[],["w",6]]],[11,"high","","High level detection",516,[[],["w",6]]],[11,"low","","Low level detection",516,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",516,[[],["w",6]]],[11,"set_bit","","Sets the field bit",517,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",517,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",517,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense6_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",518,[[],[["variant",4],["sense6_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",518,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",518,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",518,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",518,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",518,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",518,[[]]],[11,"variant","","Writes `variant` to the field",519,[[["sense6_a",4]],["w",6]]],[11,"none","","No detection",519,[[],["w",6]]],[11,"rise","","Rising edge detection",519,[[],["w",6]]],[11,"fall","","Falling edge detection",519,[[],["w",6]]],[11,"both","","Both edges detection",519,[[],["w",6]]],[11,"high","","High level detection",519,[[],["w",6]]],[11,"low","","Low level detection",519,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",519,[[],["w",6]]],[11,"set_bit","","Sets the field bit",520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",520,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["sense7_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd21g::eic::config","Get enumerated values variant",521,[[],[["sense7_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",521,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",521,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",521,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",521,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",521,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",521,[[]]],[11,"variant","","Writes `variant` to the field",522,[[["sense7_a",4]],["w",6]]],[11,"none","","No detection",522,[[],["w",6]]],[11,"rise","","Rising edge detection",522,[[],["w",6]]],[11,"fall","","Falling edge detection",522,[[],["w",6]]],[11,"both","","Both edges detection",522,[[],["w",6]]],[11,"high","","High level detection",522,[[],["w",6]]],[11,"low","","Low level detection",522,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",522,[[],["w",6]]],[11,"set_bit","","Sets the field bit",523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",523,[[],["w",6]]],[11,"sense0","atsamd21g::generic","Bits 0:2 - Input Sense 0 Configuration",6,[[],["sense0_r",6]]],[11,"filten0","","Bit 3 - Filter 0 Enable",6,[[],["filten0_r",6]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",6,[[],["sense1_r",6]]],[11,"filten1","","Bit 7 - Filter 1 Enable",6,[[],["filten1_r",6]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",6,[[],["sense2_r",6]]],[11,"filten2","","Bit 11 - Filter 2 Enable",6,[[],["filten2_r",6]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",6,[[],["sense3_r",6]]],[11,"filten3","","Bit 15 - Filter 3 Enable",6,[[],["filten3_r",6]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",6,[[],["sense4_r",6]]],[11,"filten4","","Bit 19 - Filter 4 Enable",6,[[],["filten4_r",6]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",6,[[],["sense5_r",6]]],[11,"filten5","","Bit 23 - Filter 5 Enable",6,[[],["filten5_r",6]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",6,[[],["sense6_r",6]]],[11,"filten6","","Bit 27 - Filter 6 Enable",6,[[],["filten6_r",6]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",6,[[],["sense7_r",6]]],[11,"filten7","","Bit 31 - Filter 7 Enable",6,[[],["filten7_r",6]]],[11,"sense0","atsamd21g::eic::config","Bits 0:2 - Input Sense 0 Configuration",524,[[],["sense0_r",6]]],[11,"filten0","","Bit 3 - Filter 0 Enable",524,[[],["filten0_r",6]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",524,[[],["sense1_r",6]]],[11,"filten1","","Bit 7 - Filter 1 Enable",524,[[],["filten1_r",6]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",524,[[],["sense2_r",6]]],[11,"filten2","","Bit 11 - Filter 2 Enable",524,[[],["filten2_r",6]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",524,[[],["sense3_r",6]]],[11,"filten3","","Bit 15 - Filter 3 Enable",524,[[],["filten3_r",6]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",524,[[],["sense4_r",6]]],[11,"filten4","","Bit 19 - Filter 4 Enable",524,[[],["filten4_r",6]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",524,[[],["sense5_r",6]]],[11,"filten5","","Bit 23 - Filter 5 Enable",524,[[],["filten5_r",6]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",524,[[],["sense6_r",6]]],[11,"filten6","","Bit 27 - Filter 6 Enable",524,[[],["filten6_r",6]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",524,[[],["sense7_r",6]]],[11,"filten7","","Bit 31 - Filter 7 Enable",524,[[],["filten7_r",6]]],[11,"sense0","atsamd21g::generic","Bits 0:2 - Input Sense 0 Configuration",7,[[],["sense0_w",3]]],[11,"filten0","","Bit 3 - Filter 0 Enable",7,[[],["filten0_w",3]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",7,[[],["sense1_w",3]]],[11,"filten1","","Bit 7 - Filter 1 Enable",7,[[],["filten1_w",3]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",7,[[],["sense2_w",3]]],[11,"filten2","","Bit 11 - Filter 2 Enable",7,[[],["filten2_w",3]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",7,[[],["sense3_w",3]]],[11,"filten3","","Bit 15 - Filter 3 Enable",7,[[],["filten3_w",3]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",7,[[],["sense4_w",3]]],[11,"filten4","","Bit 19 - Filter 4 Enable",7,[[],["filten4_w",3]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",7,[[],["sense5_w",3]]],[11,"filten5","","Bit 23 - Filter 5 Enable",7,[[],["filten5_w",3]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",7,[[],["sense6_w",3]]],[11,"filten6","","Bit 27 - Filter 6 Enable",7,[[],["filten6_w",3]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",7,[[],["sense7_w",3]]],[11,"filten7","","Bit 31 - Filter 7 Enable",7,[[],["filten7_w",3]]],[11,"sense0","atsamd21g::eic::config","Bits 0:2 - Input Sense 0 Configuration",525,[[],["sense0_w",3]]],[11,"filten0","","Bit 3 - Filter 0 Enable",525,[[],["filten0_w",3]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",525,[[],["sense1_w",3]]],[11,"filten1","","Bit 7 - Filter 1 Enable",525,[[],["filten1_w",3]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",525,[[],["sense2_w",3]]],[11,"filten2","","Bit 11 - Filter 2 Enable",525,[[],["filten2_w",3]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",525,[[],["sense3_w",3]]],[11,"filten3","","Bit 15 - Filter 3 Enable",525,[[],["filten3_w",3]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",525,[[],["sense4_w",3]]],[11,"filten4","","Bit 19 - Filter 4 Enable",525,[[],["filten4_w",3]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",525,[[],["sense5_w",3]]],[11,"filten5","","Bit 23 - Filter 5 Enable",525,[[],["filten5_w",3]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",525,[[],["sense6_w",3]]],[11,"filten6","","Bit 27 - Filter 6 Enable",525,[[],["filten6_w",3]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",525,[[],["sense7_w",3]]],[11,"filten7","","Bit 31 - Filter 7 Enable",525,[[],["filten7_w",3]]],[6,"CTRL","atsamd21g::eic","Control",null,null],[6,"STATUS","","Status",null,null],[6,"NMICTRL","","Non-Maskable Interrupt Control",null,null],[6,"NMIFLAG","","Non-Maskable Interrupt Flag Status and Clear",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"WAKEUP","","Wake-Up Enable",null,null],[6,"CONFIG","","Configuration n",null,null],[0,"evsys","atsamd21g","Event System Interface",null,null],[3,"RegisterBlock","atsamd21g::evsys","Register block",null,null],[12,"ctrl","","0x00 - Control",526,null],[12,"channel","","0x04 - Channel",526,null],[12,"user","","0x08 - User Multiplexer",526,null],[12,"chstatus","","0x0c - Channel Status",526,null],[12,"intenclr","","0x10 - Interrupt Enable Clear",526,null],[12,"intenset","","0x14 - Interrupt Enable Set",526,null],[12,"intflag","","0x18 - Interrupt Flag Status and Clear",526,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd21g::evsys::ctrl","Write proxy for field `SWRST`",null,null],[3,"GCLKREQ_W","","Write proxy for field `GCLKREQ`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",527,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",527,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",527,[[],["w",6]]],[11,"set_bit","","Sets the field bit",528,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",528,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",528,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"gclkreq","","Bit 4 - Generic Clock Requests",7,[[],["gclkreq_w",3]]],[11,"swrst","atsamd21g::evsys::ctrl","Bit 0 - Software Reset",529,[[],["swrst_w",3]]],[11,"gclkreq","","Bit 4 - Generic Clock Requests",529,[[],["gclkreq_w",3]]],[0,"channel","atsamd21g::evsys","Channel",null,null],[3,"CHANNEL_W","atsamd21g::evsys::channel","Write proxy for field `CHANNEL`",null,null],[3,"SWEVT_W","","Write proxy for field `SWEVT`",null,null],[3,"EVGEN_W","","Write proxy for field `EVGEN`",null,null],[3,"PATH_W","","Write proxy for field `PATH`",null,null],[3,"EDGSEL_W","","Write proxy for field `EDGSEL`",null,null],[4,"PATH_A","","Path Selection",null,null],[13,"SYNCHRONOUS","","0: Synchronous path",530,null],[13,"RESYNCHRONIZED","","1: Resynchronized path",530,null],[13,"ASYNCHRONOUS","","2: Asynchronous path",530,null],[4,"EDGSEL_A","","Edge Detection Selection",null,null],[13,"NO_EVT_OUTPUT","","0: No event output when using the resynchronized or…",531,null],[13,"RISING_EDGE","","1: Event detection only on the rising edge of the signal…",531,null],[13,"FALLING_EDGE","","2: Event detection only on the falling edge of the signal…",531,null],[13,"BOTH_EDGES","","3: Event detection on rising and falling edges of the…",531,null],[6,"R","","Reader of register CHANNEL",null,null],[6,"W","","Writer for register CHANNEL",null,null],[6,"CHANNEL_R","","Reader of field `CHANNEL`",null,null],[6,"SWEVT_R","","Reader of field `SWEVT`",null,null],[6,"EVGEN_R","","Reader of field `EVGEN`",null,null],[6,"PATH_R","","Reader of field `PATH`",null,null],[6,"EDGSEL_R","","Reader of field `EDGSEL`",null,null],[11,"bits","","Writes raw bits to the field",532,[[],["w",6]]],[11,"set_bit","","Sets the field bit",533,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",533,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",533,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",534,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["path_a",4]]]],[11,"is_synchronous","","Checks if the value of the field is `SYNCHRONOUS`",6,[[]]],[11,"is_resynchronized","","Checks if the value of the field is `RESYNCHRONIZED`",6,[[]]],[11,"is_asynchronous","","Checks if the value of the field is `ASYNCHRONOUS`",6,[[]]],[11,"variant","atsamd21g::evsys::channel","Get enumerated values variant",535,[[],[["variant",4],["path_a",4]]]],[11,"is_synchronous","","Checks if the value of the field is `SYNCHRONOUS`",535,[[]]],[11,"is_resynchronized","","Checks if the value of the field is `RESYNCHRONIZED`",535,[[]]],[11,"is_asynchronous","","Checks if the value of the field is `ASYNCHRONOUS`",535,[[]]],[11,"variant","","Writes `variant` to the field",536,[[["path_a",4]],["w",6]]],[11,"synchronous","","Synchronous path",536,[[],["w",6]]],[11,"resynchronized","","Resynchronized path",536,[[],["w",6]]],[11,"asynchronous","","Asynchronous path",536,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",536,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["edgsel_a",4]]],[11,"is_no_evt_output","","Checks if the value of the field is `NO_EVT_OUTPUT`",6,[[]]],[11,"is_rising_edge","","Checks if the value of the field is `RISING_EDGE`",6,[[]]],[11,"is_falling_edge","","Checks if the value of the field is `FALLING_EDGE`",6,[[]]],[11,"is_both_edges","","Checks if the value of the field is `BOTH_EDGES`",6,[[]]],[11,"variant","atsamd21g::evsys::channel","Get enumerated values variant",537,[[],["edgsel_a",4]]],[11,"is_no_evt_output","","Checks if the value of the field is `NO_EVT_OUTPUT`",537,[[]]],[11,"is_rising_edge","","Checks if the value of the field is `RISING_EDGE`",537,[[]]],[11,"is_falling_edge","","Checks if the value of the field is `FALLING_EDGE`",537,[[]]],[11,"is_both_edges","","Checks if the value of the field is `BOTH_EDGES`",537,[[]]],[11,"variant","","Writes `variant` to the field",538,[[["edgsel_a",4]],["w",6]]],[11,"no_evt_output","","No event output when using the resynchronized or…",538,[[],["w",6]]],[11,"rising_edge","","Event detection only on the rising edge of the signal from…",538,[[],["w",6]]],[11,"falling_edge","","Event detection only on the falling edge of the signal…",538,[[],["w",6]]],[11,"both_edges","","Event detection on rising and falling edges of the signal…",538,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",538,[[],["w",6]]],[11,"channel","atsamd21g::generic","Bits 0:3 - Channel Selection",6,[[],["channel_r",6]]],[11,"swevt","","Bit 8 - Software Event",6,[[],["swevt_r",6]]],[11,"evgen","","Bits 16:22 - Event Generator Selection",6,[[],["evgen_r",6]]],[11,"path","","Bits 24:25 - Path Selection",6,[[],["path_r",6]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",6,[[],["edgsel_r",6]]],[11,"channel","atsamd21g::evsys::channel","Bits 0:3 - Channel Selection",539,[[],["channel_r",6]]],[11,"swevt","","Bit 8 - Software Event",539,[[],["swevt_r",6]]],[11,"evgen","","Bits 16:22 - Event Generator Selection",539,[[],["evgen_r",6]]],[11,"path","","Bits 24:25 - Path Selection",539,[[],["path_r",6]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",539,[[],["edgsel_r",6]]],[11,"channel","atsamd21g::generic","Bits 0:3 - Channel Selection",7,[[],["channel_w",3]]],[11,"swevt","","Bit 8 - Software Event",7,[[],["swevt_w",3]]],[11,"evgen","","Bits 16:22 - Event Generator Selection",7,[[],["evgen_w",3]]],[11,"path","","Bits 24:25 - Path Selection",7,[[],["path_w",3]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",7,[[],["edgsel_w",3]]],[11,"channel","atsamd21g::evsys::channel","Bits 0:3 - Channel Selection",540,[[],["channel_w",3]]],[11,"swevt","","Bit 8 - Software Event",540,[[],["swevt_w",3]]],[11,"evgen","","Bits 16:22 - Event Generator Selection",540,[[],["evgen_w",3]]],[11,"path","","Bits 24:25 - Path Selection",540,[[],["path_w",3]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",540,[[],["edgsel_w",3]]],[0,"user","atsamd21g::evsys","User Multiplexer",null,null],[3,"USER_W","atsamd21g::evsys::user","Write proxy for field `USER`",null,null],[3,"CHANNEL_W","","Write proxy for field `CHANNEL`",null,null],[4,"CHANNEL_A","","Channel Event Selection",null,null],[13,"_0","","0: No Channel Output Selected",541,null],[6,"R","","Reader of register USER",null,null],[6,"W","","Writer for register USER",null,null],[6,"USER_R","","Reader of field `USER`",null,null],[6,"CHANNEL_R","","Reader of field `CHANNEL`",null,null],[11,"bits","","Writes raw bits to the field",542,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["channel_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"variant","atsamd21g::evsys::user","Get enumerated values variant",543,[[],[["variant",4],["channel_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",543,[[]]],[11,"variant","","Writes `variant` to the field",544,[[["channel_a",4]],["w",6]]],[11,"_0","","No Channel Output Selected",544,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",544,[[],["w",6]]],[11,"user","atsamd21g::generic","Bits 0:4 - User Multiplexer Selection",6,[[],["user_r",6]]],[11,"channel","","Bits 8:12 - Channel Event Selection",6,[[],["channel_r",6]]],[11,"user","atsamd21g::evsys::user","Bits 0:4 - User Multiplexer Selection",545,[[],["user_r",6]]],[11,"channel","","Bits 8:12 - Channel Event Selection",545,[[],["channel_r",6]]],[11,"user","atsamd21g::generic","Bits 0:4 - User Multiplexer Selection",7,[[],["user_w",3]]],[11,"channel","","Bits 8:12 - Channel Event Selection",7,[[],["channel_w",3]]],[11,"user","atsamd21g::evsys::user","Bits 0:4 - User Multiplexer Selection",546,[[],["user_w",3]]],[11,"channel","","Bits 8:12 - Channel Event Selection",546,[[],["channel_w",3]]],[0,"chstatus","atsamd21g::evsys","Channel Status",null,null],[6,"R","atsamd21g::evsys::chstatus","Reader of register CHSTATUS",null,null],[6,"USRRDY0_R","","Reader of field `USRRDY0`",null,null],[6,"USRRDY1_R","","Reader of field `USRRDY1`",null,null],[6,"USRRDY2_R","","Reader of field `USRRDY2`",null,null],[6,"USRRDY3_R","","Reader of field `USRRDY3`",null,null],[6,"USRRDY4_R","","Reader of field `USRRDY4`",null,null],[6,"USRRDY5_R","","Reader of field `USRRDY5`",null,null],[6,"USRRDY6_R","","Reader of field `USRRDY6`",null,null],[6,"USRRDY7_R","","Reader of field `USRRDY7`",null,null],[6,"CHBUSY0_R","","Reader of field `CHBUSY0`",null,null],[6,"CHBUSY1_R","","Reader of field `CHBUSY1`",null,null],[6,"CHBUSY2_R","","Reader of field `CHBUSY2`",null,null],[6,"CHBUSY3_R","","Reader of field `CHBUSY3`",null,null],[6,"CHBUSY4_R","","Reader of field `CHBUSY4`",null,null],[6,"CHBUSY5_R","","Reader of field `CHBUSY5`",null,null],[6,"CHBUSY6_R","","Reader of field `CHBUSY6`",null,null],[6,"CHBUSY7_R","","Reader of field `CHBUSY7`",null,null],[6,"USRRDY8_R","","Reader of field `USRRDY8`",null,null],[6,"USRRDY9_R","","Reader of field `USRRDY9`",null,null],[6,"USRRDY10_R","","Reader of field `USRRDY10`",null,null],[6,"USRRDY11_R","","Reader of field `USRRDY11`",null,null],[6,"CHBUSY8_R","","Reader of field `CHBUSY8`",null,null],[6,"CHBUSY9_R","","Reader of field `CHBUSY9`",null,null],[6,"CHBUSY10_R","","Reader of field `CHBUSY10`",null,null],[6,"CHBUSY11_R","","Reader of field `CHBUSY11`",null,null],[11,"usrrdy0","atsamd21g::generic","Bit 0 - Channel 0 User Ready",6,[[],["usrrdy0_r",6]]],[11,"usrrdy1","","Bit 1 - Channel 1 User Ready",6,[[],["usrrdy1_r",6]]],[11,"usrrdy2","","Bit 2 - Channel 2 User Ready",6,[[],["usrrdy2_r",6]]],[11,"usrrdy3","","Bit 3 - Channel 3 User Ready",6,[[],["usrrdy3_r",6]]],[11,"usrrdy4","","Bit 4 - Channel 4 User Ready",6,[[],["usrrdy4_r",6]]],[11,"usrrdy5","","Bit 5 - Channel 5 User Ready",6,[[],["usrrdy5_r",6]]],[11,"usrrdy6","","Bit 6 - Channel 6 User Ready",6,[[],["usrrdy6_r",6]]],[11,"usrrdy7","","Bit 7 - Channel 7 User Ready",6,[[],["usrrdy7_r",6]]],[11,"chbusy0","","Bit 8 - Channel 0 Busy",6,[[],["chbusy0_r",6]]],[11,"chbusy1","","Bit 9 - Channel 1 Busy",6,[[],["chbusy1_r",6]]],[11,"chbusy2","","Bit 10 - Channel 2 Busy",6,[[],["chbusy2_r",6]]],[11,"chbusy3","","Bit 11 - Channel 3 Busy",6,[[],["chbusy3_r",6]]],[11,"chbusy4","","Bit 12 - Channel 4 Busy",6,[[],["chbusy4_r",6]]],[11,"chbusy5","","Bit 13 - Channel 5 Busy",6,[[],["chbusy5_r",6]]],[11,"chbusy6","","Bit 14 - Channel 6 Busy",6,[[],["chbusy6_r",6]]],[11,"chbusy7","","Bit 15 - Channel 7 Busy",6,[[],["chbusy7_r",6]]],[11,"usrrdy8","","Bit 16 - Channel 8 User Ready",6,[[],["usrrdy8_r",6]]],[11,"usrrdy9","","Bit 17 - Channel 9 User Ready",6,[[],["usrrdy9_r",6]]],[11,"usrrdy10","","Bit 18 - Channel 10 User Ready",6,[[],["usrrdy10_r",6]]],[11,"usrrdy11","","Bit 19 - Channel 11 User Ready",6,[[],["usrrdy11_r",6]]],[11,"chbusy8","","Bit 24 - Channel 8 Busy",6,[[],["chbusy8_r",6]]],[11,"chbusy9","","Bit 25 - Channel 9 Busy",6,[[],["chbusy9_r",6]]],[11,"chbusy10","","Bit 26 - Channel 10 Busy",6,[[],["chbusy10_r",6]]],[11,"chbusy11","","Bit 27 - Channel 11 Busy",6,[[],["chbusy11_r",6]]],[11,"usrrdy0","atsamd21g::evsys::chstatus","Bit 0 - Channel 0 User Ready",547,[[],["usrrdy0_r",6]]],[11,"usrrdy1","","Bit 1 - Channel 1 User Ready",547,[[],["usrrdy1_r",6]]],[11,"usrrdy2","","Bit 2 - Channel 2 User Ready",547,[[],["usrrdy2_r",6]]],[11,"usrrdy3","","Bit 3 - Channel 3 User Ready",547,[[],["usrrdy3_r",6]]],[11,"usrrdy4","","Bit 4 - Channel 4 User Ready",547,[[],["usrrdy4_r",6]]],[11,"usrrdy5","","Bit 5 - Channel 5 User Ready",547,[[],["usrrdy5_r",6]]],[11,"usrrdy6","","Bit 6 - Channel 6 User Ready",547,[[],["usrrdy6_r",6]]],[11,"usrrdy7","","Bit 7 - Channel 7 User Ready",547,[[],["usrrdy7_r",6]]],[11,"chbusy0","","Bit 8 - Channel 0 Busy",547,[[],["chbusy0_r",6]]],[11,"chbusy1","","Bit 9 - Channel 1 Busy",547,[[],["chbusy1_r",6]]],[11,"chbusy2","","Bit 10 - Channel 2 Busy",547,[[],["chbusy2_r",6]]],[11,"chbusy3","","Bit 11 - Channel 3 Busy",547,[[],["chbusy3_r",6]]],[11,"chbusy4","","Bit 12 - Channel 4 Busy",547,[[],["chbusy4_r",6]]],[11,"chbusy5","","Bit 13 - Channel 5 Busy",547,[[],["chbusy5_r",6]]],[11,"chbusy6","","Bit 14 - Channel 6 Busy",547,[[],["chbusy6_r",6]]],[11,"chbusy7","","Bit 15 - Channel 7 Busy",547,[[],["chbusy7_r",6]]],[11,"usrrdy8","","Bit 16 - Channel 8 User Ready",547,[[],["usrrdy8_r",6]]],[11,"usrrdy9","","Bit 17 - Channel 9 User Ready",547,[[],["usrrdy9_r",6]]],[11,"usrrdy10","","Bit 18 - Channel 10 User Ready",547,[[],["usrrdy10_r",6]]],[11,"usrrdy11","","Bit 19 - Channel 11 User Ready",547,[[],["usrrdy11_r",6]]],[11,"chbusy8","","Bit 24 - Channel 8 Busy",547,[[],["chbusy8_r",6]]],[11,"chbusy9","","Bit 25 - Channel 9 Busy",547,[[],["chbusy9_r",6]]],[11,"chbusy10","","Bit 26 - Channel 10 Busy",547,[[],["chbusy10_r",6]]],[11,"chbusy11","","Bit 27 - Channel 11 Busy",547,[[],["chbusy11_r",6]]],[0,"intenclr","atsamd21g::evsys","Interrupt Enable Clear",null,null],[3,"OVR0_W","atsamd21g::evsys::intenclr","Write proxy for field `OVR0`",null,null],[3,"OVR1_W","","Write proxy for field `OVR1`",null,null],[3,"OVR2_W","","Write proxy for field `OVR2`",null,null],[3,"OVR3_W","","Write proxy for field `OVR3`",null,null],[3,"OVR4_W","","Write proxy for field `OVR4`",null,null],[3,"OVR5_W","","Write proxy for field `OVR5`",null,null],[3,"OVR6_W","","Write proxy for field `OVR6`",null,null],[3,"OVR7_W","","Write proxy for field `OVR7`",null,null],[3,"EVD0_W","","Write proxy for field `EVD0`",null,null],[3,"EVD1_W","","Write proxy for field `EVD1`",null,null],[3,"EVD2_W","","Write proxy for field `EVD2`",null,null],[3,"EVD3_W","","Write proxy for field `EVD3`",null,null],[3,"EVD4_W","","Write proxy for field `EVD4`",null,null],[3,"EVD5_W","","Write proxy for field `EVD5`",null,null],[3,"EVD6_W","","Write proxy for field `EVD6`",null,null],[3,"EVD7_W","","Write proxy for field `EVD7`",null,null],[3,"OVR8_W","","Write proxy for field `OVR8`",null,null],[3,"OVR9_W","","Write proxy for field `OVR9`",null,null],[3,"OVR10_W","","Write proxy for field `OVR10`",null,null],[3,"OVR11_W","","Write proxy for field `OVR11`",null,null],[3,"EVD8_W","","Write proxy for field `EVD8`",null,null],[3,"EVD9_W","","Write proxy for field `EVD9`",null,null],[3,"EVD10_W","","Write proxy for field `EVD10`",null,null],[3,"EVD11_W","","Write proxy for field `EVD11`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVR0_R","","Reader of field `OVR0`",null,null],[6,"OVR1_R","","Reader of field `OVR1`",null,null],[6,"OVR2_R","","Reader of field `OVR2`",null,null],[6,"OVR3_R","","Reader of field `OVR3`",null,null],[6,"OVR4_R","","Reader of field `OVR4`",null,null],[6,"OVR5_R","","Reader of field `OVR5`",null,null],[6,"OVR6_R","","Reader of field `OVR6`",null,null],[6,"OVR7_R","","Reader of field `OVR7`",null,null],[6,"EVD0_R","","Reader of field `EVD0`",null,null],[6,"EVD1_R","","Reader of field `EVD1`",null,null],[6,"EVD2_R","","Reader of field `EVD2`",null,null],[6,"EVD3_R","","Reader of field `EVD3`",null,null],[6,"EVD4_R","","Reader of field `EVD4`",null,null],[6,"EVD5_R","","Reader of field `EVD5`",null,null],[6,"EVD6_R","","Reader of field `EVD6`",null,null],[6,"EVD7_R","","Reader of field `EVD7`",null,null],[6,"OVR8_R","","Reader of field `OVR8`",null,null],[6,"OVR9_R","","Reader of field `OVR9`",null,null],[6,"OVR10_R","","Reader of field `OVR10`",null,null],[6,"OVR11_R","","Reader of field `OVR11`",null,null],[6,"EVD8_R","","Reader of field `EVD8`",null,null],[6,"EVD9_R","","Reader of field `EVD9`",null,null],[6,"EVD10_R","","Reader of field `EVD10`",null,null],[6,"EVD11_R","","Reader of field `EVD11`",null,null],[11,"set_bit","","Sets the field bit",548,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",548,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",548,[[],["w",6]]],[11,"set_bit","","Sets the field bit",549,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",549,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",549,[[],["w",6]]],[11,"set_bit","","Sets the field bit",550,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",550,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",550,[[],["w",6]]],[11,"set_bit","","Sets the field bit",551,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",551,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",552,[[],["w",6]]],[11,"set_bit","","Sets the field bit",553,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",553,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",553,[[],["w",6]]],[11,"set_bit","","Sets the field bit",554,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",554,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",554,[[],["w",6]]],[11,"set_bit","","Sets the field bit",555,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",555,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",555,[[],["w",6]]],[11,"set_bit","","Sets the field bit",556,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",556,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",556,[[],["w",6]]],[11,"set_bit","","Sets the field bit",557,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",557,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",557,[[],["w",6]]],[11,"set_bit","","Sets the field bit",558,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",558,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",558,[[],["w",6]]],[11,"set_bit","","Sets the field bit",559,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",559,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",559,[[],["w",6]]],[11,"set_bit","","Sets the field bit",560,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",560,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",560,[[],["w",6]]],[11,"set_bit","","Sets the field bit",561,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",561,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",561,[[],["w",6]]],[11,"set_bit","","Sets the field bit",562,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",562,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",562,[[],["w",6]]],[11,"set_bit","","Sets the field bit",563,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",563,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",563,[[],["w",6]]],[11,"set_bit","","Sets the field bit",564,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",564,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",564,[[],["w",6]]],[11,"set_bit","","Sets the field bit",565,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",565,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",565,[[],["w",6]]],[11,"set_bit","","Sets the field bit",566,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",566,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",566,[[],["w",6]]],[11,"set_bit","","Sets the field bit",567,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",567,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",567,[[],["w",6]]],[11,"set_bit","","Sets the field bit",568,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",568,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",568,[[],["w",6]]],[11,"set_bit","","Sets the field bit",569,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",569,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",569,[[],["w",6]]],[11,"set_bit","","Sets the field bit",570,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",570,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",570,[[],["w",6]]],[11,"set_bit","","Sets the field bit",571,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",571,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",571,[[],["w",6]]],[11,"ovr0","atsamd21g::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",6,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",6,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",6,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",6,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",6,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",6,[[],["ovr5_r",6]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",6,[[],["ovr6_r",6]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",6,[[],["ovr7_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",6,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",6,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",6,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",6,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",6,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",6,[[],["evd5_r",6]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",6,[[],["evd6_r",6]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",6,[[],["evd7_r",6]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",6,[[],["ovr8_r",6]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",6,[[],["ovr9_r",6]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",6,[[],["ovr10_r",6]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",6,[[],["ovr11_r",6]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",6,[[],["evd8_r",6]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",6,[[],["evd9_r",6]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",6,[[],["evd10_r",6]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",6,[[],["evd11_r",6]]],[11,"ovr0","atsamd21g::evsys::intenclr","Bit 0 - Channel 0 Overrun Interrupt Enable",572,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",572,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",572,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",572,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",572,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",572,[[],["ovr5_r",6]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",572,[[],["ovr6_r",6]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",572,[[],["ovr7_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",572,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",572,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",572,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",572,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",572,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",572,[[],["evd5_r",6]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",572,[[],["evd6_r",6]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",572,[[],["evd7_r",6]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",572,[[],["ovr8_r",6]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",572,[[],["ovr9_r",6]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",572,[[],["ovr10_r",6]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",572,[[],["ovr11_r",6]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",572,[[],["evd8_r",6]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",572,[[],["evd9_r",6]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",572,[[],["evd10_r",6]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",572,[[],["evd11_r",6]]],[11,"ovr0","atsamd21g::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",7,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",7,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",7,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",7,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",7,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",7,[[],["ovr5_w",3]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",7,[[],["ovr6_w",3]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",7,[[],["ovr7_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",7,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",7,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",7,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",7,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",7,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",7,[[],["evd5_w",3]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",7,[[],["evd6_w",3]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",7,[[],["evd7_w",3]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",7,[[],["ovr8_w",3]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",7,[[],["ovr9_w",3]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",7,[[],["ovr10_w",3]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",7,[[],["ovr11_w",3]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",7,[[],["evd8_w",3]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",7,[[],["evd9_w",3]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",7,[[],["evd10_w",3]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",7,[[],["evd11_w",3]]],[11,"ovr0","atsamd21g::evsys::intenclr","Bit 0 - Channel 0 Overrun Interrupt Enable",573,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",573,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",573,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",573,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",573,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",573,[[],["ovr5_w",3]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",573,[[],["ovr6_w",3]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",573,[[],["ovr7_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",573,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",573,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",573,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",573,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",573,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",573,[[],["evd5_w",3]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",573,[[],["evd6_w",3]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",573,[[],["evd7_w",3]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",573,[[],["ovr8_w",3]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",573,[[],["ovr9_w",3]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",573,[[],["ovr10_w",3]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",573,[[],["ovr11_w",3]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",573,[[],["evd8_w",3]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",573,[[],["evd9_w",3]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",573,[[],["evd10_w",3]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",573,[[],["evd11_w",3]]],[0,"intenset","atsamd21g::evsys","Interrupt Enable Set",null,null],[3,"OVR0_W","atsamd21g::evsys::intenset","Write proxy for field `OVR0`",null,null],[3,"OVR1_W","","Write proxy for field `OVR1`",null,null],[3,"OVR2_W","","Write proxy for field `OVR2`",null,null],[3,"OVR3_W","","Write proxy for field `OVR3`",null,null],[3,"OVR4_W","","Write proxy for field `OVR4`",null,null],[3,"OVR5_W","","Write proxy for field `OVR5`",null,null],[3,"OVR6_W","","Write proxy for field `OVR6`",null,null],[3,"OVR7_W","","Write proxy for field `OVR7`",null,null],[3,"EVD0_W","","Write proxy for field `EVD0`",null,null],[3,"EVD1_W","","Write proxy for field `EVD1`",null,null],[3,"EVD2_W","","Write proxy for field `EVD2`",null,null],[3,"EVD3_W","","Write proxy for field `EVD3`",null,null],[3,"EVD4_W","","Write proxy for field `EVD4`",null,null],[3,"EVD5_W","","Write proxy for field `EVD5`",null,null],[3,"EVD6_W","","Write proxy for field `EVD6`",null,null],[3,"EVD7_W","","Write proxy for field `EVD7`",null,null],[3,"OVR8_W","","Write proxy for field `OVR8`",null,null],[3,"OVR9_W","","Write proxy for field `OVR9`",null,null],[3,"OVR10_W","","Write proxy for field `OVR10`",null,null],[3,"OVR11_W","","Write proxy for field `OVR11`",null,null],[3,"EVD8_W","","Write proxy for field `EVD8`",null,null],[3,"EVD9_W","","Write proxy for field `EVD9`",null,null],[3,"EVD10_W","","Write proxy for field `EVD10`",null,null],[3,"EVD11_W","","Write proxy for field `EVD11`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVR0_R","","Reader of field `OVR0`",null,null],[6,"OVR1_R","","Reader of field `OVR1`",null,null],[6,"OVR2_R","","Reader of field `OVR2`",null,null],[6,"OVR3_R","","Reader of field `OVR3`",null,null],[6,"OVR4_R","","Reader of field `OVR4`",null,null],[6,"OVR5_R","","Reader of field `OVR5`",null,null],[6,"OVR6_R","","Reader of field `OVR6`",null,null],[6,"OVR7_R","","Reader of field `OVR7`",null,null],[6,"EVD0_R","","Reader of field `EVD0`",null,null],[6,"EVD1_R","","Reader of field `EVD1`",null,null],[6,"EVD2_R","","Reader of field `EVD2`",null,null],[6,"EVD3_R","","Reader of field `EVD3`",null,null],[6,"EVD4_R","","Reader of field `EVD4`",null,null],[6,"EVD5_R","","Reader of field `EVD5`",null,null],[6,"EVD6_R","","Reader of field `EVD6`",null,null],[6,"EVD7_R","","Reader of field `EVD7`",null,null],[6,"OVR8_R","","Reader of field `OVR8`",null,null],[6,"OVR9_R","","Reader of field `OVR9`",null,null],[6,"OVR10_R","","Reader of field `OVR10`",null,null],[6,"OVR11_R","","Reader of field `OVR11`",null,null],[6,"EVD8_R","","Reader of field `EVD8`",null,null],[6,"EVD9_R","","Reader of field `EVD9`",null,null],[6,"EVD10_R","","Reader of field `EVD10`",null,null],[6,"EVD11_R","","Reader of field `EVD11`",null,null],[11,"set_bit","","Sets the field bit",574,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",574,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",574,[[],["w",6]]],[11,"set_bit","","Sets the field bit",575,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",575,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",575,[[],["w",6]]],[11,"set_bit","","Sets the field bit",576,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",576,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",576,[[],["w",6]]],[11,"set_bit","","Sets the field bit",577,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",577,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",577,[[],["w",6]]],[11,"set_bit","","Sets the field bit",578,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",578,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",578,[[],["w",6]]],[11,"set_bit","","Sets the field bit",579,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",579,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",579,[[],["w",6]]],[11,"set_bit","","Sets the field bit",580,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",580,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",580,[[],["w",6]]],[11,"set_bit","","Sets the field bit",581,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",581,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",581,[[],["w",6]]],[11,"set_bit","","Sets the field bit",582,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",582,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",582,[[],["w",6]]],[11,"set_bit","","Sets the field bit",583,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",583,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",583,[[],["w",6]]],[11,"set_bit","","Sets the field bit",584,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",584,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",584,[[],["w",6]]],[11,"set_bit","","Sets the field bit",585,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",585,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",585,[[],["w",6]]],[11,"set_bit","","Sets the field bit",586,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",586,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",586,[[],["w",6]]],[11,"set_bit","","Sets the field bit",587,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",587,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",587,[[],["w",6]]],[11,"set_bit","","Sets the field bit",588,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",588,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",588,[[],["w",6]]],[11,"set_bit","","Sets the field bit",589,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",589,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",589,[[],["w",6]]],[11,"set_bit","","Sets the field bit",590,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",590,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",590,[[],["w",6]]],[11,"set_bit","","Sets the field bit",591,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",591,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",591,[[],["w",6]]],[11,"set_bit","","Sets the field bit",592,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",592,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",592,[[],["w",6]]],[11,"set_bit","","Sets the field bit",593,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",593,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",593,[[],["w",6]]],[11,"set_bit","","Sets the field bit",594,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",594,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",594,[[],["w",6]]],[11,"set_bit","","Sets the field bit",595,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",595,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",595,[[],["w",6]]],[11,"set_bit","","Sets the field bit",596,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",596,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",596,[[],["w",6]]],[11,"set_bit","","Sets the field bit",597,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",597,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",597,[[],["w",6]]],[11,"ovr0","atsamd21g::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",6,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",6,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",6,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",6,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",6,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",6,[[],["ovr5_r",6]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",6,[[],["ovr6_r",6]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",6,[[],["ovr7_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",6,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",6,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",6,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",6,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",6,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",6,[[],["evd5_r",6]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",6,[[],["evd6_r",6]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",6,[[],["evd7_r",6]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",6,[[],["ovr8_r",6]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",6,[[],["ovr9_r",6]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",6,[[],["ovr10_r",6]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",6,[[],["ovr11_r",6]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",6,[[],["evd8_r",6]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",6,[[],["evd9_r",6]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",6,[[],["evd10_r",6]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",6,[[],["evd11_r",6]]],[11,"ovr0","atsamd21g::evsys::intenset","Bit 0 - Channel 0 Overrun Interrupt Enable",598,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",598,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",598,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",598,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",598,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",598,[[],["ovr5_r",6]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",598,[[],["ovr6_r",6]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",598,[[],["ovr7_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",598,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",598,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",598,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",598,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",598,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",598,[[],["evd5_r",6]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",598,[[],["evd6_r",6]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",598,[[],["evd7_r",6]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",598,[[],["ovr8_r",6]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",598,[[],["ovr9_r",6]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",598,[[],["ovr10_r",6]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",598,[[],["ovr11_r",6]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",598,[[],["evd8_r",6]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",598,[[],["evd9_r",6]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",598,[[],["evd10_r",6]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",598,[[],["evd11_r",6]]],[11,"ovr0","atsamd21g::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",7,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",7,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",7,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",7,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",7,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",7,[[],["ovr5_w",3]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",7,[[],["ovr6_w",3]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",7,[[],["ovr7_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",7,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",7,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",7,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",7,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",7,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",7,[[],["evd5_w",3]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",7,[[],["evd6_w",3]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",7,[[],["evd7_w",3]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",7,[[],["ovr8_w",3]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",7,[[],["ovr9_w",3]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",7,[[],["ovr10_w",3]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",7,[[],["ovr11_w",3]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",7,[[],["evd8_w",3]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",7,[[],["evd9_w",3]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",7,[[],["evd10_w",3]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",7,[[],["evd11_w",3]]],[11,"ovr0","atsamd21g::evsys::intenset","Bit 0 - Channel 0 Overrun Interrupt Enable",599,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",599,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",599,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",599,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",599,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",599,[[],["ovr5_w",3]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun Interrupt Enable",599,[[],["ovr6_w",3]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun Interrupt Enable",599,[[],["ovr7_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",599,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",599,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",599,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",599,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",599,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",599,[[],["evd5_w",3]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection Interrupt Enable",599,[[],["evd6_w",3]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection Interrupt Enable",599,[[],["evd7_w",3]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun Interrupt Enable",599,[[],["ovr8_w",3]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun Interrupt Enable",599,[[],["ovr9_w",3]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun Interrupt Enable",599,[[],["ovr10_w",3]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun Interrupt Enable",599,[[],["ovr11_w",3]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection Interrupt Enable",599,[[],["evd8_w",3]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection Interrupt Enable",599,[[],["evd9_w",3]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection Interrupt Enable",599,[[],["evd10_w",3]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection Interrupt Enable",599,[[],["evd11_w",3]]],[0,"intflag","atsamd21g::evsys","Interrupt Flag Status and Clear",null,null],[3,"OVR0_W","atsamd21g::evsys::intflag","Write proxy for field `OVR0`",null,null],[3,"OVR1_W","","Write proxy for field `OVR1`",null,null],[3,"OVR2_W","","Write proxy for field `OVR2`",null,null],[3,"OVR3_W","","Write proxy for field `OVR3`",null,null],[3,"OVR4_W","","Write proxy for field `OVR4`",null,null],[3,"OVR5_W","","Write proxy for field `OVR5`",null,null],[3,"OVR6_W","","Write proxy for field `OVR6`",null,null],[3,"OVR7_W","","Write proxy for field `OVR7`",null,null],[3,"EVD0_W","","Write proxy for field `EVD0`",null,null],[3,"EVD1_W","","Write proxy for field `EVD1`",null,null],[3,"EVD2_W","","Write proxy for field `EVD2`",null,null],[3,"EVD3_W","","Write proxy for field `EVD3`",null,null],[3,"EVD4_W","","Write proxy for field `EVD4`",null,null],[3,"EVD5_W","","Write proxy for field `EVD5`",null,null],[3,"EVD6_W","","Write proxy for field `EVD6`",null,null],[3,"EVD7_W","","Write proxy for field `EVD7`",null,null],[3,"OVR8_W","","Write proxy for field `OVR8`",null,null],[3,"OVR9_W","","Write proxy for field `OVR9`",null,null],[3,"OVR10_W","","Write proxy for field `OVR10`",null,null],[3,"OVR11_W","","Write proxy for field `OVR11`",null,null],[3,"EVD8_W","","Write proxy for field `EVD8`",null,null],[3,"EVD9_W","","Write proxy for field `EVD9`",null,null],[3,"EVD10_W","","Write proxy for field `EVD10`",null,null],[3,"EVD11_W","","Write proxy for field `EVD11`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVR0_R","","Reader of field `OVR0`",null,null],[6,"OVR1_R","","Reader of field `OVR1`",null,null],[6,"OVR2_R","","Reader of field `OVR2`",null,null],[6,"OVR3_R","","Reader of field `OVR3`",null,null],[6,"OVR4_R","","Reader of field `OVR4`",null,null],[6,"OVR5_R","","Reader of field `OVR5`",null,null],[6,"OVR6_R","","Reader of field `OVR6`",null,null],[6,"OVR7_R","","Reader of field `OVR7`",null,null],[6,"EVD0_R","","Reader of field `EVD0`",null,null],[6,"EVD1_R","","Reader of field `EVD1`",null,null],[6,"EVD2_R","","Reader of field `EVD2`",null,null],[6,"EVD3_R","","Reader of field `EVD3`",null,null],[6,"EVD4_R","","Reader of field `EVD4`",null,null],[6,"EVD5_R","","Reader of field `EVD5`",null,null],[6,"EVD6_R","","Reader of field `EVD6`",null,null],[6,"EVD7_R","","Reader of field `EVD7`",null,null],[6,"OVR8_R","","Reader of field `OVR8`",null,null],[6,"OVR9_R","","Reader of field `OVR9`",null,null],[6,"OVR10_R","","Reader of field `OVR10`",null,null],[6,"OVR11_R","","Reader of field `OVR11`",null,null],[6,"EVD8_R","","Reader of field `EVD8`",null,null],[6,"EVD9_R","","Reader of field `EVD9`",null,null],[6,"EVD10_R","","Reader of field `EVD10`",null,null],[6,"EVD11_R","","Reader of field `EVD11`",null,null],[11,"set_bit","","Sets the field bit",600,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",600,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",600,[[],["w",6]]],[11,"set_bit","","Sets the field bit",601,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",601,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",601,[[],["w",6]]],[11,"set_bit","","Sets the field bit",602,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",602,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",602,[[],["w",6]]],[11,"set_bit","","Sets the field bit",603,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",603,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",603,[[],["w",6]]],[11,"set_bit","","Sets the field bit",604,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",604,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",604,[[],["w",6]]],[11,"set_bit","","Sets the field bit",605,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",605,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",605,[[],["w",6]]],[11,"set_bit","","Sets the field bit",606,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",606,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",606,[[],["w",6]]],[11,"set_bit","","Sets the field bit",607,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",607,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",607,[[],["w",6]]],[11,"set_bit","","Sets the field bit",608,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",608,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",608,[[],["w",6]]],[11,"set_bit","","Sets the field bit",609,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",609,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",609,[[],["w",6]]],[11,"set_bit","","Sets the field bit",610,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",610,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",610,[[],["w",6]]],[11,"set_bit","","Sets the field bit",611,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",611,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",611,[[],["w",6]]],[11,"set_bit","","Sets the field bit",612,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",612,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",612,[[],["w",6]]],[11,"set_bit","","Sets the field bit",613,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",613,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",613,[[],["w",6]]],[11,"set_bit","","Sets the field bit",614,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",614,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",614,[[],["w",6]]],[11,"set_bit","","Sets the field bit",615,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",615,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",615,[[],["w",6]]],[11,"set_bit","","Sets the field bit",616,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",616,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",616,[[],["w",6]]],[11,"set_bit","","Sets the field bit",617,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",617,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",617,[[],["w",6]]],[11,"set_bit","","Sets the field bit",618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",619,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",619,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",619,[[],["w",6]]],[11,"set_bit","","Sets the field bit",620,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",620,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",620,[[],["w",6]]],[11,"set_bit","","Sets the field bit",621,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",621,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",621,[[],["w",6]]],[11,"set_bit","","Sets the field bit",622,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",622,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",622,[[],["w",6]]],[11,"set_bit","","Sets the field bit",623,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",623,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",623,[[],["w",6]]],[11,"ovr0","atsamd21g::generic","Bit 0 - Channel 0 Overrun",6,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",6,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",6,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",6,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",6,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",6,[[],["ovr5_r",6]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun",6,[[],["ovr6_r",6]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun",6,[[],["ovr7_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",6,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",6,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",6,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",6,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",6,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",6,[[],["evd5_r",6]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection",6,[[],["evd6_r",6]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection",6,[[],["evd7_r",6]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun",6,[[],["ovr8_r",6]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun",6,[[],["ovr9_r",6]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun",6,[[],["ovr10_r",6]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun",6,[[],["ovr11_r",6]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection",6,[[],["evd8_r",6]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection",6,[[],["evd9_r",6]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection",6,[[],["evd10_r",6]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection",6,[[],["evd11_r",6]]],[11,"ovr0","atsamd21g::evsys::intflag","Bit 0 - Channel 0 Overrun",624,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",624,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",624,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",624,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",624,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",624,[[],["ovr5_r",6]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun",624,[[],["ovr6_r",6]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun",624,[[],["ovr7_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",624,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",624,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",624,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",624,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",624,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",624,[[],["evd5_r",6]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection",624,[[],["evd6_r",6]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection",624,[[],["evd7_r",6]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun",624,[[],["ovr8_r",6]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun",624,[[],["ovr9_r",6]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun",624,[[],["ovr10_r",6]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun",624,[[],["ovr11_r",6]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection",624,[[],["evd8_r",6]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection",624,[[],["evd9_r",6]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection",624,[[],["evd10_r",6]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection",624,[[],["evd11_r",6]]],[11,"ovr0","atsamd21g::generic","Bit 0 - Channel 0 Overrun",7,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",7,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",7,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",7,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",7,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",7,[[],["ovr5_w",3]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun",7,[[],["ovr6_w",3]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun",7,[[],["ovr7_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",7,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",7,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",7,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",7,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",7,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",7,[[],["evd5_w",3]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection",7,[[],["evd6_w",3]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection",7,[[],["evd7_w",3]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun",7,[[],["ovr8_w",3]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun",7,[[],["ovr9_w",3]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun",7,[[],["ovr10_w",3]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun",7,[[],["ovr11_w",3]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection",7,[[],["evd8_w",3]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection",7,[[],["evd9_w",3]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection",7,[[],["evd10_w",3]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection",7,[[],["evd11_w",3]]],[11,"ovr0","atsamd21g::evsys::intflag","Bit 0 - Channel 0 Overrun",625,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",625,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",625,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",625,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",625,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",625,[[],["ovr5_w",3]]],[11,"ovr6","","Bit 6 - Channel 6 Overrun",625,[[],["ovr6_w",3]]],[11,"ovr7","","Bit 7 - Channel 7 Overrun",625,[[],["ovr7_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",625,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",625,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",625,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",625,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",625,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",625,[[],["evd5_w",3]]],[11,"evd6","","Bit 14 - Channel 6 Event Detection",625,[[],["evd6_w",3]]],[11,"evd7","","Bit 15 - Channel 7 Event Detection",625,[[],["evd7_w",3]]],[11,"ovr8","","Bit 16 - Channel 8 Overrun",625,[[],["ovr8_w",3]]],[11,"ovr9","","Bit 17 - Channel 9 Overrun",625,[[],["ovr9_w",3]]],[11,"ovr10","","Bit 18 - Channel 10 Overrun",625,[[],["ovr10_w",3]]],[11,"ovr11","","Bit 19 - Channel 11 Overrun",625,[[],["ovr11_w",3]]],[11,"evd8","","Bit 24 - Channel 8 Event Detection",625,[[],["evd8_w",3]]],[11,"evd9","","Bit 25 - Channel 9 Event Detection",625,[[],["evd9_w",3]]],[11,"evd10","","Bit 26 - Channel 10 Event Detection",625,[[],["evd10_w",3]]],[11,"evd11","","Bit 27 - Channel 11 Event Detection",625,[[],["evd11_w",3]]],[6,"CTRL","atsamd21g::evsys","Control",null,null],[6,"CHANNEL","","Channel",null,null],[6,"USER","","User Multiplexer",null,null],[6,"CHSTATUS","","Channel Status",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[0,"gclk","atsamd21g","Generic Clock Generator",null,null],[3,"RegisterBlock","atsamd21g::gclk","Register block",null,null],[12,"ctrl","","0x00 - Control",626,null],[12,"status","","0x01 - Status",626,null],[12,"clkctrl","","0x02 - Generic Clock Control",626,null],[12,"genctrl","","0x04 - Generic Clock Generator Control",626,null],[12,"gendiv","","0x08 - Generic Clock Generator Division",626,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd21g::gclk::ctrl","Write proxy for field `SWRST`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[11,"set_bit","","Sets the field bit",627,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",627,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",627,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"swrst","atsamd21g::gclk::ctrl","Bit 0 - Software Reset",628,[[],["swrst_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"swrst","atsamd21g::gclk::ctrl","Bit 0 - Software Reset",629,[[],["swrst_w",3]]],[0,"status","atsamd21g::gclk","Status",null,null],[6,"R","atsamd21g::gclk::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy Status",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::gclk::status","Bit 7 - Synchronization Busy Status",630,[[],["syncbusy_r",6]]],[0,"clkctrl","atsamd21g::gclk","Generic Clock Control",null,null],[3,"ID_W","atsamd21g::gclk::clkctrl","Write proxy for field `ID`",null,null],[3,"GEN_W","","Write proxy for field `GEN`",null,null],[3,"CLKEN_W","","Write proxy for field `CLKEN`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[4,"ID_A","","Generic Clock Selection ID",null,null],[13,"DFLL48","","0: DFLL48",631,null],[13,"FDPLL","","1: FDPLL",631,null],[13,"FDPLL32K","","2: FDPLL32K",631,null],[13,"WDT","","3: WDT",631,null],[13,"RTC","","4: RTC",631,null],[13,"EIC","","5: EIC",631,null],[13,"USB","","6: USB",631,null],[13,"EVSYS_0","","7: EVSYS_0",631,null],[13,"EVSYS_1","","8: EVSYS_1",631,null],[13,"EVSYS_2","","9: EVSYS_2",631,null],[13,"EVSYS_3","","10: EVSYS_3",631,null],[13,"EVSYS_4","","11: EVSYS_4",631,null],[13,"EVSYS_5","","12: EVSYS_5",631,null],[13,"EVSYS_6","","13: EVSYS_6",631,null],[13,"EVSYS_7","","14: EVSYS_7",631,null],[13,"EVSYS_8","","15: EVSYS_8",631,null],[13,"EVSYS_9","","16: EVSYS_9",631,null],[13,"EVSYS_10","","17: EVSYS_10",631,null],[13,"EVSYS_11","","18: EVSYS_11",631,null],[13,"SERCOMX_SLOW","","19: SERCOMX_SLOW",631,null],[13,"SERCOM0_CORE","","20: SERCOM0_CORE",631,null],[13,"SERCOM1_CORE","","21: SERCOM1_CORE",631,null],[13,"SERCOM2_CORE","","22: SERCOM2_CORE",631,null],[13,"SERCOM3_CORE","","23: SERCOM3_CORE",631,null],[13,"SERCOM4_CORE","","24: SERCOM4_CORE",631,null],[13,"SERCOM5_CORE","","25: SERCOM5_CORE",631,null],[13,"TCC0_TCC1","","26: TCC0_TCC1",631,null],[13,"TCC2_TC3","","27: TCC2_TC3",631,null],[13,"TC4_TC5","","28: TC4_TC5",631,null],[13,"TC6_TC7","","29: TC6_TC7",631,null],[13,"ADC","","30: ADC",631,null],[13,"AC_DIG","","31: AC_DIG",631,null],[13,"AC_ANA","","32: AC_ANA",631,null],[13,"DAC","","33: DAC",631,null],[13,"I2S_0","","35: I2S_0",631,null],[13,"I2S_1","","36: I2S_1",631,null],[4,"GEN_A","","Generic Clock Generator",null,null],[13,"GCLK0","","0: Generic clock generator 0",632,null],[13,"GCLK1","","1: Generic clock generator 1",632,null],[13,"GCLK2","","2: Generic clock generator 2",632,null],[13,"GCLK3","","3: Generic clock generator 3",632,null],[13,"GCLK4","","4: Generic clock generator 4",632,null],[13,"GCLK5","","5: Generic clock generator 5",632,null],[13,"GCLK6","","6: Generic clock generator 6",632,null],[13,"GCLK7","","7: Generic clock generator 7",632,null],[13,"GCLK8","","8: Generic clock generator 8",632,null],[6,"R","","Reader of register CLKCTRL",null,null],[6,"W","","Writer for register CLKCTRL",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"GEN_R","","Reader of field `GEN`",null,null],[6,"CLKEN_R","","Reader of field `CLKEN`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["id_a",4]]]],[11,"is_dfll48","","Checks if the value of the field is `DFLL48`",6,[[]]],[11,"is_fdpll","","Checks if the value of the field is `FDPLL`",6,[[]]],[11,"is_fdpll32k","","Checks if the value of the field is `FDPLL32K`",6,[[]]],[11,"is_wdt","","Checks if the value of the field is `WDT`",6,[[]]],[11,"is_rtc","","Checks if the value of the field is `RTC`",6,[[]]],[11,"is_eic","","Checks if the value of the field is `EIC`",6,[[]]],[11,"is_usb","","Checks if the value of the field is `USB`",6,[[]]],[11,"is_evsys_0","","Checks if the value of the field is `EVSYS_0`",6,[[]]],[11,"is_evsys_1","","Checks if the value of the field is `EVSYS_1`",6,[[]]],[11,"is_evsys_2","","Checks if the value of the field is `EVSYS_2`",6,[[]]],[11,"is_evsys_3","","Checks if the value of the field is `EVSYS_3`",6,[[]]],[11,"is_evsys_4","","Checks if the value of the field is `EVSYS_4`",6,[[]]],[11,"is_evsys_5","","Checks if the value of the field is `EVSYS_5`",6,[[]]],[11,"is_evsys_6","","Checks if the value of the field is `EVSYS_6`",6,[[]]],[11,"is_evsys_7","","Checks if the value of the field is `EVSYS_7`",6,[[]]],[11,"is_evsys_8","","Checks if the value of the field is `EVSYS_8`",6,[[]]],[11,"is_evsys_9","","Checks if the value of the field is `EVSYS_9`",6,[[]]],[11,"is_evsys_10","","Checks if the value of the field is `EVSYS_10`",6,[[]]],[11,"is_evsys_11","","Checks if the value of the field is `EVSYS_11`",6,[[]]],[11,"is_sercomx_slow","","Checks if the value of the field is `SERCOMX_SLOW`",6,[[]]],[11,"is_sercom0_core","","Checks if the value of the field is `SERCOM0_CORE`",6,[[]]],[11,"is_sercom1_core","","Checks if the value of the field is `SERCOM1_CORE`",6,[[]]],[11,"is_sercom2_core","","Checks if the value of the field is `SERCOM2_CORE`",6,[[]]],[11,"is_sercom3_core","","Checks if the value of the field is `SERCOM3_CORE`",6,[[]]],[11,"is_sercom4_core","","Checks if the value of the field is `SERCOM4_CORE`",6,[[]]],[11,"is_sercom5_core","","Checks if the value of the field is `SERCOM5_CORE`",6,[[]]],[11,"is_tcc0_tcc1","","Checks if the value of the field is `TCC0_TCC1`",6,[[]]],[11,"is_tcc2_tc3","","Checks if the value of the field is `TCC2_TC3`",6,[[]]],[11,"is_tc4_tc5","","Checks if the value of the field is `TC4_TC5`",6,[[]]],[11,"is_tc6_tc7","","Checks if the value of the field is `TC6_TC7`",6,[[]]],[11,"is_adc","","Checks if the value of the field is `ADC`",6,[[]]],[11,"is_ac_dig","","Checks if the value of the field is `AC_DIG`",6,[[]]],[11,"is_ac_ana","","Checks if the value of the field is `AC_ANA`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"is_i2s_0","","Checks if the value of the field is `I2S_0`",6,[[]]],[11,"is_i2s_1","","Checks if the value of the field is `I2S_1`",6,[[]]],[11,"variant","atsamd21g::gclk::clkctrl","Get enumerated values variant",633,[[],[["variant",4],["id_a",4]]]],[11,"is_dfll48","","Checks if the value of the field is `DFLL48`",633,[[]]],[11,"is_fdpll","","Checks if the value of the field is `FDPLL`",633,[[]]],[11,"is_fdpll32k","","Checks if the value of the field is `FDPLL32K`",633,[[]]],[11,"is_wdt","","Checks if the value of the field is `WDT`",633,[[]]],[11,"is_rtc","","Checks if the value of the field is `RTC`",633,[[]]],[11,"is_eic","","Checks if the value of the field is `EIC`",633,[[]]],[11,"is_usb","","Checks if the value of the field is `USB`",633,[[]]],[11,"is_evsys_0","","Checks if the value of the field is `EVSYS_0`",633,[[]]],[11,"is_evsys_1","","Checks if the value of the field is `EVSYS_1`",633,[[]]],[11,"is_evsys_2","","Checks if the value of the field is `EVSYS_2`",633,[[]]],[11,"is_evsys_3","","Checks if the value of the field is `EVSYS_3`",633,[[]]],[11,"is_evsys_4","","Checks if the value of the field is `EVSYS_4`",633,[[]]],[11,"is_evsys_5","","Checks if the value of the field is `EVSYS_5`",633,[[]]],[11,"is_evsys_6","","Checks if the value of the field is `EVSYS_6`",633,[[]]],[11,"is_evsys_7","","Checks if the value of the field is `EVSYS_7`",633,[[]]],[11,"is_evsys_8","","Checks if the value of the field is `EVSYS_8`",633,[[]]],[11,"is_evsys_9","","Checks if the value of the field is `EVSYS_9`",633,[[]]],[11,"is_evsys_10","","Checks if the value of the field is `EVSYS_10`",633,[[]]],[11,"is_evsys_11","","Checks if the value of the field is `EVSYS_11`",633,[[]]],[11,"is_sercomx_slow","","Checks if the value of the field is `SERCOMX_SLOW`",633,[[]]],[11,"is_sercom0_core","","Checks if the value of the field is `SERCOM0_CORE`",633,[[]]],[11,"is_sercom1_core","","Checks if the value of the field is `SERCOM1_CORE`",633,[[]]],[11,"is_sercom2_core","","Checks if the value of the field is `SERCOM2_CORE`",633,[[]]],[11,"is_sercom3_core","","Checks if the value of the field is `SERCOM3_CORE`",633,[[]]],[11,"is_sercom4_core","","Checks if the value of the field is `SERCOM4_CORE`",633,[[]]],[11,"is_sercom5_core","","Checks if the value of the field is `SERCOM5_CORE`",633,[[]]],[11,"is_tcc0_tcc1","","Checks if the value of the field is `TCC0_TCC1`",633,[[]]],[11,"is_tcc2_tc3","","Checks if the value of the field is `TCC2_TC3`",633,[[]]],[11,"is_tc4_tc5","","Checks if the value of the field is `TC4_TC5`",633,[[]]],[11,"is_tc6_tc7","","Checks if the value of the field is `TC6_TC7`",633,[[]]],[11,"is_adc","","Checks if the value of the field is `ADC`",633,[[]]],[11,"is_ac_dig","","Checks if the value of the field is `AC_DIG`",633,[[]]],[11,"is_ac_ana","","Checks if the value of the field is `AC_ANA`",633,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",633,[[]]],[11,"is_i2s_0","","Checks if the value of the field is `I2S_0`",633,[[]]],[11,"is_i2s_1","","Checks if the value of the field is `I2S_1`",633,[[]]],[11,"variant","","Writes `variant` to the field",634,[[["id_a",4]],["w",6]]],[11,"dfll48","","DFLL48",634,[[],["w",6]]],[11,"fdpll","","FDPLL",634,[[],["w",6]]],[11,"fdpll32k","","FDPLL32K",634,[[],["w",6]]],[11,"wdt","","WDT",634,[[],["w",6]]],[11,"rtc","","RTC",634,[[],["w",6]]],[11,"eic","","EIC",634,[[],["w",6]]],[11,"usb","","USB",634,[[],["w",6]]],[11,"evsys_0","","EVSYS_0",634,[[],["w",6]]],[11,"evsys_1","","EVSYS_1",634,[[],["w",6]]],[11,"evsys_2","","EVSYS_2",634,[[],["w",6]]],[11,"evsys_3","","EVSYS_3",634,[[],["w",6]]],[11,"evsys_4","","EVSYS_4",634,[[],["w",6]]],[11,"evsys_5","","EVSYS_5",634,[[],["w",6]]],[11,"evsys_6","","EVSYS_6",634,[[],["w",6]]],[11,"evsys_7","","EVSYS_7",634,[[],["w",6]]],[11,"evsys_8","","EVSYS_8",634,[[],["w",6]]],[11,"evsys_9","","EVSYS_9",634,[[],["w",6]]],[11,"evsys_10","","EVSYS_10",634,[[],["w",6]]],[11,"evsys_11","","EVSYS_11",634,[[],["w",6]]],[11,"sercomx_slow","","SERCOMX_SLOW",634,[[],["w",6]]],[11,"sercom0_core","","SERCOM0_CORE",634,[[],["w",6]]],[11,"sercom1_core","","SERCOM1_CORE",634,[[],["w",6]]],[11,"sercom2_core","","SERCOM2_CORE",634,[[],["w",6]]],[11,"sercom3_core","","SERCOM3_CORE",634,[[],["w",6]]],[11,"sercom4_core","","SERCOM4_CORE",634,[[],["w",6]]],[11,"sercom5_core","","SERCOM5_CORE",634,[[],["w",6]]],[11,"tcc0_tcc1","","TCC0_TCC1",634,[[],["w",6]]],[11,"tcc2_tc3","","TCC2_TC3",634,[[],["w",6]]],[11,"tc4_tc5","","TC4_TC5",634,[[],["w",6]]],[11,"tc6_tc7","","TC6_TC7",634,[[],["w",6]]],[11,"adc","","ADC",634,[[],["w",6]]],[11,"ac_dig","","AC_DIG",634,[[],["w",6]]],[11,"ac_ana","","AC_ANA",634,[[],["w",6]]],[11,"dac","","DAC",634,[[],["w",6]]],[11,"i2s_0","","I2S_0",634,[[],["w",6]]],[11,"i2s_1","","I2S_1",634,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",634,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["gen_a",4],["variant",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",6,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",6,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",6,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",6,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",6,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",6,[[]]],[11,"is_gclk6","","Checks if the value of the field is `GCLK6`",6,[[]]],[11,"is_gclk7","","Checks if the value of the field is `GCLK7`",6,[[]]],[11,"is_gclk8","","Checks if the value of the field is `GCLK8`",6,[[]]],[11,"variant","atsamd21g::gclk::clkctrl","Get enumerated values variant",635,[[],[["gen_a",4],["variant",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",635,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",635,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",635,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",635,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",635,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",635,[[]]],[11,"is_gclk6","","Checks if the value of the field is `GCLK6`",635,[[]]],[11,"is_gclk7","","Checks if the value of the field is `GCLK7`",635,[[]]],[11,"is_gclk8","","Checks if the value of the field is `GCLK8`",635,[[]]],[11,"variant","","Writes `variant` to the field",636,[[["gen_a",4]],["w",6]]],[11,"gclk0","","Generic clock generator 0",636,[[],["w",6]]],[11,"gclk1","","Generic clock generator 1",636,[[],["w",6]]],[11,"gclk2","","Generic clock generator 2",636,[[],["w",6]]],[11,"gclk3","","Generic clock generator 3",636,[[],["w",6]]],[11,"gclk4","","Generic clock generator 4",636,[[],["w",6]]],[11,"gclk5","","Generic clock generator 5",636,[[],["w",6]]],[11,"gclk6","","Generic clock generator 6",636,[[],["w",6]]],[11,"gclk7","","Generic clock generator 7",636,[[],["w",6]]],[11,"gclk8","","Generic clock generator 8",636,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",636,[[],["w",6]]],[11,"set_bit","","Sets the field bit",637,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",637,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",637,[[],["w",6]]],[11,"set_bit","","Sets the field bit",638,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",638,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",638,[[],["w",6]]],[11,"id","atsamd21g::generic","Bits 0:5 - Generic Clock Selection ID",6,[[],["id_r",6]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",6,[[],["gen_r",6]]],[11,"clken","","Bit 14 - Clock Enable",6,[[],["clken_r",6]]],[11,"wrtlock","","Bit 15 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"id","atsamd21g::gclk::clkctrl","Bits 0:5 - Generic Clock Selection ID",639,[[],["id_r",6]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",639,[[],["gen_r",6]]],[11,"clken","","Bit 14 - Clock Enable",639,[[],["clken_r",6]]],[11,"wrtlock","","Bit 15 - Write Lock",639,[[],["wrtlock_r",6]]],[11,"id","atsamd21g::generic","Bits 0:5 - Generic Clock Selection ID",7,[[],["id_w",3]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",7,[[],["gen_w",3]]],[11,"clken","","Bit 14 - Clock Enable",7,[[],["clken_w",3]]],[11,"wrtlock","","Bit 15 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"id","atsamd21g::gclk::clkctrl","Bits 0:5 - Generic Clock Selection ID",640,[[],["id_w",3]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",640,[[],["gen_w",3]]],[11,"clken","","Bit 14 - Clock Enable",640,[[],["clken_w",3]]],[11,"wrtlock","","Bit 15 - Write Lock",640,[[],["wrtlock_w",3]]],[0,"genctrl","atsamd21g::gclk","Generic Clock Generator Control",null,null],[3,"ID_W","atsamd21g::gclk::genctrl","Write proxy for field `ID`",null,null],[3,"SRC_W","","Write proxy for field `SRC`",null,null],[3,"GENEN_W","","Write proxy for field `GENEN`",null,null],[3,"IDC_W","","Write proxy for field `IDC`",null,null],[3,"OOV_W","","Write proxy for field `OOV`",null,null],[3,"OE_W","","Write proxy for field `OE`",null,null],[3,"DIVSEL_W","","Write proxy for field `DIVSEL`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[4,"SRC_A","","Source Select",null,null],[13,"XOSC","","0: XOSC oscillator output",641,null],[13,"GCLKIN","","1: Generator input pad",641,null],[13,"GCLKGEN1","","2: Generic clock generator 1 output",641,null],[13,"OSCULP32K","","3: OSCULP32K oscillator output",641,null],[13,"OSC32K","","4: OSC32K oscillator output",641,null],[13,"XOSC32K","","5: XOSC32K oscillator output",641,null],[13,"OSC8M","","6: OSC8M oscillator output",641,null],[13,"DFLL48M","","7: DFLL48M output",641,null],[13,"DPLL96M","","8: DPLL96M output",641,null],[6,"R","","Reader of register GENCTRL",null,null],[6,"W","","Writer for register GENCTRL",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"GENEN_R","","Reader of field `GENEN`",null,null],[6,"IDC_R","","Reader of field `IDC`",null,null],[6,"OOV_R","","Reader of field `OOV`",null,null],[6,"OE_R","","Reader of field `OE`",null,null],[6,"DIVSEL_R","","Reader of field `DIVSEL`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"bits","","Writes raw bits to the field",642,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["src_a",4]]]],[11,"is_xosc","","Checks if the value of the field is `XOSC`",6,[[]]],[11,"is_gclkin","","Checks if the value of the field is `GCLKIN`",6,[[]]],[11,"is_gclkgen1","","Checks if the value of the field is `GCLKGEN1`",6,[[]]],[11,"is_osculp32k","","Checks if the value of the field is `OSCULP32K`",6,[[]]],[11,"is_osc32k","","Checks if the value of the field is `OSC32K`",6,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",6,[[]]],[11,"is_osc8m","","Checks if the value of the field is `OSC8M`",6,[[]]],[11,"is_dfll48m","","Checks if the value of the field is `DFLL48M`",6,[[]]],[11,"is_dpll96m","","Checks if the value of the field is `DPLL96M`",6,[[]]],[11,"variant","atsamd21g::gclk::genctrl","Get enumerated values variant",643,[[],[["variant",4],["src_a",4]]]],[11,"is_xosc","","Checks if the value of the field is `XOSC`",643,[[]]],[11,"is_gclkin","","Checks if the value of the field is `GCLKIN`",643,[[]]],[11,"is_gclkgen1","","Checks if the value of the field is `GCLKGEN1`",643,[[]]],[11,"is_osculp32k","","Checks if the value of the field is `OSCULP32K`",643,[[]]],[11,"is_osc32k","","Checks if the value of the field is `OSC32K`",643,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",643,[[]]],[11,"is_osc8m","","Checks if the value of the field is `OSC8M`",643,[[]]],[11,"is_dfll48m","","Checks if the value of the field is `DFLL48M`",643,[[]]],[11,"is_dpll96m","","Checks if the value of the field is `DPLL96M`",643,[[]]],[11,"variant","","Writes `variant` to the field",644,[[["src_a",4]],["w",6]]],[11,"xosc","","XOSC oscillator output",644,[[],["w",6]]],[11,"gclkin","","Generator input pad",644,[[],["w",6]]],[11,"gclkgen1","","Generic clock generator 1 output",644,[[],["w",6]]],[11,"osculp32k","","OSCULP32K oscillator output",644,[[],["w",6]]],[11,"osc32k","","OSC32K oscillator output",644,[[],["w",6]]],[11,"xosc32k","","XOSC32K oscillator output",644,[[],["w",6]]],[11,"osc8m","","OSC8M oscillator output",644,[[],["w",6]]],[11,"dfll48m","","DFLL48M output",644,[[],["w",6]]],[11,"dpll96m","","DPLL96M output",644,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",644,[[],["w",6]]],[11,"set_bit","","Sets the field bit",645,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",645,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",645,[[],["w",6]]],[11,"set_bit","","Sets the field bit",646,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",646,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",646,[[],["w",6]]],[11,"set_bit","","Sets the field bit",647,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",647,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",647,[[],["w",6]]],[11,"set_bit","","Sets the field bit",648,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",648,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",649,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",649,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",649,[[],["w",6]]],[11,"set_bit","","Sets the field bit",650,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",650,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",650,[[],["w",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Generic Clock Generator Selection",6,[[],["id_r",6]]],[11,"src","","Bits 8:12 - Source Select",6,[[],["src_r",6]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",6,[[],["genen_r",6]]],[11,"idc","","Bit 17 - Improve Duty Cycle",6,[[],["idc_r",6]]],[11,"oov","","Bit 18 - Output Off Value",6,[[],["oov_r",6]]],[11,"oe","","Bit 19 - Output Enable",6,[[],["oe_r",6]]],[11,"divsel","","Bit 20 - Divide Selection",6,[[],["divsel_r",6]]],[11,"runstdby","","Bit 21 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"id","atsamd21g::gclk::genctrl","Bits 0:3 - Generic Clock Generator Selection",651,[[],["id_r",6]]],[11,"src","","Bits 8:12 - Source Select",651,[[],["src_r",6]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",651,[[],["genen_r",6]]],[11,"idc","","Bit 17 - Improve Duty Cycle",651,[[],["idc_r",6]]],[11,"oov","","Bit 18 - Output Off Value",651,[[],["oov_r",6]]],[11,"oe","","Bit 19 - Output Enable",651,[[],["oe_r",6]]],[11,"divsel","","Bit 20 - Divide Selection",651,[[],["divsel_r",6]]],[11,"runstdby","","Bit 21 - Run in Standby",651,[[],["runstdby_r",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Generic Clock Generator Selection",7,[[],["id_w",3]]],[11,"src","","Bits 8:12 - Source Select",7,[[],["src_w",3]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",7,[[],["genen_w",3]]],[11,"idc","","Bit 17 - Improve Duty Cycle",7,[[],["idc_w",3]]],[11,"oov","","Bit 18 - Output Off Value",7,[[],["oov_w",3]]],[11,"oe","","Bit 19 - Output Enable",7,[[],["oe_w",3]]],[11,"divsel","","Bit 20 - Divide Selection",7,[[],["divsel_w",3]]],[11,"runstdby","","Bit 21 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"id","atsamd21g::gclk::genctrl","Bits 0:3 - Generic Clock Generator Selection",652,[[],["id_w",3]]],[11,"src","","Bits 8:12 - Source Select",652,[[],["src_w",3]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",652,[[],["genen_w",3]]],[11,"idc","","Bit 17 - Improve Duty Cycle",652,[[],["idc_w",3]]],[11,"oov","","Bit 18 - Output Off Value",652,[[],["oov_w",3]]],[11,"oe","","Bit 19 - Output Enable",652,[[],["oe_w",3]]],[11,"divsel","","Bit 20 - Divide Selection",652,[[],["divsel_w",3]]],[11,"runstdby","","Bit 21 - Run in Standby",652,[[],["runstdby_w",3]]],[0,"gendiv","atsamd21g::gclk","Generic Clock Generator Division",null,null],[3,"ID_W","atsamd21g::gclk::gendiv","Write proxy for field `ID`",null,null],[3,"DIV_W","","Write proxy for field `DIV`",null,null],[6,"R","","Reader of register GENDIV",null,null],[6,"W","","Writer for register GENDIV",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"bits","","Writes raw bits to the field",653,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",654,[[],["w",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Generic Clock Generator Selection",6,[[],["id_r",6]]],[11,"div","","Bits 8:23 - Division Factor",6,[[],["div_r",6]]],[11,"id","atsamd21g::gclk::gendiv","Bits 0:3 - Generic Clock Generator Selection",655,[[],["id_r",6]]],[11,"div","","Bits 8:23 - Division Factor",655,[[],["div_r",6]]],[11,"id","atsamd21g::generic","Bits 0:3 - Generic Clock Generator Selection",7,[[],["id_w",3]]],[11,"div","","Bits 8:23 - Division Factor",7,[[],["div_w",3]]],[11,"id","atsamd21g::gclk::gendiv","Bits 0:3 - Generic Clock Generator Selection",656,[[],["id_w",3]]],[11,"div","","Bits 8:23 - Division Factor",656,[[],["div_w",3]]],[6,"CTRL","atsamd21g::gclk","Control",null,null],[6,"STATUS","","Status",null,null],[6,"CLKCTRL","","Generic Clock Control",null,null],[6,"GENCTRL","","Generic Clock Generator Control",null,null],[6,"GENDIV","","Generic Clock Generator Division",null,null],[0,"hmatrix","atsamd21g","HSB Matrix",null,null],[3,"RegisterBlock","atsamd21g::hmatrix","Register block",null,null],[12,"pras0","","0x80 - Priority A for Slave",657,null],[12,"prbs0","","0x84 - Priority B for Slave",657,null],[12,"pras1","","0x88 - Priority A for Slave",657,null],[12,"prbs1","","0x8c - Priority B for Slave",657,null],[12,"pras2","","0x90 - Priority A for Slave",657,null],[12,"prbs2","","0x94 - Priority B for Slave",657,null],[12,"pras3","","0x98 - Priority A for Slave",657,null],[12,"prbs3","","0x9c - Priority B for Slave",657,null],[12,"pras4","","0xa0 - Priority A for Slave",657,null],[12,"prbs4","","0xa4 - Priority B for Slave",657,null],[12,"pras5","","0xa8 - Priority A for Slave",657,null],[12,"prbs5","","0xac - Priority B for Slave",657,null],[12,"pras6","","0xb0 - Priority A for Slave",657,null],[12,"prbs6","","0xb4 - Priority B for Slave",657,null],[12,"pras7","","0xb8 - Priority A for Slave",657,null],[12,"prbs7","","0xbc - Priority B for Slave",657,null],[12,"pras8","","0xc0 - Priority A for Slave",657,null],[12,"prbs8","","0xc4 - Priority B for Slave",657,null],[12,"pras9","","0xc8 - Priority A for Slave",657,null],[12,"prbs9","","0xcc - Priority B for Slave",657,null],[12,"pras10","","0xd0 - Priority A for Slave",657,null],[12,"prbs10","","0xd4 - Priority B for Slave",657,null],[12,"pras11","","0xd8 - Priority A for Slave",657,null],[12,"prbs11","","0xdc - Priority B for Slave",657,null],[12,"pras12","","0xe0 - Priority A for Slave",657,null],[12,"prbs12","","0xe4 - Priority B for Slave",657,null],[12,"pras13","","0xe8 - Priority A for Slave",657,null],[12,"prbs13","","0xec - Priority B for Slave",657,null],[12,"pras14","","0xf0 - Priority A for Slave",657,null],[12,"prbs14","","0xf4 - Priority B for Slave",657,null],[12,"pras15","","0xf8 - Priority A for Slave",657,null],[12,"prbs15","","0xfc - Priority B for Slave",657,null],[12,"sfr","","0x110 - Special Function",657,null],[0,"pras","","Priority A for Slave",null,null],[6,"R","atsamd21g::hmatrix::pras","Reader of register PRAS%s",null,null],[6,"W","","Writer for register PRAS%s",null,null],[0,"prbs","atsamd21g::hmatrix","Priority B for Slave",null,null],[6,"R","atsamd21g::hmatrix::prbs","Reader of register PRBS%s",null,null],[6,"W","","Writer for register PRBS%s",null,null],[0,"sfr","atsamd21g::hmatrix","Special Function",null,null],[3,"SFR_W","atsamd21g::hmatrix::sfr","Write proxy for field `SFR`",null,null],[6,"R","","Reader of register SFR%s",null,null],[6,"W","","Writer for register SFR%s",null,null],[6,"SFR_R","","Reader of field `SFR`",null,null],[11,"bits","","Writes raw bits to the field",658,[[],["w",6]]],[11,"sfr","atsamd21g::generic","Bits 0:31 - Special Function Register",6,[[],["sfr_r",6]]],[11,"sfr","atsamd21g::hmatrix::sfr","Bits 0:31 - Special Function Register",659,[[],["sfr_r",6]]],[11,"sfr","atsamd21g::generic","Bits 0:31 - Special Function Register",7,[[],["sfr_w",3]]],[11,"sfr","atsamd21g::hmatrix::sfr","Bits 0:31 - Special Function Register",660,[[],["sfr_w",3]]],[6,"PRAS","atsamd21g::hmatrix","Priority A for Slave",null,null],[6,"PRBS","","Priority B for Slave",null,null],[6,"SFR","","Special Function",null,null],[0,"i2s","atsamd21g","Inter-IC Sound Interface",null,null],[3,"RegisterBlock","atsamd21g::i2s","Register block",null,null],[12,"ctrla","","0x00 - Control A",661,null],[12,"clkctrl","","0x04 - Clock Unit n Control",661,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",661,null],[12,"intenset","","0x10 - Interrupt Enable Set",661,null],[12,"intflag","","0x14 - Interrupt Flag Status and Clear",661,null],[12,"syncbusy","","0x18 - Synchronization Status",661,null],[12,"serctrl","","0x20 - Serializer n Control",661,null],[12,"data","","0x30 - Data n",661,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd21g::i2s::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"CKEN0_W","","Write proxy for field `CKEN0`",null,null],[3,"CKEN1_W","","Write proxy for field `CKEN1`",null,null],[3,"SEREN0_W","","Write proxy for field `SEREN0`",null,null],[3,"SEREN1_W","","Write proxy for field `SEREN1`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CKEN0_R","","Reader of field `CKEN0`",null,null],[6,"CKEN1_R","","Reader of field `CKEN1`",null,null],[6,"SEREN0_R","","Reader of field `SEREN0`",null,null],[6,"SEREN1_R","","Reader of field `SEREN1`",null,null],[11,"set_bit","","Sets the field bit",662,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",662,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",662,[[],["w",6]]],[11,"set_bit","","Sets the field bit",663,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",663,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",663,[[],["w",6]]],[11,"set_bit","","Sets the field bit",664,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",664,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",664,[[],["w",6]]],[11,"set_bit","","Sets the field bit",665,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",665,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",665,[[],["w",6]]],[11,"set_bit","","Sets the field bit",666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",666,[[],["w",6]]],[11,"set_bit","","Sets the field bit",667,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",667,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",667,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"cken0","","Bit 2 - Clock Unit 0 Enable",6,[[],["cken0_r",6]]],[11,"cken1","","Bit 3 - Clock Unit 1 Enable",6,[[],["cken1_r",6]]],[11,"seren0","","Bit 4 - Serializer 0 Enable",6,[[],["seren0_r",6]]],[11,"seren1","","Bit 5 - Serializer 1 Enable",6,[[],["seren1_r",6]]],[11,"swrst","atsamd21g::i2s::ctrla","Bit 0 - Software Reset",668,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",668,[[],["enable_r",6]]],[11,"cken0","","Bit 2 - Clock Unit 0 Enable",668,[[],["cken0_r",6]]],[11,"cken1","","Bit 3 - Clock Unit 1 Enable",668,[[],["cken1_r",6]]],[11,"seren0","","Bit 4 - Serializer 0 Enable",668,[[],["seren0_r",6]]],[11,"seren1","","Bit 5 - Serializer 1 Enable",668,[[],["seren1_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"cken0","","Bit 2 - Clock Unit 0 Enable",7,[[],["cken0_w",3]]],[11,"cken1","","Bit 3 - Clock Unit 1 Enable",7,[[],["cken1_w",3]]],[11,"seren0","","Bit 4 - Serializer 0 Enable",7,[[],["seren0_w",3]]],[11,"seren1","","Bit 5 - Serializer 1 Enable",7,[[],["seren1_w",3]]],[11,"swrst","atsamd21g::i2s::ctrla","Bit 0 - Software Reset",669,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",669,[[],["enable_w",3]]],[11,"cken0","","Bit 2 - Clock Unit 0 Enable",669,[[],["cken0_w",3]]],[11,"cken1","","Bit 3 - Clock Unit 1 Enable",669,[[],["cken1_w",3]]],[11,"seren0","","Bit 4 - Serializer 0 Enable",669,[[],["seren0_w",3]]],[11,"seren1","","Bit 5 - Serializer 1 Enable",669,[[],["seren1_w",3]]],[0,"clkctrl","atsamd21g::i2s","Clock Unit n Control",null,null],[3,"SLOTSIZE_W","atsamd21g::i2s::clkctrl","Write proxy for field `SLOTSIZE`",null,null],[3,"NBSLOTS_W","","Write proxy for field `NBSLOTS`",null,null],[3,"FSWIDTH_W","","Write proxy for field `FSWIDTH`",null,null],[3,"BITDELAY_W","","Write proxy for field `BITDELAY`",null,null],[3,"FSSEL_W","","Write proxy for field `FSSEL`",null,null],[3,"FSINV_W","","Write proxy for field `FSINV`",null,null],[3,"SCKSEL_W","","Write proxy for field `SCKSEL`",null,null],[3,"MCKSEL_W","","Write proxy for field `MCKSEL`",null,null],[3,"MCKEN_W","","Write proxy for field `MCKEN`",null,null],[3,"MCKDIV_W","","Write proxy for field `MCKDIV`",null,null],[3,"MCKOUTDIV_W","","Write proxy for field `MCKOUTDIV`",null,null],[3,"FSOUTINV_W","","Write proxy for field `FSOUTINV`",null,null],[3,"SCKOUTINV_W","","Write proxy for field `SCKOUTINV`",null,null],[3,"MCKOUTINV_W","","Write proxy for field `MCKOUTINV`",null,null],[4,"SLOTSIZE_A","","Slot Size",null,null],[13,"_8","","0: 8-bit Slot for Clock Unit n",670,null],[13,"_16","","1: 16-bit Slot for Clock Unit n",670,null],[13,"_24","","2: 24-bit Slot for Clock Unit n",670,null],[13,"_32","","3: 32-bit Slot for Clock Unit n",670,null],[4,"FSWIDTH_A","","Frame Sync Width",null,null],[13,"SLOT","","0: Frame Sync Pulse is 1 Slot wide (default for I2S…",671,null],[13,"HALF","","1: Frame Sync Pulse is half a Frame wide",671,null],[13,"BIT","","2: Frame Sync Pulse is 1 Bit wide",671,null],[13,"BURST","","3: Clock Unit n operates in Burst mode, with a 1-bit wide…",671,null],[4,"BITDELAY_A","","Data Delay from Frame Sync",null,null],[13,"LJ","","0: Left Justified (0 Bit Delay)",672,null],[13,"I2S","","1: I2S (1 Bit Delay)",672,null],[4,"FSSEL_A","","Frame Sync Select",null,null],[13,"SCKDIV","","0: Divided Serial Clock n is used as Frame Sync n source",673,null],[13,"FSPIN","","1: FSn input pin is used as Frame Sync n source",673,null],[4,"SCKSEL_A","","Serial Clock Select",null,null],[13,"MCKDIV","","0: Divided Master Clock n is used as Serial Clock n source",674,null],[13,"SCKPIN","","1: SCKn input pin is used as Serial Clock n source",674,null],[4,"MCKSEL_A","","Master Clock Select",null,null],[13,"GCLK","","0: GCLK_I2S_n is used as Master Clock n source",675,null],[13,"MCKPIN","","1: MCKn input pin is used as Master Clock n source",675,null],[6,"R","","Reader of register CLKCTRL%s",null,null],[6,"W","","Writer for register CLKCTRL%s",null,null],[6,"SLOTSIZE_R","","Reader of field `SLOTSIZE`",null,null],[6,"NBSLOTS_R","","Reader of field `NBSLOTS`",null,null],[6,"FSWIDTH_R","","Reader of field `FSWIDTH`",null,null],[6,"BITDELAY_R","","Reader of field `BITDELAY`",null,null],[6,"FSSEL_R","","Reader of field `FSSEL`",null,null],[6,"FSINV_R","","Reader of field `FSINV`",null,null],[6,"SCKSEL_R","","Reader of field `SCKSEL`",null,null],[6,"MCKSEL_R","","Reader of field `MCKSEL`",null,null],[6,"MCKEN_R","","Reader of field `MCKEN`",null,null],[6,"MCKDIV_R","","Reader of field `MCKDIV`",null,null],[6,"MCKOUTDIV_R","","Reader of field `MCKOUTDIV`",null,null],[6,"FSOUTINV_R","","Reader of field `FSOUTINV`",null,null],[6,"SCKOUTINV_R","","Reader of field `SCKOUTINV`",null,null],[6,"MCKOUTINV_R","","Reader of field `MCKOUTINV`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["slotsize_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_24","","Checks if the value of the field is `_24`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"variant","atsamd21g::i2s::clkctrl","Get enumerated values variant",676,[[],["slotsize_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",676,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",676,[[]]],[11,"is_24","","Checks if the value of the field is `_24`",676,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",676,[[]]],[11,"variant","","Writes `variant` to the field",677,[[["slotsize_a",4]],["w",6]]],[11,"_8","","8-bit Slot for Clock Unit n",677,[[],["w",6]]],[11,"_16","","16-bit Slot for Clock Unit n",677,[[],["w",6]]],[11,"_24","","24-bit Slot for Clock Unit n",677,[[],["w",6]]],[11,"_32","","32-bit Slot for Clock Unit n",677,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",677,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",678,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["fswidth_a",4]]],[11,"is_slot","","Checks if the value of the field is `SLOT`",6,[[]]],[11,"is_half","","Checks if the value of the field is `HALF`",6,[[]]],[11,"is_bit_","","Checks if the value of the field is `BIT`",6,[[]]],[11,"is_burst","","Checks if the value of the field is `BURST`",6,[[]]],[11,"variant","atsamd21g::i2s::clkctrl","Get enumerated values variant",679,[[],["fswidth_a",4]]],[11,"is_slot","","Checks if the value of the field is `SLOT`",679,[[]]],[11,"is_half","","Checks if the value of the field is `HALF`",679,[[]]],[11,"is_bit_","","Checks if the value of the field is `BIT`",679,[[]]],[11,"is_burst","","Checks if the value of the field is `BURST`",679,[[]]],[11,"variant","","Writes `variant` to the field",680,[[["fswidth_a",4]],["w",6]]],[11,"slot","","Frame Sync Pulse is 1 Slot wide (default for I2S protocol)",680,[[],["w",6]]],[11,"half","","Frame Sync Pulse is half a Frame wide",680,[[],["w",6]]],[11,"bit_","","Frame Sync Pulse is 1 Bit wide",680,[[],["w",6]]],[11,"burst","","Clock Unit n operates in Burst mode, with a 1-bit wide…",680,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",680,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["bitdelay_a",4]]],[11,"is_lj","","Checks if the value of the field is `LJ`",6,[[]]],[11,"is_i2s","","Checks if the value of the field is `I2S`",6,[[]]],[11,"variant","atsamd21g::i2s::clkctrl","Get enumerated values variant",681,[[],["bitdelay_a",4]]],[11,"is_lj","","Checks if the value of the field is `LJ`",681,[[]]],[11,"is_i2s","","Checks if the value of the field is `I2S`",681,[[]]],[11,"variant","","Writes `variant` to the field",682,[[["bitdelay_a",4]],["w",6]]],[11,"lj","","Left Justified (0 Bit Delay)",682,[[],["w",6]]],[11,"i2s","","I2S (1 Bit Delay)",682,[[],["w",6]]],[11,"set_bit","","Sets the field bit",682,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",682,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",682,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["fssel_a",4]]],[11,"is_sckdiv","","Checks if the value of the field is `SCKDIV`",6,[[]]],[11,"is_fspin","","Checks if the value of the field is `FSPIN`",6,[[]]],[11,"variant","atsamd21g::i2s::clkctrl","Get enumerated values variant",683,[[],["fssel_a",4]]],[11,"is_sckdiv","","Checks if the value of the field is `SCKDIV`",683,[[]]],[11,"is_fspin","","Checks if the value of the field is `FSPIN`",683,[[]]],[11,"variant","","Writes `variant` to the field",684,[[["fssel_a",4]],["w",6]]],[11,"sckdiv","","Divided Serial Clock n is used as Frame Sync n source",684,[[],["w",6]]],[11,"fspin","","FSn input pin is used as Frame Sync n source",684,[[],["w",6]]],[11,"set_bit","","Sets the field bit",684,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",684,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",684,[[],["w",6]]],[11,"set_bit","","Sets the field bit",685,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",685,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",685,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["scksel_a",4]]],[11,"is_mckdiv","","Checks if the value of the field is `MCKDIV`",6,[[]]],[11,"is_sckpin","","Checks if the value of the field is `SCKPIN`",6,[[]]],[11,"variant","atsamd21g::i2s::clkctrl","Get enumerated values variant",686,[[],["scksel_a",4]]],[11,"is_mckdiv","","Checks if the value of the field is `MCKDIV`",686,[[]]],[11,"is_sckpin","","Checks if the value of the field is `SCKPIN`",686,[[]]],[11,"variant","","Writes `variant` to the field",687,[[["scksel_a",4]],["w",6]]],[11,"mckdiv","","Divided Master Clock n is used as Serial Clock n source",687,[[],["w",6]]],[11,"sckpin","","SCKn input pin is used as Serial Clock n source",687,[[],["w",6]]],[11,"set_bit","","Sets the field bit",687,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",687,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",687,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["mcksel_a",4]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_mckpin","","Checks if the value of the field is `MCKPIN`",6,[[]]],[11,"variant","atsamd21g::i2s::clkctrl","Get enumerated values variant",688,[[],["mcksel_a",4]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",688,[[]]],[11,"is_mckpin","","Checks if the value of the field is `MCKPIN`",688,[[]]],[11,"variant","","Writes `variant` to the field",689,[[["mcksel_a",4]],["w",6]]],[11,"gclk","","GCLK_I2S_n is used as Master Clock n source",689,[[],["w",6]]],[11,"mckpin","","MCKn input pin is used as Master Clock n source",689,[[],["w",6]]],[11,"set_bit","","Sets the field bit",689,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",689,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",689,[[],["w",6]]],[11,"set_bit","","Sets the field bit",690,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",690,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",690,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",691,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",692,[[],["w",6]]],[11,"set_bit","","Sets the field bit",693,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",693,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",693,[[],["w",6]]],[11,"set_bit","","Sets the field bit",694,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",694,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",694,[[],["w",6]]],[11,"set_bit","","Sets the field bit",695,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",695,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",695,[[],["w",6]]],[11,"slotsize","atsamd21g::generic","Bits 0:1 - Slot Size",6,[[],["slotsize_r",6]]],[11,"nbslots","","Bits 2:4 - Number of Slots in Frame",6,[[],["nbslots_r",6]]],[11,"fswidth","","Bits 5:6 - Frame Sync Width",6,[[],["fswidth_r",6]]],[11,"bitdelay","","Bit 7 - Data Delay from Frame Sync",6,[[],["bitdelay_r",6]]],[11,"fssel","","Bit 8 - Frame Sync Select",6,[[],["fssel_r",6]]],[11,"fsinv","","Bit 11 - Frame Sync Invert",6,[[],["fsinv_r",6]]],[11,"scksel","","Bit 12 - Serial Clock Select",6,[[],["scksel_r",6]]],[11,"mcksel","","Bit 16 - Master Clock Select",6,[[],["mcksel_r",6]]],[11,"mcken","","Bit 18 - Master Clock Enable",6,[[],["mcken_r",6]]],[11,"mckdiv","","Bits 19:23 - Master Clock Division Factor",6,[[],["mckdiv_r",6]]],[11,"mckoutdiv","","Bits 24:28 - Master Clock Output Division Factor",6,[[],["mckoutdiv_r",6]]],[11,"fsoutinv","","Bit 29 - Frame Sync Output Invert",6,[[],["fsoutinv_r",6]]],[11,"sckoutinv","","Bit 30 - Serial Clock Output Invert",6,[[],["sckoutinv_r",6]]],[11,"mckoutinv","","Bit 31 - Master Clock Output Invert",6,[[],["mckoutinv_r",6]]],[11,"slotsize","atsamd21g::i2s::clkctrl","Bits 0:1 - Slot Size",696,[[],["slotsize_r",6]]],[11,"nbslots","","Bits 2:4 - Number of Slots in Frame",696,[[],["nbslots_r",6]]],[11,"fswidth","","Bits 5:6 - Frame Sync Width",696,[[],["fswidth_r",6]]],[11,"bitdelay","","Bit 7 - Data Delay from Frame Sync",696,[[],["bitdelay_r",6]]],[11,"fssel","","Bit 8 - Frame Sync Select",696,[[],["fssel_r",6]]],[11,"fsinv","","Bit 11 - Frame Sync Invert",696,[[],["fsinv_r",6]]],[11,"scksel","","Bit 12 - Serial Clock Select",696,[[],["scksel_r",6]]],[11,"mcksel","","Bit 16 - Master Clock Select",696,[[],["mcksel_r",6]]],[11,"mcken","","Bit 18 - Master Clock Enable",696,[[],["mcken_r",6]]],[11,"mckdiv","","Bits 19:23 - Master Clock Division Factor",696,[[],["mckdiv_r",6]]],[11,"mckoutdiv","","Bits 24:28 - Master Clock Output Division Factor",696,[[],["mckoutdiv_r",6]]],[11,"fsoutinv","","Bit 29 - Frame Sync Output Invert",696,[[],["fsoutinv_r",6]]],[11,"sckoutinv","","Bit 30 - Serial Clock Output Invert",696,[[],["sckoutinv_r",6]]],[11,"mckoutinv","","Bit 31 - Master Clock Output Invert",696,[[],["mckoutinv_r",6]]],[11,"slotsize","atsamd21g::generic","Bits 0:1 - Slot Size",7,[[],["slotsize_w",3]]],[11,"nbslots","","Bits 2:4 - Number of Slots in Frame",7,[[],["nbslots_w",3]]],[11,"fswidth","","Bits 5:6 - Frame Sync Width",7,[[],["fswidth_w",3]]],[11,"bitdelay","","Bit 7 - Data Delay from Frame Sync",7,[[],["bitdelay_w",3]]],[11,"fssel","","Bit 8 - Frame Sync Select",7,[[],["fssel_w",3]]],[11,"fsinv","","Bit 11 - Frame Sync Invert",7,[[],["fsinv_w",3]]],[11,"scksel","","Bit 12 - Serial Clock Select",7,[[],["scksel_w",3]]],[11,"mcksel","","Bit 16 - Master Clock Select",7,[[],["mcksel_w",3]]],[11,"mcken","","Bit 18 - Master Clock Enable",7,[[],["mcken_w",3]]],[11,"mckdiv","","Bits 19:23 - Master Clock Division Factor",7,[[],["mckdiv_w",3]]],[11,"mckoutdiv","","Bits 24:28 - Master Clock Output Division Factor",7,[[],["mckoutdiv_w",3]]],[11,"fsoutinv","","Bit 29 - Frame Sync Output Invert",7,[[],["fsoutinv_w",3]]],[11,"sckoutinv","","Bit 30 - Serial Clock Output Invert",7,[[],["sckoutinv_w",3]]],[11,"mckoutinv","","Bit 31 - Master Clock Output Invert",7,[[],["mckoutinv_w",3]]],[11,"slotsize","atsamd21g::i2s::clkctrl","Bits 0:1 - Slot Size",697,[[],["slotsize_w",3]]],[11,"nbslots","","Bits 2:4 - Number of Slots in Frame",697,[[],["nbslots_w",3]]],[11,"fswidth","","Bits 5:6 - Frame Sync Width",697,[[],["fswidth_w",3]]],[11,"bitdelay","","Bit 7 - Data Delay from Frame Sync",697,[[],["bitdelay_w",3]]],[11,"fssel","","Bit 8 - Frame Sync Select",697,[[],["fssel_w",3]]],[11,"fsinv","","Bit 11 - Frame Sync Invert",697,[[],["fsinv_w",3]]],[11,"scksel","","Bit 12 - Serial Clock Select",697,[[],["scksel_w",3]]],[11,"mcksel","","Bit 16 - Master Clock Select",697,[[],["mcksel_w",3]]],[11,"mcken","","Bit 18 - Master Clock Enable",697,[[],["mcken_w",3]]],[11,"mckdiv","","Bits 19:23 - Master Clock Division Factor",697,[[],["mckdiv_w",3]]],[11,"mckoutdiv","","Bits 24:28 - Master Clock Output Division Factor",697,[[],["mckoutdiv_w",3]]],[11,"fsoutinv","","Bit 29 - Frame Sync Output Invert",697,[[],["fsoutinv_w",3]]],[11,"sckoutinv","","Bit 30 - Serial Clock Output Invert",697,[[],["sckoutinv_w",3]]],[11,"mckoutinv","","Bit 31 - Master Clock Output Invert",697,[[],["mckoutinv_w",3]]],[0,"intenclr","atsamd21g::i2s","Interrupt Enable Clear",null,null],[3,"RXRDY0_W","atsamd21g::i2s::intenclr","Write proxy for field `RXRDY0`",null,null],[3,"RXRDY1_W","","Write proxy for field `RXRDY1`",null,null],[3,"RXOR0_W","","Write proxy for field `RXOR0`",null,null],[3,"RXOR1_W","","Write proxy for field `RXOR1`",null,null],[3,"TXRDY0_W","","Write proxy for field `TXRDY0`",null,null],[3,"TXRDY1_W","","Write proxy for field `TXRDY1`",null,null],[3,"TXUR0_W","","Write proxy for field `TXUR0`",null,null],[3,"TXUR1_W","","Write proxy for field `TXUR1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"RXRDY0_R","","Reader of field `RXRDY0`",null,null],[6,"RXRDY1_R","","Reader of field `RXRDY1`",null,null],[6,"RXOR0_R","","Reader of field `RXOR0`",null,null],[6,"RXOR1_R","","Reader of field `RXOR1`",null,null],[6,"TXRDY0_R","","Reader of field `TXRDY0`",null,null],[6,"TXRDY1_R","","Reader of field `TXRDY1`",null,null],[6,"TXUR0_R","","Reader of field `TXUR0`",null,null],[6,"TXUR1_R","","Reader of field `TXUR1`",null,null],[11,"set_bit","","Sets the field bit",698,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",698,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",698,[[],["w",6]]],[11,"set_bit","","Sets the field bit",699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",699,[[],["w",6]]],[11,"set_bit","","Sets the field bit",700,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",700,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",700,[[],["w",6]]],[11,"set_bit","","Sets the field bit",701,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",701,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",701,[[],["w",6]]],[11,"set_bit","","Sets the field bit",702,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",702,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",702,[[],["w",6]]],[11,"set_bit","","Sets the field bit",703,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",703,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",703,[[],["w",6]]],[11,"set_bit","","Sets the field bit",704,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",704,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",704,[[],["w",6]]],[11,"set_bit","","Sets the field bit",705,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",705,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",705,[[],["w",6]]],[11,"rxrdy0","atsamd21g::generic","Bit 0 - Receive Ready 0 Interrupt Enable",6,[[],["rxrdy0_r",6]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",6,[[],["rxrdy1_r",6]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",6,[[],["rxor0_r",6]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",6,[[],["rxor1_r",6]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",6,[[],["txrdy0_r",6]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",6,[[],["txrdy1_r",6]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",6,[[],["txur0_r",6]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",6,[[],["txur1_r",6]]],[11,"rxrdy0","atsamd21g::i2s::intenclr","Bit 0 - Receive Ready 0 Interrupt Enable",706,[[],["rxrdy0_r",6]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",706,[[],["rxrdy1_r",6]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",706,[[],["rxor0_r",6]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",706,[[],["rxor1_r",6]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",706,[[],["txrdy0_r",6]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",706,[[],["txrdy1_r",6]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",706,[[],["txur0_r",6]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",706,[[],["txur1_r",6]]],[11,"rxrdy0","atsamd21g::generic","Bit 0 - Receive Ready 0 Interrupt Enable",7,[[],["rxrdy0_w",3]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",7,[[],["rxrdy1_w",3]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",7,[[],["rxor0_w",3]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",7,[[],["rxor1_w",3]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",7,[[],["txrdy0_w",3]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",7,[[],["txrdy1_w",3]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",7,[[],["txur0_w",3]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",7,[[],["txur1_w",3]]],[11,"rxrdy0","atsamd21g::i2s::intenclr","Bit 0 - Receive Ready 0 Interrupt Enable",707,[[],["rxrdy0_w",3]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",707,[[],["rxrdy1_w",3]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",707,[[],["rxor0_w",3]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",707,[[],["rxor1_w",3]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",707,[[],["txrdy0_w",3]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",707,[[],["txrdy1_w",3]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",707,[[],["txur0_w",3]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",707,[[],["txur1_w",3]]],[0,"intenset","atsamd21g::i2s","Interrupt Enable Set",null,null],[3,"RXRDY0_W","atsamd21g::i2s::intenset","Write proxy for field `RXRDY0`",null,null],[3,"RXRDY1_W","","Write proxy for field `RXRDY1`",null,null],[3,"RXOR0_W","","Write proxy for field `RXOR0`",null,null],[3,"RXOR1_W","","Write proxy for field `RXOR1`",null,null],[3,"TXRDY0_W","","Write proxy for field `TXRDY0`",null,null],[3,"TXRDY1_W","","Write proxy for field `TXRDY1`",null,null],[3,"TXUR0_W","","Write proxy for field `TXUR0`",null,null],[3,"TXUR1_W","","Write proxy for field `TXUR1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"RXRDY0_R","","Reader of field `RXRDY0`",null,null],[6,"RXRDY1_R","","Reader of field `RXRDY1`",null,null],[6,"RXOR0_R","","Reader of field `RXOR0`",null,null],[6,"RXOR1_R","","Reader of field `RXOR1`",null,null],[6,"TXRDY0_R","","Reader of field `TXRDY0`",null,null],[6,"TXRDY1_R","","Reader of field `TXRDY1`",null,null],[6,"TXUR0_R","","Reader of field `TXUR0`",null,null],[6,"TXUR1_R","","Reader of field `TXUR1`",null,null],[11,"set_bit","","Sets the field bit",708,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",708,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",708,[[],["w",6]]],[11,"set_bit","","Sets the field bit",709,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",709,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",709,[[],["w",6]]],[11,"set_bit","","Sets the field bit",710,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",710,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",710,[[],["w",6]]],[11,"set_bit","","Sets the field bit",711,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",711,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",711,[[],["w",6]]],[11,"set_bit","","Sets the field bit",712,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",712,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",712,[[],["w",6]]],[11,"set_bit","","Sets the field bit",713,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",713,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",713,[[],["w",6]]],[11,"set_bit","","Sets the field bit",714,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",714,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",714,[[],["w",6]]],[11,"set_bit","","Sets the field bit",715,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",715,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",715,[[],["w",6]]],[11,"rxrdy0","atsamd21g::generic","Bit 0 - Receive Ready 0 Interrupt Enable",6,[[],["rxrdy0_r",6]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",6,[[],["rxrdy1_r",6]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",6,[[],["rxor0_r",6]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",6,[[],["rxor1_r",6]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",6,[[],["txrdy0_r",6]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",6,[[],["txrdy1_r",6]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",6,[[],["txur0_r",6]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",6,[[],["txur1_r",6]]],[11,"rxrdy0","atsamd21g::i2s::intenset","Bit 0 - Receive Ready 0 Interrupt Enable",716,[[],["rxrdy0_r",6]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",716,[[],["rxrdy1_r",6]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",716,[[],["rxor0_r",6]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",716,[[],["rxor1_r",6]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",716,[[],["txrdy0_r",6]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",716,[[],["txrdy1_r",6]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",716,[[],["txur0_r",6]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",716,[[],["txur1_r",6]]],[11,"rxrdy0","atsamd21g::generic","Bit 0 - Receive Ready 0 Interrupt Enable",7,[[],["rxrdy0_w",3]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",7,[[],["rxrdy1_w",3]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",7,[[],["rxor0_w",3]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",7,[[],["rxor1_w",3]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",7,[[],["txrdy0_w",3]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",7,[[],["txrdy1_w",3]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",7,[[],["txur0_w",3]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",7,[[],["txur1_w",3]]],[11,"rxrdy0","atsamd21g::i2s::intenset","Bit 0 - Receive Ready 0 Interrupt Enable",717,[[],["rxrdy0_w",3]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1 Interrupt Enable",717,[[],["rxrdy1_w",3]]],[11,"rxor0","","Bit 4 - Receive Overrun 0 Interrupt Enable",717,[[],["rxor0_w",3]]],[11,"rxor1","","Bit 5 - Receive Overrun 1 Interrupt Enable",717,[[],["rxor1_w",3]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0 Interrupt Enable",717,[[],["txrdy0_w",3]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1 Interrupt Enable",717,[[],["txrdy1_w",3]]],[11,"txur0","","Bit 12 - Transmit Underrun 0 Interrupt Enable",717,[[],["txur0_w",3]]],[11,"txur1","","Bit 13 - Transmit Underrun 1 Interrupt Enable",717,[[],["txur1_w",3]]],[0,"intflag","atsamd21g::i2s","Interrupt Flag Status and Clear",null,null],[3,"RXRDY0_W","atsamd21g::i2s::intflag","Write proxy for field `RXRDY0`",null,null],[3,"RXRDY1_W","","Write proxy for field `RXRDY1`",null,null],[3,"RXOR0_W","","Write proxy for field `RXOR0`",null,null],[3,"RXOR1_W","","Write proxy for field `RXOR1`",null,null],[3,"TXRDY0_W","","Write proxy for field `TXRDY0`",null,null],[3,"TXRDY1_W","","Write proxy for field `TXRDY1`",null,null],[3,"TXUR0_W","","Write proxy for field `TXUR0`",null,null],[3,"TXUR1_W","","Write proxy for field `TXUR1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"RXRDY0_R","","Reader of field `RXRDY0`",null,null],[6,"RXRDY1_R","","Reader of field `RXRDY1`",null,null],[6,"RXOR0_R","","Reader of field `RXOR0`",null,null],[6,"RXOR1_R","","Reader of field `RXOR1`",null,null],[6,"TXRDY0_R","","Reader of field `TXRDY0`",null,null],[6,"TXRDY1_R","","Reader of field `TXRDY1`",null,null],[6,"TXUR0_R","","Reader of field `TXUR0`",null,null],[6,"TXUR1_R","","Reader of field `TXUR1`",null,null],[11,"set_bit","","Sets the field bit",718,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",718,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",718,[[],["w",6]]],[11,"set_bit","","Sets the field bit",719,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",719,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",719,[[],["w",6]]],[11,"set_bit","","Sets the field bit",720,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",720,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",720,[[],["w",6]]],[11,"set_bit","","Sets the field bit",721,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",721,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",721,[[],["w",6]]],[11,"set_bit","","Sets the field bit",722,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",722,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",722,[[],["w",6]]],[11,"set_bit","","Sets the field bit",723,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",723,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",723,[[],["w",6]]],[11,"set_bit","","Sets the field bit",724,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",724,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",724,[[],["w",6]]],[11,"set_bit","","Sets the field bit",725,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",725,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",725,[[],["w",6]]],[11,"rxrdy0","atsamd21g::generic","Bit 0 - Receive Ready 0",6,[[],["rxrdy0_r",6]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1",6,[[],["rxrdy1_r",6]]],[11,"rxor0","","Bit 4 - Receive Overrun 0",6,[[],["rxor0_r",6]]],[11,"rxor1","","Bit 5 - Receive Overrun 1",6,[[],["rxor1_r",6]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0",6,[[],["txrdy0_r",6]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1",6,[[],["txrdy1_r",6]]],[11,"txur0","","Bit 12 - Transmit Underrun 0",6,[[],["txur0_r",6]]],[11,"txur1","","Bit 13 - Transmit Underrun 1",6,[[],["txur1_r",6]]],[11,"rxrdy0","atsamd21g::i2s::intflag","Bit 0 - Receive Ready 0",726,[[],["rxrdy0_r",6]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1",726,[[],["rxrdy1_r",6]]],[11,"rxor0","","Bit 4 - Receive Overrun 0",726,[[],["rxor0_r",6]]],[11,"rxor1","","Bit 5 - Receive Overrun 1",726,[[],["rxor1_r",6]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0",726,[[],["txrdy0_r",6]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1",726,[[],["txrdy1_r",6]]],[11,"txur0","","Bit 12 - Transmit Underrun 0",726,[[],["txur0_r",6]]],[11,"txur1","","Bit 13 - Transmit Underrun 1",726,[[],["txur1_r",6]]],[11,"rxrdy0","atsamd21g::generic","Bit 0 - Receive Ready 0",7,[[],["rxrdy0_w",3]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1",7,[[],["rxrdy1_w",3]]],[11,"rxor0","","Bit 4 - Receive Overrun 0",7,[[],["rxor0_w",3]]],[11,"rxor1","","Bit 5 - Receive Overrun 1",7,[[],["rxor1_w",3]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0",7,[[],["txrdy0_w",3]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1",7,[[],["txrdy1_w",3]]],[11,"txur0","","Bit 12 - Transmit Underrun 0",7,[[],["txur0_w",3]]],[11,"txur1","","Bit 13 - Transmit Underrun 1",7,[[],["txur1_w",3]]],[11,"rxrdy0","atsamd21g::i2s::intflag","Bit 0 - Receive Ready 0",727,[[],["rxrdy0_w",3]]],[11,"rxrdy1","","Bit 1 - Receive Ready 1",727,[[],["rxrdy1_w",3]]],[11,"rxor0","","Bit 4 - Receive Overrun 0",727,[[],["rxor0_w",3]]],[11,"rxor1","","Bit 5 - Receive Overrun 1",727,[[],["rxor1_w",3]]],[11,"txrdy0","","Bit 8 - Transmit Ready 0",727,[[],["txrdy0_w",3]]],[11,"txrdy1","","Bit 9 - Transmit Ready 1",727,[[],["txrdy1_w",3]]],[11,"txur0","","Bit 12 - Transmit Underrun 0",727,[[],["txur0_w",3]]],[11,"txur1","","Bit 13 - Transmit Underrun 1",727,[[],["txur1_w",3]]],[0,"syncbusy","atsamd21g::i2s","Synchronization Status",null,null],[6,"R","atsamd21g::i2s::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CKEN0_R","","Reader of field `CKEN0`",null,null],[6,"CKEN1_R","","Reader of field `CKEN1`",null,null],[6,"SEREN0_R","","Reader of field `SEREN0`",null,null],[6,"SEREN1_R","","Reader of field `SEREN1`",null,null],[6,"DATA0_R","","Reader of field `DATA0`",null,null],[6,"DATA1_R","","Reader of field `DATA1`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Status",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Status",6,[[],["enable_r",6]]],[11,"cken0","","Bit 2 - Clock Unit 0 Enable Synchronization Status",6,[[],["cken0_r",6]]],[11,"cken1","","Bit 3 - Clock Unit 1 Enable Synchronization Status",6,[[],["cken1_r",6]]],[11,"seren0","","Bit 4 - Serializer 0 Enable Synchronization Status",6,[[],["seren0_r",6]]],[11,"seren1","","Bit 5 - Serializer 1 Enable Synchronization Status",6,[[],["seren1_r",6]]],[11,"data0","","Bit 8 - Data 0 Synchronization Status",6,[[],["data0_r",6]]],[11,"data1","","Bit 9 - Data 1 Synchronization Status",6,[[],["data1_r",6]]],[11,"swrst","atsamd21g::i2s::syncbusy","Bit 0 - Software Reset Synchronization Status",728,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Status",728,[[],["enable_r",6]]],[11,"cken0","","Bit 2 - Clock Unit 0 Enable Synchronization Status",728,[[],["cken0_r",6]]],[11,"cken1","","Bit 3 - Clock Unit 1 Enable Synchronization Status",728,[[],["cken1_r",6]]],[11,"seren0","","Bit 4 - Serializer 0 Enable Synchronization Status",728,[[],["seren0_r",6]]],[11,"seren1","","Bit 5 - Serializer 1 Enable Synchronization Status",728,[[],["seren1_r",6]]],[11,"data0","","Bit 8 - Data 0 Synchronization Status",728,[[],["data0_r",6]]],[11,"data1","","Bit 9 - Data 1 Synchronization Status",728,[[],["data1_r",6]]],[0,"serctrl","atsamd21g::i2s","Serializer n Control",null,null],[3,"SERMODE_W","atsamd21g::i2s::serctrl","Write proxy for field `SERMODE`",null,null],[3,"TXDEFAULT_W","","Write proxy for field `TXDEFAULT`",null,null],[3,"TXSAME_W","","Write proxy for field `TXSAME`",null,null],[3,"CLKSEL_W","","Write proxy for field `CLKSEL`",null,null],[3,"SLOTADJ_W","","Write proxy for field `SLOTADJ`",null,null],[3,"DATASIZE_W","","Write proxy for field `DATASIZE`",null,null],[3,"WORDADJ_W","","Write proxy for field `WORDADJ`",null,null],[3,"EXTEND_W","","Write proxy for field `EXTEND`",null,null],[3,"BITREV_W","","Write proxy for field `BITREV`",null,null],[3,"SLOTDIS0_W","","Write proxy for field `SLOTDIS0`",null,null],[3,"SLOTDIS1_W","","Write proxy for field `SLOTDIS1`",null,null],[3,"SLOTDIS2_W","","Write proxy for field `SLOTDIS2`",null,null],[3,"SLOTDIS3_W","","Write proxy for field `SLOTDIS3`",null,null],[3,"SLOTDIS4_W","","Write proxy for field `SLOTDIS4`",null,null],[3,"SLOTDIS5_W","","Write proxy for field `SLOTDIS5`",null,null],[3,"SLOTDIS6_W","","Write proxy for field `SLOTDIS6`",null,null],[3,"SLOTDIS7_W","","Write proxy for field `SLOTDIS7`",null,null],[3,"MONO_W","","Write proxy for field `MONO`",null,null],[3,"DMA_W","","Write proxy for field `DMA`",null,null],[3,"RXLOOP_W","","Write proxy for field `RXLOOP`",null,null],[4,"SERMODE_A","","Serializer Mode",null,null],[13,"RX","","0: Receive",729,null],[13,"TX","","1: Transmit",729,null],[13,"PDM2","","2: Receive one PDM data on each serial clock edge",729,null],[4,"TXDEFAULT_A","","Line Default Line when Slot Disabled",null,null],[13,"ZERO","","0: Output Default Value is 0",730,null],[13,"ONE","","1: Output Default Value is 1",730,null],[13,"HIZ","","3: Output Default Value is high impedance",730,null],[4,"TXSAME_A","","Transmit Data when Underrun",null,null],[13,"ZERO","","0: Zero data transmitted in case of underrun",731,null],[13,"SAME","","1: Last data transmitted in case of underrun",731,null],[4,"CLKSEL_A","","Clock Unit Selection",null,null],[13,"CLK0","","0: Use Clock Unit 0",732,null],[13,"CLK1","","1: Use Clock Unit 1",732,null],[4,"SLOTADJ_A","","Data Slot Formatting Adjust",null,null],[13,"RIGHT","","0: Data is right adjusted in slot",733,null],[13,"LEFT","","1: Data is left adjusted in slot",733,null],[4,"DATASIZE_A","","Data Word Size",null,null],[13,"_32","","0: 32 bits",734,null],[13,"_24","","1: 24 bits",734,null],[13,"_20","","2: 20 bits",734,null],[13,"_18","","3: 18 bits",734,null],[13,"_16","","4: 16 bits",734,null],[13,"_16C","","5: 16 bits compact stereo",734,null],[13,"_8","","6: 8 bits",734,null],[13,"_8C","","7: 8 bits compact stereo",734,null],[4,"WORDADJ_A","","Data Word Formatting Adjust",null,null],[13,"RIGHT","","0: Data is right adjusted in word",735,null],[13,"LEFT","","1: Data is left adjusted in word",735,null],[4,"EXTEND_A","","Data Formatting Bit Extension",null,null],[13,"ZERO","","0: Extend with zeroes",736,null],[13,"ONE","","1: Extend with ones",736,null],[13,"MSBIT","","2: Extend with Most Significant Bit",736,null],[13,"LSBIT","","3: Extend with Least Significant Bit",736,null],[4,"BITREV_A","","Data Formatting Bit Reverse",null,null],[13,"MSBIT","","0: Transfer Data Most Significant Bit (MSB) first (default…",737,null],[13,"LSBIT","","1: Transfer Data Least Significant Bit (LSB) first",737,null],[4,"MONO_A","","Mono Mode",null,null],[13,"STEREO","","0: Normal mode",738,null],[13,"MONO","","1: Left channel data is duplicated to right channel",738,null],[4,"DMA_A","","Single or Multiple DMA Channels",null,null],[13,"SINGLE","","0: Single DMA channel",739,null],[13,"MULTIPLE","","1: One DMA channel per data channel",739,null],[6,"R","","Reader of register SERCTRL%s",null,null],[6,"W","","Writer for register SERCTRL%s",null,null],[6,"SERMODE_R","","Reader of field `SERMODE`",null,null],[6,"TXDEFAULT_R","","Reader of field `TXDEFAULT`",null,null],[6,"TXSAME_R","","Reader of field `TXSAME`",null,null],[6,"CLKSEL_R","","Reader of field `CLKSEL`",null,null],[6,"SLOTADJ_R","","Reader of field `SLOTADJ`",null,null],[6,"DATASIZE_R","","Reader of field `DATASIZE`",null,null],[6,"WORDADJ_R","","Reader of field `WORDADJ`",null,null],[6,"EXTEND_R","","Reader of field `EXTEND`",null,null],[6,"BITREV_R","","Reader of field `BITREV`",null,null],[6,"SLOTDIS0_R","","Reader of field `SLOTDIS0`",null,null],[6,"SLOTDIS1_R","","Reader of field `SLOTDIS1`",null,null],[6,"SLOTDIS2_R","","Reader of field `SLOTDIS2`",null,null],[6,"SLOTDIS3_R","","Reader of field `SLOTDIS3`",null,null],[6,"SLOTDIS4_R","","Reader of field `SLOTDIS4`",null,null],[6,"SLOTDIS5_R","","Reader of field `SLOTDIS5`",null,null],[6,"SLOTDIS6_R","","Reader of field `SLOTDIS6`",null,null],[6,"SLOTDIS7_R","","Reader of field `SLOTDIS7`",null,null],[6,"MONO_R","","Reader of field `MONO`",null,null],[6,"DMA_R","","Reader of field `DMA`",null,null],[6,"RXLOOP_R","","Reader of field `RXLOOP`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["sermode_a",4]]]],[11,"is_rx","","Checks if the value of the field is `RX`",6,[[]]],[11,"is_tx","","Checks if the value of the field is `TX`",6,[[]]],[11,"is_pdm2","","Checks if the value of the field is `PDM2`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",740,[[],[["variant",4],["sermode_a",4]]]],[11,"is_rx","","Checks if the value of the field is `RX`",740,[[]]],[11,"is_tx","","Checks if the value of the field is `TX`",740,[[]]],[11,"is_pdm2","","Checks if the value of the field is `PDM2`",740,[[]]],[11,"variant","","Writes `variant` to the field",741,[[["sermode_a",4]],["w",6]]],[11,"rx","","Receive",741,[[],["w",6]]],[11,"tx","","Transmit",741,[[],["w",6]]],[11,"pdm2","","Receive one PDM data on each serial clock edge",741,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",741,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["txdefault_a",4],["variant",4]]]],[11,"is_zero","","Checks if the value of the field is `ZERO`",6,[[]]],[11,"is_one","","Checks if the value of the field is `ONE`",6,[[]]],[11,"is_hiz","","Checks if the value of the field is `HIZ`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",742,[[],[["txdefault_a",4],["variant",4]]]],[11,"is_zero","","Checks if the value of the field is `ZERO`",742,[[]]],[11,"is_one","","Checks if the value of the field is `ONE`",742,[[]]],[11,"is_hiz","","Checks if the value of the field is `HIZ`",742,[[]]],[11,"variant","","Writes `variant` to the field",743,[[["txdefault_a",4]],["w",6]]],[11,"zero","","Output Default Value is 0",743,[[],["w",6]]],[11,"one","","Output Default Value is 1",743,[[],["w",6]]],[11,"hiz","","Output Default Value is high impedance",743,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",743,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["txsame_a",4]]],[11,"is_zero","","Checks if the value of the field is `ZERO`",6,[[]]],[11,"is_same","","Checks if the value of the field is `SAME`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",744,[[],["txsame_a",4]]],[11,"is_zero","","Checks if the value of the field is `ZERO`",744,[[]]],[11,"is_same","","Checks if the value of the field is `SAME`",744,[[]]],[11,"variant","","Writes `variant` to the field",745,[[["txsame_a",4]],["w",6]]],[11,"zero","","Zero data transmitted in case of underrun",745,[[],["w",6]]],[11,"same","","Last data transmitted in case of underrun",745,[[],["w",6]]],[11,"set_bit","","Sets the field bit",745,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",745,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",745,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["clksel_a",4]]],[11,"is_clk0","","Checks if the value of the field is `CLK0`",6,[[]]],[11,"is_clk1","","Checks if the value of the field is `CLK1`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",746,[[],["clksel_a",4]]],[11,"is_clk0","","Checks if the value of the field is `CLK0`",746,[[]]],[11,"is_clk1","","Checks if the value of the field is `CLK1`",746,[[]]],[11,"variant","","Writes `variant` to the field",747,[[["clksel_a",4]],["w",6]]],[11,"clk0","","Use Clock Unit 0",747,[[],["w",6]]],[11,"clk1","","Use Clock Unit 1",747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",747,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["slotadj_a",4]]],[11,"is_right","","Checks if the value of the field is `RIGHT`",6,[[]]],[11,"is_left","","Checks if the value of the field is `LEFT`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",748,[[],["slotadj_a",4]]],[11,"is_right","","Checks if the value of the field is `RIGHT`",748,[[]]],[11,"is_left","","Checks if the value of the field is `LEFT`",748,[[]]],[11,"variant","","Writes `variant` to the field",749,[[["slotadj_a",4]],["w",6]]],[11,"right","","Data is right adjusted in slot",749,[[],["w",6]]],[11,"left","","Data is left adjusted in slot",749,[[],["w",6]]],[11,"set_bit","","Sets the field bit",749,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",749,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",749,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["datasize_a",4]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_24","","Checks if the value of the field is `_24`",6,[[]]],[11,"is_20","","Checks if the value of the field is `_20`",6,[[]]],[11,"is_18","","Checks if the value of the field is `_18`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_16c","","Checks if the value of the field is `_16C`",6,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_8c","","Checks if the value of the field is `_8C`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",750,[[],["datasize_a",4]]],[11,"is_32","","Checks if the value of the field is `_32`",750,[[]]],[11,"is_24","","Checks if the value of the field is `_24`",750,[[]]],[11,"is_20","","Checks if the value of the field is `_20`",750,[[]]],[11,"is_18","","Checks if the value of the field is `_18`",750,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",750,[[]]],[11,"is_16c","","Checks if the value of the field is `_16C`",750,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",750,[[]]],[11,"is_8c","","Checks if the value of the field is `_8C`",750,[[]]],[11,"variant","","Writes `variant` to the field",751,[[["datasize_a",4]],["w",6]]],[11,"_32","","32 bits",751,[[],["w",6]]],[11,"_24","","24 bits",751,[[],["w",6]]],[11,"_20","","20 bits",751,[[],["w",6]]],[11,"_18","","18 bits",751,[[],["w",6]]],[11,"_16","","16 bits",751,[[],["w",6]]],[11,"_16c","","16 bits compact stereo",751,[[],["w",6]]],[11,"_8","","8 bits",751,[[],["w",6]]],[11,"_8c","","8 bits compact stereo",751,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",751,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["wordadj_a",4]]],[11,"is_right","","Checks if the value of the field is `RIGHT`",6,[[]]],[11,"is_left","","Checks if the value of the field is `LEFT`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",752,[[],["wordadj_a",4]]],[11,"is_right","","Checks if the value of the field is `RIGHT`",752,[[]]],[11,"is_left","","Checks if the value of the field is `LEFT`",752,[[]]],[11,"variant","","Writes `variant` to the field",753,[[["wordadj_a",4]],["w",6]]],[11,"right","","Data is right adjusted in word",753,[[],["w",6]]],[11,"left","","Data is left adjusted in word",753,[[],["w",6]]],[11,"set_bit","","Sets the field bit",753,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",753,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",753,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["extend_a",4]]],[11,"is_zero","","Checks if the value of the field is `ZERO`",6,[[]]],[11,"is_one","","Checks if the value of the field is `ONE`",6,[[]]],[11,"is_msbit","","Checks if the value of the field is `MSBIT`",6,[[]]],[11,"is_lsbit","","Checks if the value of the field is `LSBIT`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",754,[[],["extend_a",4]]],[11,"is_zero","","Checks if the value of the field is `ZERO`",754,[[]]],[11,"is_one","","Checks if the value of the field is `ONE`",754,[[]]],[11,"is_msbit","","Checks if the value of the field is `MSBIT`",754,[[]]],[11,"is_lsbit","","Checks if the value of the field is `LSBIT`",754,[[]]],[11,"variant","","Writes `variant` to the field",755,[[["extend_a",4]],["w",6]]],[11,"zero","","Extend with zeroes",755,[[],["w",6]]],[11,"one","","Extend with ones",755,[[],["w",6]]],[11,"msbit","","Extend with Most Significant Bit",755,[[],["w",6]]],[11,"lsbit","","Extend with Least Significant Bit",755,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",755,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["bitrev_a",4]]],[11,"is_msbit","","Checks if the value of the field is `MSBIT`",6,[[]]],[11,"is_lsbit","","Checks if the value of the field is `LSBIT`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",756,[[],["bitrev_a",4]]],[11,"is_msbit","","Checks if the value of the field is `MSBIT`",756,[[]]],[11,"is_lsbit","","Checks if the value of the field is `LSBIT`",756,[[]]],[11,"variant","","Writes `variant` to the field",757,[[["bitrev_a",4]],["w",6]]],[11,"msbit","","Transfer Data Most Significant Bit (MSB) first (default…",757,[[],["w",6]]],[11,"lsbit","","Transfer Data Least Significant Bit (LSB) first",757,[[],["w",6]]],[11,"set_bit","","Sets the field bit",757,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",757,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",757,[[],["w",6]]],[11,"set_bit","","Sets the field bit",758,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",758,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",758,[[],["w",6]]],[11,"set_bit","","Sets the field bit",759,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",759,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",759,[[],["w",6]]],[11,"set_bit","","Sets the field bit",760,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",760,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",760,[[],["w",6]]],[11,"set_bit","","Sets the field bit",761,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",761,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",761,[[],["w",6]]],[11,"set_bit","","Sets the field bit",762,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",762,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",762,[[],["w",6]]],[11,"set_bit","","Sets the field bit",763,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",763,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",763,[[],["w",6]]],[11,"set_bit","","Sets the field bit",764,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",764,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",764,[[],["w",6]]],[11,"set_bit","","Sets the field bit",765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",765,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["mono_a",4]]],[11,"is_stereo","","Checks if the value of the field is `STEREO`",6,[[]]],[11,"is_mono","","Checks if the value of the field is `MONO`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",766,[[],["mono_a",4]]],[11,"is_stereo","","Checks if the value of the field is `STEREO`",766,[[]]],[11,"is_mono","","Checks if the value of the field is `MONO`",766,[[]]],[11,"variant","","Writes `variant` to the field",767,[[["mono_a",4]],["w",6]]],[11,"stereo","","Normal mode",767,[[],["w",6]]],[11,"mono","","Left channel data is duplicated to right channel",767,[[],["w",6]]],[11,"set_bit","","Sets the field bit",767,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",767,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",767,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["dma_a",4]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_multiple","","Checks if the value of the field is `MULTIPLE`",6,[[]]],[11,"variant","atsamd21g::i2s::serctrl","Get enumerated values variant",768,[[],["dma_a",4]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",768,[[]]],[11,"is_multiple","","Checks if the value of the field is `MULTIPLE`",768,[[]]],[11,"variant","","Writes `variant` to the field",769,[[["dma_a",4]],["w",6]]],[11,"single","","Single DMA channel",769,[[],["w",6]]],[11,"multiple","","One DMA channel per data channel",769,[[],["w",6]]],[11,"set_bit","","Sets the field bit",769,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",769,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",769,[[],["w",6]]],[11,"set_bit","","Sets the field bit",770,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",770,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",770,[[],["w",6]]],[11,"sermode","atsamd21g::generic","Bits 0:1 - Serializer Mode",6,[[],["sermode_r",6]]],[11,"txdefault","","Bits 2:3 - Line Default Line when Slot Disabled",6,[[],["txdefault_r",6]]],[11,"txsame","","Bit 4 - Transmit Data when Underrun",6,[[],["txsame_r",6]]],[11,"clksel","","Bit 5 - Clock Unit Selection",6,[[],["clksel_r",6]]],[11,"slotadj","","Bit 7 - Data Slot Formatting Adjust",6,[[],["slotadj_r",6]]],[11,"datasize","","Bits 8:10 - Data Word Size",6,[[],["datasize_r",6]]],[11,"wordadj","","Bit 12 - Data Word Formatting Adjust",6,[[],["wordadj_r",6]]],[11,"extend","","Bits 13:14 - Data Formatting Bit Extension",6,[[],["extend_r",6]]],[11,"bitrev","","Bit 15 - Data Formatting Bit Reverse",6,[[],["bitrev_r",6]]],[11,"slotdis0","","Bit 16 - Slot 0 Disabled for this Serializer",6,[[],["slotdis0_r",6]]],[11,"slotdis1","","Bit 17 - Slot 1 Disabled for this Serializer",6,[[],["slotdis1_r",6]]],[11,"slotdis2","","Bit 18 - Slot 2 Disabled for this Serializer",6,[[],["slotdis2_r",6]]],[11,"slotdis3","","Bit 19 - Slot 3 Disabled for this Serializer",6,[[],["slotdis3_r",6]]],[11,"slotdis4","","Bit 20 - Slot 4 Disabled for this Serializer",6,[[],["slotdis4_r",6]]],[11,"slotdis5","","Bit 21 - Slot 5 Disabled for this Serializer",6,[[],["slotdis5_r",6]]],[11,"slotdis6","","Bit 22 - Slot 6 Disabled for this Serializer",6,[[],["slotdis6_r",6]]],[11,"slotdis7","","Bit 23 - Slot 7 Disabled for this Serializer",6,[[],["slotdis7_r",6]]],[11,"mono","","Bit 24 - Mono Mode",6,[[],["mono_r",6]]],[11,"dma","","Bit 25 - Single or Multiple DMA Channels",6,[[],["dma_r",6]]],[11,"rxloop","","Bit 26 - Loop-back Test Mode",6,[[],["rxloop_r",6]]],[11,"sermode","atsamd21g::i2s::serctrl","Bits 0:1 - Serializer Mode",771,[[],["sermode_r",6]]],[11,"txdefault","","Bits 2:3 - Line Default Line when Slot Disabled",771,[[],["txdefault_r",6]]],[11,"txsame","","Bit 4 - Transmit Data when Underrun",771,[[],["txsame_r",6]]],[11,"clksel","","Bit 5 - Clock Unit Selection",771,[[],["clksel_r",6]]],[11,"slotadj","","Bit 7 - Data Slot Formatting Adjust",771,[[],["slotadj_r",6]]],[11,"datasize","","Bits 8:10 - Data Word Size",771,[[],["datasize_r",6]]],[11,"wordadj","","Bit 12 - Data Word Formatting Adjust",771,[[],["wordadj_r",6]]],[11,"extend","","Bits 13:14 - Data Formatting Bit Extension",771,[[],["extend_r",6]]],[11,"bitrev","","Bit 15 - Data Formatting Bit Reverse",771,[[],["bitrev_r",6]]],[11,"slotdis0","","Bit 16 - Slot 0 Disabled for this Serializer",771,[[],["slotdis0_r",6]]],[11,"slotdis1","","Bit 17 - Slot 1 Disabled for this Serializer",771,[[],["slotdis1_r",6]]],[11,"slotdis2","","Bit 18 - Slot 2 Disabled for this Serializer",771,[[],["slotdis2_r",6]]],[11,"slotdis3","","Bit 19 - Slot 3 Disabled for this Serializer",771,[[],["slotdis3_r",6]]],[11,"slotdis4","","Bit 20 - Slot 4 Disabled for this Serializer",771,[[],["slotdis4_r",6]]],[11,"slotdis5","","Bit 21 - Slot 5 Disabled for this Serializer",771,[[],["slotdis5_r",6]]],[11,"slotdis6","","Bit 22 - Slot 6 Disabled for this Serializer",771,[[],["slotdis6_r",6]]],[11,"slotdis7","","Bit 23 - Slot 7 Disabled for this Serializer",771,[[],["slotdis7_r",6]]],[11,"mono","","Bit 24 - Mono Mode",771,[[],["mono_r",6]]],[11,"dma","","Bit 25 - Single or Multiple DMA Channels",771,[[],["dma_r",6]]],[11,"rxloop","","Bit 26 - Loop-back Test Mode",771,[[],["rxloop_r",6]]],[11,"sermode","atsamd21g::generic","Bits 0:1 - Serializer Mode",7,[[],["sermode_w",3]]],[11,"txdefault","","Bits 2:3 - Line Default Line when Slot Disabled",7,[[],["txdefault_w",3]]],[11,"txsame","","Bit 4 - Transmit Data when Underrun",7,[[],["txsame_w",3]]],[11,"clksel","","Bit 5 - Clock Unit Selection",7,[[],["clksel_w",3]]],[11,"slotadj","","Bit 7 - Data Slot Formatting Adjust",7,[[],["slotadj_w",3]]],[11,"datasize","","Bits 8:10 - Data Word Size",7,[[],["datasize_w",3]]],[11,"wordadj","","Bit 12 - Data Word Formatting Adjust",7,[[],["wordadj_w",3]]],[11,"extend","","Bits 13:14 - Data Formatting Bit Extension",7,[[],["extend_w",3]]],[11,"bitrev","","Bit 15 - Data Formatting Bit Reverse",7,[[],["bitrev_w",3]]],[11,"slotdis0","","Bit 16 - Slot 0 Disabled for this Serializer",7,[[],["slotdis0_w",3]]],[11,"slotdis1","","Bit 17 - Slot 1 Disabled for this Serializer",7,[[],["slotdis1_w",3]]],[11,"slotdis2","","Bit 18 - Slot 2 Disabled for this Serializer",7,[[],["slotdis2_w",3]]],[11,"slotdis3","","Bit 19 - Slot 3 Disabled for this Serializer",7,[[],["slotdis3_w",3]]],[11,"slotdis4","","Bit 20 - Slot 4 Disabled for this Serializer",7,[[],["slotdis4_w",3]]],[11,"slotdis5","","Bit 21 - Slot 5 Disabled for this Serializer",7,[[],["slotdis5_w",3]]],[11,"slotdis6","","Bit 22 - Slot 6 Disabled for this Serializer",7,[[],["slotdis6_w",3]]],[11,"slotdis7","","Bit 23 - Slot 7 Disabled for this Serializer",7,[[],["slotdis7_w",3]]],[11,"mono","","Bit 24 - Mono Mode",7,[[],["mono_w",3]]],[11,"dma","","Bit 25 - Single or Multiple DMA Channels",7,[[],["dma_w",3]]],[11,"rxloop","","Bit 26 - Loop-back Test Mode",7,[[],["rxloop_w",3]]],[11,"sermode","atsamd21g::i2s::serctrl","Bits 0:1 - Serializer Mode",772,[[],["sermode_w",3]]],[11,"txdefault","","Bits 2:3 - Line Default Line when Slot Disabled",772,[[],["txdefault_w",3]]],[11,"txsame","","Bit 4 - Transmit Data when Underrun",772,[[],["txsame_w",3]]],[11,"clksel","","Bit 5 - Clock Unit Selection",772,[[],["clksel_w",3]]],[11,"slotadj","","Bit 7 - Data Slot Formatting Adjust",772,[[],["slotadj_w",3]]],[11,"datasize","","Bits 8:10 - Data Word Size",772,[[],["datasize_w",3]]],[11,"wordadj","","Bit 12 - Data Word Formatting Adjust",772,[[],["wordadj_w",3]]],[11,"extend","","Bits 13:14 - Data Formatting Bit Extension",772,[[],["extend_w",3]]],[11,"bitrev","","Bit 15 - Data Formatting Bit Reverse",772,[[],["bitrev_w",3]]],[11,"slotdis0","","Bit 16 - Slot 0 Disabled for this Serializer",772,[[],["slotdis0_w",3]]],[11,"slotdis1","","Bit 17 - Slot 1 Disabled for this Serializer",772,[[],["slotdis1_w",3]]],[11,"slotdis2","","Bit 18 - Slot 2 Disabled for this Serializer",772,[[],["slotdis2_w",3]]],[11,"slotdis3","","Bit 19 - Slot 3 Disabled for this Serializer",772,[[],["slotdis3_w",3]]],[11,"slotdis4","","Bit 20 - Slot 4 Disabled for this Serializer",772,[[],["slotdis4_w",3]]],[11,"slotdis5","","Bit 21 - Slot 5 Disabled for this Serializer",772,[[],["slotdis5_w",3]]],[11,"slotdis6","","Bit 22 - Slot 6 Disabled for this Serializer",772,[[],["slotdis6_w",3]]],[11,"slotdis7","","Bit 23 - Slot 7 Disabled for this Serializer",772,[[],["slotdis7_w",3]]],[11,"mono","","Bit 24 - Mono Mode",772,[[],["mono_w",3]]],[11,"dma","","Bit 25 - Single or Multiple DMA Channels",772,[[],["dma_w",3]]],[11,"rxloop","","Bit 26 - Loop-back Test Mode",772,[[],["rxloop_w",3]]],[0,"data","atsamd21g::i2s","Data n",null,null],[3,"DATA_W","atsamd21g::i2s::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA%s",null,null],[6,"W","","Writer for register DATA%s",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",773,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:31 - Sample Data",6,[[],["data_r",6]]],[11,"data","atsamd21g::i2s::data","Bits 0:31 - Sample Data",774,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:31 - Sample Data",7,[[],["data_w",3]]],[11,"data","atsamd21g::i2s::data","Bits 0:31 - Sample Data",775,[[],["data_w",3]]],[6,"CTRLA","atsamd21g::i2s","Control A",null,null],[6,"CLKCTRL","","Clock Unit n Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"SYNCBUSY","","Synchronization Status",null,null],[6,"SERCTRL","","Serializer n Control",null,null],[6,"DATA","","Data n",null,null],[0,"mtb","atsamd21g","Cortex-M0+ Micro-Trace Buffer",null,null],[3,"RegisterBlock","atsamd21g::mtb","Register block",null,null],[12,"position","","0x00 - MTB Position",776,null],[12,"master","","0x04 - MTB Master",776,null],[12,"flow","","0x08 - MTB Flow",776,null],[12,"base","","0x0c - MTB Base",776,null],[12,"itctrl","","0xf00 - MTB Integration Mode Control",776,null],[12,"claimset","","0xfa0 - MTB Claim Set",776,null],[12,"claimclr","","0xfa4 - MTB Claim Clear",776,null],[12,"lockaccess","","0xfb0 - MTB Lock Access",776,null],[12,"lockstatus","","0xfb4 - MTB Lock Status",776,null],[12,"authstatus","","0xfb8 - MTB Authentication Status",776,null],[12,"devarch","","0xfbc - MTB Device Architecture",776,null],[12,"devid","","0xfc8 - MTB Device Configuration",776,null],[12,"devtype","","0xfcc - MTB Device Type",776,null],[12,"pid4","","0xfd0 - CoreSight",776,null],[12,"pid5","","0xfd4 - CoreSight",776,null],[12,"pid6","","0xfd8 - CoreSight",776,null],[12,"pid7","","0xfdc - CoreSight",776,null],[12,"pid0","","0xfe0 - CoreSight",776,null],[12,"pid1","","0xfe4 - CoreSight",776,null],[12,"pid2","","0xfe8 - CoreSight",776,null],[12,"pid3","","0xfec - CoreSight",776,null],[12,"cid0","","0xff0 - CoreSight",776,null],[12,"cid1","","0xff4 - CoreSight",776,null],[12,"cid2","","0xff8 - CoreSight",776,null],[12,"cid3","","0xffc - CoreSight",776,null],[0,"position","","MTB Position",null,null],[3,"WRAP_W","atsamd21g::mtb::position","Write proxy for field `WRAP`",null,null],[3,"POINTER_W","","Write proxy for field `POINTER`",null,null],[6,"R","","Reader of register POSITION",null,null],[6,"W","","Writer for register POSITION",null,null],[6,"WRAP_R","","Reader of field `WRAP`",null,null],[6,"POINTER_R","","Reader of field `POINTER`",null,null],[11,"set_bit","","Sets the field bit",777,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",777,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",777,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",778,[[],["w",6]]],[11,"wrap","atsamd21g::generic","Bit 2 - Pointer Value Wraps",6,[[],["wrap_r",6]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",6,[[],["pointer_r",6]]],[11,"wrap","atsamd21g::mtb::position","Bit 2 - Pointer Value Wraps",779,[[],["wrap_r",6]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",779,[[],["pointer_r",6]]],[11,"wrap","atsamd21g::generic","Bit 2 - Pointer Value Wraps",7,[[],["wrap_w",3]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",7,[[],["pointer_w",3]]],[11,"wrap","atsamd21g::mtb::position","Bit 2 - Pointer Value Wraps",780,[[],["wrap_w",3]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",780,[[],["pointer_w",3]]],[0,"master","atsamd21g::mtb","MTB Master",null,null],[3,"MASK_W","atsamd21g::mtb::master","Write proxy for field `MASK`",null,null],[3,"TSTARTEN_W","","Write proxy for field `TSTARTEN`",null,null],[3,"TSTOPEN_W","","Write proxy for field `TSTOPEN`",null,null],[3,"SFRWPRIV_W","","Write proxy for field `SFRWPRIV`",null,null],[3,"RAMPRIV_W","","Write proxy for field `RAMPRIV`",null,null],[3,"HALTREQ_W","","Write proxy for field `HALTREQ`",null,null],[3,"EN_W","","Write proxy for field `EN`",null,null],[6,"R","","Reader of register MASTER",null,null],[6,"W","","Writer for register MASTER",null,null],[6,"MASK_R","","Reader of field `MASK`",null,null],[6,"TSTARTEN_R","","Reader of field `TSTARTEN`",null,null],[6,"TSTOPEN_R","","Reader of field `TSTOPEN`",null,null],[6,"SFRWPRIV_R","","Reader of field `SFRWPRIV`",null,null],[6,"RAMPRIV_R","","Reader of field `RAMPRIV`",null,null],[6,"HALTREQ_R","","Reader of field `HALTREQ`",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[11,"bits","","Writes raw bits to the field",781,[[],["w",6]]],[11,"set_bit","","Sets the field bit",782,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",782,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",782,[[],["w",6]]],[11,"set_bit","","Sets the field bit",783,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",783,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",783,[[],["w",6]]],[11,"set_bit","","Sets the field bit",784,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",784,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",784,[[],["w",6]]],[11,"set_bit","","Sets the field bit",785,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",785,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",785,[[],["w",6]]],[11,"set_bit","","Sets the field bit",786,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",786,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",786,[[],["w",6]]],[11,"set_bit","","Sets the field bit",787,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",787,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",787,[[],["w",6]]],[11,"mask","atsamd21g::generic","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",6,[[],["mask_r",6]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",6,[[],["tstarten_r",6]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",6,[[],["tstopen_r",6]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",6,[[],["sfrwpriv_r",6]]],[11,"rampriv","","Bit 8 - SRAM Privilege",6,[[],["rampriv_r",6]]],[11,"haltreq","","Bit 9 - Halt Request",6,[[],["haltreq_r",6]]],[11,"en","","Bit 31 - Main Trace Enable",6,[[],["en_r",6]]],[11,"mask","atsamd21g::mtb::master","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",788,[[],["mask_r",6]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",788,[[],["tstarten_r",6]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",788,[[],["tstopen_r",6]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",788,[[],["sfrwpriv_r",6]]],[11,"rampriv","","Bit 8 - SRAM Privilege",788,[[],["rampriv_r",6]]],[11,"haltreq","","Bit 9 - Halt Request",788,[[],["haltreq_r",6]]],[11,"en","","Bit 31 - Main Trace Enable",788,[[],["en_r",6]]],[11,"mask","atsamd21g::generic","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",7,[[],["mask_w",3]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",7,[[],["tstarten_w",3]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",7,[[],["tstopen_w",3]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",7,[[],["sfrwpriv_w",3]]],[11,"rampriv","","Bit 8 - SRAM Privilege",7,[[],["rampriv_w",3]]],[11,"haltreq","","Bit 9 - Halt Request",7,[[],["haltreq_w",3]]],[11,"en","","Bit 31 - Main Trace Enable",7,[[],["en_w",3]]],[11,"mask","atsamd21g::mtb::master","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",789,[[],["mask_w",3]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",789,[[],["tstarten_w",3]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",789,[[],["tstopen_w",3]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",789,[[],["sfrwpriv_w",3]]],[11,"rampriv","","Bit 8 - SRAM Privilege",789,[[],["rampriv_w",3]]],[11,"haltreq","","Bit 9 - Halt Request",789,[[],["haltreq_w",3]]],[11,"en","","Bit 31 - Main Trace Enable",789,[[],["en_w",3]]],[0,"flow","atsamd21g::mtb","MTB Flow",null,null],[3,"AUTOSTOP_W","atsamd21g::mtb::flow","Write proxy for field `AUTOSTOP`",null,null],[3,"AUTOHALT_W","","Write proxy for field `AUTOHALT`",null,null],[3,"WATERMARK_W","","Write proxy for field `WATERMARK`",null,null],[6,"R","","Reader of register FLOW",null,null],[6,"W","","Writer for register FLOW",null,null],[6,"AUTOSTOP_R","","Reader of field `AUTOSTOP`",null,null],[6,"AUTOHALT_R","","Reader of field `AUTOHALT`",null,null],[6,"WATERMARK_R","","Reader of field `WATERMARK`",null,null],[11,"set_bit","","Sets the field bit",790,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",790,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",790,[[],["w",6]]],[11,"set_bit","","Sets the field bit",791,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",791,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",791,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",792,[[],["w",6]]],[11,"autostop","atsamd21g::generic","Bit 0 - Auto Stop Tracing",6,[[],["autostop_r",6]]],[11,"autohalt","","Bit 1 - Auto Halt Request",6,[[],["autohalt_r",6]]],[11,"watermark","","Bits 3:31 - Watermark value",6,[[],["watermark_r",6]]],[11,"autostop","atsamd21g::mtb::flow","Bit 0 - Auto Stop Tracing",793,[[],["autostop_r",6]]],[11,"autohalt","","Bit 1 - Auto Halt Request",793,[[],["autohalt_r",6]]],[11,"watermark","","Bits 3:31 - Watermark value",793,[[],["watermark_r",6]]],[11,"autostop","atsamd21g::generic","Bit 0 - Auto Stop Tracing",7,[[],["autostop_w",3]]],[11,"autohalt","","Bit 1 - Auto Halt Request",7,[[],["autohalt_w",3]]],[11,"watermark","","Bits 3:31 - Watermark value",7,[[],["watermark_w",3]]],[11,"autostop","atsamd21g::mtb::flow","Bit 0 - Auto Stop Tracing",794,[[],["autostop_w",3]]],[11,"autohalt","","Bit 1 - Auto Halt Request",794,[[],["autohalt_w",3]]],[11,"watermark","","Bits 3:31 - Watermark value",794,[[],["watermark_w",3]]],[0,"base","atsamd21g::mtb","MTB Base",null,null],[6,"R","atsamd21g::mtb::base","Reader of register BASE",null,null],[0,"itctrl","atsamd21g::mtb","MTB Integration Mode Control",null,null],[6,"R","atsamd21g::mtb::itctrl","Reader of register ITCTRL",null,null],[6,"W","","Writer for register ITCTRL",null,null],[0,"claimset","atsamd21g::mtb","MTB Claim Set",null,null],[6,"R","atsamd21g::mtb::claimset","Reader of register CLAIMSET",null,null],[6,"W","","Writer for register CLAIMSET",null,null],[0,"claimclr","atsamd21g::mtb","MTB Claim Clear",null,null],[6,"R","atsamd21g::mtb::claimclr","Reader of register CLAIMCLR",null,null],[6,"W","","Writer for register CLAIMCLR",null,null],[0,"lockaccess","atsamd21g::mtb","MTB Lock Access",null,null],[6,"R","atsamd21g::mtb::lockaccess","Reader of register LOCKACCESS",null,null],[6,"W","","Writer for register LOCKACCESS",null,null],[0,"lockstatus","atsamd21g::mtb","MTB Lock Status",null,null],[6,"R","atsamd21g::mtb::lockstatus","Reader of register LOCKSTATUS",null,null],[0,"authstatus","atsamd21g::mtb","MTB Authentication Status",null,null],[6,"R","atsamd21g::mtb::authstatus","Reader of register AUTHSTATUS",null,null],[0,"devarch","atsamd21g::mtb","MTB Device Architecture",null,null],[6,"R","atsamd21g::mtb::devarch","Reader of register DEVARCH",null,null],[0,"devid","atsamd21g::mtb","MTB Device Configuration",null,null],[6,"R","atsamd21g::mtb::devid","Reader of register DEVID",null,null],[0,"devtype","atsamd21g::mtb","MTB Device Type",null,null],[6,"R","atsamd21g::mtb::devtype","Reader of register DEVTYPE",null,null],[0,"pid4","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid4","Reader of register PID4",null,null],[0,"pid5","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid5","Reader of register PID5",null,null],[0,"pid6","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid6","Reader of register PID6",null,null],[0,"pid7","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid7","Reader of register PID7",null,null],[0,"pid0","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid0","Reader of register PID0",null,null],[0,"pid1","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid1","Reader of register PID1",null,null],[0,"pid2","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid2","Reader of register PID2",null,null],[0,"pid3","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::pid3","Reader of register PID3",null,null],[0,"cid0","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::cid0","Reader of register CID0",null,null],[0,"cid1","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::cid1","Reader of register CID1",null,null],[0,"cid2","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::cid2","Reader of register CID2",null,null],[0,"cid3","atsamd21g::mtb","CoreSight",null,null],[6,"R","atsamd21g::mtb::cid3","Reader of register CID3",null,null],[6,"POSITION","atsamd21g::mtb","MTB Position",null,null],[6,"MASTER","","MTB Master",null,null],[6,"FLOW","","MTB Flow",null,null],[6,"BASE","","MTB Base",null,null],[6,"ITCTRL","","MTB Integration Mode Control",null,null],[6,"CLAIMSET","","MTB Claim Set",null,null],[6,"CLAIMCLR","","MTB Claim Clear",null,null],[6,"LOCKACCESS","","MTB Lock Access",null,null],[6,"LOCKSTATUS","","MTB Lock Status",null,null],[6,"AUTHSTATUS","","MTB Authentication Status",null,null],[6,"DEVARCH","","MTB Device Architecture",null,null],[6,"DEVID","","MTB Device Configuration",null,null],[6,"DEVTYPE","","MTB Device Type",null,null],[6,"PID4","","CoreSight",null,null],[6,"PID5","","CoreSight",null,null],[6,"PID6","","CoreSight",null,null],[6,"PID7","","CoreSight",null,null],[6,"PID0","","CoreSight",null,null],[6,"PID1","","CoreSight",null,null],[6,"PID2","","CoreSight",null,null],[6,"PID3","","CoreSight",null,null],[6,"CID0","","CoreSight",null,null],[6,"CID1","","CoreSight",null,null],[6,"CID2","","CoreSight",null,null],[6,"CID3","","CoreSight",null,null],[0,"nvmctrl","atsamd21g","Non-Volatile Memory Controller",null,null],[3,"RegisterBlock","atsamd21g::nvmctrl","Register block",null,null],[12,"ctrla","","0x00 - Control A",795,null],[12,"ctrlb","","0x04 - Control B",795,null],[12,"param","","0x08 - NVM Parameter",795,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",795,null],[12,"intenset","","0x10 - Interrupt Enable Set",795,null],[12,"intflag","","0x14 - Interrupt Flag Status and Clear",795,null],[12,"status","","0x18 - Status",795,null],[12,"addr","","0x1c - Address",795,null],[12,"lock","","0x20 - Lock Section",795,null],[0,"ctrla","","Control A",null,null],[3,"CMD_W","atsamd21g::nvmctrl::ctrla","Write proxy for field `CMD`",null,null],[3,"CMDEX_W","","Write proxy for field `CMDEX`",null,null],[4,"CMD_A","","Command",null,null],[13,"ER","","2: Erase Row - Erases the row addressed by the ADDR…",796,null],[13,"WP","","4: Write Page - Writes the contents of the page buffer to…",796,null],[13,"EAR","","5: Erase Auxiliary Row - Erases the auxiliary row…",796,null],[13,"WAP","","6: Write Auxiliary Page - Writes the contents of the page…",796,null],[13,"SF","","10: Security Flow Command",796,null],[13,"WL","","15: Write lockbits",796,null],[13,"LR","","64: Lock Region - Locks the region containing the address…",796,null],[13,"UR","","65: Unlock Region - Unlocks the region containing the…",796,null],[13,"SPRM","","66: Sets the power reduction mode.",796,null],[13,"CPRM","","67: Clears the power reduction mode.",796,null],[13,"PBC","","68: Page Buffer Clear - Clears the page buffer.",796,null],[13,"SSB","","69: Set Security Bit - Sets the security bit by writing…",796,null],[13,"INVALL","","70: Invalidates all cache lines.",796,null],[4,"CMDEX_A","","Command Execution",null,null],[13,"KEY","","165: Execution Key",797,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[6,"CMDEX_R","","Reader of field `CMDEX`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_er","","Checks if the value of the field is `ER`",6,[[]]],[11,"is_wp","","Checks if the value of the field is `WP`",6,[[]]],[11,"is_ear","","Checks if the value of the field is `EAR`",6,[[]]],[11,"is_wap","","Checks if the value of the field is `WAP`",6,[[]]],[11,"is_sf","","Checks if the value of the field is `SF`",6,[[]]],[11,"is_wl","","Checks if the value of the field is `WL`",6,[[]]],[11,"is_lr","","Checks if the value of the field is `LR`",6,[[]]],[11,"is_ur","","Checks if the value of the field is `UR`",6,[[]]],[11,"is_sprm","","Checks if the value of the field is `SPRM`",6,[[]]],[11,"is_cprm","","Checks if the value of the field is `CPRM`",6,[[]]],[11,"is_pbc","","Checks if the value of the field is `PBC`",6,[[]]],[11,"is_ssb","","Checks if the value of the field is `SSB`",6,[[]]],[11,"is_invall","","Checks if the value of the field is `INVALL`",6,[[]]],[11,"variant","atsamd21g::nvmctrl::ctrla","Get enumerated values variant",798,[[],[["cmd_a",4],["variant",4]]]],[11,"is_er","","Checks if the value of the field is `ER`",798,[[]]],[11,"is_wp","","Checks if the value of the field is `WP`",798,[[]]],[11,"is_ear","","Checks if the value of the field is `EAR`",798,[[]]],[11,"is_wap","","Checks if the value of the field is `WAP`",798,[[]]],[11,"is_sf","","Checks if the value of the field is `SF`",798,[[]]],[11,"is_wl","","Checks if the value of the field is `WL`",798,[[]]],[11,"is_lr","","Checks if the value of the field is `LR`",798,[[]]],[11,"is_ur","","Checks if the value of the field is `UR`",798,[[]]],[11,"is_sprm","","Checks if the value of the field is `SPRM`",798,[[]]],[11,"is_cprm","","Checks if the value of the field is `CPRM`",798,[[]]],[11,"is_pbc","","Checks if the value of the field is `PBC`",798,[[]]],[11,"is_ssb","","Checks if the value of the field is `SSB`",798,[[]]],[11,"is_invall","","Checks if the value of the field is `INVALL`",798,[[]]],[11,"variant","","Writes `variant` to the field",799,[[["cmd_a",4]],["w",6]]],[11,"er","","Erase Row - Erases the row addressed by the ADDR register.",799,[[],["w",6]]],[11,"wp","","Write Page - Writes the contents of the page buffer to the…",799,[[],["w",6]]],[11,"ear","","Erase Auxiliary Row - Erases the auxiliary row addressed…",799,[[],["w",6]]],[11,"wap","","Write Auxiliary Page - Writes the contents of the page…",799,[[],["w",6]]],[11,"sf","","Security Flow Command",799,[[],["w",6]]],[11,"wl","","Write lockbits",799,[[],["w",6]]],[11,"lr","","Lock Region - Locks the region containing the address…",799,[[],["w",6]]],[11,"ur","","Unlock Region - Unlocks the region containing the address…",799,[[],["w",6]]],[11,"sprm","","Sets the power reduction mode.",799,[[],["w",6]]],[11,"cprm","","Clears the power reduction mode.",799,[[],["w",6]]],[11,"pbc","","Page Buffer Clear - Clears the page buffer.",799,[[],["w",6]]],[11,"ssb","","Set Security Bit - Sets the security bit by writing 0x00…",799,[[],["w",6]]],[11,"invall","","Invalidates all cache lines.",799,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",799,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["cmdex_a",4],["variant",4]]]],[11,"is_key","","Checks if the value of the field is `KEY`",6,[[]]],[11,"variant","atsamd21g::nvmctrl::ctrla","Get enumerated values variant",800,[[],[["cmdex_a",4],["variant",4]]]],[11,"is_key","","Checks if the value of the field is `KEY`",800,[[]]],[11,"variant","","Writes `variant` to the field",801,[[["cmdex_a",4]],["w",6]]],[11,"key","","Execution Key",801,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",801,[[],["w",6]]],[11,"cmd","atsamd21g::generic","Bits 0:6 - Command",6,[[],["cmd_r",6]]],[11,"cmdex","","Bits 8:15 - Command Execution",6,[[],["cmdex_r",6]]],[11,"cmd","atsamd21g::nvmctrl::ctrla","Bits 0:6 - Command",802,[[],["cmd_r",6]]],[11,"cmdex","","Bits 8:15 - Command Execution",802,[[],["cmdex_r",6]]],[11,"cmd","atsamd21g::generic","Bits 0:6 - Command",7,[[],["cmd_w",3]]],[11,"cmdex","","Bits 8:15 - Command Execution",7,[[],["cmdex_w",3]]],[11,"cmd","atsamd21g::nvmctrl::ctrla","Bits 0:6 - Command",803,[[],["cmd_w",3]]],[11,"cmdex","","Bits 8:15 - Command Execution",803,[[],["cmdex_w",3]]],[0,"ctrlb","atsamd21g::nvmctrl","Control B",null,null],[3,"RWS_W","atsamd21g::nvmctrl::ctrlb","Write proxy for field `RWS`",null,null],[3,"MANW_W","","Write proxy for field `MANW`",null,null],[3,"SLEEPPRM_W","","Write proxy for field `SLEEPPRM`",null,null],[3,"READMODE_W","","Write proxy for field `READMODE`",null,null],[3,"CACHEDIS_W","","Write proxy for field `CACHEDIS`",null,null],[4,"RWS_A","","NVM Read Wait States",null,null],[13,"SINGLE","","0: Single Auto Wait State",804,null],[13,"HALF","","1: Half Auto Wait State",804,null],[13,"DUAL","","2: Dual Auto Wait State",804,null],[4,"SLEEPPRM_A","","Power Reduction Mode during Sleep",null,null],[13,"WAKEONACCESS","","0: NVM block enters low-power mode when entering sleep.NVM…",805,null],[13,"WAKEUPINSTANT","","1: NVM block enters low-power mode when entering sleep.NVM…",805,null],[13,"DISABLED","","3: Auto power reduction disabled.",805,null],[4,"READMODE_A","","NVMCTRL Read Mode",null,null],[13,"NO_MISS_PENALTY","","0: The NVM Controller (cache system) does not insert wait…",806,null],[13,"LOW_POWER","","1: Reduces power consumption of the cache system, but…",806,null],[13,"DETERMINISTIC","","2: The cache system ensures that a cache hit or miss takes…",806,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"RWS_R","","Reader of field `RWS`",null,null],[6,"MANW_R","","Reader of field `MANW`",null,null],[6,"SLEEPPRM_R","","Reader of field `SLEEPPRM`",null,null],[6,"READMODE_R","","Reader of field `READMODE`",null,null],[6,"CACHEDIS_R","","Reader of field `CACHEDIS`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["rws_a",4],["variant",4]]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_half","","Checks if the value of the field is `HALF`",6,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",6,[[]]],[11,"variant","atsamd21g::nvmctrl::ctrlb","Get enumerated values variant",807,[[],[["rws_a",4],["variant",4]]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",807,[[]]],[11,"is_half","","Checks if the value of the field is `HALF`",807,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",807,[[]]],[11,"variant","","Writes `variant` to the field",808,[[["rws_a",4]],["w",6]]],[11,"single","","Single Auto Wait State",808,[[],["w",6]]],[11,"half","","Half Auto Wait State",808,[[],["w",6]]],[11,"dual","","Dual Auto Wait State",808,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",808,[[],["w",6]]],[11,"set_bit","","Sets the field bit",809,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",809,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",809,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["sleepprm_a",4]]]],[11,"is_wakeonaccess","","Checks if the value of the field is `WAKEONACCESS`",6,[[]]],[11,"is_wakeupinstant","","Checks if the value of the field is `WAKEUPINSTANT`",6,[[]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",6,[[]]],[11,"variant","atsamd21g::nvmctrl::ctrlb","Get enumerated values variant",810,[[],[["variant",4],["sleepprm_a",4]]]],[11,"is_wakeonaccess","","Checks if the value of the field is `WAKEONACCESS`",810,[[]]],[11,"is_wakeupinstant","","Checks if the value of the field is `WAKEUPINSTANT`",810,[[]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",810,[[]]],[11,"variant","","Writes `variant` to the field",811,[[["sleepprm_a",4]],["w",6]]],[11,"wakeonaccess","","NVM block enters low-power mode when entering sleep.NVM…",811,[[],["w",6]]],[11,"wakeupinstant","","NVM block enters low-power mode when entering sleep.NVM…",811,[[],["w",6]]],[11,"disabled","","Auto power reduction disabled.",811,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",811,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["readmode_a",4]]]],[11,"is_no_miss_penalty","","Checks if the value of the field is `NO_MISS_PENALTY`",6,[[]]],[11,"is_low_power","","Checks if the value of the field is `LOW_POWER`",6,[[]]],[11,"is_deterministic","","Checks if the value of the field is `DETERMINISTIC`",6,[[]]],[11,"variant","atsamd21g::nvmctrl::ctrlb","Get enumerated values variant",812,[[],[["variant",4],["readmode_a",4]]]],[11,"is_no_miss_penalty","","Checks if the value of the field is `NO_MISS_PENALTY`",812,[[]]],[11,"is_low_power","","Checks if the value of the field is `LOW_POWER`",812,[[]]],[11,"is_deterministic","","Checks if the value of the field is `DETERMINISTIC`",812,[[]]],[11,"variant","","Writes `variant` to the field",813,[[["readmode_a",4]],["w",6]]],[11,"no_miss_penalty","","The NVM Controller (cache system) does not insert wait…",813,[[],["w",6]]],[11,"low_power","","Reduces power consumption of the cache system, but inserts…",813,[[],["w",6]]],[11,"deterministic","","The cache system ensures that a cache hit or miss takes…",813,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",813,[[],["w",6]]],[11,"set_bit","","Sets the field bit",814,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",814,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",814,[[],["w",6]]],[11,"rws","atsamd21g::generic","Bits 1:4 - NVM Read Wait States",6,[[],["rws_r",6]]],[11,"manw","","Bit 7 - Manual Write",6,[[],["manw_r",6]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",6,[[],["sleepprm_r",6]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",6,[[],["readmode_r",6]]],[11,"cachedis","","Bit 18 - Cache Disable",6,[[],["cachedis_r",6]]],[11,"rws","atsamd21g::nvmctrl::ctrlb","Bits 1:4 - NVM Read Wait States",815,[[],["rws_r",6]]],[11,"manw","","Bit 7 - Manual Write",815,[[],["manw_r",6]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",815,[[],["sleepprm_r",6]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",815,[[],["readmode_r",6]]],[11,"cachedis","","Bit 18 - Cache Disable",815,[[],["cachedis_r",6]]],[11,"rws","atsamd21g::generic","Bits 1:4 - NVM Read Wait States",7,[[],["rws_w",3]]],[11,"manw","","Bit 7 - Manual Write",7,[[],["manw_w",3]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",7,[[],["sleepprm_w",3]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",7,[[],["readmode_w",3]]],[11,"cachedis","","Bit 18 - Cache Disable",7,[[],["cachedis_w",3]]],[11,"rws","atsamd21g::nvmctrl::ctrlb","Bits 1:4 - NVM Read Wait States",816,[[],["rws_w",3]]],[11,"manw","","Bit 7 - Manual Write",816,[[],["manw_w",3]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",816,[[],["sleepprm_w",3]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",816,[[],["readmode_w",3]]],[11,"cachedis","","Bit 18 - Cache Disable",816,[[],["cachedis_w",3]]],[0,"param","atsamd21g::nvmctrl","NVM Parameter",null,null],[4,"PSZ_A","atsamd21g::nvmctrl::param","Page Size",null,null],[13,"_8","","0: 8 bytes",817,null],[13,"_16","","1: 16 bytes",817,null],[13,"_32","","2: 32 bytes",817,null],[13,"_64","","3: 64 bytes",817,null],[13,"_128","","4: 128 bytes",817,null],[13,"_256","","5: 256 bytes",817,null],[13,"_512","","6: 512 bytes",817,null],[13,"_1024","","7: 1024 bytes",817,null],[6,"R","","Reader of register PARAM",null,null],[6,"NVMP_R","","Reader of field `NVMP`",null,null],[6,"PSZ_R","","Reader of field `PSZ`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["psz_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"variant","atsamd21g::nvmctrl::param","Get enumerated values variant",818,[[],["psz_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",818,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",818,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",818,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",818,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",818,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",818,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",818,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",818,[[]]],[11,"nvmp","atsamd21g::generic","Bits 0:15 - NVM Pages",6,[[],["nvmp_r",6]]],[11,"psz","","Bits 16:18 - Page Size",6,[[],["psz_r",6]]],[11,"nvmp","atsamd21g::nvmctrl::param","Bits 0:15 - NVM Pages",819,[[],["nvmp_r",6]]],[11,"psz","","Bits 16:18 - Page Size",819,[[],["psz_r",6]]],[0,"intenclr","atsamd21g::nvmctrl","Interrupt Enable Clear",null,null],[3,"READY_W","atsamd21g::nvmctrl::intenclr","Write proxy for field `READY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",820,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",820,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",820,[[],["w",6]]],[11,"set_bit","","Sets the field bit",821,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",821,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",821,[[],["w",6]]],[11,"ready","atsamd21g::generic","Bit 0 - NVM Ready Interrupt Enable",6,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",6,[[],["error_r",6]]],[11,"ready","atsamd21g::nvmctrl::intenclr","Bit 0 - NVM Ready Interrupt Enable",822,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",822,[[],["error_r",6]]],[11,"ready","atsamd21g::generic","Bit 0 - NVM Ready Interrupt Enable",7,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",7,[[],["error_w",3]]],[11,"ready","atsamd21g::nvmctrl::intenclr","Bit 0 - NVM Ready Interrupt Enable",823,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",823,[[],["error_w",3]]],[0,"intenset","atsamd21g::nvmctrl","Interrupt Enable Set",null,null],[3,"READY_W","atsamd21g::nvmctrl::intenset","Write proxy for field `READY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",824,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",824,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",824,[[],["w",6]]],[11,"set_bit","","Sets the field bit",825,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",825,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",825,[[],["w",6]]],[11,"ready","atsamd21g::generic","Bit 0 - NVM Ready Interrupt Enable",6,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",6,[[],["error_r",6]]],[11,"ready","atsamd21g::nvmctrl::intenset","Bit 0 - NVM Ready Interrupt Enable",826,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",826,[[],["error_r",6]]],[11,"ready","atsamd21g::generic","Bit 0 - NVM Ready Interrupt Enable",7,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",7,[[],["error_w",3]]],[11,"ready","atsamd21g::nvmctrl::intenset","Bit 0 - NVM Ready Interrupt Enable",827,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",827,[[],["error_w",3]]],[0,"intflag","atsamd21g::nvmctrl","Interrupt Flag Status and Clear",null,null],[3,"ERROR_W","atsamd21g::nvmctrl::intflag","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",828,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",828,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",828,[[],["w",6]]],[11,"ready","atsamd21g::generic","Bit 0 - NVM Ready",6,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error",6,[[],["error_r",6]]],[11,"ready","atsamd21g::nvmctrl::intflag","Bit 0 - NVM Ready",829,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error",829,[[],["error_r",6]]],[11,"error","atsamd21g::generic","Bit 1 - Error",7,[[],["error_w",3]]],[11,"error","atsamd21g::nvmctrl::intflag","Bit 1 - Error",830,[[],["error_w",3]]],[0,"status","atsamd21g::nvmctrl","Status",null,null],[3,"LOAD_W","atsamd21g::nvmctrl::status","Write proxy for field `LOAD`",null,null],[3,"PROGE_W","","Write proxy for field `PROGE`",null,null],[3,"LOCKE_W","","Write proxy for field `LOCKE`",null,null],[3,"NVME_W","","Write proxy for field `NVME`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"PRM_R","","Reader of field `PRM`",null,null],[6,"LOAD_R","","Reader of field `LOAD`",null,null],[6,"PROGE_R","","Reader of field `PROGE`",null,null],[6,"LOCKE_R","","Reader of field `LOCKE`",null,null],[6,"NVME_R","","Reader of field `NVME`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[11,"set_bit","","Sets the field bit",831,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",831,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",831,[[],["w",6]]],[11,"set_bit","","Sets the field bit",832,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",832,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",832,[[],["w",6]]],[11,"set_bit","","Sets the field bit",833,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",833,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",833,[[],["w",6]]],[11,"set_bit","","Sets the field bit",834,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",834,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",834,[[],["w",6]]],[11,"prm","atsamd21g::generic","Bit 0 - Power Reduction Mode",6,[[],["prm_r",6]]],[11,"load","","Bit 1 - NVM Page Buffer Active Loading",6,[[],["load_r",6]]],[11,"proge","","Bit 2 - Programming Error Status",6,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Status",6,[[],["locke_r",6]]],[11,"nvme","","Bit 4 - NVM Error",6,[[],["nvme_r",6]]],[11,"sb","","Bit 8 - Security Bit Status",6,[[],["sb_r",6]]],[11,"prm","atsamd21g::nvmctrl::status","Bit 0 - Power Reduction Mode",835,[[],["prm_r",6]]],[11,"load","","Bit 1 - NVM Page Buffer Active Loading",835,[[],["load_r",6]]],[11,"proge","","Bit 2 - Programming Error Status",835,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Status",835,[[],["locke_r",6]]],[11,"nvme","","Bit 4 - NVM Error",835,[[],["nvme_r",6]]],[11,"sb","","Bit 8 - Security Bit Status",835,[[],["sb_r",6]]],[11,"load","atsamd21g::generic","Bit 1 - NVM Page Buffer Active Loading",7,[[],["load_w",3]]],[11,"proge","","Bit 2 - Programming Error Status",7,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Status",7,[[],["locke_w",3]]],[11,"nvme","","Bit 4 - NVM Error",7,[[],["nvme_w",3]]],[11,"load","atsamd21g::nvmctrl::status","Bit 1 - NVM Page Buffer Active Loading",836,[[],["load_w",3]]],[11,"proge","","Bit 2 - Programming Error Status",836,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Status",836,[[],["locke_w",3]]],[11,"nvme","","Bit 4 - NVM Error",836,[[],["nvme_w",3]]],[0,"addr","atsamd21g::nvmctrl","Address",null,null],[3,"ADDR_W","atsamd21g::nvmctrl::addr","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",837,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:21 - NVM Address",6,[[],["addr_r",6]]],[11,"addr","atsamd21g::nvmctrl::addr","Bits 0:21 - NVM Address",838,[[],["addr_r",6]]],[11,"addr","atsamd21g::generic","Bits 0:21 - NVM Address",7,[[],["addr_w",3]]],[11,"addr","atsamd21g::nvmctrl::addr","Bits 0:21 - NVM Address",839,[[],["addr_w",3]]],[0,"lock","atsamd21g::nvmctrl","Lock Section",null,null],[6,"R","atsamd21g::nvmctrl::lock","Reader of register LOCK",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[11,"lock","atsamd21g::generic","Bits 0:15 - Region Lock Bits",6,[[],["lock_r",6]]],[11,"lock","atsamd21g::nvmctrl::lock","Bits 0:15 - Region Lock Bits",840,[[],["lock_r",6]]],[6,"CTRLA","atsamd21g::nvmctrl","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"PARAM","","NVM Parameter",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"ADDR","","Address",null,null],[6,"LOCK","","Lock Section",null,null],[0,"pac0","atsamd21g","Peripheral Access Controller 0",null,null],[3,"RegisterBlock","atsamd21g::pac0","Register block",null,null],[12,"wpclr","","0x00 - Write Protection Clear",841,null],[12,"wpset","","0x04 - Write Protection Set",841,null],[0,"wpclr","","Write Protection Clear",null,null],[3,"WP_W","atsamd21g::pac0::wpclr","Write proxy for field `WP`",null,null],[6,"R","","Reader of register WPCLR",null,null],[6,"W","","Writer for register WPCLR",null,null],[6,"WP_R","","Reader of field `WP`",null,null],[11,"bits","","Writes raw bits to the field",842,[[],["w",6]]],[11,"wp","atsamd21g::generic","Bits 1:31 - Write Protection Clear",6,[[],["wp_r",6]]],[11,"wp","atsamd21g::pac0::wpclr","Bits 1:31 - Write Protection Clear",843,[[],["wp_r",6]]],[11,"wp","atsamd21g::generic","Bits 1:31 - Write Protection Clear",7,[[],["wp_w",3]]],[11,"wp","atsamd21g::pac0::wpclr","Bits 1:31 - Write Protection Clear",844,[[],["wp_w",3]]],[0,"wpset","atsamd21g::pac0","Write Protection Set",null,null],[3,"WP_W","atsamd21g::pac0::wpset","Write proxy for field `WP`",null,null],[6,"R","","Reader of register WPSET",null,null],[6,"W","","Writer for register WPSET",null,null],[6,"WP_R","","Reader of field `WP`",null,null],[11,"bits","","Writes raw bits to the field",845,[[],["w",6]]],[11,"wp","atsamd21g::generic","Bits 1:31 - Write Protection Set",6,[[],["wp_r",6]]],[11,"wp","atsamd21g::pac0::wpset","Bits 1:31 - Write Protection Set",846,[[],["wp_r",6]]],[11,"wp","atsamd21g::generic","Bits 1:31 - Write Protection Set",7,[[],["wp_w",3]]],[11,"wp","atsamd21g::pac0::wpset","Bits 1:31 - Write Protection Set",847,[[],["wp_w",3]]],[6,"WPCLR","atsamd21g::pac0","Write Protection Clear",null,null],[6,"WPSET","","Write Protection Set",null,null],[0,"pm","atsamd21g","Power Manager",null,null],[3,"RegisterBlock","atsamd21g::pm","Register block",null,null],[12,"ctrl","","0x00 - Control",848,null],[12,"sleep","","0x01 - Sleep Mode",848,null],[12,"cpusel","","0x08 - CPU Clock Select",848,null],[12,"apbasel","","0x09 - APBA Clock Select",848,null],[12,"apbbsel","","0x0a - APBB Clock Select",848,null],[12,"apbcsel","","0x0b - APBC Clock Select",848,null],[12,"ahbmask","","0x14 - AHB Mask",848,null],[12,"apbamask","","0x18 - APBA Mask",848,null],[12,"apbbmask","","0x1c - APBB Mask",848,null],[12,"apbcmask","","0x20 - APBC Mask",848,null],[12,"intenclr","","0x34 - Interrupt Enable Clear",848,null],[12,"intenset","","0x35 - Interrupt Enable Set",848,null],[12,"intflag","","0x36 - Interrupt Flag Status and Clear",848,null],[12,"rcause","","0x38 - Reset Cause",848,null],[0,"ctrl","","Control",null,null],[6,"R","atsamd21g::pm::ctrl","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[0,"sleep","atsamd21g::pm","Sleep Mode",null,null],[3,"IDLE_W","atsamd21g::pm::sleep","Write proxy for field `IDLE`",null,null],[4,"IDLE_A","","Idle Mode Configuration",null,null],[13,"CPU","","0: The CPU clock domain is stopped",849,null],[13,"AHB","","1: The CPU and AHB clock domains are stopped",849,null],[13,"APB","","2: The CPU, AHB and APB clock domains are stopped",849,null],[6,"R","","Reader of register SLEEP",null,null],[6,"W","","Writer for register SLEEP",null,null],[6,"IDLE_R","","Reader of field `IDLE`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["idle_a",4]]]],[11,"is_cpu","","Checks if the value of the field is `CPU`",6,[[]]],[11,"is_ahb","","Checks if the value of the field is `AHB`",6,[[]]],[11,"is_apb","","Checks if the value of the field is `APB`",6,[[]]],[11,"variant","atsamd21g::pm::sleep","Get enumerated values variant",850,[[],[["variant",4],["idle_a",4]]]],[11,"is_cpu","","Checks if the value of the field is `CPU`",850,[[]]],[11,"is_ahb","","Checks if the value of the field is `AHB`",850,[[]]],[11,"is_apb","","Checks if the value of the field is `APB`",850,[[]]],[11,"variant","","Writes `variant` to the field",851,[[["idle_a",4]],["w",6]]],[11,"cpu","","The CPU clock domain is stopped",851,[[],["w",6]]],[11,"ahb","","The CPU and AHB clock domains are stopped",851,[[],["w",6]]],[11,"apb","","The CPU, AHB and APB clock domains are stopped",851,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",851,[[],["w",6]]],[11,"idle","atsamd21g::generic","Bits 0:1 - Idle Mode Configuration",6,[[],["idle_r",6]]],[11,"idle","atsamd21g::pm::sleep","Bits 0:1 - Idle Mode Configuration",852,[[],["idle_r",6]]],[11,"idle","atsamd21g::generic","Bits 0:1 - Idle Mode Configuration",7,[[],["idle_w",3]]],[11,"idle","atsamd21g::pm::sleep","Bits 0:1 - Idle Mode Configuration",853,[[],["idle_w",3]]],[0,"cpusel","atsamd21g::pm","CPU Clock Select",null,null],[3,"CPUDIV_W","atsamd21g::pm::cpusel","Write proxy for field `CPUDIV`",null,null],[4,"CPUDIV_A","","CPU Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",854,null],[13,"DIV2","","1: Divide by 2",854,null],[13,"DIV4","","2: Divide by 4",854,null],[13,"DIV8","","3: Divide by 8",854,null],[13,"DIV16","","4: Divide by 16",854,null],[13,"DIV32","","5: Divide by 32",854,null],[13,"DIV64","","6: Divide by 64",854,null],[13,"DIV128","","7: Divide by 128",854,null],[6,"R","","Reader of register CPUSEL",null,null],[6,"W","","Writer for register CPUSEL",null,null],[6,"CPUDIV_R","","Reader of field `CPUDIV`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["cpudiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd21g::pm::cpusel","Get enumerated values variant",855,[[],["cpudiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",855,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",855,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",855,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",855,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",855,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",855,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",855,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",855,[[]]],[11,"variant","","Writes `variant` to the field",856,[[["cpudiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",856,[[],["w",6]]],[11,"div2","","Divide by 2",856,[[],["w",6]]],[11,"div4","","Divide by 4",856,[[],["w",6]]],[11,"div8","","Divide by 8",856,[[],["w",6]]],[11,"div16","","Divide by 16",856,[[],["w",6]]],[11,"div32","","Divide by 32",856,[[],["w",6]]],[11,"div64","","Divide by 64",856,[[],["w",6]]],[11,"div128","","Divide by 128",856,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",856,[[],["w",6]]],[11,"cpudiv","atsamd21g::generic","Bits 0:2 - CPU Prescaler Selection",6,[[],["cpudiv_r",6]]],[11,"cpudiv","atsamd21g::pm::cpusel","Bits 0:2 - CPU Prescaler Selection",857,[[],["cpudiv_r",6]]],[11,"cpudiv","atsamd21g::generic","Bits 0:2 - CPU Prescaler Selection",7,[[],["cpudiv_w",3]]],[11,"cpudiv","atsamd21g::pm::cpusel","Bits 0:2 - CPU Prescaler Selection",858,[[],["cpudiv_w",3]]],[0,"apbasel","atsamd21g::pm","APBA Clock Select",null,null],[3,"APBADIV_W","atsamd21g::pm::apbasel","Write proxy for field `APBADIV`",null,null],[4,"APBADIV_A","","APBA Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",859,null],[13,"DIV2","","1: Divide by 2",859,null],[13,"DIV4","","2: Divide by 4",859,null],[13,"DIV8","","3: Divide by 8",859,null],[13,"DIV16","","4: Divide by 16",859,null],[13,"DIV32","","5: Divide by 32",859,null],[13,"DIV64","","6: Divide by 64",859,null],[13,"DIV128","","7: Divide by 128",859,null],[6,"R","","Reader of register APBASEL",null,null],[6,"W","","Writer for register APBASEL",null,null],[6,"APBADIV_R","","Reader of field `APBADIV`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["apbadiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd21g::pm::apbasel","Get enumerated values variant",860,[[],["apbadiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",860,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",860,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",860,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",860,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",860,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",860,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",860,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",860,[[]]],[11,"variant","","Writes `variant` to the field",861,[[["apbadiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",861,[[],["w",6]]],[11,"div2","","Divide by 2",861,[[],["w",6]]],[11,"div4","","Divide by 4",861,[[],["w",6]]],[11,"div8","","Divide by 8",861,[[],["w",6]]],[11,"div16","","Divide by 16",861,[[],["w",6]]],[11,"div32","","Divide by 32",861,[[],["w",6]]],[11,"div64","","Divide by 64",861,[[],["w",6]]],[11,"div128","","Divide by 128",861,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",861,[[],["w",6]]],[11,"apbadiv","atsamd21g::generic","Bits 0:2 - APBA Prescaler Selection",6,[[],["apbadiv_r",6]]],[11,"apbadiv","atsamd21g::pm::apbasel","Bits 0:2 - APBA Prescaler Selection",862,[[],["apbadiv_r",6]]],[11,"apbadiv","atsamd21g::generic","Bits 0:2 - APBA Prescaler Selection",7,[[],["apbadiv_w",3]]],[11,"apbadiv","atsamd21g::pm::apbasel","Bits 0:2 - APBA Prescaler Selection",863,[[],["apbadiv_w",3]]],[0,"apbbsel","atsamd21g::pm","APBB Clock Select",null,null],[3,"APBBDIV_W","atsamd21g::pm::apbbsel","Write proxy for field `APBBDIV`",null,null],[4,"APBBDIV_A","","APBB Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",864,null],[13,"DIV2","","1: Divide by 2",864,null],[13,"DIV4","","2: Divide by 4",864,null],[13,"DIV8","","3: Divide by 8",864,null],[13,"DIV16","","4: Divide by 16",864,null],[13,"DIV32","","5: Divide by 32",864,null],[13,"DIV64","","6: Divide by 64",864,null],[13,"DIV128","","7: Divide by 128",864,null],[6,"R","","Reader of register APBBSEL",null,null],[6,"W","","Writer for register APBBSEL",null,null],[6,"APBBDIV_R","","Reader of field `APBBDIV`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["apbbdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd21g::pm::apbbsel","Get enumerated values variant",865,[[],["apbbdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",865,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",865,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",865,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",865,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",865,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",865,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",865,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",865,[[]]],[11,"variant","","Writes `variant` to the field",866,[[["apbbdiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",866,[[],["w",6]]],[11,"div2","","Divide by 2",866,[[],["w",6]]],[11,"div4","","Divide by 4",866,[[],["w",6]]],[11,"div8","","Divide by 8",866,[[],["w",6]]],[11,"div16","","Divide by 16",866,[[],["w",6]]],[11,"div32","","Divide by 32",866,[[],["w",6]]],[11,"div64","","Divide by 64",866,[[],["w",6]]],[11,"div128","","Divide by 128",866,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",866,[[],["w",6]]],[11,"apbbdiv","atsamd21g::generic","Bits 0:2 - APBB Prescaler Selection",6,[[],["apbbdiv_r",6]]],[11,"apbbdiv","atsamd21g::pm::apbbsel","Bits 0:2 - APBB Prescaler Selection",867,[[],["apbbdiv_r",6]]],[11,"apbbdiv","atsamd21g::generic","Bits 0:2 - APBB Prescaler Selection",7,[[],["apbbdiv_w",3]]],[11,"apbbdiv","atsamd21g::pm::apbbsel","Bits 0:2 - APBB Prescaler Selection",868,[[],["apbbdiv_w",3]]],[0,"apbcsel","atsamd21g::pm","APBC Clock Select",null,null],[3,"APBCDIV_W","atsamd21g::pm::apbcsel","Write proxy for field `APBCDIV`",null,null],[4,"APBCDIV_A","","APBC Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",869,null],[13,"DIV2","","1: Divide by 2",869,null],[13,"DIV4","","2: Divide by 4",869,null],[13,"DIV8","","3: Divide by 8",869,null],[13,"DIV16","","4: Divide by 16",869,null],[13,"DIV32","","5: Divide by 32",869,null],[13,"DIV64","","6: Divide by 64",869,null],[13,"DIV128","","7: Divide by 128",869,null],[6,"R","","Reader of register APBCSEL",null,null],[6,"W","","Writer for register APBCSEL",null,null],[6,"APBCDIV_R","","Reader of field `APBCDIV`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["apbcdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd21g::pm::apbcsel","Get enumerated values variant",870,[[],["apbcdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",870,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",870,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",870,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",870,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",870,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",870,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",870,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",870,[[]]],[11,"variant","","Writes `variant` to the field",871,[[["apbcdiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",871,[[],["w",6]]],[11,"div2","","Divide by 2",871,[[],["w",6]]],[11,"div4","","Divide by 4",871,[[],["w",6]]],[11,"div8","","Divide by 8",871,[[],["w",6]]],[11,"div16","","Divide by 16",871,[[],["w",6]]],[11,"div32","","Divide by 32",871,[[],["w",6]]],[11,"div64","","Divide by 64",871,[[],["w",6]]],[11,"div128","","Divide by 128",871,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",871,[[],["w",6]]],[11,"apbcdiv","atsamd21g::generic","Bits 0:2 - APBC Prescaler Selection",6,[[],["apbcdiv_r",6]]],[11,"apbcdiv","atsamd21g::pm::apbcsel","Bits 0:2 - APBC Prescaler Selection",872,[[],["apbcdiv_r",6]]],[11,"apbcdiv","atsamd21g::generic","Bits 0:2 - APBC Prescaler Selection",7,[[],["apbcdiv_w",3]]],[11,"apbcdiv","atsamd21g::pm::apbcsel","Bits 0:2 - APBC Prescaler Selection",873,[[],["apbcdiv_w",3]]],[0,"ahbmask","atsamd21g::pm","AHB Mask",null,null],[3,"HPB0__W","atsamd21g::pm::ahbmask","Write proxy for field `HPB0_`",null,null],[3,"HPB1__W","","Write proxy for field `HPB1_`",null,null],[3,"HPB2__W","","Write proxy for field `HPB2_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"DMAC__W","","Write proxy for field `DMAC_`",null,null],[3,"USB__W","","Write proxy for field `USB_`",null,null],[6,"R","","Reader of register AHBMASK",null,null],[6,"W","","Writer for register AHBMASK",null,null],[6,"HPB0__R","","Reader of field `HPB0_`",null,null],[6,"HPB1__R","","Reader of field `HPB1_`",null,null],[6,"HPB2__R","","Reader of field `HPB2_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[11,"set_bit","","Sets the field bit",874,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",874,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",874,[[],["w",6]]],[11,"set_bit","","Sets the field bit",875,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",875,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",875,[[],["w",6]]],[11,"set_bit","","Sets the field bit",876,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",876,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",876,[[],["w",6]]],[11,"set_bit","","Sets the field bit",877,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",877,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",877,[[],["w",6]]],[11,"set_bit","","Sets the field bit",878,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",878,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",878,[[],["w",6]]],[11,"set_bit","","Sets the field bit",879,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",879,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",879,[[],["w",6]]],[11,"set_bit","","Sets the field bit",880,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",880,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",880,[[],["w",6]]],[11,"hpb0_","atsamd21g::generic","Bit 0 - HPB0 AHB Clock Mask",6,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",6,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",6,[[],["hpb2__r",6]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",6,[[],["nvmctrl__r",6]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",6,[[],["dmac__r",6]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",6,[[],["usb__r",6]]],[11,"hpb0_","atsamd21g::pm::ahbmask","Bit 0 - HPB0 AHB Clock Mask",881,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",881,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",881,[[],["hpb2__r",6]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",881,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",881,[[],["nvmctrl__r",6]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",881,[[],["dmac__r",6]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",881,[[],["usb__r",6]]],[11,"hpb0_","atsamd21g::generic","Bit 0 - HPB0 AHB Clock Mask",7,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",7,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",7,[[],["hpb2__w",3]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",7,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",7,[[],["nvmctrl__w",3]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",7,[[],["dmac__w",3]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",7,[[],["usb__w",3]]],[11,"hpb0_","atsamd21g::pm::ahbmask","Bit 0 - HPB0 AHB Clock Mask",882,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",882,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",882,[[],["hpb2__w",3]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",882,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",882,[[],["nvmctrl__w",3]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",882,[[],["dmac__w",3]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",882,[[],["usb__w",3]]],[0,"apbamask","atsamd21g::pm","APBA Mask",null,null],[3,"PAC0__W","atsamd21g::pm::apbamask","Write proxy for field `PAC0_`",null,null],[3,"PM__W","","Write proxy for field `PM_`",null,null],[3,"SYSCTRL__W","","Write proxy for field `SYSCTRL_`",null,null],[3,"GCLK__W","","Write proxy for field `GCLK_`",null,null],[3,"WDT__W","","Write proxy for field `WDT_`",null,null],[3,"RTC__W","","Write proxy for field `RTC_`",null,null],[3,"EIC__W","","Write proxy for field `EIC_`",null,null],[6,"R","","Reader of register APBAMASK",null,null],[6,"W","","Writer for register APBAMASK",null,null],[6,"PAC0__R","","Reader of field `PAC0_`",null,null],[6,"PM__R","","Reader of field `PM_`",null,null],[6,"SYSCTRL__R","","Reader of field `SYSCTRL_`",null,null],[6,"GCLK__R","","Reader of field `GCLK_`",null,null],[6,"WDT__R","","Reader of field `WDT_`",null,null],[6,"RTC__R","","Reader of field `RTC_`",null,null],[6,"EIC__R","","Reader of field `EIC_`",null,null],[11,"set_bit","","Sets the field bit",883,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",883,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",883,[[],["w",6]]],[11,"set_bit","","Sets the field bit",884,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",884,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",884,[[],["w",6]]],[11,"set_bit","","Sets the field bit",885,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",885,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",885,[[],["w",6]]],[11,"set_bit","","Sets the field bit",886,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",886,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",886,[[],["w",6]]],[11,"set_bit","","Sets the field bit",887,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",887,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",887,[[],["w",6]]],[11,"set_bit","","Sets the field bit",888,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",888,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",888,[[],["w",6]]],[11,"set_bit","","Sets the field bit",889,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",889,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",889,[[],["w",6]]],[11,"pac0_","atsamd21g::generic","Bit 0 - PAC0 APB Clock Enable",6,[[],["pac0__r",6]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",6,[[],["pm__r",6]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",6,[[],["sysctrl__r",6]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",6,[[],["gclk__r",6]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",6,[[],["wdt__r",6]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",6,[[],["rtc__r",6]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",6,[[],["eic__r",6]]],[11,"pac0_","atsamd21g::pm::apbamask","Bit 0 - PAC0 APB Clock Enable",890,[[],["pac0__r",6]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",890,[[],["pm__r",6]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",890,[[],["sysctrl__r",6]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",890,[[],["gclk__r",6]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",890,[[],["wdt__r",6]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",890,[[],["rtc__r",6]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",890,[[],["eic__r",6]]],[11,"pac0_","atsamd21g::generic","Bit 0 - PAC0 APB Clock Enable",7,[[],["pac0__w",3]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",7,[[],["pm__w",3]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",7,[[],["sysctrl__w",3]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",7,[[],["gclk__w",3]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",7,[[],["wdt__w",3]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",7,[[],["rtc__w",3]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",7,[[],["eic__w",3]]],[11,"pac0_","atsamd21g::pm::apbamask","Bit 0 - PAC0 APB Clock Enable",891,[[],["pac0__w",3]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",891,[[],["pm__w",3]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",891,[[],["sysctrl__w",3]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",891,[[],["gclk__w",3]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",891,[[],["wdt__w",3]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",891,[[],["rtc__w",3]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",891,[[],["eic__w",3]]],[0,"apbbmask","atsamd21g::pm","APBB Mask",null,null],[3,"PAC1__W","atsamd21g::pm::apbbmask","Write proxy for field `PAC1_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"PORT__W","","Write proxy for field `PORT_`",null,null],[3,"DMAC__W","","Write proxy for field `DMAC_`",null,null],[3,"USB__W","","Write proxy for field `USB_`",null,null],[3,"HMATRIX__W","","Write proxy for field `HMATRIX_`",null,null],[6,"R","","Reader of register APBBMASK",null,null],[6,"W","","Writer for register APBBMASK",null,null],[6,"PAC1__R","","Reader of field `PAC1_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"PORT__R","","Reader of field `PORT_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[6,"HMATRIX__R","","Reader of field `HMATRIX_`",null,null],[11,"set_bit","","Sets the field bit",892,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",892,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",892,[[],["w",6]]],[11,"set_bit","","Sets the field bit",893,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",893,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",893,[[],["w",6]]],[11,"set_bit","","Sets the field bit",894,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",894,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",894,[[],["w",6]]],[11,"set_bit","","Sets the field bit",895,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",895,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",895,[[],["w",6]]],[11,"set_bit","","Sets the field bit",896,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",896,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",896,[[],["w",6]]],[11,"set_bit","","Sets the field bit",897,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",897,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",897,[[],["w",6]]],[11,"set_bit","","Sets the field bit",898,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",898,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",898,[[],["w",6]]],[11,"pac1_","atsamd21g::generic","Bit 0 - PAC1 APB Clock Enable",6,[[],["pac1__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",6,[[],["nvmctrl__r",6]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",6,[[],["port__r",6]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",6,[[],["dmac__r",6]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",6,[[],["usb__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",6,[[],["hmatrix__r",6]]],[11,"pac1_","atsamd21g::pm::apbbmask","Bit 0 - PAC1 APB Clock Enable",899,[[],["pac1__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",899,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",899,[[],["nvmctrl__r",6]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",899,[[],["port__r",6]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",899,[[],["dmac__r",6]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",899,[[],["usb__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",899,[[],["hmatrix__r",6]]],[11,"pac1_","atsamd21g::generic","Bit 0 - PAC1 APB Clock Enable",7,[[],["pac1__w",3]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",7,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",7,[[],["nvmctrl__w",3]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",7,[[],["port__w",3]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",7,[[],["dmac__w",3]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",7,[[],["usb__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",7,[[],["hmatrix__w",3]]],[11,"pac1_","atsamd21g::pm::apbbmask","Bit 0 - PAC1 APB Clock Enable",900,[[],["pac1__w",3]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",900,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",900,[[],["nvmctrl__w",3]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",900,[[],["port__w",3]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",900,[[],["dmac__w",3]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",900,[[],["usb__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",900,[[],["hmatrix__w",3]]],[0,"apbcmask","atsamd21g::pm","APBC Mask",null,null],[3,"PAC2__W","atsamd21g::pm::apbcmask","Write proxy for field `PAC2_`",null,null],[3,"EVSYS__W","","Write proxy for field `EVSYS_`",null,null],[3,"SERCOM0__W","","Write proxy for field `SERCOM0_`",null,null],[3,"SERCOM1__W","","Write proxy for field `SERCOM1_`",null,null],[3,"SERCOM2__W","","Write proxy for field `SERCOM2_`",null,null],[3,"SERCOM3__W","","Write proxy for field `SERCOM3_`",null,null],[3,"SERCOM4__W","","Write proxy for field `SERCOM4_`",null,null],[3,"SERCOM5__W","","Write proxy for field `SERCOM5_`",null,null],[3,"TCC0__W","","Write proxy for field `TCC0_`",null,null],[3,"TCC1__W","","Write proxy for field `TCC1_`",null,null],[3,"TCC2__W","","Write proxy for field `TCC2_`",null,null],[3,"TC3__W","","Write proxy for field `TC3_`",null,null],[3,"TC4__W","","Write proxy for field `TC4_`",null,null],[3,"TC5__W","","Write proxy for field `TC5_`",null,null],[3,"ADC__W","","Write proxy for field `ADC_`",null,null],[3,"AC__W","","Write proxy for field `AC_`",null,null],[3,"DAC__W","","Write proxy for field `DAC_`",null,null],[3,"PTC__W","","Write proxy for field `PTC_`",null,null],[3,"I2S__W","","Write proxy for field `I2S_`",null,null],[6,"R","","Reader of register APBCMASK",null,null],[6,"W","","Writer for register APBCMASK",null,null],[6,"PAC2__R","","Reader of field `PAC2_`",null,null],[6,"EVSYS__R","","Reader of field `EVSYS_`",null,null],[6,"SERCOM0__R","","Reader of field `SERCOM0_`",null,null],[6,"SERCOM1__R","","Reader of field `SERCOM1_`",null,null],[6,"SERCOM2__R","","Reader of field `SERCOM2_`",null,null],[6,"SERCOM3__R","","Reader of field `SERCOM3_`",null,null],[6,"SERCOM4__R","","Reader of field `SERCOM4_`",null,null],[6,"SERCOM5__R","","Reader of field `SERCOM5_`",null,null],[6,"TCC0__R","","Reader of field `TCC0_`",null,null],[6,"TCC1__R","","Reader of field `TCC1_`",null,null],[6,"TCC2__R","","Reader of field `TCC2_`",null,null],[6,"TC3__R","","Reader of field `TC3_`",null,null],[6,"TC4__R","","Reader of field `TC4_`",null,null],[6,"TC5__R","","Reader of field `TC5_`",null,null],[6,"ADC__R","","Reader of field `ADC_`",null,null],[6,"AC__R","","Reader of field `AC_`",null,null],[6,"DAC__R","","Reader of field `DAC_`",null,null],[6,"PTC__R","","Reader of field `PTC_`",null,null],[6,"I2S__R","","Reader of field `I2S_`",null,null],[11,"set_bit","","Sets the field bit",901,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",901,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",901,[[],["w",6]]],[11,"set_bit","","Sets the field bit",902,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",902,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",902,[[],["w",6]]],[11,"set_bit","","Sets the field bit",903,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",903,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",903,[[],["w",6]]],[11,"set_bit","","Sets the field bit",904,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",904,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",904,[[],["w",6]]],[11,"set_bit","","Sets the field bit",905,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",905,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",905,[[],["w",6]]],[11,"set_bit","","Sets the field bit",906,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",906,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",906,[[],["w",6]]],[11,"set_bit","","Sets the field bit",907,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",907,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",907,[[],["w",6]]],[11,"set_bit","","Sets the field bit",908,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",908,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",908,[[],["w",6]]],[11,"set_bit","","Sets the field bit",909,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",909,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",909,[[],["w",6]]],[11,"set_bit","","Sets the field bit",910,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",910,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",910,[[],["w",6]]],[11,"set_bit","","Sets the field bit",911,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",911,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",911,[[],["w",6]]],[11,"set_bit","","Sets the field bit",912,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",912,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",912,[[],["w",6]]],[11,"set_bit","","Sets the field bit",913,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",913,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",913,[[],["w",6]]],[11,"set_bit","","Sets the field bit",914,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",914,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",914,[[],["w",6]]],[11,"set_bit","","Sets the field bit",915,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",915,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",915,[[],["w",6]]],[11,"set_bit","","Sets the field bit",916,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",916,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",916,[[],["w",6]]],[11,"set_bit","","Sets the field bit",917,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",917,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",917,[[],["w",6]]],[11,"set_bit","","Sets the field bit",918,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",918,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",918,[[],["w",6]]],[11,"set_bit","","Sets the field bit",919,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",919,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",919,[[],["w",6]]],[11,"pac2_","atsamd21g::generic","Bit 0 - PAC2 APB Clock Enable",6,[[],["pac2__r",6]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",6,[[],["evsys__r",6]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",6,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",6,[[],["sercom1__r",6]]],[11,"sercom2_","","Bit 4 - SERCOM2 APB Clock Enable",6,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 5 - SERCOM3 APB Clock Enable",6,[[],["sercom3__r",6]]],[11,"sercom4_","","Bit 6 - SERCOM4 APB Clock Enable",6,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 7 - SERCOM5 APB Clock Enable",6,[[],["sercom5__r",6]]],[11,"tcc0_","","Bit 8 - TCC0 APB Clock Enable",6,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 9 - TCC1 APB Clock Enable",6,[[],["tcc1__r",6]]],[11,"tcc2_","","Bit 10 - TCC2 APB Clock Enable",6,[[],["tcc2__r",6]]],[11,"tc3_","","Bit 11 - TC3 APB Clock Enable",6,[[],["tc3__r",6]]],[11,"tc4_","","Bit 12 - TC4 APB Clock Enable",6,[[],["tc4__r",6]]],[11,"tc5_","","Bit 13 - TC5 APB Clock Enable",6,[[],["tc5__r",6]]],[11,"adc_","","Bit 16 - ADC APB Clock Enable",6,[[],["adc__r",6]]],[11,"ac_","","Bit 17 - AC APB Clock Enable",6,[[],["ac__r",6]]],[11,"dac_","","Bit 18 - DAC APB Clock Enable",6,[[],["dac__r",6]]],[11,"ptc_","","Bit 19 - PTC APB Clock Enable",6,[[],["ptc__r",6]]],[11,"i2s_","","Bit 20 - I2S APB Clock Enable",6,[[],["i2s__r",6]]],[11,"pac2_","atsamd21g::pm::apbcmask","Bit 0 - PAC2 APB Clock Enable",920,[[],["pac2__r",6]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",920,[[],["evsys__r",6]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",920,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",920,[[],["sercom1__r",6]]],[11,"sercom2_","","Bit 4 - SERCOM2 APB Clock Enable",920,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 5 - SERCOM3 APB Clock Enable",920,[[],["sercom3__r",6]]],[11,"sercom4_","","Bit 6 - SERCOM4 APB Clock Enable",920,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 7 - SERCOM5 APB Clock Enable",920,[[],["sercom5__r",6]]],[11,"tcc0_","","Bit 8 - TCC0 APB Clock Enable",920,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 9 - TCC1 APB Clock Enable",920,[[],["tcc1__r",6]]],[11,"tcc2_","","Bit 10 - TCC2 APB Clock Enable",920,[[],["tcc2__r",6]]],[11,"tc3_","","Bit 11 - TC3 APB Clock Enable",920,[[],["tc3__r",6]]],[11,"tc4_","","Bit 12 - TC4 APB Clock Enable",920,[[],["tc4__r",6]]],[11,"tc5_","","Bit 13 - TC5 APB Clock Enable",920,[[],["tc5__r",6]]],[11,"adc_","","Bit 16 - ADC APB Clock Enable",920,[[],["adc__r",6]]],[11,"ac_","","Bit 17 - AC APB Clock Enable",920,[[],["ac__r",6]]],[11,"dac_","","Bit 18 - DAC APB Clock Enable",920,[[],["dac__r",6]]],[11,"ptc_","","Bit 19 - PTC APB Clock Enable",920,[[],["ptc__r",6]]],[11,"i2s_","","Bit 20 - I2S APB Clock Enable",920,[[],["i2s__r",6]]],[11,"pac2_","atsamd21g::generic","Bit 0 - PAC2 APB Clock Enable",7,[[],["pac2__w",3]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",7,[[],["evsys__w",3]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",7,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",7,[[],["sercom1__w",3]]],[11,"sercom2_","","Bit 4 - SERCOM2 APB Clock Enable",7,[[],["sercom2__w",3]]],[11,"sercom3_","","Bit 5 - SERCOM3 APB Clock Enable",7,[[],["sercom3__w",3]]],[11,"sercom4_","","Bit 6 - SERCOM4 APB Clock Enable",7,[[],["sercom4__w",3]]],[11,"sercom5_","","Bit 7 - SERCOM5 APB Clock Enable",7,[[],["sercom5__w",3]]],[11,"tcc0_","","Bit 8 - TCC0 APB Clock Enable",7,[[],["tcc0__w",3]]],[11,"tcc1_","","Bit 9 - TCC1 APB Clock Enable",7,[[],["tcc1__w",3]]],[11,"tcc2_","","Bit 10 - TCC2 APB Clock Enable",7,[[],["tcc2__w",3]]],[11,"tc3_","","Bit 11 - TC3 APB Clock Enable",7,[[],["tc3__w",3]]],[11,"tc4_","","Bit 12 - TC4 APB Clock Enable",7,[[],["tc4__w",3]]],[11,"tc5_","","Bit 13 - TC5 APB Clock Enable",7,[[],["tc5__w",3]]],[11,"adc_","","Bit 16 - ADC APB Clock Enable",7,[[],["adc__w",3]]],[11,"ac_","","Bit 17 - AC APB Clock Enable",7,[[],["ac__w",3]]],[11,"dac_","","Bit 18 - DAC APB Clock Enable",7,[[],["dac__w",3]]],[11,"ptc_","","Bit 19 - PTC APB Clock Enable",7,[[],["ptc__w",3]]],[11,"i2s_","","Bit 20 - I2S APB Clock Enable",7,[[],["i2s__w",3]]],[11,"pac2_","atsamd21g::pm::apbcmask","Bit 0 - PAC2 APB Clock Enable",921,[[],["pac2__w",3]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",921,[[],["evsys__w",3]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",921,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",921,[[],["sercom1__w",3]]],[11,"sercom2_","","Bit 4 - SERCOM2 APB Clock Enable",921,[[],["sercom2__w",3]]],[11,"sercom3_","","Bit 5 - SERCOM3 APB Clock Enable",921,[[],["sercom3__w",3]]],[11,"sercom4_","","Bit 6 - SERCOM4 APB Clock Enable",921,[[],["sercom4__w",3]]],[11,"sercom5_","","Bit 7 - SERCOM5 APB Clock Enable",921,[[],["sercom5__w",3]]],[11,"tcc0_","","Bit 8 - TCC0 APB Clock Enable",921,[[],["tcc0__w",3]]],[11,"tcc1_","","Bit 9 - TCC1 APB Clock Enable",921,[[],["tcc1__w",3]]],[11,"tcc2_","","Bit 10 - TCC2 APB Clock Enable",921,[[],["tcc2__w",3]]],[11,"tc3_","","Bit 11 - TC3 APB Clock Enable",921,[[],["tc3__w",3]]],[11,"tc4_","","Bit 12 - TC4 APB Clock Enable",921,[[],["tc4__w",3]]],[11,"tc5_","","Bit 13 - TC5 APB Clock Enable",921,[[],["tc5__w",3]]],[11,"adc_","","Bit 16 - ADC APB Clock Enable",921,[[],["adc__w",3]]],[11,"ac_","","Bit 17 - AC APB Clock Enable",921,[[],["ac__w",3]]],[11,"dac_","","Bit 18 - DAC APB Clock Enable",921,[[],["dac__w",3]]],[11,"ptc_","","Bit 19 - PTC APB Clock Enable",921,[[],["ptc__w",3]]],[11,"i2s_","","Bit 20 - I2S APB Clock Enable",921,[[],["i2s__w",3]]],[0,"intenclr","atsamd21g::pm","Interrupt Enable Clear",null,null],[3,"CKRDY_W","atsamd21g::pm::intenclr","Write proxy for field `CKRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[11,"set_bit","","Sets the field bit",922,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",922,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",922,[[],["w",6]]],[11,"ckrdy","atsamd21g::generic","Bit 0 - Clock Ready Interrupt Enable",6,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd21g::pm::intenclr","Bit 0 - Clock Ready Interrupt Enable",923,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd21g::generic","Bit 0 - Clock Ready Interrupt Enable",7,[[],["ckrdy_w",3]]],[11,"ckrdy","atsamd21g::pm::intenclr","Bit 0 - Clock Ready Interrupt Enable",924,[[],["ckrdy_w",3]]],[0,"intenset","atsamd21g::pm","Interrupt Enable Set",null,null],[3,"CKRDY_W","atsamd21g::pm::intenset","Write proxy for field `CKRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[11,"set_bit","","Sets the field bit",925,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",925,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",925,[[],["w",6]]],[11,"ckrdy","atsamd21g::generic","Bit 0 - Clock Ready Interrupt Enable",6,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd21g::pm::intenset","Bit 0 - Clock Ready Interrupt Enable",926,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd21g::generic","Bit 0 - Clock Ready Interrupt Enable",7,[[],["ckrdy_w",3]]],[11,"ckrdy","atsamd21g::pm::intenset","Bit 0 - Clock Ready Interrupt Enable",927,[[],["ckrdy_w",3]]],[0,"intflag","atsamd21g::pm","Interrupt Flag Status and Clear",null,null],[3,"CKRDY_W","atsamd21g::pm::intflag","Write proxy for field `CKRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[11,"set_bit","","Sets the field bit",928,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",928,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",928,[[],["w",6]]],[11,"ckrdy","atsamd21g::generic","Bit 0 - Clock Ready",6,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd21g::pm::intflag","Bit 0 - Clock Ready",929,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd21g::generic","Bit 0 - Clock Ready",7,[[],["ckrdy_w",3]]],[11,"ckrdy","atsamd21g::pm::intflag","Bit 0 - Clock Ready",930,[[],["ckrdy_w",3]]],[0,"rcause","atsamd21g::pm","Reset Cause",null,null],[6,"R","atsamd21g::pm::rcause","Reader of register RCAUSE",null,null],[6,"POR_R","","Reader of field `POR`",null,null],[6,"BOD12_R","","Reader of field `BOD12`",null,null],[6,"BOD33_R","","Reader of field `BOD33`",null,null],[6,"EXT_R","","Reader of field `EXT`",null,null],[6,"WDT_R","","Reader of field `WDT`",null,null],[6,"SYST_R","","Reader of field `SYST`",null,null],[11,"por","atsamd21g::generic","Bit 0 - Power On Reset",6,[[],["por_r",6]]],[11,"bod12","","Bit 1 - Brown Out 12 Detector Reset",6,[[],["bod12_r",6]]],[11,"bod33","","Bit 2 - Brown Out 33 Detector Reset",6,[[],["bod33_r",6]]],[11,"ext","","Bit 4 - External Reset",6,[[],["ext_r",6]]],[11,"wdt","","Bit 5 - Watchdog Reset",6,[[],["wdt_r",6]]],[11,"syst","","Bit 6 - System Reset Request",6,[[],["syst_r",6]]],[11,"por","atsamd21g::pm::rcause","Bit 0 - Power On Reset",931,[[],["por_r",6]]],[11,"bod12","","Bit 1 - Brown Out 12 Detector Reset",931,[[],["bod12_r",6]]],[11,"bod33","","Bit 2 - Brown Out 33 Detector Reset",931,[[],["bod33_r",6]]],[11,"ext","","Bit 4 - External Reset",931,[[],["ext_r",6]]],[11,"wdt","","Bit 5 - Watchdog Reset",931,[[],["wdt_r",6]]],[11,"syst","","Bit 6 - System Reset Request",931,[[],["syst_r",6]]],[6,"CTRL","atsamd21g::pm","Control",null,null],[6,"SLEEP","","Sleep Mode",null,null],[6,"CPUSEL","","CPU Clock Select",null,null],[6,"APBASEL","","APBA Clock Select",null,null],[6,"APBBSEL","","APBB Clock Select",null,null],[6,"APBCSEL","","APBC Clock Select",null,null],[6,"AHBMASK","","AHB Mask",null,null],[6,"APBAMASK","","APBA Mask",null,null],[6,"APBBMASK","","APBB Mask",null,null],[6,"APBCMASK","","APBC Mask",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"RCAUSE","","Reset Cause",null,null],[0,"port","atsamd21g","Port Module",null,null],[3,"RegisterBlock","atsamd21g::port","Register block",null,null],[12,"dir0","","0x00 - Data Direction",932,null],[12,"dirclr0","","0x04 - Data Direction Clear",932,null],[12,"dirset0","","0x08 - Data Direction Set",932,null],[12,"dirtgl0","","0x0c - Data Direction Toggle",932,null],[12,"out0","","0x10 - Data Output Value",932,null],[12,"outclr0","","0x14 - Data Output Value Clear",932,null],[12,"outset0","","0x18 - Data Output Value Set",932,null],[12,"outtgl0","","0x1c - Data Output Value Toggle",932,null],[12,"in0","","0x20 - Data Input Value",932,null],[12,"ctrl0","","0x24 - Control",932,null],[12,"wrconfig0","","0x28 - Write Configuration",932,null],[12,"pmux0_","","0x30 - Peripheral Multiplexing n - Group 0",932,null],[12,"pincfg0_","","0x40 - Pin Configuration n - Group 0",932,null],[12,"dir1","","0x80 - Data Direction",932,null],[12,"dirclr1","","0x84 - Data Direction Clear",932,null],[12,"dirset1","","0x88 - Data Direction Set",932,null],[12,"dirtgl1","","0x8c - Data Direction Toggle",932,null],[12,"out1","","0x90 - Data Output Value",932,null],[12,"outclr1","","0x94 - Data Output Value Clear",932,null],[12,"outset1","","0x98 - Data Output Value Set",932,null],[12,"outtgl1","","0x9c - Data Output Value Toggle",932,null],[12,"in1","","0xa0 - Data Input Value",932,null],[12,"ctrl1","","0xa4 - Control",932,null],[12,"wrconfig1","","0xa8 - Write Configuration",932,null],[12,"pmux1_","","0xb0 - Peripheral Multiplexing n - Group 1",932,null],[12,"pincfg1_","","0xc0 - Pin Configuration n - Group 1",932,null],[0,"dir","","Data Direction",null,null],[3,"DIR_W","atsamd21g::port::dir","Write proxy for field `DIR`",null,null],[6,"R","","Reader of register DIR%s",null,null],[6,"W","","Writer for register DIR%s",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[11,"bits","","Writes raw bits to the field",933,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bits 0:31 - Port Data Direction",6,[[],["dir_r",6]]],[11,"dir","atsamd21g::port::dir","Bits 0:31 - Port Data Direction",934,[[],["dir_r",6]]],[11,"dir","atsamd21g::generic","Bits 0:31 - Port Data Direction",7,[[],["dir_w",3]]],[11,"dir","atsamd21g::port::dir","Bits 0:31 - Port Data Direction",935,[[],["dir_w",3]]],[0,"dirclr","atsamd21g::port","Data Direction Clear",null,null],[3,"DIRCLR_W","atsamd21g::port::dirclr","Write proxy for field `DIRCLR`",null,null],[6,"R","","Reader of register DIRCLR%s",null,null],[6,"W","","Writer for register DIRCLR%s",null,null],[6,"DIRCLR_R","","Reader of field `DIRCLR`",null,null],[11,"bits","","Writes raw bits to the field",936,[[],["w",6]]],[11,"dirclr","atsamd21g::generic","Bits 0:31 - Port Data Direction Clear",6,[[],["dirclr_r",6]]],[11,"dirclr","atsamd21g::port::dirclr","Bits 0:31 - Port Data Direction Clear",937,[[],["dirclr_r",6]]],[11,"dirclr","atsamd21g::generic","Bits 0:31 - Port Data Direction Clear",7,[[],["dirclr_w",3]]],[11,"dirclr","atsamd21g::port::dirclr","Bits 0:31 - Port Data Direction Clear",938,[[],["dirclr_w",3]]],[0,"dirset","atsamd21g::port","Data Direction Set",null,null],[3,"DIRSET_W","atsamd21g::port::dirset","Write proxy for field `DIRSET`",null,null],[6,"R","","Reader of register DIRSET%s",null,null],[6,"W","","Writer for register DIRSET%s",null,null],[6,"DIRSET_R","","Reader of field `DIRSET`",null,null],[11,"bits","","Writes raw bits to the field",939,[[],["w",6]]],[11,"dirset","atsamd21g::generic","Bits 0:31 - Port Data Direction Set",6,[[],["dirset_r",6]]],[11,"dirset","atsamd21g::port::dirset","Bits 0:31 - Port Data Direction Set",940,[[],["dirset_r",6]]],[11,"dirset","atsamd21g::generic","Bits 0:31 - Port Data Direction Set",7,[[],["dirset_w",3]]],[11,"dirset","atsamd21g::port::dirset","Bits 0:31 - Port Data Direction Set",941,[[],["dirset_w",3]]],[0,"dirtgl","atsamd21g::port","Data Direction Toggle",null,null],[3,"DIRTGL_W","atsamd21g::port::dirtgl","Write proxy for field `DIRTGL`",null,null],[6,"R","","Reader of register DIRTGL%s",null,null],[6,"W","","Writer for register DIRTGL%s",null,null],[6,"DIRTGL_R","","Reader of field `DIRTGL`",null,null],[11,"bits","","Writes raw bits to the field",942,[[],["w",6]]],[11,"dirtgl","atsamd21g::generic","Bits 0:31 - Port Data Direction Toggle",6,[[],["dirtgl_r",6]]],[11,"dirtgl","atsamd21g::port::dirtgl","Bits 0:31 - Port Data Direction Toggle",943,[[],["dirtgl_r",6]]],[11,"dirtgl","atsamd21g::generic","Bits 0:31 - Port Data Direction Toggle",7,[[],["dirtgl_w",3]]],[11,"dirtgl","atsamd21g::port::dirtgl","Bits 0:31 - Port Data Direction Toggle",944,[[],["dirtgl_w",3]]],[0,"out","atsamd21g::port","Data Output Value",null,null],[3,"OUT_W","atsamd21g::port::out","Write proxy for field `OUT`",null,null],[6,"R","","Reader of register OUT%s",null,null],[6,"W","","Writer for register OUT%s",null,null],[6,"OUT_R","","Reader of field `OUT`",null,null],[11,"bits","","Writes raw bits to the field",945,[[],["w",6]]],[11,"out","atsamd21g::generic","Bits 0:31 - Port Data Output Value",6,[[],["out_r",6]]],[11,"out","atsamd21g::port::out","Bits 0:31 - Port Data Output Value",946,[[],["out_r",6]]],[11,"out","atsamd21g::generic","Bits 0:31 - Port Data Output Value",7,[[],["out_w",3]]],[11,"out","atsamd21g::port::out","Bits 0:31 - Port Data Output Value",947,[[],["out_w",3]]],[0,"outclr","atsamd21g::port","Data Output Value Clear",null,null],[3,"OUTCLR_W","atsamd21g::port::outclr","Write proxy for field `OUTCLR`",null,null],[6,"R","","Reader of register OUTCLR%s",null,null],[6,"W","","Writer for register OUTCLR%s",null,null],[6,"OUTCLR_R","","Reader of field `OUTCLR`",null,null],[11,"bits","","Writes raw bits to the field",948,[[],["w",6]]],[11,"outclr","atsamd21g::generic","Bits 0:31 - Port Data Output Value Clear",6,[[],["outclr_r",6]]],[11,"outclr","atsamd21g::port::outclr","Bits 0:31 - Port Data Output Value Clear",949,[[],["outclr_r",6]]],[11,"outclr","atsamd21g::generic","Bits 0:31 - Port Data Output Value Clear",7,[[],["outclr_w",3]]],[11,"outclr","atsamd21g::port::outclr","Bits 0:31 - Port Data Output Value Clear",950,[[],["outclr_w",3]]],[0,"outset","atsamd21g::port","Data Output Value Set",null,null],[3,"OUTSET_W","atsamd21g::port::outset","Write proxy for field `OUTSET`",null,null],[6,"R","","Reader of register OUTSET%s",null,null],[6,"W","","Writer for register OUTSET%s",null,null],[6,"OUTSET_R","","Reader of field `OUTSET`",null,null],[11,"bits","","Writes raw bits to the field",951,[[],["w",6]]],[11,"outset","atsamd21g::generic","Bits 0:31 - Port Data Output Value Set",6,[[],["outset_r",6]]],[11,"outset","atsamd21g::port::outset","Bits 0:31 - Port Data Output Value Set",952,[[],["outset_r",6]]],[11,"outset","atsamd21g::generic","Bits 0:31 - Port Data Output Value Set",7,[[],["outset_w",3]]],[11,"outset","atsamd21g::port::outset","Bits 0:31 - Port Data Output Value Set",953,[[],["outset_w",3]]],[0,"outtgl","atsamd21g::port","Data Output Value Toggle",null,null],[3,"OUTTGL_W","atsamd21g::port::outtgl","Write proxy for field `OUTTGL`",null,null],[6,"R","","Reader of register OUTTGL%s",null,null],[6,"W","","Writer for register OUTTGL%s",null,null],[6,"OUTTGL_R","","Reader of field `OUTTGL`",null,null],[11,"bits","","Writes raw bits to the field",954,[[],["w",6]]],[11,"outtgl","atsamd21g::generic","Bits 0:31 - Port Data Output Value Toggle",6,[[],["outtgl_r",6]]],[11,"outtgl","atsamd21g::port::outtgl","Bits 0:31 - Port Data Output Value Toggle",955,[[],["outtgl_r",6]]],[11,"outtgl","atsamd21g::generic","Bits 0:31 - Port Data Output Value Toggle",7,[[],["outtgl_w",3]]],[11,"outtgl","atsamd21g::port::outtgl","Bits 0:31 - Port Data Output Value Toggle",956,[[],["outtgl_w",3]]],[0,"in_","atsamd21g::port","Data Input Value",null,null],[6,"R","atsamd21g::port::in_","Reader of register IN%s",null,null],[6,"IN_R","","Reader of field `IN`",null,null],[11,"in_","atsamd21g::generic","Bits 0:31 - Port Data Input Value",6,[[],["in_r",6]]],[11,"in_","atsamd21g::port::in_","Bits 0:31 - Port Data Input Value",957,[[],["in_r",6]]],[0,"ctrl","atsamd21g::port","Control",null,null],[3,"SAMPLING_W","atsamd21g::port::ctrl","Write proxy for field `SAMPLING`",null,null],[6,"W","","Writer for register CTRL%s",null,null],[11,"bits","","Writes raw bits to the field",958,[[],["w",6]]],[11,"sampling","atsamd21g::generic","Bits 0:31 - Input Sampling Mode",7,[[],["sampling_w",3]]],[11,"sampling","atsamd21g::port::ctrl","Bits 0:31 - Input Sampling Mode",959,[[],["sampling_w",3]]],[0,"wrconfig","atsamd21g::port","Write Configuration",null,null],[3,"PINMASK_W","atsamd21g::port::wrconfig","Write proxy for field `PINMASK`",null,null],[3,"PMUXEN_W","","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[3,"PMUX_W","","Write proxy for field `PMUX`",null,null],[3,"WRPMUX_W","","Write proxy for field `WRPMUX`",null,null],[3,"WRPINCFG_W","","Write proxy for field `WRPINCFG`",null,null],[3,"HWSEL_W","","Write proxy for field `HWSEL`",null,null],[6,"W","","Writer for register WRCONFIG%s",null,null],[11,"bits","","Writes raw bits to the field",960,[[],["w",6]]],[11,"set_bit","","Sets the field bit",961,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",961,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",961,[[],["w",6]]],[11,"set_bit","","Sets the field bit",962,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",962,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",962,[[],["w",6]]],[11,"set_bit","","Sets the field bit",963,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",963,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",963,[[],["w",6]]],[11,"set_bit","","Sets the field bit",964,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",964,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",964,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",965,[[],["w",6]]],[11,"set_bit","","Sets the field bit",966,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",966,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",966,[[],["w",6]]],[11,"set_bit","","Sets the field bit",967,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",967,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",967,[[],["w",6]]],[11,"set_bit","","Sets the field bit",968,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",968,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",968,[[],["w",6]]],[11,"pinmask","atsamd21g::generic","Bits 0:15 - Pin Mask for Multiple Pin Configuration",7,[[],["pinmask_w",3]]],[11,"pmuxen","","Bit 16 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 17 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 18 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 22 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmux","","Bits 24:27 - Peripheral Multiplexing",7,[[],["pmux_w",3]]],[11,"wrpmux","","Bit 28 - Write PMUX",7,[[],["wrpmux_w",3]]],[11,"wrpincfg","","Bit 30 - Write PINCFG",7,[[],["wrpincfg_w",3]]],[11,"hwsel","","Bit 31 - Half-Word Select",7,[[],["hwsel_w",3]]],[11,"pinmask","atsamd21g::port::wrconfig","Bits 0:15 - Pin Mask for Multiple Pin Configuration",969,[[],["pinmask_w",3]]],[11,"pmuxen","","Bit 16 - Peripheral Multiplexer Enable",969,[[],["pmuxen_w",3]]],[11,"inen","","Bit 17 - Input Enable",969,[[],["inen_w",3]]],[11,"pullen","","Bit 18 - Pull Enable",969,[[],["pullen_w",3]]],[11,"drvstr","","Bit 22 - Output Driver Strength Selection",969,[[],["drvstr_w",3]]],[11,"pmux","","Bits 24:27 - Peripheral Multiplexing",969,[[],["pmux_w",3]]],[11,"wrpmux","","Bit 28 - Write PMUX",969,[[],["wrpmux_w",3]]],[11,"wrpincfg","","Bit 30 - Write PINCFG",969,[[],["wrpincfg_w",3]]],[11,"hwsel","","Bit 31 - Half-Word Select",969,[[],["hwsel_w",3]]],[0,"pmux0_","atsamd21g::port","Peripheral Multiplexing n - Group 0",null,null],[3,"PMUXE_W","atsamd21g::port::pmux0_","Write proxy for field `PMUXE`",null,null],[3,"PMUXO_W","","Write proxy for field `PMUXO`",null,null],[4,"PMUXE_A","","Peripheral Multiplexing Even",null,null],[13,"A","","0: Peripheral function A selected",970,null],[13,"B","","1: Peripheral function B selected",970,null],[13,"C","","2: Peripheral function C selected",970,null],[13,"D","","3: Peripheral function D selected",970,null],[13,"E","","4: Peripheral function E selected",970,null],[13,"F","","5: Peripheral function F selected",970,null],[13,"G","","6: Peripheral function G selected",970,null],[13,"H","","7: Peripheral function H selected",970,null],[4,"PMUXO_A","","Peripheral Multiplexing Odd",null,null],[13,"A","","0: Peripheral function A selected",971,null],[13,"B","","1: Peripheral function B selected",971,null],[13,"C","","2: Peripheral function C selected",971,null],[13,"D","","3: Peripheral function D selected",971,null],[13,"E","","4: Peripheral function E selected",971,null],[13,"F","","5: Peripheral function F selected",971,null],[13,"G","","6: Peripheral function G selected",971,null],[13,"H","","7: Peripheral function H selected",971,null],[6,"R","","Reader of register PMUX0_%s",null,null],[6,"W","","Writer for register PMUX0_%s",null,null],[6,"PMUXE_R","","Reader of field `PMUXE`",null,null],[6,"PMUXO_R","","Reader of field `PMUXO`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["pmuxe_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"is_e","","Checks if the value of the field is `E`",6,[[]]],[11,"is_f","","Checks if the value of the field is `F`",6,[[]]],[11,"is_g","","Checks if the value of the field is `G`",6,[[]]],[11,"is_h","","Checks if the value of the field is `H`",6,[[]]],[11,"variant","atsamd21g::port::pmux0_","Get enumerated values variant",972,[[],[["variant",4],["pmuxe_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",972,[[]]],[11,"is_b","","Checks if the value of the field is `B`",972,[[]]],[11,"is_c","","Checks if the value of the field is `C`",972,[[]]],[11,"is_d","","Checks if the value of the field is `D`",972,[[]]],[11,"is_e","","Checks if the value of the field is `E`",972,[[]]],[11,"is_f","","Checks if the value of the field is `F`",972,[[]]],[11,"is_g","","Checks if the value of the field is `G`",972,[[]]],[11,"is_h","","Checks if the value of the field is `H`",972,[[]]],[11,"variant","","Writes `variant` to the field",973,[[["pmuxe_a",4]],["w",6]]],[11,"a","","Peripheral function A selected",973,[[],["w",6]]],[11,"b","","Peripheral function B selected",973,[[],["w",6]]],[11,"c","","Peripheral function C selected",973,[[],["w",6]]],[11,"d","","Peripheral function D selected",973,[[],["w",6]]],[11,"e","","Peripheral function E selected",973,[[],["w",6]]],[11,"f","","Peripheral function F selected",973,[[],["w",6]]],[11,"g","","Peripheral function G selected",973,[[],["w",6]]],[11,"h","","Peripheral function H selected",973,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",973,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["pmuxo_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"is_e","","Checks if the value of the field is `E`",6,[[]]],[11,"is_f","","Checks if the value of the field is `F`",6,[[]]],[11,"is_g","","Checks if the value of the field is `G`",6,[[]]],[11,"is_h","","Checks if the value of the field is `H`",6,[[]]],[11,"variant","atsamd21g::port::pmux0_","Get enumerated values variant",974,[[],[["variant",4],["pmuxo_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",974,[[]]],[11,"is_b","","Checks if the value of the field is `B`",974,[[]]],[11,"is_c","","Checks if the value of the field is `C`",974,[[]]],[11,"is_d","","Checks if the value of the field is `D`",974,[[]]],[11,"is_e","","Checks if the value of the field is `E`",974,[[]]],[11,"is_f","","Checks if the value of the field is `F`",974,[[]]],[11,"is_g","","Checks if the value of the field is `G`",974,[[]]],[11,"is_h","","Checks if the value of the field is `H`",974,[[]]],[11,"variant","","Writes `variant` to the field",975,[[["pmuxo_a",4]],["w",6]]],[11,"a","","Peripheral function A selected",975,[[],["w",6]]],[11,"b","","Peripheral function B selected",975,[[],["w",6]]],[11,"c","","Peripheral function C selected",975,[[],["w",6]]],[11,"d","","Peripheral function D selected",975,[[],["w",6]]],[11,"e","","Peripheral function E selected",975,[[],["w",6]]],[11,"f","","Peripheral function F selected",975,[[],["w",6]]],[11,"g","","Peripheral function G selected",975,[[],["w",6]]],[11,"h","","Peripheral function H selected",975,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",975,[[],["w",6]]],[11,"pmuxe","atsamd21g::generic","Bits 0:3 - Peripheral Multiplexing Even",6,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",6,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd21g::port::pmux0_","Bits 0:3 - Peripheral Multiplexing Even",976,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",976,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd21g::generic","Bits 0:3 - Peripheral Multiplexing Even",7,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",7,[[],["pmuxo_w",3]]],[11,"pmuxe","atsamd21g::port::pmux0_","Bits 0:3 - Peripheral Multiplexing Even",977,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",977,[[],["pmuxo_w",3]]],[0,"pmux1_","atsamd21g::port","Peripheral Multiplexing n - Group 1",null,null],[3,"PMUXE_W","atsamd21g::port::pmux1_","Write proxy for field `PMUXE`",null,null],[3,"PMUXO_W","","Write proxy for field `PMUXO`",null,null],[4,"PMUXE_A","","Peripheral Multiplexing Even",null,null],[13,"A","","0: Peripheral function A selected",978,null],[13,"B","","1: Peripheral function B selected",978,null],[13,"C","","2: Peripheral function C selected",978,null],[13,"D","","3: Peripheral function D selected",978,null],[13,"E","","4: Peripheral function E selected",978,null],[13,"F","","5: Peripheral function F selected",978,null],[13,"G","","6: Peripheral function G selected",978,null],[13,"H","","7: Peripheral function H selected",978,null],[4,"PMUXO_A","","Peripheral Multiplexing Odd",null,null],[13,"A","","0: Peripheral function A selected",979,null],[13,"B","","1: Peripheral function B selected",979,null],[13,"C","","2: Peripheral function C selected",979,null],[13,"D","","3: Peripheral function D selected",979,null],[13,"E","","4: Peripheral function E selected",979,null],[13,"F","","5: Peripheral function F selected",979,null],[13,"G","","6: Peripheral function G selected",979,null],[13,"H","","7: Peripheral function H selected",979,null],[6,"R","","Reader of register PMUX1_%s",null,null],[6,"W","","Writer for register PMUX1_%s",null,null],[6,"PMUXE_R","","Reader of field `PMUXE`",null,null],[6,"PMUXO_R","","Reader of field `PMUXO`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["pmuxe_a",4],["variant",4]]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"is_e","","Checks if the value of the field is `E`",6,[[]]],[11,"is_f","","Checks if the value of the field is `F`",6,[[]]],[11,"is_g","","Checks if the value of the field is `G`",6,[[]]],[11,"is_h","","Checks if the value of the field is `H`",6,[[]]],[11,"variant","atsamd21g::port::pmux1_","Get enumerated values variant",980,[[],[["pmuxe_a",4],["variant",4]]]],[11,"is_a","","Checks if the value of the field is `A`",980,[[]]],[11,"is_b","","Checks if the value of the field is `B`",980,[[]]],[11,"is_c","","Checks if the value of the field is `C`",980,[[]]],[11,"is_d","","Checks if the value of the field is `D`",980,[[]]],[11,"is_e","","Checks if the value of the field is `E`",980,[[]]],[11,"is_f","","Checks if the value of the field is `F`",980,[[]]],[11,"is_g","","Checks if the value of the field is `G`",980,[[]]],[11,"is_h","","Checks if the value of the field is `H`",980,[[]]],[11,"variant","","Writes `variant` to the field",981,[[["pmuxe_a",4]],["w",6]]],[11,"a","","Peripheral function A selected",981,[[],["w",6]]],[11,"b","","Peripheral function B selected",981,[[],["w",6]]],[11,"c","","Peripheral function C selected",981,[[],["w",6]]],[11,"d","","Peripheral function D selected",981,[[],["w",6]]],[11,"e","","Peripheral function E selected",981,[[],["w",6]]],[11,"f","","Peripheral function F selected",981,[[],["w",6]]],[11,"g","","Peripheral function G selected",981,[[],["w",6]]],[11,"h","","Peripheral function H selected",981,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",981,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["pmuxo_a",4],["variant",4]]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"is_e","","Checks if the value of the field is `E`",6,[[]]],[11,"is_f","","Checks if the value of the field is `F`",6,[[]]],[11,"is_g","","Checks if the value of the field is `G`",6,[[]]],[11,"is_h","","Checks if the value of the field is `H`",6,[[]]],[11,"variant","atsamd21g::port::pmux1_","Get enumerated values variant",982,[[],[["pmuxo_a",4],["variant",4]]]],[11,"is_a","","Checks if the value of the field is `A`",982,[[]]],[11,"is_b","","Checks if the value of the field is `B`",982,[[]]],[11,"is_c","","Checks if the value of the field is `C`",982,[[]]],[11,"is_d","","Checks if the value of the field is `D`",982,[[]]],[11,"is_e","","Checks if the value of the field is `E`",982,[[]]],[11,"is_f","","Checks if the value of the field is `F`",982,[[]]],[11,"is_g","","Checks if the value of the field is `G`",982,[[]]],[11,"is_h","","Checks if the value of the field is `H`",982,[[]]],[11,"variant","","Writes `variant` to the field",983,[[["pmuxo_a",4]],["w",6]]],[11,"a","","Peripheral function A selected",983,[[],["w",6]]],[11,"b","","Peripheral function B selected",983,[[],["w",6]]],[11,"c","","Peripheral function C selected",983,[[],["w",6]]],[11,"d","","Peripheral function D selected",983,[[],["w",6]]],[11,"e","","Peripheral function E selected",983,[[],["w",6]]],[11,"f","","Peripheral function F selected",983,[[],["w",6]]],[11,"g","","Peripheral function G selected",983,[[],["w",6]]],[11,"h","","Peripheral function H selected",983,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",983,[[],["w",6]]],[11,"pmuxe","atsamd21g::generic","Bits 0:3 - Peripheral Multiplexing Even",6,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",6,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd21g::port::pmux1_","Bits 0:3 - Peripheral Multiplexing Even",984,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",984,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd21g::generic","Bits 0:3 - Peripheral Multiplexing Even",7,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",7,[[],["pmuxo_w",3]]],[11,"pmuxe","atsamd21g::port::pmux1_","Bits 0:3 - Peripheral Multiplexing Even",985,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",985,[[],["pmuxo_w",3]]],[0,"pincfg0_","atsamd21g::port","Pin Configuration n - Group 0",null,null],[3,"PMUXEN_W","atsamd21g::port::pincfg0_","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[6,"R","","Reader of register PINCFG0_%s",null,null],[6,"W","","Writer for register PINCFG0_%s",null,null],[6,"PMUXEN_R","","Reader of field `PMUXEN`",null,null],[6,"INEN_R","","Reader of field `INEN`",null,null],[6,"PULLEN_R","","Reader of field `PULLEN`",null,null],[6,"DRVSTR_R","","Reader of field `DRVSTR`",null,null],[11,"set_bit","","Sets the field bit",986,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",986,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",986,[[],["w",6]]],[11,"set_bit","","Sets the field bit",987,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",987,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",987,[[],["w",6]]],[11,"set_bit","","Sets the field bit",988,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",988,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",988,[[],["w",6]]],[11,"set_bit","","Sets the field bit",989,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",989,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",989,[[],["w",6]]],[11,"pmuxen","atsamd21g::generic","Bit 0 - Peripheral Multiplexer Enable",6,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",6,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",6,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",6,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd21g::port::pincfg0_","Bit 0 - Peripheral Multiplexer Enable",990,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",990,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",990,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",990,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd21g::generic","Bit 0 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmuxen","atsamd21g::port::pincfg0_","Bit 0 - Peripheral Multiplexer Enable",991,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",991,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",991,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",991,[[],["drvstr_w",3]]],[0,"pincfg1_","atsamd21g::port","Pin Configuration n - Group 1",null,null],[3,"PMUXEN_W","atsamd21g::port::pincfg1_","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[6,"R","","Reader of register PINCFG1_%s",null,null],[6,"W","","Writer for register PINCFG1_%s",null,null],[6,"PMUXEN_R","","Reader of field `PMUXEN`",null,null],[6,"INEN_R","","Reader of field `INEN`",null,null],[6,"PULLEN_R","","Reader of field `PULLEN`",null,null],[6,"DRVSTR_R","","Reader of field `DRVSTR`",null,null],[11,"set_bit","","Sets the field bit",992,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",992,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",992,[[],["w",6]]],[11,"set_bit","","Sets the field bit",993,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",993,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",993,[[],["w",6]]],[11,"set_bit","","Sets the field bit",994,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",994,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",994,[[],["w",6]]],[11,"set_bit","","Sets the field bit",995,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",995,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",995,[[],["w",6]]],[11,"pmuxen","atsamd21g::generic","Bit 0 - Peripheral Multiplexer Enable",6,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",6,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",6,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",6,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd21g::port::pincfg1_","Bit 0 - Peripheral Multiplexer Enable",996,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",996,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",996,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",996,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd21g::generic","Bit 0 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmuxen","atsamd21g::port::pincfg1_","Bit 0 - Peripheral Multiplexer Enable",997,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",997,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",997,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",997,[[],["drvstr_w",3]]],[6,"DIR","atsamd21g::port","Data Direction",null,null],[6,"DIRCLR","","Data Direction Clear",null,null],[6,"DIRSET","","Data Direction Set",null,null],[6,"DIRTGL","","Data Direction Toggle",null,null],[6,"OUT","","Data Output Value",null,null],[6,"OUTCLR","","Data Output Value Clear",null,null],[6,"OUTSET","","Data Output Value Set",null,null],[6,"OUTTGL","","Data Output Value Toggle",null,null],[6,"IN","","Data Input Value",null,null],[6,"CTRL","","Control",null,null],[6,"WRCONFIG","","Write Configuration",null,null],[6,"PMUX0_","","Peripheral Multiplexing n - Group 0",null,null],[6,"PMUX1_","","Peripheral Multiplexing n - Group 1",null,null],[6,"PINCFG0_","","Pin Configuration n - Group 0",null,null],[6,"PINCFG1_","","Pin Configuration n - Group 1",null,null],[0,"rtc","atsamd21g","Real-Time Counter",null,null],[3,"RegisterBlock","atsamd21g::rtc","Register block",null,null],[3,"MODE0","","Register block",null,null],[12,"ctrl","","0x00 - MODE0 Control",998,null],[12,"readreq","","0x02 - Read Request",998,null],[12,"evctrl","","0x04 - MODE0 Event Control",998,null],[12,"intenclr","","0x06 - MODE0 Interrupt Enable Clear",998,null],[12,"intenset","","0x07 - MODE0 Interrupt Enable Set",998,null],[12,"intflag","","0x08 - MODE0 Interrupt Flag Status and Clear",998,null],[12,"status","","0x0a - Status",998,null],[12,"dbgctrl","","0x0b - Debug Control",998,null],[12,"freqcorr","","0x0c - Frequency Correction",998,null],[12,"count","","0x10 - MODE0 Counter Value",998,null],[12,"comp","","0x18 - MODE0 Compare n Value",998,null],[3,"MODE1","","Register block",null,null],[12,"ctrl","","0x00 - MODE1 Control",999,null],[12,"readreq","","0x02 - Read Request",999,null],[12,"evctrl","","0x04 - MODE1 Event Control",999,null],[12,"intenclr","","0x06 - MODE1 Interrupt Enable Clear",999,null],[12,"intenset","","0x07 - MODE1 Interrupt Enable Set",999,null],[12,"intflag","","0x08 - MODE1 Interrupt Flag Status and Clear",999,null],[12,"status","","0x0a - Status",999,null],[12,"dbgctrl","","0x0b - Debug Control",999,null],[12,"freqcorr","","0x0c - Frequency Correction",999,null],[12,"count","","0x10 - MODE1 Counter Value",999,null],[12,"per","","0x14 - MODE1 Counter Period",999,null],[12,"comp","","0x18 - MODE1 Compare n Value",999,null],[3,"MODE2","","Register block",null,null],[12,"ctrl","","0x00 - MODE2 Control",1000,null],[12,"readreq","","0x02 - Read Request",1000,null],[12,"evctrl","","0x04 - MODE2 Event Control",1000,null],[12,"intenclr","","0x06 - MODE2 Interrupt Enable Clear",1000,null],[12,"intenset","","0x07 - MODE2 Interrupt Enable Set",1000,null],[12,"intflag","","0x08 - MODE2 Interrupt Flag Status and Clear",1000,null],[12,"status","","0x0a - Status",1000,null],[12,"dbgctrl","","0x0b - Debug Control",1000,null],[12,"freqcorr","","0x0c - Frequency Correction",1000,null],[12,"clock","","0x10 - MODE2 Clock Value",1000,null],[12,"alarm0","","0x18 - MODE2 Alarm n Value",1000,null],[12,"mask0","","0x1c - MODE2 Alarm n Mask",1000,null],[0,"mode0","","Register block 32-bit Counter with Single 32-bit Compare",null,null],[0,"ctrl","atsamd21g::rtc::mode0","MODE0 Control",null,null],[3,"SWRST_W","atsamd21g::rtc::mode0::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"MATCHCLR_W","","Write proxy for field `MATCHCLR`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",1001,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",1001,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",1001,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: CLK_RTC_CNT = GCLK_RTC/1",1002,null],[13,"DIV2","","1: CLK_RTC_CNT = GCLK_RTC/2",1002,null],[13,"DIV4","","2: CLK_RTC_CNT = GCLK_RTC/4",1002,null],[13,"DIV8","","3: CLK_RTC_CNT = GCLK_RTC/8",1002,null],[13,"DIV16","","4: CLK_RTC_CNT = GCLK_RTC/16",1002,null],[13,"DIV32","","5: CLK_RTC_CNT = GCLK_RTC/32",1002,null],[13,"DIV64","","6: CLK_RTC_CNT = GCLK_RTC/64",1002,null],[13,"DIV128","","7: CLK_RTC_CNT = GCLK_RTC/128",1002,null],[13,"DIV256","","8: CLK_RTC_CNT = GCLK_RTC/256",1002,null],[13,"DIV512","","9: CLK_RTC_CNT = GCLK_RTC/512",1002,null],[13,"DIV1024","","10: CLK_RTC_CNT = GCLK_RTC/1024",1002,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"MATCHCLR_R","","Reader of field `MATCHCLR`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",1003,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1003,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1003,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1004,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1004,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1004,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd21g::rtc::mode0::ctrl","Get enumerated values variant",1005,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1005,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1005,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",1005,[[]]],[11,"variant","","Writes `variant` to the field",1006,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",1006,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",1006,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",1006,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1006,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1007,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1007,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1007,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::rtc::mode0::ctrl","Get enumerated values variant",1008,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1008,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1008,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1008,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1008,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1008,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1008,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1008,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1008,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1008,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1008,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1008,[[]]],[11,"variant","","Writes `variant` to the field",1009,[[["prescaler_a",4]],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",1009,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",1009,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",1009,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",1009,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",1009,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",1009,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",1009,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",1009,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",1009,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",1009,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",1009,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1009,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",6,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"enable","atsamd21g::rtc::mode0::ctrl","Bit 1 - Enable",1010,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",1010,[[],["mode_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",1010,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",1010,[[],["prescaler_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",7,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"swrst","atsamd21g::rtc::mode0::ctrl","Bit 0 - Software Reset",1011,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1011,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",1011,[[],["mode_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",1011,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",1011,[[],["prescaler_w",3]]],[0,"readreq","atsamd21g::rtc::mode0","Read Request",null,null],[3,"RCONT_W","atsamd21g::rtc::mode0::readreq","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[11,"set_bit","","Sets the field bit",1012,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1012,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1012,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1013,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1013,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1013,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:5 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"addr","atsamd21g::rtc::mode0::readreq","Bits 0:5 - Address",1014,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1014,[[],["rcont_r",6]]],[11,"rcont","atsamd21g::generic","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"rcont","atsamd21g::rtc::mode0::readreq","Bit 14 - Read Continuously",1015,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1015,[[],["rreq_w",3]]],[0,"evctrl","atsamd21g::rtc::mode0","MODE0 Event Control",null,null],[3,"PEREO0_W","atsamd21g::rtc::mode0::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"CMPEO0_W","","Write proxy for field `CMPEO0`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"CMPEO0_R","","Reader of field `CMPEO0`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[11,"set_bit","","Sets the field bit",1016,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1016,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1016,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1017,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1017,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1017,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1018,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1018,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1018,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1019,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1019,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1019,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1020,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1020,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1020,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1021,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1021,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1021,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1022,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1022,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1022,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1023,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1023,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1023,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1024,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1024,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1024,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1025,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1025,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1025,[[],["w",6]]],[11,"pereo0","atsamd21g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",6,[[],["cmpeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd21g::rtc::mode0::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1026,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1026,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1026,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1026,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1026,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1026,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1026,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1026,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1026,[[],["cmpeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1026,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd21g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",7,[[],["cmpeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"pereo0","atsamd21g::rtc::mode0::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1027,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1027,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1027,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1027,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1027,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1027,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1027,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1027,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1027,[[],["cmpeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1027,[[],["ovfeo_w",3]]],[0,"intenclr","atsamd21g::rtc::mode0","MODE0 Interrupt Enable Clear",null,null],[3,"CMP0_W","atsamd21g::rtc::mode0::intenclr","Write proxy for field `CMP0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1028,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1028,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1028,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1029,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1029,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1029,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1030,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1030,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1030,[[],["w",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::rtc::mode0::intenclr","Bit 0 - Compare 0 Interrupt Enable",1031,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1031,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1031,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd21g::rtc::mode0::intenclr","Bit 0 - Compare 0 Interrupt Enable",1032,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1032,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1032,[[],["ovf_w",3]]],[0,"intenset","atsamd21g::rtc::mode0","MODE0 Interrupt Enable Set",null,null],[3,"CMP0_W","atsamd21g::rtc::mode0::intenset","Write proxy for field `CMP0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1033,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1033,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1033,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1034,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1034,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1034,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1035,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1035,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1035,[[],["w",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::rtc::mode0::intenset","Bit 0 - Compare 0 Interrupt Enable",1036,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1036,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1036,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd21g::rtc::mode0::intenset","Bit 0 - Compare 0 Interrupt Enable",1037,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1037,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1037,[[],["ovf_w",3]]],[0,"intflag","atsamd21g::rtc::mode0","MODE0 Interrupt Flag Status and Clear",null,null],[3,"CMP0_W","atsamd21g::rtc::mode0::intflag","Write proxy for field `CMP0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1038,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1038,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1038,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1039,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1039,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1040,[[],["w",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0",6,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::rtc::mode0::intflag","Bit 0 - Compare 0",1041,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",1041,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",1041,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0",7,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd21g::rtc::mode0::intflag","Bit 0 - Compare 0",1042,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",1042,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",1042,[[],["ovf_w",3]]],[0,"status","atsamd21g::rtc::mode0","Status",null,null],[6,"R","atsamd21g::rtc::mode0::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::rtc::mode0::status","Bit 7 - Synchronization Busy",1043,[[],["syncbusy_r",6]]],[0,"dbgctrl","atsamd21g::rtc::mode0","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::rtc::mode0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1044,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1044,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1044,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::rtc::mode0::dbgctrl","Bit 0 - Run During Debug",1045,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::rtc::mode0::dbgctrl","Bit 0 - Run During Debug",1046,[[],["dbgrun_w",3]]],[0,"freqcorr","atsamd21g::rtc::mode0","Frequency Correction",null,null],[3,"VALUE_W","atsamd21g::rtc::mode0::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",1047,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1048,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1048,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1048,[[],["w",6]]],[11,"value","atsamd21g::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd21g::rtc::mode0::freqcorr","Bits 0:6 - Correction Value",1049,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",1049,[[],["sign_r",6]]],[11,"value","atsamd21g::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd21g::rtc::mode0::freqcorr","Bits 0:6 - Correction Value",1050,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",1050,[[],["sign_w",3]]],[0,"count","atsamd21g::rtc::mode0","MODE0 Counter Value",null,null],[3,"COUNT_W","atsamd21g::rtc::mode0::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1051,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 0:31 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::rtc::mode0::count","Bits 0:31 - Counter Value",1052,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 0:31 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::rtc::mode0::count","Bits 0:31 - Counter Value",1053,[[],["count_w",3]]],[0,"comp","atsamd21g::rtc::mode0","MODE0 Compare n Value",null,null],[3,"COMP_W","atsamd21g::rtc::mode0::comp","Write proxy for field `COMP`",null,null],[6,"R","","Reader of register COMP%s",null,null],[6,"W","","Writer for register COMP%s",null,null],[6,"COMP_R","","Reader of field `COMP`",null,null],[11,"bits","","Writes raw bits to the field",1054,[[],["w",6]]],[11,"comp","atsamd21g::generic","Bits 0:31 - Compare Value",6,[[],["comp_r",6]]],[11,"comp","atsamd21g::rtc::mode0::comp","Bits 0:31 - Compare Value",1055,[[],["comp_r",6]]],[11,"comp","atsamd21g::generic","Bits 0:31 - Compare Value",7,[[],["comp_w",3]]],[11,"comp","atsamd21g::rtc::mode0::comp","Bits 0:31 - Compare Value",1056,[[],["comp_w",3]]],[6,"CTRL","atsamd21g::rtc::mode0","MODE0 Control",null,null],[6,"READREQ","","Read Request",null,null],[6,"EVCTRL","","MODE0 Event Control",null,null],[6,"INTENCLR","","MODE0 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE0 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE0 Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"COUNT","","MODE0 Counter Value",null,null],[6,"COMP","","MODE0 Compare n Value",null,null],[0,"mode1","atsamd21g::rtc","Register block 16-bit Counter with Two 16-bit Compares",null,null],[0,"ctrl","atsamd21g::rtc::mode1","MODE1 Control",null,null],[3,"SWRST_W","atsamd21g::rtc::mode1::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",1057,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",1057,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",1057,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: CLK_RTC_CNT = GCLK_RTC/1",1058,null],[13,"DIV2","","1: CLK_RTC_CNT = GCLK_RTC/2",1058,null],[13,"DIV4","","2: CLK_RTC_CNT = GCLK_RTC/4",1058,null],[13,"DIV8","","3: CLK_RTC_CNT = GCLK_RTC/8",1058,null],[13,"DIV16","","4: CLK_RTC_CNT = GCLK_RTC/16",1058,null],[13,"DIV32","","5: CLK_RTC_CNT = GCLK_RTC/32",1058,null],[13,"DIV64","","6: CLK_RTC_CNT = GCLK_RTC/64",1058,null],[13,"DIV128","","7: CLK_RTC_CNT = GCLK_RTC/128",1058,null],[13,"DIV256","","8: CLK_RTC_CNT = GCLK_RTC/256",1058,null],[13,"DIV512","","9: CLK_RTC_CNT = GCLK_RTC/512",1058,null],[13,"DIV1024","","10: CLK_RTC_CNT = GCLK_RTC/1024",1058,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",1059,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1059,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1059,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1060,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1060,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1060,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd21g::rtc::mode1::ctrl","Get enumerated values variant",1061,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1061,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1061,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",1061,[[]]],[11,"variant","","Writes `variant` to the field",1062,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",1062,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",1062,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",1062,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1062,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::rtc::mode1::ctrl","Get enumerated values variant",1063,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1063,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1063,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1063,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1063,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1063,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1063,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1063,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1063,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1063,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1063,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1063,[[]]],[11,"variant","","Writes `variant` to the field",1064,[[["prescaler_a",4]],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",1064,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",1064,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",1064,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",1064,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",1064,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",1064,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",1064,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",1064,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",1064,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",1064,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",1064,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1064,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"enable","atsamd21g::rtc::mode1::ctrl","Bit 1 - Enable",1065,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",1065,[[],["mode_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",1065,[[],["prescaler_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"swrst","atsamd21g::rtc::mode1::ctrl","Bit 0 - Software Reset",1066,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1066,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",1066,[[],["mode_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",1066,[[],["prescaler_w",3]]],[0,"readreq","atsamd21g::rtc::mode1","Read Request",null,null],[3,"RCONT_W","atsamd21g::rtc::mode1::readreq","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[11,"set_bit","","Sets the field bit",1067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1067,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1068,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1068,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1068,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:5 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"addr","atsamd21g::rtc::mode1::readreq","Bits 0:5 - Address",1069,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1069,[[],["rcont_r",6]]],[11,"rcont","atsamd21g::generic","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"rcont","atsamd21g::rtc::mode1::readreq","Bit 14 - Read Continuously",1070,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1070,[[],["rreq_w",3]]],[0,"evctrl","atsamd21g::rtc::mode1","MODE1 Event Control",null,null],[3,"PEREO0_W","atsamd21g::rtc::mode1::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"CMPEO0_W","","Write proxy for field `CMPEO0`",null,null],[3,"CMPEO1_W","","Write proxy for field `CMPEO1`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"CMPEO0_R","","Reader of field `CMPEO0`",null,null],[6,"CMPEO1_R","","Reader of field `CMPEO1`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[11,"set_bit","","Sets the field bit",1071,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1071,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1071,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1072,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1072,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1072,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1073,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1073,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1073,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1074,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1074,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1074,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1075,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1075,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1075,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1076,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1076,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1076,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1077,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1077,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1077,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1078,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1078,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1078,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1079,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1079,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1079,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1080,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1080,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1080,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1081,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1081,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1081,[[],["w",6]]],[11,"pereo0","atsamd21g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",6,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",6,[[],["cmpeo1_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd21g::rtc::mode1::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1082,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1082,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1082,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1082,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1082,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1082,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1082,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1082,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1082,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",1082,[[],["cmpeo1_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1082,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd21g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",7,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",7,[[],["cmpeo1_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"pereo0","atsamd21g::rtc::mode1::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1083,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1083,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1083,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1083,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1083,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1083,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1083,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1083,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1083,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",1083,[[],["cmpeo1_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1083,[[],["ovfeo_w",3]]],[0,"intenclr","atsamd21g::rtc::mode1","MODE1 Interrupt Enable Clear",null,null],[3,"CMP0_W","atsamd21g::rtc::mode1::intenclr","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1084,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1085,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1085,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1085,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1086,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1086,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1086,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1087,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1087,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1087,[[],["w",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::rtc::mode1::intenclr","Bit 0 - Compare 0 Interrupt Enable",1088,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",1088,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1088,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1088,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd21g::rtc::mode1::intenclr","Bit 0 - Compare 0 Interrupt Enable",1089,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",1089,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1089,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1089,[[],["ovf_w",3]]],[0,"intenset","atsamd21g::rtc::mode1","MODE1 Interrupt Enable Set",null,null],[3,"CMP0_W","atsamd21g::rtc::mode1::intenset","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1090,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1090,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1090,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1091,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1091,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1091,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1092,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1092,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1092,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1093,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1093,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1093,[[],["w",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::rtc::mode1::intenset","Bit 0 - Compare 0 Interrupt Enable",1094,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",1094,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1094,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1094,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd21g::rtc::mode1::intenset","Bit 0 - Compare 0 Interrupt Enable",1095,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",1095,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1095,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1095,[[],["ovf_w",3]]],[0,"intflag","atsamd21g::rtc::mode1","MODE1 Interrupt Flag Status and Clear",null,null],[3,"CMP0_W","atsamd21g::rtc::mode1::intflag","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1097,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1098,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1098,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1098,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1099,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1099,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1099,[[],["w",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1",6,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::rtc::mode1::intflag","Bit 0 - Compare 0",1100,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1",1100,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",1100,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",1100,[[],["ovf_r",6]]],[11,"cmp0","atsamd21g::generic","Bit 0 - Compare 0",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1",7,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd21g::rtc::mode1::intflag","Bit 0 - Compare 0",1101,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1",1101,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",1101,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",1101,[[],["ovf_w",3]]],[0,"status","atsamd21g::rtc::mode1","Status",null,null],[6,"R","atsamd21g::rtc::mode1::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::rtc::mode1::status","Bit 7 - Synchronization Busy",1102,[[],["syncbusy_r",6]]],[0,"dbgctrl","atsamd21g::rtc::mode1","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::rtc::mode1::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1103,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::rtc::mode1::dbgctrl","Bit 0 - Run During Debug",1104,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::rtc::mode1::dbgctrl","Bit 0 - Run During Debug",1105,[[],["dbgrun_w",3]]],[0,"freqcorr","atsamd21g::rtc::mode1","Frequency Correction",null,null],[3,"VALUE_W","atsamd21g::rtc::mode1::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",1106,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1107,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1107,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1107,[[],["w",6]]],[11,"value","atsamd21g::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd21g::rtc::mode1::freqcorr","Bits 0:6 - Correction Value",1108,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",1108,[[],["sign_r",6]]],[11,"value","atsamd21g::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd21g::rtc::mode1::freqcorr","Bits 0:6 - Correction Value",1109,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",1109,[[],["sign_w",3]]],[0,"count","atsamd21g::rtc::mode1","MODE1 Counter Value",null,null],[3,"COUNT_W","atsamd21g::rtc::mode1::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1110,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 0:15 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::rtc::mode1::count","Bits 0:15 - Counter Value",1111,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 0:15 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::rtc::mode1::count","Bits 0:15 - Counter Value",1112,[[],["count_w",3]]],[0,"per","atsamd21g::rtc::mode1","MODE1 Counter Period",null,null],[3,"PER_W","atsamd21g::rtc::mode1::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1113,[[],["w",6]]],[11,"per","atsamd21g::generic","Bits 0:15 - Counter Period",6,[[],["per_r",6]]],[11,"per","atsamd21g::rtc::mode1::per","Bits 0:15 - Counter Period",1114,[[],["per_r",6]]],[11,"per","atsamd21g::generic","Bits 0:15 - Counter Period",7,[[],["per_w",3]]],[11,"per","atsamd21g::rtc::mode1::per","Bits 0:15 - Counter Period",1115,[[],["per_w",3]]],[0,"comp","atsamd21g::rtc::mode1","MODE1 Compare n Value",null,null],[3,"COMP_W","atsamd21g::rtc::mode1::comp","Write proxy for field `COMP`",null,null],[6,"R","","Reader of register COMP%s",null,null],[6,"W","","Writer for register COMP%s",null,null],[6,"COMP_R","","Reader of field `COMP`",null,null],[11,"bits","","Writes raw bits to the field",1116,[[],["w",6]]],[11,"comp","atsamd21g::generic","Bits 0:15 - Compare Value",6,[[],["comp_r",6]]],[11,"comp","atsamd21g::rtc::mode1::comp","Bits 0:15 - Compare Value",1117,[[],["comp_r",6]]],[11,"comp","atsamd21g::generic","Bits 0:15 - Compare Value",7,[[],["comp_w",3]]],[11,"comp","atsamd21g::rtc::mode1::comp","Bits 0:15 - Compare Value",1118,[[],["comp_w",3]]],[6,"CTRL","atsamd21g::rtc::mode1","MODE1 Control",null,null],[6,"READREQ","","Read Request",null,null],[6,"EVCTRL","","MODE1 Event Control",null,null],[6,"INTENCLR","","MODE1 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE1 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE1 Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"COUNT","","MODE1 Counter Value",null,null],[6,"PER","","MODE1 Counter Period",null,null],[6,"COMP","","MODE1 Compare n Value",null,null],[0,"mode2","atsamd21g::rtc","Register block Clock/Calendar with Alarm",null,null],[0,"ctrl","atsamd21g::rtc::mode2","MODE2 Control",null,null],[3,"SWRST_W","atsamd21g::rtc::mode2::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"CLKREP_W","","Write proxy for field `CLKREP`",null,null],[3,"MATCHCLR_W","","Write proxy for field `MATCHCLR`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",1119,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",1119,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",1119,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: CLK_RTC_CNT = GCLK_RTC/1",1120,null],[13,"DIV2","","1: CLK_RTC_CNT = GCLK_RTC/2",1120,null],[13,"DIV4","","2: CLK_RTC_CNT = GCLK_RTC/4",1120,null],[13,"DIV8","","3: CLK_RTC_CNT = GCLK_RTC/8",1120,null],[13,"DIV16","","4: CLK_RTC_CNT = GCLK_RTC/16",1120,null],[13,"DIV32","","5: CLK_RTC_CNT = GCLK_RTC/32",1120,null],[13,"DIV64","","6: CLK_RTC_CNT = GCLK_RTC/64",1120,null],[13,"DIV128","","7: CLK_RTC_CNT = GCLK_RTC/128",1120,null],[13,"DIV256","","8: CLK_RTC_CNT = GCLK_RTC/256",1120,null],[13,"DIV512","","9: CLK_RTC_CNT = GCLK_RTC/512",1120,null],[13,"DIV1024","","10: CLK_RTC_CNT = GCLK_RTC/1024",1120,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"CLKREP_R","","Reader of field `CLKREP`",null,null],[6,"MATCHCLR_R","","Reader of field `MATCHCLR`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",1121,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1121,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1121,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1122,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1122,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1122,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd21g::rtc::mode2::ctrl","Get enumerated values variant",1123,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1123,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1123,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",1123,[[]]],[11,"variant","","Writes `variant` to the field",1124,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",1124,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",1124,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",1124,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1124,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1126,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::rtc::mode2::ctrl","Get enumerated values variant",1127,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1127,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1127,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1127,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1127,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1127,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1127,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1127,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1127,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1127,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1127,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1127,[[]]],[11,"variant","","Writes `variant` to the field",1128,[[["prescaler_a",4]],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",1128,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",1128,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",1128,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",1128,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",1128,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",1128,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",1128,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",1128,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",1128,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",1128,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",1128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1128,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"clkrep","","Bit 6 - Clock Representation",6,[[],["clkrep_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",6,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"enable","atsamd21g::rtc::mode2::ctrl","Bit 1 - Enable",1129,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",1129,[[],["mode_r",6]]],[11,"clkrep","","Bit 6 - Clock Representation",1129,[[],["clkrep_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",1129,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",1129,[[],["prescaler_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"clkrep","","Bit 6 - Clock Representation",7,[[],["clkrep_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",7,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"swrst","atsamd21g::rtc::mode2::ctrl","Bit 0 - Software Reset",1130,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1130,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",1130,[[],["mode_w",3]]],[11,"clkrep","","Bit 6 - Clock Representation",1130,[[],["clkrep_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",1130,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",1130,[[],["prescaler_w",3]]],[0,"readreq","atsamd21g::rtc::mode2","Read Request",null,null],[3,"RCONT_W","atsamd21g::rtc::mode2::readreq","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[11,"set_bit","","Sets the field bit",1131,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1131,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1131,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1132,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1132,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1132,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:5 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"addr","atsamd21g::rtc::mode2::readreq","Bits 0:5 - Address",1133,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1133,[[],["rcont_r",6]]],[11,"rcont","atsamd21g::generic","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"rcont","atsamd21g::rtc::mode2::readreq","Bit 14 - Read Continuously",1134,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1134,[[],["rreq_w",3]]],[0,"evctrl","atsamd21g::rtc::mode2","MODE2 Event Control",null,null],[3,"PEREO0_W","atsamd21g::rtc::mode2::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"ALARMEO0_W","","Write proxy for field `ALARMEO0`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"ALARMEO0_R","","Reader of field `ALARMEO0`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[11,"set_bit","","Sets the field bit",1135,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1135,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1135,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1136,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1136,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1136,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1138,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1139,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1139,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1139,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1140,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1140,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1140,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1141,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1142,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1142,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1142,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1143,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1143,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1144,[[],["w",6]]],[11,"pereo0","atsamd21g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",6,[[],["alarmeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd21g::rtc::mode2::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1145,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1145,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1145,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1145,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1145,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1145,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1145,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1145,[[],["pereo7_r",6]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",1145,[[],["alarmeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1145,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd21g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",7,[[],["alarmeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"pereo0","atsamd21g::rtc::mode2::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1146,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1146,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1146,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1146,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1146,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1146,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1146,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1146,[[],["pereo7_w",3]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",1146,[[],["alarmeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1146,[[],["ovfeo_w",3]]],[0,"intenclr","atsamd21g::rtc::mode2","MODE2 Interrupt Enable Clear",null,null],[3,"ALARM0_W","atsamd21g::rtc::mode2::intenclr","Write proxy for field `ALARM0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1149,[[],["w",6]]],[11,"alarm0","atsamd21g::generic","Bit 0 - Alarm 0 Interrupt Enable",6,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"alarm0","atsamd21g::rtc::mode2::intenclr","Bit 0 - Alarm 0 Interrupt Enable",1150,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1150,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1150,[[],["ovf_r",6]]],[11,"alarm0","atsamd21g::generic","Bit 0 - Alarm 0 Interrupt Enable",7,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"alarm0","atsamd21g::rtc::mode2::intenclr","Bit 0 - Alarm 0 Interrupt Enable",1151,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1151,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1151,[[],["ovf_w",3]]],[0,"intenset","atsamd21g::rtc::mode2","MODE2 Interrupt Enable Set",null,null],[3,"ALARM0_W","atsamd21g::rtc::mode2::intenset","Write proxy for field `ALARM0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1152,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1152,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1152,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1154,[[],["w",6]]],[11,"alarm0","atsamd21g::generic","Bit 0 - Alarm 0 Interrupt Enable",6,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"alarm0","atsamd21g::rtc::mode2::intenset","Bit 0 - Alarm 0 Interrupt Enable",1155,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1155,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1155,[[],["ovf_r",6]]],[11,"alarm0","atsamd21g::generic","Bit 0 - Alarm 0 Interrupt Enable",7,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"alarm0","atsamd21g::rtc::mode2::intenset","Bit 0 - Alarm 0 Interrupt Enable",1156,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",1156,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",1156,[[],["ovf_w",3]]],[0,"intflag","atsamd21g::rtc::mode2","MODE2 Interrupt Flag Status and Clear",null,null],[3,"ALARM0_W","atsamd21g::rtc::mode2::intflag","Write proxy for field `ALARM0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1157,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1157,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1157,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1158,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1158,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1158,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1159,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1159,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1159,[[],["w",6]]],[11,"alarm0","atsamd21g::generic","Bit 0 - Alarm 0",6,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",6,[[],["ovf_r",6]]],[11,"alarm0","atsamd21g::rtc::mode2::intflag","Bit 0 - Alarm 0",1160,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",1160,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",1160,[[],["ovf_r",6]]],[11,"alarm0","atsamd21g::generic","Bit 0 - Alarm 0",7,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",7,[[],["ovf_w",3]]],[11,"alarm0","atsamd21g::rtc::mode2::intflag","Bit 0 - Alarm 0",1161,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",1161,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",1161,[[],["ovf_w",3]]],[0,"status","atsamd21g::rtc::mode2","Status",null,null],[6,"R","atsamd21g::rtc::mode2::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::rtc::mode2::status","Bit 7 - Synchronization Busy",1162,[[],["syncbusy_r",6]]],[0,"dbgctrl","atsamd21g::rtc::mode2","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::rtc::mode2::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1163,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1163,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1163,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::rtc::mode2::dbgctrl","Bit 0 - Run During Debug",1164,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::rtc::mode2::dbgctrl","Bit 0 - Run During Debug",1165,[[],["dbgrun_w",3]]],[0,"freqcorr","atsamd21g::rtc::mode2","Frequency Correction",null,null],[3,"VALUE_W","atsamd21g::rtc::mode2::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",1166,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1167,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1167,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1167,[[],["w",6]]],[11,"value","atsamd21g::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd21g::rtc::mode2::freqcorr","Bits 0:6 - Correction Value",1168,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",1168,[[],["sign_r",6]]],[11,"value","atsamd21g::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd21g::rtc::mode2::freqcorr","Bits 0:6 - Correction Value",1169,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",1169,[[],["sign_w",3]]],[0,"clock","atsamd21g::rtc::mode2","MODE2 Clock Value",null,null],[3,"SECOND_W","atsamd21g::rtc::mode2::clock","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: AM when CLKREP in 12-hour",1170,null],[13,"PM","","16: PM when CLKREP in 12-hour",1170,null],[6,"R","","Reader of register CLOCK",null,null],[6,"W","","Writer for register CLOCK",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",1171,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1172,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd21g::rtc::mode2::clock","Get enumerated values variant",1173,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",1173,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",1173,[[]]],[11,"variant","","Writes `variant` to the field",1174,[[["hour_a",4]],["w",6]]],[11,"am","","AM when CLKREP in 12-hour",1174,[[],["w",6]]],[11,"pm","","PM when CLKREP in 12-hour",1174,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1174,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1175,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1176,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1177,[[],["w",6]]],[11,"second","atsamd21g::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd21g::rtc::mode2::clock","Bits 0:5 - Second",1178,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",1178,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",1178,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",1178,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",1178,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",1178,[[],["year_r",6]]],[11,"second","atsamd21g::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd21g::rtc::mode2::clock","Bits 0:5 - Second",1179,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",1179,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",1179,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",1179,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",1179,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",1179,[[],["year_w",3]]],[0,"alarm","atsamd21g::rtc::mode2","MODE2 Alarm n Value",null,null],[3,"SECOND_W","atsamd21g::rtc::mode2::alarm","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: Morning hour",1180,null],[13,"PM","","16: Afternoon hour",1180,null],[6,"R","","Reader of register ALARM%s",null,null],[6,"W","","Writer for register ALARM%s",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",1181,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1182,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd21g::rtc::mode2::alarm","Get enumerated values variant",1183,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",1183,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",1183,[[]]],[11,"variant","","Writes `variant` to the field",1184,[[["hour_a",4]],["w",6]]],[11,"am","","Morning hour",1184,[[],["w",6]]],[11,"pm","","Afternoon hour",1184,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1184,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1185,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1186,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1187,[[],["w",6]]],[11,"second","atsamd21g::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd21g::rtc::mode2::alarm","Bits 0:5 - Second",1188,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",1188,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",1188,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",1188,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",1188,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",1188,[[],["year_r",6]]],[11,"second","atsamd21g::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd21g::rtc::mode2::alarm","Bits 0:5 - Second",1189,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",1189,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",1189,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",1189,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",1189,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",1189,[[],["year_w",3]]],[0,"mask","atsamd21g::rtc::mode2","MODE2 Alarm n Mask",null,null],[3,"SEL_W","atsamd21g::rtc::mode2::mask","Write proxy for field `SEL`",null,null],[4,"SEL_A","","Alarm Mask Selection",null,null],[13,"OFF","","0: Alarm Disabled",1190,null],[13,"SS","","1: Match seconds only",1190,null],[13,"MMSS","","2: Match seconds and minutes only",1190,null],[13,"HHMMSS","","3: Match seconds, minutes, and hours only",1190,null],[13,"DDHHMMSS","","4: Match seconds, minutes, hours, and days only",1190,null],[13,"MMDDHHMMSS","","5: Match seconds, minutes, hours, days, and months only",1190,null],[13,"YYMMDDHHMMSS","","6: Match seconds, minutes, hours, days, months, and years",1190,null],[6,"R","","Reader of register MASK%s",null,null],[6,"W","","Writer for register MASK%s",null,null],[6,"SEL_R","","Reader of field `SEL`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",6,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",6,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",6,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",6,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",6,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",6,[[]]],[11,"variant","atsamd21g::rtc::mode2::mask","Get enumerated values variant",1191,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1191,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",1191,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",1191,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",1191,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",1191,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",1191,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",1191,[[]]],[11,"variant","","Writes `variant` to the field",1192,[[["sel_a",4]],["w",6]]],[11,"off","","Alarm Disabled",1192,[[],["w",6]]],[11,"ss","","Match seconds only",1192,[[],["w",6]]],[11,"mmss","","Match seconds and minutes only",1192,[[],["w",6]]],[11,"hhmmss","","Match seconds, minutes, and hours only",1192,[[],["w",6]]],[11,"ddhhmmss","","Match seconds, minutes, hours, and days only",1192,[[],["w",6]]],[11,"mmddhhmmss","","Match seconds, minutes, hours, days, and months only",1192,[[],["w",6]]],[11,"yymmddhhmmss","","Match seconds, minutes, hours, days, months, and years",1192,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1192,[[],["w",6]]],[11,"sel","atsamd21g::generic","Bits 0:2 - Alarm Mask Selection",6,[[],["sel_r",6]]],[11,"sel","atsamd21g::rtc::mode2::mask","Bits 0:2 - Alarm Mask Selection",1193,[[],["sel_r",6]]],[11,"sel","atsamd21g::generic","Bits 0:2 - Alarm Mask Selection",7,[[],["sel_w",3]]],[11,"sel","atsamd21g::rtc::mode2::mask","Bits 0:2 - Alarm Mask Selection",1194,[[],["sel_w",3]]],[6,"CTRL","atsamd21g::rtc::mode2","MODE2 Control",null,null],[6,"READREQ","","Read Request",null,null],[6,"EVCTRL","","MODE2 Event Control",null,null],[6,"INTENCLR","","MODE2 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE2 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE2 Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"CLOCK","","MODE2 Clock Value",null,null],[6,"ALARM","","MODE2 Alarm n Value",null,null],[6,"MASK","","MODE2 Alarm n Mask",null,null],[11,"mode2","atsamd21g::rtc","0x00 - Clock/Calendar with Alarm",1195,[[],["mode2",3]]],[11,"mode2_mut","","0x00 - Clock/Calendar with Alarm",1195,[[],["mode2",3]]],[11,"mode1","","0x00 - 16-bit Counter with Two 16-bit Compares",1195,[[],["mode1",3]]],[11,"mode1_mut","","0x00 - 16-bit Counter with Two 16-bit Compares",1195,[[],["mode1",3]]],[11,"mode0","","0x00 - 32-bit Counter with Single 32-bit Compare",1195,[[],["mode0",3]]],[11,"mode0_mut","","0x00 - 32-bit Counter with Single 32-bit Compare",1195,[[],["mode0",3]]],[0,"sercom0","atsamd21g","Serial Communication Interface 0",null,null],[3,"RegisterBlock","atsamd21g::sercom0","Register block",null,null],[3,"I2CM","","Register block",null,null],[12,"ctrla","","0x00 - I2CM Control A",1196,null],[12,"ctrlb","","0x04 - I2CM Control B",1196,null],[12,"baud","","0x0c - I2CM Baud Rate",1196,null],[12,"intenclr","","0x14 - I2CM Interrupt Enable Clear",1196,null],[12,"intenset","","0x16 - I2CM Interrupt Enable Set",1196,null],[12,"intflag","","0x18 - I2CM Interrupt Flag Status and Clear",1196,null],[12,"status","","0x1a - I2CM Status",1196,null],[12,"syncbusy","","0x1c - I2CM Syncbusy",1196,null],[12,"addr","","0x24 - I2CM Address",1196,null],[12,"data","","0x28 - I2CM Data",1196,null],[12,"dbgctrl","","0x30 - I2CM Debug Control",1196,null],[3,"I2CS","","Register block",null,null],[12,"ctrla","","0x00 - I2CS Control A",1197,null],[12,"ctrlb","","0x04 - I2CS Control B",1197,null],[12,"intenclr","","0x14 - I2CS Interrupt Enable Clear",1197,null],[12,"intenset","","0x16 - I2CS Interrupt Enable Set",1197,null],[12,"intflag","","0x18 - I2CS Interrupt Flag Status and Clear",1197,null],[12,"status","","0x1a - I2CS Status",1197,null],[12,"syncbusy","","0x1c - I2CS Syncbusy",1197,null],[12,"addr","","0x24 - I2CS Address",1197,null],[12,"data","","0x28 - I2CS Data",1197,null],[3,"SPI","","Register block",null,null],[12,"ctrla","","0x00 - SPI Control A",1198,null],[12,"ctrlb","","0x04 - SPI Control B",1198,null],[12,"baud","","0x0c - SPI Baud Rate",1198,null],[12,"intenclr","","0x14 - SPI Interrupt Enable Clear",1198,null],[12,"intenset","","0x16 - SPI Interrupt Enable Set",1198,null],[12,"intflag","","0x18 - SPI Interrupt Flag Status and Clear",1198,null],[12,"status","","0x1a - SPI Status",1198,null],[12,"syncbusy","","0x1c - SPI Syncbusy",1198,null],[12,"addr","","0x24 - SPI Address",1198,null],[12,"data","","0x28 - SPI Data",1198,null],[12,"dbgctrl","","0x30 - SPI Debug Control",1198,null],[3,"USART","","Register block",null,null],[12,"ctrla","","0x00 - USART Control A",1199,null],[12,"ctrlb","","0x04 - USART Control B",1199,null],[12,"rxpl","","0x0e - USART Receive Pulse Length",1199,null],[12,"intenclr","","0x14 - USART Interrupt Enable Clear",1199,null],[12,"intenset","","0x16 - USART Interrupt Enable Set",1199,null],[12,"intflag","","0x18 - USART Interrupt Flag Status and Clear",1199,null],[12,"status","","0x1a - USART Status",1199,null],[12,"syncbusy","","0x1c - USART Syncbusy",1199,null],[12,"data","","0x28 - USART Data",1199,null],[12,"dbgctrl","","0x30 - USART Debug Control",1199,null],[0,"i2cm","","Register block I2C Master Mode",null,null],[0,"ctrla","atsamd21g::sercom0::i2cm","I2CM Control A",null,null],[3,"SWRST_W","atsamd21g::sercom0::i2cm::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PINOUT_W","","Write proxy for field `PINOUT`",null,null],[3,"SDAHOLD_W","","Write proxy for field `SDAHOLD`",null,null],[3,"MEXTTOEN_W","","Write proxy for field `MEXTTOEN`",null,null],[3,"SEXTTOEN_W","","Write proxy for field `SEXTTOEN`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"SCLSM_W","","Write proxy for field `SCLSM`",null,null],[3,"INACTOUT_W","","Write proxy for field `INACTOUT`",null,null],[3,"LOWTOUTEN_W","","Write proxy for field `LOWTOUTEN`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1200,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1200,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1200,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1200,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1200,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1200,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PINOUT_R","","Reader of field `PINOUT`",null,null],[6,"SDAHOLD_R","","Reader of field `SDAHOLD`",null,null],[6,"MEXTTOEN_R","","Reader of field `MEXTTOEN`",null,null],[6,"SEXTTOEN_R","","Reader of field `SEXTTOEN`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"SCLSM_R","","Reader of field `SCLSM`",null,null],[6,"INACTOUT_R","","Reader of field `INACTOUT`",null,null],[6,"LOWTOUTEN_R","","Reader of field `LOWTOUTEN`",null,null],[11,"set_bit","","Sets the field bit",1201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1202,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd21g::sercom0::i2cm::ctrla","Get enumerated values variant",1203,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1203,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1203,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1203,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1203,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1203,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1203,[[]]],[11,"variant","","Writes `variant` to the field",1204,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1204,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1204,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1204,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1204,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1204,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1204,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1204,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1205,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1206,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1206,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1206,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1207,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1208,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1208,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1208,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1209,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1209,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1209,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1211,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1212,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1213,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1213,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1213,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",6,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",6,[[],["sdahold_r",6]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",6,[[],["mexttoen_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",6,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",6,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",6,[[],["sclsm_r",6]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",6,[[],["inactout_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",6,[[],["lowtouten_r",6]]],[11,"swrst","atsamd21g::sercom0::i2cm::ctrla","Bit 0 - Software Reset",1214,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1214,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1214,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run in Standby",1214,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",1214,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1214,[[],["sdahold_r",6]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",1214,[[],["mexttoen_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1214,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",1214,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1214,[[],["sclsm_r",6]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",1214,[[],["inactout_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1214,[[],["lowtouten_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",7,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",7,[[],["sdahold_w",3]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",7,[[],["mexttoen_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",7,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",7,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",7,[[],["sclsm_w",3]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",7,[[],["inactout_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",7,[[],["lowtouten_w",3]]],[11,"swrst","atsamd21g::sercom0::i2cm::ctrla","Bit 0 - Software Reset",1215,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1215,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1215,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run in Standby",1215,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",1215,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1215,[[],["sdahold_w",3]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",1215,[[],["mexttoen_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1215,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",1215,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1215,[[],["sclsm_w",3]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",1215,[[],["inactout_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1215,[[],["lowtouten_w",3]]],[0,"ctrlb","atsamd21g::sercom0::i2cm","I2CM Control B",null,null],[3,"SMEN_W","atsamd21g::sercom0::i2cm::ctrlb","Write proxy for field `SMEN`",null,null],[3,"QCEN_W","","Write proxy for field `QCEN`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[3,"ACKACT_W","","Write proxy for field `ACKACT`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"SMEN_R","","Reader of field `SMEN`",null,null],[6,"QCEN_R","","Reader of field `QCEN`",null,null],[6,"ACKACT_R","","Reader of field `ACKACT`",null,null],[11,"set_bit","","Sets the field bit",1216,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1216,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1216,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1217,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1217,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1217,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1218,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1219,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1219,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1219,[[],["w",6]]],[11,"smen","atsamd21g::generic","Bit 8 - Smart Mode Enable",6,[[],["smen_r",6]]],[11,"qcen","","Bit 9 - Quick Command Enable",6,[[],["qcen_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",6,[[],["ackact_r",6]]],[11,"smen","atsamd21g::sercom0::i2cm::ctrlb","Bit 8 - Smart Mode Enable",1220,[[],["smen_r",6]]],[11,"qcen","","Bit 9 - Quick Command Enable",1220,[[],["qcen_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",1220,[[],["ackact_r",6]]],[11,"smen","atsamd21g::generic","Bit 8 - Smart Mode Enable",7,[[],["smen_w",3]]],[11,"qcen","","Bit 9 - Quick Command Enable",7,[[],["qcen_w",3]]],[11,"cmd","","Bits 16:17 - Command",7,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",7,[[],["ackact_w",3]]],[11,"smen","atsamd21g::sercom0::i2cm::ctrlb","Bit 8 - Smart Mode Enable",1221,[[],["smen_w",3]]],[11,"qcen","","Bit 9 - Quick Command Enable",1221,[[],["qcen_w",3]]],[11,"cmd","","Bits 16:17 - Command",1221,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",1221,[[],["ackact_w",3]]],[0,"baud","atsamd21g::sercom0::i2cm","I2CM Baud Rate",null,null],[3,"BAUD_W","atsamd21g::sercom0::i2cm::baud","Write proxy for field `BAUD`",null,null],[3,"BAUDLOW_W","","Write proxy for field `BAUDLOW`",null,null],[3,"HSBAUD_W","","Write proxy for field `HSBAUD`",null,null],[3,"HSBAUDLOW_W","","Write proxy for field `HSBAUDLOW`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"BAUDLOW_R","","Reader of field `BAUDLOW`",null,null],[6,"HSBAUD_R","","Reader of field `HSBAUD`",null,null],[6,"HSBAUDLOW_R","","Reader of field `HSBAUDLOW`",null,null],[11,"bits","","Writes raw bits to the field",1222,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1223,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1224,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1225,[[],["w",6]]],[11,"baud","atsamd21g::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",6,[[],["baudlow_r",6]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",6,[[],["hsbaud_r",6]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",6,[[],["hsbaudlow_r",6]]],[11,"baud","atsamd21g::sercom0::i2cm::baud","Bits 0:7 - Baud Rate Value",1226,[[],["baud_r",6]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",1226,[[],["baudlow_r",6]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",1226,[[],["hsbaud_r",6]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",1226,[[],["hsbaudlow_r",6]]],[11,"baud","atsamd21g::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",7,[[],["baudlow_w",3]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",7,[[],["hsbaud_w",3]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",7,[[],["hsbaudlow_w",3]]],[11,"baud","atsamd21g::sercom0::i2cm::baud","Bits 0:7 - Baud Rate Value",1227,[[],["baud_w",3]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",1227,[[],["baudlow_w",3]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",1227,[[],["hsbaud_w",3]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",1227,[[],["hsbaudlow_w",3]]],[0,"intenclr","atsamd21g::sercom0::i2cm","I2CM Interrupt Enable Clear",null,null],[3,"MB_W","atsamd21g::sercom0::i2cm::intenclr","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1228,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1228,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1228,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1229,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1229,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1229,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1230,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1230,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1230,[[],["w",6]]],[11,"mb","atsamd21g::generic","Bit 0 - Master On Bus Interrupt Disable",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"mb","atsamd21g::sercom0::i2cm::intenclr","Bit 0 - Master On Bus Interrupt Disable",1231,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",1231,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1231,[[],["error_r",6]]],[11,"mb","atsamd21g::generic","Bit 0 - Master On Bus Interrupt Disable",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"mb","atsamd21g::sercom0::i2cm::intenclr","Bit 0 - Master On Bus Interrupt Disable",1232,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",1232,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1232,[[],["error_w",3]]],[0,"intenset","atsamd21g::sercom0::i2cm","I2CM Interrupt Enable Set",null,null],[3,"MB_W","atsamd21g::sercom0::i2cm::intenset","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1233,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1233,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1233,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1234,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1234,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1234,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1235,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1235,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1235,[[],["w",6]]],[11,"mb","atsamd21g::generic","Bit 0 - Master On Bus Interrupt Enable",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"mb","atsamd21g::sercom0::i2cm::intenset","Bit 0 - Master On Bus Interrupt Enable",1236,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",1236,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1236,[[],["error_r",6]]],[11,"mb","atsamd21g::generic","Bit 0 - Master On Bus Interrupt Enable",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"mb","atsamd21g::sercom0::i2cm::intenset","Bit 0 - Master On Bus Interrupt Enable",1237,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",1237,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1237,[[],["error_w",3]]],[0,"intflag","atsamd21g::sercom0::i2cm","I2CM Interrupt Flag Status and Clear",null,null],[3,"MB_W","atsamd21g::sercom0::i2cm::intflag","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1238,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1238,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1238,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1239,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1239,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1239,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1240,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1240,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1240,[[],["w",6]]],[11,"mb","atsamd21g::generic","Bit 0 - Master On Bus Interrupt",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"mb","atsamd21g::sercom0::i2cm::intflag","Bit 0 - Master On Bus Interrupt",1241,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",1241,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1241,[[],["error_r",6]]],[11,"mb","atsamd21g::generic","Bit 0 - Master On Bus Interrupt",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"mb","atsamd21g::sercom0::i2cm::intflag","Bit 0 - Master On Bus Interrupt",1242,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",1242,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1242,[[],["error_w",3]]],[0,"status","atsamd21g::sercom0::i2cm","I2CM Status",null,null],[3,"BUSERR_W","atsamd21g::sercom0::i2cm::status","Write proxy for field `BUSERR`",null,null],[3,"ARBLOST_W","","Write proxy for field `ARBLOST`",null,null],[3,"BUSSTATE_W","","Write proxy for field `BUSSTATE`",null,null],[3,"LOWTOUT_W","","Write proxy for field `LOWTOUT`",null,null],[3,"MEXTTOUT_W","","Write proxy for field `MEXTTOUT`",null,null],[3,"SEXTTOUT_W","","Write proxy for field `SEXTTOUT`",null,null],[3,"LENERR_W","","Write proxy for field `LENERR`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSERR_R","","Reader of field `BUSERR`",null,null],[6,"ARBLOST_R","","Reader of field `ARBLOST`",null,null],[6,"RXNACK_R","","Reader of field `RXNACK`",null,null],[6,"BUSSTATE_R","","Reader of field `BUSSTATE`",null,null],[6,"LOWTOUT_R","","Reader of field `LOWTOUT`",null,null],[6,"CLKHOLD_R","","Reader of field `CLKHOLD`",null,null],[6,"MEXTTOUT_R","","Reader of field `MEXTTOUT`",null,null],[6,"SEXTTOUT_R","","Reader of field `SEXTTOUT`",null,null],[6,"LENERR_R","","Reader of field `LENERR`",null,null],[11,"set_bit","","Sets the field bit",1243,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1243,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1243,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1244,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1244,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1244,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1245,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1246,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1246,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1246,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1247,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1247,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1247,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1248,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1248,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1248,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1249,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1249,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1249,[[],["w",6]]],[11,"buserr","atsamd21g::generic","Bit 0 - Bus Error",6,[[],["buserr_r",6]]],[11,"arblost","","Bit 1 - Arbitration Lost",6,[[],["arblost_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",6,[[],["rxnack_r",6]]],[11,"busstate","","Bits 4:5 - Bus State",6,[[],["busstate_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",6,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",6,[[],["clkhold_r",6]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",6,[[],["mexttout_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",6,[[],["sexttout_r",6]]],[11,"lenerr","","Bit 10 - Length Error",6,[[],["lenerr_r",6]]],[11,"buserr","atsamd21g::sercom0::i2cm::status","Bit 0 - Bus Error",1250,[[],["buserr_r",6]]],[11,"arblost","","Bit 1 - Arbitration Lost",1250,[[],["arblost_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",1250,[[],["rxnack_r",6]]],[11,"busstate","","Bits 4:5 - Bus State",1250,[[],["busstate_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1250,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",1250,[[],["clkhold_r",6]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",1250,[[],["mexttout_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1250,[[],["sexttout_r",6]]],[11,"lenerr","","Bit 10 - Length Error",1250,[[],["lenerr_r",6]]],[11,"buserr","atsamd21g::generic","Bit 0 - Bus Error",7,[[],["buserr_w",3]]],[11,"arblost","","Bit 1 - Arbitration Lost",7,[[],["arblost_w",3]]],[11,"busstate","","Bits 4:5 - Bus State",7,[[],["busstate_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",7,[[],["lowtout_w",3]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",7,[[],["mexttout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",7,[[],["sexttout_w",3]]],[11,"lenerr","","Bit 10 - Length Error",7,[[],["lenerr_w",3]]],[11,"buserr","atsamd21g::sercom0::i2cm::status","Bit 0 - Bus Error",1251,[[],["buserr_w",3]]],[11,"arblost","","Bit 1 - Arbitration Lost",1251,[[],["arblost_w",3]]],[11,"busstate","","Bits 4:5 - Bus State",1251,[[],["busstate_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1251,[[],["lowtout_w",3]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",1251,[[],["mexttout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1251,[[],["sexttout_w",3]]],[11,"lenerr","","Bit 10 - Length Error",1251,[[],["lenerr_w",3]]],[0,"syncbusy","atsamd21g::sercom0::i2cm","I2CM Syncbusy",null,null],[6,"R","atsamd21g::sercom0::i2cm::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SYSOP_R","","Reader of field `SYSOP`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"sysop","","Bit 2 - System Operation Synchronization Busy",6,[[],["sysop_r",6]]],[11,"swrst","atsamd21g::sercom0::i2cm::syncbusy","Bit 0 - Software Reset Synchronization Busy",1252,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1252,[[],["enable_r",6]]],[11,"sysop","","Bit 2 - System Operation Synchronization Busy",1252,[[],["sysop_r",6]]],[0,"addr","atsamd21g::sercom0::i2cm","I2CM Address",null,null],[3,"ADDR_W","atsamd21g::sercom0::i2cm::addr","Write proxy for field `ADDR`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[3,"HS_W","","Write proxy for field `HS`",null,null],[3,"TENBITEN_W","","Write proxy for field `TENBITEN`",null,null],[3,"LEN_W","","Write proxy for field `LEN`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[6,"HS_R","","Reader of field `HS`",null,null],[6,"TENBITEN_R","","Reader of field `TENBITEN`",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[11,"bits","","Writes raw bits to the field",1253,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1254,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1254,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1254,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1255,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1255,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1255,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1256,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1256,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1256,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1257,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:10 - Address Value",6,[[],["addr_r",6]]],[11,"lenen","","Bit 13 - Length Enable",6,[[],["lenen_r",6]]],[11,"hs","","Bit 14 - High Speed Mode",6,[[],["hs_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",6,[[],["tenbiten_r",6]]],[11,"len","","Bits 16:23 - Length",6,[[],["len_r",6]]],[11,"addr","atsamd21g::sercom0::i2cm::addr","Bits 0:10 - Address Value",1258,[[],["addr_r",6]]],[11,"lenen","","Bit 13 - Length Enable",1258,[[],["lenen_r",6]]],[11,"hs","","Bit 14 - High Speed Mode",1258,[[],["hs_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1258,[[],["tenbiten_r",6]]],[11,"len","","Bits 16:23 - Length",1258,[[],["len_r",6]]],[11,"addr","atsamd21g::generic","Bits 0:10 - Address Value",7,[[],["addr_w",3]]],[11,"lenen","","Bit 13 - Length Enable",7,[[],["lenen_w",3]]],[11,"hs","","Bit 14 - High Speed Mode",7,[[],["hs_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",7,[[],["tenbiten_w",3]]],[11,"len","","Bits 16:23 - Length",7,[[],["len_w",3]]],[11,"addr","atsamd21g::sercom0::i2cm::addr","Bits 0:10 - Address Value",1259,[[],["addr_w",3]]],[11,"lenen","","Bit 13 - Length Enable",1259,[[],["lenen_w",3]]],[11,"hs","","Bit 14 - High Speed Mode",1259,[[],["hs_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1259,[[],["tenbiten_w",3]]],[11,"len","","Bits 16:23 - Length",1259,[[],["len_w",3]]],[0,"data","atsamd21g::sercom0::i2cm","I2CM Data",null,null],[3,"DATA_W","atsamd21g::sercom0::i2cm::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1260,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:7 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd21g::sercom0::i2cm::data","Bits 0:7 - Data Value",1261,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:7 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd21g::sercom0::i2cm::data","Bits 0:7 - Data Value",1262,[[],["data_w",3]]],[0,"dbgctrl","atsamd21g::sercom0::i2cm","I2CM Debug Control",null,null],[3,"DBGSTOP_W","atsamd21g::sercom0::i2cm::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",1263,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1263,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1263,[[],["w",6]]],[11,"dbgstop","atsamd21g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd21g::sercom0::i2cm::dbgctrl","Bit 0 - Debug Mode",1264,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd21g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd21g::sercom0::i2cm::dbgctrl","Bit 0 - Debug Mode",1265,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd21g::sercom0::i2cm","I2CM Control A",null,null],[6,"CTRLB","","I2CM Control B",null,null],[6,"BAUD","","I2CM Baud Rate",null,null],[6,"INTENCLR","","I2CM Interrupt Enable Clear",null,null],[6,"INTENSET","","I2CM Interrupt Enable Set",null,null],[6,"INTFLAG","","I2CM Interrupt Flag Status and Clear",null,null],[6,"STATUS","","I2CM Status",null,null],[6,"SYNCBUSY","","I2CM Syncbusy",null,null],[6,"ADDR","","I2CM Address",null,null],[6,"DATA","","I2CM Data",null,null],[6,"DBGCTRL","","I2CM Debug Control",null,null],[0,"i2cs","atsamd21g::sercom0","Register block I2C Slave Mode",null,null],[0,"ctrla","atsamd21g::sercom0::i2cs","I2CS Control A",null,null],[3,"SWRST_W","atsamd21g::sercom0::i2cs::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PINOUT_W","","Write proxy for field `PINOUT`",null,null],[3,"SDAHOLD_W","","Write proxy for field `SDAHOLD`",null,null],[3,"SEXTTOEN_W","","Write proxy for field `SEXTTOEN`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"SCLSM_W","","Write proxy for field `SCLSM`",null,null],[3,"LOWTOUTEN_W","","Write proxy for field `LOWTOUTEN`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1266,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1266,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1266,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1266,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1266,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1266,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PINOUT_R","","Reader of field `PINOUT`",null,null],[6,"SDAHOLD_R","","Reader of field `SDAHOLD`",null,null],[6,"SEXTTOEN_R","","Reader of field `SEXTTOEN`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"SCLSM_R","","Reader of field `SCLSM`",null,null],[6,"LOWTOUTEN_R","","Reader of field `LOWTOUTEN`",null,null],[11,"set_bit","","Sets the field bit",1267,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1267,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1267,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1268,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1268,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1268,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd21g::sercom0::i2cs::ctrla","Get enumerated values variant",1269,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1269,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1269,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1269,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1269,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1269,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1269,[[]]],[11,"variant","","Writes `variant` to the field",1270,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1270,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1270,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1270,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1270,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1270,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1270,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1270,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1271,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1271,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1271,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1272,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1272,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1272,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1273,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1274,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1274,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1274,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1275,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1276,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1276,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1276,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1277,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1277,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1277,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",6,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",6,[[],["sdahold_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",6,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",6,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",6,[[],["sclsm_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",6,[[],["lowtouten_r",6]]],[11,"swrst","atsamd21g::sercom0::i2cs::ctrla","Bit 0 - Software Reset",1278,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1278,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1278,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",1278,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",1278,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1278,[[],["sdahold_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1278,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",1278,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1278,[[],["sclsm_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1278,[[],["lowtouten_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",7,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",7,[[],["sdahold_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",7,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",7,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",7,[[],["sclsm_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",7,[[],["lowtouten_w",3]]],[11,"swrst","atsamd21g::sercom0::i2cs::ctrla","Bit 0 - Software Reset",1279,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1279,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1279,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",1279,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",1279,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1279,[[],["sdahold_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1279,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",1279,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1279,[[],["sclsm_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1279,[[],["lowtouten_w",3]]],[0,"ctrlb","atsamd21g::sercom0::i2cs","I2CS Control B",null,null],[3,"SMEN_W","atsamd21g::sercom0::i2cs::ctrlb","Write proxy for field `SMEN`",null,null],[3,"GCMD_W","","Write proxy for field `GCMD`",null,null],[3,"AACKEN_W","","Write proxy for field `AACKEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[3,"ACKACT_W","","Write proxy for field `ACKACT`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"SMEN_R","","Reader of field `SMEN`",null,null],[6,"GCMD_R","","Reader of field `GCMD`",null,null],[6,"AACKEN_R","","Reader of field `AACKEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"ACKACT_R","","Reader of field `ACKACT`",null,null],[11,"set_bit","","Sets the field bit",1280,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1280,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1280,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1281,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1281,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1281,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1282,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1282,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1282,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1283,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1284,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1285,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1285,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1285,[[],["w",6]]],[11,"smen","atsamd21g::generic","Bit 8 - Smart Mode Enable",6,[[],["smen_r",6]]],[11,"gcmd","","Bit 9 - PMBus Group Command",6,[[],["gcmd_r",6]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",6,[[],["aacken_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",6,[[],["ackact_r",6]]],[11,"smen","atsamd21g::sercom0::i2cs::ctrlb","Bit 8 - Smart Mode Enable",1286,[[],["smen_r",6]]],[11,"gcmd","","Bit 9 - PMBus Group Command",1286,[[],["gcmd_r",6]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",1286,[[],["aacken_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",1286,[[],["amode_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",1286,[[],["ackact_r",6]]],[11,"smen","atsamd21g::generic","Bit 8 - Smart Mode Enable",7,[[],["smen_w",3]]],[11,"gcmd","","Bit 9 - PMBus Group Command",7,[[],["gcmd_w",3]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",7,[[],["aacken_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"cmd","","Bits 16:17 - Command",7,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",7,[[],["ackact_w",3]]],[11,"smen","atsamd21g::sercom0::i2cs::ctrlb","Bit 8 - Smart Mode Enable",1287,[[],["smen_w",3]]],[11,"gcmd","","Bit 9 - PMBus Group Command",1287,[[],["gcmd_w",3]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",1287,[[],["aacken_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",1287,[[],["amode_w",3]]],[11,"cmd","","Bits 16:17 - Command",1287,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",1287,[[],["ackact_w",3]]],[0,"intenclr","atsamd21g::sercom0::i2cs","I2CS Interrupt Enable Clear",null,null],[3,"PREC_W","atsamd21g::sercom0::i2cs::intenclr","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1288,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1288,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1288,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1289,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1289,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1289,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1290,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1290,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1290,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1291,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1291,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1291,[[],["w",6]]],[11,"prec","atsamd21g::generic","Bit 0 - Stop Received Interrupt Disable",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"prec","atsamd21g::sercom0::i2cs::intenclr","Bit 0 - Stop Received Interrupt Disable",1292,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",1292,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",1292,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1292,[[],["error_r",6]]],[11,"prec","atsamd21g::generic","Bit 0 - Stop Received Interrupt Disable",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"prec","atsamd21g::sercom0::i2cs::intenclr","Bit 0 - Stop Received Interrupt Disable",1293,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",1293,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",1293,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1293,[[],["error_w",3]]],[0,"intenset","atsamd21g::sercom0::i2cs","I2CS Interrupt Enable Set",null,null],[3,"PREC_W","atsamd21g::sercom0::i2cs::intenset","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1294,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1294,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1294,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1295,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1295,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1295,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1296,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1296,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1296,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1297,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1297,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1297,[[],["w",6]]],[11,"prec","atsamd21g::generic","Bit 0 - Stop Received Interrupt Enable",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"prec","atsamd21g::sercom0::i2cs::intenset","Bit 0 - Stop Received Interrupt Enable",1298,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",1298,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",1298,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1298,[[],["error_r",6]]],[11,"prec","atsamd21g::generic","Bit 0 - Stop Received Interrupt Enable",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"prec","atsamd21g::sercom0::i2cs::intenset","Bit 0 - Stop Received Interrupt Enable",1299,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",1299,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",1299,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1299,[[],["error_w",3]]],[0,"intflag","atsamd21g::sercom0::i2cs","I2CS Interrupt Flag Status and Clear",null,null],[3,"PREC_W","atsamd21g::sercom0::i2cs::intflag","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1300,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1300,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1300,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1301,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1301,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1301,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1302,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1302,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1302,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1303,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1303,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1303,[[],["w",6]]],[11,"prec","atsamd21g::generic","Bit 0 - Stop Received Interrupt",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"prec","atsamd21g::sercom0::i2cs::intflag","Bit 0 - Stop Received Interrupt",1304,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt",1304,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt",1304,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1304,[[],["error_r",6]]],[11,"prec","atsamd21g::generic","Bit 0 - Stop Received Interrupt",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"prec","atsamd21g::sercom0::i2cs::intflag","Bit 0 - Stop Received Interrupt",1305,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt",1305,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt",1305,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1305,[[],["error_w",3]]],[0,"status","atsamd21g::sercom0::i2cs","I2CS Status",null,null],[3,"BUSERR_W","atsamd21g::sercom0::i2cs::status","Write proxy for field `BUSERR`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[3,"LOWTOUT_W","","Write proxy for field `LOWTOUT`",null,null],[3,"SEXTTOUT_W","","Write proxy for field `SEXTTOUT`",null,null],[3,"HS_W","","Write proxy for field `HS`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSERR_R","","Reader of field `BUSERR`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[6,"RXNACK_R","","Reader of field `RXNACK`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"SR_R","","Reader of field `SR`",null,null],[6,"LOWTOUT_R","","Reader of field `LOWTOUT`",null,null],[6,"CLKHOLD_R","","Reader of field `CLKHOLD`",null,null],[6,"SEXTTOUT_R","","Reader of field `SEXTTOUT`",null,null],[6,"HS_R","","Reader of field `HS`",null,null],[11,"set_bit","","Sets the field bit",1306,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1306,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1306,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1307,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1308,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1308,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1308,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1310,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1310,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1310,[[],["w",6]]],[11,"buserr","atsamd21g::generic","Bit 0 - Bus Error",6,[[],["buserr_r",6]]],[11,"coll","","Bit 1 - Transmit Collision",6,[[],["coll_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",6,[[],["rxnack_r",6]]],[11,"dir","","Bit 3 - Read/Write Direction",6,[[],["dir_r",6]]],[11,"sr","","Bit 4 - Repeated Start",6,[[],["sr_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",6,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",6,[[],["clkhold_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",6,[[],["sexttout_r",6]]],[11,"hs","","Bit 10 - High Speed",6,[[],["hs_r",6]]],[11,"buserr","atsamd21g::sercom0::i2cs::status","Bit 0 - Bus Error",1311,[[],["buserr_r",6]]],[11,"coll","","Bit 1 - Transmit Collision",1311,[[],["coll_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",1311,[[],["rxnack_r",6]]],[11,"dir","","Bit 3 - Read/Write Direction",1311,[[],["dir_r",6]]],[11,"sr","","Bit 4 - Repeated Start",1311,[[],["sr_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1311,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",1311,[[],["clkhold_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1311,[[],["sexttout_r",6]]],[11,"hs","","Bit 10 - High Speed",1311,[[],["hs_r",6]]],[11,"buserr","atsamd21g::generic","Bit 0 - Bus Error",7,[[],["buserr_w",3]]],[11,"coll","","Bit 1 - Transmit Collision",7,[[],["coll_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",7,[[],["lowtout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",7,[[],["sexttout_w",3]]],[11,"hs","","Bit 10 - High Speed",7,[[],["hs_w",3]]],[11,"buserr","atsamd21g::sercom0::i2cs::status","Bit 0 - Bus Error",1312,[[],["buserr_w",3]]],[11,"coll","","Bit 1 - Transmit Collision",1312,[[],["coll_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1312,[[],["lowtout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1312,[[],["sexttout_w",3]]],[11,"hs","","Bit 10 - High Speed",1312,[[],["hs_w",3]]],[0,"syncbusy","atsamd21g::sercom0::i2cs","I2CS Syncbusy",null,null],[6,"R","atsamd21g::sercom0::i2cs::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd21g::sercom0::i2cs::syncbusy","Bit 0 - Software Reset Synchronization Busy",1313,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1313,[[],["enable_r",6]]],[0,"addr","atsamd21g::sercom0::i2cs","I2CS Address",null,null],[3,"GENCEN_W","atsamd21g::sercom0::i2cs::addr","Write proxy for field `GENCEN`",null,null],[3,"ADDR_W","","Write proxy for field `ADDR`",null,null],[3,"TENBITEN_W","","Write proxy for field `TENBITEN`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"GENCEN_R","","Reader of field `GENCEN`",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"TENBITEN_R","","Reader of field `TENBITEN`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"set_bit","","Sets the field bit",1314,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1314,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1314,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1315,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1316,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1316,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1316,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1317,[[],["w",6]]],[11,"gencen","atsamd21g::generic","Bit 0 - General Call Address Enable",6,[[],["gencen_r",6]]],[11,"addr","","Bits 1:10 - Address Value",6,[[],["addr_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",6,[[],["tenbiten_r",6]]],[11,"addrmask","","Bits 17:26 - Address Mask",6,[[],["addrmask_r",6]]],[11,"gencen","atsamd21g::sercom0::i2cs::addr","Bit 0 - General Call Address Enable",1318,[[],["gencen_r",6]]],[11,"addr","","Bits 1:10 - Address Value",1318,[[],["addr_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1318,[[],["tenbiten_r",6]]],[11,"addrmask","","Bits 17:26 - Address Mask",1318,[[],["addrmask_r",6]]],[11,"gencen","atsamd21g::generic","Bit 0 - General Call Address Enable",7,[[],["gencen_w",3]]],[11,"addr","","Bits 1:10 - Address Value",7,[[],["addr_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",7,[[],["tenbiten_w",3]]],[11,"addrmask","","Bits 17:26 - Address Mask",7,[[],["addrmask_w",3]]],[11,"gencen","atsamd21g::sercom0::i2cs::addr","Bit 0 - General Call Address Enable",1319,[[],["gencen_w",3]]],[11,"addr","","Bits 1:10 - Address Value",1319,[[],["addr_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1319,[[],["tenbiten_w",3]]],[11,"addrmask","","Bits 17:26 - Address Mask",1319,[[],["addrmask_w",3]]],[0,"data","atsamd21g::sercom0::i2cs","I2CS Data",null,null],[3,"DATA_W","atsamd21g::sercom0::i2cs::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1320,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:7 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd21g::sercom0::i2cs::data","Bits 0:7 - Data Value",1321,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:7 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd21g::sercom0::i2cs::data","Bits 0:7 - Data Value",1322,[[],["data_w",3]]],[6,"CTRLA","atsamd21g::sercom0::i2cs","I2CS Control A",null,null],[6,"CTRLB","","I2CS Control B",null,null],[6,"INTENCLR","","I2CS Interrupt Enable Clear",null,null],[6,"INTENSET","","I2CS Interrupt Enable Set",null,null],[6,"INTFLAG","","I2CS Interrupt Flag Status and Clear",null,null],[6,"STATUS","","I2CS Status",null,null],[6,"SYNCBUSY","","I2CS Syncbusy",null,null],[6,"ADDR","","I2CS Address",null,null],[6,"DATA","","I2CS Data",null,null],[0,"spi","atsamd21g::sercom0","Register block SPI Mode",null,null],[0,"ctrla","atsamd21g::sercom0::spi","SPI Control A",null,null],[3,"SWRST_W","atsamd21g::sercom0::spi::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"DOPO_W","","Write proxy for field `DOPO`",null,null],[3,"DIPO_W","","Write proxy for field `DIPO`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CPHA_W","","Write proxy for field `CPHA`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1323,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1323,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1323,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1323,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1323,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1323,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"DOPO_R","","Reader of field `DOPO`",null,null],[6,"DIPO_R","","Reader of field `DIPO`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CPHA_R","","Reader of field `CPHA`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",1324,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1324,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1324,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1325,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1325,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1325,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd21g::sercom0::spi::ctrla","Get enumerated values variant",1326,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1326,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1326,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1326,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1326,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1326,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1326,[[]]],[11,"variant","","Writes `variant` to the field",1327,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1327,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1327,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1327,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1327,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1327,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1327,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1327,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1328,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1328,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1328,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1329,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1329,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1329,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1330,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1331,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1332,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1333,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1333,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1333,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1334,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1334,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1334,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1335,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1335,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1335,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",6,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",6,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",6,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd21g::sercom0::spi::ctrla","Bit 0 - Software Reset",1336,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1336,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1336,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",1336,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1336,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",1336,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",1336,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",1336,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",1336,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",1336,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",1336,[[],["dord_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",7,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",7,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",7,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd21g::sercom0::spi::ctrla","Bit 0 - Software Reset",1337,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1337,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1337,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",1337,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1337,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",1337,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",1337,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",1337,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",1337,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",1337,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",1337,[[],["dord_w",3]]],[0,"ctrlb","atsamd21g::sercom0::spi","SPI Control B",null,null],[3,"CHSIZE_W","atsamd21g::sercom0::spi::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"PLOADEN_W","","Write proxy for field `PLOADEN`",null,null],[3,"SSDE_W","","Write proxy for field `SSDE`",null,null],[3,"MSSEN_W","","Write proxy for field `MSSEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"PLOADEN_R","","Reader of field `PLOADEN`",null,null],[6,"SSDE_R","","Reader of field `SSDE`",null,null],[6,"MSSEN_R","","Reader of field `MSSEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[11,"bits","","Writes raw bits to the field",1338,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1339,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1339,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1339,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1340,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1340,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1340,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1341,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1341,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1341,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1342,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1343,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1343,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1343,[[],["w",6]]],[11,"chsize","atsamd21g::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",6,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",6,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",6,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"chsize","atsamd21g::sercom0::spi::ctrlb","Bits 0:2 - Character Size",1344,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",1344,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",1344,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",1344,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",1344,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",1344,[[],["rxen_r",6]]],[11,"chsize","atsamd21g::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",7,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",7,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",7,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"chsize","atsamd21g::sercom0::spi::ctrlb","Bits 0:2 - Character Size",1345,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",1345,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",1345,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",1345,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",1345,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",1345,[[],["rxen_w",3]]],[0,"baud","atsamd21g::sercom0::spi","SPI Baud Rate",null,null],[3,"BAUD_W","atsamd21g::sercom0::spi::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",1346,[[],["w",6]]],[11,"baud","atsamd21g::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd21g::sercom0::spi::baud","Bits 0:7 - Baud Rate Value",1347,[[],["baud_r",6]]],[11,"baud","atsamd21g::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd21g::sercom0::spi::baud","Bits 0:7 - Baud Rate Value",1348,[[],["baud_w",3]]],[0,"intenclr","atsamd21g::sercom0::spi","SPI Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd21g::sercom0::spi::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1349,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1349,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1349,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1350,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1350,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1350,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1351,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1351,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1351,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1352,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1352,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1352,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1353,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1353,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1353,[[],["w",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd21g::sercom0::spi::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1354,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1354,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1354,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",1354,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1354,[[],["error_r",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd21g::sercom0::spi::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1355,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1355,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1355,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",1355,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1355,[[],["error_w",3]]],[0,"intenset","atsamd21g::sercom0::spi","SPI Interrupt Enable Set",null,null],[3,"DRE_W","atsamd21g::sercom0::spi::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1356,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1356,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1356,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1358,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1358,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1358,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1359,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1359,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1359,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1360,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1360,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1360,[[],["w",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd21g::sercom0::spi::intenset","Bit 0 - Data Register Empty Interrupt Enable",1361,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1361,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1361,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",1361,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1361,[[],["error_r",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd21g::sercom0::spi::intenset","Bit 0 - Data Register Empty Interrupt Enable",1362,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1362,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1362,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",1362,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1362,[[],["error_w",3]]],[0,"intflag","atsamd21g::sercom0::spi","SPI Interrupt Flag Status and Clear",null,null],[3,"TXC_W","atsamd21g::sercom0::spi::intflag","Write proxy for field `TXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1363,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1363,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1363,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1365,[[],["w",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd21g::sercom0::spi::intflag","Bit 0 - Data Register Empty Interrupt",1366,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",1366,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",1366,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",1366,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1366,[[],["error_r",6]]],[11,"txc","atsamd21g::generic","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"txc","atsamd21g::sercom0::spi::intflag","Bit 1 - Transmit Complete Interrupt",1367,[[],["txc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",1367,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1367,[[],["error_w",3]]],[0,"status","atsamd21g::sercom0::spi","SPI Status",null,null],[3,"BUFOVF_W","atsamd21g::sercom0::spi::status","Write proxy for field `BUFOVF`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[11,"set_bit","","Sets the field bit",1368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1368,[[],["w",6]]],[11,"bufovf","atsamd21g::generic","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"bufovf","atsamd21g::sercom0::spi::status","Bit 2 - Buffer Overflow",1369,[[],["bufovf_r",6]]],[11,"bufovf","atsamd21g::generic","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"bufovf","atsamd21g::sercom0::spi::status","Bit 2 - Buffer Overflow",1370,[[],["bufovf_w",3]]],[0,"syncbusy","atsamd21g::sercom0::spi","SPI Syncbusy",null,null],[6,"R","atsamd21g::sercom0::spi::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"swrst","atsamd21g::sercom0::spi::syncbusy","Bit 0 - Software Reset Synchronization Busy",1371,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1371,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",1371,[[],["ctrlb_r",6]]],[0,"addr","atsamd21g::sercom0::spi","SPI Address",null,null],[3,"ADDR_W","atsamd21g::sercom0::spi::addr","Write proxy for field `ADDR`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"bits","","Writes raw bits to the field",1372,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1373,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:7 - Address Value",6,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",6,[[],["addrmask_r",6]]],[11,"addr","atsamd21g::sercom0::spi::addr","Bits 0:7 - Address Value",1374,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",1374,[[],["addrmask_r",6]]],[11,"addr","atsamd21g::generic","Bits 0:7 - Address Value",7,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",7,[[],["addrmask_w",3]]],[11,"addr","atsamd21g::sercom0::spi::addr","Bits 0:7 - Address Value",1375,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",1375,[[],["addrmask_w",3]]],[0,"data","atsamd21g::sercom0::spi","SPI Data",null,null],[3,"DATA_W","atsamd21g::sercom0::spi::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1376,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:8 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd21g::sercom0::spi::data","Bits 0:8 - Data Value",1377,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:8 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd21g::sercom0::spi::data","Bits 0:8 - Data Value",1378,[[],["data_w",3]]],[0,"dbgctrl","atsamd21g::sercom0::spi","SPI Debug Control",null,null],[3,"DBGSTOP_W","atsamd21g::sercom0::spi::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",1379,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1379,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1379,[[],["w",6]]],[11,"dbgstop","atsamd21g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd21g::sercom0::spi::dbgctrl","Bit 0 - Debug Mode",1380,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd21g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd21g::sercom0::spi::dbgctrl","Bit 0 - Debug Mode",1381,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd21g::sercom0::spi","SPI Control A",null,null],[6,"CTRLB","","SPI Control B",null,null],[6,"BAUD","","SPI Baud Rate",null,null],[6,"INTENCLR","","SPI Interrupt Enable Clear",null,null],[6,"INTENSET","","SPI Interrupt Enable Set",null,null],[6,"INTFLAG","","SPI Interrupt Flag Status and Clear",null,null],[6,"STATUS","","SPI Status",null,null],[6,"SYNCBUSY","","SPI Syncbusy",null,null],[6,"ADDR","","SPI Address",null,null],[6,"DATA","","SPI Data",null,null],[6,"DBGCTRL","","SPI Debug Control",null,null],[0,"usart","atsamd21g::sercom0","Register block USART Mode",null,null],[0,"ctrla","atsamd21g::sercom0::usart","USART Control A",null,null],[3,"SWRST_W","atsamd21g::sercom0::usart::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"SAMPR_W","","Write proxy for field `SAMPR`",null,null],[3,"TXPO_W","","Write proxy for field `TXPO`",null,null],[3,"RXPO_W","","Write proxy for field `RXPO`",null,null],[3,"SAMPA_W","","Write proxy for field `SAMPA`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CMODE_W","","Write proxy for field `CMODE`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1382,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1382,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1382,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1382,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1382,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1382,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"SAMPR_R","","Reader of field `SAMPR`",null,null],[6,"TXPO_R","","Reader of field `TXPO`",null,null],[6,"RXPO_R","","Reader of field `RXPO`",null,null],[6,"SAMPA_R","","Reader of field `SAMPA`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CMODE_R","","Reader of field `CMODE`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",1383,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1383,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1383,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1384,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1384,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1384,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd21g::sercom0::usart::ctrla","Get enumerated values variant",1385,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1385,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1385,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1385,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1385,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1385,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1385,[[]]],[11,"variant","","Writes `variant` to the field",1386,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1386,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1386,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1386,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1386,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1386,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1386,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1386,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1387,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1388,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1388,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1388,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1389,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1390,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1391,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1392,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1393,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1394,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1394,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1394,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1395,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1395,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1395,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1396,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1396,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1396,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"sampr","","Bits 13:15 - Sample",6,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",6,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",6,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",6,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",6,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd21g::sercom0::usart::ctrla","Bit 0 - Software Reset",1397,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1397,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1397,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",1397,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1397,[[],["ibon_r",6]]],[11,"sampr","","Bits 13:15 - Sample",1397,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",1397,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",1397,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",1397,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",1397,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",1397,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",1397,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",1397,[[],["dord_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"sampr","","Bits 13:15 - Sample",7,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",7,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",7,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",7,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",7,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd21g::sercom0::usart::ctrla","Bit 0 - Software Reset",1398,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1398,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1398,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",1398,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1398,[[],["ibon_w",3]]],[11,"sampr","","Bits 13:15 - Sample",1398,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",1398,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",1398,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",1398,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",1398,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",1398,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",1398,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",1398,[[],["dord_w",3]]],[0,"ctrlb","atsamd21g::sercom0::usart","USART Control B",null,null],[3,"CHSIZE_W","atsamd21g::sercom0::usart::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"SBMODE_W","","Write proxy for field `SBMODE`",null,null],[3,"COLDEN_W","","Write proxy for field `COLDEN`",null,null],[3,"SFDE_W","","Write proxy for field `SFDE`",null,null],[3,"ENC_W","","Write proxy for field `ENC`",null,null],[3,"PMODE_W","","Write proxy for field `PMODE`",null,null],[3,"TXEN_W","","Write proxy for field `TXEN`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"SBMODE_R","","Reader of field `SBMODE`",null,null],[6,"COLDEN_R","","Reader of field `COLDEN`",null,null],[6,"SFDE_R","","Reader of field `SFDE`",null,null],[6,"ENC_R","","Reader of field `ENC`",null,null],[6,"PMODE_R","","Reader of field `PMODE`",null,null],[6,"TXEN_R","","Reader of field `TXEN`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[11,"bits","","Writes raw bits to the field",1399,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1400,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1400,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1400,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1401,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1401,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1401,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1402,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1402,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1402,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1403,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1403,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1403,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1404,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1404,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1404,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1405,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1405,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1405,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1406,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1406,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1406,[[],["w",6]]],[11,"chsize","atsamd21g::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",6,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",6,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",6,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",6,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",6,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",6,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"chsize","atsamd21g::sercom0::usart::ctrlb","Bits 0:2 - Character Size",1407,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",1407,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",1407,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",1407,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",1407,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",1407,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",1407,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",1407,[[],["rxen_r",6]]],[11,"chsize","atsamd21g::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",7,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",7,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",7,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",7,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",7,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",7,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"chsize","atsamd21g::sercom0::usart::ctrlb","Bits 0:2 - Character Size",1408,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",1408,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",1408,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",1408,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",1408,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",1408,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",1408,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",1408,[[],["rxen_w",3]]],[0,"baud","atsamd21g::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd21g::sercom0::usart::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",1409,[[],["w",6]]],[11,"baud","atsamd21g::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd21g::sercom0::usart::baud","Bits 0:15 - Baud Rate Value",1410,[[],["baud_r",6]]],[11,"baud","atsamd21g::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd21g::sercom0::usart::baud","Bits 0:15 - Baud Rate Value",1411,[[],["baud_w",3]]],[0,"baud_frac_mode","atsamd21g::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd21g::sercom0::usart::baud_frac_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRAC_MODE",null,null],[6,"W","","Writer for register BAUD_FRAC_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",1412,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1413,[[],["w",6]]],[11,"baud","atsamd21g::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd21g::sercom0::usart::baud_frac_mode","Bits 0:12 - Baud Rate Value",1414,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",1414,[[],["fp_r",6]]],[11,"baud","atsamd21g::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd21g::sercom0::usart::baud_frac_mode","Bits 0:12 - Baud Rate Value",1415,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",1415,[[],["fp_w",3]]],[0,"baud_fracfp_mode","atsamd21g::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd21g::sercom0::usart::baud_fracfp_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRACFP_MODE",null,null],[6,"W","","Writer for register BAUD_FRACFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",1416,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1417,[[],["w",6]]],[11,"baud","atsamd21g::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd21g::sercom0::usart::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",1418,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",1418,[[],["fp_r",6]]],[11,"baud","atsamd21g::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd21g::sercom0::usart::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",1419,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",1419,[[],["fp_w",3]]],[0,"baud_usartfp_mode","atsamd21g::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd21g::sercom0::usart::baud_usartfp_mode","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD_USARTFP_MODE",null,null],[6,"W","","Writer for register BAUD_USARTFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",1420,[[],["w",6]]],[11,"baud","atsamd21g::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd21g::sercom0::usart::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",1421,[[],["baud_r",6]]],[11,"baud","atsamd21g::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd21g::sercom0::usart::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",1422,[[],["baud_w",3]]],[0,"rxpl","atsamd21g::sercom0::usart","USART Receive Pulse Length",null,null],[3,"RXPL_W","atsamd21g::sercom0::usart::rxpl","Write proxy for field `RXPL`",null,null],[6,"R","","Reader of register RXPL",null,null],[6,"W","","Writer for register RXPL",null,null],[6,"RXPL_R","","Reader of field `RXPL`",null,null],[11,"bits","","Writes raw bits to the field",1423,[[],["w",6]]],[11,"rxpl","atsamd21g::generic","Bits 0:7 - Receive Pulse Length",6,[[],["rxpl_r",6]]],[11,"rxpl","atsamd21g::sercom0::usart::rxpl","Bits 0:7 - Receive Pulse Length",1424,[[],["rxpl_r",6]]],[11,"rxpl","atsamd21g::generic","Bits 0:7 - Receive Pulse Length",7,[[],["rxpl_w",3]]],[11,"rxpl","atsamd21g::sercom0::usart::rxpl","Bits 0:7 - Receive Pulse Length",1425,[[],["rxpl_w",3]]],[0,"intenclr","atsamd21g::sercom0::usart","USART Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd21g::sercom0::usart::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1426,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1426,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1426,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1427,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1427,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1427,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1428,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1428,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1428,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1429,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1429,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1429,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1430,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1430,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1430,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1431,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1431,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1431,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1432,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1432,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1432,[[],["w",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd21g::sercom0::usart::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1433,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1433,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1433,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",1433,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",1433,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",1433,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1433,[[],["error_r",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd21g::sercom0::usart::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1434,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1434,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1434,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",1434,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",1434,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",1434,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1434,[[],["error_w",3]]],[0,"intenset","atsamd21g::sercom0::usart","USART Interrupt Enable Set",null,null],[3,"DRE_W","atsamd21g::sercom0::usart::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1435,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1435,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1435,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1436,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1436,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1436,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1437,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1437,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1437,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1438,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1438,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1438,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1439,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1439,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1439,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1440,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1440,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1440,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1441,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1441,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1441,[[],["w",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd21g::sercom0::usart::intenset","Bit 0 - Data Register Empty Interrupt Enable",1442,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1442,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1442,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",1442,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",1442,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",1442,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1442,[[],["error_r",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd21g::sercom0::usart::intenset","Bit 0 - Data Register Empty Interrupt Enable",1443,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1443,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1443,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",1443,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",1443,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",1443,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1443,[[],["error_w",3]]],[0,"intflag","atsamd21g::sercom0::usart","USART Interrupt Flag Status and Clear",null,null],[3,"TXC_W","atsamd21g::sercom0::usart::intflag","Write proxy for field `TXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1444,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1444,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1445,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1446,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1446,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1448,[[],["w",6]]],[11,"dre","atsamd21g::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd21g::sercom0::usart::intflag","Bit 0 - Data Register Empty Interrupt",1449,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",1449,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",1449,[[],["rxc_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",1449,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",1449,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1449,[[],["error_r",6]]],[11,"txc","atsamd21g::generic","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"txc","atsamd21g::sercom0::usart::intflag","Bit 1 - Transmit Complete Interrupt",1450,[[],["txc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",1450,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",1450,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",1450,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1450,[[],["error_w",3]]],[0,"status","atsamd21g::sercom0::usart","USART Status",null,null],[3,"PERR_W","atsamd21g::sercom0::usart::status","Write proxy for field `PERR`",null,null],[3,"FERR_W","","Write proxy for field `FERR`",null,null],[3,"BUFOVF_W","","Write proxy for field `BUFOVF`",null,null],[3,"ISF_W","","Write proxy for field `ISF`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[6,"CTS_R","","Reader of field `CTS`",null,null],[6,"ISF_R","","Reader of field `ISF`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[11,"set_bit","","Sets the field bit",1451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1452,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1452,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1453,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1454,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1454,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1454,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1455,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1455,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1455,[[],["w",6]]],[11,"perr","atsamd21g::generic","Bit 0 - Parity Error",6,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",6,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",6,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",6,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",6,[[],["coll_r",6]]],[11,"perr","atsamd21g::sercom0::usart::status","Bit 0 - Parity Error",1456,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",1456,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",1456,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",1456,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",1456,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",1456,[[],["coll_r",6]]],[11,"perr","atsamd21g::generic","Bit 0 - Parity Error",7,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",7,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",7,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",7,[[],["coll_w",3]]],[11,"perr","atsamd21g::sercom0::usart::status","Bit 0 - Parity Error",1457,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",1457,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",1457,[[],["bufovf_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",1457,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",1457,[[],["coll_w",3]]],[0,"syncbusy","atsamd21g::sercom0::usart","USART Syncbusy",null,null],[6,"R","atsamd21g::sercom0::usart::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"swrst","atsamd21g::sercom0::usart::syncbusy","Bit 0 - Software Reset Synchronization Busy",1458,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1458,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",1458,[[],["ctrlb_r",6]]],[0,"data","atsamd21g::sercom0::usart","USART Data",null,null],[3,"DATA_W","atsamd21g::sercom0::usart::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1459,[[],["w",6]]],[11,"data","atsamd21g::generic","Bits 0:8 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd21g::sercom0::usart::data","Bits 0:8 - Data Value",1460,[[],["data_r",6]]],[11,"data","atsamd21g::generic","Bits 0:8 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd21g::sercom0::usart::data","Bits 0:8 - Data Value",1461,[[],["data_w",3]]],[0,"dbgctrl","atsamd21g::sercom0::usart","USART Debug Control",null,null],[3,"DBGSTOP_W","atsamd21g::sercom0::usart::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",1462,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1462,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1462,[[],["w",6]]],[11,"dbgstop","atsamd21g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd21g::sercom0::usart::dbgctrl","Bit 0 - Debug Mode",1463,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd21g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd21g::sercom0::usart::dbgctrl","Bit 0 - Debug Mode",1464,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd21g::sercom0::usart","USART Control A",null,null],[6,"CTRLB","","USART Control B",null,null],[6,"BAUD","","USART Baud Rate",null,null],[6,"BAUD_FRAC_MODE","","USART Baud Rate",null,null],[6,"BAUD_FRACFP_MODE","","USART Baud Rate",null,null],[6,"BAUD_USARTFP_MODE","","USART Baud Rate",null,null],[6,"RXPL","","USART Receive Pulse Length",null,null],[6,"INTENCLR","","USART Interrupt Enable Clear",null,null],[6,"INTENSET","","USART Interrupt Enable Set",null,null],[6,"INTFLAG","","USART Interrupt Flag Status and Clear",null,null],[6,"STATUS","","USART Status",null,null],[6,"SYNCBUSY","","USART Syncbusy",null,null],[6,"DATA","","USART Data",null,null],[6,"DBGCTRL","","USART Debug Control",null,null],[11,"usart","atsamd21g::sercom0","0x00 - USART Mode",1465,[[],["usart",3]]],[11,"usart_mut","","0x00 - USART Mode",1465,[[],["usart",3]]],[11,"spi","","0x00 - SPI Mode",1465,[[],["spi",3]]],[11,"spi_mut","","0x00 - SPI Mode",1465,[[],["spi",3]]],[11,"i2cs","","0x00 - I2C Slave Mode",1465,[[],["i2cs",3]]],[11,"i2cs_mut","","0x00 - I2C Slave Mode",1465,[[],["i2cs",3]]],[11,"i2cm","","0x00 - I2C Master Mode",1465,[[],["i2cm",3]]],[11,"i2cm_mut","","0x00 - I2C Master Mode",1465,[[],["i2cm",3]]],[11,"baud_usartfp_mode","","0x0c - USART Baud Rate",1199,[[],["baud_usartfp_mode",6]]],[11,"baud_usartfp_mode_mut","","0x0c - USART Baud Rate",1199,[[],["baud_usartfp_mode",6]]],[11,"baud_fracfp_mode","","0x0c - USART Baud Rate",1199,[[],["baud_fracfp_mode",6]]],[11,"baud_fracfp_mode_mut","","0x0c - USART Baud Rate",1199,[[],["baud_fracfp_mode",6]]],[11,"baud_frac_mode","","0x0c - USART Baud Rate",1199,[[],["baud_frac_mode",6]]],[11,"baud_frac_mode_mut","","0x0c - USART Baud Rate",1199,[[],["baud_frac_mode",6]]],[11,"baud","","0x0c - USART Baud Rate",1199,[[],["baud",6]]],[11,"baud_mut","","0x0c - USART Baud Rate",1199,[[],["baud",6]]],[0,"sysctrl","atsamd21g","System Control",null,null],[3,"RegisterBlock","atsamd21g::sysctrl","Register block",null,null],[12,"intenclr","","0x00 - Interrupt Enable Clear",1466,null],[12,"intenset","","0x04 - Interrupt Enable Set",1466,null],[12,"intflag","","0x08 - Interrupt Flag Status and Clear",1466,null],[12,"pclksr","","0x0c - Power and Clocks Status",1466,null],[12,"xosc","","0x10 - External Multipurpose Crystal Oscillator (XOSC)…",1466,null],[12,"xosc32k","","0x14 - 32kHz External Crystal Oscillator (XOSC32K) Control",1466,null],[12,"osc32k","","0x18 - 32kHz Internal Oscillator (OSC32K) Control",1466,null],[12,"osculp32k","","0x1c - 32kHz Ultra Low Power Internal Oscillator…",1466,null],[12,"osc8m","","0x20 - 8MHz Internal Oscillator (OSC8M) Control",1466,null],[12,"dfllctrl","","0x24 - DFLL48M Control",1466,null],[12,"dfllval","","0x28 - DFLL48M Value",1466,null],[12,"dfllmul","","0x2c - DFLL48M Multiplier",1466,null],[12,"dfllsync","","0x30 - DFLL48M Synchronization",1466,null],[12,"bod33","","0x34 - 3.3V Brown-Out Detector (BOD33) Control",1466,null],[12,"vreg","","0x3c - Voltage Regulator System (VREG) Control",1466,null],[12,"vref","","0x40 - Voltage References System (VREF) Control",1466,null],[12,"dpllctrla","","0x44 - DPLL Control A",1466,null],[12,"dpllratio","","0x48 - DPLL Ratio Control",1466,null],[12,"dpllctrlb","","0x4c - DPLL Control B",1466,null],[12,"dpllstatus","","0x50 - DPLL Status",1466,null],[0,"intenclr","","Interrupt Enable Clear",null,null],[3,"XOSCRDY_W","atsamd21g::sysctrl::intenclr","Write proxy for field `XOSCRDY`",null,null],[3,"XOSC32KRDY_W","","Write proxy for field `XOSC32KRDY`",null,null],[3,"OSC32KRDY_W","","Write proxy for field `OSC32KRDY`",null,null],[3,"OSC8MRDY_W","","Write proxy for field `OSC8MRDY`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"BOD33RDY_W","","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"DPLLLCKR_W","","Write proxy for field `DPLLLCKR`",null,null],[3,"DPLLLCKF_W","","Write proxy for field `DPLLLCKF`",null,null],[3,"DPLLLTO_W","","Write proxy for field `DPLLLTO`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"set_bit","","Sets the field bit",1467,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1467,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1468,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1468,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1468,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1469,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1470,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1470,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1470,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1471,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1471,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1471,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1472,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1472,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1472,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1473,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1473,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1473,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1474,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1474,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1474,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1475,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1475,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1475,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1476,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1476,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1476,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1477,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1477,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1477,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1478,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1478,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1478,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1479,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1479,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1479,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1480,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1480,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1480,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1481,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1481,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1481,[[],["w",6]]],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready Interrupt Enable",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::sysctrl::intenclr","Bit 0 - XOSC Ready Interrupt Enable",1482,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1482,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1482,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1482,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1482,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1482,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1482,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1482,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1482,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1482,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1482,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1482,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1482,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1482,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1482,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready Interrupt Enable",7,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",7,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",7,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",7,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",7,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",7,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",7,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",7,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",7,[[],["dplllto_w",3]]],[11,"xoscrdy","atsamd21g::sysctrl::intenclr","Bit 0 - XOSC Ready Interrupt Enable",1483,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1483,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1483,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1483,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1483,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1483,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1483,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1483,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1483,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1483,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1483,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1483,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1483,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1483,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1483,[[],["dplllto_w",3]]],[0,"intenset","atsamd21g::sysctrl","Interrupt Enable Set",null,null],[3,"XOSCRDY_W","atsamd21g::sysctrl::intenset","Write proxy for field `XOSCRDY`",null,null],[3,"XOSC32KRDY_W","","Write proxy for field `XOSC32KRDY`",null,null],[3,"OSC32KRDY_W","","Write proxy for field `OSC32KRDY`",null,null],[3,"OSC8MRDY_W","","Write proxy for field `OSC8MRDY`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"BOD33RDY_W","","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"DPLLLCKR_W","","Write proxy for field `DPLLLCKR`",null,null],[3,"DPLLLCKF_W","","Write proxy for field `DPLLLCKF`",null,null],[3,"DPLLLTO_W","","Write proxy for field `DPLLLTO`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"set_bit","","Sets the field bit",1484,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1484,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1484,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1485,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1485,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1485,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1486,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1486,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1486,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1487,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1487,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1487,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1488,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1488,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1488,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1489,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1489,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1489,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1490,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1490,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1490,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1491,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1491,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1491,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1492,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1492,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1492,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1493,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1493,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1493,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1494,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1494,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1494,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1495,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1495,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1495,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1496,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1496,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1496,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1497,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1497,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1497,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1498,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1498,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1498,[[],["w",6]]],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready Interrupt Enable",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::sysctrl::intenset","Bit 0 - XOSC Ready Interrupt Enable",1499,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1499,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1499,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1499,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1499,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1499,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1499,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1499,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1499,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1499,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1499,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1499,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1499,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1499,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1499,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready Interrupt Enable",7,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",7,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",7,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",7,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",7,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",7,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",7,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",7,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",7,[[],["dplllto_w",3]]],[11,"xoscrdy","atsamd21g::sysctrl::intenset","Bit 0 - XOSC Ready Interrupt Enable",1500,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1500,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1500,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1500,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1500,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1500,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1500,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1500,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1500,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1500,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1500,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1500,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1500,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1500,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1500,[[],["dplllto_w",3]]],[0,"intflag","atsamd21g::sysctrl","Interrupt Flag Status and Clear",null,null],[3,"XOSCRDY_W","atsamd21g::sysctrl::intflag","Write proxy for field `XOSCRDY`",null,null],[3,"XOSC32KRDY_W","","Write proxy for field `XOSC32KRDY`",null,null],[3,"OSC32KRDY_W","","Write proxy for field `OSC32KRDY`",null,null],[3,"OSC8MRDY_W","","Write proxy for field `OSC8MRDY`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"BOD33RDY_W","","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"DPLLLCKR_W","","Write proxy for field `DPLLLCKR`",null,null],[3,"DPLLLCKF_W","","Write proxy for field `DPLLLCKF`",null,null],[3,"DPLLLTO_W","","Write proxy for field `DPLLLTO`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"set_bit","","Sets the field bit",1501,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1501,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1501,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1502,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1502,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1502,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1503,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1503,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1503,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1504,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1504,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1504,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1505,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1505,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1505,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1506,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1506,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1506,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1507,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1507,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1507,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1508,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1509,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1509,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1509,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1510,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1510,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1510,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1511,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1511,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1511,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1513,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1513,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1513,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1514,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1515,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1515,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1515,[[],["w",6]]],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::sysctrl::intflag","Bit 0 - XOSC Ready",1516,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",1516,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",1516,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",1516,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",1516,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",1516,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",1516,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",1516,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",1516,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",1516,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",1516,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",1516,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",1516,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",1516,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",1516,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready",7,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",7,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",7,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",7,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",7,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",7,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",7,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",7,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",7,[[],["dplllto_w",3]]],[11,"xoscrdy","atsamd21g::sysctrl::intflag","Bit 0 - XOSC Ready",1517,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",1517,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",1517,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",1517,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",1517,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",1517,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",1517,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",1517,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",1517,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",1517,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection",1517,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",1517,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",1517,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",1517,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",1517,[[],["dplllto_w",3]]],[0,"pclksr","atsamd21g::sysctrl","Power and Clocks Status",null,null],[6,"R","atsamd21g::sysctrl::pclksr","Reader of register PCLKSR",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"xoscrdy","atsamd21g::generic","Bit 0 - XOSC Ready",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd21g::sysctrl::pclksr","Bit 0 - XOSC Ready",1518,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",1518,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",1518,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",1518,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",1518,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",1518,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",1518,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",1518,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",1518,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",1518,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",1518,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",1518,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",1518,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",1518,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",1518,[[],["dplllto_r",6]]],[0,"xosc","atsamd21g::sysctrl","External Multipurpose Crystal Oscillator (XOSC) Control",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::xosc","Write proxy for field `ENABLE`",null,null],[3,"XTALEN_W","","Write proxy for field `XTALEN`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"GAIN_W","","Write proxy for field `GAIN`",null,null],[3,"AMPGC_W","","Write proxy for field `AMPGC`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[4,"GAIN_A","","Oscillator Gain",null,null],[13,"_0","","0: 2MHz",1519,null],[13,"_1","","1: 4MHz",1519,null],[13,"_2","","2: 8MHz",1519,null],[13,"_3","","3: 16MHz",1519,null],[13,"_4","","4: 30MHz",1519,null],[6,"R","","Reader of register XOSC",null,null],[6,"W","","Writer for register XOSC",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"XTALEN_R","","Reader of field `XTALEN`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"GAIN_R","","Reader of field `GAIN`",null,null],[6,"AMPGC_R","","Reader of field `AMPGC`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[11,"set_bit","","Sets the field bit",1520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1520,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1521,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1521,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1521,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1522,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1522,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1522,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1523,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["gain_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",6,[[]]],[11,"variant","atsamd21g::sysctrl::xosc","Get enumerated values variant",1524,[[],[["variant",4],["gain_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",1524,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",1524,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",1524,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",1524,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",1524,[[]]],[11,"variant","","Writes `variant` to the field",1525,[[["gain_a",4]],["w",6]]],[11,"_0","","2MHz",1525,[[],["w",6]]],[11,"_1","","4MHz",1525,[[],["w",6]]],[11,"_2","","8MHz",1525,[[],["w",6]]],[11,"_3","","16MHz",1525,[[],["w",6]]],[11,"_4","","30MHz",1525,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1525,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1526,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1526,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1526,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1527,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",6,[[],["xtalen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"gain","","Bits 8:10 - Oscillator Gain",6,[[],["gain_r",6]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",6,[[],["ampgc_r",6]]],[11,"startup","","Bits 12:15 - Start-Up Time",6,[[],["startup_r",6]]],[11,"enable","atsamd21g::sysctrl::xosc","Bit 1 - Oscillator Enable",1528,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1528,[[],["xtalen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1528,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1528,[[],["ondemand_r",6]]],[11,"gain","","Bits 8:10 - Oscillator Gain",1528,[[],["gain_r",6]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",1528,[[],["ampgc_r",6]]],[11,"startup","","Bits 12:15 - Start-Up Time",1528,[[],["startup_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",7,[[],["xtalen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"gain","","Bits 8:10 - Oscillator Gain",7,[[],["gain_w",3]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",7,[[],["ampgc_w",3]]],[11,"startup","","Bits 12:15 - Start-Up Time",7,[[],["startup_w",3]]],[11,"enable","atsamd21g::sysctrl::xosc","Bit 1 - Oscillator Enable",1529,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1529,[[],["xtalen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1529,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1529,[[],["ondemand_w",3]]],[11,"gain","","Bits 8:10 - Oscillator Gain",1529,[[],["gain_w",3]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",1529,[[],["ampgc_w",3]]],[11,"startup","","Bits 12:15 - Start-Up Time",1529,[[],["startup_w",3]]],[0,"xosc32k","atsamd21g::sysctrl","32kHz External Crystal Oscillator (XOSC32K) Control",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::xosc32k","Write proxy for field `ENABLE`",null,null],[3,"XTALEN_W","","Write proxy for field `XTALEN`",null,null],[3,"EN32K_W","","Write proxy for field `EN32K`",null,null],[3,"EN1K_W","","Write proxy for field `EN1K`",null,null],[3,"AAMPEN_W","","Write proxy for field `AAMPEN`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[6,"R","","Reader of register XOSC32K",null,null],[6,"W","","Writer for register XOSC32K",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"XTALEN_R","","Reader of field `XTALEN`",null,null],[6,"EN32K_R","","Reader of field `EN32K`",null,null],[6,"EN1K_R","","Reader of field `EN1K`",null,null],[6,"AAMPEN_R","","Reader of field `AAMPEN`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"set_bit","","Sets the field bit",1530,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1530,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1530,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1531,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1531,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1531,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1532,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1532,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1532,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1533,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1533,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1533,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1534,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1534,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1534,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1535,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1535,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1535,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1536,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1536,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1536,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1537,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1538,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1538,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1538,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",6,[[],["xtalen_r",6]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",6,[[],["en32k_r",6]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",6,[[],["en1k_r",6]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",6,[[],["aampen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",6,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"enable","atsamd21g::sysctrl::xosc32k","Bit 1 - Oscillator Enable",1539,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1539,[[],["xtalen_r",6]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",1539,[[],["en32k_r",6]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",1539,[[],["en1k_r",6]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",1539,[[],["aampen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1539,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1539,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1539,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",1539,[[],["wrtlock_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",7,[[],["xtalen_w",3]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",7,[[],["en32k_w",3]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",7,[[],["en1k_w",3]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",7,[[],["aampen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",7,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"enable","atsamd21g::sysctrl::xosc32k","Bit 1 - Oscillator Enable",1540,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1540,[[],["xtalen_w",3]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",1540,[[],["en32k_w",3]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",1540,[[],["en1k_w",3]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",1540,[[],["aampen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1540,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1540,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1540,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",1540,[[],["wrtlock_w",3]]],[0,"osc32k","atsamd21g::sysctrl","32kHz Internal Oscillator (OSC32K) Control",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::osc32k","Write proxy for field `ENABLE`",null,null],[3,"EN32K_W","","Write proxy for field `EN32K`",null,null],[3,"EN1K_W","","Write proxy for field `EN1K`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[6,"R","","Reader of register OSC32K",null,null],[6,"W","","Writer for register OSC32K",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"EN32K_R","","Reader of field `EN32K`",null,null],[6,"EN1K_R","","Reader of field `EN1K`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[11,"set_bit","","Sets the field bit",1541,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1541,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1541,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1542,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1542,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1542,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1543,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1543,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1543,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1544,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1544,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1544,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1545,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1545,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1545,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1546,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1547,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1547,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1547,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1548,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",6,[[],["en32k_r",6]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",6,[[],["en1k_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",6,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"enable","atsamd21g::sysctrl::osc32k","Bit 1 - Oscillator Enable",1549,[[],["enable_r",6]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",1549,[[],["en32k_r",6]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",1549,[[],["en1k_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1549,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1549,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1549,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",1549,[[],["wrtlock_r",6]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",1549,[[],["calib_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",7,[[],["en32k_w",3]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",7,[[],["en1k_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",7,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"enable","atsamd21g::sysctrl::osc32k","Bit 1 - Oscillator Enable",1550,[[],["enable_w",3]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",1550,[[],["en32k_w",3]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",1550,[[],["en1k_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1550,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1550,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1550,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",1550,[[],["wrtlock_w",3]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",1550,[[],["calib_w",3]]],[0,"osculp32k","atsamd21g::sysctrl","32kHz Ultra Low Power Internal Oscillator (OSCULP32K)…",null,null],[3,"CALIB_W","atsamd21g::sysctrl::osculp32k","Write proxy for field `CALIB`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[6,"R","","Reader of register OSCULP32K",null,null],[6,"W","","Writer for register OSCULP32K",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"bits","","Writes raw bits to the field",1551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1552,[[],["w",6]]],[11,"calib","atsamd21g::generic","Bits 0:4 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"wrtlock","","Bit 7 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"calib","atsamd21g::sysctrl::osculp32k","Bits 0:4 - Oscillator Calibration",1553,[[],["calib_r",6]]],[11,"wrtlock","","Bit 7 - Write Lock",1553,[[],["wrtlock_r",6]]],[11,"calib","atsamd21g::generic","Bits 0:4 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"wrtlock","","Bit 7 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"calib","atsamd21g::sysctrl::osculp32k","Bits 0:4 - Oscillator Calibration",1554,[[],["calib_w",3]]],[11,"wrtlock","","Bit 7 - Write Lock",1554,[[],["wrtlock_w",3]]],[0,"osc8m","atsamd21g::sysctrl","8MHz Internal Oscillator (OSC8M) Control",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::osc8m","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"PRESC_W","","Write proxy for field `PRESC`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[3,"FRANGE_W","","Write proxy for field `FRANGE`",null,null],[4,"PRESC_A","","Oscillator Prescaler",null,null],[13,"_0","","0: 1",1555,null],[13,"_1","","1: 2",1555,null],[13,"_2","","2: 4",1555,null],[13,"_3","","3: 8",1555,null],[4,"FRANGE_A","","Oscillator Frequency Range",null,null],[13,"_0","","0: 4 to 6MHz",1556,null],[13,"_1","","1: 6 to 8MHz",1556,null],[13,"_2","","2: 8 to 11MHz",1556,null],[13,"_3","","3: 11 to 15MHz",1556,null],[6,"R","","Reader of register OSC8M",null,null],[6,"W","","Writer for register OSC8M",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"PRESC_R","","Reader of field `PRESC`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[6,"FRANGE_R","","Reader of field `FRANGE`",null,null],[11,"set_bit","","Sets the field bit",1557,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1557,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1557,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1558,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1558,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1558,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1559,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1559,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1559,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["presc_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"variant","atsamd21g::sysctrl::osc8m","Get enumerated values variant",1560,[[],["presc_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",1560,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",1560,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",1560,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",1560,[[]]],[11,"variant","","Writes `variant` to the field",1561,[[["presc_a",4]],["w",6]]],[11,"_0","","1",1561,[[],["w",6]]],[11,"_1","","2",1561,[[],["w",6]]],[11,"_2","","4",1561,[[],["w",6]]],[11,"_3","","8",1561,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1561,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1562,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["frange_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"variant","atsamd21g::sysctrl::osc8m","Get enumerated values variant",1563,[[],["frange_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",1563,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",1563,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",1563,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",1563,[[]]],[11,"variant","","Writes `variant` to the field",1564,[[["frange_a",4]],["w",6]]],[11,"_0","","4 to 6MHz",1564,[[],["w",6]]],[11,"_1","","6 to 8MHz",1564,[[],["w",6]]],[11,"_2","","8 to 11MHz",1564,[[],["w",6]]],[11,"_3","","11 to 15MHz",1564,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1564,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",6,[[],["presc_r",6]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",6,[[],["frange_r",6]]],[11,"enable","atsamd21g::sysctrl::osc8m","Bit 1 - Oscillator Enable",1565,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1565,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1565,[[],["ondemand_r",6]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",1565,[[],["presc_r",6]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",1565,[[],["calib_r",6]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",1565,[[],["frange_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",7,[[],["presc_w",3]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",7,[[],["frange_w",3]]],[11,"enable","atsamd21g::sysctrl::osc8m","Bit 1 - Oscillator Enable",1566,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1566,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1566,[[],["ondemand_w",3]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",1566,[[],["presc_w",3]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",1566,[[],["calib_w",3]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",1566,[[],["frange_w",3]]],[0,"dfllctrl","atsamd21g::sysctrl","DFLL48M Control",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::dfllctrl","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"STABLE_W","","Write proxy for field `STABLE`",null,null],[3,"LLAW_W","","Write proxy for field `LLAW`",null,null],[3,"USBCRM_W","","Write proxy for field `USBCRM`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"CCDIS_W","","Write proxy for field `CCDIS`",null,null],[3,"QLDIS_W","","Write proxy for field `QLDIS`",null,null],[3,"BPLCKC_W","","Write proxy for field `BPLCKC`",null,null],[3,"WAITLOCK_W","","Write proxy for field `WAITLOCK`",null,null],[6,"R","","Reader of register DFLLCTRL",null,null],[6,"W","","Writer for register DFLLCTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"STABLE_R","","Reader of field `STABLE`",null,null],[6,"LLAW_R","","Reader of field `LLAW`",null,null],[6,"USBCRM_R","","Reader of field `USBCRM`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"CCDIS_R","","Reader of field `CCDIS`",null,null],[6,"QLDIS_R","","Reader of field `QLDIS`",null,null],[6,"BPLCKC_R","","Reader of field `BPLCKC`",null,null],[6,"WAITLOCK_R","","Reader of field `WAITLOCK`",null,null],[11,"set_bit","","Sets the field bit",1567,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1567,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1567,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1568,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1568,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1568,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1569,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1569,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1569,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1570,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1570,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1570,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1571,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1571,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1571,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1572,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1572,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1572,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1573,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1573,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1573,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1574,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1574,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1574,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1575,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1575,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1575,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1576,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1576,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1576,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1577,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1577,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1577,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - DFLL Enable",6,[[],["enable_r",6]]],[11,"mode","","Bit 2 - Operating Mode Selection",6,[[],["mode_r",6]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",6,[[],["stable_r",6]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",6,[[],["llaw_r",6]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",6,[[],["usbcrm_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",6,[[],["ccdis_r",6]]],[11,"qldis","","Bit 9 - Quick Lock Disable",6,[[],["qldis_r",6]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",6,[[],["bplckc_r",6]]],[11,"waitlock","","Bit 11 - Wait Lock",6,[[],["waitlock_r",6]]],[11,"enable","atsamd21g::sysctrl::dfllctrl","Bit 1 - DFLL Enable",1578,[[],["enable_r",6]]],[11,"mode","","Bit 2 - Operating Mode Selection",1578,[[],["mode_r",6]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",1578,[[],["stable_r",6]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",1578,[[],["llaw_r",6]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",1578,[[],["usbcrm_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1578,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1578,[[],["ondemand_r",6]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",1578,[[],["ccdis_r",6]]],[11,"qldis","","Bit 9 - Quick Lock Disable",1578,[[],["qldis_r",6]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",1578,[[],["bplckc_r",6]]],[11,"waitlock","","Bit 11 - Wait Lock",1578,[[],["waitlock_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - DFLL Enable",7,[[],["enable_w",3]]],[11,"mode","","Bit 2 - Operating Mode Selection",7,[[],["mode_w",3]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",7,[[],["stable_w",3]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",7,[[],["llaw_w",3]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",7,[[],["usbcrm_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",7,[[],["ccdis_w",3]]],[11,"qldis","","Bit 9 - Quick Lock Disable",7,[[],["qldis_w",3]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",7,[[],["bplckc_w",3]]],[11,"waitlock","","Bit 11 - Wait Lock",7,[[],["waitlock_w",3]]],[11,"enable","atsamd21g::sysctrl::dfllctrl","Bit 1 - DFLL Enable",1579,[[],["enable_w",3]]],[11,"mode","","Bit 2 - Operating Mode Selection",1579,[[],["mode_w",3]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",1579,[[],["stable_w",3]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",1579,[[],["llaw_w",3]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",1579,[[],["usbcrm_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1579,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1579,[[],["ondemand_w",3]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",1579,[[],["ccdis_w",3]]],[11,"qldis","","Bit 9 - Quick Lock Disable",1579,[[],["qldis_w",3]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",1579,[[],["bplckc_w",3]]],[11,"waitlock","","Bit 11 - Wait Lock",1579,[[],["waitlock_w",3]]],[0,"dfllval","atsamd21g::sysctrl","DFLL48M Value",null,null],[3,"FINE_W","atsamd21g::sysctrl::dfllval","Write proxy for field `FINE`",null,null],[3,"COARSE_W","","Write proxy for field `COARSE`",null,null],[6,"R","","Reader of register DFLLVAL",null,null],[6,"W","","Writer for register DFLLVAL",null,null],[6,"FINE_R","","Reader of field `FINE`",null,null],[6,"COARSE_R","","Reader of field `COARSE`",null,null],[6,"DIFF_R","","Reader of field `DIFF`",null,null],[11,"bits","","Writes raw bits to the field",1580,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1581,[[],["w",6]]],[11,"fine","atsamd21g::generic","Bits 0:9 - Fine Value",6,[[],["fine_r",6]]],[11,"coarse","","Bits 10:15 - Coarse Value",6,[[],["coarse_r",6]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",6,[[],["diff_r",6]]],[11,"fine","atsamd21g::sysctrl::dfllval","Bits 0:9 - Fine Value",1582,[[],["fine_r",6]]],[11,"coarse","","Bits 10:15 - Coarse Value",1582,[[],["coarse_r",6]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",1582,[[],["diff_r",6]]],[11,"fine","atsamd21g::generic","Bits 0:9 - Fine Value",7,[[],["fine_w",3]]],[11,"coarse","","Bits 10:15 - Coarse Value",7,[[],["coarse_w",3]]],[11,"fine","atsamd21g::sysctrl::dfllval","Bits 0:9 - Fine Value",1583,[[],["fine_w",3]]],[11,"coarse","","Bits 10:15 - Coarse Value",1583,[[],["coarse_w",3]]],[0,"dfllmul","atsamd21g::sysctrl","DFLL48M Multiplier",null,null],[3,"MUL_W","atsamd21g::sysctrl::dfllmul","Write proxy for field `MUL`",null,null],[3,"FSTEP_W","","Write proxy for field `FSTEP`",null,null],[3,"CSTEP_W","","Write proxy for field `CSTEP`",null,null],[6,"R","","Reader of register DFLLMUL",null,null],[6,"W","","Writer for register DFLLMUL",null,null],[6,"MUL_R","","Reader of field `MUL`",null,null],[6,"FSTEP_R","","Reader of field `FSTEP`",null,null],[6,"CSTEP_R","","Reader of field `CSTEP`",null,null],[11,"bits","","Writes raw bits to the field",1584,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1585,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1586,[[],["w",6]]],[11,"mul","atsamd21g::generic","Bits 0:15 - DFLL Multiply Factor",6,[[],["mul_r",6]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",6,[[],["fstep_r",6]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",6,[[],["cstep_r",6]]],[11,"mul","atsamd21g::sysctrl::dfllmul","Bits 0:15 - DFLL Multiply Factor",1587,[[],["mul_r",6]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",1587,[[],["fstep_r",6]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",1587,[[],["cstep_r",6]]],[11,"mul","atsamd21g::generic","Bits 0:15 - DFLL Multiply Factor",7,[[],["mul_w",3]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",7,[[],["fstep_w",3]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",7,[[],["cstep_w",3]]],[11,"mul","atsamd21g::sysctrl::dfllmul","Bits 0:15 - DFLL Multiply Factor",1588,[[],["mul_w",3]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",1588,[[],["fstep_w",3]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",1588,[[],["cstep_w",3]]],[0,"dfllsync","atsamd21g::sysctrl","DFLL48M Synchronization",null,null],[3,"READREQ_W","atsamd21g::sysctrl::dfllsync","Write proxy for field `READREQ`",null,null],[6,"W","","Writer for register DFLLSYNC",null,null],[11,"set_bit","","Sets the field bit",1589,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1589,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1589,[[],["w",6]]],[11,"readreq","atsamd21g::generic","Bit 7 - Read Request",7,[[],["readreq_w",3]]],[11,"readreq","atsamd21g::sysctrl::dfllsync","Bit 7 - Read Request",1590,[[],["readreq_w",3]]],[0,"bod33","atsamd21g::sysctrl","3.3V Brown-Out Detector (BOD33) Control",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::bod33","Write proxy for field `ENABLE`",null,null],[3,"HYST_W","","Write proxy for field `HYST`",null,null],[3,"ACTION_W","","Write proxy for field `ACTION`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"CEN_W","","Write proxy for field `CEN`",null,null],[3,"PSEL_W","","Write proxy for field `PSEL`",null,null],[3,"LEVEL_W","","Write proxy for field `LEVEL`",null,null],[4,"ACTION_A","","BOD33 Action",null,null],[13,"NONE","","0: No action",1591,null],[13,"RESET","","1: The BOD33 generates a reset",1591,null],[13,"INTERRUPT","","2: The BOD33 generates an interrupt",1591,null],[4,"PSEL_A","","Prescaler Select",null,null],[13,"DIV2","","0: Divide clock by 2",1592,null],[13,"DIV4","","1: Divide clock by 4",1592,null],[13,"DIV8","","2: Divide clock by 8",1592,null],[13,"DIV16","","3: Divide clock by 16",1592,null],[13,"DIV32","","4: Divide clock by 32",1592,null],[13,"DIV64","","5: Divide clock by 64",1592,null],[13,"DIV128","","6: Divide clock by 128",1592,null],[13,"DIV256","","7: Divide clock by 256",1592,null],[13,"DIV512","","8: Divide clock by 512",1592,null],[13,"DIV1K","","9: Divide clock by 1024",1592,null],[13,"DIV2K","","10: Divide clock by 2048",1592,null],[13,"DIV4K","","11: Divide clock by 4096",1592,null],[13,"DIV8K","","12: Divide clock by 8192",1592,null],[13,"DIV16K","","13: Divide clock by 16384",1592,null],[13,"DIV32K","","14: Divide clock by 32768",1592,null],[13,"DIV64K","","15: Divide clock by 65536",1592,null],[6,"R","","Reader of register BOD33",null,null],[6,"W","","Writer for register BOD33",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"HYST_R","","Reader of field `HYST`",null,null],[6,"ACTION_R","","Reader of field `ACTION`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"CEN_R","","Reader of field `CEN`",null,null],[6,"PSEL_R","","Reader of field `PSEL`",null,null],[6,"LEVEL_R","","Reader of field `LEVEL`",null,null],[11,"set_bit","","Sets the field bit",1593,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1593,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1593,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1594,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1594,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1594,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["action_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"is_interrupt","","Checks if the value of the field is `INTERRUPT`",6,[[]]],[11,"variant","atsamd21g::sysctrl::bod33","Get enumerated values variant",1595,[[],[["variant",4],["action_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1595,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",1595,[[]]],[11,"is_interrupt","","Checks if the value of the field is `INTERRUPT`",1595,[[]]],[11,"variant","","Writes `variant` to the field",1596,[[["action_a",4]],["w",6]]],[11,"none","","No action",1596,[[],["w",6]]],[11,"reset","","The BOD33 generates a reset",1596,[[],["w",6]]],[11,"interrupt","","The BOD33 generates an interrupt",1596,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1596,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1597,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1597,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1597,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1598,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1598,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1598,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1599,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1599,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1599,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["psel_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1k","","Checks if the value of the field is `DIV1K`",6,[[]]],[11,"is_div2k","","Checks if the value of the field is `DIV2K`",6,[[]]],[11,"is_div4k","","Checks if the value of the field is `DIV4K`",6,[[]]],[11,"is_div8k","","Checks if the value of the field is `DIV8K`",6,[[]]],[11,"is_div16k","","Checks if the value of the field is `DIV16K`",6,[[]]],[11,"is_div32k","","Checks if the value of the field is `DIV32K`",6,[[]]],[11,"is_div64k","","Checks if the value of the field is `DIV64K`",6,[[]]],[11,"variant","atsamd21g::sysctrl::bod33","Get enumerated values variant",1600,[[],["psel_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1600,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1600,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1600,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1600,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1600,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1600,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1600,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1600,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1600,[[]]],[11,"is_div1k","","Checks if the value of the field is `DIV1K`",1600,[[]]],[11,"is_div2k","","Checks if the value of the field is `DIV2K`",1600,[[]]],[11,"is_div4k","","Checks if the value of the field is `DIV4K`",1600,[[]]],[11,"is_div8k","","Checks if the value of the field is `DIV8K`",1600,[[]]],[11,"is_div16k","","Checks if the value of the field is `DIV16K`",1600,[[]]],[11,"is_div32k","","Checks if the value of the field is `DIV32K`",1600,[[]]],[11,"is_div64k","","Checks if the value of the field is `DIV64K`",1600,[[]]],[11,"variant","","Writes `variant` to the field",1601,[[["psel_a",4]],["w",6]]],[11,"div2","","Divide clock by 2",1601,[[],["w",6]]],[11,"div4","","Divide clock by 4",1601,[[],["w",6]]],[11,"div8","","Divide clock by 8",1601,[[],["w",6]]],[11,"div16","","Divide clock by 16",1601,[[],["w",6]]],[11,"div32","","Divide clock by 32",1601,[[],["w",6]]],[11,"div64","","Divide clock by 64",1601,[[],["w",6]]],[11,"div128","","Divide clock by 128",1601,[[],["w",6]]],[11,"div256","","Divide clock by 256",1601,[[],["w",6]]],[11,"div512","","Divide clock by 512",1601,[[],["w",6]]],[11,"div1k","","Divide clock by 1024",1601,[[],["w",6]]],[11,"div2k","","Divide clock by 2048",1601,[[],["w",6]]],[11,"div4k","","Divide clock by 4096",1601,[[],["w",6]]],[11,"div8k","","Divide clock by 8192",1601,[[],["w",6]]],[11,"div16k","","Divide clock by 16384",1601,[[],["w",6]]],[11,"div32k","","Divide clock by 32768",1601,[[],["w",6]]],[11,"div64k","","Divide clock by 65536",1601,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1601,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1602,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"hyst","","Bit 2 - Hysteresis",6,[[],["hyst_r",6]]],[11,"action","","Bits 3:4 - BOD33 Action",6,[[],["action_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 8 - Operation Mode",6,[[],["mode_r",6]]],[11,"cen","","Bit 9 - Clock Enable",6,[[],["cen_r",6]]],[11,"psel","","Bits 12:15 - Prescaler Select",6,[[],["psel_r",6]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",6,[[],["level_r",6]]],[11,"enable","atsamd21g::sysctrl::bod33","Bit 1 - Enable",1603,[[],["enable_r",6]]],[11,"hyst","","Bit 2 - Hysteresis",1603,[[],["hyst_r",6]]],[11,"action","","Bits 3:4 - BOD33 Action",1603,[[],["action_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1603,[[],["runstdby_r",6]]],[11,"mode","","Bit 8 - Operation Mode",1603,[[],["mode_r",6]]],[11,"cen","","Bit 9 - Clock Enable",1603,[[],["cen_r",6]]],[11,"psel","","Bits 12:15 - Prescaler Select",1603,[[],["psel_r",6]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",1603,[[],["level_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"hyst","","Bit 2 - Hysteresis",7,[[],["hyst_w",3]]],[11,"action","","Bits 3:4 - BOD33 Action",7,[[],["action_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 8 - Operation Mode",7,[[],["mode_w",3]]],[11,"cen","","Bit 9 - Clock Enable",7,[[],["cen_w",3]]],[11,"psel","","Bits 12:15 - Prescaler Select",7,[[],["psel_w",3]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",7,[[],["level_w",3]]],[11,"enable","atsamd21g::sysctrl::bod33","Bit 1 - Enable",1604,[[],["enable_w",3]]],[11,"hyst","","Bit 2 - Hysteresis",1604,[[],["hyst_w",3]]],[11,"action","","Bits 3:4 - BOD33 Action",1604,[[],["action_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1604,[[],["runstdby_w",3]]],[11,"mode","","Bit 8 - Operation Mode",1604,[[],["mode_w",3]]],[11,"cen","","Bit 9 - Clock Enable",1604,[[],["cen_w",3]]],[11,"psel","","Bits 12:15 - Prescaler Select",1604,[[],["psel_w",3]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",1604,[[],["level_w",3]]],[0,"vreg","atsamd21g::sysctrl","Voltage Regulator System (VREG) Control",null,null],[3,"RUNSTDBY_W","atsamd21g::sysctrl::vreg","Write proxy for field `RUNSTDBY`",null,null],[3,"FORCELDO_W","","Write proxy for field `FORCELDO`",null,null],[6,"R","","Reader of register VREG",null,null],[6,"W","","Writer for register VREG",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"FORCELDO_R","","Reader of field `FORCELDO`",null,null],[11,"set_bit","","Sets the field bit",1605,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1605,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1605,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1606,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1606,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1606,[[],["w",6]]],[11,"runstdby","atsamd21g::generic","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"forceldo","","Bit 13 - Force LDO Voltage Regulator",6,[[],["forceldo_r",6]]],[11,"runstdby","atsamd21g::sysctrl::vreg","Bit 6 - Run in Standby",1607,[[],["runstdby_r",6]]],[11,"forceldo","","Bit 13 - Force LDO Voltage Regulator",1607,[[],["forceldo_r",6]]],[11,"runstdby","atsamd21g::generic","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"forceldo","","Bit 13 - Force LDO Voltage Regulator",7,[[],["forceldo_w",3]]],[11,"runstdby","atsamd21g::sysctrl::vreg","Bit 6 - Run in Standby",1608,[[],["runstdby_w",3]]],[11,"forceldo","","Bit 13 - Force LDO Voltage Regulator",1608,[[],["forceldo_w",3]]],[0,"vref","atsamd21g::sysctrl","Voltage References System (VREF) Control",null,null],[3,"TSEN_W","atsamd21g::sysctrl::vref","Write proxy for field `TSEN`",null,null],[3,"BGOUTEN_W","","Write proxy for field `BGOUTEN`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[6,"R","","Reader of register VREF",null,null],[6,"W","","Writer for register VREF",null,null],[6,"TSEN_R","","Reader of field `TSEN`",null,null],[6,"BGOUTEN_R","","Reader of field `BGOUTEN`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[11,"set_bit","","Sets the field bit",1609,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1609,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1609,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1610,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1610,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1610,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1611,[[],["w",6]]],[11,"tsen","atsamd21g::generic","Bit 1 - Temperature Sensor Enable",6,[[],["tsen_r",6]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",6,[[],["bgouten_r",6]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",6,[[],["calib_r",6]]],[11,"tsen","atsamd21g::sysctrl::vref","Bit 1 - Temperature Sensor Enable",1612,[[],["tsen_r",6]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",1612,[[],["bgouten_r",6]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",1612,[[],["calib_r",6]]],[11,"tsen","atsamd21g::generic","Bit 1 - Temperature Sensor Enable",7,[[],["tsen_w",3]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",7,[[],["bgouten_w",3]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",7,[[],["calib_w",3]]],[11,"tsen","atsamd21g::sysctrl::vref","Bit 1 - Temperature Sensor Enable",1613,[[],["tsen_w",3]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",1613,[[],["bgouten_w",3]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",1613,[[],["calib_w",3]]],[0,"dpllctrla","atsamd21g::sysctrl","DPLL Control A",null,null],[3,"ENABLE_W","atsamd21g::sysctrl::dpllctrla","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[6,"R","","Reader of register DPLLCTRLA",null,null],[6,"W","","Writer for register DPLLCTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[11,"set_bit","","Sets the field bit",1614,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1614,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1614,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1615,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1615,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1615,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1616,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1616,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1616,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - DPLL Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",6,[[],["ondemand_r",6]]],[11,"enable","atsamd21g::sysctrl::dpllctrla","Bit 1 - DPLL Enable",1617,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1617,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",1617,[[],["ondemand_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - DPLL Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",7,[[],["ondemand_w",3]]],[11,"enable","atsamd21g::sysctrl::dpllctrla","Bit 1 - DPLL Enable",1618,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1618,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",1618,[[],["ondemand_w",3]]],[0,"dpllratio","atsamd21g::sysctrl","DPLL Ratio Control",null,null],[3,"LDR_W","atsamd21g::sysctrl::dpllratio","Write proxy for field `LDR`",null,null],[3,"LDRFRAC_W","","Write proxy for field `LDRFRAC`",null,null],[6,"R","","Reader of register DPLLRATIO",null,null],[6,"W","","Writer for register DPLLRATIO",null,null],[6,"LDR_R","","Reader of field `LDR`",null,null],[6,"LDRFRAC_R","","Reader of field `LDRFRAC`",null,null],[11,"bits","","Writes raw bits to the field",1619,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1620,[[],["w",6]]],[11,"ldr","atsamd21g::generic","Bits 0:11 - Loop Divider Ratio",6,[[],["ldr_r",6]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",6,[[],["ldrfrac_r",6]]],[11,"ldr","atsamd21g::sysctrl::dpllratio","Bits 0:11 - Loop Divider Ratio",1621,[[],["ldr_r",6]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",1621,[[],["ldrfrac_r",6]]],[11,"ldr","atsamd21g::generic","Bits 0:11 - Loop Divider Ratio",7,[[],["ldr_w",3]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",7,[[],["ldrfrac_w",3]]],[11,"ldr","atsamd21g::sysctrl::dpllratio","Bits 0:11 - Loop Divider Ratio",1622,[[],["ldr_w",3]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",1622,[[],["ldrfrac_w",3]]],[0,"dpllctrlb","atsamd21g::sysctrl","DPLL Control B",null,null],[3,"FILTER_W","atsamd21g::sysctrl::dpllctrlb","Write proxy for field `FILTER`",null,null],[3,"LPEN_W","","Write proxy for field `LPEN`",null,null],[3,"WUF_W","","Write proxy for field `WUF`",null,null],[3,"REFCLK_W","","Write proxy for field `REFCLK`",null,null],[3,"LTIME_W","","Write proxy for field `LTIME`",null,null],[3,"LBYPASS_W","","Write proxy for field `LBYPASS`",null,null],[3,"DIV_W","","Write proxy for field `DIV`",null,null],[4,"FILTER_A","","Proportional Integral Filter Selection",null,null],[13,"DEFAULT","","0: Default filter mode",1623,null],[13,"LBFILT","","1: Low bandwidth filter",1623,null],[13,"HBFILT","","2: High bandwidth filter",1623,null],[13,"HDFILT","","3: High damping filter",1623,null],[4,"REFCLK_A","","Reference Clock Selection",null,null],[13,"REF0","","0: CLK_DPLL_REF0 clock reference",1624,null],[13,"REF1","","1: CLK_DPLL_REF1 clock reference",1624,null],[13,"GCLK","","2: GCLK_DPLL clock reference",1624,null],[4,"LTIME_A","","Lock Time",null,null],[13,"DEFAULT","","0: No time-out",1625,null],[13,"_8MS","","4: Time-out if no lock within 8 ms",1625,null],[13,"_9MS","","5: Time-out if no lock within 9 ms",1625,null],[13,"_10MS","","6: Time-out if no lock within 10 ms",1625,null],[13,"_11MS","","7: Time-out if no lock within 11 ms",1625,null],[6,"R","","Reader of register DPLLCTRLB",null,null],[6,"W","","Writer for register DPLLCTRLB",null,null],[6,"FILTER_R","","Reader of field `FILTER`",null,null],[6,"LPEN_R","","Reader of field `LPEN`",null,null],[6,"WUF_R","","Reader of field `WUF`",null,null],[6,"REFCLK_R","","Reader of field `REFCLK`",null,null],[6,"LTIME_R","","Reader of field `LTIME`",null,null],[6,"LBYPASS_R","","Reader of field `LBYPASS`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["filter_a",4]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_lbfilt","","Checks if the value of the field is `LBFILT`",6,[[]]],[11,"is_hbfilt","","Checks if the value of the field is `HBFILT`",6,[[]]],[11,"is_hdfilt","","Checks if the value of the field is `HDFILT`",6,[[]]],[11,"variant","atsamd21g::sysctrl::dpllctrlb","Get enumerated values variant",1626,[[],["filter_a",4]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",1626,[[]]],[11,"is_lbfilt","","Checks if the value of the field is `LBFILT`",1626,[[]]],[11,"is_hbfilt","","Checks if the value of the field is `HBFILT`",1626,[[]]],[11,"is_hdfilt","","Checks if the value of the field is `HDFILT`",1626,[[]]],[11,"variant","","Writes `variant` to the field",1627,[[["filter_a",4]],["w",6]]],[11,"default","","Default filter mode",1627,[[],["w",6]]],[11,"lbfilt","","Low bandwidth filter",1627,[[],["w",6]]],[11,"hbfilt","","High bandwidth filter",1627,[[],["w",6]]],[11,"hdfilt","","High damping filter",1627,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1627,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1628,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1628,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1628,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1629,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1629,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1629,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["refclk_a",4]]]],[11,"is_ref0","","Checks if the value of the field is `REF0`",6,[[]]],[11,"is_ref1","","Checks if the value of the field is `REF1`",6,[[]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"variant","atsamd21g::sysctrl::dpllctrlb","Get enumerated values variant",1630,[[],[["variant",4],["refclk_a",4]]]],[11,"is_ref0","","Checks if the value of the field is `REF0`",1630,[[]]],[11,"is_ref1","","Checks if the value of the field is `REF1`",1630,[[]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1630,[[]]],[11,"variant","","Writes `variant` to the field",1631,[[["refclk_a",4]],["w",6]]],[11,"ref0","","CLK_DPLL_REF0 clock reference",1631,[[],["w",6]]],[11,"ref1","","CLK_DPLL_REF1 clock reference",1631,[[],["w",6]]],[11,"gclk","","GCLK_DPLL clock reference",1631,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1631,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["ltime_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_8ms","","Checks if the value of the field is `_8MS`",6,[[]]],[11,"is_9ms","","Checks if the value of the field is `_9MS`",6,[[]]],[11,"is_10ms","","Checks if the value of the field is `_10MS`",6,[[]]],[11,"is_11ms","","Checks if the value of the field is `_11MS`",6,[[]]],[11,"variant","atsamd21g::sysctrl::dpllctrlb","Get enumerated values variant",1632,[[],[["ltime_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",1632,[[]]],[11,"is_8ms","","Checks if the value of the field is `_8MS`",1632,[[]]],[11,"is_9ms","","Checks if the value of the field is `_9MS`",1632,[[]]],[11,"is_10ms","","Checks if the value of the field is `_10MS`",1632,[[]]],[11,"is_11ms","","Checks if the value of the field is `_11MS`",1632,[[]]],[11,"variant","","Writes `variant` to the field",1633,[[["ltime_a",4]],["w",6]]],[11,"default","","No time-out",1633,[[],["w",6]]],[11,"_8ms","","Time-out if no lock within 8 ms",1633,[[],["w",6]]],[11,"_9ms","","Time-out if no lock within 9 ms",1633,[[],["w",6]]],[11,"_10ms","","Time-out if no lock within 10 ms",1633,[[],["w",6]]],[11,"_11ms","","Time-out if no lock within 11 ms",1633,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1633,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1634,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1634,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1634,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1635,[[],["w",6]]],[11,"filter","atsamd21g::generic","Bits 0:1 - Proportional Integral Filter Selection",6,[[],["filter_r",6]]],[11,"lpen","","Bit 2 - Low-Power Enable",6,[[],["lpen_r",6]]],[11,"wuf","","Bit 3 - Wake Up Fast",6,[[],["wuf_r",6]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",6,[[],["refclk_r",6]]],[11,"ltime","","Bits 8:10 - Lock Time",6,[[],["ltime_r",6]]],[11,"lbypass","","Bit 12 - Lock Bypass",6,[[],["lbypass_r",6]]],[11,"div","","Bits 16:26 - Clock Divider",6,[[],["div_r",6]]],[11,"filter","atsamd21g::sysctrl::dpllctrlb","Bits 0:1 - Proportional Integral Filter Selection",1636,[[],["filter_r",6]]],[11,"lpen","","Bit 2 - Low-Power Enable",1636,[[],["lpen_r",6]]],[11,"wuf","","Bit 3 - Wake Up Fast",1636,[[],["wuf_r",6]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",1636,[[],["refclk_r",6]]],[11,"ltime","","Bits 8:10 - Lock Time",1636,[[],["ltime_r",6]]],[11,"lbypass","","Bit 12 - Lock Bypass",1636,[[],["lbypass_r",6]]],[11,"div","","Bits 16:26 - Clock Divider",1636,[[],["div_r",6]]],[11,"filter","atsamd21g::generic","Bits 0:1 - Proportional Integral Filter Selection",7,[[],["filter_w",3]]],[11,"lpen","","Bit 2 - Low-Power Enable",7,[[],["lpen_w",3]]],[11,"wuf","","Bit 3 - Wake Up Fast",7,[[],["wuf_w",3]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",7,[[],["refclk_w",3]]],[11,"ltime","","Bits 8:10 - Lock Time",7,[[],["ltime_w",3]]],[11,"lbypass","","Bit 12 - Lock Bypass",7,[[],["lbypass_w",3]]],[11,"div","","Bits 16:26 - Clock Divider",7,[[],["div_w",3]]],[11,"filter","atsamd21g::sysctrl::dpllctrlb","Bits 0:1 - Proportional Integral Filter Selection",1637,[[],["filter_w",3]]],[11,"lpen","","Bit 2 - Low-Power Enable",1637,[[],["lpen_w",3]]],[11,"wuf","","Bit 3 - Wake Up Fast",1637,[[],["wuf_w",3]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",1637,[[],["refclk_w",3]]],[11,"ltime","","Bits 8:10 - Lock Time",1637,[[],["ltime_w",3]]],[11,"lbypass","","Bit 12 - Lock Bypass",1637,[[],["lbypass_w",3]]],[11,"div","","Bits 16:26 - Clock Divider",1637,[[],["div_w",3]]],[0,"dpllstatus","atsamd21g::sysctrl","DPLL Status",null,null],[6,"R","atsamd21g::sysctrl::dpllstatus","Reader of register DPLLSTATUS",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"CLKRDY_R","","Reader of field `CLKRDY`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"lock","atsamd21g::generic","Bit 0 - DPLL Lock Status",6,[[],["lock_r",6]]],[11,"clkrdy","","Bit 1 - Output Clock Ready",6,[[],["clkrdy_r",6]]],[11,"enable","","Bit 2 - DPLL Enable",6,[[],["enable_r",6]]],[11,"div","","Bit 3 - Divider Enable",6,[[],["div_r",6]]],[11,"lock","atsamd21g::sysctrl::dpllstatus","Bit 0 - DPLL Lock Status",1638,[[],["lock_r",6]]],[11,"clkrdy","","Bit 1 - Output Clock Ready",1638,[[],["clkrdy_r",6]]],[11,"enable","","Bit 2 - DPLL Enable",1638,[[],["enable_r",6]]],[11,"div","","Bit 3 - Divider Enable",1638,[[],["div_r",6]]],[6,"INTENCLR","atsamd21g::sysctrl","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"PCLKSR","","Power and Clocks Status",null,null],[6,"XOSC","","External Multipurpose Crystal Oscillator (XOSC) Control",null,null],[6,"XOSC32K","","32kHz External Crystal Oscillator (XOSC32K) Control",null,null],[6,"OSC32K","","32kHz Internal Oscillator (OSC32K) Control",null,null],[6,"OSCULP32K","","32kHz Ultra Low Power Internal Oscillator (OSCULP32K)…",null,null],[6,"OSC8M","","8MHz Internal Oscillator (OSC8M) Control",null,null],[6,"DFLLCTRL","","DFLL48M Control",null,null],[6,"DFLLVAL","","DFLL48M Value",null,null],[6,"DFLLMUL","","DFLL48M Multiplier",null,null],[6,"DFLLSYNC","","DFLL48M Synchronization",null,null],[6,"BOD33","","3.3V Brown-Out Detector (BOD33) Control",null,null],[6,"VREG","","Voltage Regulator System (VREG) Control",null,null],[6,"VREF","","Voltage References System (VREF) Control",null,null],[6,"DPLLCTRLA","","DPLL Control A",null,null],[6,"DPLLRATIO","","DPLL Ratio Control",null,null],[6,"DPLLCTRLB","","DPLL Control B",null,null],[6,"DPLLSTATUS","","DPLL Status",null,null],[0,"tc3","atsamd21g","Basic Timer Counter 3",null,null],[3,"RegisterBlock","atsamd21g::tc3","Register block",null,null],[3,"COUNT8","","Register block",null,null],[12,"ctrla","","0x00 - Control A",1639,null],[12,"readreq","","0x02 - Read Request",1639,null],[12,"ctrlbclr","","0x04 - Control B Clear",1639,null],[12,"ctrlbset","","0x05 - Control B Set",1639,null],[12,"ctrlc","","0x06 - Control C",1639,null],[12,"dbgctrl","","0x08 - Debug Control",1639,null],[12,"evctrl","","0x0a - Event Control",1639,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1639,null],[12,"intenset","","0x0d - Interrupt Enable Set",1639,null],[12,"intflag","","0x0e - Interrupt Flag Status and Clear",1639,null],[12,"status","","0x0f - Status",1639,null],[12,"count","","0x10 - COUNT8 Counter Value",1639,null],[12,"per","","0x14 - COUNT8 Period Value",1639,null],[12,"cc","","0x18 - COUNT8 Compare/Capture",1639,null],[3,"COUNT16","","Register block",null,null],[12,"ctrla","","0x00 - Control A",1640,null],[12,"readreq","","0x02 - Read Request",1640,null],[12,"ctrlbclr","","0x04 - Control B Clear",1640,null],[12,"ctrlbset","","0x05 - Control B Set",1640,null],[12,"ctrlc","","0x06 - Control C",1640,null],[12,"dbgctrl","","0x08 - Debug Control",1640,null],[12,"evctrl","","0x0a - Event Control",1640,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1640,null],[12,"intenset","","0x0d - Interrupt Enable Set",1640,null],[12,"intflag","","0x0e - Interrupt Flag Status and Clear",1640,null],[12,"status","","0x0f - Status",1640,null],[12,"count","","0x10 - COUNT16 Counter Value",1640,null],[12,"cc","","0x18 - COUNT16 Compare/Capture",1640,null],[3,"COUNT32","","Register block",null,null],[12,"ctrla","","0x00 - Control A",1641,null],[12,"readreq","","0x02 - Read Request",1641,null],[12,"ctrlbclr","","0x04 - Control B Clear",1641,null],[12,"ctrlbset","","0x05 - Control B Set",1641,null],[12,"ctrlc","","0x06 - Control C",1641,null],[12,"dbgctrl","","0x08 - Debug Control",1641,null],[12,"evctrl","","0x0a - Event Control",1641,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1641,null],[12,"intenset","","0x0d - Interrupt Enable Set",1641,null],[12,"intflag","","0x0e - Interrupt Flag Status and Clear",1641,null],[12,"status","","0x0f - Status",1641,null],[12,"count","","0x10 - COUNT32 Counter Value",1641,null],[12,"cc","","0x18 - COUNT32 Compare/Capture",1641,null],[0,"count8","","Register block 8-bit Counter Mode",null,null],[0,"ctrla","atsamd21g::tc3::count8","Control A",null,null],[3,"SWRST_W","atsamd21g::tc3::count8::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"WAVEGEN_W","","Write proxy for field `WAVEGEN`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[4,"MODE_A","","TC Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",1642,null],[13,"COUNT8","","1: Counter in 8-bit mode",1642,null],[13,"COUNT32","","2: Counter in 32-bit mode",1642,null],[4,"WAVEGEN_A","","Waveform Generation Operation",null,null],[13,"NFRQ","","0: `0`",1643,null],[13,"MFRQ","","1: `1`",1643,null],[13,"NPWM","","2: `10`",1643,null],[13,"MPWM","","3: `11`",1643,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",1644,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",1644,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",1644,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",1644,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",1644,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",1644,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",1644,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",1644,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",1645,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",1645,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock.…",1645,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[11,"set_bit","","Sets the field bit",1646,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1646,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1646,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1647,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1647,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1647,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::ctrla","Get enumerated values variant",1648,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1648,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",1648,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1648,[[]]],[11,"variant","","Writes `variant` to the field",1649,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",1649,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",1649,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",1649,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1649,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::ctrla","Get enumerated values variant",1650,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1650,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1650,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1650,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",1650,[[]]],[11,"variant","","Writes `variant` to the field",1651,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","`0`",1651,[[],["w",6]]],[11,"mfrq","","`1`",1651,[[],["w",6]]],[11,"npwm","","`10`",1651,[[],["w",6]]],[11,"mpwm","","`11`",1651,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1651,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::ctrla","Get enumerated values variant",1652,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1652,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1652,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1652,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1652,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1652,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1652,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1652,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1652,[[]]],[11,"variant","","Writes `variant` to the field",1653,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",1653,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",1653,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",1653,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",1653,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",1653,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",1653,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",1653,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",1653,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1653,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1654,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1654,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1654,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::ctrla","Get enumerated values variant",1655,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1655,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1655,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1655,[[]]],[11,"variant","","Writes `variant` to the field",1656,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",1656,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",1656,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock. Reset…",1656,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1656,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",6,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",6,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"enable","atsamd21g::tc3::count8::ctrla","Bit 1 - Enable",1657,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",1657,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1657,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1657,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1657,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1657,[[],["prescsync_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",7,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",7,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"swrst","atsamd21g::tc3::count8::ctrla","Bit 0 - Software Reset",1658,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1658,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",1658,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1658,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1658,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1658,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1658,[[],["prescsync_w",3]]],[0,"readreq","atsamd21g::tc3::count8","Read Request",null,null],[3,"ADDR_W","atsamd21g::tc3::count8::readreq","Write proxy for field `ADDR`",null,null],[3,"RCONT_W","","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[6,"RREQ_R","","Reader of field `RREQ`",null,null],[11,"bits","","Writes raw bits to the field",1659,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1660,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1660,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1660,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1661,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1661,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1661,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:4 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",6,[[],["rreq_r",6]]],[11,"addr","atsamd21g::tc3::count8::readreq","Bits 0:4 - Address",1662,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1662,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",1662,[[],["rreq_r",6]]],[11,"addr","atsamd21g::generic","Bits 0:4 - Address",7,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"addr","atsamd21g::tc3::count8::readreq","Bits 0:4 - Address",1663,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",1663,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1663,[[],["rreq_w",3]]],[0,"ctrlbclr","atsamd21g::tc3::count8","Control B Clear",null,null],[3,"DIR_W","atsamd21g::tc3::count8::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1664,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1664,null],[13,"STOP","","2: Force a stop",1664,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1665,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1665,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1665,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1666,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::ctrlbclr","Get enumerated values variant",1667,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1667,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1667,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1667,[[]]],[11,"variant","","Writes `variant` to the field",1668,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1668,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1668,[[],["w",6]]],[11,"stop","","Force a stop",1668,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1668,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tc3::count8::ctrlbclr","Bit 0 - Counter Direction",1669,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1669,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1669,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tc3::count8::ctrlbclr","Bit 0 - Counter Direction",1670,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1670,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1670,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd21g::tc3::count8","Control B Set",null,null],[3,"DIR_W","atsamd21g::tc3::count8::ctrlbset","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1671,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1671,null],[13,"STOP","","2: Force a stop",1671,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1672,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1672,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1672,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1673,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1673,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1673,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::ctrlbset","Get enumerated values variant",1674,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1674,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1674,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1674,[[]]],[11,"variant","","Writes `variant` to the field",1675,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1675,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1675,[[],["w",6]]],[11,"stop","","Force a stop",1675,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1675,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tc3::count8::ctrlbset","Bit 0 - Counter Direction",1676,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1676,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1676,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tc3::count8::ctrlbset","Bit 0 - Counter Direction",1677,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1677,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1677,[[],["cmd_w",3]]],[0,"ctrlc","atsamd21g::tc3::count8","Control C",null,null],[3,"INVEN0_W","atsamd21g::tc3::count8::ctrlc","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[11,"set_bit","","Sets the field bit",1678,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1678,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1678,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1679,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1679,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1679,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1680,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1680,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1680,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1681,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1681,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1681,[[],["w",6]]],[11,"inven0","atsamd21g::generic","Bit 0 - Output Waveform 0 Invert Enable",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",6,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"inven0","atsamd21g::tc3::count8::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1682,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1682,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1682,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1682,[[],["cpten1_r",6]]],[11,"inven0","atsamd21g::generic","Bit 0 - Output Waveform 0 Invert Enable",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",7,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"inven0","atsamd21g::tc3::count8::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1683,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1683,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1683,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1683,[[],["cpten1_w",3]]],[0,"dbgctrl","atsamd21g::tc3::count8","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::tc3::count8::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1684,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1684,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1684,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::tc3::count8::dbgctrl","Bit 0 - Debug Run Mode",1685,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::tc3::count8::dbgctrl","Bit 0 - Debug Run Mode",1686,[[],["dbgrun_w",3]]],[0,"evctrl","atsamd21g::tc3::count8","Event Control",null,null],[3,"EVACT_W","atsamd21g::tc3::count8::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1687,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",1687,null],[13,"COUNT","","2: Count on event",1687,null],[13,"START","","3: Start TC on event",1687,null],[13,"PPW","","5: Period captured in CC0, pulse width in CC1",1687,null],[13,"PWP","","6: Period captured in CC1, pulse width in CC0",1687,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"variant","atsamd21g::tc3::count8::evctrl","Get enumerated values variant",1688,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1688,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1688,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1688,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1688,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1688,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1688,[[]]],[11,"variant","","Writes `variant` to the field",1689,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1689,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",1689,[[],["w",6]]],[11,"count","","Count on event",1689,[[],["w",6]]],[11,"start","","Start TC on event",1689,[[],["w",6]]],[11,"ppw","","Period captured in CC0, pulse width in CC1",1689,[[],["w",6]]],[11,"pwp","","Period captured in CC1, pulse width in CC0",1689,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1689,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1690,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1690,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1690,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1691,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1691,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1691,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1692,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1692,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1692,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1693,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1693,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1693,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1694,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1694,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1694,[[],["w",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd21g::tc3::count8::evctrl","Bits 0:2 - Event Action",1695,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1695,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",1695,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1695,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1695,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1695,[[],["mceo1_r",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd21g::tc3::count8::evctrl","Bits 0:2 - Event Action",1696,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1696,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",1696,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1696,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1696,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1696,[[],["mceo1_w",3]]],[0,"intenclr","atsamd21g::tc3::count8","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd21g::tc3::count8::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1697,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1697,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1697,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1698,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1698,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1698,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1699,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1700,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1700,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1700,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1701,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1701,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1701,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count8::intenclr","Bit 0 - Overflow Interrupt Enable",1702,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1702,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1702,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1702,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1702,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count8::intenclr","Bit 0 - Overflow Interrupt Enable",1703,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1703,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1703,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1703,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1703,[[],["mc1_w",3]]],[0,"intenset","atsamd21g::tc3::count8","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd21g::tc3::count8::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1704,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1704,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1704,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1705,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1705,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1705,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1706,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1706,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1706,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1707,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1707,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1707,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1708,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1708,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1708,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count8::intenset","Bit 0 - Overflow Interrupt Enable",1709,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1709,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1709,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1709,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1709,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count8::intenset","Bit 0 - Overflow Interrupt Enable",1710,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1710,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1710,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1710,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1710,[[],["mc1_w",3]]],[0,"intflag","atsamd21g::tc3::count8","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd21g::tc3::count8::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1711,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1711,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1711,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1712,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1712,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1712,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1713,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1713,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1713,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1714,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1714,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1714,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1715,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1715,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1715,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count8::intflag","Bit 0 - Overflow",1716,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1716,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1716,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1716,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1716,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count8::intflag","Bit 0 - Overflow",1717,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1717,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1717,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1717,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1717,[[],["mc1_w",3]]],[0,"status","atsamd21g::tc3::count8","Status",null,null],[6,"R","atsamd21g::tc3::count8::status","Reader of register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"stop","atsamd21g::generic","Bit 3 - Stop",6,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"stop","atsamd21g::tc3::count8::status","Bit 3 - Stop",1718,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",1718,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",1718,[[],["syncbusy_r",6]]],[0,"count","atsamd21g::tc3::count8","COUNT8 Counter Value",null,null],[3,"COUNT_W","atsamd21g::tc3::count8::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1719,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 0:7 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tc3::count8::count","Bits 0:7 - Counter Value",1720,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 0:7 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tc3::count8::count","Bits 0:7 - Counter Value",1721,[[],["count_w",3]]],[0,"per","atsamd21g::tc3::count8","COUNT8 Period Value",null,null],[3,"PER_W","atsamd21g::tc3::count8::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1722,[[],["w",6]]],[11,"per","atsamd21g::generic","Bits 0:7 - Period Value",6,[[],["per_r",6]]],[11,"per","atsamd21g::tc3::count8::per","Bits 0:7 - Period Value",1723,[[],["per_r",6]]],[11,"per","atsamd21g::generic","Bits 0:7 - Period Value",7,[[],["per_w",3]]],[11,"per","atsamd21g::tc3::count8::per","Bits 0:7 - Period Value",1724,[[],["per_w",3]]],[0,"cc","atsamd21g::tc3::count8","COUNT8 Compare/Capture",null,null],[3,"CC_W","atsamd21g::tc3::count8::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1725,[[],["w",6]]],[11,"cc","atsamd21g::generic","Bits 0:7 - Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd21g::tc3::count8::cc","Bits 0:7 - Compare/Capture Value",1726,[[],["cc_r",6]]],[11,"cc","atsamd21g::generic","Bits 0:7 - Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd21g::tc3::count8::cc","Bits 0:7 - Compare/Capture Value",1727,[[],["cc_w",3]]],[6,"CTRLA","atsamd21g::tc3::count8","Control A",null,null],[6,"READREQ","","Read Request",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"CTRLC","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","COUNT8 Counter Value",null,null],[6,"PER","","COUNT8 Period Value",null,null],[6,"CC","","COUNT8 Compare/Capture",null,null],[0,"count16","atsamd21g::tc3","Register block 16-bit Counter Mode",null,null],[0,"ctrla","atsamd21g::tc3::count16","Control A",null,null],[3,"SWRST_W","atsamd21g::tc3::count16::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"WAVEGEN_W","","Write proxy for field `WAVEGEN`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[4,"MODE_A","","TC Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",1728,null],[13,"COUNT8","","1: Counter in 8-bit mode",1728,null],[13,"COUNT32","","2: Counter in 32-bit mode",1728,null],[4,"WAVEGEN_A","","Waveform Generation Operation",null,null],[13,"NFRQ","","0: `0`",1729,null],[13,"MFRQ","","1: `1`",1729,null],[13,"NPWM","","2: `10`",1729,null],[13,"MPWM","","3: `11`",1729,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",1730,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",1730,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",1730,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",1730,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",1730,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",1730,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",1730,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",1730,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",1731,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",1731,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock.…",1731,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[11,"set_bit","","Sets the field bit",1732,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1732,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1732,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1733,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1733,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1733,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::ctrla","Get enumerated values variant",1734,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1734,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",1734,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1734,[[]]],[11,"variant","","Writes `variant` to the field",1735,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",1735,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",1735,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",1735,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1735,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::ctrla","Get enumerated values variant",1736,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1736,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1736,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1736,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",1736,[[]]],[11,"variant","","Writes `variant` to the field",1737,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","`0`",1737,[[],["w",6]]],[11,"mfrq","","`1`",1737,[[],["w",6]]],[11,"npwm","","`10`",1737,[[],["w",6]]],[11,"mpwm","","`11`",1737,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1737,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::ctrla","Get enumerated values variant",1738,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1738,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1738,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1738,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1738,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1738,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1738,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1738,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1738,[[]]],[11,"variant","","Writes `variant` to the field",1739,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",1739,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",1739,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",1739,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",1739,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",1739,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",1739,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",1739,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",1739,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1739,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1740,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1740,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1740,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::ctrla","Get enumerated values variant",1741,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1741,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1741,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1741,[[]]],[11,"variant","","Writes `variant` to the field",1742,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",1742,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",1742,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock. Reset…",1742,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1742,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",6,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",6,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"enable","atsamd21g::tc3::count16::ctrla","Bit 1 - Enable",1743,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",1743,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1743,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1743,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1743,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1743,[[],["prescsync_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",7,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",7,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"swrst","atsamd21g::tc3::count16::ctrla","Bit 0 - Software Reset",1744,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1744,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",1744,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1744,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1744,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1744,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1744,[[],["prescsync_w",3]]],[0,"readreq","atsamd21g::tc3::count16","Read Request",null,null],[3,"ADDR_W","atsamd21g::tc3::count16::readreq","Write proxy for field `ADDR`",null,null],[3,"RCONT_W","","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[6,"RREQ_R","","Reader of field `RREQ`",null,null],[11,"bits","","Writes raw bits to the field",1745,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1746,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1746,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1746,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1747,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:4 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",6,[[],["rreq_r",6]]],[11,"addr","atsamd21g::tc3::count16::readreq","Bits 0:4 - Address",1748,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1748,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",1748,[[],["rreq_r",6]]],[11,"addr","atsamd21g::generic","Bits 0:4 - Address",7,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"addr","atsamd21g::tc3::count16::readreq","Bits 0:4 - Address",1749,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",1749,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1749,[[],["rreq_w",3]]],[0,"ctrlbclr","atsamd21g::tc3::count16","Control B Clear",null,null],[3,"DIR_W","atsamd21g::tc3::count16::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1750,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1750,null],[13,"STOP","","2: Force a stop",1750,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1751,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1751,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1751,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1752,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1752,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1752,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::ctrlbclr","Get enumerated values variant",1753,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1753,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1753,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1753,[[]]],[11,"variant","","Writes `variant` to the field",1754,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1754,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1754,[[],["w",6]]],[11,"stop","","Force a stop",1754,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1754,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tc3::count16::ctrlbclr","Bit 0 - Counter Direction",1755,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1755,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1755,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tc3::count16::ctrlbclr","Bit 0 - Counter Direction",1756,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1756,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1756,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd21g::tc3::count16","Control B Set",null,null],[3,"DIR_W","atsamd21g::tc3::count16::ctrlbset","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1757,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1757,null],[13,"STOP","","2: Force a stop",1757,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1758,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1758,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1758,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1759,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1759,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1759,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::ctrlbset","Get enumerated values variant",1760,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1760,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1760,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1760,[[]]],[11,"variant","","Writes `variant` to the field",1761,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1761,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1761,[[],["w",6]]],[11,"stop","","Force a stop",1761,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1761,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tc3::count16::ctrlbset","Bit 0 - Counter Direction",1762,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1762,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1762,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tc3::count16::ctrlbset","Bit 0 - Counter Direction",1763,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1763,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1763,[[],["cmd_w",3]]],[0,"ctrlc","atsamd21g::tc3::count16","Control C",null,null],[3,"INVEN0_W","atsamd21g::tc3::count16::ctrlc","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[11,"set_bit","","Sets the field bit",1764,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1764,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1764,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1765,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1766,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1766,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1766,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1767,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1767,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1767,[[],["w",6]]],[11,"inven0","atsamd21g::generic","Bit 0 - Output Waveform 0 Invert Enable",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",6,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"inven0","atsamd21g::tc3::count16::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1768,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1768,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1768,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1768,[[],["cpten1_r",6]]],[11,"inven0","atsamd21g::generic","Bit 0 - Output Waveform 0 Invert Enable",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",7,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"inven0","atsamd21g::tc3::count16::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1769,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1769,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1769,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1769,[[],["cpten1_w",3]]],[0,"dbgctrl","atsamd21g::tc3::count16","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::tc3::count16::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1770,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1770,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1770,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::tc3::count16::dbgctrl","Bit 0 - Debug Run Mode",1771,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::tc3::count16::dbgctrl","Bit 0 - Debug Run Mode",1772,[[],["dbgrun_w",3]]],[0,"evctrl","atsamd21g::tc3::count16","Event Control",null,null],[3,"EVACT_W","atsamd21g::tc3::count16::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1773,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",1773,null],[13,"COUNT","","2: Count on event",1773,null],[13,"START","","3: Start TC on event",1773,null],[13,"PPW","","5: Period captured in CC0, pulse width in CC1",1773,null],[13,"PWP","","6: Period captured in CC1, pulse width in CC0",1773,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"variant","atsamd21g::tc3::count16::evctrl","Get enumerated values variant",1774,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1774,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1774,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1774,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1774,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1774,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1774,[[]]],[11,"variant","","Writes `variant` to the field",1775,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1775,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",1775,[[],["w",6]]],[11,"count","","Count on event",1775,[[],["w",6]]],[11,"start","","Start TC on event",1775,[[],["w",6]]],[11,"ppw","","Period captured in CC0, pulse width in CC1",1775,[[],["w",6]]],[11,"pwp","","Period captured in CC1, pulse width in CC0",1775,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1775,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1776,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1776,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1776,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1777,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1777,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1777,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1778,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1778,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1778,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1779,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1779,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1779,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1780,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1780,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1780,[[],["w",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd21g::tc3::count16::evctrl","Bits 0:2 - Event Action",1781,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1781,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",1781,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1781,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1781,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1781,[[],["mceo1_r",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd21g::tc3::count16::evctrl","Bits 0:2 - Event Action",1782,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1782,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",1782,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1782,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1782,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1782,[[],["mceo1_w",3]]],[0,"intenclr","atsamd21g::tc3::count16","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd21g::tc3::count16::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1783,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1783,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1783,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1784,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1784,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1784,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1785,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1785,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1785,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1786,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1786,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1786,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1787,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1787,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1787,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count16::intenclr","Bit 0 - Overflow Interrupt Enable",1788,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1788,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1788,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1788,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1788,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count16::intenclr","Bit 0 - Overflow Interrupt Enable",1789,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1789,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1789,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1789,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1789,[[],["mc1_w",3]]],[0,"intenset","atsamd21g::tc3::count16","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd21g::tc3::count16::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1790,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1790,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1790,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1791,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1791,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1791,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1792,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1792,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1792,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1793,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1793,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1793,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1794,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1794,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1794,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count16::intenset","Bit 0 - Overflow Interrupt Enable",1795,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1795,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1795,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1795,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1795,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count16::intenset","Bit 0 - Overflow Interrupt Enable",1796,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1796,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1796,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1796,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1796,[[],["mc1_w",3]]],[0,"intflag","atsamd21g::tc3::count16","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd21g::tc3::count16::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1797,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1797,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1798,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1798,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1798,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1799,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1799,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1799,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1800,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1800,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1800,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1801,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1801,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1801,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count16::intflag","Bit 0 - Overflow",1802,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1802,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1802,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1802,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1802,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count16::intflag","Bit 0 - Overflow",1803,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1803,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1803,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1803,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1803,[[],["mc1_w",3]]],[0,"status","atsamd21g::tc3::count16","Status",null,null],[6,"R","atsamd21g::tc3::count16::status","Reader of register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"stop","atsamd21g::generic","Bit 3 - Stop",6,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"stop","atsamd21g::tc3::count16::status","Bit 3 - Stop",1804,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",1804,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",1804,[[],["syncbusy_r",6]]],[0,"count","atsamd21g::tc3::count16","COUNT16 Counter Value",null,null],[3,"COUNT_W","atsamd21g::tc3::count16::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1805,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 0:15 - Count Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tc3::count16::count","Bits 0:15 - Count Value",1806,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 0:15 - Count Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tc3::count16::count","Bits 0:15 - Count Value",1807,[[],["count_w",3]]],[0,"cc","atsamd21g::tc3::count16","COUNT16 Compare/Capture",null,null],[3,"CC_W","atsamd21g::tc3::count16::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1808,[[],["w",6]]],[11,"cc","atsamd21g::generic","Bits 0:15 - Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd21g::tc3::count16::cc","Bits 0:15 - Compare/Capture Value",1809,[[],["cc_r",6]]],[11,"cc","atsamd21g::generic","Bits 0:15 - Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd21g::tc3::count16::cc","Bits 0:15 - Compare/Capture Value",1810,[[],["cc_w",3]]],[6,"CTRLA","atsamd21g::tc3::count16","Control A",null,null],[6,"READREQ","","Read Request",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"CTRLC","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","COUNT16 Counter Value",null,null],[6,"CC","","COUNT16 Compare/Capture",null,null],[0,"count32","atsamd21g::tc3","Register block 32-bit Counter Mode",null,null],[0,"ctrla","atsamd21g::tc3::count32","Control A",null,null],[3,"SWRST_W","atsamd21g::tc3::count32::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"WAVEGEN_W","","Write proxy for field `WAVEGEN`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[4,"MODE_A","","TC Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",1811,null],[13,"COUNT8","","1: Counter in 8-bit mode",1811,null],[13,"COUNT32","","2: Counter in 32-bit mode",1811,null],[4,"WAVEGEN_A","","Waveform Generation Operation",null,null],[13,"NFRQ","","0: `0`",1812,null],[13,"MFRQ","","1: `1`",1812,null],[13,"NPWM","","2: `10`",1812,null],[13,"MPWM","","3: `11`",1812,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",1813,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",1813,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",1813,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",1813,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",1813,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",1813,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",1813,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",1813,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",1814,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",1814,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock.…",1814,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[11,"set_bit","","Sets the field bit",1815,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1815,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1815,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1816,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1816,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1816,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::ctrla","Get enumerated values variant",1817,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1817,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",1817,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1817,[[]]],[11,"variant","","Writes `variant` to the field",1818,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",1818,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",1818,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",1818,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1818,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::ctrla","Get enumerated values variant",1819,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1819,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1819,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1819,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",1819,[[]]],[11,"variant","","Writes `variant` to the field",1820,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","`0`",1820,[[],["w",6]]],[11,"mfrq","","`1`",1820,[[],["w",6]]],[11,"npwm","","`10`",1820,[[],["w",6]]],[11,"mpwm","","`11`",1820,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1820,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::ctrla","Get enumerated values variant",1821,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1821,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1821,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1821,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1821,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1821,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1821,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1821,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1821,[[]]],[11,"variant","","Writes `variant` to the field",1822,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",1822,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",1822,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",1822,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",1822,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",1822,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",1822,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",1822,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",1822,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1822,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1823,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1823,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1823,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::ctrla","Get enumerated values variant",1824,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1824,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1824,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1824,[[]]],[11,"variant","","Writes `variant` to the field",1825,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",1825,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",1825,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock. Reset…",1825,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1825,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",6,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",6,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"enable","atsamd21g::tc3::count32::ctrla","Bit 1 - Enable",1826,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",1826,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1826,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1826,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1826,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1826,[[],["prescsync_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",7,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",7,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"swrst","atsamd21g::tc3::count32::ctrla","Bit 0 - Software Reset",1827,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1827,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",1827,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1827,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1827,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1827,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1827,[[],["prescsync_w",3]]],[0,"readreq","atsamd21g::tc3::count32","Read Request",null,null],[3,"ADDR_W","atsamd21g::tc3::count32::readreq","Write proxy for field `ADDR`",null,null],[3,"RCONT_W","","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[6,"RREQ_R","","Reader of field `RREQ`",null,null],[11,"bits","","Writes raw bits to the field",1828,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1829,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1829,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1829,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1830,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1830,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1830,[[],["w",6]]],[11,"addr","atsamd21g::generic","Bits 0:4 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",6,[[],["rreq_r",6]]],[11,"addr","atsamd21g::tc3::count32::readreq","Bits 0:4 - Address",1831,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1831,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",1831,[[],["rreq_r",6]]],[11,"addr","atsamd21g::generic","Bits 0:4 - Address",7,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"addr","atsamd21g::tc3::count32::readreq","Bits 0:4 - Address",1832,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",1832,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1832,[[],["rreq_w",3]]],[0,"ctrlbclr","atsamd21g::tc3::count32","Control B Clear",null,null],[3,"DIR_W","atsamd21g::tc3::count32::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1833,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1833,null],[13,"STOP","","2: Force a stop",1833,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1834,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1834,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1834,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1835,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1835,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1835,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::ctrlbclr","Get enumerated values variant",1836,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1836,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1836,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1836,[[]]],[11,"variant","","Writes `variant` to the field",1837,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1837,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1837,[[],["w",6]]],[11,"stop","","Force a stop",1837,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1837,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tc3::count32::ctrlbclr","Bit 0 - Counter Direction",1838,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1838,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1838,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tc3::count32::ctrlbclr","Bit 0 - Counter Direction",1839,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1839,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1839,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd21g::tc3::count32","Control B Set",null,null],[3,"DIR_W","atsamd21g::tc3::count32::ctrlbset","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1840,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1840,null],[13,"STOP","","2: Force a stop",1840,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1841,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1841,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1841,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1842,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1842,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1842,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::ctrlbset","Get enumerated values variant",1843,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1843,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1843,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1843,[[]]],[11,"variant","","Writes `variant` to the field",1844,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1844,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1844,[[],["w",6]]],[11,"stop","","Force a stop",1844,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1844,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tc3::count32::ctrlbset","Bit 0 - Counter Direction",1845,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1845,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1845,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tc3::count32::ctrlbset","Bit 0 - Counter Direction",1846,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1846,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1846,[[],["cmd_w",3]]],[0,"ctrlc","atsamd21g::tc3::count32","Control C",null,null],[3,"INVEN0_W","atsamd21g::tc3::count32::ctrlc","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[11,"set_bit","","Sets the field bit",1847,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1847,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1847,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1848,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1848,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1848,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1849,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1849,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1849,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1850,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1850,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1850,[[],["w",6]]],[11,"inven0","atsamd21g::generic","Bit 0 - Output Waveform 0 Invert Enable",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",6,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"inven0","atsamd21g::tc3::count32::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1851,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1851,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1851,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1851,[[],["cpten1_r",6]]],[11,"inven0","atsamd21g::generic","Bit 0 - Output Waveform 0 Invert Enable",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",7,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"inven0","atsamd21g::tc3::count32::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1852,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1852,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1852,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1852,[[],["cpten1_w",3]]],[0,"dbgctrl","atsamd21g::tc3::count32","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::tc3::count32::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1853,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1853,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1853,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::tc3::count32::dbgctrl","Bit 0 - Debug Run Mode",1854,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd21g::tc3::count32::dbgctrl","Bit 0 - Debug Run Mode",1855,[[],["dbgrun_w",3]]],[0,"evctrl","atsamd21g::tc3::count32","Event Control",null,null],[3,"EVACT_W","atsamd21g::tc3::count32::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1856,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",1856,null],[13,"COUNT","","2: Count on event",1856,null],[13,"START","","3: Start TC on event",1856,null],[13,"PPW","","5: Period captured in CC0, pulse width in CC1",1856,null],[13,"PWP","","6: Period captured in CC1, pulse width in CC0",1856,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"variant","atsamd21g::tc3::count32::evctrl","Get enumerated values variant",1857,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1857,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1857,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1857,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1857,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1857,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1857,[[]]],[11,"variant","","Writes `variant` to the field",1858,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1858,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",1858,[[],["w",6]]],[11,"count","","Count on event",1858,[[],["w",6]]],[11,"start","","Start TC on event",1858,[[],["w",6]]],[11,"ppw","","Period captured in CC0, pulse width in CC1",1858,[[],["w",6]]],[11,"pwp","","Period captured in CC1, pulse width in CC0",1858,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1858,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1859,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1859,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1859,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1860,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1860,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1860,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1861,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1861,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1861,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1862,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1862,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1862,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1863,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1863,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1863,[[],["w",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd21g::tc3::count32::evctrl","Bits 0:2 - Event Action",1864,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1864,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",1864,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1864,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1864,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1864,[[],["mceo1_r",6]]],[11,"evact","atsamd21g::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd21g::tc3::count32::evctrl","Bits 0:2 - Event Action",1865,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1865,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",1865,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1865,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1865,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1865,[[],["mceo1_w",3]]],[0,"intenclr","atsamd21g::tc3::count32","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd21g::tc3::count32::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1866,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1866,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1866,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1867,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1867,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1867,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1868,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1868,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1868,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1869,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1869,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1869,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1870,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1870,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1870,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count32::intenclr","Bit 0 - Overflow Interrupt Enable",1871,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1871,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1871,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1871,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1871,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count32::intenclr","Bit 0 - Overflow Interrupt Enable",1872,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1872,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1872,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1872,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1872,[[],["mc1_w",3]]],[0,"intenset","atsamd21g::tc3::count32","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd21g::tc3::count32::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1873,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1873,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1873,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1874,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1874,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1874,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1875,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1875,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1875,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1876,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1876,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1876,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1877,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1877,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1877,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count32::intenset","Bit 0 - Overflow Interrupt Enable",1878,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1878,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1878,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1878,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1878,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count32::intenset","Bit 0 - Overflow Interrupt Enable",1879,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1879,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1879,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1879,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1879,[[],["mc1_w",3]]],[0,"intflag","atsamd21g::tc3::count32","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd21g::tc3::count32::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1880,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1880,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1880,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1881,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1881,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1881,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1882,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1882,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1882,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1883,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1883,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1883,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1884,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1884,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1884,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::tc3::count32::intflag","Bit 0 - Overflow",1885,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1885,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1885,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1885,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1885,[[],["mc1_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd21g::tc3::count32::intflag","Bit 0 - Overflow",1886,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1886,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1886,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1886,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1886,[[],["mc1_w",3]]],[0,"status","atsamd21g::tc3::count32","Status",null,null],[6,"R","atsamd21g::tc3::count32::status","Reader of register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"stop","atsamd21g::generic","Bit 3 - Stop",6,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"stop","atsamd21g::tc3::count32::status","Bit 3 - Stop",1887,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",1887,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",1887,[[],["syncbusy_r",6]]],[0,"count","atsamd21g::tc3::count32","COUNT32 Counter Value",null,null],[3,"COUNT_W","atsamd21g::tc3::count32::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1888,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 0:31 - Count Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tc3::count32::count","Bits 0:31 - Count Value",1889,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 0:31 - Count Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tc3::count32::count","Bits 0:31 - Count Value",1890,[[],["count_w",3]]],[0,"cc","atsamd21g::tc3::count32","COUNT32 Compare/Capture",null,null],[3,"CC_W","atsamd21g::tc3::count32::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1891,[[],["w",6]]],[11,"cc","atsamd21g::generic","Bits 0:31 - Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd21g::tc3::count32::cc","Bits 0:31 - Compare/Capture Value",1892,[[],["cc_r",6]]],[11,"cc","atsamd21g::generic","Bits 0:31 - Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd21g::tc3::count32::cc","Bits 0:31 - Compare/Capture Value",1893,[[],["cc_w",3]]],[6,"CTRLA","atsamd21g::tc3::count32","Control A",null,null],[6,"READREQ","","Read Request",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"CTRLC","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","COUNT32 Counter Value",null,null],[6,"CC","","COUNT32 Compare/Capture",null,null],[11,"count32","atsamd21g::tc3","0x00 - 32-bit Counter Mode",1894,[[],["count32",3]]],[11,"count32_mut","","0x00 - 32-bit Counter Mode",1894,[[],["count32",3]]],[11,"count16","","0x00 - 16-bit Counter Mode",1894,[[],["count16",3]]],[11,"count16_mut","","0x00 - 16-bit Counter Mode",1894,[[],["count16",3]]],[11,"count8","","0x00 - 8-bit Counter Mode",1894,[[],["count8",3]]],[11,"count8_mut","","0x00 - 8-bit Counter Mode",1894,[[],["count8",3]]],[0,"tcc0","atsamd21g","Timer Counter Control 0",null,null],[3,"RegisterBlock","atsamd21g::tcc0","Register block",null,null],[12,"ctrla","","0x00 - Control A",1895,null],[12,"ctrlbclr","","0x04 - Control B Clear",1895,null],[12,"ctrlbset","","0x05 - Control B Set",1895,null],[12,"syncbusy","","0x08 - Synchronization Busy",1895,null],[12,"fctrla","","0x0c - Recoverable Fault A Configuration",1895,null],[12,"fctrlb","","0x10 - Recoverable Fault B Configuration",1895,null],[12,"wexctrl","","0x14 - Waveform Extension Configuration",1895,null],[12,"drvctrl","","0x18 - Driver Control",1895,null],[12,"dbgctrl","","0x1e - Debug Control",1895,null],[12,"evctrl","","0x20 - Event Control",1895,null],[12,"intenclr","","0x24 - Interrupt Enable Clear",1895,null],[12,"intenset","","0x28 - Interrupt Enable Set",1895,null],[12,"intflag","","0x2c - Interrupt Flag Status and Clear",1895,null],[12,"status","","0x30 - Status",1895,null],[12,"patt","","0x38 - Pattern",1895,null],[12,"wave","","0x3c - Waveform Control",1895,null],[12,"pattb","","0x64 - Pattern Buffer",1895,null],[12,"waveb","","0x68 - Waveform Control Buffer",1895,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd21g::tcc0::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RESOLUTION_W","","Write proxy for field `RESOLUTION`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[3,"CPTEN2_W","","Write proxy for field `CPTEN2`",null,null],[3,"CPTEN3_W","","Write proxy for field `CPTEN3`",null,null],[4,"RESOLUTION_A","","Enhanced Resolution",null,null],[13,"NONE","","0: Dithering is disabled",1896,null],[13,"DITH4","","1: Dithering is done every 16 PWM frames",1896,null],[13,"DITH5","","2: Dithering is done every 32 PWM frames",1896,null],[13,"DITH6","","3: Dithering is done every 64 PWM frames",1896,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: No division",1897,null],[13,"DIV2","","1: Divide by 2",1897,null],[13,"DIV4","","2: Divide by 4",1897,null],[13,"DIV8","","3: Divide by 8",1897,null],[13,"DIV16","","4: Divide by 16",1897,null],[13,"DIV64","","5: Divide by 64",1897,null],[13,"DIV256","","6: Divide by 256",1897,null],[13,"DIV1024","","7: Divide by 1024",1897,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization Selection",null,null],[13,"GCLK","","0: Reload or reset counter on next GCLK",1898,null],[13,"PRESC","","1: Reload or reset counter on next prescaler clock",1898,null],[13,"RESYNC","","2: Reload or reset counter on next GCLK and reset…",1898,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RESOLUTION_R","","Reader of field `RESOLUTION`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[6,"CPTEN2_R","","Reader of field `CPTEN2`",null,null],[6,"CPTEN3_R","","Reader of field `CPTEN3`",null,null],[11,"set_bit","","Sets the field bit",1899,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1899,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1899,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1900,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1900,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1900,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["resolution_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_dith4","","Checks if the value of the field is `DITH4`",6,[[]]],[11,"is_dith5","","Checks if the value of the field is `DITH5`",6,[[]]],[11,"is_dith6","","Checks if the value of the field is `DITH6`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrla","Get enumerated values variant",1901,[[],["resolution_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",1901,[[]]],[11,"is_dith4","","Checks if the value of the field is `DITH4`",1901,[[]]],[11,"is_dith5","","Checks if the value of the field is `DITH5`",1901,[[]]],[11,"is_dith6","","Checks if the value of the field is `DITH6`",1901,[[]]],[11,"variant","","Writes `variant` to the field",1902,[[["resolution_a",4]],["w",6]]],[11,"none","","Dithering is disabled",1902,[[],["w",6]]],[11,"dith4","","Dithering is done every 16 PWM frames",1902,[[],["w",6]]],[11,"dith5","","Dithering is done every 32 PWM frames",1902,[[],["w",6]]],[11,"dith6","","Dithering is done every 64 PWM frames",1902,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1902,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrla","Get enumerated values variant",1903,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1903,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1903,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1903,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1903,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1903,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1903,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1903,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1903,[[]]],[11,"variant","","Writes `variant` to the field",1904,[[["prescaler_a",4]],["w",6]]],[11,"div1","","No division",1904,[[],["w",6]]],[11,"div2","","Divide by 2",1904,[[],["w",6]]],[11,"div4","","Divide by 4",1904,[[],["w",6]]],[11,"div8","","Divide by 8",1904,[[],["w",6]]],[11,"div16","","Divide by 16",1904,[[],["w",6]]],[11,"div64","","Divide by 64",1904,[[],["w",6]]],[11,"div256","","Divide by 256",1904,[[],["w",6]]],[11,"div1024","","Divide by 1024",1904,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1904,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1905,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1905,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1905,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrla","Get enumerated values variant",1906,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1906,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1906,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1906,[[]]],[11,"variant","","Writes `variant` to the field",1907,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset counter on next GCLK",1907,[[],["w",6]]],[11,"presc","","Reload or reset counter on next prescaler clock",1907,[[],["w",6]]],[11,"resync","","Reload or reset counter on next GCLK and reset prescaler…",1907,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1907,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1908,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1908,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1908,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1909,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1909,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1909,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1910,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1910,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1910,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1911,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1911,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1911,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1912,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1912,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1912,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",6,[[],["resolution_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",6,[[],["prescsync_r",6]]],[11,"alock","","Bit 14 - Auto Lock",6,[[],["alock_r",6]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",6,[[],["cpten2_r",6]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",6,[[],["cpten3_r",6]]],[11,"swrst","atsamd21g::tcc0::ctrla","Bit 0 - Software Reset",1913,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1913,[[],["enable_r",6]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",1913,[[],["resolution_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1913,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1913,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",1913,[[],["prescsync_r",6]]],[11,"alock","","Bit 14 - Auto Lock",1913,[[],["alock_r",6]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",1913,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",1913,[[],["cpten1_r",6]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",1913,[[],["cpten2_r",6]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",1913,[[],["cpten3_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",7,[[],["resolution_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",7,[[],["prescsync_w",3]]],[11,"alock","","Bit 14 - Auto Lock",7,[[],["alock_w",3]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",7,[[],["cpten2_w",3]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",7,[[],["cpten3_w",3]]],[11,"swrst","atsamd21g::tcc0::ctrla","Bit 0 - Software Reset",1914,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1914,[[],["enable_w",3]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",1914,[[],["resolution_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1914,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1914,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",1914,[[],["prescsync_w",3]]],[11,"alock","","Bit 14 - Auto Lock",1914,[[],["alock_w",3]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",1914,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",1914,[[],["cpten1_w",3]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",1914,[[],["cpten2_w",3]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",1914,[[],["cpten3_w",3]]],[0,"ctrlbclr","atsamd21g::tcc0","Control B Clear",null,null],[3,"DIR_W","atsamd21g::tcc0::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"IDXCMD_W","","Write proxy for field `IDXCMD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"IDXCMD_A","","Ramp Index Command",null,null],[13,"DISABLE","","0: Command disabled: Index toggles between cycles A and B",1915,null],[13,"SET","","1: Set index: cycle B will be forced in the next cycle",1915,null],[13,"CLEAR","","2: Clear index: cycle A will be forced in the next cycle",1915,null],[13,"HOLD","","3: Hold index: the next cycle will be the same as the…",1915,null],[4,"CMD_A","","TCC Command",null,null],[13,"NONE","","0: No action",1916,null],[13,"RETRIGGER","","1: Clear start, restart or retrigger",1916,null],[13,"STOP","","2: Force stop",1916,null],[13,"UPDATE","","3: Force update of double buffered registers",1916,null],[13,"READSYNC","","4: Force COUNT read synchronization",1916,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"IDXCMD_R","","Reader of field `IDXCMD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1917,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1917,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1917,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1918,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1918,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1918,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1919,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1919,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1919,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",6,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrlbclr","Get enumerated values variant",1920,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1920,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",1920,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",1920,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",1920,[[]]],[11,"variant","","Writes `variant` to the field",1921,[[["idxcmd_a",4]],["w",6]]],[11,"disable","","Command disabled: Index toggles between cycles A and B",1921,[[],["w",6]]],[11,"set","","Set index: cycle B will be forced in the next cycle",1921,[[],["w",6]]],[11,"clear","","Clear index: cycle A will be forced in the next cycle",1921,[[],["w",6]]],[11,"hold","","Hold index: the next cycle will be the same as the current…",1921,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1921,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrlbclr","Get enumerated values variant",1922,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1922,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1922,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1922,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",1922,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",1922,[[]]],[11,"variant","","Writes `variant` to the field",1923,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1923,[[],["w",6]]],[11,"retrigger","","Clear start, restart or retrigger",1923,[[],["w",6]]],[11,"stop","","Force stop",1923,[[],["w",6]]],[11,"update","","Force update of double buffered registers",1923,[[],["w",6]]],[11,"readsync","","Force COUNT read synchronization",1923,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1923,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",6,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tcc0::ctrlbclr","Bit 0 - Counter Direction",1924,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",1924,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1924,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1924,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",1924,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",7,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tcc0::ctrlbclr","Bit 0 - Counter Direction",1925,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",1925,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1925,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1925,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",1925,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd21g::tcc0","Control B Set",null,null],[3,"DIR_W","atsamd21g::tcc0::ctrlbset","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"IDXCMD_W","","Write proxy for field `IDXCMD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"IDXCMD_A","","Ramp Index Command",null,null],[13,"DISABLE","","0: Command disabled: Index toggles between cycles A and B",1926,null],[13,"SET","","1: Set index: cycle B will be forced in the next cycle",1926,null],[13,"CLEAR","","2: Clear index: cycle A will be forced in the next cycle",1926,null],[13,"HOLD","","3: Hold index: the next cycle will be the same as the…",1926,null],[4,"CMD_A","","TCC Command",null,null],[13,"NONE","","0: No action",1927,null],[13,"RETRIGGER","","1: Clear start, restart or retrigger",1927,null],[13,"STOP","","2: Force stop",1927,null],[13,"UPDATE","","3: Force update of double buffered registers",1927,null],[13,"READSYNC","","4: Force COUNT read synchronization",1927,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"IDXCMD_R","","Reader of field `IDXCMD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1928,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1928,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1928,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1929,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1929,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1929,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1930,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1930,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1930,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",6,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrlbset","Get enumerated values variant",1931,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1931,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",1931,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",1931,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",1931,[[]]],[11,"variant","","Writes `variant` to the field",1932,[[["idxcmd_a",4]],["w",6]]],[11,"disable","","Command disabled: Index toggles between cycles A and B",1932,[[],["w",6]]],[11,"set","","Set index: cycle B will be forced in the next cycle",1932,[[],["w",6]]],[11,"clear","","Clear index: cycle A will be forced in the next cycle",1932,[[],["w",6]]],[11,"hold","","Hold index: the next cycle will be the same as the current…",1932,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1932,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"variant","atsamd21g::tcc0::ctrlbset","Get enumerated values variant",1933,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1933,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1933,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1933,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",1933,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",1933,[[]]],[11,"variant","","Writes `variant` to the field",1934,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1934,[[],["w",6]]],[11,"retrigger","","Clear start, restart or retrigger",1934,[[],["w",6]]],[11,"stop","","Force stop",1934,[[],["w",6]]],[11,"update","","Force update of double buffered registers",1934,[[],["w",6]]],[11,"readsync","","Force COUNT read synchronization",1934,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1934,[[],["w",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",6,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd21g::tcc0::ctrlbset","Bit 0 - Counter Direction",1935,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",1935,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1935,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1935,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",1935,[[],["cmd_r",6]]],[11,"dir","atsamd21g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",7,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd21g::tcc0::ctrlbset","Bit 0 - Counter Direction",1936,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",1936,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1936,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1936,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",1936,[[],["cmd_w",3]]],[0,"syncbusy","atsamd21g::tcc0","Synchronization Busy",null,null],[6,"R","atsamd21g::tcc0::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PATT_R","","Reader of field `PATT`",null,null],[6,"WAVE_R","","Reader of field `WAVE`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[6,"CC2_R","","Reader of field `CC2`",null,null],[6,"CC3_R","","Reader of field `CC3`",null,null],[6,"PATTB_R","","Reader of field `PATTB`",null,null],[6,"WAVEB_R","","Reader of field `WAVEB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[6,"CCB0_R","","Reader of field `CCB0`",null,null],[6,"CCB1_R","","Reader of field `CCB1`",null,null],[6,"CCB2_R","","Reader of field `CCB2`",null,null],[6,"CCB3_R","","Reader of field `CCB3`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Swrst Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Ctrlb Busy",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Busy",6,[[],["status_r",6]]],[11,"count","","Bit 4 - Count Busy",6,[[],["count_r",6]]],[11,"patt","","Bit 5 - Pattern Busy",6,[[],["patt_r",6]]],[11,"wave","","Bit 6 - Wave Busy",6,[[],["wave_r",6]]],[11,"per","","Bit 7 - Period busy",6,[[],["per_r",6]]],[11,"cc0","","Bit 8 - Compare Channel 0 Busy",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 9 - Compare Channel 1 Busy",6,[[],["cc1_r",6]]],[11,"cc2","","Bit 10 - Compare Channel 2 Busy",6,[[],["cc2_r",6]]],[11,"cc3","","Bit 11 - Compare Channel 3 Busy",6,[[],["cc3_r",6]]],[11,"pattb","","Bit 16 - Pattern Buffer Busy",6,[[],["pattb_r",6]]],[11,"waveb","","Bit 17 - Wave Buffer Busy",6,[[],["waveb_r",6]]],[11,"perb","","Bit 18 - Period Buffer Busy",6,[[],["perb_r",6]]],[11,"ccb0","","Bit 19 - Compare Channel Buffer 0 Busy",6,[[],["ccb0_r",6]]],[11,"ccb1","","Bit 20 - Compare Channel Buffer 1 Busy",6,[[],["ccb1_r",6]]],[11,"ccb2","","Bit 21 - Compare Channel Buffer 2 Busy",6,[[],["ccb2_r",6]]],[11,"ccb3","","Bit 22 - Compare Channel Buffer 3 Busy",6,[[],["ccb3_r",6]]],[11,"swrst","atsamd21g::tcc0::syncbusy","Bit 0 - Swrst Busy",1937,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Busy",1937,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Ctrlb Busy",1937,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Busy",1937,[[],["status_r",6]]],[11,"count","","Bit 4 - Count Busy",1937,[[],["count_r",6]]],[11,"patt","","Bit 5 - Pattern Busy",1937,[[],["patt_r",6]]],[11,"wave","","Bit 6 - Wave Busy",1937,[[],["wave_r",6]]],[11,"per","","Bit 7 - Period busy",1937,[[],["per_r",6]]],[11,"cc0","","Bit 8 - Compare Channel 0 Busy",1937,[[],["cc0_r",6]]],[11,"cc1","","Bit 9 - Compare Channel 1 Busy",1937,[[],["cc1_r",6]]],[11,"cc2","","Bit 10 - Compare Channel 2 Busy",1937,[[],["cc2_r",6]]],[11,"cc3","","Bit 11 - Compare Channel 3 Busy",1937,[[],["cc3_r",6]]],[11,"pattb","","Bit 16 - Pattern Buffer Busy",1937,[[],["pattb_r",6]]],[11,"waveb","","Bit 17 - Wave Buffer Busy",1937,[[],["waveb_r",6]]],[11,"perb","","Bit 18 - Period Buffer Busy",1937,[[],["perb_r",6]]],[11,"ccb0","","Bit 19 - Compare Channel Buffer 0 Busy",1937,[[],["ccb0_r",6]]],[11,"ccb1","","Bit 20 - Compare Channel Buffer 1 Busy",1937,[[],["ccb1_r",6]]],[11,"ccb2","","Bit 21 - Compare Channel Buffer 2 Busy",1937,[[],["ccb2_r",6]]],[11,"ccb3","","Bit 22 - Compare Channel Buffer 3 Busy",1937,[[],["ccb3_r",6]]],[0,"fctrla","atsamd21g::tcc0","Recoverable Fault A Configuration",null,null],[3,"SRC_W","atsamd21g::tcc0::fctrla","Write proxy for field `SRC`",null,null],[3,"KEEP_W","","Write proxy for field `KEEP`",null,null],[3,"QUAL_W","","Write proxy for field `QUAL`",null,null],[3,"BLANK_W","","Write proxy for field `BLANK`",null,null],[3,"RESTART_W","","Write proxy for field `RESTART`",null,null],[3,"HALT_W","","Write proxy for field `HALT`",null,null],[3,"CHSEL_W","","Write proxy for field `CHSEL`",null,null],[3,"CAPTURE_W","","Write proxy for field `CAPTURE`",null,null],[3,"BLANKVAL_W","","Write proxy for field `BLANKVAL`",null,null],[3,"FILTERVAL_W","","Write proxy for field `FILTERVAL`",null,null],[4,"SRC_A","","Fault A Source",null,null],[13,"DISABLE","","0: Fault input disabled",1938,null],[13,"ENABLE","","1: MCEx (x=0,1) event input",1938,null],[13,"INVERT","","2: Inverted MCEx (x=0,1) event input",1938,null],[13,"ALTFAULT","","3: Alternate fault (A or B) state at the end of the…",1938,null],[4,"BLANK_A","","Fault A Blanking Mode",null,null],[13,"NONE","","0: No blanking applied",1939,null],[13,"RISE","","1: Blanking applied from rising edge of the output waveform",1939,null],[13,"FALL","","2: Blanking applied from falling edge of the output waveform",1939,null],[13,"BOTH","","3: Blanking applied from each toggle of the output waveform",1939,null],[4,"HALT_A","","Fault A Halt Mode",null,null],[13,"DISABLE","","0: Halt action disabled",1940,null],[13,"HW","","1: Hardware halt action",1940,null],[13,"SW","","2: Software halt action",1940,null],[13,"NR","","3: Non-recoverable fault",1940,null],[4,"CHSEL_A","","Fault A Capture Channel",null,null],[13,"CC0","","0: Capture value stored in channel 0",1941,null],[13,"CC1","","1: Capture value stored in channel 1",1941,null],[13,"CC2","","2: Capture value stored in channel 2",1941,null],[13,"CC3","","3: Capture value stored in channel 3",1941,null],[4,"CAPTURE_A","","Fault A Capture Action",null,null],[13,"DISABLE","","0: No capture",1942,null],[13,"CAPT","","1: Capture on fault",1942,null],[13,"CAPTMIN","","2: Minimum capture",1942,null],[13,"CAPTMAX","","3: Maximum capture",1942,null],[13,"LOCMIN","","4: Minimum local detection",1942,null],[13,"LOCMAX","","5: Maximum local detection",1942,null],[13,"DERIV0","","6: Minimum and maximum local detection",1942,null],[6,"R","","Reader of register FCTRLA",null,null],[6,"W","","Writer for register FCTRLA",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"KEEP_R","","Reader of field `KEEP`",null,null],[6,"QUAL_R","","Reader of field `QUAL`",null,null],[6,"BLANK_R","","Reader of field `BLANK`",null,null],[6,"RESTART_R","","Reader of field `RESTART`",null,null],[6,"HALT_R","","Reader of field `HALT`",null,null],[6,"CHSEL_R","","Reader of field `CHSEL`",null,null],[6,"CAPTURE_R","","Reader of field `CAPTURE`",null,null],[6,"BLANKVAL_R","","Reader of field `BLANKVAL`",null,null],[6,"FILTERVAL_R","","Reader of field `FILTERVAL`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",6,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrla","Get enumerated values variant",1943,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1943,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",1943,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",1943,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",1943,[[]]],[11,"variant","","Writes `variant` to the field",1944,[[["src_a",4]],["w",6]]],[11,"disable","","Fault input disabled",1944,[[],["w",6]]],[11,"enable","","MCEx (x=0,1) event input",1944,[[],["w",6]]],[11,"invert","","Inverted MCEx (x=0,1) event input",1944,[[],["w",6]]],[11,"altfault","","Alternate fault (A or B) state at the end of the previous…",1944,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1944,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1945,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1945,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1945,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1946,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1946,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1946,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["blank_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrla","Get enumerated values variant",1947,[[],["blank_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",1947,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",1947,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",1947,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",1947,[[]]],[11,"variant","","Writes `variant` to the field",1948,[[["blank_a",4]],["w",6]]],[11,"none","","No blanking applied",1948,[[],["w",6]]],[11,"rise","","Blanking applied from rising edge of the output waveform",1948,[[],["w",6]]],[11,"fall","","Blanking applied from falling edge of the output waveform",1948,[[],["w",6]]],[11,"both","","Blanking applied from each toggle of the output waveform",1948,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1948,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1949,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1949,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1949,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",6,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",6,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrla","Get enumerated values variant",1950,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1950,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",1950,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",1950,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",1950,[[]]],[11,"variant","","Writes `variant` to the field",1951,[[["halt_a",4]],["w",6]]],[11,"disable","","Halt action disabled",1951,[[],["w",6]]],[11,"hw","","Hardware halt action",1951,[[],["w",6]]],[11,"sw","","Software halt action",1951,[[],["w",6]]],[11,"nr","","Non-recoverable fault",1951,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1951,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",6,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",6,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",6,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrla","Get enumerated values variant",1952,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",1952,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",1952,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",1952,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",1952,[[]]],[11,"variant","","Writes `variant` to the field",1953,[[["chsel_a",4]],["w",6]]],[11,"cc0","","Capture value stored in channel 0",1953,[[],["w",6]]],[11,"cc1","","Capture value stored in channel 1",1953,[[],["w",6]]],[11,"cc2","","Capture value stored in channel 2",1953,[[],["w",6]]],[11,"cc3","","Capture value stored in channel 3",1953,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1953,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["capture_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",6,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",6,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrla","Get enumerated values variant",1954,[[],[["capture_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1954,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",1954,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",1954,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",1954,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",1954,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",1954,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",1954,[[]]],[11,"variant","","Writes `variant` to the field",1955,[[["capture_a",4]],["w",6]]],[11,"disable","","No capture",1955,[[],["w",6]]],[11,"capt","","Capture on fault",1955,[[],["w",6]]],[11,"captmin","","Minimum capture",1955,[[],["w",6]]],[11,"captmax","","Maximum capture",1955,[[],["w",6]]],[11,"locmin","","Minimum local detection",1955,[[],["w",6]]],[11,"locmax","","Maximum local detection",1955,[[],["w",6]]],[11,"deriv0","","Minimum and maximum local detection",1955,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1955,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1956,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1957,[[],["w",6]]],[11,"src","atsamd21g::generic","Bits 0:1 - Fault A Source",6,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault A Keeper",6,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault A Qualification",6,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",6,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault A Restart",6,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",6,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",6,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",6,[[],["capture_r",6]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",6,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",6,[[],["filterval_r",6]]],[11,"src","atsamd21g::tcc0::fctrla","Bits 0:1 - Fault A Source",1958,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault A Keeper",1958,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault A Qualification",1958,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",1958,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault A Restart",1958,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",1958,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",1958,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",1958,[[],["capture_r",6]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",1958,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",1958,[[],["filterval_r",6]]],[11,"src","atsamd21g::generic","Bits 0:1 - Fault A Source",7,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault A Keeper",7,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault A Qualification",7,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",7,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault A Restart",7,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",7,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",7,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",7,[[],["capture_w",3]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",7,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",7,[[],["filterval_w",3]]],[11,"src","atsamd21g::tcc0::fctrla","Bits 0:1 - Fault A Source",1959,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault A Keeper",1959,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault A Qualification",1959,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",1959,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault A Restart",1959,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",1959,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",1959,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",1959,[[],["capture_w",3]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",1959,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",1959,[[],["filterval_w",3]]],[0,"fctrlb","atsamd21g::tcc0","Recoverable Fault B Configuration",null,null],[3,"SRC_W","atsamd21g::tcc0::fctrlb","Write proxy for field `SRC`",null,null],[3,"KEEP_W","","Write proxy for field `KEEP`",null,null],[3,"QUAL_W","","Write proxy for field `QUAL`",null,null],[3,"BLANK_W","","Write proxy for field `BLANK`",null,null],[3,"RESTART_W","","Write proxy for field `RESTART`",null,null],[3,"HALT_W","","Write proxy for field `HALT`",null,null],[3,"CHSEL_W","","Write proxy for field `CHSEL`",null,null],[3,"CAPTURE_W","","Write proxy for field `CAPTURE`",null,null],[3,"BLANKVAL_W","","Write proxy for field `BLANKVAL`",null,null],[3,"FILTERVAL_W","","Write proxy for field `FILTERVAL`",null,null],[4,"SRC_A","","Fault B Source",null,null],[13,"DISABLE","","0: Fault input disabled",1960,null],[13,"ENABLE","","1: MCEx (x=0,1) event input",1960,null],[13,"INVERT","","2: Inverted MCEx (x=0,1) event input",1960,null],[13,"ALTFAULT","","3: Alternate fault (A or B) state at the end of the…",1960,null],[4,"BLANK_A","","Fault B Blanking Mode",null,null],[13,"NONE","","0: No blanking applied",1961,null],[13,"RISE","","1: Blanking applied from rising edge of the output waveform",1961,null],[13,"FALL","","2: Blanking applied from falling edge of the output waveform",1961,null],[13,"BOTH","","3: Blanking applied from each toggle of the output waveform",1961,null],[4,"HALT_A","","Fault B Halt Mode",null,null],[13,"DISABLE","","0: Halt action disabled",1962,null],[13,"HW","","1: Hardware halt action",1962,null],[13,"SW","","2: Software halt action",1962,null],[13,"NR","","3: Non-recoverable fault",1962,null],[4,"CHSEL_A","","Fault B Capture Channel",null,null],[13,"CC0","","0: Capture value stored in channel 0",1963,null],[13,"CC1","","1: Capture value stored in channel 1",1963,null],[13,"CC2","","2: Capture value stored in channel 2",1963,null],[13,"CC3","","3: Capture value stored in channel 3",1963,null],[4,"CAPTURE_A","","Fault B Capture Action",null,null],[13,"DISABLE","","0: No capture",1964,null],[13,"CAPT","","1: Capture on fault",1964,null],[13,"CAPTMIN","","2: Minimum capture",1964,null],[13,"CAPTMAX","","3: Maximum capture",1964,null],[13,"LOCMIN","","4: Minimum local detection",1964,null],[13,"LOCMAX","","5: Maximum local detection",1964,null],[13,"DERIV0","","6: Minimum and maximum local detection",1964,null],[6,"R","","Reader of register FCTRLB",null,null],[6,"W","","Writer for register FCTRLB",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"KEEP_R","","Reader of field `KEEP`",null,null],[6,"QUAL_R","","Reader of field `QUAL`",null,null],[6,"BLANK_R","","Reader of field `BLANK`",null,null],[6,"RESTART_R","","Reader of field `RESTART`",null,null],[6,"HALT_R","","Reader of field `HALT`",null,null],[6,"CHSEL_R","","Reader of field `CHSEL`",null,null],[6,"CAPTURE_R","","Reader of field `CAPTURE`",null,null],[6,"BLANKVAL_R","","Reader of field `BLANKVAL`",null,null],[6,"FILTERVAL_R","","Reader of field `FILTERVAL`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",6,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrlb","Get enumerated values variant",1965,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1965,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",1965,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",1965,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",1965,[[]]],[11,"variant","","Writes `variant` to the field",1966,[[["src_a",4]],["w",6]]],[11,"disable","","Fault input disabled",1966,[[],["w",6]]],[11,"enable","","MCEx (x=0,1) event input",1966,[[],["w",6]]],[11,"invert","","Inverted MCEx (x=0,1) event input",1966,[[],["w",6]]],[11,"altfault","","Alternate fault (A or B) state at the end of the previous…",1966,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1966,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1967,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1967,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1967,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1968,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1968,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1968,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["blank_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrlb","Get enumerated values variant",1969,[[],["blank_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",1969,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",1969,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",1969,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",1969,[[]]],[11,"variant","","Writes `variant` to the field",1970,[[["blank_a",4]],["w",6]]],[11,"none","","No blanking applied",1970,[[],["w",6]]],[11,"rise","","Blanking applied from rising edge of the output waveform",1970,[[],["w",6]]],[11,"fall","","Blanking applied from falling edge of the output waveform",1970,[[],["w",6]]],[11,"both","","Blanking applied from each toggle of the output waveform",1970,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1970,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1971,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1971,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1971,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",6,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",6,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrlb","Get enumerated values variant",1972,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1972,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",1972,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",1972,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",1972,[[]]],[11,"variant","","Writes `variant` to the field",1973,[[["halt_a",4]],["w",6]]],[11,"disable","","Halt action disabled",1973,[[],["w",6]]],[11,"hw","","Hardware halt action",1973,[[],["w",6]]],[11,"sw","","Software halt action",1973,[[],["w",6]]],[11,"nr","","Non-recoverable fault",1973,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1973,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",6,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",6,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",6,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrlb","Get enumerated values variant",1974,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",1974,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",1974,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",1974,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",1974,[[]]],[11,"variant","","Writes `variant` to the field",1975,[[["chsel_a",4]],["w",6]]],[11,"cc0","","Capture value stored in channel 0",1975,[[],["w",6]]],[11,"cc1","","Capture value stored in channel 1",1975,[[],["w",6]]],[11,"cc2","","Capture value stored in channel 2",1975,[[],["w",6]]],[11,"cc3","","Capture value stored in channel 3",1975,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1975,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["capture_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",6,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",6,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",6,[[]]],[11,"variant","atsamd21g::tcc0::fctrlb","Get enumerated values variant",1976,[[],[["variant",4],["capture_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1976,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",1976,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",1976,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",1976,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",1976,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",1976,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",1976,[[]]],[11,"variant","","Writes `variant` to the field",1977,[[["capture_a",4]],["w",6]]],[11,"disable","","No capture",1977,[[],["w",6]]],[11,"capt","","Capture on fault",1977,[[],["w",6]]],[11,"captmin","","Minimum capture",1977,[[],["w",6]]],[11,"captmax","","Maximum capture",1977,[[],["w",6]]],[11,"locmin","","Minimum local detection",1977,[[],["w",6]]],[11,"locmax","","Maximum local detection",1977,[[],["w",6]]],[11,"deriv0","","Minimum and maximum local detection",1977,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1977,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1978,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1979,[[],["w",6]]],[11,"src","atsamd21g::generic","Bits 0:1 - Fault B Source",6,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault B Keeper",6,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault B Qualification",6,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",6,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault B Restart",6,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",6,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",6,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",6,[[],["capture_r",6]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",6,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",6,[[],["filterval_r",6]]],[11,"src","atsamd21g::tcc0::fctrlb","Bits 0:1 - Fault B Source",1980,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault B Keeper",1980,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault B Qualification",1980,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",1980,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault B Restart",1980,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",1980,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",1980,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",1980,[[],["capture_r",6]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",1980,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",1980,[[],["filterval_r",6]]],[11,"src","atsamd21g::generic","Bits 0:1 - Fault B Source",7,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault B Keeper",7,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault B Qualification",7,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",7,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault B Restart",7,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",7,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",7,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",7,[[],["capture_w",3]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",7,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",7,[[],["filterval_w",3]]],[11,"src","atsamd21g::tcc0::fctrlb","Bits 0:1 - Fault B Source",1981,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault B Keeper",1981,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault B Qualification",1981,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",1981,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault B Restart",1981,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",1981,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",1981,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",1981,[[],["capture_w",3]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",1981,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",1981,[[],["filterval_w",3]]],[0,"wexctrl","atsamd21g::tcc0","Waveform Extension Configuration",null,null],[3,"OTMX_W","atsamd21g::tcc0::wexctrl","Write proxy for field `OTMX`",null,null],[3,"DTIEN0_W","","Write proxy for field `DTIEN0`",null,null],[3,"DTIEN1_W","","Write proxy for field `DTIEN1`",null,null],[3,"DTIEN2_W","","Write proxy for field `DTIEN2`",null,null],[3,"DTIEN3_W","","Write proxy for field `DTIEN3`",null,null],[3,"DTLS_W","","Write proxy for field `DTLS`",null,null],[3,"DTHS_W","","Write proxy for field `DTHS`",null,null],[6,"R","","Reader of register WEXCTRL",null,null],[6,"W","","Writer for register WEXCTRL",null,null],[6,"OTMX_R","","Reader of field `OTMX`",null,null],[6,"DTIEN0_R","","Reader of field `DTIEN0`",null,null],[6,"DTIEN1_R","","Reader of field `DTIEN1`",null,null],[6,"DTIEN2_R","","Reader of field `DTIEN2`",null,null],[6,"DTIEN3_R","","Reader of field `DTIEN3`",null,null],[6,"DTLS_R","","Reader of field `DTLS`",null,null],[6,"DTHS_R","","Reader of field `DTHS`",null,null],[11,"bits","","Writes raw bits to the field",1982,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1983,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1983,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1983,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1984,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1984,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1984,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1985,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1985,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1985,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1986,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1986,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1986,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1987,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1988,[[],["w",6]]],[11,"otmx","atsamd21g::generic","Bits 0:1 - Output Matrix",6,[[],["otmx_r",6]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",6,[[],["dtien0_r",6]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",6,[[],["dtien1_r",6]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",6,[[],["dtien2_r",6]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",6,[[],["dtien3_r",6]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",6,[[],["dtls_r",6]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",6,[[],["dths_r",6]]],[11,"otmx","atsamd21g::tcc0::wexctrl","Bits 0:1 - Output Matrix",1989,[[],["otmx_r",6]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",1989,[[],["dtien0_r",6]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",1989,[[],["dtien1_r",6]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",1989,[[],["dtien2_r",6]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",1989,[[],["dtien3_r",6]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",1989,[[],["dtls_r",6]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",1989,[[],["dths_r",6]]],[11,"otmx","atsamd21g::generic","Bits 0:1 - Output Matrix",7,[[],["otmx_w",3]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",7,[[],["dtien0_w",3]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",7,[[],["dtien1_w",3]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",7,[[],["dtien2_w",3]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",7,[[],["dtien3_w",3]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",7,[[],["dtls_w",3]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",7,[[],["dths_w",3]]],[11,"otmx","atsamd21g::tcc0::wexctrl","Bits 0:1 - Output Matrix",1990,[[],["otmx_w",3]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",1990,[[],["dtien0_w",3]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",1990,[[],["dtien1_w",3]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",1990,[[],["dtien2_w",3]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",1990,[[],["dtien3_w",3]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",1990,[[],["dtls_w",3]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",1990,[[],["dths_w",3]]],[0,"drvctrl","atsamd21g::tcc0","Driver Control",null,null],[3,"NRE0_W","atsamd21g::tcc0::drvctrl","Write proxy for field `NRE0`",null,null],[3,"NRE1_W","","Write proxy for field `NRE1`",null,null],[3,"NRE2_W","","Write proxy for field `NRE2`",null,null],[3,"NRE3_W","","Write proxy for field `NRE3`",null,null],[3,"NRE4_W","","Write proxy for field `NRE4`",null,null],[3,"NRE5_W","","Write proxy for field `NRE5`",null,null],[3,"NRE6_W","","Write proxy for field `NRE6`",null,null],[3,"NRE7_W","","Write proxy for field `NRE7`",null,null],[3,"NRV0_W","","Write proxy for field `NRV0`",null,null],[3,"NRV1_W","","Write proxy for field `NRV1`",null,null],[3,"NRV2_W","","Write proxy for field `NRV2`",null,null],[3,"NRV3_W","","Write proxy for field `NRV3`",null,null],[3,"NRV4_W","","Write proxy for field `NRV4`",null,null],[3,"NRV5_W","","Write proxy for field `NRV5`",null,null],[3,"NRV6_W","","Write proxy for field `NRV6`",null,null],[3,"NRV7_W","","Write proxy for field `NRV7`",null,null],[3,"INVEN0_W","","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"INVEN2_W","","Write proxy for field `INVEN2`",null,null],[3,"INVEN3_W","","Write proxy for field `INVEN3`",null,null],[3,"INVEN4_W","","Write proxy for field `INVEN4`",null,null],[3,"INVEN5_W","","Write proxy for field `INVEN5`",null,null],[3,"INVEN6_W","","Write proxy for field `INVEN6`",null,null],[3,"INVEN7_W","","Write proxy for field `INVEN7`",null,null],[3,"FILTERVAL0_W","","Write proxy for field `FILTERVAL0`",null,null],[3,"FILTERVAL1_W","","Write proxy for field `FILTERVAL1`",null,null],[6,"R","","Reader of register DRVCTRL",null,null],[6,"W","","Writer for register DRVCTRL",null,null],[6,"NRE0_R","","Reader of field `NRE0`",null,null],[6,"NRE1_R","","Reader of field `NRE1`",null,null],[6,"NRE2_R","","Reader of field `NRE2`",null,null],[6,"NRE3_R","","Reader of field `NRE3`",null,null],[6,"NRE4_R","","Reader of field `NRE4`",null,null],[6,"NRE5_R","","Reader of field `NRE5`",null,null],[6,"NRE6_R","","Reader of field `NRE6`",null,null],[6,"NRE7_R","","Reader of field `NRE7`",null,null],[6,"NRV0_R","","Reader of field `NRV0`",null,null],[6,"NRV1_R","","Reader of field `NRV1`",null,null],[6,"NRV2_R","","Reader of field `NRV2`",null,null],[6,"NRV3_R","","Reader of field `NRV3`",null,null],[6,"NRV4_R","","Reader of field `NRV4`",null,null],[6,"NRV5_R","","Reader of field `NRV5`",null,null],[6,"NRV6_R","","Reader of field `NRV6`",null,null],[6,"NRV7_R","","Reader of field `NRV7`",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"INVEN2_R","","Reader of field `INVEN2`",null,null],[6,"INVEN3_R","","Reader of field `INVEN3`",null,null],[6,"INVEN4_R","","Reader of field `INVEN4`",null,null],[6,"INVEN5_R","","Reader of field `INVEN5`",null,null],[6,"INVEN6_R","","Reader of field `INVEN6`",null,null],[6,"INVEN7_R","","Reader of field `INVEN7`",null,null],[6,"FILTERVAL0_R","","Reader of field `FILTERVAL0`",null,null],[6,"FILTERVAL1_R","","Reader of field `FILTERVAL1`",null,null],[11,"set_bit","","Sets the field bit",1991,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1991,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1991,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1992,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1992,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1992,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1993,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1993,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1993,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1994,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1994,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1994,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1995,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1995,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1995,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1996,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1996,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1996,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1997,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1997,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1997,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1998,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1998,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1998,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1999,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1999,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1999,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2000,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2000,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2000,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2001,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2001,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2001,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2002,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2002,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2002,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2003,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2003,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2003,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2004,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2004,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2004,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2005,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2005,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2005,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2006,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2006,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2006,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2007,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2007,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2007,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2008,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2008,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2008,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2009,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2009,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2009,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2010,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2010,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2010,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2011,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2011,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2011,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2012,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2012,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2012,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2013,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2013,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2013,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2014,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2014,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2014,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2015,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2016,[[],["w",6]]],[11,"nre0","atsamd21g::generic","Bit 0 - Non-Recoverable State 0 Output Enable",6,[[],["nre0_r",6]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",6,[[],["nre1_r",6]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",6,[[],["nre2_r",6]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",6,[[],["nre3_r",6]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",6,[[],["nre4_r",6]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",6,[[],["nre5_r",6]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",6,[[],["nre6_r",6]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",6,[[],["nre7_r",6]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",6,[[],["nrv0_r",6]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",6,[[],["nrv1_r",6]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",6,[[],["nrv2_r",6]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",6,[[],["nrv3_r",6]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",6,[[],["nrv4_r",6]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",6,[[],["nrv5_r",6]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",6,[[],["nrv6_r",6]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",6,[[],["nrv7_r",6]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",6,[[],["inven1_r",6]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",6,[[],["inven2_r",6]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",6,[[],["inven3_r",6]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",6,[[],["inven4_r",6]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",6,[[],["inven5_r",6]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",6,[[],["inven6_r",6]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",6,[[],["inven7_r",6]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",6,[[],["filterval0_r",6]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",6,[[],["filterval1_r",6]]],[11,"nre0","atsamd21g::tcc0::drvctrl","Bit 0 - Non-Recoverable State 0 Output Enable",2017,[[],["nre0_r",6]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",2017,[[],["nre1_r",6]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",2017,[[],["nre2_r",6]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",2017,[[],["nre3_r",6]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",2017,[[],["nre4_r",6]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",2017,[[],["nre5_r",6]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",2017,[[],["nre6_r",6]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",2017,[[],["nre7_r",6]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",2017,[[],["nrv0_r",6]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",2017,[[],["nrv1_r",6]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",2017,[[],["nrv2_r",6]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",2017,[[],["nrv3_r",6]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",2017,[[],["nrv4_r",6]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",2017,[[],["nrv5_r",6]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",2017,[[],["nrv6_r",6]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",2017,[[],["nrv7_r",6]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",2017,[[],["inven0_r",6]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",2017,[[],["inven1_r",6]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",2017,[[],["inven2_r",6]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",2017,[[],["inven3_r",6]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",2017,[[],["inven4_r",6]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",2017,[[],["inven5_r",6]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",2017,[[],["inven6_r",6]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",2017,[[],["inven7_r",6]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",2017,[[],["filterval0_r",6]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",2017,[[],["filterval1_r",6]]],[11,"nre0","atsamd21g::generic","Bit 0 - Non-Recoverable State 0 Output Enable",7,[[],["nre0_w",3]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",7,[[],["nre1_w",3]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",7,[[],["nre2_w",3]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",7,[[],["nre3_w",3]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",7,[[],["nre4_w",3]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",7,[[],["nre5_w",3]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",7,[[],["nre6_w",3]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",7,[[],["nre7_w",3]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",7,[[],["nrv0_w",3]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",7,[[],["nrv1_w",3]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",7,[[],["nrv2_w",3]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",7,[[],["nrv3_w",3]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",7,[[],["nrv4_w",3]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",7,[[],["nrv5_w",3]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",7,[[],["nrv6_w",3]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",7,[[],["nrv7_w",3]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",7,[[],["inven1_w",3]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",7,[[],["inven2_w",3]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",7,[[],["inven3_w",3]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",7,[[],["inven4_w",3]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",7,[[],["inven5_w",3]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",7,[[],["inven6_w",3]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",7,[[],["inven7_w",3]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",7,[[],["filterval0_w",3]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",7,[[],["filterval1_w",3]]],[11,"nre0","atsamd21g::tcc0::drvctrl","Bit 0 - Non-Recoverable State 0 Output Enable",2018,[[],["nre0_w",3]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",2018,[[],["nre1_w",3]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",2018,[[],["nre2_w",3]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",2018,[[],["nre3_w",3]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",2018,[[],["nre4_w",3]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",2018,[[],["nre5_w",3]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",2018,[[],["nre6_w",3]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",2018,[[],["nre7_w",3]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",2018,[[],["nrv0_w",3]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",2018,[[],["nrv1_w",3]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",2018,[[],["nrv2_w",3]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",2018,[[],["nrv3_w",3]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",2018,[[],["nrv4_w",3]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",2018,[[],["nrv5_w",3]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",2018,[[],["nrv6_w",3]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",2018,[[],["nrv7_w",3]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",2018,[[],["inven0_w",3]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",2018,[[],["inven1_w",3]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",2018,[[],["inven2_w",3]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",2018,[[],["inven3_w",3]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",2018,[[],["inven4_w",3]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",2018,[[],["inven5_w",3]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",2018,[[],["inven6_w",3]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",2018,[[],["inven7_w",3]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",2018,[[],["filterval0_w",3]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",2018,[[],["filterval1_w",3]]],[0,"dbgctrl","atsamd21g::tcc0","Debug Control",null,null],[3,"DBGRUN_W","atsamd21g::tcc0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[3,"FDDBD_W","","Write proxy for field `FDDBD`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[6,"FDDBD_R","","Reader of field `FDDBD`",null,null],[11,"set_bit","","Sets the field bit",2019,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2019,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2019,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2020,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2020,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2020,[[],["w",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Running Mode",6,[[],["dbgrun_r",6]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",6,[[],["fddbd_r",6]]],[11,"dbgrun","atsamd21g::tcc0::dbgctrl","Bit 0 - Debug Running Mode",2021,[[],["dbgrun_r",6]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",2021,[[],["fddbd_r",6]]],[11,"dbgrun","atsamd21g::generic","Bit 0 - Debug Running Mode",7,[[],["dbgrun_w",3]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",7,[[],["fddbd_w",3]]],[11,"dbgrun","atsamd21g::tcc0::dbgctrl","Bit 0 - Debug Running Mode",2022,[[],["dbgrun_w",3]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",2022,[[],["fddbd_w",3]]],[0,"evctrl","atsamd21g::tcc0","Event Control",null,null],[3,"EVACT0_W","atsamd21g::tcc0::evctrl","Write proxy for field `EVACT0`",null,null],[3,"EVACT1_W","","Write proxy for field `EVACT1`",null,null],[3,"CNTSEL_W","","Write proxy for field `CNTSEL`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"TRGEO_W","","Write proxy for field `TRGEO`",null,null],[3,"CNTEO_W","","Write proxy for field `CNTEO`",null,null],[3,"TCINV0_W","","Write proxy for field `TCINV0`",null,null],[3,"TCINV1_W","","Write proxy for field `TCINV1`",null,null],[3,"TCEI0_W","","Write proxy for field `TCEI0`",null,null],[3,"TCEI1_W","","Write proxy for field `TCEI1`",null,null],[3,"MCEI0_W","","Write proxy for field `MCEI0`",null,null],[3,"MCEI1_W","","Write proxy for field `MCEI1`",null,null],[3,"MCEI2_W","","Write proxy for field `MCEI2`",null,null],[3,"MCEI3_W","","Write proxy for field `MCEI3`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[3,"MCEO2_W","","Write proxy for field `MCEO2`",null,null],[3,"MCEO3_W","","Write proxy for field `MCEO3`",null,null],[4,"EVACT0_A","","Timer/counter Input Event0 Action",null,null],[13,"OFF","","0: Event action disabled",2023,null],[13,"RETRIGGER","","1: Start, restart or re-trigger counter on event",2023,null],[13,"COUNTEV","","2: Count on event",2023,null],[13,"START","","3: Start counter on event",2023,null],[13,"INC","","4: Increment counter on event",2023,null],[13,"COUNT","","5: Count on active state of asynchronous event",2023,null],[13,"FAULT","","7: Non-recoverable fault",2023,null],[4,"EVACT1_A","","Timer/counter Input Event1 Action",null,null],[13,"OFF","","0: Event action disabled",2024,null],[13,"RETRIGGER","","1: Re-trigger counter on event",2024,null],[13,"DIR","","2: Direction control",2024,null],[13,"STOP","","3: Stop counter on event",2024,null],[13,"DEC","","4: Decrement counter on event",2024,null],[13,"PPW","","5: Period capture value in CC0 register, pulse width…",2024,null],[13,"PWP","","6: Period capture value in CC1 register, pulse width…",2024,null],[13,"FAULT","","7: Non-recoverable fault",2024,null],[4,"CNTSEL_A","","Timer/counter Output Event Mode",null,null],[13,"START","","0: An interrupt/event is generated when a new counter…",2025,null],[13,"END","","1: An interrupt/event is generated when a counter cycle ends",2025,null],[13,"BETWEEN","","2: An interrupt/event is generated when a counter cycle…",2025,null],[13,"BOUNDARY","","3: An interrupt/event is generated when a new counter…",2025,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT0_R","","Reader of field `EVACT0`",null,null],[6,"EVACT1_R","","Reader of field `EVACT1`",null,null],[6,"CNTSEL_R","","Reader of field `CNTSEL`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"TRGEO_R","","Reader of field `TRGEO`",null,null],[6,"CNTEO_R","","Reader of field `CNTEO`",null,null],[6,"TCINV0_R","","Reader of field `TCINV0`",null,null],[6,"TCINV1_R","","Reader of field `TCINV1`",null,null],[6,"TCEI0_R","","Reader of field `TCEI0`",null,null],[6,"TCEI1_R","","Reader of field `TCEI1`",null,null],[6,"MCEI0_R","","Reader of field `MCEI0`",null,null],[6,"MCEI1_R","","Reader of field `MCEI1`",null,null],[6,"MCEI2_R","","Reader of field `MCEI2`",null,null],[6,"MCEI3_R","","Reader of field `MCEI3`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[6,"MCEO2_R","","Reader of field `MCEO2`",null,null],[6,"MCEO3_R","","Reader of field `MCEO3`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["evact0_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_countev","","Checks if the value of the field is `COUNTEV`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_inc","","Checks if the value of the field is `INC`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",6,[[]]],[11,"variant","atsamd21g::tcc0::evctrl","Get enumerated values variant",2026,[[],[["evact0_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2026,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",2026,[[]]],[11,"is_countev","","Checks if the value of the field is `COUNTEV`",2026,[[]]],[11,"is_start","","Checks if the value of the field is `START`",2026,[[]]],[11,"is_inc","","Checks if the value of the field is `INC`",2026,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",2026,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",2026,[[]]],[11,"variant","","Writes `variant` to the field",2027,[[["evact0_a",4]],["w",6]]],[11,"off","","Event action disabled",2027,[[],["w",6]]],[11,"retrigger","","Start, restart or re-trigger counter on event",2027,[[],["w",6]]],[11,"countev","","Count on event",2027,[[],["w",6]]],[11,"start","","Start counter on event",2027,[[],["w",6]]],[11,"inc","","Increment counter on event",2027,[[],["w",6]]],[11,"count","","Count on active state of asynchronous event",2027,[[],["w",6]]],[11,"fault","","Non-recoverable fault",2027,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2027,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["evact1_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_dir","","Checks if the value of the field is `DIR`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_dec","","Checks if the value of the field is `DEC`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",6,[[]]],[11,"variant","atsamd21g::tcc0::evctrl","Get enumerated values variant",2028,[[],["evact1_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2028,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",2028,[[]]],[11,"is_dir","","Checks if the value of the field is `DIR`",2028,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",2028,[[]]],[11,"is_dec","","Checks if the value of the field is `DEC`",2028,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",2028,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",2028,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",2028,[[]]],[11,"variant","","Writes `variant` to the field",2029,[[["evact1_a",4]],["w",6]]],[11,"off","","Event action disabled",2029,[[],["w",6]]],[11,"retrigger","","Re-trigger counter on event",2029,[[],["w",6]]],[11,"dir","","Direction control",2029,[[],["w",6]]],[11,"stop","","Stop counter on event",2029,[[],["w",6]]],[11,"dec","","Decrement counter on event",2029,[[],["w",6]]],[11,"ppw","","Period capture value in CC0 register, pulse width capture…",2029,[[],["w",6]]],[11,"pwp","","Period capture value in CC1 register, pulse width capture…",2029,[[],["w",6]]],[11,"fault","","Non-recoverable fault",2029,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2029,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["cntsel_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_end","","Checks if the value of the field is `END`",6,[[]]],[11,"is_between","","Checks if the value of the field is `BETWEEN`",6,[[]]],[11,"is_boundary","","Checks if the value of the field is `BOUNDARY`",6,[[]]],[11,"variant","atsamd21g::tcc0::evctrl","Get enumerated values variant",2030,[[],["cntsel_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",2030,[[]]],[11,"is_end","","Checks if the value of the field is `END`",2030,[[]]],[11,"is_between","","Checks if the value of the field is `BETWEEN`",2030,[[]]],[11,"is_boundary","","Checks if the value of the field is `BOUNDARY`",2030,[[]]],[11,"variant","","Writes `variant` to the field",2031,[[["cntsel_a",4]],["w",6]]],[11,"start","","An interrupt/event is generated when a new counter cycle…",2031,[[],["w",6]]],[11,"end","","An interrupt/event is generated when a counter cycle ends",2031,[[],["w",6]]],[11,"between","","An interrupt/event is generated when a counter cycle ends,…",2031,[[],["w",6]]],[11,"boundary","","An interrupt/event is generated when a new counter cycle…",2031,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2031,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2032,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2032,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2032,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2033,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2033,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2033,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2034,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2034,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2034,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2035,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2035,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2036,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2037,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2037,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2037,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2038,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2038,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2038,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2039,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2039,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2040,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2041,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2041,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2041,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2042,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2042,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2042,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2043,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2043,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2043,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2044,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2044,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2044,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2045,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2045,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2045,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2046,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2046,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2046,[[],["w",6]]],[11,"evact0","atsamd21g::generic","Bits 0:2 - Timer/counter Input Event0 Action",6,[[],["evact0_r",6]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",6,[[],["evact1_r",6]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",6,[[],["cntsel_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",6,[[],["ovfeo_r",6]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",6,[[],["trgeo_r",6]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",6,[[],["cnteo_r",6]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",6,[[],["tcinv0_r",6]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",6,[[],["tcinv1_r",6]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",6,[[],["tcei0_r",6]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",6,[[],["tcei1_r",6]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",6,[[],["mcei0_r",6]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",6,[[],["mcei1_r",6]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",6,[[],["mcei2_r",6]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",6,[[],["mcei3_r",6]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",6,[[],["mceo2_r",6]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",6,[[],["mceo3_r",6]]],[11,"evact0","atsamd21g::tcc0::evctrl","Bits 0:2 - Timer/counter Input Event0 Action",2047,[[],["evact0_r",6]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",2047,[[],["evact1_r",6]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",2047,[[],["cntsel_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",2047,[[],["ovfeo_r",6]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",2047,[[],["trgeo_r",6]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",2047,[[],["cnteo_r",6]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",2047,[[],["tcinv0_r",6]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",2047,[[],["tcinv1_r",6]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",2047,[[],["tcei0_r",6]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",2047,[[],["tcei1_r",6]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",2047,[[],["mcei0_r",6]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",2047,[[],["mcei1_r",6]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",2047,[[],["mcei2_r",6]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",2047,[[],["mcei3_r",6]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",2047,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",2047,[[],["mceo1_r",6]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",2047,[[],["mceo2_r",6]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",2047,[[],["mceo3_r",6]]],[11,"evact0","atsamd21g::generic","Bits 0:2 - Timer/counter Input Event0 Action",7,[[],["evact0_w",3]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",7,[[],["evact1_w",3]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",7,[[],["cntsel_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",7,[[],["ovfeo_w",3]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",7,[[],["trgeo_w",3]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",7,[[],["cnteo_w",3]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",7,[[],["tcinv0_w",3]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",7,[[],["tcinv1_w",3]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",7,[[],["tcei0_w",3]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",7,[[],["tcei1_w",3]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",7,[[],["mcei0_w",3]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",7,[[],["mcei1_w",3]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",7,[[],["mcei2_w",3]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",7,[[],["mcei3_w",3]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",7,[[],["mceo2_w",3]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",7,[[],["mceo3_w",3]]],[11,"evact0","atsamd21g::tcc0::evctrl","Bits 0:2 - Timer/counter Input Event0 Action",2048,[[],["evact0_w",3]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",2048,[[],["evact1_w",3]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",2048,[[],["cntsel_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",2048,[[],["ovfeo_w",3]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",2048,[[],["trgeo_w",3]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",2048,[[],["cnteo_w",3]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",2048,[[],["tcinv0_w",3]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",2048,[[],["tcinv1_w",3]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",2048,[[],["tcei0_w",3]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",2048,[[],["tcei1_w",3]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",2048,[[],["mcei0_w",3]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",2048,[[],["mcei1_w",3]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",2048,[[],["mcei2_w",3]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",2048,[[],["mcei3_w",3]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",2048,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",2048,[[],["mceo1_w",3]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",2048,[[],["mceo2_w",3]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",2048,[[],["mceo3_w",3]]],[0,"intenclr","atsamd21g::tcc0","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd21g::tcc0::intenclr","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[11,"set_bit","","Sets the field bit",2049,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2049,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2049,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2050,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2050,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2050,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2051,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2051,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2051,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2052,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2052,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2052,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2053,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2053,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2053,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2054,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2054,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2054,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2055,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2055,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2055,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2056,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2056,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2056,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2057,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2057,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2057,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2058,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2058,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2058,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2059,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2059,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2059,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2060,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2060,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2060,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2061,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2061,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2061,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",6,[[],["mc3_r",6]]],[11,"ovf","atsamd21g::tcc0::intenclr","Bit 0 - Overflow Interrupt Enable",2062,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",2062,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",2062,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",2062,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",2062,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",2062,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",2062,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",2062,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",2062,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",2062,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",2062,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",2062,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",2062,[[],["mc3_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",7,[[],["mc3_w",3]]],[11,"ovf","atsamd21g::tcc0::intenclr","Bit 0 - Overflow Interrupt Enable",2063,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",2063,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",2063,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",2063,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",2063,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",2063,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",2063,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",2063,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",2063,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",2063,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",2063,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",2063,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",2063,[[],["mc3_w",3]]],[0,"intenset","atsamd21g::tcc0","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd21g::tcc0::intenset","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[11,"set_bit","","Sets the field bit",2064,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2064,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2064,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2065,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2065,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2065,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2066,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2066,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2066,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2067,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2068,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2068,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2068,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2069,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2069,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2069,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2070,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2070,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2070,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2071,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2071,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2071,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2072,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2072,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2072,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2073,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2073,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2073,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2074,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2074,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2074,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2075,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2075,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2075,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2076,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2076,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2076,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",6,[[],["mc3_r",6]]],[11,"ovf","atsamd21g::tcc0::intenset","Bit 0 - Overflow Interrupt Enable",2077,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",2077,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",2077,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",2077,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",2077,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",2077,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",2077,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",2077,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",2077,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",2077,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",2077,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",2077,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",2077,[[],["mc3_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",7,[[],["mc3_w",3]]],[11,"ovf","atsamd21g::tcc0::intenset","Bit 0 - Overflow Interrupt Enable",2078,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",2078,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",2078,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",2078,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",2078,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",2078,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",2078,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",2078,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",2078,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",2078,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",2078,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",2078,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",2078,[[],["mc3_w",3]]],[0,"intflag","atsamd21g::tcc0","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd21g::tcc0::intflag","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[11,"set_bit","","Sets the field bit",2079,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2079,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2079,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2080,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2080,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2080,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2081,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2081,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2081,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2082,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2082,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2082,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2083,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2083,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2083,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2084,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2085,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2085,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2085,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2086,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2086,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2086,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2087,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2087,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2087,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2088,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2088,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2088,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2089,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2089,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2089,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2090,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2090,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2090,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2091,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2091,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2091,[[],["w",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error",6,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture 1",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture 2",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture 3",6,[[],["mc3_r",6]]],[11,"ovf","atsamd21g::tcc0::intflag","Bit 0 - Overflow",2092,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger",2092,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter",2092,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error",2092,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",2092,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A",2092,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B",2092,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",2092,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",2092,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture 0",2092,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture 1",2092,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture 2",2092,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture 3",2092,[[],["mc3_r",6]]],[11,"ovf","atsamd21g::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error",7,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture 1",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture 2",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture 3",7,[[],["mc3_w",3]]],[11,"ovf","atsamd21g::tcc0::intflag","Bit 0 - Overflow",2093,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger",2093,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter",2093,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error",2093,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",2093,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A",2093,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B",2093,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",2093,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",2093,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture 0",2093,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture 1",2093,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture 2",2093,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture 3",2093,[[],["mc3_w",3]]],[0,"status","atsamd21g::tcc0","Status",null,null],[3,"DFS_W","atsamd21g::tcc0::status","Write proxy for field `DFS`",null,null],[3,"PATTBV_W","","Write proxy for field `PATTBV`",null,null],[3,"WAVEBV_W","","Write proxy for field `WAVEBV`",null,null],[3,"PERBV_W","","Write proxy for field `PERBV`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"CCBV0_W","","Write proxy for field `CCBV0`",null,null],[3,"CCBV1_W","","Write proxy for field `CCBV1`",null,null],[3,"CCBV2_W","","Write proxy for field `CCBV2`",null,null],[3,"CCBV3_W","","Write proxy for field `CCBV3`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"IDX_R","","Reader of field `IDX`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"PATTBV_R","","Reader of field `PATTBV`",null,null],[6,"WAVEBV_R","","Reader of field `WAVEBV`",null,null],[6,"PERBV_R","","Reader of field `PERBV`",null,null],[6,"FAULTAIN_R","","Reader of field `FAULTAIN`",null,null],[6,"FAULTBIN_R","","Reader of field `FAULTBIN`",null,null],[6,"FAULT0IN_R","","Reader of field `FAULT0IN`",null,null],[6,"FAULT1IN_R","","Reader of field `FAULT1IN`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"CCBV0_R","","Reader of field `CCBV0`",null,null],[6,"CCBV1_R","","Reader of field `CCBV1`",null,null],[6,"CCBV2_R","","Reader of field `CCBV2`",null,null],[6,"CCBV3_R","","Reader of field `CCBV3`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"CMP2_R","","Reader of field `CMP2`",null,null],[6,"CMP3_R","","Reader of field `CMP3`",null,null],[11,"set_bit","","Sets the field bit",2094,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2094,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2094,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2095,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2095,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2095,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2097,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2098,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2098,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2098,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2099,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2099,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2099,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2100,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2100,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2100,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2101,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2101,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2101,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2102,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2102,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2102,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2105,[[],["w",6]]],[11,"stop","atsamd21g::generic","Bit 0 - Stop",6,[[],["stop_r",6]]],[11,"idx","","Bit 1 - Ramp",6,[[],["idx_r",6]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",6,[[],["dfs_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",6,[[],["pattbv_r",6]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",6,[[],["wavebv_r",6]]],[11,"perbv","","Bit 7 - Period Buffer Valid",6,[[],["perbv_r",6]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",6,[[],["faultain_r",6]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",6,[[],["faultbin_r",6]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",6,[[],["fault0in_r",6]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",6,[[],["fault1in_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",6,[[],["fault1_r",6]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",6,[[],["ccbv0_r",6]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",6,[[],["ccbv1_r",6]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",6,[[],["ccbv2_r",6]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",6,[[],["ccbv3_r",6]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",6,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",6,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",6,[[],["cmp3_r",6]]],[11,"stop","atsamd21g::tcc0::status","Bit 0 - Stop",2106,[[],["stop_r",6]]],[11,"idx","","Bit 1 - Ramp",2106,[[],["idx_r",6]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",2106,[[],["dfs_r",6]]],[11,"slave","","Bit 4 - Slave",2106,[[],["slave_r",6]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",2106,[[],["pattbv_r",6]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",2106,[[],["wavebv_r",6]]],[11,"perbv","","Bit 7 - Period Buffer Valid",2106,[[],["perbv_r",6]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",2106,[[],["faultain_r",6]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",2106,[[],["faultbin_r",6]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",2106,[[],["fault0in_r",6]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",2106,[[],["fault1in_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",2106,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",2106,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",2106,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",2106,[[],["fault1_r",6]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",2106,[[],["ccbv0_r",6]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",2106,[[],["ccbv1_r",6]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",2106,[[],["ccbv2_r",6]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",2106,[[],["ccbv3_r",6]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",2106,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",2106,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",2106,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",2106,[[],["cmp3_r",6]]],[11,"dfs","atsamd21g::generic","Bit 3 - Non-Recoverable Debug Fault State",7,[[],["dfs_w",3]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",7,[[],["pattbv_w",3]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",7,[[],["wavebv_w",3]]],[11,"perbv","","Bit 7 - Period Buffer Valid",7,[[],["perbv_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",7,[[],["fault1_w",3]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",7,[[],["ccbv0_w",3]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",7,[[],["ccbv1_w",3]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",7,[[],["ccbv2_w",3]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",7,[[],["ccbv3_w",3]]],[11,"dfs","atsamd21g::tcc0::status","Bit 3 - Non-Recoverable Debug Fault State",2107,[[],["dfs_w",3]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",2107,[[],["pattbv_w",3]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",2107,[[],["wavebv_w",3]]],[11,"perbv","","Bit 7 - Period Buffer Valid",2107,[[],["perbv_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",2107,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",2107,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",2107,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",2107,[[],["fault1_w",3]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",2107,[[],["ccbv0_w",3]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",2107,[[],["ccbv1_w",3]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",2107,[[],["ccbv2_w",3]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",2107,[[],["ccbv3_w",3]]],[0,"count","atsamd21g::tcc0","Count",null,null],[3,"COUNT_W","atsamd21g::tcc0::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",2108,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 0:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tcc0::count","Bits 0:23 - Counter Value",2109,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 0:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tcc0::count","Bits 0:23 - Counter Value",2110,[[],["count_w",3]]],[0,"count_dith4","atsamd21g::tcc0","Count",null,null],[3,"COUNT_W","atsamd21g::tcc0::count_dith4","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH4",null,null],[6,"W","","Writer for register COUNT_DITH4",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",2111,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 4:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tcc0::count_dith4","Bits 4:23 - Counter Value",2112,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 4:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tcc0::count_dith4","Bits 4:23 - Counter Value",2113,[[],["count_w",3]]],[0,"count_dith5","atsamd21g::tcc0","Count",null,null],[3,"COUNT_W","atsamd21g::tcc0::count_dith5","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH5",null,null],[6,"W","","Writer for register COUNT_DITH5",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",2114,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 5:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tcc0::count_dith5","Bits 5:23 - Counter Value",2115,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 5:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tcc0::count_dith5","Bits 5:23 - Counter Value",2116,[[],["count_w",3]]],[0,"count_dith6","atsamd21g::tcc0","Count",null,null],[3,"COUNT_W","atsamd21g::tcc0::count_dith6","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH6",null,null],[6,"W","","Writer for register COUNT_DITH6",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",2117,[[],["w",6]]],[11,"count","atsamd21g::generic","Bits 6:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd21g::tcc0::count_dith6","Bits 6:23 - Counter Value",2118,[[],["count_r",6]]],[11,"count","atsamd21g::generic","Bits 6:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd21g::tcc0::count_dith6","Bits 6:23 - Counter Value",2119,[[],["count_w",3]]],[0,"patt","atsamd21g::tcc0","Pattern",null,null],[3,"PGE0_W","atsamd21g::tcc0::patt","Write proxy for field `PGE0`",null,null],[3,"PGE1_W","","Write proxy for field `PGE1`",null,null],[3,"PGE2_W","","Write proxy for field `PGE2`",null,null],[3,"PGE3_W","","Write proxy for field `PGE3`",null,null],[3,"PGE4_W","","Write proxy for field `PGE4`",null,null],[3,"PGE5_W","","Write proxy for field `PGE5`",null,null],[3,"PGE6_W","","Write proxy for field `PGE6`",null,null],[3,"PGE7_W","","Write proxy for field `PGE7`",null,null],[3,"PGV0_W","","Write proxy for field `PGV0`",null,null],[3,"PGV1_W","","Write proxy for field `PGV1`",null,null],[3,"PGV2_W","","Write proxy for field `PGV2`",null,null],[3,"PGV3_W","","Write proxy for field `PGV3`",null,null],[3,"PGV4_W","","Write proxy for field `PGV4`",null,null],[3,"PGV5_W","","Write proxy for field `PGV5`",null,null],[3,"PGV6_W","","Write proxy for field `PGV6`",null,null],[3,"PGV7_W","","Write proxy for field `PGV7`",null,null],[6,"R","","Reader of register PATT",null,null],[6,"W","","Writer for register PATT",null,null],[6,"PGE0_R","","Reader of field `PGE0`",null,null],[6,"PGE1_R","","Reader of field `PGE1`",null,null],[6,"PGE2_R","","Reader of field `PGE2`",null,null],[6,"PGE3_R","","Reader of field `PGE3`",null,null],[6,"PGE4_R","","Reader of field `PGE4`",null,null],[6,"PGE5_R","","Reader of field `PGE5`",null,null],[6,"PGE6_R","","Reader of field `PGE6`",null,null],[6,"PGE7_R","","Reader of field `PGE7`",null,null],[6,"PGV0_R","","Reader of field `PGV0`",null,null],[6,"PGV1_R","","Reader of field `PGV1`",null,null],[6,"PGV2_R","","Reader of field `PGV2`",null,null],[6,"PGV3_R","","Reader of field `PGV3`",null,null],[6,"PGV4_R","","Reader of field `PGV4`",null,null],[6,"PGV5_R","","Reader of field `PGV5`",null,null],[6,"PGV6_R","","Reader of field `PGV6`",null,null],[6,"PGV7_R","","Reader of field `PGV7`",null,null],[11,"set_bit","","Sets the field bit",2120,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2120,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2120,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2121,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2121,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2121,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2122,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2122,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2122,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2123,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2123,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2123,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2124,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2124,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2124,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2126,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2127,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2127,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2127,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2128,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2128,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2128,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2129,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2129,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2129,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2130,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2130,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2130,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2131,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2131,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2131,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2132,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2132,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2132,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2133,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2133,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2133,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2134,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2134,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2134,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2135,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2135,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2135,[[],["w",6]]],[11,"pge0","atsamd21g::generic","Bit 0 - Pattern Generator 0 Output Enable",6,[[],["pge0_r",6]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",6,[[],["pge1_r",6]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",6,[[],["pge2_r",6]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",6,[[],["pge3_r",6]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",6,[[],["pge4_r",6]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",6,[[],["pge5_r",6]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",6,[[],["pge6_r",6]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",6,[[],["pge7_r",6]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",6,[[],["pgv0_r",6]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",6,[[],["pgv1_r",6]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",6,[[],["pgv2_r",6]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",6,[[],["pgv3_r",6]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",6,[[],["pgv4_r",6]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",6,[[],["pgv5_r",6]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",6,[[],["pgv6_r",6]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",6,[[],["pgv7_r",6]]],[11,"pge0","atsamd21g::tcc0::patt","Bit 0 - Pattern Generator 0 Output Enable",2136,[[],["pge0_r",6]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",2136,[[],["pge1_r",6]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",2136,[[],["pge2_r",6]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",2136,[[],["pge3_r",6]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",2136,[[],["pge4_r",6]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",2136,[[],["pge5_r",6]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",2136,[[],["pge6_r",6]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",2136,[[],["pge7_r",6]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",2136,[[],["pgv0_r",6]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",2136,[[],["pgv1_r",6]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",2136,[[],["pgv2_r",6]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",2136,[[],["pgv3_r",6]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",2136,[[],["pgv4_r",6]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",2136,[[],["pgv5_r",6]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",2136,[[],["pgv6_r",6]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",2136,[[],["pgv7_r",6]]],[11,"pge0","atsamd21g::generic","Bit 0 - Pattern Generator 0 Output Enable",7,[[],["pge0_w",3]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",7,[[],["pge1_w",3]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",7,[[],["pge2_w",3]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",7,[[],["pge3_w",3]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",7,[[],["pge4_w",3]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",7,[[],["pge5_w",3]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",7,[[],["pge6_w",3]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",7,[[],["pge7_w",3]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",7,[[],["pgv0_w",3]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",7,[[],["pgv1_w",3]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",7,[[],["pgv2_w",3]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",7,[[],["pgv3_w",3]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",7,[[],["pgv4_w",3]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",7,[[],["pgv5_w",3]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",7,[[],["pgv6_w",3]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",7,[[],["pgv7_w",3]]],[11,"pge0","atsamd21g::tcc0::patt","Bit 0 - Pattern Generator 0 Output Enable",2137,[[],["pge0_w",3]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",2137,[[],["pge1_w",3]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",2137,[[],["pge2_w",3]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",2137,[[],["pge3_w",3]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",2137,[[],["pge4_w",3]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",2137,[[],["pge5_w",3]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",2137,[[],["pge6_w",3]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",2137,[[],["pge7_w",3]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",2137,[[],["pgv0_w",3]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",2137,[[],["pgv1_w",3]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",2137,[[],["pgv2_w",3]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",2137,[[],["pgv3_w",3]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",2137,[[],["pgv4_w",3]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",2137,[[],["pgv5_w",3]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",2137,[[],["pgv6_w",3]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",2137,[[],["pgv7_w",3]]],[0,"wave","atsamd21g::tcc0","Waveform Control",null,null],[3,"WAVEGEN_W","atsamd21g::tcc0::wave","Write proxy for field `WAVEGEN`",null,null],[3,"RAMP_W","","Write proxy for field `RAMP`",null,null],[3,"CIPEREN_W","","Write proxy for field `CIPEREN`",null,null],[3,"CICCEN0_W","","Write proxy for field `CICCEN0`",null,null],[3,"CICCEN1_W","","Write proxy for field `CICCEN1`",null,null],[3,"CICCEN2_W","","Write proxy for field `CICCEN2`",null,null],[3,"CICCEN3_W","","Write proxy for field `CICCEN3`",null,null],[3,"POL0_W","","Write proxy for field `POL0`",null,null],[3,"POL1_W","","Write proxy for field `POL1`",null,null],[3,"POL2_W","","Write proxy for field `POL2`",null,null],[3,"POL3_W","","Write proxy for field `POL3`",null,null],[3,"SWAP0_W","","Write proxy for field `SWAP0`",null,null],[3,"SWAP1_W","","Write proxy for field `SWAP1`",null,null],[3,"SWAP2_W","","Write proxy for field `SWAP2`",null,null],[3,"SWAP3_W","","Write proxy for field `SWAP3`",null,null],[4,"WAVEGEN_A","","Waveform Generation",null,null],[13,"NFRQ","","0: Normal frequency",2138,null],[13,"MFRQ","","1: Match frequency",2138,null],[13,"NPWM","","2: Normal PWM",2138,null],[13,"DSCRITICAL","","4: Dual-slope critical",2138,null],[13,"DSBOTTOM","","5: Dual-slope with interrupt/event condition when COUNT…",2138,null],[13,"DSBOTH","","6: Dual-slope with interrupt/event condition when COUNT…",2138,null],[13,"DSTOP","","7: Dual-slope with interrupt/event condition when COUNT…",2138,null],[4,"RAMP_A","","Ramp Mode",null,null],[13,"RAMP1","","0: RAMP1 operation",2139,null],[13,"RAMP2A","","1: Alternative RAMP2 operation",2139,null],[13,"RAMP2","","2: RAMP2 operation",2139,null],[6,"R","","Reader of register WAVE",null,null],[6,"W","","Writer for register WAVE",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"RAMP_R","","Reader of field `RAMP`",null,null],[6,"CIPEREN_R","","Reader of field `CIPEREN`",null,null],[6,"CICCEN0_R","","Reader of field `CICCEN0`",null,null],[6,"CICCEN1_R","","Reader of field `CICCEN1`",null,null],[6,"CICCEN2_R","","Reader of field `CICCEN2`",null,null],[6,"CICCEN3_R","","Reader of field `CICCEN3`",null,null],[6,"POL0_R","","Reader of field `POL0`",null,null],[6,"POL1_R","","Reader of field `POL1`",null,null],[6,"POL2_R","","Reader of field `POL2`",null,null],[6,"POL3_R","","Reader of field `POL3`",null,null],[6,"SWAP0_R","","Reader of field `SWAP0`",null,null],[6,"SWAP1_R","","Reader of field `SWAP1`",null,null],[6,"SWAP2_R","","Reader of field `SWAP2`",null,null],[6,"SWAP3_R","","Reader of field `SWAP3`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["wavegen_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",6,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",6,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",6,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",6,[[]]],[11,"variant","atsamd21g::tcc0::wave","Get enumerated values variant",2140,[[],[["variant",4],["wavegen_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",2140,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",2140,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",2140,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",2140,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",2140,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",2140,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",2140,[[]]],[11,"variant","","Writes `variant` to the field",2141,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",2141,[[],["w",6]]],[11,"mfrq","","Match frequency",2141,[[],["w",6]]],[11,"npwm","","Normal PWM",2141,[[],["w",6]]],[11,"dscritical","","Dual-slope critical",2141,[[],["w",6]]],[11,"dsbottom","","Dual-slope with interrupt/event condition when COUNT…",2141,[[],["w",6]]],[11,"dsboth","","Dual-slope with interrupt/event condition when COUNT…",2141,[[],["w",6]]],[11,"dstop","","Dual-slope with interrupt/event condition when COUNT…",2141,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2141,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["ramp_a",4],["variant",4]]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",6,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",6,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",6,[[]]],[11,"variant","atsamd21g::tcc0::wave","Get enumerated values variant",2142,[[],[["ramp_a",4],["variant",4]]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",2142,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",2142,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",2142,[[]]],[11,"variant","","Writes `variant` to the field",2143,[[["ramp_a",4]],["w",6]]],[11,"ramp1","","RAMP1 operation",2143,[[],["w",6]]],[11,"ramp2a","","Alternative RAMP2 operation",2143,[[],["w",6]]],[11,"ramp2","","RAMP2 operation",2143,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2144,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2145,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2145,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2145,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2146,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2146,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2146,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2149,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2150,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2150,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2150,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2151,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2151,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2151,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2152,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2152,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2152,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2156,[[],["w",6]]],[11,"wavegen","atsamd21g::generic","Bits 0:2 - Waveform Generation",6,[[],["wavegen_r",6]]],[11,"ramp","","Bits 4:5 - Ramp Mode",6,[[],["ramp_r",6]]],[11,"ciperen","","Bit 7 - Circular period Enable",6,[[],["ciperen_r",6]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",6,[[],["ciccen0_r",6]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",6,[[],["ciccen1_r",6]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",6,[[],["ciccen2_r",6]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",6,[[],["ciccen3_r",6]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",6,[[],["pol0_r",6]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",6,[[],["pol1_r",6]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",6,[[],["pol2_r",6]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",6,[[],["pol3_r",6]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",6,[[],["swap0_r",6]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",6,[[],["swap1_r",6]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",6,[[],["swap2_r",6]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",6,[[],["swap3_r",6]]],[11,"wavegen","atsamd21g::tcc0::wave","Bits 0:2 - Waveform Generation",2157,[[],["wavegen_r",6]]],[11,"ramp","","Bits 4:5 - Ramp Mode",2157,[[],["ramp_r",6]]],[11,"ciperen","","Bit 7 - Circular period Enable",2157,[[],["ciperen_r",6]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",2157,[[],["ciccen0_r",6]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",2157,[[],["ciccen1_r",6]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",2157,[[],["ciccen2_r",6]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",2157,[[],["ciccen3_r",6]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",2157,[[],["pol0_r",6]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",2157,[[],["pol1_r",6]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",2157,[[],["pol2_r",6]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",2157,[[],["pol3_r",6]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",2157,[[],["swap0_r",6]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",2157,[[],["swap1_r",6]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",2157,[[],["swap2_r",6]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",2157,[[],["swap3_r",6]]],[11,"wavegen","atsamd21g::generic","Bits 0:2 - Waveform Generation",7,[[],["wavegen_w",3]]],[11,"ramp","","Bits 4:5 - Ramp Mode",7,[[],["ramp_w",3]]],[11,"ciperen","","Bit 7 - Circular period Enable",7,[[],["ciperen_w",3]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",7,[[],["ciccen0_w",3]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",7,[[],["ciccen1_w",3]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",7,[[],["ciccen2_w",3]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",7,[[],["ciccen3_w",3]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",7,[[],["pol0_w",3]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",7,[[],["pol1_w",3]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",7,[[],["pol2_w",3]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",7,[[],["pol3_w",3]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",7,[[],["swap0_w",3]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",7,[[],["swap1_w",3]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",7,[[],["swap2_w",3]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",7,[[],["swap3_w",3]]],[11,"wavegen","atsamd21g::tcc0::wave","Bits 0:2 - Waveform Generation",2158,[[],["wavegen_w",3]]],[11,"ramp","","Bits 4:5 - Ramp Mode",2158,[[],["ramp_w",3]]],[11,"ciperen","","Bit 7 - Circular period Enable",2158,[[],["ciperen_w",3]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",2158,[[],["ciccen0_w",3]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",2158,[[],["ciccen1_w",3]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",2158,[[],["ciccen2_w",3]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",2158,[[],["ciccen3_w",3]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",2158,[[],["pol0_w",3]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",2158,[[],["pol1_w",3]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",2158,[[],["pol2_w",3]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",2158,[[],["pol3_w",3]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",2158,[[],["swap0_w",3]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",2158,[[],["swap1_w",3]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",2158,[[],["swap2_w",3]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",2158,[[],["swap3_w",3]]],[0,"per","atsamd21g::tcc0","Period",null,null],[3,"PER_W","atsamd21g::tcc0::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",2159,[[],["w",6]]],[11,"per","atsamd21g::generic","Bits 0:23 - Period Value",6,[[],["per_r",6]]],[11,"per","atsamd21g::tcc0::per","Bits 0:23 - Period Value",2160,[[],["per_r",6]]],[11,"per","atsamd21g::generic","Bits 0:23 - Period Value",7,[[],["per_w",3]]],[11,"per","atsamd21g::tcc0::per","Bits 0:23 - Period Value",2161,[[],["per_w",3]]],[0,"per_dith4","atsamd21g::tcc0","Period",null,null],[3,"DITHERCY_W","atsamd21g::tcc0::per_dith4","Write proxy for field `DITHERCY`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH4",null,null],[6,"W","","Writer for register PER_DITH4",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",2162,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2163,[[],["w",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:3 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"per","","Bits 4:23 - Period Value",6,[[],["per_r",6]]],[11,"dithercy","atsamd21g::tcc0::per_dith4","Bits 0:3 - Dithering Cycle Number",2164,[[],["dithercy_r",6]]],[11,"per","","Bits 4:23 - Period Value",2164,[[],["per_r",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:3 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"per","","Bits 4:23 - Period Value",7,[[],["per_w",3]]],[11,"dithercy","atsamd21g::tcc0::per_dith4","Bits 0:3 - Dithering Cycle Number",2165,[[],["dithercy_w",3]]],[11,"per","","Bits 4:23 - Period Value",2165,[[],["per_w",3]]],[0,"per_dith5","atsamd21g::tcc0","Period",null,null],[3,"DITHERCY_W","atsamd21g::tcc0::per_dith5","Write proxy for field `DITHERCY`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH5",null,null],[6,"W","","Writer for register PER_DITH5",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",2166,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2167,[[],["w",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:4 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"per","","Bits 5:23 - Period Value",6,[[],["per_r",6]]],[11,"dithercy","atsamd21g::tcc0::per_dith5","Bits 0:4 - Dithering Cycle Number",2168,[[],["dithercy_r",6]]],[11,"per","","Bits 5:23 - Period Value",2168,[[],["per_r",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:4 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"per","","Bits 5:23 - Period Value",7,[[],["per_w",3]]],[11,"dithercy","atsamd21g::tcc0::per_dith5","Bits 0:4 - Dithering Cycle Number",2169,[[],["dithercy_w",3]]],[11,"per","","Bits 5:23 - Period Value",2169,[[],["per_w",3]]],[0,"per_dith6","atsamd21g::tcc0","Period",null,null],[3,"DITHERCY_W","atsamd21g::tcc0::per_dith6","Write proxy for field `DITHERCY`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH6",null,null],[6,"W","","Writer for register PER_DITH6",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",2170,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2171,[[],["w",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:5 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"per","","Bits 6:23 - Period Value",6,[[],["per_r",6]]],[11,"dithercy","atsamd21g::tcc0::per_dith6","Bits 0:5 - Dithering Cycle Number",2172,[[],["dithercy_r",6]]],[11,"per","","Bits 6:23 - Period Value",2172,[[],["per_r",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:5 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"per","","Bits 6:23 - Period Value",7,[[],["per_w",3]]],[11,"dithercy","atsamd21g::tcc0::per_dith6","Bits 0:5 - Dithering Cycle Number",2173,[[],["dithercy_w",3]]],[11,"per","","Bits 6:23 - Period Value",2173,[[],["per_w",3]]],[0,"cc","atsamd21g::tcc0","Compare and Capture",null,null],[3,"CC_W","atsamd21g::tcc0::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",2174,[[],["w",6]]],[11,"cc","atsamd21g::generic","Bits 0:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd21g::tcc0::cc","Bits 0:23 - Channel Compare/Capture Value",2175,[[],["cc_r",6]]],[11,"cc","atsamd21g::generic","Bits 0:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd21g::tcc0::cc","Bits 0:23 - Channel Compare/Capture Value",2176,[[],["cc_w",3]]],[0,"cc_dith4","atsamd21g::tcc0","Compare and Capture",null,null],[3,"DITHERCY_W","atsamd21g::tcc0::cc_dith4","Write proxy for field `DITHERCY`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s_DITH4",null,null],[6,"W","","Writer for register CC%s_DITH4",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",2177,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2178,[[],["w",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:3 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dithercy","atsamd21g::tcc0::cc_dith4","Bits 0:3 - Dithering Cycle Number",2179,[[],["dithercy_r",6]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",2179,[[],["cc_r",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:3 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dithercy","atsamd21g::tcc0::cc_dith4","Bits 0:3 - Dithering Cycle Number",2180,[[],["dithercy_w",3]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",2180,[[],["cc_w",3]]],[0,"cc_dith5","atsamd21g::tcc0","Compare and Capture",null,null],[3,"DITHERCY_W","atsamd21g::tcc0::cc_dith5","Write proxy for field `DITHERCY`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s_DITH5",null,null],[6,"W","","Writer for register CC%s_DITH5",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",2181,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2182,[[],["w",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:4 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dithercy","atsamd21g::tcc0::cc_dith5","Bits 0:4 - Dithering Cycle Number",2183,[[],["dithercy_r",6]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",2183,[[],["cc_r",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:4 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dithercy","atsamd21g::tcc0::cc_dith5","Bits 0:4 - Dithering Cycle Number",2184,[[],["dithercy_w",3]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",2184,[[],["cc_w",3]]],[0,"cc_dith6","atsamd21g::tcc0","Compare and Capture",null,null],[3,"DITHERCY_W","atsamd21g::tcc0::cc_dith6","Write proxy for field `DITHERCY`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s_DITH6",null,null],[6,"W","","Writer for register CC%s_DITH6",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",2185,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2186,[[],["w",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:5 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dithercy","atsamd21g::tcc0::cc_dith6","Bits 0:5 - Dithering Cycle Number",2187,[[],["dithercy_r",6]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",2187,[[],["cc_r",6]]],[11,"dithercy","atsamd21g::generic","Bits 0:5 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dithercy","atsamd21g::tcc0::cc_dith6","Bits 0:5 - Dithering Cycle Number",2188,[[],["dithercy_w",3]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",2188,[[],["cc_w",3]]],[0,"pattb","atsamd21g::tcc0","Pattern Buffer",null,null],[3,"PGEB0_W","atsamd21g::tcc0::pattb","Write proxy for field `PGEB0`",null,null],[3,"PGEB1_W","","Write proxy for field `PGEB1`",null,null],[3,"PGEB2_W","","Write proxy for field `PGEB2`",null,null],[3,"PGEB3_W","","Write proxy for field `PGEB3`",null,null],[3,"PGEB4_W","","Write proxy for field `PGEB4`",null,null],[3,"PGEB5_W","","Write proxy for field `PGEB5`",null,null],[3,"PGEB6_W","","Write proxy for field `PGEB6`",null,null],[3,"PGEB7_W","","Write proxy for field `PGEB7`",null,null],[3,"PGVB0_W","","Write proxy for field `PGVB0`",null,null],[3,"PGVB1_W","","Write proxy for field `PGVB1`",null,null],[3,"PGVB2_W","","Write proxy for field `PGVB2`",null,null],[3,"PGVB3_W","","Write proxy for field `PGVB3`",null,null],[3,"PGVB4_W","","Write proxy for field `PGVB4`",null,null],[3,"PGVB5_W","","Write proxy for field `PGVB5`",null,null],[3,"PGVB6_W","","Write proxy for field `PGVB6`",null,null],[3,"PGVB7_W","","Write proxy for field `PGVB7`",null,null],[6,"R","","Reader of register PATTB",null,null],[6,"W","","Writer for register PATTB",null,null],[6,"PGEB0_R","","Reader of field `PGEB0`",null,null],[6,"PGEB1_R","","Reader of field `PGEB1`",null,null],[6,"PGEB2_R","","Reader of field `PGEB2`",null,null],[6,"PGEB3_R","","Reader of field `PGEB3`",null,null],[6,"PGEB4_R","","Reader of field `PGEB4`",null,null],[6,"PGEB5_R","","Reader of field `PGEB5`",null,null],[6,"PGEB6_R","","Reader of field `PGEB6`",null,null],[6,"PGEB7_R","","Reader of field `PGEB7`",null,null],[6,"PGVB0_R","","Reader of field `PGVB0`",null,null],[6,"PGVB1_R","","Reader of field `PGVB1`",null,null],[6,"PGVB2_R","","Reader of field `PGVB2`",null,null],[6,"PGVB3_R","","Reader of field `PGVB3`",null,null],[6,"PGVB4_R","","Reader of field `PGVB4`",null,null],[6,"PGVB5_R","","Reader of field `PGVB5`",null,null],[6,"PGVB6_R","","Reader of field `PGVB6`",null,null],[6,"PGVB7_R","","Reader of field `PGVB7`",null,null],[11,"set_bit","","Sets the field bit",2189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2191,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2192,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2192,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2192,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2193,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2193,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2193,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2194,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2194,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2194,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2195,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2195,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2195,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2196,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2196,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2196,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2197,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2197,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2197,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2198,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2198,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2198,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2199,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2199,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2199,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2200,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2200,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2200,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2202,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2203,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2203,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2203,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2204,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2204,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2204,[[],["w",6]]],[11,"pgeb0","atsamd21g::generic","Bit 0 - Pattern Generator 0 Output Enable Buffer",6,[[],["pgeb0_r",6]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",6,[[],["pgeb1_r",6]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",6,[[],["pgeb2_r",6]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",6,[[],["pgeb3_r",6]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",6,[[],["pgeb4_r",6]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",6,[[],["pgeb5_r",6]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",6,[[],["pgeb6_r",6]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",6,[[],["pgeb7_r",6]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",6,[[],["pgvb0_r",6]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",6,[[],["pgvb1_r",6]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",6,[[],["pgvb2_r",6]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",6,[[],["pgvb3_r",6]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",6,[[],["pgvb4_r",6]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",6,[[],["pgvb5_r",6]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",6,[[],["pgvb6_r",6]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",6,[[],["pgvb7_r",6]]],[11,"pgeb0","atsamd21g::tcc0::pattb","Bit 0 - Pattern Generator 0 Output Enable Buffer",2205,[[],["pgeb0_r",6]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",2205,[[],["pgeb1_r",6]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",2205,[[],["pgeb2_r",6]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",2205,[[],["pgeb3_r",6]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",2205,[[],["pgeb4_r",6]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",2205,[[],["pgeb5_r",6]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",2205,[[],["pgeb6_r",6]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",2205,[[],["pgeb7_r",6]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",2205,[[],["pgvb0_r",6]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",2205,[[],["pgvb1_r",6]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",2205,[[],["pgvb2_r",6]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",2205,[[],["pgvb3_r",6]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",2205,[[],["pgvb4_r",6]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",2205,[[],["pgvb5_r",6]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",2205,[[],["pgvb6_r",6]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",2205,[[],["pgvb7_r",6]]],[11,"pgeb0","atsamd21g::generic","Bit 0 - Pattern Generator 0 Output Enable Buffer",7,[[],["pgeb0_w",3]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",7,[[],["pgeb1_w",3]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",7,[[],["pgeb2_w",3]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",7,[[],["pgeb3_w",3]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",7,[[],["pgeb4_w",3]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",7,[[],["pgeb5_w",3]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",7,[[],["pgeb6_w",3]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",7,[[],["pgeb7_w",3]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",7,[[],["pgvb0_w",3]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",7,[[],["pgvb1_w",3]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",7,[[],["pgvb2_w",3]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",7,[[],["pgvb3_w",3]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",7,[[],["pgvb4_w",3]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",7,[[],["pgvb5_w",3]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",7,[[],["pgvb6_w",3]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",7,[[],["pgvb7_w",3]]],[11,"pgeb0","atsamd21g::tcc0::pattb","Bit 0 - Pattern Generator 0 Output Enable Buffer",2206,[[],["pgeb0_w",3]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",2206,[[],["pgeb1_w",3]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",2206,[[],["pgeb2_w",3]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",2206,[[],["pgeb3_w",3]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",2206,[[],["pgeb4_w",3]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",2206,[[],["pgeb5_w",3]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",2206,[[],["pgeb6_w",3]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",2206,[[],["pgeb7_w",3]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",2206,[[],["pgvb0_w",3]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",2206,[[],["pgvb1_w",3]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",2206,[[],["pgvb2_w",3]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",2206,[[],["pgvb3_w",3]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",2206,[[],["pgvb4_w",3]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",2206,[[],["pgvb5_w",3]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",2206,[[],["pgvb6_w",3]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",2206,[[],["pgvb7_w",3]]],[0,"waveb","atsamd21g::tcc0","Waveform Control Buffer",null,null],[3,"WAVEGENB_W","atsamd21g::tcc0::waveb","Write proxy for field `WAVEGENB`",null,null],[3,"RAMPB_W","","Write proxy for field `RAMPB`",null,null],[3,"CIPERENB_W","","Write proxy for field `CIPERENB`",null,null],[3,"CICCENB0_W","","Write proxy for field `CICCENB0`",null,null],[3,"CICCENB1_W","","Write proxy for field `CICCENB1`",null,null],[3,"CICCENB2_W","","Write proxy for field `CICCENB2`",null,null],[3,"CICCENB3_W","","Write proxy for field `CICCENB3`",null,null],[3,"POLB0_W","","Write proxy for field `POLB0`",null,null],[3,"POLB1_W","","Write proxy for field `POLB1`",null,null],[3,"POLB2_W","","Write proxy for field `POLB2`",null,null],[3,"POLB3_W","","Write proxy for field `POLB3`",null,null],[3,"SWAPB0_W","","Write proxy for field `SWAPB0`",null,null],[3,"SWAPB1_W","","Write proxy for field `SWAPB1`",null,null],[3,"SWAPB2_W","","Write proxy for field `SWAPB2`",null,null],[3,"SWAPB3_W","","Write proxy for field `SWAPB3`",null,null],[4,"WAVEGENB_A","","Waveform Generation Buffer",null,null],[13,"NFRQ","","0: Normal frequency",2207,null],[13,"MFRQ","","1: Match frequency",2207,null],[13,"NPWM","","2: Normal PWM",2207,null],[13,"DSCRITICAL","","4: Dual-slope critical",2207,null],[13,"DSBOTTOM","","5: Dual-slope with interrupt/event condition when COUNT…",2207,null],[13,"DSBOTH","","6: Dual-slope with interrupt/event condition when COUNT…",2207,null],[13,"DSTOP","","7: Dual-slope with interrupt/event condition when COUNT…",2207,null],[4,"RAMPB_A","","Ramp Mode Buffer",null,null],[13,"RAMP1","","0: RAMP1 operation",2208,null],[13,"RAMP2A","","1: Alternative RAMP2 operation",2208,null],[13,"RAMP2","","2: RAMP2 operation",2208,null],[6,"R","","Reader of register WAVEB",null,null],[6,"W","","Writer for register WAVEB",null,null],[6,"WAVEGENB_R","","Reader of field `WAVEGENB`",null,null],[6,"RAMPB_R","","Reader of field `RAMPB`",null,null],[6,"CIPERENB_R","","Reader of field `CIPERENB`",null,null],[6,"CICCENB0_R","","Reader of field `CICCENB0`",null,null],[6,"CICCENB1_R","","Reader of field `CICCENB1`",null,null],[6,"CICCENB2_R","","Reader of field `CICCENB2`",null,null],[6,"CICCENB3_R","","Reader of field `CICCENB3`",null,null],[6,"POLB0_R","","Reader of field `POLB0`",null,null],[6,"POLB1_R","","Reader of field `POLB1`",null,null],[6,"POLB2_R","","Reader of field `POLB2`",null,null],[6,"POLB3_R","","Reader of field `POLB3`",null,null],[6,"SWAPB0_R","","Reader of field `SWAPB0`",null,null],[6,"SWAPB1_R","","Reader of field `SWAPB1`",null,null],[6,"SWAPB2_R","","Reader of field `SWAPB2`",null,null],[6,"SWAPB3_R","","Reader of field `SWAPB3`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["wavegenb_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",6,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",6,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",6,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",6,[[]]],[11,"variant","atsamd21g::tcc0::waveb","Get enumerated values variant",2209,[[],[["variant",4],["wavegenb_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",2209,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",2209,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",2209,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",2209,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",2209,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",2209,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",2209,[[]]],[11,"variant","","Writes `variant` to the field",2210,[[["wavegenb_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",2210,[[],["w",6]]],[11,"mfrq","","Match frequency",2210,[[],["w",6]]],[11,"npwm","","Normal PWM",2210,[[],["w",6]]],[11,"dscritical","","Dual-slope critical",2210,[[],["w",6]]],[11,"dsbottom","","Dual-slope with interrupt/event condition when COUNT…",2210,[[],["w",6]]],[11,"dsboth","","Dual-slope with interrupt/event condition when COUNT…",2210,[[],["w",6]]],[11,"dstop","","Dual-slope with interrupt/event condition when COUNT…",2210,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2210,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["rampb_a",4],["variant",4]]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",6,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",6,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",6,[[]]],[11,"variant","atsamd21g::tcc0::waveb","Get enumerated values variant",2211,[[],[["rampb_a",4],["variant",4]]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",2211,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",2211,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",2211,[[]]],[11,"variant","","Writes `variant` to the field",2212,[[["rampb_a",4]],["w",6]]],[11,"ramp1","","RAMP1 operation",2212,[[],["w",6]]],[11,"ramp2a","","Alternative RAMP2 operation",2212,[[],["w",6]]],[11,"ramp2","","RAMP2 operation",2212,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2212,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2213,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2213,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2213,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2214,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2214,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2214,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2215,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2215,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2215,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2216,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2216,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2216,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2217,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2217,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2217,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2218,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2218,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2218,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2219,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2219,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2219,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2220,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2220,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2220,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2221,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2221,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2221,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2222,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2222,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2222,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2223,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2223,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2223,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2224,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2224,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2224,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2225,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2225,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2225,[[],["w",6]]],[11,"wavegenb","atsamd21g::generic","Bits 0:2 - Waveform Generation Buffer",6,[[],["wavegenb_r",6]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",6,[[],["rampb_r",6]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",6,[[],["ciperenb_r",6]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",6,[[],["ciccenb0_r",6]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",6,[[],["ciccenb1_r",6]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",6,[[],["ciccenb2_r",6]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",6,[[],["ciccenb3_r",6]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",6,[[],["polb0_r",6]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",6,[[],["polb1_r",6]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",6,[[],["polb2_r",6]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",6,[[],["polb3_r",6]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",6,[[],["swapb0_r",6]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",6,[[],["swapb1_r",6]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",6,[[],["swapb2_r",6]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",6,[[],["swapb3_r",6]]],[11,"wavegenb","atsamd21g::tcc0::waveb","Bits 0:2 - Waveform Generation Buffer",2226,[[],["wavegenb_r",6]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",2226,[[],["rampb_r",6]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",2226,[[],["ciperenb_r",6]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",2226,[[],["ciccenb0_r",6]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",2226,[[],["ciccenb1_r",6]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",2226,[[],["ciccenb2_r",6]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",2226,[[],["ciccenb3_r",6]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",2226,[[],["polb0_r",6]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",2226,[[],["polb1_r",6]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",2226,[[],["polb2_r",6]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",2226,[[],["polb3_r",6]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",2226,[[],["swapb0_r",6]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",2226,[[],["swapb1_r",6]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",2226,[[],["swapb2_r",6]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",2226,[[],["swapb3_r",6]]],[11,"wavegenb","atsamd21g::generic","Bits 0:2 - Waveform Generation Buffer",7,[[],["wavegenb_w",3]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",7,[[],["rampb_w",3]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",7,[[],["ciperenb_w",3]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",7,[[],["ciccenb0_w",3]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",7,[[],["ciccenb1_w",3]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",7,[[],["ciccenb2_w",3]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",7,[[],["ciccenb3_w",3]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",7,[[],["polb0_w",3]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",7,[[],["polb1_w",3]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",7,[[],["polb2_w",3]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",7,[[],["polb3_w",3]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",7,[[],["swapb0_w",3]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",7,[[],["swapb1_w",3]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",7,[[],["swapb2_w",3]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",7,[[],["swapb3_w",3]]],[11,"wavegenb","atsamd21g::tcc0::waveb","Bits 0:2 - Waveform Generation Buffer",2227,[[],["wavegenb_w",3]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",2227,[[],["rampb_w",3]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",2227,[[],["ciperenb_w",3]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",2227,[[],["ciccenb0_w",3]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",2227,[[],["ciccenb1_w",3]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",2227,[[],["ciccenb2_w",3]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",2227,[[],["ciccenb3_w",3]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",2227,[[],["polb0_w",3]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",2227,[[],["polb1_w",3]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",2227,[[],["polb2_w",3]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",2227,[[],["polb3_w",3]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",2227,[[],["swapb0_w",3]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",2227,[[],["swapb1_w",3]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",2227,[[],["swapb2_w",3]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",2227,[[],["swapb3_w",3]]],[0,"perb","atsamd21g::tcc0","Period Buffer",null,null],[3,"PERB_W","atsamd21g::tcc0::perb","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB",null,null],[6,"W","","Writer for register PERB",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2228,[[],["w",6]]],[11,"perb","atsamd21g::generic","Bits 0:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"perb","atsamd21g::tcc0::perb","Bits 0:23 - Period Buffer Value",2229,[[],["perb_r",6]]],[11,"perb","atsamd21g::generic","Bits 0:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"perb","atsamd21g::tcc0::perb","Bits 0:23 - Period Buffer Value",2230,[[],["perb_w",3]]],[0,"perb_dith4","atsamd21g::tcc0","Period Buffer",null,null],[3,"DITHERCYB_W","atsamd21g::tcc0::perb_dith4","Write proxy for field `DITHERCYB`",null,null],[3,"PERB_W","","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB_DITH4",null,null],[6,"W","","Writer for register PERB_DITH4",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2231,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2232,[[],["w",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:3 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"perb","","Bits 4:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"dithercyb","atsamd21g::tcc0::perb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2233,[[],["dithercyb_r",6]]],[11,"perb","","Bits 4:23 - Period Buffer Value",2233,[[],["perb_r",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:3 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"perb","","Bits 4:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"dithercyb","atsamd21g::tcc0::perb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2234,[[],["dithercyb_w",3]]],[11,"perb","","Bits 4:23 - Period Buffer Value",2234,[[],["perb_w",3]]],[0,"perb_dith5","atsamd21g::tcc0","Period Buffer",null,null],[3,"DITHERCYB_W","atsamd21g::tcc0::perb_dith5","Write proxy for field `DITHERCYB`",null,null],[3,"PERB_W","","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB_DITH5",null,null],[6,"W","","Writer for register PERB_DITH5",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2235,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2236,[[],["w",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:4 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"perb","","Bits 5:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"dithercyb","atsamd21g::tcc0::perb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2237,[[],["dithercyb_r",6]]],[11,"perb","","Bits 5:23 - Period Buffer Value",2237,[[],["perb_r",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:4 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"perb","","Bits 5:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"dithercyb","atsamd21g::tcc0::perb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2238,[[],["dithercyb_w",3]]],[11,"perb","","Bits 5:23 - Period Buffer Value",2238,[[],["perb_w",3]]],[0,"perb_dith6","atsamd21g::tcc0","Period Buffer",null,null],[3,"DITHERCYB_W","atsamd21g::tcc0::perb_dith6","Write proxy for field `DITHERCYB`",null,null],[3,"PERB_W","","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB_DITH6",null,null],[6,"W","","Writer for register PERB_DITH6",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2239,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2240,[[],["w",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:5 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"perb","","Bits 6:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"dithercyb","atsamd21g::tcc0::perb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2241,[[],["dithercyb_r",6]]],[11,"perb","","Bits 6:23 - Period Buffer Value",2241,[[],["perb_r",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:5 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"perb","","Bits 6:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"dithercyb","atsamd21g::tcc0::perb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2242,[[],["dithercyb_w",3]]],[11,"perb","","Bits 6:23 - Period Buffer Value",2242,[[],["perb_w",3]]],[0,"ccb","atsamd21g::tcc0","Compare and Capture Buffer",null,null],[3,"CCB_W","atsamd21g::tcc0::ccb","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s",null,null],[6,"W","","Writer for register CCB%s",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2243,[[],["w",6]]],[11,"ccb","atsamd21g::generic","Bits 0:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"ccb","atsamd21g::tcc0::ccb","Bits 0:23 - Channel Compare/Capture Buffer Value",2244,[[],["ccb_r",6]]],[11,"ccb","atsamd21g::generic","Bits 0:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"ccb","atsamd21g::tcc0::ccb","Bits 0:23 - Channel Compare/Capture Buffer Value",2245,[[],["ccb_w",3]]],[0,"ccb_dith4","atsamd21g::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERCYB_W","atsamd21g::tcc0::ccb_dith4","Write proxy for field `DITHERCYB`",null,null],[3,"CCB_W","","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s_DITH4",null,null],[6,"W","","Writer for register CCB%s_DITH4",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2246,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2247,[[],["w",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:3 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"dithercyb","atsamd21g::tcc0::ccb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2248,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",2248,[[],["ccb_r",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:3 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"dithercyb","atsamd21g::tcc0::ccb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2249,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",2249,[[],["ccb_w",3]]],[0,"ccb_dith5","atsamd21g::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERCYB_W","atsamd21g::tcc0::ccb_dith5","Write proxy for field `DITHERCYB`",null,null],[3,"CCB_W","","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s_DITH5",null,null],[6,"W","","Writer for register CCB%s_DITH5",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2250,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2251,[[],["w",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:4 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"dithercyb","atsamd21g::tcc0::ccb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2252,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",2252,[[],["ccb_r",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:4 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"dithercyb","atsamd21g::tcc0::ccb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2253,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",2253,[[],["ccb_w",3]]],[0,"ccb_dith6","atsamd21g::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERCYB_W","atsamd21g::tcc0::ccb_dith6","Write proxy for field `DITHERCYB`",null,null],[3,"CCB_W","","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s_DITH6",null,null],[6,"W","","Writer for register CCB%s_DITH6",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2254,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2255,[[],["w",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:5 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"dithercyb","atsamd21g::tcc0::ccb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2256,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",2256,[[],["ccb_r",6]]],[11,"dithercyb","atsamd21g::generic","Bits 0:5 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"dithercyb","atsamd21g::tcc0::ccb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2257,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",2257,[[],["ccb_w",3]]],[6,"CTRLA","atsamd21g::tcc0","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"FCTRLA","","Recoverable Fault A Configuration",null,null],[6,"FCTRLB","","Recoverable Fault B Configuration",null,null],[6,"WEXCTRL","","Waveform Extension Configuration",null,null],[6,"DRVCTRL","","Driver Control",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","Count",null,null],[6,"COUNT_DITH4","","Count",null,null],[6,"COUNT_DITH5","","Count",null,null],[6,"COUNT_DITH6","","Count",null,null],[6,"PATT","","Pattern",null,null],[6,"WAVE","","Waveform Control",null,null],[6,"PER","","Period",null,null],[6,"PER_DITH4","","Period",null,null],[6,"PER_DITH5","","Period",null,null],[6,"PER_DITH6","","Period",null,null],[6,"CC","","Compare and Capture",null,null],[6,"CC_DITH4","","Compare and Capture",null,null],[6,"CC_DITH5","","Compare and Capture",null,null],[6,"CC_DITH6","","Compare and Capture",null,null],[6,"PATTB","","Pattern Buffer",null,null],[6,"WAVEB","","Waveform Control Buffer",null,null],[6,"PERB","","Period Buffer",null,null],[6,"PERB_DITH4","","Period Buffer",null,null],[6,"PERB_DITH5","","Period Buffer",null,null],[6,"PERB_DITH6","","Period Buffer",null,null],[6,"CCB","","Compare and Capture Buffer",null,null],[6,"CCB_DITH4","","Compare and Capture Buffer",null,null],[6,"CCB_DITH5","","Compare and Capture Buffer",null,null],[6,"CCB_DITH6","","Compare and Capture Buffer",null,null],[11,"count_dith6","","0x34 - Count",1895,[[],["count_dith6",6]]],[11,"count_dith6_mut","","0x34 - Count",1895,[[],["count_dith6",6]]],[11,"count_dith5","","0x34 - Count",1895,[[],["count_dith5",6]]],[11,"count_dith5_mut","","0x34 - Count",1895,[[],["count_dith5",6]]],[11,"count_dith4","","0x34 - Count",1895,[[],["count_dith4",6]]],[11,"count_dith4_mut","","0x34 - Count",1895,[[],["count_dith4",6]]],[11,"count","","0x34 - Count",1895,[[],["count",6]]],[11,"count_mut","","0x34 - Count",1895,[[],["count",6]]],[11,"per_dith6","","0x40 - Period",1895,[[],["per_dith6",6]]],[11,"per_dith6_mut","","0x40 - Period",1895,[[],["per_dith6",6]]],[11,"per_dith5","","0x40 - Period",1895,[[],["per_dith5",6]]],[11,"per_dith5_mut","","0x40 - Period",1895,[[],["per_dith5",6]]],[11,"per_dith4","","0x40 - Period",1895,[[],["per_dith4",6]]],[11,"per_dith4_mut","","0x40 - Period",1895,[[],["per_dith4",6]]],[11,"per","","0x40 - Period",1895,[[],["per",6]]],[11,"per_mut","","0x40 - Period",1895,[[],["per",6]]],[11,"cc_dith6","","0x44 - Compare and Capture",1895,[[]]],[11,"cc_dith6_mut","","0x44 - Compare and Capture",1895,[[]]],[11,"cc_dith5","","0x44 - Compare and Capture",1895,[[]]],[11,"cc_dith5_mut","","0x44 - Compare and Capture",1895,[[]]],[11,"cc_dith4","","0x44 - Compare and Capture",1895,[[]]],[11,"cc_dith4_mut","","0x44 - Compare and Capture",1895,[[]]],[11,"cc","","0x44 - Compare and Capture",1895,[[]]],[11,"cc_mut","","0x44 - Compare and Capture",1895,[[]]],[11,"perb_dith6","","0x6c - Period Buffer",1895,[[],["perb_dith6",6]]],[11,"perb_dith6_mut","","0x6c - Period Buffer",1895,[[],["perb_dith6",6]]],[11,"perb_dith5","","0x6c - Period Buffer",1895,[[],["perb_dith5",6]]],[11,"perb_dith5_mut","","0x6c - Period Buffer",1895,[[],["perb_dith5",6]]],[11,"perb_dith4","","0x6c - Period Buffer",1895,[[],["perb_dith4",6]]],[11,"perb_dith4_mut","","0x6c - Period Buffer",1895,[[],["perb_dith4",6]]],[11,"perb","","0x6c - Period Buffer",1895,[[],["perb",6]]],[11,"perb_mut","","0x6c - Period Buffer",1895,[[],["perb",6]]],[11,"ccb_dith6","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb_dith6_mut","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb_dith5","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb_dith5_mut","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb_dith4","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb_dith4_mut","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb","","0x70 - Compare and Capture Buffer",1895,[[]]],[11,"ccb_mut","","0x70 - Compare and Capture Buffer",1895,[[]]],[0,"usb","atsamd21g","Universal Serial Bus",null,null],[3,"RegisterBlock","atsamd21g::usb","Register block",null,null],[3,"DEVICE","","Register block",null,null],[12,"ctrla","","0x00 - Control A",2258,null],[12,"syncbusy","","0x02 - Synchronization Busy",2258,null],[12,"qosctrl","","0x03 - USB Quality Of Service",2258,null],[12,"ctrlb","","0x08 - DEVICE Control B",2258,null],[12,"dadd","","0x0a - DEVICE Device Address",2258,null],[12,"status","","0x0c - DEVICE Status",2258,null],[12,"fsmstatus","","0x0d - Finite State Machine Status",2258,null],[12,"fnum","","0x10 - DEVICE Device Frame Number",2258,null],[12,"intenclr","","0x14 - DEVICE Device Interrupt Enable Clear",2258,null],[12,"intenset","","0x18 - DEVICE Device Interrupt Enable Set",2258,null],[12,"intflag","","0x1c - DEVICE Device Interrupt Flag",2258,null],[12,"epintsmry","","0x20 - DEVICE End Point Interrupt Summary",2258,null],[12,"descadd","","0x24 - Descriptor Address",2258,null],[12,"padcal","","0x28 - USB PAD Calibration",2258,null],[12,"epcfg0","","0x100 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr0","","0x104 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset0","","0x105 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus0","","0x106 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag0","","0x107 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr0","","0x108 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset0","","0x109 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg1","","0x120 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr1","","0x124 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset1","","0x125 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus1","","0x126 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag1","","0x127 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr1","","0x128 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset1","","0x129 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg2","","0x140 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr2","","0x144 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset2","","0x145 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus2","","0x146 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag2","","0x147 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr2","","0x148 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset2","","0x149 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg3","","0x160 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr3","","0x164 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset3","","0x165 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus3","","0x166 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag3","","0x167 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr3","","0x168 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset3","","0x169 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg4","","0x180 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr4","","0x184 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset4","","0x185 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus4","","0x186 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag4","","0x187 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr4","","0x188 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset4","","0x189 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg5","","0x1a0 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr5","","0x1a4 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset5","","0x1a5 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus5","","0x1a6 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag5","","0x1a7 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr5","","0x1a8 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset5","","0x1a9 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg6","","0x1c0 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr6","","0x1c4 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset6","","0x1c5 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus6","","0x1c6 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag6","","0x1c7 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr6","","0x1c8 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset6","","0x1c9 - DEVICE End Point Interrupt Set Flag",2258,null],[12,"epcfg7","","0x1e0 - DEVICE End Point Configuration",2258,null],[12,"epstatusclr7","","0x1e4 - DEVICE End Point Pipe Status Clear",2258,null],[12,"epstatusset7","","0x1e5 - DEVICE End Point Pipe Status Set",2258,null],[12,"epstatus7","","0x1e6 - DEVICE End Point Pipe Status",2258,null],[12,"epintflag7","","0x1e7 - DEVICE End Point Interrupt Flag",2258,null],[12,"epintenclr7","","0x1e8 - DEVICE End Point Interrupt Clear Flag",2258,null],[12,"epintenset7","","0x1e9 - DEVICE End Point Interrupt Set Flag",2258,null],[3,"HOST","","Register block",null,null],[12,"ctrla","","0x00 - Control A",2259,null],[12,"syncbusy","","0x02 - Synchronization Busy",2259,null],[12,"qosctrl","","0x03 - USB Quality Of Service",2259,null],[12,"ctrlb","","0x08 - HOST Control B",2259,null],[12,"hsofc","","0x0a - HOST Host Start Of Frame Control",2259,null],[12,"status","","0x0c - HOST Status",2259,null],[12,"fsmstatus","","0x0d - Finite State Machine Status",2259,null],[12,"fnum","","0x10 - HOST Host Frame Number",2259,null],[12,"flenhigh","","0x12 - HOST Host Frame Length",2259,null],[12,"intenclr","","0x14 - HOST Host Interrupt Enable Clear",2259,null],[12,"intenset","","0x18 - HOST Host Interrupt Enable Set",2259,null],[12,"intflag","","0x1c - HOST Host Interrupt Flag",2259,null],[12,"pintsmry","","0x20 - HOST Pipe Interrupt Summary",2259,null],[12,"descadd","","0x24 - Descriptor Address",2259,null],[12,"padcal","","0x28 - USB PAD Calibration",2259,null],[12,"pcfg0","","0x100 - HOST End Point Configuration",2259,null],[12,"binterval0","","0x103 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr0","","0x104 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset0","","0x105 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus0","","0x106 - HOST End Point Pipe Status",2259,null],[12,"pintflag0","","0x107 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr0","","0x108 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset0","","0x109 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg1","","0x120 - HOST End Point Configuration",2259,null],[12,"binterval1","","0x123 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr1","","0x124 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset1","","0x125 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus1","","0x126 - HOST End Point Pipe Status",2259,null],[12,"pintflag1","","0x127 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr1","","0x128 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset1","","0x129 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg2","","0x140 - HOST End Point Configuration",2259,null],[12,"binterval2","","0x143 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr2","","0x144 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset2","","0x145 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus2","","0x146 - HOST End Point Pipe Status",2259,null],[12,"pintflag2","","0x147 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr2","","0x148 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset2","","0x149 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg3","","0x160 - HOST End Point Configuration",2259,null],[12,"binterval3","","0x163 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr3","","0x164 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset3","","0x165 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus3","","0x166 - HOST End Point Pipe Status",2259,null],[12,"pintflag3","","0x167 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr3","","0x168 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset3","","0x169 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg4","","0x180 - HOST End Point Configuration",2259,null],[12,"binterval4","","0x183 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr4","","0x184 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset4","","0x185 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus4","","0x186 - HOST End Point Pipe Status",2259,null],[12,"pintflag4","","0x187 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr4","","0x188 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset4","","0x189 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg5","","0x1a0 - HOST End Point Configuration",2259,null],[12,"binterval5","","0x1a3 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr5","","0x1a4 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset5","","0x1a5 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus5","","0x1a6 - HOST End Point Pipe Status",2259,null],[12,"pintflag5","","0x1a7 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr5","","0x1a8 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset5","","0x1a9 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg6","","0x1c0 - HOST End Point Configuration",2259,null],[12,"binterval6","","0x1c3 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr6","","0x1c4 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset6","","0x1c5 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus6","","0x1c6 - HOST End Point Pipe Status",2259,null],[12,"pintflag6","","0x1c7 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr6","","0x1c8 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset6","","0x1c9 - HOST Pipe Interrupt Flag Set",2259,null],[12,"pcfg7","","0x1e0 - HOST End Point Configuration",2259,null],[12,"binterval7","","0x1e3 - HOST Bus Access Period of Pipe",2259,null],[12,"pstatusclr7","","0x1e4 - HOST End Point Pipe Status Clear",2259,null],[12,"pstatusset7","","0x1e5 - HOST End Point Pipe Status Set",2259,null],[12,"pstatus7","","0x1e6 - HOST End Point Pipe Status",2259,null],[12,"pintflag7","","0x1e7 - HOST Pipe Interrupt Flag",2259,null],[12,"pintenclr7","","0x1e8 - HOST Pipe Interrupt Flag Clear",2259,null],[12,"pintenset7","","0x1e9 - HOST Pipe Interrupt Flag Set",2259,null],[0,"device","","Register block USB is Device",null,null],[0,"ctrla","atsamd21g::usb::device","Control A",null,null],[3,"SWRST_W","atsamd21g::usb::device::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"DEVICE","","0: Device Mode",2260,null],[13,"HOST","","1: Host Mode",2260,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[11,"set_bit","","Sets the field bit",2261,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2261,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2261,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2262,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2262,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2262,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2263,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2263,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2263,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",6,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",6,[[]]],[11,"variant","atsamd21g::usb::device::ctrla","Get enumerated values variant",2264,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",2264,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",2264,[[]]],[11,"variant","","Writes `variant` to the field",2265,[[["mode_a",4]],["w",6]]],[11,"device","","Device Mode",2265,[[],["w",6]]],[11,"host","","Host Mode",2265,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2265,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2265,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2265,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",6,[[],["mode_r",6]]],[11,"swrst","atsamd21g::usb::device::ctrla","Bit 0 - Software Reset",2266,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",2266,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",2266,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",2266,[[],["mode_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",7,[[],["mode_w",3]]],[11,"swrst","atsamd21g::usb::device::ctrla","Bit 0 - Software Reset",2267,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",2267,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",2267,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",2267,[[],["mode_w",3]]],[0,"syncbusy","atsamd21g::usb::device","Synchronization Busy",null,null],[6,"R","atsamd21g::usb::device::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd21g::usb::device::syncbusy","Bit 0 - Software Reset Synchronization Busy",2268,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",2268,[[],["enable_r",6]]],[0,"qosctrl","atsamd21g::usb::device","USB Quality Of Service",null,null],[3,"CQOS_W","atsamd21g::usb::device::qosctrl","Write proxy for field `CQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[4,"CQOS_A","","Configuration Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",2269,null],[13,"LOW","","1: Sensitive Bandwidth",2269,null],[13,"MEDIUM","","2: Sensitive Latency",2269,null],[13,"HIGH","","3: Critical Latency",2269,null],[4,"DQOS_A","","Data Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",2270,null],[13,"LOW","","1: Sensitive Bandwidth",2270,null],[13,"MEDIUM","","2: Sensitive Latency",2270,null],[13,"HIGH","","3: Critical Latency",2270,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"CQOS_R","","Reader of field `CQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["cqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::usb::device::qosctrl","Get enumerated values variant",2271,[[],["cqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2271,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",2271,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",2271,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",2271,[[]]],[11,"variant","","Writes `variant` to the field",2272,[[["cqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",2272,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",2272,[[],["w",6]]],[11,"medium","","Sensitive Latency",2272,[[],["w",6]]],[11,"high","","Critical Latency",2272,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2272,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::usb::device::qosctrl","Get enumerated values variant",2273,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2273,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",2273,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",2273,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",2273,[[]]],[11,"variant","","Writes `variant` to the field",2274,[[["dqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",2274,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",2274,[[],["w",6]]],[11,"medium","","Sensitive Latency",2274,[[],["w",6]]],[11,"high","","Critical Latency",2274,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2274,[[],["w",6]]],[11,"cqos","atsamd21g::generic","Bits 0:1 - Configuration Quality of Service",6,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",6,[[],["dqos_r",6]]],[11,"cqos","atsamd21g::usb::device::qosctrl","Bits 0:1 - Configuration Quality of Service",2275,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",2275,[[],["dqos_r",6]]],[11,"cqos","atsamd21g::generic","Bits 0:1 - Configuration Quality of Service",7,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",7,[[],["dqos_w",3]]],[11,"cqos","atsamd21g::usb::device::qosctrl","Bits 0:1 - Configuration Quality of Service",2276,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",2276,[[],["dqos_w",3]]],[0,"ctrlb","atsamd21g::usb::device","DEVICE Control B",null,null],[3,"DETACH_W","atsamd21g::usb::device::ctrlb","Write proxy for field `DETACH`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"SPDCONF_W","","Write proxy for field `SPDCONF`",null,null],[3,"NREPLY_W","","Write proxy for field `NREPLY`",null,null],[3,"TSTJ_W","","Write proxy for field `TSTJ`",null,null],[3,"TSTK_W","","Write proxy for field `TSTK`",null,null],[3,"TSTPCKT_W","","Write proxy for field `TSTPCKT`",null,null],[3,"OPMODE2_W","","Write proxy for field `OPMODE2`",null,null],[3,"GNAK_W","","Write proxy for field `GNAK`",null,null],[3,"LPMHDSK_W","","Write proxy for field `LPMHDSK`",null,null],[4,"SPDCONF_A","","Speed Configuration",null,null],[13,"FS","","0: FS : Full Speed",2277,null],[13,"LS","","1: LS : Low Speed",2277,null],[13,"HS","","2: HS : High Speed capable",2277,null],[13,"HSTM","","3: HSTM: High Speed Test Mode (force high-speed mode for…",2277,null],[4,"LPMHDSK_A","","Link Power Management Handshake",null,null],[13,"NO","","0: No handshake. LPM is not supported",2278,null],[13,"ACK","","1: ACK",2278,null],[13,"NYET","","2: NYET",2278,null],[13,"STALL","","3: STALL",2278,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"DETACH_R","","Reader of field `DETACH`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"SPDCONF_R","","Reader of field `SPDCONF`",null,null],[6,"NREPLY_R","","Reader of field `NREPLY`",null,null],[6,"TSTJ_R","","Reader of field `TSTJ`",null,null],[6,"TSTK_R","","Reader of field `TSTK`",null,null],[6,"TSTPCKT_R","","Reader of field `TSTPCKT`",null,null],[6,"OPMODE2_R","","Reader of field `OPMODE2`",null,null],[6,"GNAK_R","","Reader of field `GNAK`",null,null],[6,"LPMHDSK_R","","Reader of field `LPMHDSK`",null,null],[11,"set_bit","","Sets the field bit",2279,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2279,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2279,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2280,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2280,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2280,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["spdconf_a",4]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"is_hstm","","Checks if the value of the field is `HSTM`",6,[[]]],[11,"variant","atsamd21g::usb::device::ctrlb","Get enumerated values variant",2281,[[],["spdconf_a",4]]],[11,"is_fs","","Checks if the value of the field is `FS`",2281,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",2281,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",2281,[[]]],[11,"is_hstm","","Checks if the value of the field is `HSTM`",2281,[[]]],[11,"variant","","Writes `variant` to the field",2282,[[["spdconf_a",4]],["w",6]]],[11,"fs","","FS : Full Speed",2282,[[],["w",6]]],[11,"ls","","LS : Low Speed",2282,[[],["w",6]]],[11,"hs","","HS : High Speed capable",2282,[[],["w",6]]],[11,"hstm","","HSTM: High Speed Test Mode (force high-speed mode for test…",2282,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2282,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2283,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2283,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2283,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2284,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2284,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2284,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2285,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2285,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2285,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2286,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2286,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2286,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2287,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2287,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2287,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2288,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2288,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2288,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["lpmhdsk_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_ack","","Checks if the value of the field is `ACK`",6,[[]]],[11,"is_nyet","","Checks if the value of the field is `NYET`",6,[[]]],[11,"is_stall","","Checks if the value of the field is `STALL`",6,[[]]],[11,"variant","atsamd21g::usb::device::ctrlb","Get enumerated values variant",2289,[[],["lpmhdsk_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2289,[[]]],[11,"is_ack","","Checks if the value of the field is `ACK`",2289,[[]]],[11,"is_nyet","","Checks if the value of the field is `NYET`",2289,[[]]],[11,"is_stall","","Checks if the value of the field is `STALL`",2289,[[]]],[11,"variant","","Writes `variant` to the field",2290,[[["lpmhdsk_a",4]],["w",6]]],[11,"no","","No handshake. LPM is not supported",2290,[[],["w",6]]],[11,"ack","","ACK",2290,[[],["w",6]]],[11,"nyet","","NYET",2290,[[],["w",6]]],[11,"stall","","STALL",2290,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2290,[[],["w",6]]],[11,"detach","atsamd21g::generic","Bit 0 - Detach",6,[[],["detach_r",6]]],[11,"uprsm","","Bit 1 - Upstream Resume",6,[[],["uprsm_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",6,[[],["spdconf_r",6]]],[11,"nreply","","Bit 4 - No Reply",6,[[],["nreply_r",6]]],[11,"tstj","","Bit 5 - Test mode J",6,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",6,[[],["tstk_r",6]]],[11,"tstpckt","","Bit 7 - Test packet mode",6,[[],["tstpckt_r",6]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",6,[[],["opmode2_r",6]]],[11,"gnak","","Bit 9 - Global NAK",6,[[],["gnak_r",6]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",6,[[],["lpmhdsk_r",6]]],[11,"detach","atsamd21g::usb::device::ctrlb","Bit 0 - Detach",2291,[[],["detach_r",6]]],[11,"uprsm","","Bit 1 - Upstream Resume",2291,[[],["uprsm_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",2291,[[],["spdconf_r",6]]],[11,"nreply","","Bit 4 - No Reply",2291,[[],["nreply_r",6]]],[11,"tstj","","Bit 5 - Test mode J",2291,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",2291,[[],["tstk_r",6]]],[11,"tstpckt","","Bit 7 - Test packet mode",2291,[[],["tstpckt_r",6]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",2291,[[],["opmode2_r",6]]],[11,"gnak","","Bit 9 - Global NAK",2291,[[],["gnak_r",6]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",2291,[[],["lpmhdsk_r",6]]],[11,"detach","atsamd21g::generic","Bit 0 - Detach",7,[[],["detach_w",3]]],[11,"uprsm","","Bit 1 - Upstream Resume",7,[[],["uprsm_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",7,[[],["spdconf_w",3]]],[11,"nreply","","Bit 4 - No Reply",7,[[],["nreply_w",3]]],[11,"tstj","","Bit 5 - Test mode J",7,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",7,[[],["tstk_w",3]]],[11,"tstpckt","","Bit 7 - Test packet mode",7,[[],["tstpckt_w",3]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",7,[[],["opmode2_w",3]]],[11,"gnak","","Bit 9 - Global NAK",7,[[],["gnak_w",3]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",7,[[],["lpmhdsk_w",3]]],[11,"detach","atsamd21g::usb::device::ctrlb","Bit 0 - Detach",2292,[[],["detach_w",3]]],[11,"uprsm","","Bit 1 - Upstream Resume",2292,[[],["uprsm_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",2292,[[],["spdconf_w",3]]],[11,"nreply","","Bit 4 - No Reply",2292,[[],["nreply_w",3]]],[11,"tstj","","Bit 5 - Test mode J",2292,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",2292,[[],["tstk_w",3]]],[11,"tstpckt","","Bit 7 - Test packet mode",2292,[[],["tstpckt_w",3]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",2292,[[],["opmode2_w",3]]],[11,"gnak","","Bit 9 - Global NAK",2292,[[],["gnak_w",3]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",2292,[[],["lpmhdsk_w",3]]],[0,"dadd","atsamd21g::usb::device","DEVICE Device Address",null,null],[3,"DADD_W","atsamd21g::usb::device::dadd","Write proxy for field `DADD`",null,null],[3,"ADDEN_W","","Write proxy for field `ADDEN`",null,null],[6,"R","","Reader of register DADD",null,null],[6,"W","","Writer for register DADD",null,null],[6,"DADD_R","","Reader of field `DADD`",null,null],[6,"ADDEN_R","","Reader of field `ADDEN`",null,null],[11,"bits","","Writes raw bits to the field",2293,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2294,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2294,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2294,[[],["w",6]]],[11,"dadd","atsamd21g::generic","Bits 0:6 - Device Address",6,[[],["dadd_r",6]]],[11,"adden","","Bit 7 - Device Address Enable",6,[[],["adden_r",6]]],[11,"dadd","atsamd21g::usb::device::dadd","Bits 0:6 - Device Address",2295,[[],["dadd_r",6]]],[11,"adden","","Bit 7 - Device Address Enable",2295,[[],["adden_r",6]]],[11,"dadd","atsamd21g::generic","Bits 0:6 - Device Address",7,[[],["dadd_w",3]]],[11,"adden","","Bit 7 - Device Address Enable",7,[[],["adden_w",3]]],[11,"dadd","atsamd21g::usb::device::dadd","Bits 0:6 - Device Address",2296,[[],["dadd_w",3]]],[11,"adden","","Bit 7 - Device Address Enable",2296,[[],["adden_w",3]]],[0,"status","atsamd21g::usb::device","DEVICE Status",null,null],[4,"SPEED_A","atsamd21g::usb::device::status","Speed Status",null,null],[13,"FS","","0: Full-speed mode",2297,null],[13,"HS","","1: High-speed mode",2297,null],[13,"LS","","2: Low-speed mode",2297,null],[4,"LINESTATE_A","","USB Line State Status",null,null],[13,"_0","","0: SE0/RESET",2298,null],[13,"_1","","1: FS-J or LS-K State",2298,null],[13,"_2","","2: FS-K or LS-J State",2298,null],[6,"R","","Reader of register STATUS",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"LINESTATE_R","","Reader of field `LINESTATE`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["speed_a",4]]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",6,[[]]],[11,"variant","atsamd21g::usb::device::status","Get enumerated values variant",2299,[[],[["variant",4],["speed_a",4]]]],[11,"is_fs","","Checks if the value of the field is `FS`",2299,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",2299,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",2299,[[]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["linestate_a",4],["variant",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"variant","atsamd21g::usb::device::status","Get enumerated values variant",2300,[[],[["linestate_a",4],["variant",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",2300,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",2300,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",2300,[[]]],[11,"speed","atsamd21g::generic","Bits 2:3 - Speed Status",6,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",6,[[],["linestate_r",6]]],[11,"speed","atsamd21g::usb::device::status","Bits 2:3 - Speed Status",2301,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",2301,[[],["linestate_r",6]]],[0,"fsmstatus","atsamd21g::usb::device","Finite State Machine Status",null,null],[4,"FSMSTATE_A","atsamd21g::usb::device::fsmstatus","Fine State Machine Status",null,null],[13,"OFF","","1: OFF (L3). It corresponds to the powered-off,…",2302,null],[13,"ON","","2: ON (L0). It corresponds to the Idle and Active states",2302,null],[13,"SUSPEND","","4: SUSPEND (L2)",2302,null],[13,"SLEEP","","8: SLEEP (L1)",2302,null],[13,"DNRESUME","","16: DNRESUME. Down Stream Resume.",2302,null],[13,"UPRESUME","","32: UPRESUME. Up Stream Resume.",2302,null],[13,"RESET","","64: RESET. USB lines Reset.",2302,null],[6,"R","","Reader of register FSMSTATUS",null,null],[6,"FSMSTATE_R","","Reader of field `FSMSTATE`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["fsmstate_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",6,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",6,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd21g::usb::device::fsmstatus","Get enumerated values variant",2303,[[],[["fsmstate_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2303,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",2303,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",2303,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",2303,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",2303,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",2303,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",2303,[[]]],[11,"fsmstate","atsamd21g::generic","Bits 0:6 - Fine State Machine Status",6,[[],["fsmstate_r",6]]],[11,"fsmstate","atsamd21g::usb::device::fsmstatus","Bits 0:6 - Fine State Machine Status",2304,[[],["fsmstate_r",6]]],[0,"fnum","atsamd21g::usb::device","DEVICE Device Frame Number",null,null],[6,"R","atsamd21g::usb::device::fnum","Reader of register FNUM",null,null],[6,"MFNUM_R","","Reader of field `MFNUM`",null,null],[6,"FNUM_R","","Reader of field `FNUM`",null,null],[6,"FNCERR_R","","Reader of field `FNCERR`",null,null],[11,"mfnum","atsamd21g::generic","Bits 0:2 - Micro Frame Number",6,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",6,[[],["fnum_r",6]]],[11,"fncerr","","Bit 15 - Frame Number CRC Error",6,[[],["fncerr_r",6]]],[11,"mfnum","atsamd21g::usb::device::fnum","Bits 0:2 - Micro Frame Number",2305,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",2305,[[],["fnum_r",6]]],[11,"fncerr","","Bit 15 - Frame Number CRC Error",2305,[[],["fncerr_r",6]]],[0,"intenclr","atsamd21g::usb::device","DEVICE Device Interrupt Enable Clear",null,null],[3,"SUSPEND_W","atsamd21g::usb::device::intenclr","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",2306,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2306,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2306,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2307,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2308,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2308,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2308,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2310,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2310,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2310,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2311,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2311,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2311,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2312,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2312,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2312,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2313,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2313,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2313,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2314,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2314,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2314,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2315,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2315,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2315,[[],["w",6]]],[11,"suspend","atsamd21g::generic","Bit 0 - Suspend Interrupt Enable",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd21g::usb::device::intenclr","Bit 0 - Suspend Interrupt Enable",2316,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2316,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2316,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2316,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2316,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2316,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2316,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2316,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2316,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2316,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd21g::generic","Bit 0 - Suspend Interrupt Enable",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd21g::usb::device::intenclr","Bit 0 - Suspend Interrupt Enable",2317,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2317,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2317,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2317,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2317,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2317,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2317,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2317,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2317,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2317,[[],["lpmsusp_w",3]]],[0,"intenset","atsamd21g::usb::device","DEVICE Device Interrupt Enable Set",null,null],[3,"SUSPEND_W","atsamd21g::usb::device::intenset","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",2318,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2318,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2318,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2319,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2319,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2319,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2320,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2320,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2321,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2321,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2321,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2322,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2322,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2322,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2323,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2323,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2323,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2324,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2324,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2324,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2325,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2325,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2325,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2326,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2326,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2326,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2327,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2327,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2327,[[],["w",6]]],[11,"suspend","atsamd21g::generic","Bit 0 - Suspend Interrupt Enable",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd21g::usb::device::intenset","Bit 0 - Suspend Interrupt Enable",2328,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2328,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2328,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2328,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2328,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2328,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2328,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2328,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2328,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2328,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd21g::generic","Bit 0 - Suspend Interrupt Enable",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd21g::usb::device::intenset","Bit 0 - Suspend Interrupt Enable",2329,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2329,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2329,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2329,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2329,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2329,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2329,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2329,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2329,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2329,[[],["lpmsusp_w",3]]],[0,"intflag","atsamd21g::usb::device","DEVICE Device Interrupt Flag",null,null],[3,"SUSPEND_W","atsamd21g::usb::device::intflag","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",2330,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2330,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2330,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2331,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2331,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2331,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2332,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2332,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2332,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2333,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2333,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2333,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2334,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2334,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2334,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2335,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2335,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2335,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2336,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2337,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2337,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2337,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2338,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2339,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2339,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2339,[[],["w",6]]],[11,"suspend","atsamd21g::generic","Bit 0 - Suspend",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd21g::usb::device::intflag","Bit 0 - Suspend",2340,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",2340,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame",2340,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset",2340,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",2340,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume",2340,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume",2340,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",2340,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",2340,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",2340,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd21g::generic","Bit 0 - Suspend",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd21g::usb::device::intflag","Bit 0 - Suspend",2341,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",2341,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame",2341,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset",2341,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",2341,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume",2341,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume",2341,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",2341,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",2341,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",2341,[[],["lpmsusp_w",3]]],[0,"epintsmry","atsamd21g::usb::device","DEVICE End Point Interrupt Summary",null,null],[6,"R","atsamd21g::usb::device::epintsmry","Reader of register EPINTSMRY",null,null],[6,"EPINT0_R","","Reader of field `EPINT0`",null,null],[6,"EPINT1_R","","Reader of field `EPINT1`",null,null],[6,"EPINT2_R","","Reader of field `EPINT2`",null,null],[6,"EPINT3_R","","Reader of field `EPINT3`",null,null],[6,"EPINT4_R","","Reader of field `EPINT4`",null,null],[6,"EPINT5_R","","Reader of field `EPINT5`",null,null],[6,"EPINT6_R","","Reader of field `EPINT6`",null,null],[6,"EPINT7_R","","Reader of field `EPINT7`",null,null],[11,"epint0","atsamd21g::generic","Bit 0 - End Point 0 Interrupt",6,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - End Point 1 Interrupt",6,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - End Point 2 Interrupt",6,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - End Point 3 Interrupt",6,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - End Point 4 Interrupt",6,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - End Point 5 Interrupt",6,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - End Point 6 Interrupt",6,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - End Point 7 Interrupt",6,[[],["epint7_r",6]]],[11,"epint0","atsamd21g::usb::device::epintsmry","Bit 0 - End Point 0 Interrupt",2342,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - End Point 1 Interrupt",2342,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - End Point 2 Interrupt",2342,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - End Point 3 Interrupt",2342,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - End Point 4 Interrupt",2342,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - End Point 5 Interrupt",2342,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - End Point 6 Interrupt",2342,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - End Point 7 Interrupt",2342,[[],["epint7_r",6]]],[0,"descadd","atsamd21g::usb::device","Descriptor Address",null,null],[3,"DESCADD_W","atsamd21g::usb::device::descadd","Write proxy for field `DESCADD`",null,null],[6,"R","","Reader of register DESCADD",null,null],[6,"W","","Writer for register DESCADD",null,null],[6,"DESCADD_R","","Reader of field `DESCADD`",null,null],[11,"bits","","Writes raw bits to the field",2343,[[],["w",6]]],[11,"descadd","atsamd21g::generic","Bits 0:31 - Descriptor Address Value",6,[[],["descadd_r",6]]],[11,"descadd","atsamd21g::usb::device::descadd","Bits 0:31 - Descriptor Address Value",2344,[[],["descadd_r",6]]],[11,"descadd","atsamd21g::generic","Bits 0:31 - Descriptor Address Value",7,[[],["descadd_w",3]]],[11,"descadd","atsamd21g::usb::device::descadd","Bits 0:31 - Descriptor Address Value",2345,[[],["descadd_w",3]]],[0,"padcal","atsamd21g::usb::device","USB PAD Calibration",null,null],[3,"TRANSP_W","atsamd21g::usb::device::padcal","Write proxy for field `TRANSP`",null,null],[3,"TRANSN_W","","Write proxy for field `TRANSN`",null,null],[3,"TRIM_W","","Write proxy for field `TRIM`",null,null],[6,"R","","Reader of register PADCAL",null,null],[6,"W","","Writer for register PADCAL",null,null],[6,"TRANSP_R","","Reader of field `TRANSP`",null,null],[6,"TRANSN_R","","Reader of field `TRANSN`",null,null],[6,"TRIM_R","","Reader of field `TRIM`",null,null],[11,"bits","","Writes raw bits to the field",2346,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2347,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2348,[[],["w",6]]],[11,"transp","atsamd21g::generic","Bits 0:4 - USB Pad Transp calibration",6,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",6,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",6,[[],["trim_r",6]]],[11,"transp","atsamd21g::usb::device::padcal","Bits 0:4 - USB Pad Transp calibration",2349,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",2349,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",2349,[[],["trim_r",6]]],[11,"transp","atsamd21g::generic","Bits 0:4 - USB Pad Transp calibration",7,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",7,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",7,[[],["trim_w",3]]],[11,"transp","atsamd21g::usb::device::padcal","Bits 0:4 - USB Pad Transp calibration",2350,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",2350,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",2350,[[],["trim_w",3]]],[0,"epcfg","atsamd21g::usb::device","DEVICE End Point Configuration",null,null],[3,"EPTYPE0_W","atsamd21g::usb::device::epcfg","Write proxy for field `EPTYPE0`",null,null],[3,"EPTYPE1_W","","Write proxy for field `EPTYPE1`",null,null],[3,"NYETDIS_W","","Write proxy for field `NYETDIS`",null,null],[6,"R","","Reader of register EPCFG%s",null,null],[6,"W","","Writer for register EPCFG%s",null,null],[6,"EPTYPE0_R","","Reader of field `EPTYPE0`",null,null],[6,"EPTYPE1_R","","Reader of field `EPTYPE1`",null,null],[6,"NYETDIS_R","","Reader of field `NYETDIS`",null,null],[11,"bits","","Writes raw bits to the field",2351,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2352,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2353,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2353,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2353,[[],["w",6]]],[11,"eptype0","atsamd21g::generic","Bits 0:2 - End Point Type0",6,[[],["eptype0_r",6]]],[11,"eptype1","","Bits 4:6 - End Point Type1",6,[[],["eptype1_r",6]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",6,[[],["nyetdis_r",6]]],[11,"eptype0","atsamd21g::usb::device::epcfg","Bits 0:2 - End Point Type0",2354,[[],["eptype0_r",6]]],[11,"eptype1","","Bits 4:6 - End Point Type1",2354,[[],["eptype1_r",6]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",2354,[[],["nyetdis_r",6]]],[11,"eptype0","atsamd21g::generic","Bits 0:2 - End Point Type0",7,[[],["eptype0_w",3]]],[11,"eptype1","","Bits 4:6 - End Point Type1",7,[[],["eptype1_w",3]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",7,[[],["nyetdis_w",3]]],[11,"eptype0","atsamd21g::usb::device::epcfg","Bits 0:2 - End Point Type0",2355,[[],["eptype0_w",3]]],[11,"eptype1","","Bits 4:6 - End Point Type1",2355,[[],["eptype1_w",3]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",2355,[[],["nyetdis_w",3]]],[0,"epstatusclr","atsamd21g::usb::device","DEVICE End Point Pipe Status Clear",null,null],[3,"DTGLOUT_W","atsamd21g::usb::device::epstatusclr","Write proxy for field `DTGLOUT`",null,null],[3,"DTGLIN_W","","Write proxy for field `DTGLIN`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"STALLRQ0_W","","Write proxy for field `STALLRQ0`",null,null],[3,"STALLRQ1_W","","Write proxy for field `STALLRQ1`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register EPSTATUSCLR%s",null,null],[11,"set_bit","","Sets the field bit",2356,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2356,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2356,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2358,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2358,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2358,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2359,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2359,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2359,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2360,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2360,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2360,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2361,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2361,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2361,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2362,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2362,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2362,[[],["w",6]]],[11,"dtglout","atsamd21g::generic","Bit 0 - Data Toggle OUT Clear",7,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Clear",7,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Curren Bank Clear",7,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Clear",7,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Clear",7,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",7,[[],["bk1rdy_w",3]]],[11,"dtglout","atsamd21g::usb::device::epstatusclr","Bit 0 - Data Toggle OUT Clear",2363,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Clear",2363,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Curren Bank Clear",2363,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Clear",2363,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Clear",2363,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",2363,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",2363,[[],["bk1rdy_w",3]]],[0,"epstatusset","atsamd21g::usb::device","DEVICE End Point Pipe Status Set",null,null],[3,"DTGLOUT_W","atsamd21g::usb::device::epstatusset","Write proxy for field `DTGLOUT`",null,null],[3,"DTGLIN_W","","Write proxy for field `DTGLIN`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"STALLRQ0_W","","Write proxy for field `STALLRQ0`",null,null],[3,"STALLRQ1_W","","Write proxy for field `STALLRQ1`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register EPSTATUSSET%s",null,null],[11,"set_bit","","Sets the field bit",2364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2365,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2366,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2366,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2366,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2367,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2367,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2367,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2368,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2369,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2369,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2369,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2370,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2370,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2370,[[],["w",6]]],[11,"dtglout","atsamd21g::generic","Bit 0 - Data Toggle OUT Set",7,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Set",7,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",7,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Set",7,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Set",7,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",7,[[],["bk1rdy_w",3]]],[11,"dtglout","atsamd21g::usb::device::epstatusset","Bit 0 - Data Toggle OUT Set",2371,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Set",2371,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",2371,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Set",2371,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Set",2371,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",2371,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",2371,[[],["bk1rdy_w",3]]],[0,"epstatus","atsamd21g::usb::device","DEVICE End Point Pipe Status",null,null],[6,"R","atsamd21g::usb::device::epstatus","Reader of register EPSTATUS%s",null,null],[6,"DTGLOUT_R","","Reader of field `DTGLOUT`",null,null],[6,"DTGLIN_R","","Reader of field `DTGLIN`",null,null],[6,"CURBK_R","","Reader of field `CURBK`",null,null],[6,"STALLRQ0_R","","Reader of field `STALLRQ0`",null,null],[6,"STALLRQ1_R","","Reader of field `STALLRQ1`",null,null],[6,"BK0RDY_R","","Reader of field `BK0RDY`",null,null],[6,"BK1RDY_R","","Reader of field `BK1RDY`",null,null],[11,"dtglout","atsamd21g::generic","Bit 0 - Data Toggle Out",6,[[],["dtglout_r",6]]],[11,"dtglin","","Bit 1 - Data Toggle In",6,[[],["dtglin_r",6]]],[11,"curbk","","Bit 2 - Current Bank",6,[[],["curbk_r",6]]],[11,"stallrq0","","Bit 4 - Stall 0 Request",6,[[],["stallrq0_r",6]]],[11,"stallrq1","","Bit 5 - Stall 1 Request",6,[[],["stallrq1_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",6,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",6,[[],["bk1rdy_r",6]]],[11,"dtglout","atsamd21g::usb::device::epstatus","Bit 0 - Data Toggle Out",2372,[[],["dtglout_r",6]]],[11,"dtglin","","Bit 1 - Data Toggle In",2372,[[],["dtglin_r",6]]],[11,"curbk","","Bit 2 - Current Bank",2372,[[],["curbk_r",6]]],[11,"stallrq0","","Bit 4 - Stall 0 Request",2372,[[],["stallrq0_r",6]]],[11,"stallrq1","","Bit 5 - Stall 1 Request",2372,[[],["stallrq1_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",2372,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",2372,[[],["bk1rdy_r",6]]],[0,"epintflag","atsamd21g::usb::device","DEVICE End Point Interrupt Flag",null,null],[3,"TRCPT0_W","atsamd21g::usb::device::epintflag","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTFLAG%s",null,null],[6,"W","","Writer for register EPINTFLAG%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",2373,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2373,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2373,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2374,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2374,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2374,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2375,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2375,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2375,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2376,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2376,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2376,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2377,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2377,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2377,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2378,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2378,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2378,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2379,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2379,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2379,[[],["w",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd21g::usb::device::epintflag","Bit 0 - Transfer Complete 0",2380,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",2380,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0",2380,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1",2380,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup",2380,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out",2380,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out",2380,[[],["stall1_r",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd21g::usb::device::epintflag","Bit 0 - Transfer Complete 0",2381,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",2381,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0",2381,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1",2381,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup",2381,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out",2381,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out",2381,[[],["stall1_w",3]]],[0,"epintenclr","atsamd21g::usb::device","DEVICE End Point Interrupt Clear Flag",null,null],[3,"TRCPT0_W","atsamd21g::usb::device::epintenclr","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTENCLR%s",null,null],[6,"W","","Writer for register EPINTENCLR%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",2382,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2382,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2382,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2383,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2383,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2383,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2384,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2384,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2384,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2385,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2385,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2385,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2386,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2386,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2386,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2387,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2388,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2388,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2388,[[],["w",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Disable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd21g::usb::device::epintenclr","Bit 0 - Transfer Complete 0 Interrupt Disable",2389,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",2389,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",2389,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",2389,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",2389,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",2389,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",2389,[[],["stall1_r",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Disable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd21g::usb::device::epintenclr","Bit 0 - Transfer Complete 0 Interrupt Disable",2390,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",2390,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",2390,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",2390,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",2390,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",2390,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",2390,[[],["stall1_w",3]]],[0,"epintenset","atsamd21g::usb::device","DEVICE End Point Interrupt Set Flag",null,null],[3,"TRCPT0_W","atsamd21g::usb::device::epintenset","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTENSET%s",null,null],[6,"W","","Writer for register EPINTENSET%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",2391,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2391,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2391,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2392,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2392,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2392,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2393,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2393,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2393,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2394,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2394,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2394,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2395,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2395,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2395,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2396,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2396,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2396,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2397,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2397,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2397,[[],["w",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd21g::usb::device::epintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",2398,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",2398,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",2398,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",2398,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",2398,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",2398,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",2398,[[],["stall1_r",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd21g::usb::device::epintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",2399,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",2399,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",2399,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",2399,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",2399,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",2399,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",2399,[[],["stall1_w",3]]],[6,"CTRLA","atsamd21g::usb::device","Control A",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"QOSCTRL","","USB Quality Of Service",null,null],[6,"CTRLB","","DEVICE Control B",null,null],[6,"DADD","","DEVICE Device Address",null,null],[6,"STATUS","","DEVICE Status",null,null],[6,"FSMSTATUS","","Finite State Machine Status",null,null],[6,"FNUM","","DEVICE Device Frame Number",null,null],[6,"INTENCLR","","DEVICE Device Interrupt Enable Clear",null,null],[6,"INTENSET","","DEVICE Device Interrupt Enable Set",null,null],[6,"INTFLAG","","DEVICE Device Interrupt Flag",null,null],[6,"EPINTSMRY","","DEVICE End Point Interrupt Summary",null,null],[6,"DESCADD","","Descriptor Address",null,null],[6,"PADCAL","","USB PAD Calibration",null,null],[6,"EPCFG","","DEVICE End Point Configuration",null,null],[6,"EPSTATUSCLR","","DEVICE End Point Pipe Status Clear",null,null],[6,"EPSTATUSSET","","DEVICE End Point Pipe Status Set",null,null],[6,"EPSTATUS","","DEVICE End Point Pipe Status",null,null],[6,"EPINTFLAG","","DEVICE End Point Interrupt Flag",null,null],[6,"EPINTENCLR","","DEVICE End Point Interrupt Clear Flag",null,null],[6,"EPINTENSET","","DEVICE End Point Interrupt Set Flag",null,null],[0,"host","atsamd21g::usb","Register block USB is Host",null,null],[0,"ctrla","atsamd21g::usb::host","Control A",null,null],[3,"SWRST_W","atsamd21g::usb::host::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"DEVICE","","0: Device Mode",2400,null],[13,"HOST","","1: Host Mode",2400,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[11,"set_bit","","Sets the field bit",2401,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2401,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2401,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2402,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2402,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2402,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2403,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2403,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2403,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",6,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",6,[[]]],[11,"variant","atsamd21g::usb::host::ctrla","Get enumerated values variant",2404,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",2404,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",2404,[[]]],[11,"variant","","Writes `variant` to the field",2405,[[["mode_a",4]],["w",6]]],[11,"device","","Device Mode",2405,[[],["w",6]]],[11,"host","","Host Mode",2405,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2405,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2405,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2405,[[],["w",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",6,[[],["mode_r",6]]],[11,"swrst","atsamd21g::usb::host::ctrla","Bit 0 - Software Reset",2406,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",2406,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",2406,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",2406,[[],["mode_r",6]]],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",7,[[],["mode_w",3]]],[11,"swrst","atsamd21g::usb::host::ctrla","Bit 0 - Software Reset",2407,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",2407,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",2407,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",2407,[[],["mode_w",3]]],[0,"syncbusy","atsamd21g::usb::host","Synchronization Busy",null,null],[6,"R","atsamd21g::usb::host::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd21g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd21g::usb::host::syncbusy","Bit 0 - Software Reset Synchronization Busy",2408,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",2408,[[],["enable_r",6]]],[0,"qosctrl","atsamd21g::usb::host","USB Quality Of Service",null,null],[3,"CQOS_W","atsamd21g::usb::host::qosctrl","Write proxy for field `CQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[4,"CQOS_A","","Configuration Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",2409,null],[13,"LOW","","1: Sensitive Bandwidth",2409,null],[13,"MEDIUM","","2: Sensitive Latency",2409,null],[13,"HIGH","","3: Critical Latency",2409,null],[4,"DQOS_A","","Data Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",2410,null],[13,"LOW","","1: Sensitive Bandwidth",2410,null],[13,"MEDIUM","","2: Sensitive Latency",2410,null],[13,"HIGH","","3: Critical Latency",2410,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"CQOS_R","","Reader of field `CQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["cqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::usb::host::qosctrl","Get enumerated values variant",2411,[[],["cqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2411,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",2411,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",2411,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",2411,[[]]],[11,"variant","","Writes `variant` to the field",2412,[[["cqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",2412,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",2412,[[],["w",6]]],[11,"medium","","Sensitive Latency",2412,[[],["w",6]]],[11,"high","","Critical Latency",2412,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2412,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd21g::usb::host::qosctrl","Get enumerated values variant",2413,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2413,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",2413,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",2413,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",2413,[[]]],[11,"variant","","Writes `variant` to the field",2414,[[["dqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",2414,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",2414,[[],["w",6]]],[11,"medium","","Sensitive Latency",2414,[[],["w",6]]],[11,"high","","Critical Latency",2414,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2414,[[],["w",6]]],[11,"cqos","atsamd21g::generic","Bits 0:1 - Configuration Quality of Service",6,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",6,[[],["dqos_r",6]]],[11,"cqos","atsamd21g::usb::host::qosctrl","Bits 0:1 - Configuration Quality of Service",2415,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",2415,[[],["dqos_r",6]]],[11,"cqos","atsamd21g::generic","Bits 0:1 - Configuration Quality of Service",7,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",7,[[],["dqos_w",3]]],[11,"cqos","atsamd21g::usb::host::qosctrl","Bits 0:1 - Configuration Quality of Service",2416,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",2416,[[],["dqos_w",3]]],[0,"ctrlb","atsamd21g::usb::host","HOST Control B",null,null],[3,"RESUME_W","atsamd21g::usb::host::ctrlb","Write proxy for field `RESUME`",null,null],[3,"SPDCONF_W","","Write proxy for field `SPDCONF`",null,null],[3,"TSTJ_W","","Write proxy for field `TSTJ`",null,null],[3,"TSTK_W","","Write proxy for field `TSTK`",null,null],[3,"SOFE_W","","Write proxy for field `SOFE`",null,null],[3,"BUSRESET_W","","Write proxy for field `BUSRESET`",null,null],[3,"VBUSOK_W","","Write proxy for field `VBUSOK`",null,null],[3,"L1RESUME_W","","Write proxy for field `L1RESUME`",null,null],[4,"SPDCONF_A","","Speed Configuration for Host",null,null],[13,"NORMAL","","0: Normal mode:the host starts in full-speed mode and…",2417,null],[13,"FS","","3: Full-speed:the host remains in full-speed mode whatever…",2417,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"RESUME_R","","Reader of field `RESUME`",null,null],[6,"SPDCONF_R","","Reader of field `SPDCONF`",null,null],[6,"TSTJ_R","","Reader of field `TSTJ`",null,null],[6,"TSTK_R","","Reader of field `TSTK`",null,null],[6,"SOFE_R","","Reader of field `SOFE`",null,null],[6,"BUSRESET_R","","Reader of field `BUSRESET`",null,null],[6,"VBUSOK_R","","Reader of field `VBUSOK`",null,null],[6,"L1RESUME_R","","Reader of field `L1RESUME`",null,null],[11,"set_bit","","Sets the field bit",2418,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2418,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2418,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["spdconf_a",4]]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"variant","atsamd21g::usb::host::ctrlb","Get enumerated values variant",2419,[[],[["variant",4],["spdconf_a",4]]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",2419,[[]]],[11,"is_fs","","Checks if the value of the field is `FS`",2419,[[]]],[11,"variant","","Writes `variant` to the field",2420,[[["spdconf_a",4]],["w",6]]],[11,"normal","","Normal mode:the host starts in full-speed mode and…",2420,[[],["w",6]]],[11,"fs","","Full-speed:the host remains in full-speed mode whatever is…",2420,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2420,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2422,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2422,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2422,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2423,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2423,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2423,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2424,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2424,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2424,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2425,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2425,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2425,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2426,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2426,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2426,[[],["w",6]]],[11,"resume","atsamd21g::generic","Bit 1 - Send USB Resume",6,[[],["resume_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",6,[[],["spdconf_r",6]]],[11,"tstj","","Bit 5 - Test mode J",6,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",6,[[],["tstk_r",6]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",6,[[],["sofe_r",6]]],[11,"busreset","","Bit 9 - Send USB Reset",6,[[],["busreset_r",6]]],[11,"vbusok","","Bit 10 - VBUS is OK",6,[[],["vbusok_r",6]]],[11,"l1resume","","Bit 11 - Send L1 Resume",6,[[],["l1resume_r",6]]],[11,"resume","atsamd21g::usb::host::ctrlb","Bit 1 - Send USB Resume",2427,[[],["resume_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",2427,[[],["spdconf_r",6]]],[11,"tstj","","Bit 5 - Test mode J",2427,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",2427,[[],["tstk_r",6]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",2427,[[],["sofe_r",6]]],[11,"busreset","","Bit 9 - Send USB Reset",2427,[[],["busreset_r",6]]],[11,"vbusok","","Bit 10 - VBUS is OK",2427,[[],["vbusok_r",6]]],[11,"l1resume","","Bit 11 - Send L1 Resume",2427,[[],["l1resume_r",6]]],[11,"resume","atsamd21g::generic","Bit 1 - Send USB Resume",7,[[],["resume_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",7,[[],["spdconf_w",3]]],[11,"tstj","","Bit 5 - Test mode J",7,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",7,[[],["tstk_w",3]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",7,[[],["sofe_w",3]]],[11,"busreset","","Bit 9 - Send USB Reset",7,[[],["busreset_w",3]]],[11,"vbusok","","Bit 10 - VBUS is OK",7,[[],["vbusok_w",3]]],[11,"l1resume","","Bit 11 - Send L1 Resume",7,[[],["l1resume_w",3]]],[11,"resume","atsamd21g::usb::host::ctrlb","Bit 1 - Send USB Resume",2428,[[],["resume_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",2428,[[],["spdconf_w",3]]],[11,"tstj","","Bit 5 - Test mode J",2428,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",2428,[[],["tstk_w",3]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",2428,[[],["sofe_w",3]]],[11,"busreset","","Bit 9 - Send USB Reset",2428,[[],["busreset_w",3]]],[11,"vbusok","","Bit 10 - VBUS is OK",2428,[[],["vbusok_w",3]]],[11,"l1resume","","Bit 11 - Send L1 Resume",2428,[[],["l1resume_w",3]]],[0,"hsofc","atsamd21g::usb::host","HOST Host Start Of Frame Control",null,null],[3,"FLENC_W","atsamd21g::usb::host::hsofc","Write proxy for field `FLENC`",null,null],[3,"FLENCE_W","","Write proxy for field `FLENCE`",null,null],[6,"R","","Reader of register HSOFC",null,null],[6,"W","","Writer for register HSOFC",null,null],[6,"FLENC_R","","Reader of field `FLENC`",null,null],[6,"FLENCE_R","","Reader of field `FLENCE`",null,null],[11,"bits","","Writes raw bits to the field",2429,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2430,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2430,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2430,[[],["w",6]]],[11,"flenc","atsamd21g::generic","Bits 0:3 - Frame Length Control",6,[[],["flenc_r",6]]],[11,"flence","","Bit 7 - Frame Length Control Enable",6,[[],["flence_r",6]]],[11,"flenc","atsamd21g::usb::host::hsofc","Bits 0:3 - Frame Length Control",2431,[[],["flenc_r",6]]],[11,"flence","","Bit 7 - Frame Length Control Enable",2431,[[],["flence_r",6]]],[11,"flenc","atsamd21g::generic","Bits 0:3 - Frame Length Control",7,[[],["flenc_w",3]]],[11,"flence","","Bit 7 - Frame Length Control Enable",7,[[],["flence_w",3]]],[11,"flenc","atsamd21g::usb::host::hsofc","Bits 0:3 - Frame Length Control",2432,[[],["flenc_w",3]]],[11,"flence","","Bit 7 - Frame Length Control Enable",2432,[[],["flence_w",3]]],[0,"status","atsamd21g::usb::host","HOST Status",null,null],[3,"SPEED_W","atsamd21g::usb::host::status","Write proxy for field `SPEED`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"LINESTATE_R","","Reader of field `LINESTATE`",null,null],[11,"bits","","Writes raw bits to the field",2433,[[],["w",6]]],[11,"speed","atsamd21g::generic","Bits 2:3 - Speed Status",6,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",6,[[],["linestate_r",6]]],[11,"speed","atsamd21g::usb::host::status","Bits 2:3 - Speed Status",2434,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",2434,[[],["linestate_r",6]]],[11,"speed","atsamd21g::generic","Bits 2:3 - Speed Status",7,[[],["speed_w",3]]],[11,"speed","atsamd21g::usb::host::status","Bits 2:3 - Speed Status",2435,[[],["speed_w",3]]],[0,"fsmstatus","atsamd21g::usb::host","Finite State Machine Status",null,null],[4,"FSMSTATE_A","atsamd21g::usb::host::fsmstatus","Fine State Machine Status",null,null],[13,"OFF","","1: OFF (L3). It corresponds to the powered-off,…",2436,null],[13,"ON","","2: ON (L0). It corresponds to the Idle and Active states",2436,null],[13,"SUSPEND","","4: SUSPEND (L2)",2436,null],[13,"SLEEP","","8: SLEEP (L1)",2436,null],[13,"DNRESUME","","16: DNRESUME. Down Stream Resume.",2436,null],[13,"UPRESUME","","32: UPRESUME. Up Stream Resume.",2436,null],[13,"RESET","","64: RESET. USB lines Reset.",2436,null],[6,"R","","Reader of register FSMSTATUS",null,null],[6,"FSMSTATE_R","","Reader of field `FSMSTATE`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["fsmstate_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",6,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",6,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd21g::usb::host::fsmstatus","Get enumerated values variant",2437,[[],[["fsmstate_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2437,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",2437,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",2437,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",2437,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",2437,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",2437,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",2437,[[]]],[11,"fsmstate","atsamd21g::generic","Bits 0:6 - Fine State Machine Status",6,[[],["fsmstate_r",6]]],[11,"fsmstate","atsamd21g::usb::host::fsmstatus","Bits 0:6 - Fine State Machine Status",2438,[[],["fsmstate_r",6]]],[0,"fnum","atsamd21g::usb::host","HOST Host Frame Number",null,null],[3,"MFNUM_W","atsamd21g::usb::host::fnum","Write proxy for field `MFNUM`",null,null],[3,"FNUM_W","","Write proxy for field `FNUM`",null,null],[6,"R","","Reader of register FNUM",null,null],[6,"W","","Writer for register FNUM",null,null],[6,"MFNUM_R","","Reader of field `MFNUM`",null,null],[6,"FNUM_R","","Reader of field `FNUM`",null,null],[11,"bits","","Writes raw bits to the field",2439,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2440,[[],["w",6]]],[11,"mfnum","atsamd21g::generic","Bits 0:2 - Micro Frame Number",6,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",6,[[],["fnum_r",6]]],[11,"mfnum","atsamd21g::usb::host::fnum","Bits 0:2 - Micro Frame Number",2441,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",2441,[[],["fnum_r",6]]],[11,"mfnum","atsamd21g::generic","Bits 0:2 - Micro Frame Number",7,[[],["mfnum_w",3]]],[11,"fnum","","Bits 3:13 - Frame Number",7,[[],["fnum_w",3]]],[11,"mfnum","atsamd21g::usb::host::fnum","Bits 0:2 - Micro Frame Number",2442,[[],["mfnum_w",3]]],[11,"fnum","","Bits 3:13 - Frame Number",2442,[[],["fnum_w",3]]],[0,"flenhigh","atsamd21g::usb::host","HOST Host Frame Length",null,null],[6,"R","atsamd21g::usb::host::flenhigh","Reader of register FLENHIGH",null,null],[6,"FLENHIGH_R","","Reader of field `FLENHIGH`",null,null],[11,"flenhigh","atsamd21g::generic","Bits 0:7 - Frame Length",6,[[],["flenhigh_r",6]]],[11,"flenhigh","atsamd21g::usb::host::flenhigh","Bits 0:7 - Frame Length",2443,[[],["flenhigh_r",6]]],[0,"intenclr","atsamd21g::usb::host","HOST Host Interrupt Enable Clear",null,null],[3,"HSOF_W","atsamd21g::usb::host::intenclr","Write proxy for field `HSOF`",null,null],[3,"RST_W","","Write proxy for field `RST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"DNRSM_W","","Write proxy for field `DNRSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"DCONN_W","","Write proxy for field `DCONN`",null,null],[3,"DDISC_W","","Write proxy for field `DDISC`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"HSOF_R","","Reader of field `HSOF`",null,null],[6,"RST_R","","Reader of field `RST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"DNRSM_R","","Reader of field `DNRSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"DCONN_R","","Reader of field `DCONN`",null,null],[6,"DDISC_R","","Reader of field `DDISC`",null,null],[11,"set_bit","","Sets the field bit",2444,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2444,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2445,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2446,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2446,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2448,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2449,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2449,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2449,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2450,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2450,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2450,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2451,[[],["w",6]]],[11,"hsof","atsamd21g::generic","Bit 2 - Host Start Of Frame Interrupt Disable",6,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",6,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",6,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",6,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",6,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",6,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",6,[[],["ddisc_r",6]]],[11,"hsof","atsamd21g::usb::host::intenclr","Bit 2 - Host Start Of Frame Interrupt Disable",2452,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",2452,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",2452,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",2452,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",2452,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",2452,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",2452,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",2452,[[],["ddisc_r",6]]],[11,"hsof","atsamd21g::generic","Bit 2 - Host Start Of Frame Interrupt Disable",7,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",7,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",7,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",7,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",7,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",7,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",7,[[],["ddisc_w",3]]],[11,"hsof","atsamd21g::usb::host::intenclr","Bit 2 - Host Start Of Frame Interrupt Disable",2453,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",2453,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",2453,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",2453,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",2453,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",2453,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",2453,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",2453,[[],["ddisc_w",3]]],[0,"intenset","atsamd21g::usb::host","HOST Host Interrupt Enable Set",null,null],[3,"HSOF_W","atsamd21g::usb::host::intenset","Write proxy for field `HSOF`",null,null],[3,"RST_W","","Write proxy for field `RST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"DNRSM_W","","Write proxy for field `DNRSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"DCONN_W","","Write proxy for field `DCONN`",null,null],[3,"DDISC_W","","Write proxy for field `DDISC`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"HSOF_R","","Reader of field `HSOF`",null,null],[6,"RST_R","","Reader of field `RST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"DNRSM_R","","Reader of field `DNRSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"DCONN_R","","Reader of field `DCONN`",null,null],[6,"DDISC_R","","Reader of field `DDISC`",null,null],[11,"set_bit","","Sets the field bit",2454,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2454,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2454,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2455,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2455,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2455,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2456,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2456,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2456,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2457,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2457,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2457,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2458,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2458,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2458,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2459,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2459,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2459,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2460,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2460,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2460,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2461,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2461,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2461,[[],["w",6]]],[11,"hsof","atsamd21g::generic","Bit 2 - Host Start Of Frame Interrupt Enable",6,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",6,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",6,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",6,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",6,[[],["ddisc_r",6]]],[11,"hsof","atsamd21g::usb::host::intenset","Bit 2 - Host Start Of Frame Interrupt Enable",2462,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",2462,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2462,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",2462,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",2462,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2462,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",2462,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",2462,[[],["ddisc_r",6]]],[11,"hsof","atsamd21g::generic","Bit 2 - Host Start Of Frame Interrupt Enable",7,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",7,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",7,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",7,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",7,[[],["ddisc_w",3]]],[11,"hsof","atsamd21g::usb::host::intenset","Bit 2 - Host Start Of Frame Interrupt Enable",2463,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",2463,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2463,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",2463,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",2463,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2463,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",2463,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",2463,[[],["ddisc_w",3]]],[0,"intflag","atsamd21g::usb::host","HOST Host Interrupt Flag",null,null],[3,"HSOF_W","atsamd21g::usb::host::intflag","Write proxy for field `HSOF`",null,null],[3,"RST_W","","Write proxy for field `RST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"DNRSM_W","","Write proxy for field `DNRSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"DCONN_W","","Write proxy for field `DCONN`",null,null],[3,"DDISC_W","","Write proxy for field `DDISC`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"HSOF_R","","Reader of field `HSOF`",null,null],[6,"RST_R","","Reader of field `RST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"DNRSM_R","","Reader of field `DNRSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"DCONN_R","","Reader of field `DCONN`",null,null],[6,"DDISC_R","","Reader of field `DDISC`",null,null],[11,"set_bit","","Sets the field bit",2464,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2464,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2464,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2465,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2465,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2465,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2466,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2466,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2466,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2467,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2467,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2468,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2468,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2468,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2469,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2470,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2470,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2470,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2471,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2471,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2471,[[],["w",6]]],[11,"hsof","atsamd21g::generic","Bit 2 - Host Start Of Frame",6,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset",6,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",6,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - Downstream",6,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",6,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection",6,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection",6,[[],["ddisc_r",6]]],[11,"hsof","atsamd21g::usb::host::intflag","Bit 2 - Host Start Of Frame",2472,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset",2472,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",2472,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - Downstream",2472,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",2472,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",2472,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection",2472,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection",2472,[[],["ddisc_r",6]]],[11,"hsof","atsamd21g::generic","Bit 2 - Host Start Of Frame",7,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset",7,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",7,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - Downstream",7,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",7,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection",7,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection",7,[[],["ddisc_w",3]]],[11,"hsof","atsamd21g::usb::host::intflag","Bit 2 - Host Start Of Frame",2473,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset",2473,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",2473,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - Downstream",2473,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",2473,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",2473,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection",2473,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection",2473,[[],["ddisc_w",3]]],[0,"pintsmry","atsamd21g::usb::host","HOST Pipe Interrupt Summary",null,null],[6,"R","atsamd21g::usb::host::pintsmry","Reader of register PINTSMRY",null,null],[6,"EPINT0_R","","Reader of field `EPINT0`",null,null],[6,"EPINT1_R","","Reader of field `EPINT1`",null,null],[6,"EPINT2_R","","Reader of field `EPINT2`",null,null],[6,"EPINT3_R","","Reader of field `EPINT3`",null,null],[6,"EPINT4_R","","Reader of field `EPINT4`",null,null],[6,"EPINT5_R","","Reader of field `EPINT5`",null,null],[6,"EPINT6_R","","Reader of field `EPINT6`",null,null],[6,"EPINT7_R","","Reader of field `EPINT7`",null,null],[11,"epint0","atsamd21g::generic","Bit 0 - Pipe 0 Interrupt",6,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - Pipe 1 Interrupt",6,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - Pipe 2 Interrupt",6,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - Pipe 3 Interrupt",6,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - Pipe 4 Interrupt",6,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - Pipe 5 Interrupt",6,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - Pipe 6 Interrupt",6,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - Pipe 7 Interrupt",6,[[],["epint7_r",6]]],[11,"epint0","atsamd21g::usb::host::pintsmry","Bit 0 - Pipe 0 Interrupt",2474,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - Pipe 1 Interrupt",2474,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - Pipe 2 Interrupt",2474,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - Pipe 3 Interrupt",2474,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - Pipe 4 Interrupt",2474,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - Pipe 5 Interrupt",2474,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - Pipe 6 Interrupt",2474,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - Pipe 7 Interrupt",2474,[[],["epint7_r",6]]],[0,"descadd","atsamd21g::usb::host","Descriptor Address",null,null],[3,"DESCADD_W","atsamd21g::usb::host::descadd","Write proxy for field `DESCADD`",null,null],[6,"R","","Reader of register DESCADD",null,null],[6,"W","","Writer for register DESCADD",null,null],[6,"DESCADD_R","","Reader of field `DESCADD`",null,null],[11,"bits","","Writes raw bits to the field",2475,[[],["w",6]]],[11,"descadd","atsamd21g::generic","Bits 0:31 - Descriptor Address Value",6,[[],["descadd_r",6]]],[11,"descadd","atsamd21g::usb::host::descadd","Bits 0:31 - Descriptor Address Value",2476,[[],["descadd_r",6]]],[11,"descadd","atsamd21g::generic","Bits 0:31 - Descriptor Address Value",7,[[],["descadd_w",3]]],[11,"descadd","atsamd21g::usb::host::descadd","Bits 0:31 - Descriptor Address Value",2477,[[],["descadd_w",3]]],[0,"padcal","atsamd21g::usb::host","USB PAD Calibration",null,null],[3,"TRANSP_W","atsamd21g::usb::host::padcal","Write proxy for field `TRANSP`",null,null],[3,"TRANSN_W","","Write proxy for field `TRANSN`",null,null],[3,"TRIM_W","","Write proxy for field `TRIM`",null,null],[6,"R","","Reader of register PADCAL",null,null],[6,"W","","Writer for register PADCAL",null,null],[6,"TRANSP_R","","Reader of field `TRANSP`",null,null],[6,"TRANSN_R","","Reader of field `TRANSN`",null,null],[6,"TRIM_R","","Reader of field `TRIM`",null,null],[11,"bits","","Writes raw bits to the field",2478,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2479,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2480,[[],["w",6]]],[11,"transp","atsamd21g::generic","Bits 0:4 - USB Pad Transp calibration",6,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",6,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",6,[[],["trim_r",6]]],[11,"transp","atsamd21g::usb::host::padcal","Bits 0:4 - USB Pad Transp calibration",2481,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",2481,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",2481,[[],["trim_r",6]]],[11,"transp","atsamd21g::generic","Bits 0:4 - USB Pad Transp calibration",7,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",7,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",7,[[],["trim_w",3]]],[11,"transp","atsamd21g::usb::host::padcal","Bits 0:4 - USB Pad Transp calibration",2482,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",2482,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",2482,[[],["trim_w",3]]],[0,"pcfg","atsamd21g::usb::host","HOST End Point Configuration",null,null],[3,"PTOKEN_W","atsamd21g::usb::host::pcfg","Write proxy for field `PTOKEN`",null,null],[3,"BK_W","","Write proxy for field `BK`",null,null],[3,"PTYPE_W","","Write proxy for field `PTYPE`",null,null],[6,"R","","Reader of register PCFG%s",null,null],[6,"W","","Writer for register PCFG%s",null,null],[6,"PTOKEN_R","","Reader of field `PTOKEN`",null,null],[6,"BK_R","","Reader of field `BK`",null,null],[6,"PTYPE_R","","Reader of field `PTYPE`",null,null],[11,"bits","","Writes raw bits to the field",2483,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2484,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2484,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2484,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2485,[[],["w",6]]],[11,"ptoken","atsamd21g::generic","Bits 0:1 - Pipe Token",6,[[],["ptoken_r",6]]],[11,"bk","","Bit 2 - Pipe Bank",6,[[],["bk_r",6]]],[11,"ptype","","Bits 3:5 - Pipe Type",6,[[],["ptype_r",6]]],[11,"ptoken","atsamd21g::usb::host::pcfg","Bits 0:1 - Pipe Token",2486,[[],["ptoken_r",6]]],[11,"bk","","Bit 2 - Pipe Bank",2486,[[],["bk_r",6]]],[11,"ptype","","Bits 3:5 - Pipe Type",2486,[[],["ptype_r",6]]],[11,"ptoken","atsamd21g::generic","Bits 0:1 - Pipe Token",7,[[],["ptoken_w",3]]],[11,"bk","","Bit 2 - Pipe Bank",7,[[],["bk_w",3]]],[11,"ptype","","Bits 3:5 - Pipe Type",7,[[],["ptype_w",3]]],[11,"ptoken","atsamd21g::usb::host::pcfg","Bits 0:1 - Pipe Token",2487,[[],["ptoken_w",3]]],[11,"bk","","Bit 2 - Pipe Bank",2487,[[],["bk_w",3]]],[11,"ptype","","Bits 3:5 - Pipe Type",2487,[[],["ptype_w",3]]],[0,"binterval","atsamd21g::usb::host","HOST Bus Access Period of Pipe",null,null],[3,"BITINTERVAL_W","atsamd21g::usb::host::binterval","Write proxy for field `BITINTERVAL`",null,null],[6,"R","","Reader of register BINTERVAL%s",null,null],[6,"W","","Writer for register BINTERVAL%s",null,null],[6,"BITINTERVAL_R","","Reader of field `BITINTERVAL`",null,null],[11,"bits","","Writes raw bits to the field",2488,[[],["w",6]]],[11,"bitinterval","atsamd21g::generic","Bits 0:7 - Bit Interval",6,[[],["bitinterval_r",6]]],[11,"bitinterval","atsamd21g::usb::host::binterval","Bits 0:7 - Bit Interval",2489,[[],["bitinterval_r",6]]],[11,"bitinterval","atsamd21g::generic","Bits 0:7 - Bit Interval",7,[[],["bitinterval_w",3]]],[11,"bitinterval","atsamd21g::usb::host::binterval","Bits 0:7 - Bit Interval",2490,[[],["bitinterval_w",3]]],[0,"pstatusclr","atsamd21g::usb::host","HOST End Point Pipe Status Clear",null,null],[3,"CURBK_W","atsamd21g::usb::host::pstatusclr","Write proxy for field `CURBK`",null,null],[3,"PFREEZE_W","","Write proxy for field `PFREEZE`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register PSTATUSCLR%s",null,null],[11,"set_bit","","Sets the field bit",2491,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2491,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2491,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2492,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2492,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2492,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2493,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2493,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2493,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2494,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2494,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2494,[[],["w",6]]],[11,"curbk","atsamd21g::generic","Bit 2 - Curren Bank clear",7,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Clear",7,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",7,[[],["bk1rdy_w",3]]],[11,"curbk","atsamd21g::usb::host::pstatusclr","Bit 2 - Curren Bank clear",2495,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Clear",2495,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",2495,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",2495,[[],["bk1rdy_w",3]]],[0,"pstatusset","atsamd21g::usb::host","HOST End Point Pipe Status Set",null,null],[3,"DTGL_W","atsamd21g::usb::host::pstatusset","Write proxy for field `DTGL`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"PFREEZE_W","","Write proxy for field `PFREEZE`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register PSTATUSSET%s",null,null],[11,"set_bit","","Sets the field bit",2496,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2496,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2496,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2497,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2497,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2497,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2498,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2498,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2498,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2499,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2499,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2499,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2500,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2500,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2500,[[],["w",6]]],[11,"dtgl","atsamd21g::generic","Bit 0 - Data Toggle Set",7,[[],["dtgl_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",7,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Set",7,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",7,[[],["bk1rdy_w",3]]],[11,"dtgl","atsamd21g::usb::host::pstatusset","Bit 0 - Data Toggle Set",2501,[[],["dtgl_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",2501,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Set",2501,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",2501,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",2501,[[],["bk1rdy_w",3]]],[0,"pstatus","atsamd21g::usb::host","HOST End Point Pipe Status",null,null],[6,"R","atsamd21g::usb::host::pstatus","Reader of register PSTATUS%s",null,null],[6,"DTGL_R","","Reader of field `DTGL`",null,null],[6,"CURBK_R","","Reader of field `CURBK`",null,null],[6,"PFREEZE_R","","Reader of field `PFREEZE`",null,null],[6,"BK0RDY_R","","Reader of field `BK0RDY`",null,null],[6,"BK1RDY_R","","Reader of field `BK1RDY`",null,null],[11,"dtgl","atsamd21g::generic","Bit 0 - Data Toggle",6,[[],["dtgl_r",6]]],[11,"curbk","","Bit 2 - Current Bank",6,[[],["curbk_r",6]]],[11,"pfreeze","","Bit 4 - Pipe Freeze",6,[[],["pfreeze_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",6,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",6,[[],["bk1rdy_r",6]]],[11,"dtgl","atsamd21g::usb::host::pstatus","Bit 0 - Data Toggle",2502,[[],["dtgl_r",6]]],[11,"curbk","","Bit 2 - Current Bank",2502,[[],["curbk_r",6]]],[11,"pfreeze","","Bit 4 - Pipe Freeze",2502,[[],["pfreeze_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",2502,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",2502,[[],["bk1rdy_r",6]]],[0,"pintflag","atsamd21g::usb::host","HOST Pipe Interrupt Flag",null,null],[3,"TRCPT0_W","atsamd21g::usb::host::pintflag","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL_W","","Write proxy for field `TRFAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[3,"TXSTP_W","","Write proxy for field `TXSTP`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[6,"R","","Reader of register PINTFLAG%s",null,null],[6,"W","","Writer for register PINTFLAG%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL_R","","Reader of field `TRFAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"TXSTP_R","","Reader of field `TXSTP`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[11,"set_bit","","Sets the field bit",2503,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2503,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2503,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2504,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2504,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2504,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2505,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2505,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2505,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2506,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2506,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2506,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2507,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2507,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2507,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2508,[[],["w",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Flag",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",6,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",6,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",6,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",6,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",6,[[],["stall_r",6]]],[11,"trcpt0","atsamd21g::usb::host::pintflag","Bit 0 - Transfer Complete 0 Interrupt Flag",2509,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",2509,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",2509,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",2509,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",2509,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",2509,[[],["stall_r",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Flag",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",7,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",7,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",7,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",7,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",7,[[],["stall_w",3]]],[11,"trcpt0","atsamd21g::usb::host::pintflag","Bit 0 - Transfer Complete 0 Interrupt Flag",2510,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",2510,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",2510,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",2510,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",2510,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",2510,[[],["stall_w",3]]],[0,"pintenclr","atsamd21g::usb::host","HOST Pipe Interrupt Flag Clear",null,null],[3,"TRCPT0_W","atsamd21g::usb::host::pintenclr","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL_W","","Write proxy for field `TRFAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[3,"TXSTP_W","","Write proxy for field `TXSTP`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[6,"R","","Reader of register PINTENCLR%s",null,null],[6,"W","","Writer for register PINTENCLR%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL_R","","Reader of field `TRFAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"TXSTP_R","","Reader of field `TXSTP`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[11,"set_bit","","Sets the field bit",2511,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2511,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2511,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2513,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2513,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2513,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2514,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2515,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2515,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2515,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2516,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2516,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2516,[[],["w",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Disable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",6,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",6,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",6,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",6,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",6,[[],["stall_r",6]]],[11,"trcpt0","atsamd21g::usb::host::pintenclr","Bit 0 - Transfer Complete 0 Disable",2517,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",2517,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",2517,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",2517,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",2517,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",2517,[[],["stall_r",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Disable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",7,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",7,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",7,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",7,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",7,[[],["stall_w",3]]],[11,"trcpt0","atsamd21g::usb::host::pintenclr","Bit 0 - Transfer Complete 0 Disable",2518,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",2518,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",2518,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",2518,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",2518,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",2518,[[],["stall_w",3]]],[0,"pintenset","atsamd21g::usb::host","HOST Pipe Interrupt Flag Set",null,null],[3,"TRCPT0_W","atsamd21g::usb::host::pintenset","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL_W","","Write proxy for field `TRFAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[3,"TXSTP_W","","Write proxy for field `TXSTP`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[6,"R","","Reader of register PINTENSET%s",null,null],[6,"W","","Writer for register PINTENSET%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL_R","","Reader of field `TRFAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"TXSTP_R","","Reader of field `TXSTP`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[11,"set_bit","","Sets the field bit",2519,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2519,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2519,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2520,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2521,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2521,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2521,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2522,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2522,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2522,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2523,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2524,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2524,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2524,[[],["w",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",6,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",6,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",6,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",6,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",6,[[],["stall_r",6]]],[11,"trcpt0","atsamd21g::usb::host::pintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",2525,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",2525,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",2525,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",2525,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",2525,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",2525,[[],["stall_r",6]]],[11,"trcpt0","atsamd21g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",7,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",7,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",7,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",7,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",7,[[],["stall_w",3]]],[11,"trcpt0","atsamd21g::usb::host::pintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",2526,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",2526,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",2526,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",2526,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",2526,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",2526,[[],["stall_w",3]]],[6,"CTRLA","atsamd21g::usb::host","Control A",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"QOSCTRL","","USB Quality Of Service",null,null],[6,"CTRLB","","HOST Control B",null,null],[6,"HSOFC","","HOST Host Start Of Frame Control",null,null],[6,"STATUS","","HOST Status",null,null],[6,"FSMSTATUS","","Finite State Machine Status",null,null],[6,"FNUM","","HOST Host Frame Number",null,null],[6,"FLENHIGH","","HOST Host Frame Length",null,null],[6,"INTENCLR","","HOST Host Interrupt Enable Clear",null,null],[6,"INTENSET","","HOST Host Interrupt Enable Set",null,null],[6,"INTFLAG","","HOST Host Interrupt Flag",null,null],[6,"PINTSMRY","","HOST Pipe Interrupt Summary",null,null],[6,"DESCADD","","Descriptor Address",null,null],[6,"PADCAL","","USB PAD Calibration",null,null],[6,"PCFG","","HOST End Point Configuration",null,null],[6,"BINTERVAL","","HOST Bus Access Period of Pipe",null,null],[6,"PSTATUSCLR","","HOST End Point Pipe Status Clear",null,null],[6,"PSTATUSSET","","HOST End Point Pipe Status Set",null,null],[6,"PSTATUS","","HOST End Point Pipe Status",null,null],[6,"PINTFLAG","","HOST Pipe Interrupt Flag",null,null],[6,"PINTENCLR","","HOST Pipe Interrupt Flag Clear",null,null],[6,"PINTENSET","","HOST Pipe Interrupt Flag Set",null,null],[11,"host","atsamd21g::usb","0x00 - USB is Host",2527,[[],["host",3]]],[11,"host_mut","","0x00 - USB is Host",2527,[[],["host",3]]],[11,"device","","0x00 - USB is Device",2527,[[],["device",3]]],[11,"device_mut","","0x00 - USB is Device",2527,[[],["device",3]]],[0,"wdt","atsamd21g","Watchdog Timer",null,null],[3,"RegisterBlock","atsamd21g::wdt","Register block",null,null],[12,"ctrl","","0x00 - Control",2528,null],[12,"config","","0x01 - Configuration",2528,null],[12,"ewctrl","","0x02 - Early Warning Interrupt Control",2528,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",2528,null],[12,"intenset","","0x05 - Interrupt Enable Set",2528,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",2528,null],[12,"status","","0x07 - Status",2528,null],[12,"clear","","0x08 - Clear",2528,null],[0,"ctrl","","Control",null,null],[3,"ENABLE_W","atsamd21g::wdt::ctrl","Write proxy for field `ENABLE`",null,null],[3,"WEN_W","","Write proxy for field `WEN`",null,null],[3,"ALWAYSON_W","","Write proxy for field `ALWAYSON`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"WEN_R","","Reader of field `WEN`",null,null],[6,"ALWAYSON_R","","Reader of field `ALWAYSON`",null,null],[11,"set_bit","","Sets the field bit",2529,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2529,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2529,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2530,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2530,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2530,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2531,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2531,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2531,[[],["w",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",6,[[],["wen_r",6]]],[11,"alwayson","","Bit 7 - Always-On",6,[[],["alwayson_r",6]]],[11,"enable","atsamd21g::wdt::ctrl","Bit 1 - Enable",2532,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",2532,[[],["wen_r",6]]],[11,"alwayson","","Bit 7 - Always-On",2532,[[],["alwayson_r",6]]],[11,"enable","atsamd21g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",7,[[],["wen_w",3]]],[11,"alwayson","","Bit 7 - Always-On",7,[[],["alwayson_w",3]]],[11,"enable","atsamd21g::wdt::ctrl","Bit 1 - Enable",2533,[[],["enable_w",3]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",2533,[[],["wen_w",3]]],[11,"alwayson","","Bit 7 - Always-On",2533,[[],["alwayson_w",3]]],[0,"config","atsamd21g::wdt","Configuration",null,null],[3,"PER_W","atsamd21g::wdt::config","Write proxy for field `PER`",null,null],[3,"WINDOW_W","","Write proxy for field `WINDOW`",null,null],[4,"PER_A","","Time-Out Period",null,null],[13,"_8","","0: 8 clock cycles",2534,null],[13,"_16","","1: 16 clock cycles",2534,null],[13,"_32","","2: 32 clock cycles",2534,null],[13,"_64","","3: 64 clock cycles",2534,null],[13,"_128","","4: 128 clock cycles",2534,null],[13,"_256","","5: 256 clock cycles",2534,null],[13,"_512","","6: 512 clock cycles",2534,null],[13,"_1K","","7: 1024 clock cycles",2534,null],[13,"_2K","","8: 2048 clock cycles",2534,null],[13,"_4K","","9: 4096 clock cycles",2534,null],[13,"_8K","","10: 8192 clock cycles",2534,null],[13,"_16K","","11: 16384 clock cycles",2534,null],[4,"WINDOW_A","","Window Mode Time-Out Period",null,null],[13,"_8","","0: 8 clock cycles",2535,null],[13,"_16","","1: 16 clock cycles",2535,null],[13,"_32","","2: 32 clock cycles",2535,null],[13,"_64","","3: 64 clock cycles",2535,null],[13,"_128","","4: 128 clock cycles",2535,null],[13,"_256","","5: 256 clock cycles",2535,null],[13,"_512","","6: 512 clock cycles",2535,null],[13,"_1K","","7: 1024 clock cycles",2535,null],[13,"_2K","","8: 2048 clock cycles",2535,null],[13,"_4K","","9: 4096 clock cycles",2535,null],[13,"_8K","","10: 8192 clock cycles",2535,null],[13,"_16K","","11: 16384 clock cycles",2535,null],[6,"R","","Reader of register CONFIG",null,null],[6,"W","","Writer for register CONFIG",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"WINDOW_R","","Reader of field `WINDOW`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["per_a",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",6,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",6,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"variant","atsamd21g::wdt::config","Get enumerated values variant",2536,[[],[["variant",4],["per_a",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",2536,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",2536,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",2536,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",2536,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",2536,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",2536,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",2536,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",2536,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",2536,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2536,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2536,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2536,[[]]],[11,"variant","","Writes `variant` to the field",2537,[[["per_a",4]],["w",6]]],[11,"_8","","8 clock cycles",2537,[[],["w",6]]],[11,"_16","","16 clock cycles",2537,[[],["w",6]]],[11,"_32","","32 clock cycles",2537,[[],["w",6]]],[11,"_64","","64 clock cycles",2537,[[],["w",6]]],[11,"_128","","128 clock cycles",2537,[[],["w",6]]],[11,"_256","","256 clock cycles",2537,[[],["w",6]]],[11,"_512","","512 clock cycles",2537,[[],["w",6]]],[11,"_1k","","1024 clock cycles",2537,[[],["w",6]]],[11,"_2k","","2048 clock cycles",2537,[[],["w",6]]],[11,"_4k","","4096 clock cycles",2537,[[],["w",6]]],[11,"_8k","","8192 clock cycles",2537,[[],["w",6]]],[11,"_16k","","16384 clock cycles",2537,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2537,[[],["w",6]]],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["variant",4],["window_a",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",6,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",6,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"variant","atsamd21g::wdt::config","Get enumerated values variant",2538,[[],[["variant",4],["window_a",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",2538,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",2538,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",2538,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",2538,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",2538,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",2538,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",2538,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",2538,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",2538,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2538,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2538,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2538,[[]]],[11,"variant","","Writes `variant` to the field",2539,[[["window_a",4]],["w",6]]],[11,"_8","","8 clock cycles",2539,[[],["w",6]]],[11,"_16","","16 clock cycles",2539,[[],["w",6]]],[11,"_32","","32 clock cycles",2539,[[],["w",6]]],[11,"_64","","64 clock cycles",2539,[[],["w",6]]],[11,"_128","","128 clock cycles",2539,[[],["w",6]]],[11,"_256","","256 clock cycles",2539,[[],["w",6]]],[11,"_512","","512 clock cycles",2539,[[],["w",6]]],[11,"_1k","","1024 clock cycles",2539,[[],["w",6]]],[11,"_2k","","2048 clock cycles",2539,[[],["w",6]]],[11,"_4k","","4096 clock cycles",2539,[[],["w",6]]],[11,"_8k","","8192 clock cycles",2539,[[],["w",6]]],[11,"_16k","","16384 clock cycles",2539,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2539,[[],["w",6]]],[11,"per","atsamd21g::generic","Bits 0:3 - Time-Out Period",6,[[],["per_r",6]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",6,[[],["window_r",6]]],[11,"per","atsamd21g::wdt::config","Bits 0:3 - Time-Out Period",2540,[[],["per_r",6]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",2540,[[],["window_r",6]]],[11,"per","atsamd21g::generic","Bits 0:3 - Time-Out Period",7,[[],["per_w",3]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",7,[[],["window_w",3]]],[11,"per","atsamd21g::wdt::config","Bits 0:3 - Time-Out Period",2541,[[],["per_w",3]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",2541,[[],["window_w",3]]],[0,"ewctrl","atsamd21g::wdt","Early Warning Interrupt Control",null,null],[3,"EWOFFSET_W","atsamd21g::wdt::ewctrl","Write proxy for field `EWOFFSET`",null,null],[4,"EWOFFSET_A","","Early Warning Interrupt Time Offset",null,null],[13,"_8","","0: 8 clock cycles",2542,null],[13,"_16","","1: 16 clock cycles",2542,null],[13,"_32","","2: 32 clock cycles",2542,null],[13,"_64","","3: 64 clock cycles",2542,null],[13,"_128","","4: 128 clock cycles",2542,null],[13,"_256","","5: 256 clock cycles",2542,null],[13,"_512","","6: 512 clock cycles",2542,null],[13,"_1K","","7: 1024 clock cycles",2542,null],[13,"_2K","","8: 2048 clock cycles",2542,null],[13,"_4K","","9: 4096 clock cycles",2542,null],[13,"_8K","","10: 8192 clock cycles",2542,null],[13,"_16K","","11: 16384 clock cycles",2542,null],[6,"R","","Reader of register EWCTRL",null,null],[6,"W","","Writer for register EWCTRL",null,null],[6,"EWOFFSET_R","","Reader of field `EWOFFSET`",null,null],[11,"variant","atsamd21g::generic","Get enumerated values variant",6,[[],[["ewoffset_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",6,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",6,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"variant","atsamd21g::wdt::ewctrl","Get enumerated values variant",2543,[[],[["ewoffset_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",2543,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",2543,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",2543,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",2543,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",2543,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",2543,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",2543,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",2543,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",2543,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2543,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2543,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2543,[[]]],[11,"variant","","Writes `variant` to the field",2544,[[["ewoffset_a",4]],["w",6]]],[11,"_8","","8 clock cycles",2544,[[],["w",6]]],[11,"_16","","16 clock cycles",2544,[[],["w",6]]],[11,"_32","","32 clock cycles",2544,[[],["w",6]]],[11,"_64","","64 clock cycles",2544,[[],["w",6]]],[11,"_128","","128 clock cycles",2544,[[],["w",6]]],[11,"_256","","256 clock cycles",2544,[[],["w",6]]],[11,"_512","","512 clock cycles",2544,[[],["w",6]]],[11,"_1k","","1024 clock cycles",2544,[[],["w",6]]],[11,"_2k","","2048 clock cycles",2544,[[],["w",6]]],[11,"_4k","","4096 clock cycles",2544,[[],["w",6]]],[11,"_8k","","8192 clock cycles",2544,[[],["w",6]]],[11,"_16k","","16384 clock cycles",2544,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2544,[[],["w",6]]],[11,"ewoffset","atsamd21g::generic","Bits 0:3 - Early Warning Interrupt Time Offset",6,[[],["ewoffset_r",6]]],[11,"ewoffset","atsamd21g::wdt::ewctrl","Bits 0:3 - Early Warning Interrupt Time Offset",2545,[[],["ewoffset_r",6]]],[11,"ewoffset","atsamd21g::generic","Bits 0:3 - Early Warning Interrupt Time Offset",7,[[],["ewoffset_w",3]]],[11,"ewoffset","atsamd21g::wdt::ewctrl","Bits 0:3 - Early Warning Interrupt Time Offset",2546,[[],["ewoffset_w",3]]],[0,"intenclr","atsamd21g::wdt","Interrupt Enable Clear",null,null],[3,"EW_W","atsamd21g::wdt::intenclr","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",2547,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2547,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2547,[[],["w",6]]],[11,"ew","atsamd21g::generic","Bit 0 - Early Warning Interrupt Enable",6,[[],["ew_r",6]]],[11,"ew","atsamd21g::wdt::intenclr","Bit 0 - Early Warning Interrupt Enable",2548,[[],["ew_r",6]]],[11,"ew","atsamd21g::generic","Bit 0 - Early Warning Interrupt Enable",7,[[],["ew_w",3]]],[11,"ew","atsamd21g::wdt::intenclr","Bit 0 - Early Warning Interrupt Enable",2549,[[],["ew_w",3]]],[0,"intenset","atsamd21g::wdt","Interrupt Enable Set",null,null],[3,"EW_W","atsamd21g::wdt::intenset","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",2550,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2550,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2550,[[],["w",6]]],[11,"ew","atsamd21g::generic","Bit 0 - Early Warning Interrupt Enable",6,[[],["ew_r",6]]],[11,"ew","atsamd21g::wdt::intenset","Bit 0 - Early Warning Interrupt Enable",2551,[[],["ew_r",6]]],[11,"ew","atsamd21g::generic","Bit 0 - Early Warning Interrupt Enable",7,[[],["ew_w",3]]],[11,"ew","atsamd21g::wdt::intenset","Bit 0 - Early Warning Interrupt Enable",2552,[[],["ew_w",3]]],[0,"intflag","atsamd21g::wdt","Interrupt Flag Status and Clear",null,null],[3,"EW_W","atsamd21g::wdt::intflag","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",2553,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2553,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2553,[[],["w",6]]],[11,"ew","atsamd21g::generic","Bit 0 - Early Warning",6,[[],["ew_r",6]]],[11,"ew","atsamd21g::wdt::intflag","Bit 0 - Early Warning",2554,[[],["ew_r",6]]],[11,"ew","atsamd21g::generic","Bit 0 - Early Warning",7,[[],["ew_w",3]]],[11,"ew","atsamd21g::wdt::intflag","Bit 0 - Early Warning",2555,[[],["ew_w",3]]],[0,"status","atsamd21g::wdt","Status",null,null],[6,"R","atsamd21g::wdt::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd21g::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd21g::wdt::status","Bit 7 - Synchronization Busy",2556,[[],["syncbusy_r",6]]],[0,"clear","atsamd21g::wdt","Clear",null,null],[3,"CLEAR_W","atsamd21g::wdt::clear","Write proxy for field `CLEAR`",null,null],[4,"CLEAR_AW","","Watchdog Clear",null,null],[13,"KEY","","165: Clear Key",2557,null],[6,"W","","Writer for register CLEAR",null,null],[11,"variant","","Writes `variant` to the field",2558,[[["clear_aw",4]],["w",6]]],[11,"key","","Clear Key",2558,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2558,[[],["w",6]]],[11,"clear","atsamd21g::generic","Bits 0:7 - Watchdog Clear",7,[[],["clear_w",3]]],[11,"clear","atsamd21g::wdt::clear","Bits 0:7 - Watchdog Clear",2559,[[],["clear_w",3]]],[6,"CTRL","atsamd21g::wdt","Control",null,null],[6,"CONFIG","","Configuration",null,null],[6,"EWCTRL","","Early Warning Interrupt Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"CLEAR","","Clear",null,null],[17,"NVIC_PRIO_BITS","atsamd21g","Number available in the NVIC for configuring priority",null,null],[11,"ptr","","Returns a pointer to the register block",2560,[[]]],[11,"ptr","","Returns a pointer to the register block",2561,[[]]],[11,"ptr","","Returns a pointer to the register block",2562,[[]]],[11,"ptr","","Returns a pointer to the register block",2563,[[]]],[11,"ptr","","Returns a pointer to the register block",2564,[[]]],[11,"ptr","","Returns a pointer to the register block",2565,[[]]],[11,"ptr","","Returns a pointer to the register block",2566,[[]]],[11,"ptr","","Returns a pointer to the register block",2567,[[]]],[11,"ptr","","Returns a pointer to the register block",2568,[[]]],[11,"ptr","","Returns a pointer to the register block",2569,[[]]],[11,"ptr","","Returns a pointer to the register block",2570,[[]]],[11,"ptr","","Returns a pointer to the register block",2571,[[]]],[11,"ptr","","Returns a pointer to the register block",2572,[[]]],[11,"ptr","","Returns a pointer to the register block",2573,[[]]],[11,"ptr","","Returns a pointer to the register block",2574,[[]]],[11,"ptr","","Returns a pointer to the register block",2575,[[]]],[11,"ptr","","Returns a pointer to the register block",2576,[[]]],[11,"ptr","","Returns a pointer to the register block",2577,[[]]],[11,"ptr","","Returns a pointer to the register block",2578,[[]]],[11,"ptr","","Returns a pointer to the register block",2579,[[]]],[11,"ptr","","Returns a pointer to the register block",2580,[[]]],[11,"ptr","","Returns a pointer to the register block",2581,[[]]],[11,"ptr","","Returns a pointer to the register block",2582,[[]]],[11,"ptr","","Returns a pointer to the register block",2583,[[]]],[11,"ptr","","Returns a pointer to the register block",2584,[[]]],[11,"ptr","","Returns a pointer to the register block",2585,[[]]],[11,"ptr","","Returns a pointer to the register block",2586,[[]]],[11,"ptr","","Returns a pointer to the register block",2587,[[]]],[11,"ptr","","Returns a pointer to the register block",2588,[[]]],[11,"ptr","","Returns a pointer to the register block",2589,[[]]],[11,"ptr","","Returns a pointer to the register block",2590,[[]]],[11,"ptr","","Returns a pointer to the register block",2591,[[]]],[11,"ptr","","Returns a pointer to the register block",2592,[[]]],[11,"ptr","","Returns a pointer to the register block",2593,[[]]],[11,"take","","Returns all the peripherals once",1,[[],["option",4]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2594,[[]]],[11,"borrow","","",2594,[[]]],[11,"borrow_mut","","",2594,[[]]],[11,"try_from","","",2594,[[],["result",4]]],[11,"into","","",2594,[[]]],[11,"try_into","","",2594,[[],["result",4]]],[11,"type_id","","",2594,[[],["typeid",3]]],[11,"from","","",2595,[[]]],[11,"borrow","","",2595,[[]]],[11,"borrow_mut","","",2595,[[]]],[11,"try_from","","",2595,[[],["result",4]]],[11,"into","","",2595,[[]]],[11,"try_into","","",2595,[[],["result",4]]],[11,"type_id","","",2595,[[],["typeid",3]]],[11,"from","","",2596,[[]]],[11,"borrow","","",2596,[[]]],[11,"borrow_mut","","",2596,[[]]],[11,"try_from","","",2596,[[],["result",4]]],[11,"into","","",2596,[[]]],[11,"try_into","","",2596,[[],["result",4]]],[11,"type_id","","",2596,[[],["typeid",3]]],[11,"from","","",2597,[[]]],[11,"borrow","","",2597,[[]]],[11,"borrow_mut","","",2597,[[]]],[11,"try_from","","",2597,[[],["result",4]]],[11,"into","","",2597,[[]]],[11,"try_into","","",2597,[[],["result",4]]],[11,"type_id","","",2597,[[],["typeid",3]]],[11,"from","","",2598,[[]]],[11,"borrow","","",2598,[[]]],[11,"borrow_mut","","",2598,[[]]],[11,"try_from","","",2598,[[],["result",4]]],[11,"into","","",2598,[[]]],[11,"try_into","","",2598,[[],["result",4]]],[11,"type_id","","",2598,[[],["typeid",3]]],[11,"from","","",2599,[[]]],[11,"borrow","","",2599,[[]]],[11,"borrow_mut","","",2599,[[]]],[11,"try_from","","",2599,[[],["result",4]]],[11,"into","","",2599,[[]]],[11,"try_into","","",2599,[[],["result",4]]],[11,"type_id","","",2599,[[],["typeid",3]]],[11,"from","","",2600,[[]]],[11,"borrow","","",2600,[[]]],[11,"borrow_mut","","",2600,[[]]],[11,"try_from","","",2600,[[],["result",4]]],[11,"into","","",2600,[[]]],[11,"try_into","","",2600,[[],["result",4]]],[11,"type_id","","",2600,[[],["typeid",3]]],[11,"from","","",2601,[[]]],[11,"borrow","","",2601,[[]]],[11,"borrow_mut","","",2601,[[]]],[11,"try_from","","",2601,[[],["result",4]]],[11,"into","","",2601,[[]]],[11,"try_into","","",2601,[[],["result",4]]],[11,"type_id","","",2601,[[],["typeid",3]]],[11,"from","","",2602,[[]]],[11,"borrow","","",2602,[[]]],[11,"borrow_mut","","",2602,[[]]],[11,"try_from","","",2602,[[],["result",4]]],[11,"into","","",2602,[[]]],[11,"try_into","","",2602,[[],["result",4]]],[11,"type_id","","",2602,[[],["typeid",3]]],[11,"from","","",2603,[[]]],[11,"borrow","","",2603,[[]]],[11,"borrow_mut","","",2603,[[]]],[11,"try_from","","",2603,[[],["result",4]]],[11,"into","","",2603,[[]]],[11,"try_into","","",2603,[[],["result",4]]],[11,"type_id","","",2603,[[],["typeid",3]]],[11,"from","","",2604,[[]]],[11,"borrow","","",2604,[[]]],[11,"borrow_mut","","",2604,[[]]],[11,"try_from","","",2604,[[],["result",4]]],[11,"into","","",2604,[[]]],[11,"try_into","","",2604,[[],["result",4]]],[11,"type_id","","",2604,[[],["typeid",3]]],[11,"from","","",2560,[[]]],[11,"borrow","","",2560,[[]]],[11,"borrow_mut","","",2560,[[]]],[11,"try_from","","",2560,[[],["result",4]]],[11,"into","","",2560,[[]]],[11,"try_into","","",2560,[[],["result",4]]],[11,"type_id","","",2560,[[],["typeid",3]]],[11,"from","","",2561,[[]]],[11,"borrow","","",2561,[[]]],[11,"borrow_mut","","",2561,[[]]],[11,"try_from","","",2561,[[],["result",4]]],[11,"into","","",2561,[[]]],[11,"try_into","","",2561,[[],["result",4]]],[11,"type_id","","",2561,[[],["typeid",3]]],[11,"from","","",2562,[[]]],[11,"borrow","","",2562,[[]]],[11,"borrow_mut","","",2562,[[]]],[11,"try_from","","",2562,[[],["result",4]]],[11,"into","","",2562,[[]]],[11,"try_into","","",2562,[[],["result",4]]],[11,"type_id","","",2562,[[],["typeid",3]]],[11,"from","","",2563,[[]]],[11,"borrow","","",2563,[[]]],[11,"borrow_mut","","",2563,[[]]],[11,"try_from","","",2563,[[],["result",4]]],[11,"into","","",2563,[[]]],[11,"try_into","","",2563,[[],["result",4]]],[11,"type_id","","",2563,[[],["typeid",3]]],[11,"from","","",2564,[[]]],[11,"borrow","","",2564,[[]]],[11,"borrow_mut","","",2564,[[]]],[11,"try_from","","",2564,[[],["result",4]]],[11,"into","","",2564,[[]]],[11,"try_into","","",2564,[[],["result",4]]],[11,"type_id","","",2564,[[],["typeid",3]]],[11,"from","","",2565,[[]]],[11,"borrow","","",2565,[[]]],[11,"borrow_mut","","",2565,[[]]],[11,"try_from","","",2565,[[],["result",4]]],[11,"into","","",2565,[[]]],[11,"try_into","","",2565,[[],["result",4]]],[11,"type_id","","",2565,[[],["typeid",3]]],[11,"from","","",2566,[[]]],[11,"borrow","","",2566,[[]]],[11,"borrow_mut","","",2566,[[]]],[11,"try_from","","",2566,[[],["result",4]]],[11,"into","","",2566,[[]]],[11,"try_into","","",2566,[[],["result",4]]],[11,"type_id","","",2566,[[],["typeid",3]]],[11,"from","","",2567,[[]]],[11,"borrow","","",2567,[[]]],[11,"borrow_mut","","",2567,[[]]],[11,"try_from","","",2567,[[],["result",4]]],[11,"into","","",2567,[[]]],[11,"try_into","","",2567,[[],["result",4]]],[11,"type_id","","",2567,[[],["typeid",3]]],[11,"from","","",2568,[[]]],[11,"borrow","","",2568,[[]]],[11,"borrow_mut","","",2568,[[]]],[11,"try_from","","",2568,[[],["result",4]]],[11,"into","","",2568,[[]]],[11,"try_into","","",2568,[[],["result",4]]],[11,"type_id","","",2568,[[],["typeid",3]]],[11,"from","","",2569,[[]]],[11,"borrow","","",2569,[[]]],[11,"borrow_mut","","",2569,[[]]],[11,"try_from","","",2569,[[],["result",4]]],[11,"into","","",2569,[[]]],[11,"try_into","","",2569,[[],["result",4]]],[11,"type_id","","",2569,[[],["typeid",3]]],[11,"from","","",2570,[[]]],[11,"borrow","","",2570,[[]]],[11,"borrow_mut","","",2570,[[]]],[11,"try_from","","",2570,[[],["result",4]]],[11,"into","","",2570,[[]]],[11,"try_into","","",2570,[[],["result",4]]],[11,"type_id","","",2570,[[],["typeid",3]]],[11,"from","","",2571,[[]]],[11,"borrow","","",2571,[[]]],[11,"borrow_mut","","",2571,[[]]],[11,"try_from","","",2571,[[],["result",4]]],[11,"into","","",2571,[[]]],[11,"try_into","","",2571,[[],["result",4]]],[11,"type_id","","",2571,[[],["typeid",3]]],[11,"from","","",2572,[[]]],[11,"borrow","","",2572,[[]]],[11,"borrow_mut","","",2572,[[]]],[11,"try_from","","",2572,[[],["result",4]]],[11,"into","","",2572,[[]]],[11,"try_into","","",2572,[[],["result",4]]],[11,"type_id","","",2572,[[],["typeid",3]]],[11,"from","","",2573,[[]]],[11,"borrow","","",2573,[[]]],[11,"borrow_mut","","",2573,[[]]],[11,"try_from","","",2573,[[],["result",4]]],[11,"into","","",2573,[[]]],[11,"try_into","","",2573,[[],["result",4]]],[11,"type_id","","",2573,[[],["typeid",3]]],[11,"from","","",2574,[[]]],[11,"borrow","","",2574,[[]]],[11,"borrow_mut","","",2574,[[]]],[11,"try_from","","",2574,[[],["result",4]]],[11,"into","","",2574,[[]]],[11,"try_into","","",2574,[[],["result",4]]],[11,"type_id","","",2574,[[],["typeid",3]]],[11,"from","","",2575,[[]]],[11,"borrow","","",2575,[[]]],[11,"borrow_mut","","",2575,[[]]],[11,"try_from","","",2575,[[],["result",4]]],[11,"into","","",2575,[[]]],[11,"try_into","","",2575,[[],["result",4]]],[11,"type_id","","",2575,[[],["typeid",3]]],[11,"from","","",2576,[[]]],[11,"borrow","","",2576,[[]]],[11,"borrow_mut","","",2576,[[]]],[11,"try_from","","",2576,[[],["result",4]]],[11,"into","","",2576,[[]]],[11,"try_into","","",2576,[[],["result",4]]],[11,"type_id","","",2576,[[],["typeid",3]]],[11,"from","","",2577,[[]]],[11,"borrow","","",2577,[[]]],[11,"borrow_mut","","",2577,[[]]],[11,"try_from","","",2577,[[],["result",4]]],[11,"into","","",2577,[[]]],[11,"try_into","","",2577,[[],["result",4]]],[11,"type_id","","",2577,[[],["typeid",3]]],[11,"from","","",2578,[[]]],[11,"borrow","","",2578,[[]]],[11,"borrow_mut","","",2578,[[]]],[11,"try_from","","",2578,[[],["result",4]]],[11,"into","","",2578,[[]]],[11,"try_into","","",2578,[[],["result",4]]],[11,"type_id","","",2578,[[],["typeid",3]]],[11,"from","","",2579,[[]]],[11,"borrow","","",2579,[[]]],[11,"borrow_mut","","",2579,[[]]],[11,"try_from","","",2579,[[],["result",4]]],[11,"into","","",2579,[[]]],[11,"try_into","","",2579,[[],["result",4]]],[11,"type_id","","",2579,[[],["typeid",3]]],[11,"from","","",2580,[[]]],[11,"borrow","","",2580,[[]]],[11,"borrow_mut","","",2580,[[]]],[11,"try_from","","",2580,[[],["result",4]]],[11,"into","","",2580,[[]]],[11,"try_into","","",2580,[[],["result",4]]],[11,"type_id","","",2580,[[],["typeid",3]]],[11,"from","","",2581,[[]]],[11,"borrow","","",2581,[[]]],[11,"borrow_mut","","",2581,[[]]],[11,"try_from","","",2581,[[],["result",4]]],[11,"into","","",2581,[[]]],[11,"try_into","","",2581,[[],["result",4]]],[11,"type_id","","",2581,[[],["typeid",3]]],[11,"from","","",2582,[[]]],[11,"borrow","","",2582,[[]]],[11,"borrow_mut","","",2582,[[]]],[11,"try_from","","",2582,[[],["result",4]]],[11,"into","","",2582,[[]]],[11,"try_into","","",2582,[[],["result",4]]],[11,"type_id","","",2582,[[],["typeid",3]]],[11,"from","","",2583,[[]]],[11,"borrow","","",2583,[[]]],[11,"borrow_mut","","",2583,[[]]],[11,"try_from","","",2583,[[],["result",4]]],[11,"into","","",2583,[[]]],[11,"try_into","","",2583,[[],["result",4]]],[11,"type_id","","",2583,[[],["typeid",3]]],[11,"from","","",2584,[[]]],[11,"borrow","","",2584,[[]]],[11,"borrow_mut","","",2584,[[]]],[11,"try_from","","",2584,[[],["result",4]]],[11,"into","","",2584,[[]]],[11,"try_into","","",2584,[[],["result",4]]],[11,"type_id","","",2584,[[],["typeid",3]]],[11,"from","","",2585,[[]]],[11,"borrow","","",2585,[[]]],[11,"borrow_mut","","",2585,[[]]],[11,"try_from","","",2585,[[],["result",4]]],[11,"into","","",2585,[[]]],[11,"try_into","","",2585,[[],["result",4]]],[11,"type_id","","",2585,[[],["typeid",3]]],[11,"from","","",2586,[[]]],[11,"borrow","","",2586,[[]]],[11,"borrow_mut","","",2586,[[]]],[11,"try_from","","",2586,[[],["result",4]]],[11,"into","","",2586,[[]]],[11,"try_into","","",2586,[[],["result",4]]],[11,"type_id","","",2586,[[],["typeid",3]]],[11,"from","","",2587,[[]]],[11,"borrow","","",2587,[[]]],[11,"borrow_mut","","",2587,[[]]],[11,"try_from","","",2587,[[],["result",4]]],[11,"into","","",2587,[[]]],[11,"try_into","","",2587,[[],["result",4]]],[11,"type_id","","",2587,[[],["typeid",3]]],[11,"from","","",2588,[[]]],[11,"borrow","","",2588,[[]]],[11,"borrow_mut","","",2588,[[]]],[11,"try_from","","",2588,[[],["result",4]]],[11,"into","","",2588,[[]]],[11,"try_into","","",2588,[[],["result",4]]],[11,"type_id","","",2588,[[],["typeid",3]]],[11,"from","","",2589,[[]]],[11,"borrow","","",2589,[[]]],[11,"borrow_mut","","",2589,[[]]],[11,"try_from","","",2589,[[],["result",4]]],[11,"into","","",2589,[[]]],[11,"try_into","","",2589,[[],["result",4]]],[11,"type_id","","",2589,[[],["typeid",3]]],[11,"from","","",2590,[[]]],[11,"borrow","","",2590,[[]]],[11,"borrow_mut","","",2590,[[]]],[11,"try_from","","",2590,[[],["result",4]]],[11,"into","","",2590,[[]]],[11,"try_into","","",2590,[[],["result",4]]],[11,"type_id","","",2590,[[],["typeid",3]]],[11,"from","","",2591,[[]]],[11,"borrow","","",2591,[[]]],[11,"borrow_mut","","",2591,[[]]],[11,"try_from","","",2591,[[],["result",4]]],[11,"into","","",2591,[[]]],[11,"try_into","","",2591,[[],["result",4]]],[11,"type_id","","",2591,[[],["typeid",3]]],[11,"from","","",2592,[[]]],[11,"borrow","","",2592,[[]]],[11,"borrow_mut","","",2592,[[]]],[11,"try_from","","",2592,[[],["result",4]]],[11,"into","","",2592,[[]]],[11,"try_into","","",2592,[[],["result",4]]],[11,"type_id","","",2592,[[],["typeid",3]]],[11,"from","","",2593,[[]]],[11,"borrow","","",2593,[[]]],[11,"borrow_mut","","",2593,[[]]],[11,"try_from","","",2593,[[],["result",4]]],[11,"into","","",2593,[[]]],[11,"try_into","","",2593,[[],["result",4]]],[11,"type_id","","",2593,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","atsamd21g::generic","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","atsamd21g::ac","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","atsamd21g::ac::ctrla","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","atsamd21g::ac::ctrlb","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","atsamd21g::ac::evctrl","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","atsamd21g::ac::intenclr","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","atsamd21g::ac::intenset","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","atsamd21g::ac::intflag","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","atsamd21g::ac::statusa","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","atsamd21g::ac::statusc","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","atsamd21g::ac::winctrl","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","atsamd21g::ac::compctrl","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","atsamd21g::ac::scaler","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","atsamd21g::adc","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","atsamd21g::adc::ctrla","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","atsamd21g::adc::refctrl","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","atsamd21g::adc::avgctrl","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","atsamd21g::adc::sampctrl","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","atsamd21g::adc::ctrlb","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","atsamd21g::adc::winctrl","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","atsamd21g::adc::swtrig","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","atsamd21g::adc::inputctrl","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","atsamd21g::adc::evctrl","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","atsamd21g::adc::intenclr","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","atsamd21g::adc::intenset","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","atsamd21g::adc::intflag","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","atsamd21g::adc::winlt","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","atsamd21g::adc::winut","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","atsamd21g::adc::gaincorr","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","atsamd21g::adc::offsetcorr","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","atsamd21g::adc::calib","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","atsamd21g::adc::dbgctrl","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","atsamd21g::dac","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","atsamd21g::dac::ctrla","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","atsamd21g::dac::ctrlb","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","atsamd21g::dac::evctrl","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","atsamd21g::dac::intenclr","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","atsamd21g::dac::intenset","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","atsamd21g::dac::intflag","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","atsamd21g::dac::data","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","atsamd21g::dac::databuf","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","atsamd21g::dmac","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::ctrl","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::crcctrl","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::crcdatain","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::crcchksum","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::crcstatus","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::dbgctrl","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::qosctrl","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::swtrigctrl","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::prictrl0","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"from","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::intpend","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"into","","",290,[[]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"into","","",291,[[]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::baseaddr","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"into","","",300,[[]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::wrbaddr","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"into","","",303,[[]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::chid","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"into","","",306,[[]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::chctrla","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"into","","",309,[[]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"into","","",310,[[]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::chctrlb","",319,[[]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"into","","",319,[[]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"from","","",320,[[]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"into","","",320,[[]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"from","","",321,[[]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"into","","",321,[[]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"from","","",323,[[]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"into","","",323,[[]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"from","","",325,[[]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"into","","",325,[[]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"from","","",327,[[]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"into","","",327,[[]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","","",329,[[]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"into","","",329,[[]]],[11,"try_into","","",329,[[],["result",4]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"into","","",313,[[]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"into","","",314,[[]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"from","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"into","","",315,[[]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"from","","",316,[[]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"into","","",316,[[]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"into","","",317,[[]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::chintenclr","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"into","","",332,[[]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"from","","",333,[[]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"into","","",333,[[]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"from","","",334,[[]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"into","","",334,[[]]],[11,"try_into","","",334,[[],["result",4]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::chintenset","",337,[[]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"into","","",337,[[]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"from","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"into","","",338,[[]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"from","","",339,[[]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"into","","",339,[[]]],[11,"try_into","","",339,[[],["result",4]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"from","atsamd21g::dmac::chintflag","",342,[[]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"into","","",342,[[]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"from","","",343,[[]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"into","","",343,[[]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"from","","",344,[[]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"into","","",344,[[]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"from","atsamd21g::dsu","",348,[[]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"into","","",348,[[]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"from","atsamd21g::dsu::ctrl","",349,[[]]],[11,"borrow","","",349,[[]]],[11,"borrow_mut","","",349,[[]]],[11,"try_from","","",349,[[],["result",4]]],[11,"into","","",349,[[]]],[11,"try_into","","",349,[[],["result",4]]],[11,"type_id","","",349,[[],["typeid",3]]],[11,"from","","",350,[[]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"into","","",350,[[]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"from","","",351,[[]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"into","","",351,[[]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"from","","",352,[[]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"into","","",352,[[]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"from","atsamd21g::dsu::statusa","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"into","","",354,[[]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"from","","",355,[[]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"into","","",355,[[]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"from","","",356,[[]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"into","","",356,[[]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"from","","",357,[[]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"into","","",357,[[]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"from","","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"into","","",358,[[]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"from","atsamd21g::dsu::addr","",362,[[]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"into","","",362,[[]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"from","atsamd21g::dsu::length","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"into","","",365,[[]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"from","atsamd21g::dsu::data","",368,[[]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"into","","",368,[[]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"from","atsamd21g::dsu::dcc","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"into","","",371,[[]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"from","atsamd21g::eic","",387,[[]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"into","","",387,[[]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"from","atsamd21g::eic::ctrl","",388,[[]]],[11,"borrow","","",388,[[]]],[11,"borrow_mut","","",388,[[]]],[11,"try_from","","",388,[[],["result",4]]],[11,"into","","",388,[[]]],[11,"try_into","","",388,[[],["result",4]]],[11,"type_id","","",388,[[],["typeid",3]]],[11,"from","","",389,[[]]],[11,"borrow","","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"into","","",389,[[]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"from","atsamd21g::eic::nmictrl","",395,[[]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"into","","",395,[[]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"from","","",396,[[]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"into","","",396,[[]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"from","","",393,[[]]],[11,"borrow","","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"into","","",393,[[]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"from","atsamd21g::eic::nmiflag","",399,[[]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"into","","",399,[[]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"from","atsamd21g::eic::evctrl","",402,[[]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"into","","",402,[[]]],[11,"try_into","","",402,[[],["result",4]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"from","","",403,[[]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"into","","",403,[[]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"from","","",404,[[]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"into","","",404,[[]]],[11,"try_into","","",404,[[],["result",4]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"from","","",405,[[]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"into","","",405,[[]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"from","","",406,[[]]],[11,"borrow","","",406,[[]]],[11,"borrow_mut","","",406,[[]]],[11,"try_from","","",406,[[],["result",4]]],[11,"into","","",406,[[]]],[11,"try_into","","",406,[[],["result",4]]],[11,"type_id","","",406,[[],["typeid",3]]],[11,"from","","",407,[[]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"into","","",407,[[]]],[11,"try_into","","",407,[[],["result",4]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"from","","",408,[[]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"into","","",408,[[]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"from","","",409,[[]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"into","","",409,[[]]],[11,"try_into","","",409,[[],["result",4]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"from","","",410,[[]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"into","","",410,[[]]],[11,"try_into","","",410,[[],["result",4]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"from","","",411,[[]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"into","","",411,[[]]],[11,"try_into","","",411,[[],["result",4]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"from","","",412,[[]]],[11,"borrow","","",412,[[]]],[11,"borrow_mut","","",412,[[]]],[11,"try_from","","",412,[[],["result",4]]],[11,"into","","",412,[[]]],[11,"try_into","","",412,[[],["result",4]]],[11,"type_id","","",412,[[],["typeid",3]]],[11,"from","","",413,[[]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"into","","",413,[[]]],[11,"try_into","","",413,[[],["result",4]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"from","","",414,[[]]],[11,"borrow","","",414,[[]]],[11,"borrow_mut","","",414,[[]]],[11,"try_from","","",414,[[],["result",4]]],[11,"into","","",414,[[]]],[11,"try_into","","",414,[[],["result",4]]],[11,"type_id","","",414,[[],["typeid",3]]],[11,"from","","",415,[[]]],[11,"borrow","","",415,[[]]],[11,"borrow_mut","","",415,[[]]],[11,"try_from","","",415,[[],["result",4]]],[11,"into","","",415,[[]]],[11,"try_into","","",415,[[],["result",4]]],[11,"type_id","","",415,[[],["typeid",3]]],[11,"from","","",416,[[]]],[11,"borrow","","",416,[[]]],[11,"borrow_mut","","",416,[[]]],[11,"try_from","","",416,[[],["result",4]]],[11,"into","","",416,[[]]],[11,"try_into","","",416,[[],["result",4]]],[11,"type_id","","",416,[[],["typeid",3]]],[11,"from","","",417,[[]]],[11,"borrow","","",417,[[]]],[11,"borrow_mut","","",417,[[]]],[11,"try_from","","",417,[[],["result",4]]],[11,"into","","",417,[[]]],[11,"try_into","","",417,[[],["result",4]]],[11,"type_id","","",417,[[],["typeid",3]]],[11,"from","atsamd21g::eic::intenclr","",420,[[]]],[11,"borrow","","",420,[[]]],[11,"borrow_mut","","",420,[[]]],[11,"try_from","","",420,[[],["result",4]]],[11,"into","","",420,[[]]],[11,"try_into","","",420,[[],["result",4]]],[11,"type_id","","",420,[[],["typeid",3]]],[11,"from","","",421,[[]]],[11,"borrow","","",421,[[]]],[11,"borrow_mut","","",421,[[]]],[11,"try_from","","",421,[[],["result",4]]],[11,"into","","",421,[[]]],[11,"try_into","","",421,[[],["result",4]]],[11,"type_id","","",421,[[],["typeid",3]]],[11,"from","","",422,[[]]],[11,"borrow","","",422,[[]]],[11,"borrow_mut","","",422,[[]]],[11,"try_from","","",422,[[],["result",4]]],[11,"into","","",422,[[]]],[11,"try_into","","",422,[[],["result",4]]],[11,"type_id","","",422,[[],["typeid",3]]],[11,"from","","",423,[[]]],[11,"borrow","","",423,[[]]],[11,"borrow_mut","","",423,[[]]],[11,"try_from","","",423,[[],["result",4]]],[11,"into","","",423,[[]]],[11,"try_into","","",423,[[],["result",4]]],[11,"type_id","","",423,[[],["typeid",3]]],[11,"from","","",424,[[]]],[11,"borrow","","",424,[[]]],[11,"borrow_mut","","",424,[[]]],[11,"try_from","","",424,[[],["result",4]]],[11,"into","","",424,[[]]],[11,"try_into","","",424,[[],["result",4]]],[11,"type_id","","",424,[[],["typeid",3]]],[11,"from","","",425,[[]]],[11,"borrow","","",425,[[]]],[11,"borrow_mut","","",425,[[]]],[11,"try_from","","",425,[[],["result",4]]],[11,"into","","",425,[[]]],[11,"try_into","","",425,[[],["result",4]]],[11,"type_id","","",425,[[],["typeid",3]]],[11,"from","","",426,[[]]],[11,"borrow","","",426,[[]]],[11,"borrow_mut","","",426,[[]]],[11,"try_from","","",426,[[],["result",4]]],[11,"into","","",426,[[]]],[11,"try_into","","",426,[[],["result",4]]],[11,"type_id","","",426,[[],["typeid",3]]],[11,"from","","",427,[[]]],[11,"borrow","","",427,[[]]],[11,"borrow_mut","","",427,[[]]],[11,"try_from","","",427,[[],["result",4]]],[11,"into","","",427,[[]]],[11,"try_into","","",427,[[],["result",4]]],[11,"type_id","","",427,[[],["typeid",3]]],[11,"from","","",428,[[]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"into","","",428,[[]]],[11,"try_into","","",428,[[],["result",4]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"from","","",429,[[]]],[11,"borrow","","",429,[[]]],[11,"borrow_mut","","",429,[[]]],[11,"try_from","","",429,[[],["result",4]]],[11,"into","","",429,[[]]],[11,"try_into","","",429,[[],["result",4]]],[11,"type_id","","",429,[[],["typeid",3]]],[11,"from","","",430,[[]]],[11,"borrow","","",430,[[]]],[11,"borrow_mut","","",430,[[]]],[11,"try_from","","",430,[[],["result",4]]],[11,"into","","",430,[[]]],[11,"try_into","","",430,[[],["result",4]]],[11,"type_id","","",430,[[],["typeid",3]]],[11,"from","","",431,[[]]],[11,"borrow","","",431,[[]]],[11,"borrow_mut","","",431,[[]]],[11,"try_from","","",431,[[],["result",4]]],[11,"into","","",431,[[]]],[11,"try_into","","",431,[[],["result",4]]],[11,"type_id","","",431,[[],["typeid",3]]],[11,"from","","",432,[[]]],[11,"borrow","","",432,[[]]],[11,"borrow_mut","","",432,[[]]],[11,"try_from","","",432,[[],["result",4]]],[11,"into","","",432,[[]]],[11,"try_into","","",432,[[],["result",4]]],[11,"type_id","","",432,[[],["typeid",3]]],[11,"from","","",433,[[]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"into","","",433,[[]]],[11,"try_into","","",433,[[],["result",4]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"from","","",434,[[]]],[11,"borrow","","",434,[[]]],[11,"borrow_mut","","",434,[[]]],[11,"try_from","","",434,[[],["result",4]]],[11,"into","","",434,[[]]],[11,"try_into","","",434,[[],["result",4]]],[11,"type_id","","",434,[[],["typeid",3]]],[11,"from","","",435,[[]]],[11,"borrow","","",435,[[]]],[11,"borrow_mut","","",435,[[]]],[11,"try_from","","",435,[[],["result",4]]],[11,"into","","",435,[[]]],[11,"try_into","","",435,[[],["result",4]]],[11,"type_id","","",435,[[],["typeid",3]]],[11,"from","atsamd21g::eic::intenset","",438,[[]]],[11,"borrow","","",438,[[]]],[11,"borrow_mut","","",438,[[]]],[11,"try_from","","",438,[[],["result",4]]],[11,"into","","",438,[[]]],[11,"try_into","","",438,[[],["result",4]]],[11,"type_id","","",438,[[],["typeid",3]]],[11,"from","","",439,[[]]],[11,"borrow","","",439,[[]]],[11,"borrow_mut","","",439,[[]]],[11,"try_from","","",439,[[],["result",4]]],[11,"into","","",439,[[]]],[11,"try_into","","",439,[[],["result",4]]],[11,"type_id","","",439,[[],["typeid",3]]],[11,"from","","",440,[[]]],[11,"borrow","","",440,[[]]],[11,"borrow_mut","","",440,[[]]],[11,"try_from","","",440,[[],["result",4]]],[11,"into","","",440,[[]]],[11,"try_into","","",440,[[],["result",4]]],[11,"type_id","","",440,[[],["typeid",3]]],[11,"from","","",441,[[]]],[11,"borrow","","",441,[[]]],[11,"borrow_mut","","",441,[[]]],[11,"try_from","","",441,[[],["result",4]]],[11,"into","","",441,[[]]],[11,"try_into","","",441,[[],["result",4]]],[11,"type_id","","",441,[[],["typeid",3]]],[11,"from","","",442,[[]]],[11,"borrow","","",442,[[]]],[11,"borrow_mut","","",442,[[]]],[11,"try_from","","",442,[[],["result",4]]],[11,"into","","",442,[[]]],[11,"try_into","","",442,[[],["result",4]]],[11,"type_id","","",442,[[],["typeid",3]]],[11,"from","","",443,[[]]],[11,"borrow","","",443,[[]]],[11,"borrow_mut","","",443,[[]]],[11,"try_from","","",443,[[],["result",4]]],[11,"into","","",443,[[]]],[11,"try_into","","",443,[[],["result",4]]],[11,"type_id","","",443,[[],["typeid",3]]],[11,"from","","",444,[[]]],[11,"borrow","","",444,[[]]],[11,"borrow_mut","","",444,[[]]],[11,"try_from","","",444,[[],["result",4]]],[11,"into","","",444,[[]]],[11,"try_into","","",444,[[],["result",4]]],[11,"type_id","","",444,[[],["typeid",3]]],[11,"from","","",445,[[]]],[11,"borrow","","",445,[[]]],[11,"borrow_mut","","",445,[[]]],[11,"try_from","","",445,[[],["result",4]]],[11,"into","","",445,[[]]],[11,"try_into","","",445,[[],["result",4]]],[11,"type_id","","",445,[[],["typeid",3]]],[11,"from","","",446,[[]]],[11,"borrow","","",446,[[]]],[11,"borrow_mut","","",446,[[]]],[11,"try_from","","",446,[[],["result",4]]],[11,"into","","",446,[[]]],[11,"try_into","","",446,[[],["result",4]]],[11,"type_id","","",446,[[],["typeid",3]]],[11,"from","","",447,[[]]],[11,"borrow","","",447,[[]]],[11,"borrow_mut","","",447,[[]]],[11,"try_from","","",447,[[],["result",4]]],[11,"into","","",447,[[]]],[11,"try_into","","",447,[[],["result",4]]],[11,"type_id","","",447,[[],["typeid",3]]],[11,"from","","",448,[[]]],[11,"borrow","","",448,[[]]],[11,"borrow_mut","","",448,[[]]],[11,"try_from","","",448,[[],["result",4]]],[11,"into","","",448,[[]]],[11,"try_into","","",448,[[],["result",4]]],[11,"type_id","","",448,[[],["typeid",3]]],[11,"from","","",449,[[]]],[11,"borrow","","",449,[[]]],[11,"borrow_mut","","",449,[[]]],[11,"try_from","","",449,[[],["result",4]]],[11,"into","","",449,[[]]],[11,"try_into","","",449,[[],["result",4]]],[11,"type_id","","",449,[[],["typeid",3]]],[11,"from","","",450,[[]]],[11,"borrow","","",450,[[]]],[11,"borrow_mut","","",450,[[]]],[11,"try_from","","",450,[[],["result",4]]],[11,"into","","",450,[[]]],[11,"try_into","","",450,[[],["result",4]]],[11,"type_id","","",450,[[],["typeid",3]]],[11,"from","","",451,[[]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"into","","",451,[[]]],[11,"try_into","","",451,[[],["result",4]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"from","","",452,[[]]],[11,"borrow","","",452,[[]]],[11,"borrow_mut","","",452,[[]]],[11,"try_from","","",452,[[],["result",4]]],[11,"into","","",452,[[]]],[11,"try_into","","",452,[[],["result",4]]],[11,"type_id","","",452,[[],["typeid",3]]],[11,"from","","",453,[[]]],[11,"borrow","","",453,[[]]],[11,"borrow_mut","","",453,[[]]],[11,"try_from","","",453,[[],["result",4]]],[11,"into","","",453,[[]]],[11,"try_into","","",453,[[],["result",4]]],[11,"type_id","","",453,[[],["typeid",3]]],[11,"from","atsamd21g::eic::intflag","",456,[[]]],[11,"borrow","","",456,[[]]],[11,"borrow_mut","","",456,[[]]],[11,"try_from","","",456,[[],["result",4]]],[11,"into","","",456,[[]]],[11,"try_into","","",456,[[],["result",4]]],[11,"type_id","","",456,[[],["typeid",3]]],[11,"from","","",457,[[]]],[11,"borrow","","",457,[[]]],[11,"borrow_mut","","",457,[[]]],[11,"try_from","","",457,[[],["result",4]]],[11,"into","","",457,[[]]],[11,"try_into","","",457,[[],["result",4]]],[11,"type_id","","",457,[[],["typeid",3]]],[11,"from","","",458,[[]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"into","","",458,[[]]],[11,"try_into","","",458,[[],["result",4]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"from","","",459,[[]]],[11,"borrow","","",459,[[]]],[11,"borrow_mut","","",459,[[]]],[11,"try_from","","",459,[[],["result",4]]],[11,"into","","",459,[[]]],[11,"try_into","","",459,[[],["result",4]]],[11,"type_id","","",459,[[],["typeid",3]]],[11,"from","","",460,[[]]],[11,"borrow","","",460,[[]]],[11,"borrow_mut","","",460,[[]]],[11,"try_from","","",460,[[],["result",4]]],[11,"into","","",460,[[]]],[11,"try_into","","",460,[[],["result",4]]],[11,"type_id","","",460,[[],["typeid",3]]],[11,"from","","",461,[[]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"into","","",461,[[]]],[11,"try_into","","",461,[[],["result",4]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"from","","",462,[[]]],[11,"borrow","","",462,[[]]],[11,"borrow_mut","","",462,[[]]],[11,"try_from","","",462,[[],["result",4]]],[11,"into","","",462,[[]]],[11,"try_into","","",462,[[],["result",4]]],[11,"type_id","","",462,[[],["typeid",3]]],[11,"from","","",463,[[]]],[11,"borrow","","",463,[[]]],[11,"borrow_mut","","",463,[[]]],[11,"try_from","","",463,[[],["result",4]]],[11,"into","","",463,[[]]],[11,"try_into","","",463,[[],["result",4]]],[11,"type_id","","",463,[[],["typeid",3]]],[11,"from","","",464,[[]]],[11,"borrow","","",464,[[]]],[11,"borrow_mut","","",464,[[]]],[11,"try_from","","",464,[[],["result",4]]],[11,"into","","",464,[[]]],[11,"try_into","","",464,[[],["result",4]]],[11,"type_id","","",464,[[],["typeid",3]]],[11,"from","","",465,[[]]],[11,"borrow","","",465,[[]]],[11,"borrow_mut","","",465,[[]]],[11,"try_from","","",465,[[],["result",4]]],[11,"into","","",465,[[]]],[11,"try_into","","",465,[[],["result",4]]],[11,"type_id","","",465,[[],["typeid",3]]],[11,"from","","",466,[[]]],[11,"borrow","","",466,[[]]],[11,"borrow_mut","","",466,[[]]],[11,"try_from","","",466,[[],["result",4]]],[11,"into","","",466,[[]]],[11,"try_into","","",466,[[],["result",4]]],[11,"type_id","","",466,[[],["typeid",3]]],[11,"from","","",467,[[]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"into","","",467,[[]]],[11,"try_into","","",467,[[],["result",4]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"from","","",468,[[]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"into","","",468,[[]]],[11,"try_into","","",468,[[],["result",4]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"from","","",469,[[]]],[11,"borrow","","",469,[[]]],[11,"borrow_mut","","",469,[[]]],[11,"try_from","","",469,[[],["result",4]]],[11,"into","","",469,[[]]],[11,"try_into","","",469,[[],["result",4]]],[11,"type_id","","",469,[[],["typeid",3]]],[11,"from","","",470,[[]]],[11,"borrow","","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"into","","",470,[[]]],[11,"try_into","","",470,[[],["result",4]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"from","","",471,[[]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"into","","",471,[[]]],[11,"try_into","","",471,[[],["result",4]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"from","atsamd21g::eic::wakeup","",474,[[]]],[11,"borrow","","",474,[[]]],[11,"borrow_mut","","",474,[[]]],[11,"try_from","","",474,[[],["result",4]]],[11,"into","","",474,[[]]],[11,"try_into","","",474,[[],["result",4]]],[11,"type_id","","",474,[[],["typeid",3]]],[11,"from","","",475,[[]]],[11,"borrow","","",475,[[]]],[11,"borrow_mut","","",475,[[]]],[11,"try_from","","",475,[[],["result",4]]],[11,"into","","",475,[[]]],[11,"try_into","","",475,[[],["result",4]]],[11,"type_id","","",475,[[],["typeid",3]]],[11,"from","","",476,[[]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"into","","",476,[[]]],[11,"try_into","","",476,[[],["result",4]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"from","","",477,[[]]],[11,"borrow","","",477,[[]]],[11,"borrow_mut","","",477,[[]]],[11,"try_from","","",477,[[],["result",4]]],[11,"into","","",477,[[]]],[11,"try_into","","",477,[[],["result",4]]],[11,"type_id","","",477,[[],["typeid",3]]],[11,"from","","",478,[[]]],[11,"borrow","","",478,[[]]],[11,"borrow_mut","","",478,[[]]],[11,"try_from","","",478,[[],["result",4]]],[11,"into","","",478,[[]]],[11,"try_into","","",478,[[],["result",4]]],[11,"type_id","","",478,[[],["typeid",3]]],[11,"from","","",479,[[]]],[11,"borrow","","",479,[[]]],[11,"borrow_mut","","",479,[[]]],[11,"try_from","","",479,[[],["result",4]]],[11,"into","","",479,[[]]],[11,"try_into","","",479,[[],["result",4]]],[11,"type_id","","",479,[[],["typeid",3]]],[11,"from","","",480,[[]]],[11,"borrow","","",480,[[]]],[11,"borrow_mut","","",480,[[]]],[11,"try_from","","",480,[[],["result",4]]],[11,"into","","",480,[[]]],[11,"try_into","","",480,[[],["result",4]]],[11,"type_id","","",480,[[],["typeid",3]]],[11,"from","","",481,[[]]],[11,"borrow","","",481,[[]]],[11,"borrow_mut","","",481,[[]]],[11,"try_from","","",481,[[],["result",4]]],[11,"into","","",481,[[]]],[11,"try_into","","",481,[[],["result",4]]],[11,"type_id","","",481,[[],["typeid",3]]],[11,"from","","",482,[[]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"into","","",482,[[]]],[11,"try_into","","",482,[[],["result",4]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"from","","",483,[[]]],[11,"borrow","","",483,[[]]],[11,"borrow_mut","","",483,[[]]],[11,"try_from","","",483,[[],["result",4]]],[11,"into","","",483,[[]]],[11,"try_into","","",483,[[],["result",4]]],[11,"type_id","","",483,[[],["typeid",3]]],[11,"from","","",484,[[]]],[11,"borrow","","",484,[[]]],[11,"borrow_mut","","",484,[[]]],[11,"try_from","","",484,[[],["result",4]]],[11,"into","","",484,[[]]],[11,"try_into","","",484,[[],["result",4]]],[11,"type_id","","",484,[[],["typeid",3]]],[11,"from","","",485,[[]]],[11,"borrow","","",485,[[]]],[11,"borrow_mut","","",485,[[]]],[11,"try_from","","",485,[[],["result",4]]],[11,"into","","",485,[[]]],[11,"try_into","","",485,[[],["result",4]]],[11,"type_id","","",485,[[],["typeid",3]]],[11,"from","","",486,[[]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"into","","",486,[[]]],[11,"try_into","","",486,[[],["result",4]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"from","","",487,[[]]],[11,"borrow","","",487,[[]]],[11,"borrow_mut","","",487,[[]]],[11,"try_from","","",487,[[],["result",4]]],[11,"into","","",487,[[]]],[11,"try_into","","",487,[[],["result",4]]],[11,"type_id","","",487,[[],["typeid",3]]],[11,"from","","",488,[[]]],[11,"borrow","","",488,[[]]],[11,"borrow_mut","","",488,[[]]],[11,"try_from","","",488,[[],["result",4]]],[11,"into","","",488,[[]]],[11,"try_into","","",488,[[],["result",4]]],[11,"type_id","","",488,[[],["typeid",3]]],[11,"from","","",489,[[]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"into","","",489,[[]]],[11,"try_into","","",489,[[],["result",4]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"from","atsamd21g::eic::config","",501,[[]]],[11,"borrow","","",501,[[]]],[11,"borrow_mut","","",501,[[]]],[11,"try_from","","",501,[[],["result",4]]],[11,"into","","",501,[[]]],[11,"try_into","","",501,[[],["result",4]]],[11,"type_id","","",501,[[],["typeid",3]]],[11,"from","","",502,[[]]],[11,"borrow","","",502,[[]]],[11,"borrow_mut","","",502,[[]]],[11,"try_from","","",502,[[],["result",4]]],[11,"into","","",502,[[]]],[11,"try_into","","",502,[[],["result",4]]],[11,"type_id","","",502,[[],["typeid",3]]],[11,"from","","",504,[[]]],[11,"borrow","","",504,[[]]],[11,"borrow_mut","","",504,[[]]],[11,"try_from","","",504,[[],["result",4]]],[11,"into","","",504,[[]]],[11,"try_into","","",504,[[],["result",4]]],[11,"type_id","","",504,[[],["typeid",3]]],[11,"from","","",505,[[]]],[11,"borrow","","",505,[[]]],[11,"borrow_mut","","",505,[[]]],[11,"try_from","","",505,[[],["result",4]]],[11,"into","","",505,[[]]],[11,"try_into","","",505,[[],["result",4]]],[11,"type_id","","",505,[[],["typeid",3]]],[11,"from","","",507,[[]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"into","","",507,[[]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"from","","",508,[[]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"into","","",508,[[]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"from","","",510,[[]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"into","","",510,[[]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"from","","",511,[[]]],[11,"borrow","","",511,[[]]],[11,"borrow_mut","","",511,[[]]],[11,"try_from","","",511,[[],["result",4]]],[11,"into","","",511,[[]]],[11,"try_into","","",511,[[],["result",4]]],[11,"type_id","","",511,[[],["typeid",3]]],[11,"from","","",513,[[]]],[11,"borrow","","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"into","","",513,[[]]],[11,"try_into","","",513,[[],["result",4]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"from","","",514,[[]]],[11,"borrow","","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"into","","",514,[[]]],[11,"try_into","","",514,[[],["result",4]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"from","","",516,[[]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"into","","",516,[[]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"from","","",517,[[]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"into","","",517,[[]]],[11,"try_into","","",517,[[],["result",4]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"from","","",519,[[]]],[11,"borrow","","",519,[[]]],[11,"borrow_mut","","",519,[[]]],[11,"try_from","","",519,[[],["result",4]]],[11,"into","","",519,[[]]],[11,"try_into","","",519,[[],["result",4]]],[11,"type_id","","",519,[[],["typeid",3]]],[11,"from","","",520,[[]]],[11,"borrow","","",520,[[]]],[11,"borrow_mut","","",520,[[]]],[11,"try_from","","",520,[[],["result",4]]],[11,"into","","",520,[[]]],[11,"try_into","","",520,[[],["result",4]]],[11,"type_id","","",520,[[],["typeid",3]]],[11,"from","","",522,[[]]],[11,"borrow","","",522,[[]]],[11,"borrow_mut","","",522,[[]]],[11,"try_from","","",522,[[],["result",4]]],[11,"into","","",522,[[]]],[11,"try_into","","",522,[[],["result",4]]],[11,"type_id","","",522,[[],["typeid",3]]],[11,"from","","",523,[[]]],[11,"borrow","","",523,[[]]],[11,"borrow_mut","","",523,[[]]],[11,"try_from","","",523,[[],["result",4]]],[11,"into","","",523,[[]]],[11,"try_into","","",523,[[],["result",4]]],[11,"type_id","","",523,[[],["typeid",3]]],[11,"from","","",492,[[]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"into","","",492,[[]]],[11,"try_into","","",492,[[],["result",4]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"from","","",493,[[]]],[11,"borrow","","",493,[[]]],[11,"borrow_mut","","",493,[[]]],[11,"try_from","","",493,[[],["result",4]]],[11,"into","","",493,[[]]],[11,"try_into","","",493,[[],["result",4]]],[11,"type_id","","",493,[[],["typeid",3]]],[11,"from","","",494,[[]]],[11,"borrow","","",494,[[]]],[11,"borrow_mut","","",494,[[]]],[11,"try_from","","",494,[[],["result",4]]],[11,"into","","",494,[[]]],[11,"try_into","","",494,[[],["result",4]]],[11,"type_id","","",494,[[],["typeid",3]]],[11,"from","","",495,[[]]],[11,"borrow","","",495,[[]]],[11,"borrow_mut","","",495,[[]]],[11,"try_from","","",495,[[],["result",4]]],[11,"into","","",495,[[]]],[11,"try_into","","",495,[[],["result",4]]],[11,"type_id","","",495,[[],["typeid",3]]],[11,"from","","",496,[[]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"into","","",496,[[]]],[11,"try_into","","",496,[[],["result",4]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"from","","",497,[[]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"into","","",497,[[]]],[11,"try_into","","",497,[[],["result",4]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"from","","",498,[[]]],[11,"borrow","","",498,[[]]],[11,"borrow_mut","","",498,[[]]],[11,"try_from","","",498,[[],["result",4]]],[11,"into","","",498,[[]]],[11,"try_into","","",498,[[],["result",4]]],[11,"type_id","","",498,[[],["typeid",3]]],[11,"from","","",499,[[]]],[11,"borrow","","",499,[[]]],[11,"borrow_mut","","",499,[[]]],[11,"try_from","","",499,[[],["result",4]]],[11,"into","","",499,[[]]],[11,"try_into","","",499,[[],["result",4]]],[11,"type_id","","",499,[[],["typeid",3]]],[11,"from","atsamd21g::evsys","",526,[[]]],[11,"borrow","","",526,[[]]],[11,"borrow_mut","","",526,[[]]],[11,"try_from","","",526,[[],["result",4]]],[11,"into","","",526,[[]]],[11,"try_into","","",526,[[],["result",4]]],[11,"type_id","","",526,[[],["typeid",3]]],[11,"from","atsamd21g::evsys::ctrl","",527,[[]]],[11,"borrow","","",527,[[]]],[11,"borrow_mut","","",527,[[]]],[11,"try_from","","",527,[[],["result",4]]],[11,"into","","",527,[[]]],[11,"try_into","","",527,[[],["result",4]]],[11,"type_id","","",527,[[],["typeid",3]]],[11,"from","","",528,[[]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"into","","",528,[[]]],[11,"try_into","","",528,[[],["result",4]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"from","atsamd21g::evsys::channel","",532,[[]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"into","","",532,[[]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"from","","",533,[[]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"into","","",533,[[]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"from","","",534,[[]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"into","","",534,[[]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"from","","",536,[[]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"into","","",536,[[]]],[11,"try_into","","",536,[[],["result",4]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"from","","",538,[[]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"into","","",538,[[]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"from","","",530,[[]]],[11,"borrow","","",530,[[]]],[11,"borrow_mut","","",530,[[]]],[11,"try_from","","",530,[[],["result",4]]],[11,"into","","",530,[[]]],[11,"try_into","","",530,[[],["result",4]]],[11,"type_id","","",530,[[],["typeid",3]]],[11,"from","","",531,[[]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"into","","",531,[[]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"from","atsamd21g::evsys::user","",542,[[]]],[11,"borrow","","",542,[[]]],[11,"borrow_mut","","",542,[[]]],[11,"try_from","","",542,[[],["result",4]]],[11,"into","","",542,[[]]],[11,"try_into","","",542,[[],["result",4]]],[11,"type_id","","",542,[[],["typeid",3]]],[11,"from","","",544,[[]]],[11,"borrow","","",544,[[]]],[11,"borrow_mut","","",544,[[]]],[11,"try_from","","",544,[[],["result",4]]],[11,"into","","",544,[[]]],[11,"try_into","","",544,[[],["result",4]]],[11,"type_id","","",544,[[],["typeid",3]]],[11,"from","","",541,[[]]],[11,"borrow","","",541,[[]]],[11,"borrow_mut","","",541,[[]]],[11,"try_from","","",541,[[],["result",4]]],[11,"into","","",541,[[]]],[11,"try_into","","",541,[[],["result",4]]],[11,"type_id","","",541,[[],["typeid",3]]],[11,"from","atsamd21g::evsys::intenclr","",548,[[]]],[11,"borrow","","",548,[[]]],[11,"borrow_mut","","",548,[[]]],[11,"try_from","","",548,[[],["result",4]]],[11,"into","","",548,[[]]],[11,"try_into","","",548,[[],["result",4]]],[11,"type_id","","",548,[[],["typeid",3]]],[11,"from","","",549,[[]]],[11,"borrow","","",549,[[]]],[11,"borrow_mut","","",549,[[]]],[11,"try_from","","",549,[[],["result",4]]],[11,"into","","",549,[[]]],[11,"try_into","","",549,[[],["result",4]]],[11,"type_id","","",549,[[],["typeid",3]]],[11,"from","","",550,[[]]],[11,"borrow","","",550,[[]]],[11,"borrow_mut","","",550,[[]]],[11,"try_from","","",550,[[],["result",4]]],[11,"into","","",550,[[]]],[11,"try_into","","",550,[[],["result",4]]],[11,"type_id","","",550,[[],["typeid",3]]],[11,"from","","",551,[[]]],[11,"borrow","","",551,[[]]],[11,"borrow_mut","","",551,[[]]],[11,"try_from","","",551,[[],["result",4]]],[11,"into","","",551,[[]]],[11,"try_into","","",551,[[],["result",4]]],[11,"type_id","","",551,[[],["typeid",3]]],[11,"from","","",552,[[]]],[11,"borrow","","",552,[[]]],[11,"borrow_mut","","",552,[[]]],[11,"try_from","","",552,[[],["result",4]]],[11,"into","","",552,[[]]],[11,"try_into","","",552,[[],["result",4]]],[11,"type_id","","",552,[[],["typeid",3]]],[11,"from","","",553,[[]]],[11,"borrow","","",553,[[]]],[11,"borrow_mut","","",553,[[]]],[11,"try_from","","",553,[[],["result",4]]],[11,"into","","",553,[[]]],[11,"try_into","","",553,[[],["result",4]]],[11,"type_id","","",553,[[],["typeid",3]]],[11,"from","","",554,[[]]],[11,"borrow","","",554,[[]]],[11,"borrow_mut","","",554,[[]]],[11,"try_from","","",554,[[],["result",4]]],[11,"into","","",554,[[]]],[11,"try_into","","",554,[[],["result",4]]],[11,"type_id","","",554,[[],["typeid",3]]],[11,"from","","",555,[[]]],[11,"borrow","","",555,[[]]],[11,"borrow_mut","","",555,[[]]],[11,"try_from","","",555,[[],["result",4]]],[11,"into","","",555,[[]]],[11,"try_into","","",555,[[],["result",4]]],[11,"type_id","","",555,[[],["typeid",3]]],[11,"from","","",556,[[]]],[11,"borrow","","",556,[[]]],[11,"borrow_mut","","",556,[[]]],[11,"try_from","","",556,[[],["result",4]]],[11,"into","","",556,[[]]],[11,"try_into","","",556,[[],["result",4]]],[11,"type_id","","",556,[[],["typeid",3]]],[11,"from","","",557,[[]]],[11,"borrow","","",557,[[]]],[11,"borrow_mut","","",557,[[]]],[11,"try_from","","",557,[[],["result",4]]],[11,"into","","",557,[[]]],[11,"try_into","","",557,[[],["result",4]]],[11,"type_id","","",557,[[],["typeid",3]]],[11,"from","","",558,[[]]],[11,"borrow","","",558,[[]]],[11,"borrow_mut","","",558,[[]]],[11,"try_from","","",558,[[],["result",4]]],[11,"into","","",558,[[]]],[11,"try_into","","",558,[[],["result",4]]],[11,"type_id","","",558,[[],["typeid",3]]],[11,"from","","",559,[[]]],[11,"borrow","","",559,[[]]],[11,"borrow_mut","","",559,[[]]],[11,"try_from","","",559,[[],["result",4]]],[11,"into","","",559,[[]]],[11,"try_into","","",559,[[],["result",4]]],[11,"type_id","","",559,[[],["typeid",3]]],[11,"from","","",560,[[]]],[11,"borrow","","",560,[[]]],[11,"borrow_mut","","",560,[[]]],[11,"try_from","","",560,[[],["result",4]]],[11,"into","","",560,[[]]],[11,"try_into","","",560,[[],["result",4]]],[11,"type_id","","",560,[[],["typeid",3]]],[11,"from","","",561,[[]]],[11,"borrow","","",561,[[]]],[11,"borrow_mut","","",561,[[]]],[11,"try_from","","",561,[[],["result",4]]],[11,"into","","",561,[[]]],[11,"try_into","","",561,[[],["result",4]]],[11,"type_id","","",561,[[],["typeid",3]]],[11,"from","","",562,[[]]],[11,"borrow","","",562,[[]]],[11,"borrow_mut","","",562,[[]]],[11,"try_from","","",562,[[],["result",4]]],[11,"into","","",562,[[]]],[11,"try_into","","",562,[[],["result",4]]],[11,"type_id","","",562,[[],["typeid",3]]],[11,"from","","",563,[[]]],[11,"borrow","","",563,[[]]],[11,"borrow_mut","","",563,[[]]],[11,"try_from","","",563,[[],["result",4]]],[11,"into","","",563,[[]]],[11,"try_into","","",563,[[],["result",4]]],[11,"type_id","","",563,[[],["typeid",3]]],[11,"from","","",564,[[]]],[11,"borrow","","",564,[[]]],[11,"borrow_mut","","",564,[[]]],[11,"try_from","","",564,[[],["result",4]]],[11,"into","","",564,[[]]],[11,"try_into","","",564,[[],["result",4]]],[11,"type_id","","",564,[[],["typeid",3]]],[11,"from","","",565,[[]]],[11,"borrow","","",565,[[]]],[11,"borrow_mut","","",565,[[]]],[11,"try_from","","",565,[[],["result",4]]],[11,"into","","",565,[[]]],[11,"try_into","","",565,[[],["result",4]]],[11,"type_id","","",565,[[],["typeid",3]]],[11,"from","","",566,[[]]],[11,"borrow","","",566,[[]]],[11,"borrow_mut","","",566,[[]]],[11,"try_from","","",566,[[],["result",4]]],[11,"into","","",566,[[]]],[11,"try_into","","",566,[[],["result",4]]],[11,"type_id","","",566,[[],["typeid",3]]],[11,"from","","",567,[[]]],[11,"borrow","","",567,[[]]],[11,"borrow_mut","","",567,[[]]],[11,"try_from","","",567,[[],["result",4]]],[11,"into","","",567,[[]]],[11,"try_into","","",567,[[],["result",4]]],[11,"type_id","","",567,[[],["typeid",3]]],[11,"from","","",568,[[]]],[11,"borrow","","",568,[[]]],[11,"borrow_mut","","",568,[[]]],[11,"try_from","","",568,[[],["result",4]]],[11,"into","","",568,[[]]],[11,"try_into","","",568,[[],["result",4]]],[11,"type_id","","",568,[[],["typeid",3]]],[11,"from","","",569,[[]]],[11,"borrow","","",569,[[]]],[11,"borrow_mut","","",569,[[]]],[11,"try_from","","",569,[[],["result",4]]],[11,"into","","",569,[[]]],[11,"try_into","","",569,[[],["result",4]]],[11,"type_id","","",569,[[],["typeid",3]]],[11,"from","","",570,[[]]],[11,"borrow","","",570,[[]]],[11,"borrow_mut","","",570,[[]]],[11,"try_from","","",570,[[],["result",4]]],[11,"into","","",570,[[]]],[11,"try_into","","",570,[[],["result",4]]],[11,"type_id","","",570,[[],["typeid",3]]],[11,"from","","",571,[[]]],[11,"borrow","","",571,[[]]],[11,"borrow_mut","","",571,[[]]],[11,"try_from","","",571,[[],["result",4]]],[11,"into","","",571,[[]]],[11,"try_into","","",571,[[],["result",4]]],[11,"type_id","","",571,[[],["typeid",3]]],[11,"from","atsamd21g::evsys::intenset","",574,[[]]],[11,"borrow","","",574,[[]]],[11,"borrow_mut","","",574,[[]]],[11,"try_from","","",574,[[],["result",4]]],[11,"into","","",574,[[]]],[11,"try_into","","",574,[[],["result",4]]],[11,"type_id","","",574,[[],["typeid",3]]],[11,"from","","",575,[[]]],[11,"borrow","","",575,[[]]],[11,"borrow_mut","","",575,[[]]],[11,"try_from","","",575,[[],["result",4]]],[11,"into","","",575,[[]]],[11,"try_into","","",575,[[],["result",4]]],[11,"type_id","","",575,[[],["typeid",3]]],[11,"from","","",576,[[]]],[11,"borrow","","",576,[[]]],[11,"borrow_mut","","",576,[[]]],[11,"try_from","","",576,[[],["result",4]]],[11,"into","","",576,[[]]],[11,"try_into","","",576,[[],["result",4]]],[11,"type_id","","",576,[[],["typeid",3]]],[11,"from","","",577,[[]]],[11,"borrow","","",577,[[]]],[11,"borrow_mut","","",577,[[]]],[11,"try_from","","",577,[[],["result",4]]],[11,"into","","",577,[[]]],[11,"try_into","","",577,[[],["result",4]]],[11,"type_id","","",577,[[],["typeid",3]]],[11,"from","","",578,[[]]],[11,"borrow","","",578,[[]]],[11,"borrow_mut","","",578,[[]]],[11,"try_from","","",578,[[],["result",4]]],[11,"into","","",578,[[]]],[11,"try_into","","",578,[[],["result",4]]],[11,"type_id","","",578,[[],["typeid",3]]],[11,"from","","",579,[[]]],[11,"borrow","","",579,[[]]],[11,"borrow_mut","","",579,[[]]],[11,"try_from","","",579,[[],["result",4]]],[11,"into","","",579,[[]]],[11,"try_into","","",579,[[],["result",4]]],[11,"type_id","","",579,[[],["typeid",3]]],[11,"from","","",580,[[]]],[11,"borrow","","",580,[[]]],[11,"borrow_mut","","",580,[[]]],[11,"try_from","","",580,[[],["result",4]]],[11,"into","","",580,[[]]],[11,"try_into","","",580,[[],["result",4]]],[11,"type_id","","",580,[[],["typeid",3]]],[11,"from","","",581,[[]]],[11,"borrow","","",581,[[]]],[11,"borrow_mut","","",581,[[]]],[11,"try_from","","",581,[[],["result",4]]],[11,"into","","",581,[[]]],[11,"try_into","","",581,[[],["result",4]]],[11,"type_id","","",581,[[],["typeid",3]]],[11,"from","","",582,[[]]],[11,"borrow","","",582,[[]]],[11,"borrow_mut","","",582,[[]]],[11,"try_from","","",582,[[],["result",4]]],[11,"into","","",582,[[]]],[11,"try_into","","",582,[[],["result",4]]],[11,"type_id","","",582,[[],["typeid",3]]],[11,"from","","",583,[[]]],[11,"borrow","","",583,[[]]],[11,"borrow_mut","","",583,[[]]],[11,"try_from","","",583,[[],["result",4]]],[11,"into","","",583,[[]]],[11,"try_into","","",583,[[],["result",4]]],[11,"type_id","","",583,[[],["typeid",3]]],[11,"from","","",584,[[]]],[11,"borrow","","",584,[[]]],[11,"borrow_mut","","",584,[[]]],[11,"try_from","","",584,[[],["result",4]]],[11,"into","","",584,[[]]],[11,"try_into","","",584,[[],["result",4]]],[11,"type_id","","",584,[[],["typeid",3]]],[11,"from","","",585,[[]]],[11,"borrow","","",585,[[]]],[11,"borrow_mut","","",585,[[]]],[11,"try_from","","",585,[[],["result",4]]],[11,"into","","",585,[[]]],[11,"try_into","","",585,[[],["result",4]]],[11,"type_id","","",585,[[],["typeid",3]]],[11,"from","","",586,[[]]],[11,"borrow","","",586,[[]]],[11,"borrow_mut","","",586,[[]]],[11,"try_from","","",586,[[],["result",4]]],[11,"into","","",586,[[]]],[11,"try_into","","",586,[[],["result",4]]],[11,"type_id","","",586,[[],["typeid",3]]],[11,"from","","",587,[[]]],[11,"borrow","","",587,[[]]],[11,"borrow_mut","","",587,[[]]],[11,"try_from","","",587,[[],["result",4]]],[11,"into","","",587,[[]]],[11,"try_into","","",587,[[],["result",4]]],[11,"type_id","","",587,[[],["typeid",3]]],[11,"from","","",588,[[]]],[11,"borrow","","",588,[[]]],[11,"borrow_mut","","",588,[[]]],[11,"try_from","","",588,[[],["result",4]]],[11,"into","","",588,[[]]],[11,"try_into","","",588,[[],["result",4]]],[11,"type_id","","",588,[[],["typeid",3]]],[11,"from","","",589,[[]]],[11,"borrow","","",589,[[]]],[11,"borrow_mut","","",589,[[]]],[11,"try_from","","",589,[[],["result",4]]],[11,"into","","",589,[[]]],[11,"try_into","","",589,[[],["result",4]]],[11,"type_id","","",589,[[],["typeid",3]]],[11,"from","","",590,[[]]],[11,"borrow","","",590,[[]]],[11,"borrow_mut","","",590,[[]]],[11,"try_from","","",590,[[],["result",4]]],[11,"into","","",590,[[]]],[11,"try_into","","",590,[[],["result",4]]],[11,"type_id","","",590,[[],["typeid",3]]],[11,"from","","",591,[[]]],[11,"borrow","","",591,[[]]],[11,"borrow_mut","","",591,[[]]],[11,"try_from","","",591,[[],["result",4]]],[11,"into","","",591,[[]]],[11,"try_into","","",591,[[],["result",4]]],[11,"type_id","","",591,[[],["typeid",3]]],[11,"from","","",592,[[]]],[11,"borrow","","",592,[[]]],[11,"borrow_mut","","",592,[[]]],[11,"try_from","","",592,[[],["result",4]]],[11,"into","","",592,[[]]],[11,"try_into","","",592,[[],["result",4]]],[11,"type_id","","",592,[[],["typeid",3]]],[11,"from","","",593,[[]]],[11,"borrow","","",593,[[]]],[11,"borrow_mut","","",593,[[]]],[11,"try_from","","",593,[[],["result",4]]],[11,"into","","",593,[[]]],[11,"try_into","","",593,[[],["result",4]]],[11,"type_id","","",593,[[],["typeid",3]]],[11,"from","","",594,[[]]],[11,"borrow","","",594,[[]]],[11,"borrow_mut","","",594,[[]]],[11,"try_from","","",594,[[],["result",4]]],[11,"into","","",594,[[]]],[11,"try_into","","",594,[[],["result",4]]],[11,"type_id","","",594,[[],["typeid",3]]],[11,"from","","",595,[[]]],[11,"borrow","","",595,[[]]],[11,"borrow_mut","","",595,[[]]],[11,"try_from","","",595,[[],["result",4]]],[11,"into","","",595,[[]]],[11,"try_into","","",595,[[],["result",4]]],[11,"type_id","","",595,[[],["typeid",3]]],[11,"from","","",596,[[]]],[11,"borrow","","",596,[[]]],[11,"borrow_mut","","",596,[[]]],[11,"try_from","","",596,[[],["result",4]]],[11,"into","","",596,[[]]],[11,"try_into","","",596,[[],["result",4]]],[11,"type_id","","",596,[[],["typeid",3]]],[11,"from","","",597,[[]]],[11,"borrow","","",597,[[]]],[11,"borrow_mut","","",597,[[]]],[11,"try_from","","",597,[[],["result",4]]],[11,"into","","",597,[[]]],[11,"try_into","","",597,[[],["result",4]]],[11,"type_id","","",597,[[],["typeid",3]]],[11,"from","atsamd21g::evsys::intflag","",600,[[]]],[11,"borrow","","",600,[[]]],[11,"borrow_mut","","",600,[[]]],[11,"try_from","","",600,[[],["result",4]]],[11,"into","","",600,[[]]],[11,"try_into","","",600,[[],["result",4]]],[11,"type_id","","",600,[[],["typeid",3]]],[11,"from","","",601,[[]]],[11,"borrow","","",601,[[]]],[11,"borrow_mut","","",601,[[]]],[11,"try_from","","",601,[[],["result",4]]],[11,"into","","",601,[[]]],[11,"try_into","","",601,[[],["result",4]]],[11,"type_id","","",601,[[],["typeid",3]]],[11,"from","","",602,[[]]],[11,"borrow","","",602,[[]]],[11,"borrow_mut","","",602,[[]]],[11,"try_from","","",602,[[],["result",4]]],[11,"into","","",602,[[]]],[11,"try_into","","",602,[[],["result",4]]],[11,"type_id","","",602,[[],["typeid",3]]],[11,"from","","",603,[[]]],[11,"borrow","","",603,[[]]],[11,"borrow_mut","","",603,[[]]],[11,"try_from","","",603,[[],["result",4]]],[11,"into","","",603,[[]]],[11,"try_into","","",603,[[],["result",4]]],[11,"type_id","","",603,[[],["typeid",3]]],[11,"from","","",604,[[]]],[11,"borrow","","",604,[[]]],[11,"borrow_mut","","",604,[[]]],[11,"try_from","","",604,[[],["result",4]]],[11,"into","","",604,[[]]],[11,"try_into","","",604,[[],["result",4]]],[11,"type_id","","",604,[[],["typeid",3]]],[11,"from","","",605,[[]]],[11,"borrow","","",605,[[]]],[11,"borrow_mut","","",605,[[]]],[11,"try_from","","",605,[[],["result",4]]],[11,"into","","",605,[[]]],[11,"try_into","","",605,[[],["result",4]]],[11,"type_id","","",605,[[],["typeid",3]]],[11,"from","","",606,[[]]],[11,"borrow","","",606,[[]]],[11,"borrow_mut","","",606,[[]]],[11,"try_from","","",606,[[],["result",4]]],[11,"into","","",606,[[]]],[11,"try_into","","",606,[[],["result",4]]],[11,"type_id","","",606,[[],["typeid",3]]],[11,"from","","",607,[[]]],[11,"borrow","","",607,[[]]],[11,"borrow_mut","","",607,[[]]],[11,"try_from","","",607,[[],["result",4]]],[11,"into","","",607,[[]]],[11,"try_into","","",607,[[],["result",4]]],[11,"type_id","","",607,[[],["typeid",3]]],[11,"from","","",608,[[]]],[11,"borrow","","",608,[[]]],[11,"borrow_mut","","",608,[[]]],[11,"try_from","","",608,[[],["result",4]]],[11,"into","","",608,[[]]],[11,"try_into","","",608,[[],["result",4]]],[11,"type_id","","",608,[[],["typeid",3]]],[11,"from","","",609,[[]]],[11,"borrow","","",609,[[]]],[11,"borrow_mut","","",609,[[]]],[11,"try_from","","",609,[[],["result",4]]],[11,"into","","",609,[[]]],[11,"try_into","","",609,[[],["result",4]]],[11,"type_id","","",609,[[],["typeid",3]]],[11,"from","","",610,[[]]],[11,"borrow","","",610,[[]]],[11,"borrow_mut","","",610,[[]]],[11,"try_from","","",610,[[],["result",4]]],[11,"into","","",610,[[]]],[11,"try_into","","",610,[[],["result",4]]],[11,"type_id","","",610,[[],["typeid",3]]],[11,"from","","",611,[[]]],[11,"borrow","","",611,[[]]],[11,"borrow_mut","","",611,[[]]],[11,"try_from","","",611,[[],["result",4]]],[11,"into","","",611,[[]]],[11,"try_into","","",611,[[],["result",4]]],[11,"type_id","","",611,[[],["typeid",3]]],[11,"from","","",612,[[]]],[11,"borrow","","",612,[[]]],[11,"borrow_mut","","",612,[[]]],[11,"try_from","","",612,[[],["result",4]]],[11,"into","","",612,[[]]],[11,"try_into","","",612,[[],["result",4]]],[11,"type_id","","",612,[[],["typeid",3]]],[11,"from","","",613,[[]]],[11,"borrow","","",613,[[]]],[11,"borrow_mut","","",613,[[]]],[11,"try_from","","",613,[[],["result",4]]],[11,"into","","",613,[[]]],[11,"try_into","","",613,[[],["result",4]]],[11,"type_id","","",613,[[],["typeid",3]]],[11,"from","","",614,[[]]],[11,"borrow","","",614,[[]]],[11,"borrow_mut","","",614,[[]]],[11,"try_from","","",614,[[],["result",4]]],[11,"into","","",614,[[]]],[11,"try_into","","",614,[[],["result",4]]],[11,"type_id","","",614,[[],["typeid",3]]],[11,"from","","",615,[[]]],[11,"borrow","","",615,[[]]],[11,"borrow_mut","","",615,[[]]],[11,"try_from","","",615,[[],["result",4]]],[11,"into","","",615,[[]]],[11,"try_into","","",615,[[],["result",4]]],[11,"type_id","","",615,[[],["typeid",3]]],[11,"from","","",616,[[]]],[11,"borrow","","",616,[[]]],[11,"borrow_mut","","",616,[[]]],[11,"try_from","","",616,[[],["result",4]]],[11,"into","","",616,[[]]],[11,"try_into","","",616,[[],["result",4]]],[11,"type_id","","",616,[[],["typeid",3]]],[11,"from","","",617,[[]]],[11,"borrow","","",617,[[]]],[11,"borrow_mut","","",617,[[]]],[11,"try_from","","",617,[[],["result",4]]],[11,"into","","",617,[[]]],[11,"try_into","","",617,[[],["result",4]]],[11,"type_id","","",617,[[],["typeid",3]]],[11,"from","","",618,[[]]],[11,"borrow","","",618,[[]]],[11,"borrow_mut","","",618,[[]]],[11,"try_from","","",618,[[],["result",4]]],[11,"into","","",618,[[]]],[11,"try_into","","",618,[[],["result",4]]],[11,"type_id","","",618,[[],["typeid",3]]],[11,"from","","",619,[[]]],[11,"borrow","","",619,[[]]],[11,"borrow_mut","","",619,[[]]],[11,"try_from","","",619,[[],["result",4]]],[11,"into","","",619,[[]]],[11,"try_into","","",619,[[],["result",4]]],[11,"type_id","","",619,[[],["typeid",3]]],[11,"from","","",620,[[]]],[11,"borrow","","",620,[[]]],[11,"borrow_mut","","",620,[[]]],[11,"try_from","","",620,[[],["result",4]]],[11,"into","","",620,[[]]],[11,"try_into","","",620,[[],["result",4]]],[11,"type_id","","",620,[[],["typeid",3]]],[11,"from","","",621,[[]]],[11,"borrow","","",621,[[]]],[11,"borrow_mut","","",621,[[]]],[11,"try_from","","",621,[[],["result",4]]],[11,"into","","",621,[[]]],[11,"try_into","","",621,[[],["result",4]]],[11,"type_id","","",621,[[],["typeid",3]]],[11,"from","","",622,[[]]],[11,"borrow","","",622,[[]]],[11,"borrow_mut","","",622,[[]]],[11,"try_from","","",622,[[],["result",4]]],[11,"into","","",622,[[]]],[11,"try_into","","",622,[[],["result",4]]],[11,"type_id","","",622,[[],["typeid",3]]],[11,"from","","",623,[[]]],[11,"borrow","","",623,[[]]],[11,"borrow_mut","","",623,[[]]],[11,"try_from","","",623,[[],["result",4]]],[11,"into","","",623,[[]]],[11,"try_into","","",623,[[],["result",4]]],[11,"type_id","","",623,[[],["typeid",3]]],[11,"from","atsamd21g::gclk","",626,[[]]],[11,"borrow","","",626,[[]]],[11,"borrow_mut","","",626,[[]]],[11,"try_from","","",626,[[],["result",4]]],[11,"into","","",626,[[]]],[11,"try_into","","",626,[[],["result",4]]],[11,"type_id","","",626,[[],["typeid",3]]],[11,"from","atsamd21g::gclk::ctrl","",627,[[]]],[11,"borrow","","",627,[[]]],[11,"borrow_mut","","",627,[[]]],[11,"try_from","","",627,[[],["result",4]]],[11,"into","","",627,[[]]],[11,"try_into","","",627,[[],["result",4]]],[11,"type_id","","",627,[[],["typeid",3]]],[11,"from","atsamd21g::gclk::clkctrl","",634,[[]]],[11,"borrow","","",634,[[]]],[11,"borrow_mut","","",634,[[]]],[11,"try_from","","",634,[[],["result",4]]],[11,"into","","",634,[[]]],[11,"try_into","","",634,[[],["result",4]]],[11,"type_id","","",634,[[],["typeid",3]]],[11,"from","","",636,[[]]],[11,"borrow","","",636,[[]]],[11,"borrow_mut","","",636,[[]]],[11,"try_from","","",636,[[],["result",4]]],[11,"into","","",636,[[]]],[11,"try_into","","",636,[[],["result",4]]],[11,"type_id","","",636,[[],["typeid",3]]],[11,"from","","",637,[[]]],[11,"borrow","","",637,[[]]],[11,"borrow_mut","","",637,[[]]],[11,"try_from","","",637,[[],["result",4]]],[11,"into","","",637,[[]]],[11,"try_into","","",637,[[],["result",4]]],[11,"type_id","","",637,[[],["typeid",3]]],[11,"from","","",638,[[]]],[11,"borrow","","",638,[[]]],[11,"borrow_mut","","",638,[[]]],[11,"try_from","","",638,[[],["result",4]]],[11,"into","","",638,[[]]],[11,"try_into","","",638,[[],["result",4]]],[11,"type_id","","",638,[[],["typeid",3]]],[11,"from","","",631,[[]]],[11,"borrow","","",631,[[]]],[11,"borrow_mut","","",631,[[]]],[11,"try_from","","",631,[[],["result",4]]],[11,"into","","",631,[[]]],[11,"try_into","","",631,[[],["result",4]]],[11,"type_id","","",631,[[],["typeid",3]]],[11,"from","","",632,[[]]],[11,"borrow","","",632,[[]]],[11,"borrow_mut","","",632,[[]]],[11,"try_from","","",632,[[],["result",4]]],[11,"into","","",632,[[]]],[11,"try_into","","",632,[[],["result",4]]],[11,"type_id","","",632,[[],["typeid",3]]],[11,"from","atsamd21g::gclk::genctrl","",642,[[]]],[11,"borrow","","",642,[[]]],[11,"borrow_mut","","",642,[[]]],[11,"try_from","","",642,[[],["result",4]]],[11,"into","","",642,[[]]],[11,"try_into","","",642,[[],["result",4]]],[11,"type_id","","",642,[[],["typeid",3]]],[11,"from","","",644,[[]]],[11,"borrow","","",644,[[]]],[11,"borrow_mut","","",644,[[]]],[11,"try_from","","",644,[[],["result",4]]],[11,"into","","",644,[[]]],[11,"try_into","","",644,[[],["result",4]]],[11,"type_id","","",644,[[],["typeid",3]]],[11,"from","","",645,[[]]],[11,"borrow","","",645,[[]]],[11,"borrow_mut","","",645,[[]]],[11,"try_from","","",645,[[],["result",4]]],[11,"into","","",645,[[]]],[11,"try_into","","",645,[[],["result",4]]],[11,"type_id","","",645,[[],["typeid",3]]],[11,"from","","",646,[[]]],[11,"borrow","","",646,[[]]],[11,"borrow_mut","","",646,[[]]],[11,"try_from","","",646,[[],["result",4]]],[11,"into","","",646,[[]]],[11,"try_into","","",646,[[],["result",4]]],[11,"type_id","","",646,[[],["typeid",3]]],[11,"from","","",647,[[]]],[11,"borrow","","",647,[[]]],[11,"borrow_mut","","",647,[[]]],[11,"try_from","","",647,[[],["result",4]]],[11,"into","","",647,[[]]],[11,"try_into","","",647,[[],["result",4]]],[11,"type_id","","",647,[[],["typeid",3]]],[11,"from","","",648,[[]]],[11,"borrow","","",648,[[]]],[11,"borrow_mut","","",648,[[]]],[11,"try_from","","",648,[[],["result",4]]],[11,"into","","",648,[[]]],[11,"try_into","","",648,[[],["result",4]]],[11,"type_id","","",648,[[],["typeid",3]]],[11,"from","","",649,[[]]],[11,"borrow","","",649,[[]]],[11,"borrow_mut","","",649,[[]]],[11,"try_from","","",649,[[],["result",4]]],[11,"into","","",649,[[]]],[11,"try_into","","",649,[[],["result",4]]],[11,"type_id","","",649,[[],["typeid",3]]],[11,"from","","",650,[[]]],[11,"borrow","","",650,[[]]],[11,"borrow_mut","","",650,[[]]],[11,"try_from","","",650,[[],["result",4]]],[11,"into","","",650,[[]]],[11,"try_into","","",650,[[],["result",4]]],[11,"type_id","","",650,[[],["typeid",3]]],[11,"from","","",641,[[]]],[11,"borrow","","",641,[[]]],[11,"borrow_mut","","",641,[[]]],[11,"try_from","","",641,[[],["result",4]]],[11,"into","","",641,[[]]],[11,"try_into","","",641,[[],["result",4]]],[11,"type_id","","",641,[[],["typeid",3]]],[11,"from","atsamd21g::gclk::gendiv","",653,[[]]],[11,"borrow","","",653,[[]]],[11,"borrow_mut","","",653,[[]]],[11,"try_from","","",653,[[],["result",4]]],[11,"into","","",653,[[]]],[11,"try_into","","",653,[[],["result",4]]],[11,"type_id","","",653,[[],["typeid",3]]],[11,"from","","",654,[[]]],[11,"borrow","","",654,[[]]],[11,"borrow_mut","","",654,[[]]],[11,"try_from","","",654,[[],["result",4]]],[11,"into","","",654,[[]]],[11,"try_into","","",654,[[],["result",4]]],[11,"type_id","","",654,[[],["typeid",3]]],[11,"from","atsamd21g::hmatrix","",657,[[]]],[11,"borrow","","",657,[[]]],[11,"borrow_mut","","",657,[[]]],[11,"try_from","","",657,[[],["result",4]]],[11,"into","","",657,[[]]],[11,"try_into","","",657,[[],["result",4]]],[11,"type_id","","",657,[[],["typeid",3]]],[11,"from","atsamd21g::hmatrix::sfr","",658,[[]]],[11,"borrow","","",658,[[]]],[11,"borrow_mut","","",658,[[]]],[11,"try_from","","",658,[[],["result",4]]],[11,"into","","",658,[[]]],[11,"try_into","","",658,[[],["result",4]]],[11,"type_id","","",658,[[],["typeid",3]]],[11,"from","atsamd21g::i2s","",661,[[]]],[11,"borrow","","",661,[[]]],[11,"borrow_mut","","",661,[[]]],[11,"try_from","","",661,[[],["result",4]]],[11,"into","","",661,[[]]],[11,"try_into","","",661,[[],["result",4]]],[11,"type_id","","",661,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::ctrla","",662,[[]]],[11,"borrow","","",662,[[]]],[11,"borrow_mut","","",662,[[]]],[11,"try_from","","",662,[[],["result",4]]],[11,"into","","",662,[[]]],[11,"try_into","","",662,[[],["result",4]]],[11,"type_id","","",662,[[],["typeid",3]]],[11,"from","","",663,[[]]],[11,"borrow","","",663,[[]]],[11,"borrow_mut","","",663,[[]]],[11,"try_from","","",663,[[],["result",4]]],[11,"into","","",663,[[]]],[11,"try_into","","",663,[[],["result",4]]],[11,"type_id","","",663,[[],["typeid",3]]],[11,"from","","",664,[[]]],[11,"borrow","","",664,[[]]],[11,"borrow_mut","","",664,[[]]],[11,"try_from","","",664,[[],["result",4]]],[11,"into","","",664,[[]]],[11,"try_into","","",664,[[],["result",4]]],[11,"type_id","","",664,[[],["typeid",3]]],[11,"from","","",665,[[]]],[11,"borrow","","",665,[[]]],[11,"borrow_mut","","",665,[[]]],[11,"try_from","","",665,[[],["result",4]]],[11,"into","","",665,[[]]],[11,"try_into","","",665,[[],["result",4]]],[11,"type_id","","",665,[[],["typeid",3]]],[11,"from","","",666,[[]]],[11,"borrow","","",666,[[]]],[11,"borrow_mut","","",666,[[]]],[11,"try_from","","",666,[[],["result",4]]],[11,"into","","",666,[[]]],[11,"try_into","","",666,[[],["result",4]]],[11,"type_id","","",666,[[],["typeid",3]]],[11,"from","","",667,[[]]],[11,"borrow","","",667,[[]]],[11,"borrow_mut","","",667,[[]]],[11,"try_from","","",667,[[],["result",4]]],[11,"into","","",667,[[]]],[11,"try_into","","",667,[[],["result",4]]],[11,"type_id","","",667,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::clkctrl","",677,[[]]],[11,"borrow","","",677,[[]]],[11,"borrow_mut","","",677,[[]]],[11,"try_from","","",677,[[],["result",4]]],[11,"into","","",677,[[]]],[11,"try_into","","",677,[[],["result",4]]],[11,"type_id","","",677,[[],["typeid",3]]],[11,"from","","",678,[[]]],[11,"borrow","","",678,[[]]],[11,"borrow_mut","","",678,[[]]],[11,"try_from","","",678,[[],["result",4]]],[11,"into","","",678,[[]]],[11,"try_into","","",678,[[],["result",4]]],[11,"type_id","","",678,[[],["typeid",3]]],[11,"from","","",680,[[]]],[11,"borrow","","",680,[[]]],[11,"borrow_mut","","",680,[[]]],[11,"try_from","","",680,[[],["result",4]]],[11,"into","","",680,[[]]],[11,"try_into","","",680,[[],["result",4]]],[11,"type_id","","",680,[[],["typeid",3]]],[11,"from","","",682,[[]]],[11,"borrow","","",682,[[]]],[11,"borrow_mut","","",682,[[]]],[11,"try_from","","",682,[[],["result",4]]],[11,"into","","",682,[[]]],[11,"try_into","","",682,[[],["result",4]]],[11,"type_id","","",682,[[],["typeid",3]]],[11,"from","","",684,[[]]],[11,"borrow","","",684,[[]]],[11,"borrow_mut","","",684,[[]]],[11,"try_from","","",684,[[],["result",4]]],[11,"into","","",684,[[]]],[11,"try_into","","",684,[[],["result",4]]],[11,"type_id","","",684,[[],["typeid",3]]],[11,"from","","",685,[[]]],[11,"borrow","","",685,[[]]],[11,"borrow_mut","","",685,[[]]],[11,"try_from","","",685,[[],["result",4]]],[11,"into","","",685,[[]]],[11,"try_into","","",685,[[],["result",4]]],[11,"type_id","","",685,[[],["typeid",3]]],[11,"from","","",687,[[]]],[11,"borrow","","",687,[[]]],[11,"borrow_mut","","",687,[[]]],[11,"try_from","","",687,[[],["result",4]]],[11,"into","","",687,[[]]],[11,"try_into","","",687,[[],["result",4]]],[11,"type_id","","",687,[[],["typeid",3]]],[11,"from","","",689,[[]]],[11,"borrow","","",689,[[]]],[11,"borrow_mut","","",689,[[]]],[11,"try_from","","",689,[[],["result",4]]],[11,"into","","",689,[[]]],[11,"try_into","","",689,[[],["result",4]]],[11,"type_id","","",689,[[],["typeid",3]]],[11,"from","","",690,[[]]],[11,"borrow","","",690,[[]]],[11,"borrow_mut","","",690,[[]]],[11,"try_from","","",690,[[],["result",4]]],[11,"into","","",690,[[]]],[11,"try_into","","",690,[[],["result",4]]],[11,"type_id","","",690,[[],["typeid",3]]],[11,"from","","",691,[[]]],[11,"borrow","","",691,[[]]],[11,"borrow_mut","","",691,[[]]],[11,"try_from","","",691,[[],["result",4]]],[11,"into","","",691,[[]]],[11,"try_into","","",691,[[],["result",4]]],[11,"type_id","","",691,[[],["typeid",3]]],[11,"from","","",692,[[]]],[11,"borrow","","",692,[[]]],[11,"borrow_mut","","",692,[[]]],[11,"try_from","","",692,[[],["result",4]]],[11,"into","","",692,[[]]],[11,"try_into","","",692,[[],["result",4]]],[11,"type_id","","",692,[[],["typeid",3]]],[11,"from","","",693,[[]]],[11,"borrow","","",693,[[]]],[11,"borrow_mut","","",693,[[]]],[11,"try_from","","",693,[[],["result",4]]],[11,"into","","",693,[[]]],[11,"try_into","","",693,[[],["result",4]]],[11,"type_id","","",693,[[],["typeid",3]]],[11,"from","","",694,[[]]],[11,"borrow","","",694,[[]]],[11,"borrow_mut","","",694,[[]]],[11,"try_from","","",694,[[],["result",4]]],[11,"into","","",694,[[]]],[11,"try_into","","",694,[[],["result",4]]],[11,"type_id","","",694,[[],["typeid",3]]],[11,"from","","",695,[[]]],[11,"borrow","","",695,[[]]],[11,"borrow_mut","","",695,[[]]],[11,"try_from","","",695,[[],["result",4]]],[11,"into","","",695,[[]]],[11,"try_into","","",695,[[],["result",4]]],[11,"type_id","","",695,[[],["typeid",3]]],[11,"from","","",670,[[]]],[11,"borrow","","",670,[[]]],[11,"borrow_mut","","",670,[[]]],[11,"try_from","","",670,[[],["result",4]]],[11,"into","","",670,[[]]],[11,"try_into","","",670,[[],["result",4]]],[11,"type_id","","",670,[[],["typeid",3]]],[11,"from","","",671,[[]]],[11,"borrow","","",671,[[]]],[11,"borrow_mut","","",671,[[]]],[11,"try_from","","",671,[[],["result",4]]],[11,"into","","",671,[[]]],[11,"try_into","","",671,[[],["result",4]]],[11,"type_id","","",671,[[],["typeid",3]]],[11,"from","","",672,[[]]],[11,"borrow","","",672,[[]]],[11,"borrow_mut","","",672,[[]]],[11,"try_from","","",672,[[],["result",4]]],[11,"into","","",672,[[]]],[11,"try_into","","",672,[[],["result",4]]],[11,"type_id","","",672,[[],["typeid",3]]],[11,"from","","",673,[[]]],[11,"borrow","","",673,[[]]],[11,"borrow_mut","","",673,[[]]],[11,"try_from","","",673,[[],["result",4]]],[11,"into","","",673,[[]]],[11,"try_into","","",673,[[],["result",4]]],[11,"type_id","","",673,[[],["typeid",3]]],[11,"from","","",674,[[]]],[11,"borrow","","",674,[[]]],[11,"borrow_mut","","",674,[[]]],[11,"try_from","","",674,[[],["result",4]]],[11,"into","","",674,[[]]],[11,"try_into","","",674,[[],["result",4]]],[11,"type_id","","",674,[[],["typeid",3]]],[11,"from","","",675,[[]]],[11,"borrow","","",675,[[]]],[11,"borrow_mut","","",675,[[]]],[11,"try_from","","",675,[[],["result",4]]],[11,"into","","",675,[[]]],[11,"try_into","","",675,[[],["result",4]]],[11,"type_id","","",675,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::intenclr","",698,[[]]],[11,"borrow","","",698,[[]]],[11,"borrow_mut","","",698,[[]]],[11,"try_from","","",698,[[],["result",4]]],[11,"into","","",698,[[]]],[11,"try_into","","",698,[[],["result",4]]],[11,"type_id","","",698,[[],["typeid",3]]],[11,"from","","",699,[[]]],[11,"borrow","","",699,[[]]],[11,"borrow_mut","","",699,[[]]],[11,"try_from","","",699,[[],["result",4]]],[11,"into","","",699,[[]]],[11,"try_into","","",699,[[],["result",4]]],[11,"type_id","","",699,[[],["typeid",3]]],[11,"from","","",700,[[]]],[11,"borrow","","",700,[[]]],[11,"borrow_mut","","",700,[[]]],[11,"try_from","","",700,[[],["result",4]]],[11,"into","","",700,[[]]],[11,"try_into","","",700,[[],["result",4]]],[11,"type_id","","",700,[[],["typeid",3]]],[11,"from","","",701,[[]]],[11,"borrow","","",701,[[]]],[11,"borrow_mut","","",701,[[]]],[11,"try_from","","",701,[[],["result",4]]],[11,"into","","",701,[[]]],[11,"try_into","","",701,[[],["result",4]]],[11,"type_id","","",701,[[],["typeid",3]]],[11,"from","","",702,[[]]],[11,"borrow","","",702,[[]]],[11,"borrow_mut","","",702,[[]]],[11,"try_from","","",702,[[],["result",4]]],[11,"into","","",702,[[]]],[11,"try_into","","",702,[[],["result",4]]],[11,"type_id","","",702,[[],["typeid",3]]],[11,"from","","",703,[[]]],[11,"borrow","","",703,[[]]],[11,"borrow_mut","","",703,[[]]],[11,"try_from","","",703,[[],["result",4]]],[11,"into","","",703,[[]]],[11,"try_into","","",703,[[],["result",4]]],[11,"type_id","","",703,[[],["typeid",3]]],[11,"from","","",704,[[]]],[11,"borrow","","",704,[[]]],[11,"borrow_mut","","",704,[[]]],[11,"try_from","","",704,[[],["result",4]]],[11,"into","","",704,[[]]],[11,"try_into","","",704,[[],["result",4]]],[11,"type_id","","",704,[[],["typeid",3]]],[11,"from","","",705,[[]]],[11,"borrow","","",705,[[]]],[11,"borrow_mut","","",705,[[]]],[11,"try_from","","",705,[[],["result",4]]],[11,"into","","",705,[[]]],[11,"try_into","","",705,[[],["result",4]]],[11,"type_id","","",705,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::intenset","",708,[[]]],[11,"borrow","","",708,[[]]],[11,"borrow_mut","","",708,[[]]],[11,"try_from","","",708,[[],["result",4]]],[11,"into","","",708,[[]]],[11,"try_into","","",708,[[],["result",4]]],[11,"type_id","","",708,[[],["typeid",3]]],[11,"from","","",709,[[]]],[11,"borrow","","",709,[[]]],[11,"borrow_mut","","",709,[[]]],[11,"try_from","","",709,[[],["result",4]]],[11,"into","","",709,[[]]],[11,"try_into","","",709,[[],["result",4]]],[11,"type_id","","",709,[[],["typeid",3]]],[11,"from","","",710,[[]]],[11,"borrow","","",710,[[]]],[11,"borrow_mut","","",710,[[]]],[11,"try_from","","",710,[[],["result",4]]],[11,"into","","",710,[[]]],[11,"try_into","","",710,[[],["result",4]]],[11,"type_id","","",710,[[],["typeid",3]]],[11,"from","","",711,[[]]],[11,"borrow","","",711,[[]]],[11,"borrow_mut","","",711,[[]]],[11,"try_from","","",711,[[],["result",4]]],[11,"into","","",711,[[]]],[11,"try_into","","",711,[[],["result",4]]],[11,"type_id","","",711,[[],["typeid",3]]],[11,"from","","",712,[[]]],[11,"borrow","","",712,[[]]],[11,"borrow_mut","","",712,[[]]],[11,"try_from","","",712,[[],["result",4]]],[11,"into","","",712,[[]]],[11,"try_into","","",712,[[],["result",4]]],[11,"type_id","","",712,[[],["typeid",3]]],[11,"from","","",713,[[]]],[11,"borrow","","",713,[[]]],[11,"borrow_mut","","",713,[[]]],[11,"try_from","","",713,[[],["result",4]]],[11,"into","","",713,[[]]],[11,"try_into","","",713,[[],["result",4]]],[11,"type_id","","",713,[[],["typeid",3]]],[11,"from","","",714,[[]]],[11,"borrow","","",714,[[]]],[11,"borrow_mut","","",714,[[]]],[11,"try_from","","",714,[[],["result",4]]],[11,"into","","",714,[[]]],[11,"try_into","","",714,[[],["result",4]]],[11,"type_id","","",714,[[],["typeid",3]]],[11,"from","","",715,[[]]],[11,"borrow","","",715,[[]]],[11,"borrow_mut","","",715,[[]]],[11,"try_from","","",715,[[],["result",4]]],[11,"into","","",715,[[]]],[11,"try_into","","",715,[[],["result",4]]],[11,"type_id","","",715,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::intflag","",718,[[]]],[11,"borrow","","",718,[[]]],[11,"borrow_mut","","",718,[[]]],[11,"try_from","","",718,[[],["result",4]]],[11,"into","","",718,[[]]],[11,"try_into","","",718,[[],["result",4]]],[11,"type_id","","",718,[[],["typeid",3]]],[11,"from","","",719,[[]]],[11,"borrow","","",719,[[]]],[11,"borrow_mut","","",719,[[]]],[11,"try_from","","",719,[[],["result",4]]],[11,"into","","",719,[[]]],[11,"try_into","","",719,[[],["result",4]]],[11,"type_id","","",719,[[],["typeid",3]]],[11,"from","","",720,[[]]],[11,"borrow","","",720,[[]]],[11,"borrow_mut","","",720,[[]]],[11,"try_from","","",720,[[],["result",4]]],[11,"into","","",720,[[]]],[11,"try_into","","",720,[[],["result",4]]],[11,"type_id","","",720,[[],["typeid",3]]],[11,"from","","",721,[[]]],[11,"borrow","","",721,[[]]],[11,"borrow_mut","","",721,[[]]],[11,"try_from","","",721,[[],["result",4]]],[11,"into","","",721,[[]]],[11,"try_into","","",721,[[],["result",4]]],[11,"type_id","","",721,[[],["typeid",3]]],[11,"from","","",722,[[]]],[11,"borrow","","",722,[[]]],[11,"borrow_mut","","",722,[[]]],[11,"try_from","","",722,[[],["result",4]]],[11,"into","","",722,[[]]],[11,"try_into","","",722,[[],["result",4]]],[11,"type_id","","",722,[[],["typeid",3]]],[11,"from","","",723,[[]]],[11,"borrow","","",723,[[]]],[11,"borrow_mut","","",723,[[]]],[11,"try_from","","",723,[[],["result",4]]],[11,"into","","",723,[[]]],[11,"try_into","","",723,[[],["result",4]]],[11,"type_id","","",723,[[],["typeid",3]]],[11,"from","","",724,[[]]],[11,"borrow","","",724,[[]]],[11,"borrow_mut","","",724,[[]]],[11,"try_from","","",724,[[],["result",4]]],[11,"into","","",724,[[]]],[11,"try_into","","",724,[[],["result",4]]],[11,"type_id","","",724,[[],["typeid",3]]],[11,"from","","",725,[[]]],[11,"borrow","","",725,[[]]],[11,"borrow_mut","","",725,[[]]],[11,"try_from","","",725,[[],["result",4]]],[11,"into","","",725,[[]]],[11,"try_into","","",725,[[],["result",4]]],[11,"type_id","","",725,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::serctrl","",741,[[]]],[11,"borrow","","",741,[[]]],[11,"borrow_mut","","",741,[[]]],[11,"try_from","","",741,[[],["result",4]]],[11,"into","","",741,[[]]],[11,"try_into","","",741,[[],["result",4]]],[11,"type_id","","",741,[[],["typeid",3]]],[11,"from","","",743,[[]]],[11,"borrow","","",743,[[]]],[11,"borrow_mut","","",743,[[]]],[11,"try_from","","",743,[[],["result",4]]],[11,"into","","",743,[[]]],[11,"try_into","","",743,[[],["result",4]]],[11,"type_id","","",743,[[],["typeid",3]]],[11,"from","","",745,[[]]],[11,"borrow","","",745,[[]]],[11,"borrow_mut","","",745,[[]]],[11,"try_from","","",745,[[],["result",4]]],[11,"into","","",745,[[]]],[11,"try_into","","",745,[[],["result",4]]],[11,"type_id","","",745,[[],["typeid",3]]],[11,"from","","",747,[[]]],[11,"borrow","","",747,[[]]],[11,"borrow_mut","","",747,[[]]],[11,"try_from","","",747,[[],["result",4]]],[11,"into","","",747,[[]]],[11,"try_into","","",747,[[],["result",4]]],[11,"type_id","","",747,[[],["typeid",3]]],[11,"from","","",749,[[]]],[11,"borrow","","",749,[[]]],[11,"borrow_mut","","",749,[[]]],[11,"try_from","","",749,[[],["result",4]]],[11,"into","","",749,[[]]],[11,"try_into","","",749,[[],["result",4]]],[11,"type_id","","",749,[[],["typeid",3]]],[11,"from","","",751,[[]]],[11,"borrow","","",751,[[]]],[11,"borrow_mut","","",751,[[]]],[11,"try_from","","",751,[[],["result",4]]],[11,"into","","",751,[[]]],[11,"try_into","","",751,[[],["result",4]]],[11,"type_id","","",751,[[],["typeid",3]]],[11,"from","","",753,[[]]],[11,"borrow","","",753,[[]]],[11,"borrow_mut","","",753,[[]]],[11,"try_from","","",753,[[],["result",4]]],[11,"into","","",753,[[]]],[11,"try_into","","",753,[[],["result",4]]],[11,"type_id","","",753,[[],["typeid",3]]],[11,"from","","",755,[[]]],[11,"borrow","","",755,[[]]],[11,"borrow_mut","","",755,[[]]],[11,"try_from","","",755,[[],["result",4]]],[11,"into","","",755,[[]]],[11,"try_into","","",755,[[],["result",4]]],[11,"type_id","","",755,[[],["typeid",3]]],[11,"from","","",757,[[]]],[11,"borrow","","",757,[[]]],[11,"borrow_mut","","",757,[[]]],[11,"try_from","","",757,[[],["result",4]]],[11,"into","","",757,[[]]],[11,"try_into","","",757,[[],["result",4]]],[11,"type_id","","",757,[[],["typeid",3]]],[11,"from","","",758,[[]]],[11,"borrow","","",758,[[]]],[11,"borrow_mut","","",758,[[]]],[11,"try_from","","",758,[[],["result",4]]],[11,"into","","",758,[[]]],[11,"try_into","","",758,[[],["result",4]]],[11,"type_id","","",758,[[],["typeid",3]]],[11,"from","","",759,[[]]],[11,"borrow","","",759,[[]]],[11,"borrow_mut","","",759,[[]]],[11,"try_from","","",759,[[],["result",4]]],[11,"into","","",759,[[]]],[11,"try_into","","",759,[[],["result",4]]],[11,"type_id","","",759,[[],["typeid",3]]],[11,"from","","",760,[[]]],[11,"borrow","","",760,[[]]],[11,"borrow_mut","","",760,[[]]],[11,"try_from","","",760,[[],["result",4]]],[11,"into","","",760,[[]]],[11,"try_into","","",760,[[],["result",4]]],[11,"type_id","","",760,[[],["typeid",3]]],[11,"from","","",761,[[]]],[11,"borrow","","",761,[[]]],[11,"borrow_mut","","",761,[[]]],[11,"try_from","","",761,[[],["result",4]]],[11,"into","","",761,[[]]],[11,"try_into","","",761,[[],["result",4]]],[11,"type_id","","",761,[[],["typeid",3]]],[11,"from","","",762,[[]]],[11,"borrow","","",762,[[]]],[11,"borrow_mut","","",762,[[]]],[11,"try_from","","",762,[[],["result",4]]],[11,"into","","",762,[[]]],[11,"try_into","","",762,[[],["result",4]]],[11,"type_id","","",762,[[],["typeid",3]]],[11,"from","","",763,[[]]],[11,"borrow","","",763,[[]]],[11,"borrow_mut","","",763,[[]]],[11,"try_from","","",763,[[],["result",4]]],[11,"into","","",763,[[]]],[11,"try_into","","",763,[[],["result",4]]],[11,"type_id","","",763,[[],["typeid",3]]],[11,"from","","",764,[[]]],[11,"borrow","","",764,[[]]],[11,"borrow_mut","","",764,[[]]],[11,"try_from","","",764,[[],["result",4]]],[11,"into","","",764,[[]]],[11,"try_into","","",764,[[],["result",4]]],[11,"type_id","","",764,[[],["typeid",3]]],[11,"from","","",765,[[]]],[11,"borrow","","",765,[[]]],[11,"borrow_mut","","",765,[[]]],[11,"try_from","","",765,[[],["result",4]]],[11,"into","","",765,[[]]],[11,"try_into","","",765,[[],["result",4]]],[11,"type_id","","",765,[[],["typeid",3]]],[11,"from","","",767,[[]]],[11,"borrow","","",767,[[]]],[11,"borrow_mut","","",767,[[]]],[11,"try_from","","",767,[[],["result",4]]],[11,"into","","",767,[[]]],[11,"try_into","","",767,[[],["result",4]]],[11,"type_id","","",767,[[],["typeid",3]]],[11,"from","","",769,[[]]],[11,"borrow","","",769,[[]]],[11,"borrow_mut","","",769,[[]]],[11,"try_from","","",769,[[],["result",4]]],[11,"into","","",769,[[]]],[11,"try_into","","",769,[[],["result",4]]],[11,"type_id","","",769,[[],["typeid",3]]],[11,"from","","",770,[[]]],[11,"borrow","","",770,[[]]],[11,"borrow_mut","","",770,[[]]],[11,"try_from","","",770,[[],["result",4]]],[11,"into","","",770,[[]]],[11,"try_into","","",770,[[],["result",4]]],[11,"type_id","","",770,[[],["typeid",3]]],[11,"from","","",729,[[]]],[11,"borrow","","",729,[[]]],[11,"borrow_mut","","",729,[[]]],[11,"try_from","","",729,[[],["result",4]]],[11,"into","","",729,[[]]],[11,"try_into","","",729,[[],["result",4]]],[11,"type_id","","",729,[[],["typeid",3]]],[11,"from","","",730,[[]]],[11,"borrow","","",730,[[]]],[11,"borrow_mut","","",730,[[]]],[11,"try_from","","",730,[[],["result",4]]],[11,"into","","",730,[[]]],[11,"try_into","","",730,[[],["result",4]]],[11,"type_id","","",730,[[],["typeid",3]]],[11,"from","","",731,[[]]],[11,"borrow","","",731,[[]]],[11,"borrow_mut","","",731,[[]]],[11,"try_from","","",731,[[],["result",4]]],[11,"into","","",731,[[]]],[11,"try_into","","",731,[[],["result",4]]],[11,"type_id","","",731,[[],["typeid",3]]],[11,"from","","",732,[[]]],[11,"borrow","","",732,[[]]],[11,"borrow_mut","","",732,[[]]],[11,"try_from","","",732,[[],["result",4]]],[11,"into","","",732,[[]]],[11,"try_into","","",732,[[],["result",4]]],[11,"type_id","","",732,[[],["typeid",3]]],[11,"from","","",733,[[]]],[11,"borrow","","",733,[[]]],[11,"borrow_mut","","",733,[[]]],[11,"try_from","","",733,[[],["result",4]]],[11,"into","","",733,[[]]],[11,"try_into","","",733,[[],["result",4]]],[11,"type_id","","",733,[[],["typeid",3]]],[11,"from","","",734,[[]]],[11,"borrow","","",734,[[]]],[11,"borrow_mut","","",734,[[]]],[11,"try_from","","",734,[[],["result",4]]],[11,"into","","",734,[[]]],[11,"try_into","","",734,[[],["result",4]]],[11,"type_id","","",734,[[],["typeid",3]]],[11,"from","","",735,[[]]],[11,"borrow","","",735,[[]]],[11,"borrow_mut","","",735,[[]]],[11,"try_from","","",735,[[],["result",4]]],[11,"into","","",735,[[]]],[11,"try_into","","",735,[[],["result",4]]],[11,"type_id","","",735,[[],["typeid",3]]],[11,"from","","",736,[[]]],[11,"borrow","","",736,[[]]],[11,"borrow_mut","","",736,[[]]],[11,"try_from","","",736,[[],["result",4]]],[11,"into","","",736,[[]]],[11,"try_into","","",736,[[],["result",4]]],[11,"type_id","","",736,[[],["typeid",3]]],[11,"from","","",737,[[]]],[11,"borrow","","",737,[[]]],[11,"borrow_mut","","",737,[[]]],[11,"try_from","","",737,[[],["result",4]]],[11,"into","","",737,[[]]],[11,"try_into","","",737,[[],["result",4]]],[11,"type_id","","",737,[[],["typeid",3]]],[11,"from","","",738,[[]]],[11,"borrow","","",738,[[]]],[11,"borrow_mut","","",738,[[]]],[11,"try_from","","",738,[[],["result",4]]],[11,"into","","",738,[[]]],[11,"try_into","","",738,[[],["result",4]]],[11,"type_id","","",738,[[],["typeid",3]]],[11,"from","","",739,[[]]],[11,"borrow","","",739,[[]]],[11,"borrow_mut","","",739,[[]]],[11,"try_from","","",739,[[],["result",4]]],[11,"into","","",739,[[]]],[11,"try_into","","",739,[[],["result",4]]],[11,"type_id","","",739,[[],["typeid",3]]],[11,"from","atsamd21g::i2s::data","",773,[[]]],[11,"borrow","","",773,[[]]],[11,"borrow_mut","","",773,[[]]],[11,"try_from","","",773,[[],["result",4]]],[11,"into","","",773,[[]]],[11,"try_into","","",773,[[],["result",4]]],[11,"type_id","","",773,[[],["typeid",3]]],[11,"from","atsamd21g::mtb","",776,[[]]],[11,"borrow","","",776,[[]]],[11,"borrow_mut","","",776,[[]]],[11,"try_from","","",776,[[],["result",4]]],[11,"into","","",776,[[]]],[11,"try_into","","",776,[[],["result",4]]],[11,"type_id","","",776,[[],["typeid",3]]],[11,"from","atsamd21g::mtb::position","",777,[[]]],[11,"borrow","","",777,[[]]],[11,"borrow_mut","","",777,[[]]],[11,"try_from","","",777,[[],["result",4]]],[11,"into","","",777,[[]]],[11,"try_into","","",777,[[],["result",4]]],[11,"type_id","","",777,[[],["typeid",3]]],[11,"from","","",778,[[]]],[11,"borrow","","",778,[[]]],[11,"borrow_mut","","",778,[[]]],[11,"try_from","","",778,[[],["result",4]]],[11,"into","","",778,[[]]],[11,"try_into","","",778,[[],["result",4]]],[11,"type_id","","",778,[[],["typeid",3]]],[11,"from","atsamd21g::mtb::master","",781,[[]]],[11,"borrow","","",781,[[]]],[11,"borrow_mut","","",781,[[]]],[11,"try_from","","",781,[[],["result",4]]],[11,"into","","",781,[[]]],[11,"try_into","","",781,[[],["result",4]]],[11,"type_id","","",781,[[],["typeid",3]]],[11,"from","","",782,[[]]],[11,"borrow","","",782,[[]]],[11,"borrow_mut","","",782,[[]]],[11,"try_from","","",782,[[],["result",4]]],[11,"into","","",782,[[]]],[11,"try_into","","",782,[[],["result",4]]],[11,"type_id","","",782,[[],["typeid",3]]],[11,"from","","",783,[[]]],[11,"borrow","","",783,[[]]],[11,"borrow_mut","","",783,[[]]],[11,"try_from","","",783,[[],["result",4]]],[11,"into","","",783,[[]]],[11,"try_into","","",783,[[],["result",4]]],[11,"type_id","","",783,[[],["typeid",3]]],[11,"from","","",784,[[]]],[11,"borrow","","",784,[[]]],[11,"borrow_mut","","",784,[[]]],[11,"try_from","","",784,[[],["result",4]]],[11,"into","","",784,[[]]],[11,"try_into","","",784,[[],["result",4]]],[11,"type_id","","",784,[[],["typeid",3]]],[11,"from","","",785,[[]]],[11,"borrow","","",785,[[]]],[11,"borrow_mut","","",785,[[]]],[11,"try_from","","",785,[[],["result",4]]],[11,"into","","",785,[[]]],[11,"try_into","","",785,[[],["result",4]]],[11,"type_id","","",785,[[],["typeid",3]]],[11,"from","","",786,[[]]],[11,"borrow","","",786,[[]]],[11,"borrow_mut","","",786,[[]]],[11,"try_from","","",786,[[],["result",4]]],[11,"into","","",786,[[]]],[11,"try_into","","",786,[[],["result",4]]],[11,"type_id","","",786,[[],["typeid",3]]],[11,"from","","",787,[[]]],[11,"borrow","","",787,[[]]],[11,"borrow_mut","","",787,[[]]],[11,"try_from","","",787,[[],["result",4]]],[11,"into","","",787,[[]]],[11,"try_into","","",787,[[],["result",4]]],[11,"type_id","","",787,[[],["typeid",3]]],[11,"from","atsamd21g::mtb::flow","",790,[[]]],[11,"borrow","","",790,[[]]],[11,"borrow_mut","","",790,[[]]],[11,"try_from","","",790,[[],["result",4]]],[11,"into","","",790,[[]]],[11,"try_into","","",790,[[],["result",4]]],[11,"type_id","","",790,[[],["typeid",3]]],[11,"from","","",791,[[]]],[11,"borrow","","",791,[[]]],[11,"borrow_mut","","",791,[[]]],[11,"try_from","","",791,[[],["result",4]]],[11,"into","","",791,[[]]],[11,"try_into","","",791,[[],["result",4]]],[11,"type_id","","",791,[[],["typeid",3]]],[11,"from","","",792,[[]]],[11,"borrow","","",792,[[]]],[11,"borrow_mut","","",792,[[]]],[11,"try_from","","",792,[[],["result",4]]],[11,"into","","",792,[[]]],[11,"try_into","","",792,[[],["result",4]]],[11,"type_id","","",792,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl","",795,[[]]],[11,"borrow","","",795,[[]]],[11,"borrow_mut","","",795,[[]]],[11,"try_from","","",795,[[],["result",4]]],[11,"into","","",795,[[]]],[11,"try_into","","",795,[[],["result",4]]],[11,"type_id","","",795,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::ctrla","",799,[[]]],[11,"borrow","","",799,[[]]],[11,"borrow_mut","","",799,[[]]],[11,"try_from","","",799,[[],["result",4]]],[11,"into","","",799,[[]]],[11,"try_into","","",799,[[],["result",4]]],[11,"type_id","","",799,[[],["typeid",3]]],[11,"from","","",801,[[]]],[11,"borrow","","",801,[[]]],[11,"borrow_mut","","",801,[[]]],[11,"try_from","","",801,[[],["result",4]]],[11,"into","","",801,[[]]],[11,"try_into","","",801,[[],["result",4]]],[11,"type_id","","",801,[[],["typeid",3]]],[11,"from","","",796,[[]]],[11,"borrow","","",796,[[]]],[11,"borrow_mut","","",796,[[]]],[11,"try_from","","",796,[[],["result",4]]],[11,"into","","",796,[[]]],[11,"try_into","","",796,[[],["result",4]]],[11,"type_id","","",796,[[],["typeid",3]]],[11,"from","","",797,[[]]],[11,"borrow","","",797,[[]]],[11,"borrow_mut","","",797,[[]]],[11,"try_from","","",797,[[],["result",4]]],[11,"into","","",797,[[]]],[11,"try_into","","",797,[[],["result",4]]],[11,"type_id","","",797,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::ctrlb","",808,[[]]],[11,"borrow","","",808,[[]]],[11,"borrow_mut","","",808,[[]]],[11,"try_from","","",808,[[],["result",4]]],[11,"into","","",808,[[]]],[11,"try_into","","",808,[[],["result",4]]],[11,"type_id","","",808,[[],["typeid",3]]],[11,"from","","",809,[[]]],[11,"borrow","","",809,[[]]],[11,"borrow_mut","","",809,[[]]],[11,"try_from","","",809,[[],["result",4]]],[11,"into","","",809,[[]]],[11,"try_into","","",809,[[],["result",4]]],[11,"type_id","","",809,[[],["typeid",3]]],[11,"from","","",811,[[]]],[11,"borrow","","",811,[[]]],[11,"borrow_mut","","",811,[[]]],[11,"try_from","","",811,[[],["result",4]]],[11,"into","","",811,[[]]],[11,"try_into","","",811,[[],["result",4]]],[11,"type_id","","",811,[[],["typeid",3]]],[11,"from","","",813,[[]]],[11,"borrow","","",813,[[]]],[11,"borrow_mut","","",813,[[]]],[11,"try_from","","",813,[[],["result",4]]],[11,"into","","",813,[[]]],[11,"try_into","","",813,[[],["result",4]]],[11,"type_id","","",813,[[],["typeid",3]]],[11,"from","","",814,[[]]],[11,"borrow","","",814,[[]]],[11,"borrow_mut","","",814,[[]]],[11,"try_from","","",814,[[],["result",4]]],[11,"into","","",814,[[]]],[11,"try_into","","",814,[[],["result",4]]],[11,"type_id","","",814,[[],["typeid",3]]],[11,"from","","",804,[[]]],[11,"borrow","","",804,[[]]],[11,"borrow_mut","","",804,[[]]],[11,"try_from","","",804,[[],["result",4]]],[11,"into","","",804,[[]]],[11,"try_into","","",804,[[],["result",4]]],[11,"type_id","","",804,[[],["typeid",3]]],[11,"from","","",805,[[]]],[11,"borrow","","",805,[[]]],[11,"borrow_mut","","",805,[[]]],[11,"try_from","","",805,[[],["result",4]]],[11,"into","","",805,[[]]],[11,"try_into","","",805,[[],["result",4]]],[11,"type_id","","",805,[[],["typeid",3]]],[11,"from","","",806,[[]]],[11,"borrow","","",806,[[]]],[11,"borrow_mut","","",806,[[]]],[11,"try_from","","",806,[[],["result",4]]],[11,"into","","",806,[[]]],[11,"try_into","","",806,[[],["result",4]]],[11,"type_id","","",806,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::param","",817,[[]]],[11,"borrow","","",817,[[]]],[11,"borrow_mut","","",817,[[]]],[11,"try_from","","",817,[[],["result",4]]],[11,"into","","",817,[[]]],[11,"try_into","","",817,[[],["result",4]]],[11,"type_id","","",817,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::intenclr","",820,[[]]],[11,"borrow","","",820,[[]]],[11,"borrow_mut","","",820,[[]]],[11,"try_from","","",820,[[],["result",4]]],[11,"into","","",820,[[]]],[11,"try_into","","",820,[[],["result",4]]],[11,"type_id","","",820,[[],["typeid",3]]],[11,"from","","",821,[[]]],[11,"borrow","","",821,[[]]],[11,"borrow_mut","","",821,[[]]],[11,"try_from","","",821,[[],["result",4]]],[11,"into","","",821,[[]]],[11,"try_into","","",821,[[],["result",4]]],[11,"type_id","","",821,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::intenset","",824,[[]]],[11,"borrow","","",824,[[]]],[11,"borrow_mut","","",824,[[]]],[11,"try_from","","",824,[[],["result",4]]],[11,"into","","",824,[[]]],[11,"try_into","","",824,[[],["result",4]]],[11,"type_id","","",824,[[],["typeid",3]]],[11,"from","","",825,[[]]],[11,"borrow","","",825,[[]]],[11,"borrow_mut","","",825,[[]]],[11,"try_from","","",825,[[],["result",4]]],[11,"into","","",825,[[]]],[11,"try_into","","",825,[[],["result",4]]],[11,"type_id","","",825,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::intflag","",828,[[]]],[11,"borrow","","",828,[[]]],[11,"borrow_mut","","",828,[[]]],[11,"try_from","","",828,[[],["result",4]]],[11,"into","","",828,[[]]],[11,"try_into","","",828,[[],["result",4]]],[11,"type_id","","",828,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::status","",831,[[]]],[11,"borrow","","",831,[[]]],[11,"borrow_mut","","",831,[[]]],[11,"try_from","","",831,[[],["result",4]]],[11,"into","","",831,[[]]],[11,"try_into","","",831,[[],["result",4]]],[11,"type_id","","",831,[[],["typeid",3]]],[11,"from","","",832,[[]]],[11,"borrow","","",832,[[]]],[11,"borrow_mut","","",832,[[]]],[11,"try_from","","",832,[[],["result",4]]],[11,"into","","",832,[[]]],[11,"try_into","","",832,[[],["result",4]]],[11,"type_id","","",832,[[],["typeid",3]]],[11,"from","","",833,[[]]],[11,"borrow","","",833,[[]]],[11,"borrow_mut","","",833,[[]]],[11,"try_from","","",833,[[],["result",4]]],[11,"into","","",833,[[]]],[11,"try_into","","",833,[[],["result",4]]],[11,"type_id","","",833,[[],["typeid",3]]],[11,"from","","",834,[[]]],[11,"borrow","","",834,[[]]],[11,"borrow_mut","","",834,[[]]],[11,"try_from","","",834,[[],["result",4]]],[11,"into","","",834,[[]]],[11,"try_into","","",834,[[],["result",4]]],[11,"type_id","","",834,[[],["typeid",3]]],[11,"from","atsamd21g::nvmctrl::addr","",837,[[]]],[11,"borrow","","",837,[[]]],[11,"borrow_mut","","",837,[[]]],[11,"try_from","","",837,[[],["result",4]]],[11,"into","","",837,[[]]],[11,"try_into","","",837,[[],["result",4]]],[11,"type_id","","",837,[[],["typeid",3]]],[11,"from","atsamd21g::pac0","",841,[[]]],[11,"borrow","","",841,[[]]],[11,"borrow_mut","","",841,[[]]],[11,"try_from","","",841,[[],["result",4]]],[11,"into","","",841,[[]]],[11,"try_into","","",841,[[],["result",4]]],[11,"type_id","","",841,[[],["typeid",3]]],[11,"from","atsamd21g::pac0::wpclr","",842,[[]]],[11,"borrow","","",842,[[]]],[11,"borrow_mut","","",842,[[]]],[11,"try_from","","",842,[[],["result",4]]],[11,"into","","",842,[[]]],[11,"try_into","","",842,[[],["result",4]]],[11,"type_id","","",842,[[],["typeid",3]]],[11,"from","atsamd21g::pac0::wpset","",845,[[]]],[11,"borrow","","",845,[[]]],[11,"borrow_mut","","",845,[[]]],[11,"try_from","","",845,[[],["result",4]]],[11,"into","","",845,[[]]],[11,"try_into","","",845,[[],["result",4]]],[11,"type_id","","",845,[[],["typeid",3]]],[11,"from","atsamd21g::pm","",848,[[]]],[11,"borrow","","",848,[[]]],[11,"borrow_mut","","",848,[[]]],[11,"try_from","","",848,[[],["result",4]]],[11,"into","","",848,[[]]],[11,"try_into","","",848,[[],["result",4]]],[11,"type_id","","",848,[[],["typeid",3]]],[11,"from","atsamd21g::pm::sleep","",851,[[]]],[11,"borrow","","",851,[[]]],[11,"borrow_mut","","",851,[[]]],[11,"try_from","","",851,[[],["result",4]]],[11,"into","","",851,[[]]],[11,"try_into","","",851,[[],["result",4]]],[11,"type_id","","",851,[[],["typeid",3]]],[11,"from","","",849,[[]]],[11,"borrow","","",849,[[]]],[11,"borrow_mut","","",849,[[]]],[11,"try_from","","",849,[[],["result",4]]],[11,"into","","",849,[[]]],[11,"try_into","","",849,[[],["result",4]]],[11,"type_id","","",849,[[],["typeid",3]]],[11,"from","atsamd21g::pm::cpusel","",856,[[]]],[11,"borrow","","",856,[[]]],[11,"borrow_mut","","",856,[[]]],[11,"try_from","","",856,[[],["result",4]]],[11,"into","","",856,[[]]],[11,"try_into","","",856,[[],["result",4]]],[11,"type_id","","",856,[[],["typeid",3]]],[11,"from","","",854,[[]]],[11,"borrow","","",854,[[]]],[11,"borrow_mut","","",854,[[]]],[11,"try_from","","",854,[[],["result",4]]],[11,"into","","",854,[[]]],[11,"try_into","","",854,[[],["result",4]]],[11,"type_id","","",854,[[],["typeid",3]]],[11,"from","atsamd21g::pm::apbasel","",861,[[]]],[11,"borrow","","",861,[[]]],[11,"borrow_mut","","",861,[[]]],[11,"try_from","","",861,[[],["result",4]]],[11,"into","","",861,[[]]],[11,"try_into","","",861,[[],["result",4]]],[11,"type_id","","",861,[[],["typeid",3]]],[11,"from","","",859,[[]]],[11,"borrow","","",859,[[]]],[11,"borrow_mut","","",859,[[]]],[11,"try_from","","",859,[[],["result",4]]],[11,"into","","",859,[[]]],[11,"try_into","","",859,[[],["result",4]]],[11,"type_id","","",859,[[],["typeid",3]]],[11,"from","atsamd21g::pm::apbbsel","",866,[[]]],[11,"borrow","","",866,[[]]],[11,"borrow_mut","","",866,[[]]],[11,"try_from","","",866,[[],["result",4]]],[11,"into","","",866,[[]]],[11,"try_into","","",866,[[],["result",4]]],[11,"type_id","","",866,[[],["typeid",3]]],[11,"from","","",864,[[]]],[11,"borrow","","",864,[[]]],[11,"borrow_mut","","",864,[[]]],[11,"try_from","","",864,[[],["result",4]]],[11,"into","","",864,[[]]],[11,"try_into","","",864,[[],["result",4]]],[11,"type_id","","",864,[[],["typeid",3]]],[11,"from","atsamd21g::pm::apbcsel","",871,[[]]],[11,"borrow","","",871,[[]]],[11,"borrow_mut","","",871,[[]]],[11,"try_from","","",871,[[],["result",4]]],[11,"into","","",871,[[]]],[11,"try_into","","",871,[[],["result",4]]],[11,"type_id","","",871,[[],["typeid",3]]],[11,"from","","",869,[[]]],[11,"borrow","","",869,[[]]],[11,"borrow_mut","","",869,[[]]],[11,"try_from","","",869,[[],["result",4]]],[11,"into","","",869,[[]]],[11,"try_into","","",869,[[],["result",4]]],[11,"type_id","","",869,[[],["typeid",3]]],[11,"from","atsamd21g::pm::ahbmask","",874,[[]]],[11,"borrow","","",874,[[]]],[11,"borrow_mut","","",874,[[]]],[11,"try_from","","",874,[[],["result",4]]],[11,"into","","",874,[[]]],[11,"try_into","","",874,[[],["result",4]]],[11,"type_id","","",874,[[],["typeid",3]]],[11,"from","","",875,[[]]],[11,"borrow","","",875,[[]]],[11,"borrow_mut","","",875,[[]]],[11,"try_from","","",875,[[],["result",4]]],[11,"into","","",875,[[]]],[11,"try_into","","",875,[[],["result",4]]],[11,"type_id","","",875,[[],["typeid",3]]],[11,"from","","",876,[[]]],[11,"borrow","","",876,[[]]],[11,"borrow_mut","","",876,[[]]],[11,"try_from","","",876,[[],["result",4]]],[11,"into","","",876,[[]]],[11,"try_into","","",876,[[],["result",4]]],[11,"type_id","","",876,[[],["typeid",3]]],[11,"from","","",877,[[]]],[11,"borrow","","",877,[[]]],[11,"borrow_mut","","",877,[[]]],[11,"try_from","","",877,[[],["result",4]]],[11,"into","","",877,[[]]],[11,"try_into","","",877,[[],["result",4]]],[11,"type_id","","",877,[[],["typeid",3]]],[11,"from","","",878,[[]]],[11,"borrow","","",878,[[]]],[11,"borrow_mut","","",878,[[]]],[11,"try_from","","",878,[[],["result",4]]],[11,"into","","",878,[[]]],[11,"try_into","","",878,[[],["result",4]]],[11,"type_id","","",878,[[],["typeid",3]]],[11,"from","","",879,[[]]],[11,"borrow","","",879,[[]]],[11,"borrow_mut","","",879,[[]]],[11,"try_from","","",879,[[],["result",4]]],[11,"into","","",879,[[]]],[11,"try_into","","",879,[[],["result",4]]],[11,"type_id","","",879,[[],["typeid",3]]],[11,"from","","",880,[[]]],[11,"borrow","","",880,[[]]],[11,"borrow_mut","","",880,[[]]],[11,"try_from","","",880,[[],["result",4]]],[11,"into","","",880,[[]]],[11,"try_into","","",880,[[],["result",4]]],[11,"type_id","","",880,[[],["typeid",3]]],[11,"from","atsamd21g::pm::apbamask","",883,[[]]],[11,"borrow","","",883,[[]]],[11,"borrow_mut","","",883,[[]]],[11,"try_from","","",883,[[],["result",4]]],[11,"into","","",883,[[]]],[11,"try_into","","",883,[[],["result",4]]],[11,"type_id","","",883,[[],["typeid",3]]],[11,"from","","",884,[[]]],[11,"borrow","","",884,[[]]],[11,"borrow_mut","","",884,[[]]],[11,"try_from","","",884,[[],["result",4]]],[11,"into","","",884,[[]]],[11,"try_into","","",884,[[],["result",4]]],[11,"type_id","","",884,[[],["typeid",3]]],[11,"from","","",885,[[]]],[11,"borrow","","",885,[[]]],[11,"borrow_mut","","",885,[[]]],[11,"try_from","","",885,[[],["result",4]]],[11,"into","","",885,[[]]],[11,"try_into","","",885,[[],["result",4]]],[11,"type_id","","",885,[[],["typeid",3]]],[11,"from","","",886,[[]]],[11,"borrow","","",886,[[]]],[11,"borrow_mut","","",886,[[]]],[11,"try_from","","",886,[[],["result",4]]],[11,"into","","",886,[[]]],[11,"try_into","","",886,[[],["result",4]]],[11,"type_id","","",886,[[],["typeid",3]]],[11,"from","","",887,[[]]],[11,"borrow","","",887,[[]]],[11,"borrow_mut","","",887,[[]]],[11,"try_from","","",887,[[],["result",4]]],[11,"into","","",887,[[]]],[11,"try_into","","",887,[[],["result",4]]],[11,"type_id","","",887,[[],["typeid",3]]],[11,"from","","",888,[[]]],[11,"borrow","","",888,[[]]],[11,"borrow_mut","","",888,[[]]],[11,"try_from","","",888,[[],["result",4]]],[11,"into","","",888,[[]]],[11,"try_into","","",888,[[],["result",4]]],[11,"type_id","","",888,[[],["typeid",3]]],[11,"from","","",889,[[]]],[11,"borrow","","",889,[[]]],[11,"borrow_mut","","",889,[[]]],[11,"try_from","","",889,[[],["result",4]]],[11,"into","","",889,[[]]],[11,"try_into","","",889,[[],["result",4]]],[11,"type_id","","",889,[[],["typeid",3]]],[11,"from","atsamd21g::pm::apbbmask","",892,[[]]],[11,"borrow","","",892,[[]]],[11,"borrow_mut","","",892,[[]]],[11,"try_from","","",892,[[],["result",4]]],[11,"into","","",892,[[]]],[11,"try_into","","",892,[[],["result",4]]],[11,"type_id","","",892,[[],["typeid",3]]],[11,"from","","",893,[[]]],[11,"borrow","","",893,[[]]],[11,"borrow_mut","","",893,[[]]],[11,"try_from","","",893,[[],["result",4]]],[11,"into","","",893,[[]]],[11,"try_into","","",893,[[],["result",4]]],[11,"type_id","","",893,[[],["typeid",3]]],[11,"from","","",894,[[]]],[11,"borrow","","",894,[[]]],[11,"borrow_mut","","",894,[[]]],[11,"try_from","","",894,[[],["result",4]]],[11,"into","","",894,[[]]],[11,"try_into","","",894,[[],["result",4]]],[11,"type_id","","",894,[[],["typeid",3]]],[11,"from","","",895,[[]]],[11,"borrow","","",895,[[]]],[11,"borrow_mut","","",895,[[]]],[11,"try_from","","",895,[[],["result",4]]],[11,"into","","",895,[[]]],[11,"try_into","","",895,[[],["result",4]]],[11,"type_id","","",895,[[],["typeid",3]]],[11,"from","","",896,[[]]],[11,"borrow","","",896,[[]]],[11,"borrow_mut","","",896,[[]]],[11,"try_from","","",896,[[],["result",4]]],[11,"into","","",896,[[]]],[11,"try_into","","",896,[[],["result",4]]],[11,"type_id","","",896,[[],["typeid",3]]],[11,"from","","",897,[[]]],[11,"borrow","","",897,[[]]],[11,"borrow_mut","","",897,[[]]],[11,"try_from","","",897,[[],["result",4]]],[11,"into","","",897,[[]]],[11,"try_into","","",897,[[],["result",4]]],[11,"type_id","","",897,[[],["typeid",3]]],[11,"from","","",898,[[]]],[11,"borrow","","",898,[[]]],[11,"borrow_mut","","",898,[[]]],[11,"try_from","","",898,[[],["result",4]]],[11,"into","","",898,[[]]],[11,"try_into","","",898,[[],["result",4]]],[11,"type_id","","",898,[[],["typeid",3]]],[11,"from","atsamd21g::pm::apbcmask","",901,[[]]],[11,"borrow","","",901,[[]]],[11,"borrow_mut","","",901,[[]]],[11,"try_from","","",901,[[],["result",4]]],[11,"into","","",901,[[]]],[11,"try_into","","",901,[[],["result",4]]],[11,"type_id","","",901,[[],["typeid",3]]],[11,"from","","",902,[[]]],[11,"borrow","","",902,[[]]],[11,"borrow_mut","","",902,[[]]],[11,"try_from","","",902,[[],["result",4]]],[11,"into","","",902,[[]]],[11,"try_into","","",902,[[],["result",4]]],[11,"type_id","","",902,[[],["typeid",3]]],[11,"from","","",903,[[]]],[11,"borrow","","",903,[[]]],[11,"borrow_mut","","",903,[[]]],[11,"try_from","","",903,[[],["result",4]]],[11,"into","","",903,[[]]],[11,"try_into","","",903,[[],["result",4]]],[11,"type_id","","",903,[[],["typeid",3]]],[11,"from","","",904,[[]]],[11,"borrow","","",904,[[]]],[11,"borrow_mut","","",904,[[]]],[11,"try_from","","",904,[[],["result",4]]],[11,"into","","",904,[[]]],[11,"try_into","","",904,[[],["result",4]]],[11,"type_id","","",904,[[],["typeid",3]]],[11,"from","","",905,[[]]],[11,"borrow","","",905,[[]]],[11,"borrow_mut","","",905,[[]]],[11,"try_from","","",905,[[],["result",4]]],[11,"into","","",905,[[]]],[11,"try_into","","",905,[[],["result",4]]],[11,"type_id","","",905,[[],["typeid",3]]],[11,"from","","",906,[[]]],[11,"borrow","","",906,[[]]],[11,"borrow_mut","","",906,[[]]],[11,"try_from","","",906,[[],["result",4]]],[11,"into","","",906,[[]]],[11,"try_into","","",906,[[],["result",4]]],[11,"type_id","","",906,[[],["typeid",3]]],[11,"from","","",907,[[]]],[11,"borrow","","",907,[[]]],[11,"borrow_mut","","",907,[[]]],[11,"try_from","","",907,[[],["result",4]]],[11,"into","","",907,[[]]],[11,"try_into","","",907,[[],["result",4]]],[11,"type_id","","",907,[[],["typeid",3]]],[11,"from","","",908,[[]]],[11,"borrow","","",908,[[]]],[11,"borrow_mut","","",908,[[]]],[11,"try_from","","",908,[[],["result",4]]],[11,"into","","",908,[[]]],[11,"try_into","","",908,[[],["result",4]]],[11,"type_id","","",908,[[],["typeid",3]]],[11,"from","","",909,[[]]],[11,"borrow","","",909,[[]]],[11,"borrow_mut","","",909,[[]]],[11,"try_from","","",909,[[],["result",4]]],[11,"into","","",909,[[]]],[11,"try_into","","",909,[[],["result",4]]],[11,"type_id","","",909,[[],["typeid",3]]],[11,"from","","",910,[[]]],[11,"borrow","","",910,[[]]],[11,"borrow_mut","","",910,[[]]],[11,"try_from","","",910,[[],["result",4]]],[11,"into","","",910,[[]]],[11,"try_into","","",910,[[],["result",4]]],[11,"type_id","","",910,[[],["typeid",3]]],[11,"from","","",911,[[]]],[11,"borrow","","",911,[[]]],[11,"borrow_mut","","",911,[[]]],[11,"try_from","","",911,[[],["result",4]]],[11,"into","","",911,[[]]],[11,"try_into","","",911,[[],["result",4]]],[11,"type_id","","",911,[[],["typeid",3]]],[11,"from","","",912,[[]]],[11,"borrow","","",912,[[]]],[11,"borrow_mut","","",912,[[]]],[11,"try_from","","",912,[[],["result",4]]],[11,"into","","",912,[[]]],[11,"try_into","","",912,[[],["result",4]]],[11,"type_id","","",912,[[],["typeid",3]]],[11,"from","","",913,[[]]],[11,"borrow","","",913,[[]]],[11,"borrow_mut","","",913,[[]]],[11,"try_from","","",913,[[],["result",4]]],[11,"into","","",913,[[]]],[11,"try_into","","",913,[[],["result",4]]],[11,"type_id","","",913,[[],["typeid",3]]],[11,"from","","",914,[[]]],[11,"borrow","","",914,[[]]],[11,"borrow_mut","","",914,[[]]],[11,"try_from","","",914,[[],["result",4]]],[11,"into","","",914,[[]]],[11,"try_into","","",914,[[],["result",4]]],[11,"type_id","","",914,[[],["typeid",3]]],[11,"from","","",915,[[]]],[11,"borrow","","",915,[[]]],[11,"borrow_mut","","",915,[[]]],[11,"try_from","","",915,[[],["result",4]]],[11,"into","","",915,[[]]],[11,"try_into","","",915,[[],["result",4]]],[11,"type_id","","",915,[[],["typeid",3]]],[11,"from","","",916,[[]]],[11,"borrow","","",916,[[]]],[11,"borrow_mut","","",916,[[]]],[11,"try_from","","",916,[[],["result",4]]],[11,"into","","",916,[[]]],[11,"try_into","","",916,[[],["result",4]]],[11,"type_id","","",916,[[],["typeid",3]]],[11,"from","","",917,[[]]],[11,"borrow","","",917,[[]]],[11,"borrow_mut","","",917,[[]]],[11,"try_from","","",917,[[],["result",4]]],[11,"into","","",917,[[]]],[11,"try_into","","",917,[[],["result",4]]],[11,"type_id","","",917,[[],["typeid",3]]],[11,"from","","",918,[[]]],[11,"borrow","","",918,[[]]],[11,"borrow_mut","","",918,[[]]],[11,"try_from","","",918,[[],["result",4]]],[11,"into","","",918,[[]]],[11,"try_into","","",918,[[],["result",4]]],[11,"type_id","","",918,[[],["typeid",3]]],[11,"from","","",919,[[]]],[11,"borrow","","",919,[[]]],[11,"borrow_mut","","",919,[[]]],[11,"try_from","","",919,[[],["result",4]]],[11,"into","","",919,[[]]],[11,"try_into","","",919,[[],["result",4]]],[11,"type_id","","",919,[[],["typeid",3]]],[11,"from","atsamd21g::pm::intenclr","",922,[[]]],[11,"borrow","","",922,[[]]],[11,"borrow_mut","","",922,[[]]],[11,"try_from","","",922,[[],["result",4]]],[11,"into","","",922,[[]]],[11,"try_into","","",922,[[],["result",4]]],[11,"type_id","","",922,[[],["typeid",3]]],[11,"from","atsamd21g::pm::intenset","",925,[[]]],[11,"borrow","","",925,[[]]],[11,"borrow_mut","","",925,[[]]],[11,"try_from","","",925,[[],["result",4]]],[11,"into","","",925,[[]]],[11,"try_into","","",925,[[],["result",4]]],[11,"type_id","","",925,[[],["typeid",3]]],[11,"from","atsamd21g::pm::intflag","",928,[[]]],[11,"borrow","","",928,[[]]],[11,"borrow_mut","","",928,[[]]],[11,"try_from","","",928,[[],["result",4]]],[11,"into","","",928,[[]]],[11,"try_into","","",928,[[],["result",4]]],[11,"type_id","","",928,[[],["typeid",3]]],[11,"from","atsamd21g::port","",932,[[]]],[11,"borrow","","",932,[[]]],[11,"borrow_mut","","",932,[[]]],[11,"try_from","","",932,[[],["result",4]]],[11,"into","","",932,[[]]],[11,"try_into","","",932,[[],["result",4]]],[11,"type_id","","",932,[[],["typeid",3]]],[11,"from","atsamd21g::port::dir","",933,[[]]],[11,"borrow","","",933,[[]]],[11,"borrow_mut","","",933,[[]]],[11,"try_from","","",933,[[],["result",4]]],[11,"into","","",933,[[]]],[11,"try_into","","",933,[[],["result",4]]],[11,"type_id","","",933,[[],["typeid",3]]],[11,"from","atsamd21g::port::dirclr","",936,[[]]],[11,"borrow","","",936,[[]]],[11,"borrow_mut","","",936,[[]]],[11,"try_from","","",936,[[],["result",4]]],[11,"into","","",936,[[]]],[11,"try_into","","",936,[[],["result",4]]],[11,"type_id","","",936,[[],["typeid",3]]],[11,"from","atsamd21g::port::dirset","",939,[[]]],[11,"borrow","","",939,[[]]],[11,"borrow_mut","","",939,[[]]],[11,"try_from","","",939,[[],["result",4]]],[11,"into","","",939,[[]]],[11,"try_into","","",939,[[],["result",4]]],[11,"type_id","","",939,[[],["typeid",3]]],[11,"from","atsamd21g::port::dirtgl","",942,[[]]],[11,"borrow","","",942,[[]]],[11,"borrow_mut","","",942,[[]]],[11,"try_from","","",942,[[],["result",4]]],[11,"into","","",942,[[]]],[11,"try_into","","",942,[[],["result",4]]],[11,"type_id","","",942,[[],["typeid",3]]],[11,"from","atsamd21g::port::out","",945,[[]]],[11,"borrow","","",945,[[]]],[11,"borrow_mut","","",945,[[]]],[11,"try_from","","",945,[[],["result",4]]],[11,"into","","",945,[[]]],[11,"try_into","","",945,[[],["result",4]]],[11,"type_id","","",945,[[],["typeid",3]]],[11,"from","atsamd21g::port::outclr","",948,[[]]],[11,"borrow","","",948,[[]]],[11,"borrow_mut","","",948,[[]]],[11,"try_from","","",948,[[],["result",4]]],[11,"into","","",948,[[]]],[11,"try_into","","",948,[[],["result",4]]],[11,"type_id","","",948,[[],["typeid",3]]],[11,"from","atsamd21g::port::outset","",951,[[]]],[11,"borrow","","",951,[[]]],[11,"borrow_mut","","",951,[[]]],[11,"try_from","","",951,[[],["result",4]]],[11,"into","","",951,[[]]],[11,"try_into","","",951,[[],["result",4]]],[11,"type_id","","",951,[[],["typeid",3]]],[11,"from","atsamd21g::port::outtgl","",954,[[]]],[11,"borrow","","",954,[[]]],[11,"borrow_mut","","",954,[[]]],[11,"try_from","","",954,[[],["result",4]]],[11,"into","","",954,[[]]],[11,"try_into","","",954,[[],["result",4]]],[11,"type_id","","",954,[[],["typeid",3]]],[11,"from","atsamd21g::port::ctrl","",958,[[]]],[11,"borrow","","",958,[[]]],[11,"borrow_mut","","",958,[[]]],[11,"try_from","","",958,[[],["result",4]]],[11,"into","","",958,[[]]],[11,"try_into","","",958,[[],["result",4]]],[11,"type_id","","",958,[[],["typeid",3]]],[11,"from","atsamd21g::port::wrconfig","",960,[[]]],[11,"borrow","","",960,[[]]],[11,"borrow_mut","","",960,[[]]],[11,"try_from","","",960,[[],["result",4]]],[11,"into","","",960,[[]]],[11,"try_into","","",960,[[],["result",4]]],[11,"type_id","","",960,[[],["typeid",3]]],[11,"from","","",961,[[]]],[11,"borrow","","",961,[[]]],[11,"borrow_mut","","",961,[[]]],[11,"try_from","","",961,[[],["result",4]]],[11,"into","","",961,[[]]],[11,"try_into","","",961,[[],["result",4]]],[11,"type_id","","",961,[[],["typeid",3]]],[11,"from","","",962,[[]]],[11,"borrow","","",962,[[]]],[11,"borrow_mut","","",962,[[]]],[11,"try_from","","",962,[[],["result",4]]],[11,"into","","",962,[[]]],[11,"try_into","","",962,[[],["result",4]]],[11,"type_id","","",962,[[],["typeid",3]]],[11,"from","","",963,[[]]],[11,"borrow","","",963,[[]]],[11,"borrow_mut","","",963,[[]]],[11,"try_from","","",963,[[],["result",4]]],[11,"into","","",963,[[]]],[11,"try_into","","",963,[[],["result",4]]],[11,"type_id","","",963,[[],["typeid",3]]],[11,"from","","",964,[[]]],[11,"borrow","","",964,[[]]],[11,"borrow_mut","","",964,[[]]],[11,"try_from","","",964,[[],["result",4]]],[11,"into","","",964,[[]]],[11,"try_into","","",964,[[],["result",4]]],[11,"type_id","","",964,[[],["typeid",3]]],[11,"from","","",965,[[]]],[11,"borrow","","",965,[[]]],[11,"borrow_mut","","",965,[[]]],[11,"try_from","","",965,[[],["result",4]]],[11,"into","","",965,[[]]],[11,"try_into","","",965,[[],["result",4]]],[11,"type_id","","",965,[[],["typeid",3]]],[11,"from","","",966,[[]]],[11,"borrow","","",966,[[]]],[11,"borrow_mut","","",966,[[]]],[11,"try_from","","",966,[[],["result",4]]],[11,"into","","",966,[[]]],[11,"try_into","","",966,[[],["result",4]]],[11,"type_id","","",966,[[],["typeid",3]]],[11,"from","","",967,[[]]],[11,"borrow","","",967,[[]]],[11,"borrow_mut","","",967,[[]]],[11,"try_from","","",967,[[],["result",4]]],[11,"into","","",967,[[]]],[11,"try_into","","",967,[[],["result",4]]],[11,"type_id","","",967,[[],["typeid",3]]],[11,"from","","",968,[[]]],[11,"borrow","","",968,[[]]],[11,"borrow_mut","","",968,[[]]],[11,"try_from","","",968,[[],["result",4]]],[11,"into","","",968,[[]]],[11,"try_into","","",968,[[],["result",4]]],[11,"type_id","","",968,[[],["typeid",3]]],[11,"from","atsamd21g::port::pmux0_","",973,[[]]],[11,"borrow","","",973,[[]]],[11,"borrow_mut","","",973,[[]]],[11,"try_from","","",973,[[],["result",4]]],[11,"into","","",973,[[]]],[11,"try_into","","",973,[[],["result",4]]],[11,"type_id","","",973,[[],["typeid",3]]],[11,"from","","",975,[[]]],[11,"borrow","","",975,[[]]],[11,"borrow_mut","","",975,[[]]],[11,"try_from","","",975,[[],["result",4]]],[11,"into","","",975,[[]]],[11,"try_into","","",975,[[],["result",4]]],[11,"type_id","","",975,[[],["typeid",3]]],[11,"from","","",970,[[]]],[11,"borrow","","",970,[[]]],[11,"borrow_mut","","",970,[[]]],[11,"try_from","","",970,[[],["result",4]]],[11,"into","","",970,[[]]],[11,"try_into","","",970,[[],["result",4]]],[11,"type_id","","",970,[[],["typeid",3]]],[11,"from","","",971,[[]]],[11,"borrow","","",971,[[]]],[11,"borrow_mut","","",971,[[]]],[11,"try_from","","",971,[[],["result",4]]],[11,"into","","",971,[[]]],[11,"try_into","","",971,[[],["result",4]]],[11,"type_id","","",971,[[],["typeid",3]]],[11,"from","atsamd21g::port::pmux1_","",981,[[]]],[11,"borrow","","",981,[[]]],[11,"borrow_mut","","",981,[[]]],[11,"try_from","","",981,[[],["result",4]]],[11,"into","","",981,[[]]],[11,"try_into","","",981,[[],["result",4]]],[11,"type_id","","",981,[[],["typeid",3]]],[11,"from","","",983,[[]]],[11,"borrow","","",983,[[]]],[11,"borrow_mut","","",983,[[]]],[11,"try_from","","",983,[[],["result",4]]],[11,"into","","",983,[[]]],[11,"try_into","","",983,[[],["result",4]]],[11,"type_id","","",983,[[],["typeid",3]]],[11,"from","","",978,[[]]],[11,"borrow","","",978,[[]]],[11,"borrow_mut","","",978,[[]]],[11,"try_from","","",978,[[],["result",4]]],[11,"into","","",978,[[]]],[11,"try_into","","",978,[[],["result",4]]],[11,"type_id","","",978,[[],["typeid",3]]],[11,"from","","",979,[[]]],[11,"borrow","","",979,[[]]],[11,"borrow_mut","","",979,[[]]],[11,"try_from","","",979,[[],["result",4]]],[11,"into","","",979,[[]]],[11,"try_into","","",979,[[],["result",4]]],[11,"type_id","","",979,[[],["typeid",3]]],[11,"from","atsamd21g::port::pincfg0_","",986,[[]]],[11,"borrow","","",986,[[]]],[11,"borrow_mut","","",986,[[]]],[11,"try_from","","",986,[[],["result",4]]],[11,"into","","",986,[[]]],[11,"try_into","","",986,[[],["result",4]]],[11,"type_id","","",986,[[],["typeid",3]]],[11,"from","","",987,[[]]],[11,"borrow","","",987,[[]]],[11,"borrow_mut","","",987,[[]]],[11,"try_from","","",987,[[],["result",4]]],[11,"into","","",987,[[]]],[11,"try_into","","",987,[[],["result",4]]],[11,"type_id","","",987,[[],["typeid",3]]],[11,"from","","",988,[[]]],[11,"borrow","","",988,[[]]],[11,"borrow_mut","","",988,[[]]],[11,"try_from","","",988,[[],["result",4]]],[11,"into","","",988,[[]]],[11,"try_into","","",988,[[],["result",4]]],[11,"type_id","","",988,[[],["typeid",3]]],[11,"from","","",989,[[]]],[11,"borrow","","",989,[[]]],[11,"borrow_mut","","",989,[[]]],[11,"try_from","","",989,[[],["result",4]]],[11,"into","","",989,[[]]],[11,"try_into","","",989,[[],["result",4]]],[11,"type_id","","",989,[[],["typeid",3]]],[11,"from","atsamd21g::port::pincfg1_","",992,[[]]],[11,"borrow","","",992,[[]]],[11,"borrow_mut","","",992,[[]]],[11,"try_from","","",992,[[],["result",4]]],[11,"into","","",992,[[]]],[11,"try_into","","",992,[[],["result",4]]],[11,"type_id","","",992,[[],["typeid",3]]],[11,"from","","",993,[[]]],[11,"borrow","","",993,[[]]],[11,"borrow_mut","","",993,[[]]],[11,"try_from","","",993,[[],["result",4]]],[11,"into","","",993,[[]]],[11,"try_into","","",993,[[],["result",4]]],[11,"type_id","","",993,[[],["typeid",3]]],[11,"from","","",994,[[]]],[11,"borrow","","",994,[[]]],[11,"borrow_mut","","",994,[[]]],[11,"try_from","","",994,[[],["result",4]]],[11,"into","","",994,[[]]],[11,"try_into","","",994,[[],["result",4]]],[11,"type_id","","",994,[[],["typeid",3]]],[11,"from","","",995,[[]]],[11,"borrow","","",995,[[]]],[11,"borrow_mut","","",995,[[]]],[11,"try_from","","",995,[[],["result",4]]],[11,"into","","",995,[[]]],[11,"try_into","","",995,[[],["result",4]]],[11,"type_id","","",995,[[],["typeid",3]]],[11,"from","atsamd21g::rtc","",1195,[[]]],[11,"borrow","","",1195,[[]]],[11,"borrow_mut","","",1195,[[]]],[11,"try_from","","",1195,[[],["result",4]]],[11,"into","","",1195,[[]]],[11,"try_into","","",1195,[[],["result",4]]],[11,"type_id","","",1195,[[],["typeid",3]]],[11,"from","","",998,[[]]],[11,"borrow","","",998,[[]]],[11,"borrow_mut","","",998,[[]]],[11,"try_from","","",998,[[],["result",4]]],[11,"into","","",998,[[]]],[11,"try_into","","",998,[[],["result",4]]],[11,"type_id","","",998,[[],["typeid",3]]],[11,"from","","",999,[[]]],[11,"borrow","","",999,[[]]],[11,"borrow_mut","","",999,[[]]],[11,"try_from","","",999,[[],["result",4]]],[11,"into","","",999,[[]]],[11,"try_into","","",999,[[],["result",4]]],[11,"type_id","","",999,[[],["typeid",3]]],[11,"from","","",1000,[[]]],[11,"borrow","","",1000,[[]]],[11,"borrow_mut","","",1000,[[]]],[11,"try_from","","",1000,[[],["result",4]]],[11,"into","","",1000,[[]]],[11,"try_into","","",1000,[[],["result",4]]],[11,"type_id","","",1000,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::ctrl","",1003,[[]]],[11,"borrow","","",1003,[[]]],[11,"borrow_mut","","",1003,[[]]],[11,"try_from","","",1003,[[],["result",4]]],[11,"into","","",1003,[[]]],[11,"try_into","","",1003,[[],["result",4]]],[11,"type_id","","",1003,[[],["typeid",3]]],[11,"from","","",1004,[[]]],[11,"borrow","","",1004,[[]]],[11,"borrow_mut","","",1004,[[]]],[11,"try_from","","",1004,[[],["result",4]]],[11,"into","","",1004,[[]]],[11,"try_into","","",1004,[[],["result",4]]],[11,"type_id","","",1004,[[],["typeid",3]]],[11,"from","","",1006,[[]]],[11,"borrow","","",1006,[[]]],[11,"borrow_mut","","",1006,[[]]],[11,"try_from","","",1006,[[],["result",4]]],[11,"into","","",1006,[[]]],[11,"try_into","","",1006,[[],["result",4]]],[11,"type_id","","",1006,[[],["typeid",3]]],[11,"from","","",1007,[[]]],[11,"borrow","","",1007,[[]]],[11,"borrow_mut","","",1007,[[]]],[11,"try_from","","",1007,[[],["result",4]]],[11,"into","","",1007,[[]]],[11,"try_into","","",1007,[[],["result",4]]],[11,"type_id","","",1007,[[],["typeid",3]]],[11,"from","","",1009,[[]]],[11,"borrow","","",1009,[[]]],[11,"borrow_mut","","",1009,[[]]],[11,"try_from","","",1009,[[],["result",4]]],[11,"into","","",1009,[[]]],[11,"try_into","","",1009,[[],["result",4]]],[11,"type_id","","",1009,[[],["typeid",3]]],[11,"from","","",1001,[[]]],[11,"borrow","","",1001,[[]]],[11,"borrow_mut","","",1001,[[]]],[11,"try_from","","",1001,[[],["result",4]]],[11,"into","","",1001,[[]]],[11,"try_into","","",1001,[[],["result",4]]],[11,"type_id","","",1001,[[],["typeid",3]]],[11,"from","","",1002,[[]]],[11,"borrow","","",1002,[[]]],[11,"borrow_mut","","",1002,[[]]],[11,"try_from","","",1002,[[],["result",4]]],[11,"into","","",1002,[[]]],[11,"try_into","","",1002,[[],["result",4]]],[11,"type_id","","",1002,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::readreq","",1012,[[]]],[11,"borrow","","",1012,[[]]],[11,"borrow_mut","","",1012,[[]]],[11,"try_from","","",1012,[[],["result",4]]],[11,"into","","",1012,[[]]],[11,"try_into","","",1012,[[],["result",4]]],[11,"type_id","","",1012,[[],["typeid",3]]],[11,"from","","",1013,[[]]],[11,"borrow","","",1013,[[]]],[11,"borrow_mut","","",1013,[[]]],[11,"try_from","","",1013,[[],["result",4]]],[11,"into","","",1013,[[]]],[11,"try_into","","",1013,[[],["result",4]]],[11,"type_id","","",1013,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::evctrl","",1016,[[]]],[11,"borrow","","",1016,[[]]],[11,"borrow_mut","","",1016,[[]]],[11,"try_from","","",1016,[[],["result",4]]],[11,"into","","",1016,[[]]],[11,"try_into","","",1016,[[],["result",4]]],[11,"type_id","","",1016,[[],["typeid",3]]],[11,"from","","",1017,[[]]],[11,"borrow","","",1017,[[]]],[11,"borrow_mut","","",1017,[[]]],[11,"try_from","","",1017,[[],["result",4]]],[11,"into","","",1017,[[]]],[11,"try_into","","",1017,[[],["result",4]]],[11,"type_id","","",1017,[[],["typeid",3]]],[11,"from","","",1018,[[]]],[11,"borrow","","",1018,[[]]],[11,"borrow_mut","","",1018,[[]]],[11,"try_from","","",1018,[[],["result",4]]],[11,"into","","",1018,[[]]],[11,"try_into","","",1018,[[],["result",4]]],[11,"type_id","","",1018,[[],["typeid",3]]],[11,"from","","",1019,[[]]],[11,"borrow","","",1019,[[]]],[11,"borrow_mut","","",1019,[[]]],[11,"try_from","","",1019,[[],["result",4]]],[11,"into","","",1019,[[]]],[11,"try_into","","",1019,[[],["result",4]]],[11,"type_id","","",1019,[[],["typeid",3]]],[11,"from","","",1020,[[]]],[11,"borrow","","",1020,[[]]],[11,"borrow_mut","","",1020,[[]]],[11,"try_from","","",1020,[[],["result",4]]],[11,"into","","",1020,[[]]],[11,"try_into","","",1020,[[],["result",4]]],[11,"type_id","","",1020,[[],["typeid",3]]],[11,"from","","",1021,[[]]],[11,"borrow","","",1021,[[]]],[11,"borrow_mut","","",1021,[[]]],[11,"try_from","","",1021,[[],["result",4]]],[11,"into","","",1021,[[]]],[11,"try_into","","",1021,[[],["result",4]]],[11,"type_id","","",1021,[[],["typeid",3]]],[11,"from","","",1022,[[]]],[11,"borrow","","",1022,[[]]],[11,"borrow_mut","","",1022,[[]]],[11,"try_from","","",1022,[[],["result",4]]],[11,"into","","",1022,[[]]],[11,"try_into","","",1022,[[],["result",4]]],[11,"type_id","","",1022,[[],["typeid",3]]],[11,"from","","",1023,[[]]],[11,"borrow","","",1023,[[]]],[11,"borrow_mut","","",1023,[[]]],[11,"try_from","","",1023,[[],["result",4]]],[11,"into","","",1023,[[]]],[11,"try_into","","",1023,[[],["result",4]]],[11,"type_id","","",1023,[[],["typeid",3]]],[11,"from","","",1024,[[]]],[11,"borrow","","",1024,[[]]],[11,"borrow_mut","","",1024,[[]]],[11,"try_from","","",1024,[[],["result",4]]],[11,"into","","",1024,[[]]],[11,"try_into","","",1024,[[],["result",4]]],[11,"type_id","","",1024,[[],["typeid",3]]],[11,"from","","",1025,[[]]],[11,"borrow","","",1025,[[]]],[11,"borrow_mut","","",1025,[[]]],[11,"try_from","","",1025,[[],["result",4]]],[11,"into","","",1025,[[]]],[11,"try_into","","",1025,[[],["result",4]]],[11,"type_id","","",1025,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::intenclr","",1028,[[]]],[11,"borrow","","",1028,[[]]],[11,"borrow_mut","","",1028,[[]]],[11,"try_from","","",1028,[[],["result",4]]],[11,"into","","",1028,[[]]],[11,"try_into","","",1028,[[],["result",4]]],[11,"type_id","","",1028,[[],["typeid",3]]],[11,"from","","",1029,[[]]],[11,"borrow","","",1029,[[]]],[11,"borrow_mut","","",1029,[[]]],[11,"try_from","","",1029,[[],["result",4]]],[11,"into","","",1029,[[]]],[11,"try_into","","",1029,[[],["result",4]]],[11,"type_id","","",1029,[[],["typeid",3]]],[11,"from","","",1030,[[]]],[11,"borrow","","",1030,[[]]],[11,"borrow_mut","","",1030,[[]]],[11,"try_from","","",1030,[[],["result",4]]],[11,"into","","",1030,[[]]],[11,"try_into","","",1030,[[],["result",4]]],[11,"type_id","","",1030,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::intenset","",1033,[[]]],[11,"borrow","","",1033,[[]]],[11,"borrow_mut","","",1033,[[]]],[11,"try_from","","",1033,[[],["result",4]]],[11,"into","","",1033,[[]]],[11,"try_into","","",1033,[[],["result",4]]],[11,"type_id","","",1033,[[],["typeid",3]]],[11,"from","","",1034,[[]]],[11,"borrow","","",1034,[[]]],[11,"borrow_mut","","",1034,[[]]],[11,"try_from","","",1034,[[],["result",4]]],[11,"into","","",1034,[[]]],[11,"try_into","","",1034,[[],["result",4]]],[11,"type_id","","",1034,[[],["typeid",3]]],[11,"from","","",1035,[[]]],[11,"borrow","","",1035,[[]]],[11,"borrow_mut","","",1035,[[]]],[11,"try_from","","",1035,[[],["result",4]]],[11,"into","","",1035,[[]]],[11,"try_into","","",1035,[[],["result",4]]],[11,"type_id","","",1035,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::intflag","",1038,[[]]],[11,"borrow","","",1038,[[]]],[11,"borrow_mut","","",1038,[[]]],[11,"try_from","","",1038,[[],["result",4]]],[11,"into","","",1038,[[]]],[11,"try_into","","",1038,[[],["result",4]]],[11,"type_id","","",1038,[[],["typeid",3]]],[11,"from","","",1039,[[]]],[11,"borrow","","",1039,[[]]],[11,"borrow_mut","","",1039,[[]]],[11,"try_from","","",1039,[[],["result",4]]],[11,"into","","",1039,[[]]],[11,"try_into","","",1039,[[],["result",4]]],[11,"type_id","","",1039,[[],["typeid",3]]],[11,"from","","",1040,[[]]],[11,"borrow","","",1040,[[]]],[11,"borrow_mut","","",1040,[[]]],[11,"try_from","","",1040,[[],["result",4]]],[11,"into","","",1040,[[]]],[11,"try_into","","",1040,[[],["result",4]]],[11,"type_id","","",1040,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::dbgctrl","",1044,[[]]],[11,"borrow","","",1044,[[]]],[11,"borrow_mut","","",1044,[[]]],[11,"try_from","","",1044,[[],["result",4]]],[11,"into","","",1044,[[]]],[11,"try_into","","",1044,[[],["result",4]]],[11,"type_id","","",1044,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::freqcorr","",1047,[[]]],[11,"borrow","","",1047,[[]]],[11,"borrow_mut","","",1047,[[]]],[11,"try_from","","",1047,[[],["result",4]]],[11,"into","","",1047,[[]]],[11,"try_into","","",1047,[[],["result",4]]],[11,"type_id","","",1047,[[],["typeid",3]]],[11,"from","","",1048,[[]]],[11,"borrow","","",1048,[[]]],[11,"borrow_mut","","",1048,[[]]],[11,"try_from","","",1048,[[],["result",4]]],[11,"into","","",1048,[[]]],[11,"try_into","","",1048,[[],["result",4]]],[11,"type_id","","",1048,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::count","",1051,[[]]],[11,"borrow","","",1051,[[]]],[11,"borrow_mut","","",1051,[[]]],[11,"try_from","","",1051,[[],["result",4]]],[11,"into","","",1051,[[]]],[11,"try_into","","",1051,[[],["result",4]]],[11,"type_id","","",1051,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode0::comp","",1054,[[]]],[11,"borrow","","",1054,[[]]],[11,"borrow_mut","","",1054,[[]]],[11,"try_from","","",1054,[[],["result",4]]],[11,"into","","",1054,[[]]],[11,"try_into","","",1054,[[],["result",4]]],[11,"type_id","","",1054,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::ctrl","",1059,[[]]],[11,"borrow","","",1059,[[]]],[11,"borrow_mut","","",1059,[[]]],[11,"try_from","","",1059,[[],["result",4]]],[11,"into","","",1059,[[]]],[11,"try_into","","",1059,[[],["result",4]]],[11,"type_id","","",1059,[[],["typeid",3]]],[11,"from","","",1060,[[]]],[11,"borrow","","",1060,[[]]],[11,"borrow_mut","","",1060,[[]]],[11,"try_from","","",1060,[[],["result",4]]],[11,"into","","",1060,[[]]],[11,"try_into","","",1060,[[],["result",4]]],[11,"type_id","","",1060,[[],["typeid",3]]],[11,"from","","",1062,[[]]],[11,"borrow","","",1062,[[]]],[11,"borrow_mut","","",1062,[[]]],[11,"try_from","","",1062,[[],["result",4]]],[11,"into","","",1062,[[]]],[11,"try_into","","",1062,[[],["result",4]]],[11,"type_id","","",1062,[[],["typeid",3]]],[11,"from","","",1064,[[]]],[11,"borrow","","",1064,[[]]],[11,"borrow_mut","","",1064,[[]]],[11,"try_from","","",1064,[[],["result",4]]],[11,"into","","",1064,[[]]],[11,"try_into","","",1064,[[],["result",4]]],[11,"type_id","","",1064,[[],["typeid",3]]],[11,"from","","",1057,[[]]],[11,"borrow","","",1057,[[]]],[11,"borrow_mut","","",1057,[[]]],[11,"try_from","","",1057,[[],["result",4]]],[11,"into","","",1057,[[]]],[11,"try_into","","",1057,[[],["result",4]]],[11,"type_id","","",1057,[[],["typeid",3]]],[11,"from","","",1058,[[]]],[11,"borrow","","",1058,[[]]],[11,"borrow_mut","","",1058,[[]]],[11,"try_from","","",1058,[[],["result",4]]],[11,"into","","",1058,[[]]],[11,"try_into","","",1058,[[],["result",4]]],[11,"type_id","","",1058,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::readreq","",1067,[[]]],[11,"borrow","","",1067,[[]]],[11,"borrow_mut","","",1067,[[]]],[11,"try_from","","",1067,[[],["result",4]]],[11,"into","","",1067,[[]]],[11,"try_into","","",1067,[[],["result",4]]],[11,"type_id","","",1067,[[],["typeid",3]]],[11,"from","","",1068,[[]]],[11,"borrow","","",1068,[[]]],[11,"borrow_mut","","",1068,[[]]],[11,"try_from","","",1068,[[],["result",4]]],[11,"into","","",1068,[[]]],[11,"try_into","","",1068,[[],["result",4]]],[11,"type_id","","",1068,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::evctrl","",1071,[[]]],[11,"borrow","","",1071,[[]]],[11,"borrow_mut","","",1071,[[]]],[11,"try_from","","",1071,[[],["result",4]]],[11,"into","","",1071,[[]]],[11,"try_into","","",1071,[[],["result",4]]],[11,"type_id","","",1071,[[],["typeid",3]]],[11,"from","","",1072,[[]]],[11,"borrow","","",1072,[[]]],[11,"borrow_mut","","",1072,[[]]],[11,"try_from","","",1072,[[],["result",4]]],[11,"into","","",1072,[[]]],[11,"try_into","","",1072,[[],["result",4]]],[11,"type_id","","",1072,[[],["typeid",3]]],[11,"from","","",1073,[[]]],[11,"borrow","","",1073,[[]]],[11,"borrow_mut","","",1073,[[]]],[11,"try_from","","",1073,[[],["result",4]]],[11,"into","","",1073,[[]]],[11,"try_into","","",1073,[[],["result",4]]],[11,"type_id","","",1073,[[],["typeid",3]]],[11,"from","","",1074,[[]]],[11,"borrow","","",1074,[[]]],[11,"borrow_mut","","",1074,[[]]],[11,"try_from","","",1074,[[],["result",4]]],[11,"into","","",1074,[[]]],[11,"try_into","","",1074,[[],["result",4]]],[11,"type_id","","",1074,[[],["typeid",3]]],[11,"from","","",1075,[[]]],[11,"borrow","","",1075,[[]]],[11,"borrow_mut","","",1075,[[]]],[11,"try_from","","",1075,[[],["result",4]]],[11,"into","","",1075,[[]]],[11,"try_into","","",1075,[[],["result",4]]],[11,"type_id","","",1075,[[],["typeid",3]]],[11,"from","","",1076,[[]]],[11,"borrow","","",1076,[[]]],[11,"borrow_mut","","",1076,[[]]],[11,"try_from","","",1076,[[],["result",4]]],[11,"into","","",1076,[[]]],[11,"try_into","","",1076,[[],["result",4]]],[11,"type_id","","",1076,[[],["typeid",3]]],[11,"from","","",1077,[[]]],[11,"borrow","","",1077,[[]]],[11,"borrow_mut","","",1077,[[]]],[11,"try_from","","",1077,[[],["result",4]]],[11,"into","","",1077,[[]]],[11,"try_into","","",1077,[[],["result",4]]],[11,"type_id","","",1077,[[],["typeid",3]]],[11,"from","","",1078,[[]]],[11,"borrow","","",1078,[[]]],[11,"borrow_mut","","",1078,[[]]],[11,"try_from","","",1078,[[],["result",4]]],[11,"into","","",1078,[[]]],[11,"try_into","","",1078,[[],["result",4]]],[11,"type_id","","",1078,[[],["typeid",3]]],[11,"from","","",1079,[[]]],[11,"borrow","","",1079,[[]]],[11,"borrow_mut","","",1079,[[]]],[11,"try_from","","",1079,[[],["result",4]]],[11,"into","","",1079,[[]]],[11,"try_into","","",1079,[[],["result",4]]],[11,"type_id","","",1079,[[],["typeid",3]]],[11,"from","","",1080,[[]]],[11,"borrow","","",1080,[[]]],[11,"borrow_mut","","",1080,[[]]],[11,"try_from","","",1080,[[],["result",4]]],[11,"into","","",1080,[[]]],[11,"try_into","","",1080,[[],["result",4]]],[11,"type_id","","",1080,[[],["typeid",3]]],[11,"from","","",1081,[[]]],[11,"borrow","","",1081,[[]]],[11,"borrow_mut","","",1081,[[]]],[11,"try_from","","",1081,[[],["result",4]]],[11,"into","","",1081,[[]]],[11,"try_into","","",1081,[[],["result",4]]],[11,"type_id","","",1081,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::intenclr","",1084,[[]]],[11,"borrow","","",1084,[[]]],[11,"borrow_mut","","",1084,[[]]],[11,"try_from","","",1084,[[],["result",4]]],[11,"into","","",1084,[[]]],[11,"try_into","","",1084,[[],["result",4]]],[11,"type_id","","",1084,[[],["typeid",3]]],[11,"from","","",1085,[[]]],[11,"borrow","","",1085,[[]]],[11,"borrow_mut","","",1085,[[]]],[11,"try_from","","",1085,[[],["result",4]]],[11,"into","","",1085,[[]]],[11,"try_into","","",1085,[[],["result",4]]],[11,"type_id","","",1085,[[],["typeid",3]]],[11,"from","","",1086,[[]]],[11,"borrow","","",1086,[[]]],[11,"borrow_mut","","",1086,[[]]],[11,"try_from","","",1086,[[],["result",4]]],[11,"into","","",1086,[[]]],[11,"try_into","","",1086,[[],["result",4]]],[11,"type_id","","",1086,[[],["typeid",3]]],[11,"from","","",1087,[[]]],[11,"borrow","","",1087,[[]]],[11,"borrow_mut","","",1087,[[]]],[11,"try_from","","",1087,[[],["result",4]]],[11,"into","","",1087,[[]]],[11,"try_into","","",1087,[[],["result",4]]],[11,"type_id","","",1087,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::intenset","",1090,[[]]],[11,"borrow","","",1090,[[]]],[11,"borrow_mut","","",1090,[[]]],[11,"try_from","","",1090,[[],["result",4]]],[11,"into","","",1090,[[]]],[11,"try_into","","",1090,[[],["result",4]]],[11,"type_id","","",1090,[[],["typeid",3]]],[11,"from","","",1091,[[]]],[11,"borrow","","",1091,[[]]],[11,"borrow_mut","","",1091,[[]]],[11,"try_from","","",1091,[[],["result",4]]],[11,"into","","",1091,[[]]],[11,"try_into","","",1091,[[],["result",4]]],[11,"type_id","","",1091,[[],["typeid",3]]],[11,"from","","",1092,[[]]],[11,"borrow","","",1092,[[]]],[11,"borrow_mut","","",1092,[[]]],[11,"try_from","","",1092,[[],["result",4]]],[11,"into","","",1092,[[]]],[11,"try_into","","",1092,[[],["result",4]]],[11,"type_id","","",1092,[[],["typeid",3]]],[11,"from","","",1093,[[]]],[11,"borrow","","",1093,[[]]],[11,"borrow_mut","","",1093,[[]]],[11,"try_from","","",1093,[[],["result",4]]],[11,"into","","",1093,[[]]],[11,"try_into","","",1093,[[],["result",4]]],[11,"type_id","","",1093,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::intflag","",1096,[[]]],[11,"borrow","","",1096,[[]]],[11,"borrow_mut","","",1096,[[]]],[11,"try_from","","",1096,[[],["result",4]]],[11,"into","","",1096,[[]]],[11,"try_into","","",1096,[[],["result",4]]],[11,"type_id","","",1096,[[],["typeid",3]]],[11,"from","","",1097,[[]]],[11,"borrow","","",1097,[[]]],[11,"borrow_mut","","",1097,[[]]],[11,"try_from","","",1097,[[],["result",4]]],[11,"into","","",1097,[[]]],[11,"try_into","","",1097,[[],["result",4]]],[11,"type_id","","",1097,[[],["typeid",3]]],[11,"from","","",1098,[[]]],[11,"borrow","","",1098,[[]]],[11,"borrow_mut","","",1098,[[]]],[11,"try_from","","",1098,[[],["result",4]]],[11,"into","","",1098,[[]]],[11,"try_into","","",1098,[[],["result",4]]],[11,"type_id","","",1098,[[],["typeid",3]]],[11,"from","","",1099,[[]]],[11,"borrow","","",1099,[[]]],[11,"borrow_mut","","",1099,[[]]],[11,"try_from","","",1099,[[],["result",4]]],[11,"into","","",1099,[[]]],[11,"try_into","","",1099,[[],["result",4]]],[11,"type_id","","",1099,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::dbgctrl","",1103,[[]]],[11,"borrow","","",1103,[[]]],[11,"borrow_mut","","",1103,[[]]],[11,"try_from","","",1103,[[],["result",4]]],[11,"into","","",1103,[[]]],[11,"try_into","","",1103,[[],["result",4]]],[11,"type_id","","",1103,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::freqcorr","",1106,[[]]],[11,"borrow","","",1106,[[]]],[11,"borrow_mut","","",1106,[[]]],[11,"try_from","","",1106,[[],["result",4]]],[11,"into","","",1106,[[]]],[11,"try_into","","",1106,[[],["result",4]]],[11,"type_id","","",1106,[[],["typeid",3]]],[11,"from","","",1107,[[]]],[11,"borrow","","",1107,[[]]],[11,"borrow_mut","","",1107,[[]]],[11,"try_from","","",1107,[[],["result",4]]],[11,"into","","",1107,[[]]],[11,"try_into","","",1107,[[],["result",4]]],[11,"type_id","","",1107,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::count","",1110,[[]]],[11,"borrow","","",1110,[[]]],[11,"borrow_mut","","",1110,[[]]],[11,"try_from","","",1110,[[],["result",4]]],[11,"into","","",1110,[[]]],[11,"try_into","","",1110,[[],["result",4]]],[11,"type_id","","",1110,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::per","",1113,[[]]],[11,"borrow","","",1113,[[]]],[11,"borrow_mut","","",1113,[[]]],[11,"try_from","","",1113,[[],["result",4]]],[11,"into","","",1113,[[]]],[11,"try_into","","",1113,[[],["result",4]]],[11,"type_id","","",1113,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode1::comp","",1116,[[]]],[11,"borrow","","",1116,[[]]],[11,"borrow_mut","","",1116,[[]]],[11,"try_from","","",1116,[[],["result",4]]],[11,"into","","",1116,[[]]],[11,"try_into","","",1116,[[],["result",4]]],[11,"type_id","","",1116,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::ctrl","",1121,[[]]],[11,"borrow","","",1121,[[]]],[11,"borrow_mut","","",1121,[[]]],[11,"try_from","","",1121,[[],["result",4]]],[11,"into","","",1121,[[]]],[11,"try_into","","",1121,[[],["result",4]]],[11,"type_id","","",1121,[[],["typeid",3]]],[11,"from","","",1122,[[]]],[11,"borrow","","",1122,[[]]],[11,"borrow_mut","","",1122,[[]]],[11,"try_from","","",1122,[[],["result",4]]],[11,"into","","",1122,[[]]],[11,"try_into","","",1122,[[],["result",4]]],[11,"type_id","","",1122,[[],["typeid",3]]],[11,"from","","",1124,[[]]],[11,"borrow","","",1124,[[]]],[11,"borrow_mut","","",1124,[[]]],[11,"try_from","","",1124,[[],["result",4]]],[11,"into","","",1124,[[]]],[11,"try_into","","",1124,[[],["result",4]]],[11,"type_id","","",1124,[[],["typeid",3]]],[11,"from","","",1125,[[]]],[11,"borrow","","",1125,[[]]],[11,"borrow_mut","","",1125,[[]]],[11,"try_from","","",1125,[[],["result",4]]],[11,"into","","",1125,[[]]],[11,"try_into","","",1125,[[],["result",4]]],[11,"type_id","","",1125,[[],["typeid",3]]],[11,"from","","",1126,[[]]],[11,"borrow","","",1126,[[]]],[11,"borrow_mut","","",1126,[[]]],[11,"try_from","","",1126,[[],["result",4]]],[11,"into","","",1126,[[]]],[11,"try_into","","",1126,[[],["result",4]]],[11,"type_id","","",1126,[[],["typeid",3]]],[11,"from","","",1128,[[]]],[11,"borrow","","",1128,[[]]],[11,"borrow_mut","","",1128,[[]]],[11,"try_from","","",1128,[[],["result",4]]],[11,"into","","",1128,[[]]],[11,"try_into","","",1128,[[],["result",4]]],[11,"type_id","","",1128,[[],["typeid",3]]],[11,"from","","",1119,[[]]],[11,"borrow","","",1119,[[]]],[11,"borrow_mut","","",1119,[[]]],[11,"try_from","","",1119,[[],["result",4]]],[11,"into","","",1119,[[]]],[11,"try_into","","",1119,[[],["result",4]]],[11,"type_id","","",1119,[[],["typeid",3]]],[11,"from","","",1120,[[]]],[11,"borrow","","",1120,[[]]],[11,"borrow_mut","","",1120,[[]]],[11,"try_from","","",1120,[[],["result",4]]],[11,"into","","",1120,[[]]],[11,"try_into","","",1120,[[],["result",4]]],[11,"type_id","","",1120,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::readreq","",1131,[[]]],[11,"borrow","","",1131,[[]]],[11,"borrow_mut","","",1131,[[]]],[11,"try_from","","",1131,[[],["result",4]]],[11,"into","","",1131,[[]]],[11,"try_into","","",1131,[[],["result",4]]],[11,"type_id","","",1131,[[],["typeid",3]]],[11,"from","","",1132,[[]]],[11,"borrow","","",1132,[[]]],[11,"borrow_mut","","",1132,[[]]],[11,"try_from","","",1132,[[],["result",4]]],[11,"into","","",1132,[[]]],[11,"try_into","","",1132,[[],["result",4]]],[11,"type_id","","",1132,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::evctrl","",1135,[[]]],[11,"borrow","","",1135,[[]]],[11,"borrow_mut","","",1135,[[]]],[11,"try_from","","",1135,[[],["result",4]]],[11,"into","","",1135,[[]]],[11,"try_into","","",1135,[[],["result",4]]],[11,"type_id","","",1135,[[],["typeid",3]]],[11,"from","","",1136,[[]]],[11,"borrow","","",1136,[[]]],[11,"borrow_mut","","",1136,[[]]],[11,"try_from","","",1136,[[],["result",4]]],[11,"into","","",1136,[[]]],[11,"try_into","","",1136,[[],["result",4]]],[11,"type_id","","",1136,[[],["typeid",3]]],[11,"from","","",1137,[[]]],[11,"borrow","","",1137,[[]]],[11,"borrow_mut","","",1137,[[]]],[11,"try_from","","",1137,[[],["result",4]]],[11,"into","","",1137,[[]]],[11,"try_into","","",1137,[[],["result",4]]],[11,"type_id","","",1137,[[],["typeid",3]]],[11,"from","","",1138,[[]]],[11,"borrow","","",1138,[[]]],[11,"borrow_mut","","",1138,[[]]],[11,"try_from","","",1138,[[],["result",4]]],[11,"into","","",1138,[[]]],[11,"try_into","","",1138,[[],["result",4]]],[11,"type_id","","",1138,[[],["typeid",3]]],[11,"from","","",1139,[[]]],[11,"borrow","","",1139,[[]]],[11,"borrow_mut","","",1139,[[]]],[11,"try_from","","",1139,[[],["result",4]]],[11,"into","","",1139,[[]]],[11,"try_into","","",1139,[[],["result",4]]],[11,"type_id","","",1139,[[],["typeid",3]]],[11,"from","","",1140,[[]]],[11,"borrow","","",1140,[[]]],[11,"borrow_mut","","",1140,[[]]],[11,"try_from","","",1140,[[],["result",4]]],[11,"into","","",1140,[[]]],[11,"try_into","","",1140,[[],["result",4]]],[11,"type_id","","",1140,[[],["typeid",3]]],[11,"from","","",1141,[[]]],[11,"borrow","","",1141,[[]]],[11,"borrow_mut","","",1141,[[]]],[11,"try_from","","",1141,[[],["result",4]]],[11,"into","","",1141,[[]]],[11,"try_into","","",1141,[[],["result",4]]],[11,"type_id","","",1141,[[],["typeid",3]]],[11,"from","","",1142,[[]]],[11,"borrow","","",1142,[[]]],[11,"borrow_mut","","",1142,[[]]],[11,"try_from","","",1142,[[],["result",4]]],[11,"into","","",1142,[[]]],[11,"try_into","","",1142,[[],["result",4]]],[11,"type_id","","",1142,[[],["typeid",3]]],[11,"from","","",1143,[[]]],[11,"borrow","","",1143,[[]]],[11,"borrow_mut","","",1143,[[]]],[11,"try_from","","",1143,[[],["result",4]]],[11,"into","","",1143,[[]]],[11,"try_into","","",1143,[[],["result",4]]],[11,"type_id","","",1143,[[],["typeid",3]]],[11,"from","","",1144,[[]]],[11,"borrow","","",1144,[[]]],[11,"borrow_mut","","",1144,[[]]],[11,"try_from","","",1144,[[],["result",4]]],[11,"into","","",1144,[[]]],[11,"try_into","","",1144,[[],["result",4]]],[11,"type_id","","",1144,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::intenclr","",1147,[[]]],[11,"borrow","","",1147,[[]]],[11,"borrow_mut","","",1147,[[]]],[11,"try_from","","",1147,[[],["result",4]]],[11,"into","","",1147,[[]]],[11,"try_into","","",1147,[[],["result",4]]],[11,"type_id","","",1147,[[],["typeid",3]]],[11,"from","","",1148,[[]]],[11,"borrow","","",1148,[[]]],[11,"borrow_mut","","",1148,[[]]],[11,"try_from","","",1148,[[],["result",4]]],[11,"into","","",1148,[[]]],[11,"try_into","","",1148,[[],["result",4]]],[11,"type_id","","",1148,[[],["typeid",3]]],[11,"from","","",1149,[[]]],[11,"borrow","","",1149,[[]]],[11,"borrow_mut","","",1149,[[]]],[11,"try_from","","",1149,[[],["result",4]]],[11,"into","","",1149,[[]]],[11,"try_into","","",1149,[[],["result",4]]],[11,"type_id","","",1149,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::intenset","",1152,[[]]],[11,"borrow","","",1152,[[]]],[11,"borrow_mut","","",1152,[[]]],[11,"try_from","","",1152,[[],["result",4]]],[11,"into","","",1152,[[]]],[11,"try_into","","",1152,[[],["result",4]]],[11,"type_id","","",1152,[[],["typeid",3]]],[11,"from","","",1153,[[]]],[11,"borrow","","",1153,[[]]],[11,"borrow_mut","","",1153,[[]]],[11,"try_from","","",1153,[[],["result",4]]],[11,"into","","",1153,[[]]],[11,"try_into","","",1153,[[],["result",4]]],[11,"type_id","","",1153,[[],["typeid",3]]],[11,"from","","",1154,[[]]],[11,"borrow","","",1154,[[]]],[11,"borrow_mut","","",1154,[[]]],[11,"try_from","","",1154,[[],["result",4]]],[11,"into","","",1154,[[]]],[11,"try_into","","",1154,[[],["result",4]]],[11,"type_id","","",1154,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::intflag","",1157,[[]]],[11,"borrow","","",1157,[[]]],[11,"borrow_mut","","",1157,[[]]],[11,"try_from","","",1157,[[],["result",4]]],[11,"into","","",1157,[[]]],[11,"try_into","","",1157,[[],["result",4]]],[11,"type_id","","",1157,[[],["typeid",3]]],[11,"from","","",1158,[[]]],[11,"borrow","","",1158,[[]]],[11,"borrow_mut","","",1158,[[]]],[11,"try_from","","",1158,[[],["result",4]]],[11,"into","","",1158,[[]]],[11,"try_into","","",1158,[[],["result",4]]],[11,"type_id","","",1158,[[],["typeid",3]]],[11,"from","","",1159,[[]]],[11,"borrow","","",1159,[[]]],[11,"borrow_mut","","",1159,[[]]],[11,"try_from","","",1159,[[],["result",4]]],[11,"into","","",1159,[[]]],[11,"try_into","","",1159,[[],["result",4]]],[11,"type_id","","",1159,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::dbgctrl","",1163,[[]]],[11,"borrow","","",1163,[[]]],[11,"borrow_mut","","",1163,[[]]],[11,"try_from","","",1163,[[],["result",4]]],[11,"into","","",1163,[[]]],[11,"try_into","","",1163,[[],["result",4]]],[11,"type_id","","",1163,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::freqcorr","",1166,[[]]],[11,"borrow","","",1166,[[]]],[11,"borrow_mut","","",1166,[[]]],[11,"try_from","","",1166,[[],["result",4]]],[11,"into","","",1166,[[]]],[11,"try_into","","",1166,[[],["result",4]]],[11,"type_id","","",1166,[[],["typeid",3]]],[11,"from","","",1167,[[]]],[11,"borrow","","",1167,[[]]],[11,"borrow_mut","","",1167,[[]]],[11,"try_from","","",1167,[[],["result",4]]],[11,"into","","",1167,[[]]],[11,"try_into","","",1167,[[],["result",4]]],[11,"type_id","","",1167,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::clock","",1171,[[]]],[11,"borrow","","",1171,[[]]],[11,"borrow_mut","","",1171,[[]]],[11,"try_from","","",1171,[[],["result",4]]],[11,"into","","",1171,[[]]],[11,"try_into","","",1171,[[],["result",4]]],[11,"type_id","","",1171,[[],["typeid",3]]],[11,"from","","",1172,[[]]],[11,"borrow","","",1172,[[]]],[11,"borrow_mut","","",1172,[[]]],[11,"try_from","","",1172,[[],["result",4]]],[11,"into","","",1172,[[]]],[11,"try_into","","",1172,[[],["result",4]]],[11,"type_id","","",1172,[[],["typeid",3]]],[11,"from","","",1174,[[]]],[11,"borrow","","",1174,[[]]],[11,"borrow_mut","","",1174,[[]]],[11,"try_from","","",1174,[[],["result",4]]],[11,"into","","",1174,[[]]],[11,"try_into","","",1174,[[],["result",4]]],[11,"type_id","","",1174,[[],["typeid",3]]],[11,"from","","",1175,[[]]],[11,"borrow","","",1175,[[]]],[11,"borrow_mut","","",1175,[[]]],[11,"try_from","","",1175,[[],["result",4]]],[11,"into","","",1175,[[]]],[11,"try_into","","",1175,[[],["result",4]]],[11,"type_id","","",1175,[[],["typeid",3]]],[11,"from","","",1176,[[]]],[11,"borrow","","",1176,[[]]],[11,"borrow_mut","","",1176,[[]]],[11,"try_from","","",1176,[[],["result",4]]],[11,"into","","",1176,[[]]],[11,"try_into","","",1176,[[],["result",4]]],[11,"type_id","","",1176,[[],["typeid",3]]],[11,"from","","",1177,[[]]],[11,"borrow","","",1177,[[]]],[11,"borrow_mut","","",1177,[[]]],[11,"try_from","","",1177,[[],["result",4]]],[11,"into","","",1177,[[]]],[11,"try_into","","",1177,[[],["result",4]]],[11,"type_id","","",1177,[[],["typeid",3]]],[11,"from","","",1170,[[]]],[11,"borrow","","",1170,[[]]],[11,"borrow_mut","","",1170,[[]]],[11,"try_from","","",1170,[[],["result",4]]],[11,"into","","",1170,[[]]],[11,"try_into","","",1170,[[],["result",4]]],[11,"type_id","","",1170,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::alarm","",1181,[[]]],[11,"borrow","","",1181,[[]]],[11,"borrow_mut","","",1181,[[]]],[11,"try_from","","",1181,[[],["result",4]]],[11,"into","","",1181,[[]]],[11,"try_into","","",1181,[[],["result",4]]],[11,"type_id","","",1181,[[],["typeid",3]]],[11,"from","","",1182,[[]]],[11,"borrow","","",1182,[[]]],[11,"borrow_mut","","",1182,[[]]],[11,"try_from","","",1182,[[],["result",4]]],[11,"into","","",1182,[[]]],[11,"try_into","","",1182,[[],["result",4]]],[11,"type_id","","",1182,[[],["typeid",3]]],[11,"from","","",1184,[[]]],[11,"borrow","","",1184,[[]]],[11,"borrow_mut","","",1184,[[]]],[11,"try_from","","",1184,[[],["result",4]]],[11,"into","","",1184,[[]]],[11,"try_into","","",1184,[[],["result",4]]],[11,"type_id","","",1184,[[],["typeid",3]]],[11,"from","","",1185,[[]]],[11,"borrow","","",1185,[[]]],[11,"borrow_mut","","",1185,[[]]],[11,"try_from","","",1185,[[],["result",4]]],[11,"into","","",1185,[[]]],[11,"try_into","","",1185,[[],["result",4]]],[11,"type_id","","",1185,[[],["typeid",3]]],[11,"from","","",1186,[[]]],[11,"borrow","","",1186,[[]]],[11,"borrow_mut","","",1186,[[]]],[11,"try_from","","",1186,[[],["result",4]]],[11,"into","","",1186,[[]]],[11,"try_into","","",1186,[[],["result",4]]],[11,"type_id","","",1186,[[],["typeid",3]]],[11,"from","","",1187,[[]]],[11,"borrow","","",1187,[[]]],[11,"borrow_mut","","",1187,[[]]],[11,"try_from","","",1187,[[],["result",4]]],[11,"into","","",1187,[[]]],[11,"try_into","","",1187,[[],["result",4]]],[11,"type_id","","",1187,[[],["typeid",3]]],[11,"from","","",1180,[[]]],[11,"borrow","","",1180,[[]]],[11,"borrow_mut","","",1180,[[]]],[11,"try_from","","",1180,[[],["result",4]]],[11,"into","","",1180,[[]]],[11,"try_into","","",1180,[[],["result",4]]],[11,"type_id","","",1180,[[],["typeid",3]]],[11,"from","atsamd21g::rtc::mode2::mask","",1192,[[]]],[11,"borrow","","",1192,[[]]],[11,"borrow_mut","","",1192,[[]]],[11,"try_from","","",1192,[[],["result",4]]],[11,"into","","",1192,[[]]],[11,"try_into","","",1192,[[],["result",4]]],[11,"type_id","","",1192,[[],["typeid",3]]],[11,"from","","",1190,[[]]],[11,"borrow","","",1190,[[]]],[11,"borrow_mut","","",1190,[[]]],[11,"try_from","","",1190,[[],["result",4]]],[11,"into","","",1190,[[]]],[11,"try_into","","",1190,[[],["result",4]]],[11,"type_id","","",1190,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0","",1465,[[]]],[11,"borrow","","",1465,[[]]],[11,"borrow_mut","","",1465,[[]]],[11,"try_from","","",1465,[[],["result",4]]],[11,"into","","",1465,[[]]],[11,"try_into","","",1465,[[],["result",4]]],[11,"type_id","","",1465,[[],["typeid",3]]],[11,"from","","",1196,[[]]],[11,"borrow","","",1196,[[]]],[11,"borrow_mut","","",1196,[[]]],[11,"try_from","","",1196,[[],["result",4]]],[11,"into","","",1196,[[]]],[11,"try_into","","",1196,[[],["result",4]]],[11,"type_id","","",1196,[[],["typeid",3]]],[11,"from","","",1197,[[]]],[11,"borrow","","",1197,[[]]],[11,"borrow_mut","","",1197,[[]]],[11,"try_from","","",1197,[[],["result",4]]],[11,"into","","",1197,[[]]],[11,"try_into","","",1197,[[],["result",4]]],[11,"type_id","","",1197,[[],["typeid",3]]],[11,"from","","",1198,[[]]],[11,"borrow","","",1198,[[]]],[11,"borrow_mut","","",1198,[[]]],[11,"try_from","","",1198,[[],["result",4]]],[11,"into","","",1198,[[]]],[11,"try_into","","",1198,[[],["result",4]]],[11,"type_id","","",1198,[[],["typeid",3]]],[11,"from","","",1199,[[]]],[11,"borrow","","",1199,[[]]],[11,"borrow_mut","","",1199,[[]]],[11,"try_from","","",1199,[[],["result",4]]],[11,"into","","",1199,[[]]],[11,"try_into","","",1199,[[],["result",4]]],[11,"type_id","","",1199,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::ctrla","",1201,[[]]],[11,"borrow","","",1201,[[]]],[11,"borrow_mut","","",1201,[[]]],[11,"try_from","","",1201,[[],["result",4]]],[11,"into","","",1201,[[]]],[11,"try_into","","",1201,[[],["result",4]]],[11,"type_id","","",1201,[[],["typeid",3]]],[11,"from","","",1202,[[]]],[11,"borrow","","",1202,[[]]],[11,"borrow_mut","","",1202,[[]]],[11,"try_from","","",1202,[[],["result",4]]],[11,"into","","",1202,[[]]],[11,"try_into","","",1202,[[],["result",4]]],[11,"type_id","","",1202,[[],["typeid",3]]],[11,"from","","",1204,[[]]],[11,"borrow","","",1204,[[]]],[11,"borrow_mut","","",1204,[[]]],[11,"try_from","","",1204,[[],["result",4]]],[11,"into","","",1204,[[]]],[11,"try_into","","",1204,[[],["result",4]]],[11,"type_id","","",1204,[[],["typeid",3]]],[11,"from","","",1205,[[]]],[11,"borrow","","",1205,[[]]],[11,"borrow_mut","","",1205,[[]]],[11,"try_from","","",1205,[[],["result",4]]],[11,"into","","",1205,[[]]],[11,"try_into","","",1205,[[],["result",4]]],[11,"type_id","","",1205,[[],["typeid",3]]],[11,"from","","",1206,[[]]],[11,"borrow","","",1206,[[]]],[11,"borrow_mut","","",1206,[[]]],[11,"try_from","","",1206,[[],["result",4]]],[11,"into","","",1206,[[]]],[11,"try_into","","",1206,[[],["result",4]]],[11,"type_id","","",1206,[[],["typeid",3]]],[11,"from","","",1207,[[]]],[11,"borrow","","",1207,[[]]],[11,"borrow_mut","","",1207,[[]]],[11,"try_from","","",1207,[[],["result",4]]],[11,"into","","",1207,[[]]],[11,"try_into","","",1207,[[],["result",4]]],[11,"type_id","","",1207,[[],["typeid",3]]],[11,"from","","",1208,[[]]],[11,"borrow","","",1208,[[]]],[11,"borrow_mut","","",1208,[[]]],[11,"try_from","","",1208,[[],["result",4]]],[11,"into","","",1208,[[]]],[11,"try_into","","",1208,[[],["result",4]]],[11,"type_id","","",1208,[[],["typeid",3]]],[11,"from","","",1209,[[]]],[11,"borrow","","",1209,[[]]],[11,"borrow_mut","","",1209,[[]]],[11,"try_from","","",1209,[[],["result",4]]],[11,"into","","",1209,[[]]],[11,"try_into","","",1209,[[],["result",4]]],[11,"type_id","","",1209,[[],["typeid",3]]],[11,"from","","",1210,[[]]],[11,"borrow","","",1210,[[]]],[11,"borrow_mut","","",1210,[[]]],[11,"try_from","","",1210,[[],["result",4]]],[11,"into","","",1210,[[]]],[11,"try_into","","",1210,[[],["result",4]]],[11,"type_id","","",1210,[[],["typeid",3]]],[11,"from","","",1211,[[]]],[11,"borrow","","",1211,[[]]],[11,"borrow_mut","","",1211,[[]]],[11,"try_from","","",1211,[[],["result",4]]],[11,"into","","",1211,[[]]],[11,"try_into","","",1211,[[],["result",4]]],[11,"type_id","","",1211,[[],["typeid",3]]],[11,"from","","",1212,[[]]],[11,"borrow","","",1212,[[]]],[11,"borrow_mut","","",1212,[[]]],[11,"try_from","","",1212,[[],["result",4]]],[11,"into","","",1212,[[]]],[11,"try_into","","",1212,[[],["result",4]]],[11,"type_id","","",1212,[[],["typeid",3]]],[11,"from","","",1213,[[]]],[11,"borrow","","",1213,[[]]],[11,"borrow_mut","","",1213,[[]]],[11,"try_from","","",1213,[[],["result",4]]],[11,"into","","",1213,[[]]],[11,"try_into","","",1213,[[],["result",4]]],[11,"type_id","","",1213,[[],["typeid",3]]],[11,"from","","",1200,[[]]],[11,"borrow","","",1200,[[]]],[11,"borrow_mut","","",1200,[[]]],[11,"try_from","","",1200,[[],["result",4]]],[11,"into","","",1200,[[]]],[11,"try_into","","",1200,[[],["result",4]]],[11,"type_id","","",1200,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::ctrlb","",1216,[[]]],[11,"borrow","","",1216,[[]]],[11,"borrow_mut","","",1216,[[]]],[11,"try_from","","",1216,[[],["result",4]]],[11,"into","","",1216,[[]]],[11,"try_into","","",1216,[[],["result",4]]],[11,"type_id","","",1216,[[],["typeid",3]]],[11,"from","","",1217,[[]]],[11,"borrow","","",1217,[[]]],[11,"borrow_mut","","",1217,[[]]],[11,"try_from","","",1217,[[],["result",4]]],[11,"into","","",1217,[[]]],[11,"try_into","","",1217,[[],["result",4]]],[11,"type_id","","",1217,[[],["typeid",3]]],[11,"from","","",1218,[[]]],[11,"borrow","","",1218,[[]]],[11,"borrow_mut","","",1218,[[]]],[11,"try_from","","",1218,[[],["result",4]]],[11,"into","","",1218,[[]]],[11,"try_into","","",1218,[[],["result",4]]],[11,"type_id","","",1218,[[],["typeid",3]]],[11,"from","","",1219,[[]]],[11,"borrow","","",1219,[[]]],[11,"borrow_mut","","",1219,[[]]],[11,"try_from","","",1219,[[],["result",4]]],[11,"into","","",1219,[[]]],[11,"try_into","","",1219,[[],["result",4]]],[11,"type_id","","",1219,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::baud","",1222,[[]]],[11,"borrow","","",1222,[[]]],[11,"borrow_mut","","",1222,[[]]],[11,"try_from","","",1222,[[],["result",4]]],[11,"into","","",1222,[[]]],[11,"try_into","","",1222,[[],["result",4]]],[11,"type_id","","",1222,[[],["typeid",3]]],[11,"from","","",1223,[[]]],[11,"borrow","","",1223,[[]]],[11,"borrow_mut","","",1223,[[]]],[11,"try_from","","",1223,[[],["result",4]]],[11,"into","","",1223,[[]]],[11,"try_into","","",1223,[[],["result",4]]],[11,"type_id","","",1223,[[],["typeid",3]]],[11,"from","","",1224,[[]]],[11,"borrow","","",1224,[[]]],[11,"borrow_mut","","",1224,[[]]],[11,"try_from","","",1224,[[],["result",4]]],[11,"into","","",1224,[[]]],[11,"try_into","","",1224,[[],["result",4]]],[11,"type_id","","",1224,[[],["typeid",3]]],[11,"from","","",1225,[[]]],[11,"borrow","","",1225,[[]]],[11,"borrow_mut","","",1225,[[]]],[11,"try_from","","",1225,[[],["result",4]]],[11,"into","","",1225,[[]]],[11,"try_into","","",1225,[[],["result",4]]],[11,"type_id","","",1225,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::intenclr","",1228,[[]]],[11,"borrow","","",1228,[[]]],[11,"borrow_mut","","",1228,[[]]],[11,"try_from","","",1228,[[],["result",4]]],[11,"into","","",1228,[[]]],[11,"try_into","","",1228,[[],["result",4]]],[11,"type_id","","",1228,[[],["typeid",3]]],[11,"from","","",1229,[[]]],[11,"borrow","","",1229,[[]]],[11,"borrow_mut","","",1229,[[]]],[11,"try_from","","",1229,[[],["result",4]]],[11,"into","","",1229,[[]]],[11,"try_into","","",1229,[[],["result",4]]],[11,"type_id","","",1229,[[],["typeid",3]]],[11,"from","","",1230,[[]]],[11,"borrow","","",1230,[[]]],[11,"borrow_mut","","",1230,[[]]],[11,"try_from","","",1230,[[],["result",4]]],[11,"into","","",1230,[[]]],[11,"try_into","","",1230,[[],["result",4]]],[11,"type_id","","",1230,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::intenset","",1233,[[]]],[11,"borrow","","",1233,[[]]],[11,"borrow_mut","","",1233,[[]]],[11,"try_from","","",1233,[[],["result",4]]],[11,"into","","",1233,[[]]],[11,"try_into","","",1233,[[],["result",4]]],[11,"type_id","","",1233,[[],["typeid",3]]],[11,"from","","",1234,[[]]],[11,"borrow","","",1234,[[]]],[11,"borrow_mut","","",1234,[[]]],[11,"try_from","","",1234,[[],["result",4]]],[11,"into","","",1234,[[]]],[11,"try_into","","",1234,[[],["result",4]]],[11,"type_id","","",1234,[[],["typeid",3]]],[11,"from","","",1235,[[]]],[11,"borrow","","",1235,[[]]],[11,"borrow_mut","","",1235,[[]]],[11,"try_from","","",1235,[[],["result",4]]],[11,"into","","",1235,[[]]],[11,"try_into","","",1235,[[],["result",4]]],[11,"type_id","","",1235,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::intflag","",1238,[[]]],[11,"borrow","","",1238,[[]]],[11,"borrow_mut","","",1238,[[]]],[11,"try_from","","",1238,[[],["result",4]]],[11,"into","","",1238,[[]]],[11,"try_into","","",1238,[[],["result",4]]],[11,"type_id","","",1238,[[],["typeid",3]]],[11,"from","","",1239,[[]]],[11,"borrow","","",1239,[[]]],[11,"borrow_mut","","",1239,[[]]],[11,"try_from","","",1239,[[],["result",4]]],[11,"into","","",1239,[[]]],[11,"try_into","","",1239,[[],["result",4]]],[11,"type_id","","",1239,[[],["typeid",3]]],[11,"from","","",1240,[[]]],[11,"borrow","","",1240,[[]]],[11,"borrow_mut","","",1240,[[]]],[11,"try_from","","",1240,[[],["result",4]]],[11,"into","","",1240,[[]]],[11,"try_into","","",1240,[[],["result",4]]],[11,"type_id","","",1240,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::status","",1243,[[]]],[11,"borrow","","",1243,[[]]],[11,"borrow_mut","","",1243,[[]]],[11,"try_from","","",1243,[[],["result",4]]],[11,"into","","",1243,[[]]],[11,"try_into","","",1243,[[],["result",4]]],[11,"type_id","","",1243,[[],["typeid",3]]],[11,"from","","",1244,[[]]],[11,"borrow","","",1244,[[]]],[11,"borrow_mut","","",1244,[[]]],[11,"try_from","","",1244,[[],["result",4]]],[11,"into","","",1244,[[]]],[11,"try_into","","",1244,[[],["result",4]]],[11,"type_id","","",1244,[[],["typeid",3]]],[11,"from","","",1245,[[]]],[11,"borrow","","",1245,[[]]],[11,"borrow_mut","","",1245,[[]]],[11,"try_from","","",1245,[[],["result",4]]],[11,"into","","",1245,[[]]],[11,"try_into","","",1245,[[],["result",4]]],[11,"type_id","","",1245,[[],["typeid",3]]],[11,"from","","",1246,[[]]],[11,"borrow","","",1246,[[]]],[11,"borrow_mut","","",1246,[[]]],[11,"try_from","","",1246,[[],["result",4]]],[11,"into","","",1246,[[]]],[11,"try_into","","",1246,[[],["result",4]]],[11,"type_id","","",1246,[[],["typeid",3]]],[11,"from","","",1247,[[]]],[11,"borrow","","",1247,[[]]],[11,"borrow_mut","","",1247,[[]]],[11,"try_from","","",1247,[[],["result",4]]],[11,"into","","",1247,[[]]],[11,"try_into","","",1247,[[],["result",4]]],[11,"type_id","","",1247,[[],["typeid",3]]],[11,"from","","",1248,[[]]],[11,"borrow","","",1248,[[]]],[11,"borrow_mut","","",1248,[[]]],[11,"try_from","","",1248,[[],["result",4]]],[11,"into","","",1248,[[]]],[11,"try_into","","",1248,[[],["result",4]]],[11,"type_id","","",1248,[[],["typeid",3]]],[11,"from","","",1249,[[]]],[11,"borrow","","",1249,[[]]],[11,"borrow_mut","","",1249,[[]]],[11,"try_from","","",1249,[[],["result",4]]],[11,"into","","",1249,[[]]],[11,"try_into","","",1249,[[],["result",4]]],[11,"type_id","","",1249,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::addr","",1253,[[]]],[11,"borrow","","",1253,[[]]],[11,"borrow_mut","","",1253,[[]]],[11,"try_from","","",1253,[[],["result",4]]],[11,"into","","",1253,[[]]],[11,"try_into","","",1253,[[],["result",4]]],[11,"type_id","","",1253,[[],["typeid",3]]],[11,"from","","",1254,[[]]],[11,"borrow","","",1254,[[]]],[11,"borrow_mut","","",1254,[[]]],[11,"try_from","","",1254,[[],["result",4]]],[11,"into","","",1254,[[]]],[11,"try_into","","",1254,[[],["result",4]]],[11,"type_id","","",1254,[[],["typeid",3]]],[11,"from","","",1255,[[]]],[11,"borrow","","",1255,[[]]],[11,"borrow_mut","","",1255,[[]]],[11,"try_from","","",1255,[[],["result",4]]],[11,"into","","",1255,[[]]],[11,"try_into","","",1255,[[],["result",4]]],[11,"type_id","","",1255,[[],["typeid",3]]],[11,"from","","",1256,[[]]],[11,"borrow","","",1256,[[]]],[11,"borrow_mut","","",1256,[[]]],[11,"try_from","","",1256,[[],["result",4]]],[11,"into","","",1256,[[]]],[11,"try_into","","",1256,[[],["result",4]]],[11,"type_id","","",1256,[[],["typeid",3]]],[11,"from","","",1257,[[]]],[11,"borrow","","",1257,[[]]],[11,"borrow_mut","","",1257,[[]]],[11,"try_from","","",1257,[[],["result",4]]],[11,"into","","",1257,[[]]],[11,"try_into","","",1257,[[],["result",4]]],[11,"type_id","","",1257,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::data","",1260,[[]]],[11,"borrow","","",1260,[[]]],[11,"borrow_mut","","",1260,[[]]],[11,"try_from","","",1260,[[],["result",4]]],[11,"into","","",1260,[[]]],[11,"try_into","","",1260,[[],["result",4]]],[11,"type_id","","",1260,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cm::dbgctrl","",1263,[[]]],[11,"borrow","","",1263,[[]]],[11,"borrow_mut","","",1263,[[]]],[11,"try_from","","",1263,[[],["result",4]]],[11,"into","","",1263,[[]]],[11,"try_into","","",1263,[[],["result",4]]],[11,"type_id","","",1263,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::ctrla","",1267,[[]]],[11,"borrow","","",1267,[[]]],[11,"borrow_mut","","",1267,[[]]],[11,"try_from","","",1267,[[],["result",4]]],[11,"into","","",1267,[[]]],[11,"try_into","","",1267,[[],["result",4]]],[11,"type_id","","",1267,[[],["typeid",3]]],[11,"from","","",1268,[[]]],[11,"borrow","","",1268,[[]]],[11,"borrow_mut","","",1268,[[]]],[11,"try_from","","",1268,[[],["result",4]]],[11,"into","","",1268,[[]]],[11,"try_into","","",1268,[[],["result",4]]],[11,"type_id","","",1268,[[],["typeid",3]]],[11,"from","","",1270,[[]]],[11,"borrow","","",1270,[[]]],[11,"borrow_mut","","",1270,[[]]],[11,"try_from","","",1270,[[],["result",4]]],[11,"into","","",1270,[[]]],[11,"try_into","","",1270,[[],["result",4]]],[11,"type_id","","",1270,[[],["typeid",3]]],[11,"from","","",1271,[[]]],[11,"borrow","","",1271,[[]]],[11,"borrow_mut","","",1271,[[]]],[11,"try_from","","",1271,[[],["result",4]]],[11,"into","","",1271,[[]]],[11,"try_into","","",1271,[[],["result",4]]],[11,"type_id","","",1271,[[],["typeid",3]]],[11,"from","","",1272,[[]]],[11,"borrow","","",1272,[[]]],[11,"borrow_mut","","",1272,[[]]],[11,"try_from","","",1272,[[],["result",4]]],[11,"into","","",1272,[[]]],[11,"try_into","","",1272,[[],["result",4]]],[11,"type_id","","",1272,[[],["typeid",3]]],[11,"from","","",1273,[[]]],[11,"borrow","","",1273,[[]]],[11,"borrow_mut","","",1273,[[]]],[11,"try_from","","",1273,[[],["result",4]]],[11,"into","","",1273,[[]]],[11,"try_into","","",1273,[[],["result",4]]],[11,"type_id","","",1273,[[],["typeid",3]]],[11,"from","","",1274,[[]]],[11,"borrow","","",1274,[[]]],[11,"borrow_mut","","",1274,[[]]],[11,"try_from","","",1274,[[],["result",4]]],[11,"into","","",1274,[[]]],[11,"try_into","","",1274,[[],["result",4]]],[11,"type_id","","",1274,[[],["typeid",3]]],[11,"from","","",1275,[[]]],[11,"borrow","","",1275,[[]]],[11,"borrow_mut","","",1275,[[]]],[11,"try_from","","",1275,[[],["result",4]]],[11,"into","","",1275,[[]]],[11,"try_into","","",1275,[[],["result",4]]],[11,"type_id","","",1275,[[],["typeid",3]]],[11,"from","","",1276,[[]]],[11,"borrow","","",1276,[[]]],[11,"borrow_mut","","",1276,[[]]],[11,"try_from","","",1276,[[],["result",4]]],[11,"into","","",1276,[[]]],[11,"try_into","","",1276,[[],["result",4]]],[11,"type_id","","",1276,[[],["typeid",3]]],[11,"from","","",1277,[[]]],[11,"borrow","","",1277,[[]]],[11,"borrow_mut","","",1277,[[]]],[11,"try_from","","",1277,[[],["result",4]]],[11,"into","","",1277,[[]]],[11,"try_into","","",1277,[[],["result",4]]],[11,"type_id","","",1277,[[],["typeid",3]]],[11,"from","","",1266,[[]]],[11,"borrow","","",1266,[[]]],[11,"borrow_mut","","",1266,[[]]],[11,"try_from","","",1266,[[],["result",4]]],[11,"into","","",1266,[[]]],[11,"try_into","","",1266,[[],["result",4]]],[11,"type_id","","",1266,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::ctrlb","",1280,[[]]],[11,"borrow","","",1280,[[]]],[11,"borrow_mut","","",1280,[[]]],[11,"try_from","","",1280,[[],["result",4]]],[11,"into","","",1280,[[]]],[11,"try_into","","",1280,[[],["result",4]]],[11,"type_id","","",1280,[[],["typeid",3]]],[11,"from","","",1281,[[]]],[11,"borrow","","",1281,[[]]],[11,"borrow_mut","","",1281,[[]]],[11,"try_from","","",1281,[[],["result",4]]],[11,"into","","",1281,[[]]],[11,"try_into","","",1281,[[],["result",4]]],[11,"type_id","","",1281,[[],["typeid",3]]],[11,"from","","",1282,[[]]],[11,"borrow","","",1282,[[]]],[11,"borrow_mut","","",1282,[[]]],[11,"try_from","","",1282,[[],["result",4]]],[11,"into","","",1282,[[]]],[11,"try_into","","",1282,[[],["result",4]]],[11,"type_id","","",1282,[[],["typeid",3]]],[11,"from","","",1283,[[]]],[11,"borrow","","",1283,[[]]],[11,"borrow_mut","","",1283,[[]]],[11,"try_from","","",1283,[[],["result",4]]],[11,"into","","",1283,[[]]],[11,"try_into","","",1283,[[],["result",4]]],[11,"type_id","","",1283,[[],["typeid",3]]],[11,"from","","",1284,[[]]],[11,"borrow","","",1284,[[]]],[11,"borrow_mut","","",1284,[[]]],[11,"try_from","","",1284,[[],["result",4]]],[11,"into","","",1284,[[]]],[11,"try_into","","",1284,[[],["result",4]]],[11,"type_id","","",1284,[[],["typeid",3]]],[11,"from","","",1285,[[]]],[11,"borrow","","",1285,[[]]],[11,"borrow_mut","","",1285,[[]]],[11,"try_from","","",1285,[[],["result",4]]],[11,"into","","",1285,[[]]],[11,"try_into","","",1285,[[],["result",4]]],[11,"type_id","","",1285,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::intenclr","",1288,[[]]],[11,"borrow","","",1288,[[]]],[11,"borrow_mut","","",1288,[[]]],[11,"try_from","","",1288,[[],["result",4]]],[11,"into","","",1288,[[]]],[11,"try_into","","",1288,[[],["result",4]]],[11,"type_id","","",1288,[[],["typeid",3]]],[11,"from","","",1289,[[]]],[11,"borrow","","",1289,[[]]],[11,"borrow_mut","","",1289,[[]]],[11,"try_from","","",1289,[[],["result",4]]],[11,"into","","",1289,[[]]],[11,"try_into","","",1289,[[],["result",4]]],[11,"type_id","","",1289,[[],["typeid",3]]],[11,"from","","",1290,[[]]],[11,"borrow","","",1290,[[]]],[11,"borrow_mut","","",1290,[[]]],[11,"try_from","","",1290,[[],["result",4]]],[11,"into","","",1290,[[]]],[11,"try_into","","",1290,[[],["result",4]]],[11,"type_id","","",1290,[[],["typeid",3]]],[11,"from","","",1291,[[]]],[11,"borrow","","",1291,[[]]],[11,"borrow_mut","","",1291,[[]]],[11,"try_from","","",1291,[[],["result",4]]],[11,"into","","",1291,[[]]],[11,"try_into","","",1291,[[],["result",4]]],[11,"type_id","","",1291,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::intenset","",1294,[[]]],[11,"borrow","","",1294,[[]]],[11,"borrow_mut","","",1294,[[]]],[11,"try_from","","",1294,[[],["result",4]]],[11,"into","","",1294,[[]]],[11,"try_into","","",1294,[[],["result",4]]],[11,"type_id","","",1294,[[],["typeid",3]]],[11,"from","","",1295,[[]]],[11,"borrow","","",1295,[[]]],[11,"borrow_mut","","",1295,[[]]],[11,"try_from","","",1295,[[],["result",4]]],[11,"into","","",1295,[[]]],[11,"try_into","","",1295,[[],["result",4]]],[11,"type_id","","",1295,[[],["typeid",3]]],[11,"from","","",1296,[[]]],[11,"borrow","","",1296,[[]]],[11,"borrow_mut","","",1296,[[]]],[11,"try_from","","",1296,[[],["result",4]]],[11,"into","","",1296,[[]]],[11,"try_into","","",1296,[[],["result",4]]],[11,"type_id","","",1296,[[],["typeid",3]]],[11,"from","","",1297,[[]]],[11,"borrow","","",1297,[[]]],[11,"borrow_mut","","",1297,[[]]],[11,"try_from","","",1297,[[],["result",4]]],[11,"into","","",1297,[[]]],[11,"try_into","","",1297,[[],["result",4]]],[11,"type_id","","",1297,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::intflag","",1300,[[]]],[11,"borrow","","",1300,[[]]],[11,"borrow_mut","","",1300,[[]]],[11,"try_from","","",1300,[[],["result",4]]],[11,"into","","",1300,[[]]],[11,"try_into","","",1300,[[],["result",4]]],[11,"type_id","","",1300,[[],["typeid",3]]],[11,"from","","",1301,[[]]],[11,"borrow","","",1301,[[]]],[11,"borrow_mut","","",1301,[[]]],[11,"try_from","","",1301,[[],["result",4]]],[11,"into","","",1301,[[]]],[11,"try_into","","",1301,[[],["result",4]]],[11,"type_id","","",1301,[[],["typeid",3]]],[11,"from","","",1302,[[]]],[11,"borrow","","",1302,[[]]],[11,"borrow_mut","","",1302,[[]]],[11,"try_from","","",1302,[[],["result",4]]],[11,"into","","",1302,[[]]],[11,"try_into","","",1302,[[],["result",4]]],[11,"type_id","","",1302,[[],["typeid",3]]],[11,"from","","",1303,[[]]],[11,"borrow","","",1303,[[]]],[11,"borrow_mut","","",1303,[[]]],[11,"try_from","","",1303,[[],["result",4]]],[11,"into","","",1303,[[]]],[11,"try_into","","",1303,[[],["result",4]]],[11,"type_id","","",1303,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::status","",1306,[[]]],[11,"borrow","","",1306,[[]]],[11,"borrow_mut","","",1306,[[]]],[11,"try_from","","",1306,[[],["result",4]]],[11,"into","","",1306,[[]]],[11,"try_into","","",1306,[[],["result",4]]],[11,"type_id","","",1306,[[],["typeid",3]]],[11,"from","","",1307,[[]]],[11,"borrow","","",1307,[[]]],[11,"borrow_mut","","",1307,[[]]],[11,"try_from","","",1307,[[],["result",4]]],[11,"into","","",1307,[[]]],[11,"try_into","","",1307,[[],["result",4]]],[11,"type_id","","",1307,[[],["typeid",3]]],[11,"from","","",1308,[[]]],[11,"borrow","","",1308,[[]]],[11,"borrow_mut","","",1308,[[]]],[11,"try_from","","",1308,[[],["result",4]]],[11,"into","","",1308,[[]]],[11,"try_into","","",1308,[[],["result",4]]],[11,"type_id","","",1308,[[],["typeid",3]]],[11,"from","","",1309,[[]]],[11,"borrow","","",1309,[[]]],[11,"borrow_mut","","",1309,[[]]],[11,"try_from","","",1309,[[],["result",4]]],[11,"into","","",1309,[[]]],[11,"try_into","","",1309,[[],["result",4]]],[11,"type_id","","",1309,[[],["typeid",3]]],[11,"from","","",1310,[[]]],[11,"borrow","","",1310,[[]]],[11,"borrow_mut","","",1310,[[]]],[11,"try_from","","",1310,[[],["result",4]]],[11,"into","","",1310,[[]]],[11,"try_into","","",1310,[[],["result",4]]],[11,"type_id","","",1310,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::addr","",1314,[[]]],[11,"borrow","","",1314,[[]]],[11,"borrow_mut","","",1314,[[]]],[11,"try_from","","",1314,[[],["result",4]]],[11,"into","","",1314,[[]]],[11,"try_into","","",1314,[[],["result",4]]],[11,"type_id","","",1314,[[],["typeid",3]]],[11,"from","","",1315,[[]]],[11,"borrow","","",1315,[[]]],[11,"borrow_mut","","",1315,[[]]],[11,"try_from","","",1315,[[],["result",4]]],[11,"into","","",1315,[[]]],[11,"try_into","","",1315,[[],["result",4]]],[11,"type_id","","",1315,[[],["typeid",3]]],[11,"from","","",1316,[[]]],[11,"borrow","","",1316,[[]]],[11,"borrow_mut","","",1316,[[]]],[11,"try_from","","",1316,[[],["result",4]]],[11,"into","","",1316,[[]]],[11,"try_into","","",1316,[[],["result",4]]],[11,"type_id","","",1316,[[],["typeid",3]]],[11,"from","","",1317,[[]]],[11,"borrow","","",1317,[[]]],[11,"borrow_mut","","",1317,[[]]],[11,"try_from","","",1317,[[],["result",4]]],[11,"into","","",1317,[[]]],[11,"try_into","","",1317,[[],["result",4]]],[11,"type_id","","",1317,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::i2cs::data","",1320,[[]]],[11,"borrow","","",1320,[[]]],[11,"borrow_mut","","",1320,[[]]],[11,"try_from","","",1320,[[],["result",4]]],[11,"into","","",1320,[[]]],[11,"try_into","","",1320,[[],["result",4]]],[11,"type_id","","",1320,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::ctrla","",1324,[[]]],[11,"borrow","","",1324,[[]]],[11,"borrow_mut","","",1324,[[]]],[11,"try_from","","",1324,[[],["result",4]]],[11,"into","","",1324,[[]]],[11,"try_into","","",1324,[[],["result",4]]],[11,"type_id","","",1324,[[],["typeid",3]]],[11,"from","","",1325,[[]]],[11,"borrow","","",1325,[[]]],[11,"borrow_mut","","",1325,[[]]],[11,"try_from","","",1325,[[],["result",4]]],[11,"into","","",1325,[[]]],[11,"try_into","","",1325,[[],["result",4]]],[11,"type_id","","",1325,[[],["typeid",3]]],[11,"from","","",1327,[[]]],[11,"borrow","","",1327,[[]]],[11,"borrow_mut","","",1327,[[]]],[11,"try_from","","",1327,[[],["result",4]]],[11,"into","","",1327,[[]]],[11,"try_into","","",1327,[[],["result",4]]],[11,"type_id","","",1327,[[],["typeid",3]]],[11,"from","","",1328,[[]]],[11,"borrow","","",1328,[[]]],[11,"borrow_mut","","",1328,[[]]],[11,"try_from","","",1328,[[],["result",4]]],[11,"into","","",1328,[[]]],[11,"try_into","","",1328,[[],["result",4]]],[11,"type_id","","",1328,[[],["typeid",3]]],[11,"from","","",1329,[[]]],[11,"borrow","","",1329,[[]]],[11,"borrow_mut","","",1329,[[]]],[11,"try_from","","",1329,[[],["result",4]]],[11,"into","","",1329,[[]]],[11,"try_into","","",1329,[[],["result",4]]],[11,"type_id","","",1329,[[],["typeid",3]]],[11,"from","","",1330,[[]]],[11,"borrow","","",1330,[[]]],[11,"borrow_mut","","",1330,[[]]],[11,"try_from","","",1330,[[],["result",4]]],[11,"into","","",1330,[[]]],[11,"try_into","","",1330,[[],["result",4]]],[11,"type_id","","",1330,[[],["typeid",3]]],[11,"from","","",1331,[[]]],[11,"borrow","","",1331,[[]]],[11,"borrow_mut","","",1331,[[]]],[11,"try_from","","",1331,[[],["result",4]]],[11,"into","","",1331,[[]]],[11,"try_into","","",1331,[[],["result",4]]],[11,"type_id","","",1331,[[],["typeid",3]]],[11,"from","","",1332,[[]]],[11,"borrow","","",1332,[[]]],[11,"borrow_mut","","",1332,[[]]],[11,"try_from","","",1332,[[],["result",4]]],[11,"into","","",1332,[[]]],[11,"try_into","","",1332,[[],["result",4]]],[11,"type_id","","",1332,[[],["typeid",3]]],[11,"from","","",1333,[[]]],[11,"borrow","","",1333,[[]]],[11,"borrow_mut","","",1333,[[]]],[11,"try_from","","",1333,[[],["result",4]]],[11,"into","","",1333,[[]]],[11,"try_into","","",1333,[[],["result",4]]],[11,"type_id","","",1333,[[],["typeid",3]]],[11,"from","","",1334,[[]]],[11,"borrow","","",1334,[[]]],[11,"borrow_mut","","",1334,[[]]],[11,"try_from","","",1334,[[],["result",4]]],[11,"into","","",1334,[[]]],[11,"try_into","","",1334,[[],["result",4]]],[11,"type_id","","",1334,[[],["typeid",3]]],[11,"from","","",1335,[[]]],[11,"borrow","","",1335,[[]]],[11,"borrow_mut","","",1335,[[]]],[11,"try_from","","",1335,[[],["result",4]]],[11,"into","","",1335,[[]]],[11,"try_into","","",1335,[[],["result",4]]],[11,"type_id","","",1335,[[],["typeid",3]]],[11,"from","","",1323,[[]]],[11,"borrow","","",1323,[[]]],[11,"borrow_mut","","",1323,[[]]],[11,"try_from","","",1323,[[],["result",4]]],[11,"into","","",1323,[[]]],[11,"try_into","","",1323,[[],["result",4]]],[11,"type_id","","",1323,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::ctrlb","",1338,[[]]],[11,"borrow","","",1338,[[]]],[11,"borrow_mut","","",1338,[[]]],[11,"try_from","","",1338,[[],["result",4]]],[11,"into","","",1338,[[]]],[11,"try_into","","",1338,[[],["result",4]]],[11,"type_id","","",1338,[[],["typeid",3]]],[11,"from","","",1339,[[]]],[11,"borrow","","",1339,[[]]],[11,"borrow_mut","","",1339,[[]]],[11,"try_from","","",1339,[[],["result",4]]],[11,"into","","",1339,[[]]],[11,"try_into","","",1339,[[],["result",4]]],[11,"type_id","","",1339,[[],["typeid",3]]],[11,"from","","",1340,[[]]],[11,"borrow","","",1340,[[]]],[11,"borrow_mut","","",1340,[[]]],[11,"try_from","","",1340,[[],["result",4]]],[11,"into","","",1340,[[]]],[11,"try_into","","",1340,[[],["result",4]]],[11,"type_id","","",1340,[[],["typeid",3]]],[11,"from","","",1341,[[]]],[11,"borrow","","",1341,[[]]],[11,"borrow_mut","","",1341,[[]]],[11,"try_from","","",1341,[[],["result",4]]],[11,"into","","",1341,[[]]],[11,"try_into","","",1341,[[],["result",4]]],[11,"type_id","","",1341,[[],["typeid",3]]],[11,"from","","",1342,[[]]],[11,"borrow","","",1342,[[]]],[11,"borrow_mut","","",1342,[[]]],[11,"try_from","","",1342,[[],["result",4]]],[11,"into","","",1342,[[]]],[11,"try_into","","",1342,[[],["result",4]]],[11,"type_id","","",1342,[[],["typeid",3]]],[11,"from","","",1343,[[]]],[11,"borrow","","",1343,[[]]],[11,"borrow_mut","","",1343,[[]]],[11,"try_from","","",1343,[[],["result",4]]],[11,"into","","",1343,[[]]],[11,"try_into","","",1343,[[],["result",4]]],[11,"type_id","","",1343,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::baud","",1346,[[]]],[11,"borrow","","",1346,[[]]],[11,"borrow_mut","","",1346,[[]]],[11,"try_from","","",1346,[[],["result",4]]],[11,"into","","",1346,[[]]],[11,"try_into","","",1346,[[],["result",4]]],[11,"type_id","","",1346,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::intenclr","",1349,[[]]],[11,"borrow","","",1349,[[]]],[11,"borrow_mut","","",1349,[[]]],[11,"try_from","","",1349,[[],["result",4]]],[11,"into","","",1349,[[]]],[11,"try_into","","",1349,[[],["result",4]]],[11,"type_id","","",1349,[[],["typeid",3]]],[11,"from","","",1350,[[]]],[11,"borrow","","",1350,[[]]],[11,"borrow_mut","","",1350,[[]]],[11,"try_from","","",1350,[[],["result",4]]],[11,"into","","",1350,[[]]],[11,"try_into","","",1350,[[],["result",4]]],[11,"type_id","","",1350,[[],["typeid",3]]],[11,"from","","",1351,[[]]],[11,"borrow","","",1351,[[]]],[11,"borrow_mut","","",1351,[[]]],[11,"try_from","","",1351,[[],["result",4]]],[11,"into","","",1351,[[]]],[11,"try_into","","",1351,[[],["result",4]]],[11,"type_id","","",1351,[[],["typeid",3]]],[11,"from","","",1352,[[]]],[11,"borrow","","",1352,[[]]],[11,"borrow_mut","","",1352,[[]]],[11,"try_from","","",1352,[[],["result",4]]],[11,"into","","",1352,[[]]],[11,"try_into","","",1352,[[],["result",4]]],[11,"type_id","","",1352,[[],["typeid",3]]],[11,"from","","",1353,[[]]],[11,"borrow","","",1353,[[]]],[11,"borrow_mut","","",1353,[[]]],[11,"try_from","","",1353,[[],["result",4]]],[11,"into","","",1353,[[]]],[11,"try_into","","",1353,[[],["result",4]]],[11,"type_id","","",1353,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::intenset","",1356,[[]]],[11,"borrow","","",1356,[[]]],[11,"borrow_mut","","",1356,[[]]],[11,"try_from","","",1356,[[],["result",4]]],[11,"into","","",1356,[[]]],[11,"try_into","","",1356,[[],["result",4]]],[11,"type_id","","",1356,[[],["typeid",3]]],[11,"from","","",1357,[[]]],[11,"borrow","","",1357,[[]]],[11,"borrow_mut","","",1357,[[]]],[11,"try_from","","",1357,[[],["result",4]]],[11,"into","","",1357,[[]]],[11,"try_into","","",1357,[[],["result",4]]],[11,"type_id","","",1357,[[],["typeid",3]]],[11,"from","","",1358,[[]]],[11,"borrow","","",1358,[[]]],[11,"borrow_mut","","",1358,[[]]],[11,"try_from","","",1358,[[],["result",4]]],[11,"into","","",1358,[[]]],[11,"try_into","","",1358,[[],["result",4]]],[11,"type_id","","",1358,[[],["typeid",3]]],[11,"from","","",1359,[[]]],[11,"borrow","","",1359,[[]]],[11,"borrow_mut","","",1359,[[]]],[11,"try_from","","",1359,[[],["result",4]]],[11,"into","","",1359,[[]]],[11,"try_into","","",1359,[[],["result",4]]],[11,"type_id","","",1359,[[],["typeid",3]]],[11,"from","","",1360,[[]]],[11,"borrow","","",1360,[[]]],[11,"borrow_mut","","",1360,[[]]],[11,"try_from","","",1360,[[],["result",4]]],[11,"into","","",1360,[[]]],[11,"try_into","","",1360,[[],["result",4]]],[11,"type_id","","",1360,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::intflag","",1363,[[]]],[11,"borrow","","",1363,[[]]],[11,"borrow_mut","","",1363,[[]]],[11,"try_from","","",1363,[[],["result",4]]],[11,"into","","",1363,[[]]],[11,"try_into","","",1363,[[],["result",4]]],[11,"type_id","","",1363,[[],["typeid",3]]],[11,"from","","",1364,[[]]],[11,"borrow","","",1364,[[]]],[11,"borrow_mut","","",1364,[[]]],[11,"try_from","","",1364,[[],["result",4]]],[11,"into","","",1364,[[]]],[11,"try_into","","",1364,[[],["result",4]]],[11,"type_id","","",1364,[[],["typeid",3]]],[11,"from","","",1365,[[]]],[11,"borrow","","",1365,[[]]],[11,"borrow_mut","","",1365,[[]]],[11,"try_from","","",1365,[[],["result",4]]],[11,"into","","",1365,[[]]],[11,"try_into","","",1365,[[],["result",4]]],[11,"type_id","","",1365,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::status","",1368,[[]]],[11,"borrow","","",1368,[[]]],[11,"borrow_mut","","",1368,[[]]],[11,"try_from","","",1368,[[],["result",4]]],[11,"into","","",1368,[[]]],[11,"try_into","","",1368,[[],["result",4]]],[11,"type_id","","",1368,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::addr","",1372,[[]]],[11,"borrow","","",1372,[[]]],[11,"borrow_mut","","",1372,[[]]],[11,"try_from","","",1372,[[],["result",4]]],[11,"into","","",1372,[[]]],[11,"try_into","","",1372,[[],["result",4]]],[11,"type_id","","",1372,[[],["typeid",3]]],[11,"from","","",1373,[[]]],[11,"borrow","","",1373,[[]]],[11,"borrow_mut","","",1373,[[]]],[11,"try_from","","",1373,[[],["result",4]]],[11,"into","","",1373,[[]]],[11,"try_into","","",1373,[[],["result",4]]],[11,"type_id","","",1373,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::data","",1376,[[]]],[11,"borrow","","",1376,[[]]],[11,"borrow_mut","","",1376,[[]]],[11,"try_from","","",1376,[[],["result",4]]],[11,"into","","",1376,[[]]],[11,"try_into","","",1376,[[],["result",4]]],[11,"type_id","","",1376,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::spi::dbgctrl","",1379,[[]]],[11,"borrow","","",1379,[[]]],[11,"borrow_mut","","",1379,[[]]],[11,"try_from","","",1379,[[],["result",4]]],[11,"into","","",1379,[[]]],[11,"try_into","","",1379,[[],["result",4]]],[11,"type_id","","",1379,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::ctrla","",1383,[[]]],[11,"borrow","","",1383,[[]]],[11,"borrow_mut","","",1383,[[]]],[11,"try_from","","",1383,[[],["result",4]]],[11,"into","","",1383,[[]]],[11,"try_into","","",1383,[[],["result",4]]],[11,"type_id","","",1383,[[],["typeid",3]]],[11,"from","","",1384,[[]]],[11,"borrow","","",1384,[[]]],[11,"borrow_mut","","",1384,[[]]],[11,"try_from","","",1384,[[],["result",4]]],[11,"into","","",1384,[[]]],[11,"try_into","","",1384,[[],["result",4]]],[11,"type_id","","",1384,[[],["typeid",3]]],[11,"from","","",1386,[[]]],[11,"borrow","","",1386,[[]]],[11,"borrow_mut","","",1386,[[]]],[11,"try_from","","",1386,[[],["result",4]]],[11,"into","","",1386,[[]]],[11,"try_into","","",1386,[[],["result",4]]],[11,"type_id","","",1386,[[],["typeid",3]]],[11,"from","","",1387,[[]]],[11,"borrow","","",1387,[[]]],[11,"borrow_mut","","",1387,[[]]],[11,"try_from","","",1387,[[],["result",4]]],[11,"into","","",1387,[[]]],[11,"try_into","","",1387,[[],["result",4]]],[11,"type_id","","",1387,[[],["typeid",3]]],[11,"from","","",1388,[[]]],[11,"borrow","","",1388,[[]]],[11,"borrow_mut","","",1388,[[]]],[11,"try_from","","",1388,[[],["result",4]]],[11,"into","","",1388,[[]]],[11,"try_into","","",1388,[[],["result",4]]],[11,"type_id","","",1388,[[],["typeid",3]]],[11,"from","","",1389,[[]]],[11,"borrow","","",1389,[[]]],[11,"borrow_mut","","",1389,[[]]],[11,"try_from","","",1389,[[],["result",4]]],[11,"into","","",1389,[[]]],[11,"try_into","","",1389,[[],["result",4]]],[11,"type_id","","",1389,[[],["typeid",3]]],[11,"from","","",1390,[[]]],[11,"borrow","","",1390,[[]]],[11,"borrow_mut","","",1390,[[]]],[11,"try_from","","",1390,[[],["result",4]]],[11,"into","","",1390,[[]]],[11,"try_into","","",1390,[[],["result",4]]],[11,"type_id","","",1390,[[],["typeid",3]]],[11,"from","","",1391,[[]]],[11,"borrow","","",1391,[[]]],[11,"borrow_mut","","",1391,[[]]],[11,"try_from","","",1391,[[],["result",4]]],[11,"into","","",1391,[[]]],[11,"try_into","","",1391,[[],["result",4]]],[11,"type_id","","",1391,[[],["typeid",3]]],[11,"from","","",1392,[[]]],[11,"borrow","","",1392,[[]]],[11,"borrow_mut","","",1392,[[]]],[11,"try_from","","",1392,[[],["result",4]]],[11,"into","","",1392,[[]]],[11,"try_into","","",1392,[[],["result",4]]],[11,"type_id","","",1392,[[],["typeid",3]]],[11,"from","","",1393,[[]]],[11,"borrow","","",1393,[[]]],[11,"borrow_mut","","",1393,[[]]],[11,"try_from","","",1393,[[],["result",4]]],[11,"into","","",1393,[[]]],[11,"try_into","","",1393,[[],["result",4]]],[11,"type_id","","",1393,[[],["typeid",3]]],[11,"from","","",1394,[[]]],[11,"borrow","","",1394,[[]]],[11,"borrow_mut","","",1394,[[]]],[11,"try_from","","",1394,[[],["result",4]]],[11,"into","","",1394,[[]]],[11,"try_into","","",1394,[[],["result",4]]],[11,"type_id","","",1394,[[],["typeid",3]]],[11,"from","","",1395,[[]]],[11,"borrow","","",1395,[[]]],[11,"borrow_mut","","",1395,[[]]],[11,"try_from","","",1395,[[],["result",4]]],[11,"into","","",1395,[[]]],[11,"try_into","","",1395,[[],["result",4]]],[11,"type_id","","",1395,[[],["typeid",3]]],[11,"from","","",1396,[[]]],[11,"borrow","","",1396,[[]]],[11,"borrow_mut","","",1396,[[]]],[11,"try_from","","",1396,[[],["result",4]]],[11,"into","","",1396,[[]]],[11,"try_into","","",1396,[[],["result",4]]],[11,"type_id","","",1396,[[],["typeid",3]]],[11,"from","","",1382,[[]]],[11,"borrow","","",1382,[[]]],[11,"borrow_mut","","",1382,[[]]],[11,"try_from","","",1382,[[],["result",4]]],[11,"into","","",1382,[[]]],[11,"try_into","","",1382,[[],["result",4]]],[11,"type_id","","",1382,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::ctrlb","",1399,[[]]],[11,"borrow","","",1399,[[]]],[11,"borrow_mut","","",1399,[[]]],[11,"try_from","","",1399,[[],["result",4]]],[11,"into","","",1399,[[]]],[11,"try_into","","",1399,[[],["result",4]]],[11,"type_id","","",1399,[[],["typeid",3]]],[11,"from","","",1400,[[]]],[11,"borrow","","",1400,[[]]],[11,"borrow_mut","","",1400,[[]]],[11,"try_from","","",1400,[[],["result",4]]],[11,"into","","",1400,[[]]],[11,"try_into","","",1400,[[],["result",4]]],[11,"type_id","","",1400,[[],["typeid",3]]],[11,"from","","",1401,[[]]],[11,"borrow","","",1401,[[]]],[11,"borrow_mut","","",1401,[[]]],[11,"try_from","","",1401,[[],["result",4]]],[11,"into","","",1401,[[]]],[11,"try_into","","",1401,[[],["result",4]]],[11,"type_id","","",1401,[[],["typeid",3]]],[11,"from","","",1402,[[]]],[11,"borrow","","",1402,[[]]],[11,"borrow_mut","","",1402,[[]]],[11,"try_from","","",1402,[[],["result",4]]],[11,"into","","",1402,[[]]],[11,"try_into","","",1402,[[],["result",4]]],[11,"type_id","","",1402,[[],["typeid",3]]],[11,"from","","",1403,[[]]],[11,"borrow","","",1403,[[]]],[11,"borrow_mut","","",1403,[[]]],[11,"try_from","","",1403,[[],["result",4]]],[11,"into","","",1403,[[]]],[11,"try_into","","",1403,[[],["result",4]]],[11,"type_id","","",1403,[[],["typeid",3]]],[11,"from","","",1404,[[]]],[11,"borrow","","",1404,[[]]],[11,"borrow_mut","","",1404,[[]]],[11,"try_from","","",1404,[[],["result",4]]],[11,"into","","",1404,[[]]],[11,"try_into","","",1404,[[],["result",4]]],[11,"type_id","","",1404,[[],["typeid",3]]],[11,"from","","",1405,[[]]],[11,"borrow","","",1405,[[]]],[11,"borrow_mut","","",1405,[[]]],[11,"try_from","","",1405,[[],["result",4]]],[11,"into","","",1405,[[]]],[11,"try_into","","",1405,[[],["result",4]]],[11,"type_id","","",1405,[[],["typeid",3]]],[11,"from","","",1406,[[]]],[11,"borrow","","",1406,[[]]],[11,"borrow_mut","","",1406,[[]]],[11,"try_from","","",1406,[[],["result",4]]],[11,"into","","",1406,[[]]],[11,"try_into","","",1406,[[],["result",4]]],[11,"type_id","","",1406,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::baud","",1409,[[]]],[11,"borrow","","",1409,[[]]],[11,"borrow_mut","","",1409,[[]]],[11,"try_from","","",1409,[[],["result",4]]],[11,"into","","",1409,[[]]],[11,"try_into","","",1409,[[],["result",4]]],[11,"type_id","","",1409,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::baud_frac_mode","",1412,[[]]],[11,"borrow","","",1412,[[]]],[11,"borrow_mut","","",1412,[[]]],[11,"try_from","","",1412,[[],["result",4]]],[11,"into","","",1412,[[]]],[11,"try_into","","",1412,[[],["result",4]]],[11,"type_id","","",1412,[[],["typeid",3]]],[11,"from","","",1413,[[]]],[11,"borrow","","",1413,[[]]],[11,"borrow_mut","","",1413,[[]]],[11,"try_from","","",1413,[[],["result",4]]],[11,"into","","",1413,[[]]],[11,"try_into","","",1413,[[],["result",4]]],[11,"type_id","","",1413,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::baud_fracfp_mode","",1416,[[]]],[11,"borrow","","",1416,[[]]],[11,"borrow_mut","","",1416,[[]]],[11,"try_from","","",1416,[[],["result",4]]],[11,"into","","",1416,[[]]],[11,"try_into","","",1416,[[],["result",4]]],[11,"type_id","","",1416,[[],["typeid",3]]],[11,"from","","",1417,[[]]],[11,"borrow","","",1417,[[]]],[11,"borrow_mut","","",1417,[[]]],[11,"try_from","","",1417,[[],["result",4]]],[11,"into","","",1417,[[]]],[11,"try_into","","",1417,[[],["result",4]]],[11,"type_id","","",1417,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::baud_usartfp_mode","",1420,[[]]],[11,"borrow","","",1420,[[]]],[11,"borrow_mut","","",1420,[[]]],[11,"try_from","","",1420,[[],["result",4]]],[11,"into","","",1420,[[]]],[11,"try_into","","",1420,[[],["result",4]]],[11,"type_id","","",1420,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::rxpl","",1423,[[]]],[11,"borrow","","",1423,[[]]],[11,"borrow_mut","","",1423,[[]]],[11,"try_from","","",1423,[[],["result",4]]],[11,"into","","",1423,[[]]],[11,"try_into","","",1423,[[],["result",4]]],[11,"type_id","","",1423,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::intenclr","",1426,[[]]],[11,"borrow","","",1426,[[]]],[11,"borrow_mut","","",1426,[[]]],[11,"try_from","","",1426,[[],["result",4]]],[11,"into","","",1426,[[]]],[11,"try_into","","",1426,[[],["result",4]]],[11,"type_id","","",1426,[[],["typeid",3]]],[11,"from","","",1427,[[]]],[11,"borrow","","",1427,[[]]],[11,"borrow_mut","","",1427,[[]]],[11,"try_from","","",1427,[[],["result",4]]],[11,"into","","",1427,[[]]],[11,"try_into","","",1427,[[],["result",4]]],[11,"type_id","","",1427,[[],["typeid",3]]],[11,"from","","",1428,[[]]],[11,"borrow","","",1428,[[]]],[11,"borrow_mut","","",1428,[[]]],[11,"try_from","","",1428,[[],["result",4]]],[11,"into","","",1428,[[]]],[11,"try_into","","",1428,[[],["result",4]]],[11,"type_id","","",1428,[[],["typeid",3]]],[11,"from","","",1429,[[]]],[11,"borrow","","",1429,[[]]],[11,"borrow_mut","","",1429,[[]]],[11,"try_from","","",1429,[[],["result",4]]],[11,"into","","",1429,[[]]],[11,"try_into","","",1429,[[],["result",4]]],[11,"type_id","","",1429,[[],["typeid",3]]],[11,"from","","",1430,[[]]],[11,"borrow","","",1430,[[]]],[11,"borrow_mut","","",1430,[[]]],[11,"try_from","","",1430,[[],["result",4]]],[11,"into","","",1430,[[]]],[11,"try_into","","",1430,[[],["result",4]]],[11,"type_id","","",1430,[[],["typeid",3]]],[11,"from","","",1431,[[]]],[11,"borrow","","",1431,[[]]],[11,"borrow_mut","","",1431,[[]]],[11,"try_from","","",1431,[[],["result",4]]],[11,"into","","",1431,[[]]],[11,"try_into","","",1431,[[],["result",4]]],[11,"type_id","","",1431,[[],["typeid",3]]],[11,"from","","",1432,[[]]],[11,"borrow","","",1432,[[]]],[11,"borrow_mut","","",1432,[[]]],[11,"try_from","","",1432,[[],["result",4]]],[11,"into","","",1432,[[]]],[11,"try_into","","",1432,[[],["result",4]]],[11,"type_id","","",1432,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::intenset","",1435,[[]]],[11,"borrow","","",1435,[[]]],[11,"borrow_mut","","",1435,[[]]],[11,"try_from","","",1435,[[],["result",4]]],[11,"into","","",1435,[[]]],[11,"try_into","","",1435,[[],["result",4]]],[11,"type_id","","",1435,[[],["typeid",3]]],[11,"from","","",1436,[[]]],[11,"borrow","","",1436,[[]]],[11,"borrow_mut","","",1436,[[]]],[11,"try_from","","",1436,[[],["result",4]]],[11,"into","","",1436,[[]]],[11,"try_into","","",1436,[[],["result",4]]],[11,"type_id","","",1436,[[],["typeid",3]]],[11,"from","","",1437,[[]]],[11,"borrow","","",1437,[[]]],[11,"borrow_mut","","",1437,[[]]],[11,"try_from","","",1437,[[],["result",4]]],[11,"into","","",1437,[[]]],[11,"try_into","","",1437,[[],["result",4]]],[11,"type_id","","",1437,[[],["typeid",3]]],[11,"from","","",1438,[[]]],[11,"borrow","","",1438,[[]]],[11,"borrow_mut","","",1438,[[]]],[11,"try_from","","",1438,[[],["result",4]]],[11,"into","","",1438,[[]]],[11,"try_into","","",1438,[[],["result",4]]],[11,"type_id","","",1438,[[],["typeid",3]]],[11,"from","","",1439,[[]]],[11,"borrow","","",1439,[[]]],[11,"borrow_mut","","",1439,[[]]],[11,"try_from","","",1439,[[],["result",4]]],[11,"into","","",1439,[[]]],[11,"try_into","","",1439,[[],["result",4]]],[11,"type_id","","",1439,[[],["typeid",3]]],[11,"from","","",1440,[[]]],[11,"borrow","","",1440,[[]]],[11,"borrow_mut","","",1440,[[]]],[11,"try_from","","",1440,[[],["result",4]]],[11,"into","","",1440,[[]]],[11,"try_into","","",1440,[[],["result",4]]],[11,"type_id","","",1440,[[],["typeid",3]]],[11,"from","","",1441,[[]]],[11,"borrow","","",1441,[[]]],[11,"borrow_mut","","",1441,[[]]],[11,"try_from","","",1441,[[],["result",4]]],[11,"into","","",1441,[[]]],[11,"try_into","","",1441,[[],["result",4]]],[11,"type_id","","",1441,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::intflag","",1444,[[]]],[11,"borrow","","",1444,[[]]],[11,"borrow_mut","","",1444,[[]]],[11,"try_from","","",1444,[[],["result",4]]],[11,"into","","",1444,[[]]],[11,"try_into","","",1444,[[],["result",4]]],[11,"type_id","","",1444,[[],["typeid",3]]],[11,"from","","",1445,[[]]],[11,"borrow","","",1445,[[]]],[11,"borrow_mut","","",1445,[[]]],[11,"try_from","","",1445,[[],["result",4]]],[11,"into","","",1445,[[]]],[11,"try_into","","",1445,[[],["result",4]]],[11,"type_id","","",1445,[[],["typeid",3]]],[11,"from","","",1446,[[]]],[11,"borrow","","",1446,[[]]],[11,"borrow_mut","","",1446,[[]]],[11,"try_from","","",1446,[[],["result",4]]],[11,"into","","",1446,[[]]],[11,"try_into","","",1446,[[],["result",4]]],[11,"type_id","","",1446,[[],["typeid",3]]],[11,"from","","",1447,[[]]],[11,"borrow","","",1447,[[]]],[11,"borrow_mut","","",1447,[[]]],[11,"try_from","","",1447,[[],["result",4]]],[11,"into","","",1447,[[]]],[11,"try_into","","",1447,[[],["result",4]]],[11,"type_id","","",1447,[[],["typeid",3]]],[11,"from","","",1448,[[]]],[11,"borrow","","",1448,[[]]],[11,"borrow_mut","","",1448,[[]]],[11,"try_from","","",1448,[[],["result",4]]],[11,"into","","",1448,[[]]],[11,"try_into","","",1448,[[],["result",4]]],[11,"type_id","","",1448,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::status","",1451,[[]]],[11,"borrow","","",1451,[[]]],[11,"borrow_mut","","",1451,[[]]],[11,"try_from","","",1451,[[],["result",4]]],[11,"into","","",1451,[[]]],[11,"try_into","","",1451,[[],["result",4]]],[11,"type_id","","",1451,[[],["typeid",3]]],[11,"from","","",1452,[[]]],[11,"borrow","","",1452,[[]]],[11,"borrow_mut","","",1452,[[]]],[11,"try_from","","",1452,[[],["result",4]]],[11,"into","","",1452,[[]]],[11,"try_into","","",1452,[[],["result",4]]],[11,"type_id","","",1452,[[],["typeid",3]]],[11,"from","","",1453,[[]]],[11,"borrow","","",1453,[[]]],[11,"borrow_mut","","",1453,[[]]],[11,"try_from","","",1453,[[],["result",4]]],[11,"into","","",1453,[[]]],[11,"try_into","","",1453,[[],["result",4]]],[11,"type_id","","",1453,[[],["typeid",3]]],[11,"from","","",1454,[[]]],[11,"borrow","","",1454,[[]]],[11,"borrow_mut","","",1454,[[]]],[11,"try_from","","",1454,[[],["result",4]]],[11,"into","","",1454,[[]]],[11,"try_into","","",1454,[[],["result",4]]],[11,"type_id","","",1454,[[],["typeid",3]]],[11,"from","","",1455,[[]]],[11,"borrow","","",1455,[[]]],[11,"borrow_mut","","",1455,[[]]],[11,"try_from","","",1455,[[],["result",4]]],[11,"into","","",1455,[[]]],[11,"try_into","","",1455,[[],["result",4]]],[11,"type_id","","",1455,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::data","",1459,[[]]],[11,"borrow","","",1459,[[]]],[11,"borrow_mut","","",1459,[[]]],[11,"try_from","","",1459,[[],["result",4]]],[11,"into","","",1459,[[]]],[11,"try_into","","",1459,[[],["result",4]]],[11,"type_id","","",1459,[[],["typeid",3]]],[11,"from","atsamd21g::sercom0::usart::dbgctrl","",1462,[[]]],[11,"borrow","","",1462,[[]]],[11,"borrow_mut","","",1462,[[]]],[11,"try_from","","",1462,[[],["result",4]]],[11,"into","","",1462,[[]]],[11,"try_into","","",1462,[[],["result",4]]],[11,"type_id","","",1462,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl","",1466,[[]]],[11,"borrow","","",1466,[[]]],[11,"borrow_mut","","",1466,[[]]],[11,"try_from","","",1466,[[],["result",4]]],[11,"into","","",1466,[[]]],[11,"try_into","","",1466,[[],["result",4]]],[11,"type_id","","",1466,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::intenclr","",1467,[[]]],[11,"borrow","","",1467,[[]]],[11,"borrow_mut","","",1467,[[]]],[11,"try_from","","",1467,[[],["result",4]]],[11,"into","","",1467,[[]]],[11,"try_into","","",1467,[[],["result",4]]],[11,"type_id","","",1467,[[],["typeid",3]]],[11,"from","","",1468,[[]]],[11,"borrow","","",1468,[[]]],[11,"borrow_mut","","",1468,[[]]],[11,"try_from","","",1468,[[],["result",4]]],[11,"into","","",1468,[[]]],[11,"try_into","","",1468,[[],["result",4]]],[11,"type_id","","",1468,[[],["typeid",3]]],[11,"from","","",1469,[[]]],[11,"borrow","","",1469,[[]]],[11,"borrow_mut","","",1469,[[]]],[11,"try_from","","",1469,[[],["result",4]]],[11,"into","","",1469,[[]]],[11,"try_into","","",1469,[[],["result",4]]],[11,"type_id","","",1469,[[],["typeid",3]]],[11,"from","","",1470,[[]]],[11,"borrow","","",1470,[[]]],[11,"borrow_mut","","",1470,[[]]],[11,"try_from","","",1470,[[],["result",4]]],[11,"into","","",1470,[[]]],[11,"try_into","","",1470,[[],["result",4]]],[11,"type_id","","",1470,[[],["typeid",3]]],[11,"from","","",1471,[[]]],[11,"borrow","","",1471,[[]]],[11,"borrow_mut","","",1471,[[]]],[11,"try_from","","",1471,[[],["result",4]]],[11,"into","","",1471,[[]]],[11,"try_into","","",1471,[[],["result",4]]],[11,"type_id","","",1471,[[],["typeid",3]]],[11,"from","","",1472,[[]]],[11,"borrow","","",1472,[[]]],[11,"borrow_mut","","",1472,[[]]],[11,"try_from","","",1472,[[],["result",4]]],[11,"into","","",1472,[[]]],[11,"try_into","","",1472,[[],["result",4]]],[11,"type_id","","",1472,[[],["typeid",3]]],[11,"from","","",1473,[[]]],[11,"borrow","","",1473,[[]]],[11,"borrow_mut","","",1473,[[]]],[11,"try_from","","",1473,[[],["result",4]]],[11,"into","","",1473,[[]]],[11,"try_into","","",1473,[[],["result",4]]],[11,"type_id","","",1473,[[],["typeid",3]]],[11,"from","","",1474,[[]]],[11,"borrow","","",1474,[[]]],[11,"borrow_mut","","",1474,[[]]],[11,"try_from","","",1474,[[],["result",4]]],[11,"into","","",1474,[[]]],[11,"try_into","","",1474,[[],["result",4]]],[11,"type_id","","",1474,[[],["typeid",3]]],[11,"from","","",1475,[[]]],[11,"borrow","","",1475,[[]]],[11,"borrow_mut","","",1475,[[]]],[11,"try_from","","",1475,[[],["result",4]]],[11,"into","","",1475,[[]]],[11,"try_into","","",1475,[[],["result",4]]],[11,"type_id","","",1475,[[],["typeid",3]]],[11,"from","","",1476,[[]]],[11,"borrow","","",1476,[[]]],[11,"borrow_mut","","",1476,[[]]],[11,"try_from","","",1476,[[],["result",4]]],[11,"into","","",1476,[[]]],[11,"try_into","","",1476,[[],["result",4]]],[11,"type_id","","",1476,[[],["typeid",3]]],[11,"from","","",1477,[[]]],[11,"borrow","","",1477,[[]]],[11,"borrow_mut","","",1477,[[]]],[11,"try_from","","",1477,[[],["result",4]]],[11,"into","","",1477,[[]]],[11,"try_into","","",1477,[[],["result",4]]],[11,"type_id","","",1477,[[],["typeid",3]]],[11,"from","","",1478,[[]]],[11,"borrow","","",1478,[[]]],[11,"borrow_mut","","",1478,[[]]],[11,"try_from","","",1478,[[],["result",4]]],[11,"into","","",1478,[[]]],[11,"try_into","","",1478,[[],["result",4]]],[11,"type_id","","",1478,[[],["typeid",3]]],[11,"from","","",1479,[[]]],[11,"borrow","","",1479,[[]]],[11,"borrow_mut","","",1479,[[]]],[11,"try_from","","",1479,[[],["result",4]]],[11,"into","","",1479,[[]]],[11,"try_into","","",1479,[[],["result",4]]],[11,"type_id","","",1479,[[],["typeid",3]]],[11,"from","","",1480,[[]]],[11,"borrow","","",1480,[[]]],[11,"borrow_mut","","",1480,[[]]],[11,"try_from","","",1480,[[],["result",4]]],[11,"into","","",1480,[[]]],[11,"try_into","","",1480,[[],["result",4]]],[11,"type_id","","",1480,[[],["typeid",3]]],[11,"from","","",1481,[[]]],[11,"borrow","","",1481,[[]]],[11,"borrow_mut","","",1481,[[]]],[11,"try_from","","",1481,[[],["result",4]]],[11,"into","","",1481,[[]]],[11,"try_into","","",1481,[[],["result",4]]],[11,"type_id","","",1481,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::intenset","",1484,[[]]],[11,"borrow","","",1484,[[]]],[11,"borrow_mut","","",1484,[[]]],[11,"try_from","","",1484,[[],["result",4]]],[11,"into","","",1484,[[]]],[11,"try_into","","",1484,[[],["result",4]]],[11,"type_id","","",1484,[[],["typeid",3]]],[11,"from","","",1485,[[]]],[11,"borrow","","",1485,[[]]],[11,"borrow_mut","","",1485,[[]]],[11,"try_from","","",1485,[[],["result",4]]],[11,"into","","",1485,[[]]],[11,"try_into","","",1485,[[],["result",4]]],[11,"type_id","","",1485,[[],["typeid",3]]],[11,"from","","",1486,[[]]],[11,"borrow","","",1486,[[]]],[11,"borrow_mut","","",1486,[[]]],[11,"try_from","","",1486,[[],["result",4]]],[11,"into","","",1486,[[]]],[11,"try_into","","",1486,[[],["result",4]]],[11,"type_id","","",1486,[[],["typeid",3]]],[11,"from","","",1487,[[]]],[11,"borrow","","",1487,[[]]],[11,"borrow_mut","","",1487,[[]]],[11,"try_from","","",1487,[[],["result",4]]],[11,"into","","",1487,[[]]],[11,"try_into","","",1487,[[],["result",4]]],[11,"type_id","","",1487,[[],["typeid",3]]],[11,"from","","",1488,[[]]],[11,"borrow","","",1488,[[]]],[11,"borrow_mut","","",1488,[[]]],[11,"try_from","","",1488,[[],["result",4]]],[11,"into","","",1488,[[]]],[11,"try_into","","",1488,[[],["result",4]]],[11,"type_id","","",1488,[[],["typeid",3]]],[11,"from","","",1489,[[]]],[11,"borrow","","",1489,[[]]],[11,"borrow_mut","","",1489,[[]]],[11,"try_from","","",1489,[[],["result",4]]],[11,"into","","",1489,[[]]],[11,"try_into","","",1489,[[],["result",4]]],[11,"type_id","","",1489,[[],["typeid",3]]],[11,"from","","",1490,[[]]],[11,"borrow","","",1490,[[]]],[11,"borrow_mut","","",1490,[[]]],[11,"try_from","","",1490,[[],["result",4]]],[11,"into","","",1490,[[]]],[11,"try_into","","",1490,[[],["result",4]]],[11,"type_id","","",1490,[[],["typeid",3]]],[11,"from","","",1491,[[]]],[11,"borrow","","",1491,[[]]],[11,"borrow_mut","","",1491,[[]]],[11,"try_from","","",1491,[[],["result",4]]],[11,"into","","",1491,[[]]],[11,"try_into","","",1491,[[],["result",4]]],[11,"type_id","","",1491,[[],["typeid",3]]],[11,"from","","",1492,[[]]],[11,"borrow","","",1492,[[]]],[11,"borrow_mut","","",1492,[[]]],[11,"try_from","","",1492,[[],["result",4]]],[11,"into","","",1492,[[]]],[11,"try_into","","",1492,[[],["result",4]]],[11,"type_id","","",1492,[[],["typeid",3]]],[11,"from","","",1493,[[]]],[11,"borrow","","",1493,[[]]],[11,"borrow_mut","","",1493,[[]]],[11,"try_from","","",1493,[[],["result",4]]],[11,"into","","",1493,[[]]],[11,"try_into","","",1493,[[],["result",4]]],[11,"type_id","","",1493,[[],["typeid",3]]],[11,"from","","",1494,[[]]],[11,"borrow","","",1494,[[]]],[11,"borrow_mut","","",1494,[[]]],[11,"try_from","","",1494,[[],["result",4]]],[11,"into","","",1494,[[]]],[11,"try_into","","",1494,[[],["result",4]]],[11,"type_id","","",1494,[[],["typeid",3]]],[11,"from","","",1495,[[]]],[11,"borrow","","",1495,[[]]],[11,"borrow_mut","","",1495,[[]]],[11,"try_from","","",1495,[[],["result",4]]],[11,"into","","",1495,[[]]],[11,"try_into","","",1495,[[],["result",4]]],[11,"type_id","","",1495,[[],["typeid",3]]],[11,"from","","",1496,[[]]],[11,"borrow","","",1496,[[]]],[11,"borrow_mut","","",1496,[[]]],[11,"try_from","","",1496,[[],["result",4]]],[11,"into","","",1496,[[]]],[11,"try_into","","",1496,[[],["result",4]]],[11,"type_id","","",1496,[[],["typeid",3]]],[11,"from","","",1497,[[]]],[11,"borrow","","",1497,[[]]],[11,"borrow_mut","","",1497,[[]]],[11,"try_from","","",1497,[[],["result",4]]],[11,"into","","",1497,[[]]],[11,"try_into","","",1497,[[],["result",4]]],[11,"type_id","","",1497,[[],["typeid",3]]],[11,"from","","",1498,[[]]],[11,"borrow","","",1498,[[]]],[11,"borrow_mut","","",1498,[[]]],[11,"try_from","","",1498,[[],["result",4]]],[11,"into","","",1498,[[]]],[11,"try_into","","",1498,[[],["result",4]]],[11,"type_id","","",1498,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::intflag","",1501,[[]]],[11,"borrow","","",1501,[[]]],[11,"borrow_mut","","",1501,[[]]],[11,"try_from","","",1501,[[],["result",4]]],[11,"into","","",1501,[[]]],[11,"try_into","","",1501,[[],["result",4]]],[11,"type_id","","",1501,[[],["typeid",3]]],[11,"from","","",1502,[[]]],[11,"borrow","","",1502,[[]]],[11,"borrow_mut","","",1502,[[]]],[11,"try_from","","",1502,[[],["result",4]]],[11,"into","","",1502,[[]]],[11,"try_into","","",1502,[[],["result",4]]],[11,"type_id","","",1502,[[],["typeid",3]]],[11,"from","","",1503,[[]]],[11,"borrow","","",1503,[[]]],[11,"borrow_mut","","",1503,[[]]],[11,"try_from","","",1503,[[],["result",4]]],[11,"into","","",1503,[[]]],[11,"try_into","","",1503,[[],["result",4]]],[11,"type_id","","",1503,[[],["typeid",3]]],[11,"from","","",1504,[[]]],[11,"borrow","","",1504,[[]]],[11,"borrow_mut","","",1504,[[]]],[11,"try_from","","",1504,[[],["result",4]]],[11,"into","","",1504,[[]]],[11,"try_into","","",1504,[[],["result",4]]],[11,"type_id","","",1504,[[],["typeid",3]]],[11,"from","","",1505,[[]]],[11,"borrow","","",1505,[[]]],[11,"borrow_mut","","",1505,[[]]],[11,"try_from","","",1505,[[],["result",4]]],[11,"into","","",1505,[[]]],[11,"try_into","","",1505,[[],["result",4]]],[11,"type_id","","",1505,[[],["typeid",3]]],[11,"from","","",1506,[[]]],[11,"borrow","","",1506,[[]]],[11,"borrow_mut","","",1506,[[]]],[11,"try_from","","",1506,[[],["result",4]]],[11,"into","","",1506,[[]]],[11,"try_into","","",1506,[[],["result",4]]],[11,"type_id","","",1506,[[],["typeid",3]]],[11,"from","","",1507,[[]]],[11,"borrow","","",1507,[[]]],[11,"borrow_mut","","",1507,[[]]],[11,"try_from","","",1507,[[],["result",4]]],[11,"into","","",1507,[[]]],[11,"try_into","","",1507,[[],["result",4]]],[11,"type_id","","",1507,[[],["typeid",3]]],[11,"from","","",1508,[[]]],[11,"borrow","","",1508,[[]]],[11,"borrow_mut","","",1508,[[]]],[11,"try_from","","",1508,[[],["result",4]]],[11,"into","","",1508,[[]]],[11,"try_into","","",1508,[[],["result",4]]],[11,"type_id","","",1508,[[],["typeid",3]]],[11,"from","","",1509,[[]]],[11,"borrow","","",1509,[[]]],[11,"borrow_mut","","",1509,[[]]],[11,"try_from","","",1509,[[],["result",4]]],[11,"into","","",1509,[[]]],[11,"try_into","","",1509,[[],["result",4]]],[11,"type_id","","",1509,[[],["typeid",3]]],[11,"from","","",1510,[[]]],[11,"borrow","","",1510,[[]]],[11,"borrow_mut","","",1510,[[]]],[11,"try_from","","",1510,[[],["result",4]]],[11,"into","","",1510,[[]]],[11,"try_into","","",1510,[[],["result",4]]],[11,"type_id","","",1510,[[],["typeid",3]]],[11,"from","","",1511,[[]]],[11,"borrow","","",1511,[[]]],[11,"borrow_mut","","",1511,[[]]],[11,"try_from","","",1511,[[],["result",4]]],[11,"into","","",1511,[[]]],[11,"try_into","","",1511,[[],["result",4]]],[11,"type_id","","",1511,[[],["typeid",3]]],[11,"from","","",1512,[[]]],[11,"borrow","","",1512,[[]]],[11,"borrow_mut","","",1512,[[]]],[11,"try_from","","",1512,[[],["result",4]]],[11,"into","","",1512,[[]]],[11,"try_into","","",1512,[[],["result",4]]],[11,"type_id","","",1512,[[],["typeid",3]]],[11,"from","","",1513,[[]]],[11,"borrow","","",1513,[[]]],[11,"borrow_mut","","",1513,[[]]],[11,"try_from","","",1513,[[],["result",4]]],[11,"into","","",1513,[[]]],[11,"try_into","","",1513,[[],["result",4]]],[11,"type_id","","",1513,[[],["typeid",3]]],[11,"from","","",1514,[[]]],[11,"borrow","","",1514,[[]]],[11,"borrow_mut","","",1514,[[]]],[11,"try_from","","",1514,[[],["result",4]]],[11,"into","","",1514,[[]]],[11,"try_into","","",1514,[[],["result",4]]],[11,"type_id","","",1514,[[],["typeid",3]]],[11,"from","","",1515,[[]]],[11,"borrow","","",1515,[[]]],[11,"borrow_mut","","",1515,[[]]],[11,"try_from","","",1515,[[],["result",4]]],[11,"into","","",1515,[[]]],[11,"try_into","","",1515,[[],["result",4]]],[11,"type_id","","",1515,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::xosc","",1520,[[]]],[11,"borrow","","",1520,[[]]],[11,"borrow_mut","","",1520,[[]]],[11,"try_from","","",1520,[[],["result",4]]],[11,"into","","",1520,[[]]],[11,"try_into","","",1520,[[],["result",4]]],[11,"type_id","","",1520,[[],["typeid",3]]],[11,"from","","",1521,[[]]],[11,"borrow","","",1521,[[]]],[11,"borrow_mut","","",1521,[[]]],[11,"try_from","","",1521,[[],["result",4]]],[11,"into","","",1521,[[]]],[11,"try_into","","",1521,[[],["result",4]]],[11,"type_id","","",1521,[[],["typeid",3]]],[11,"from","","",1522,[[]]],[11,"borrow","","",1522,[[]]],[11,"borrow_mut","","",1522,[[]]],[11,"try_from","","",1522,[[],["result",4]]],[11,"into","","",1522,[[]]],[11,"try_into","","",1522,[[],["result",4]]],[11,"type_id","","",1522,[[],["typeid",3]]],[11,"from","","",1523,[[]]],[11,"borrow","","",1523,[[]]],[11,"borrow_mut","","",1523,[[]]],[11,"try_from","","",1523,[[],["result",4]]],[11,"into","","",1523,[[]]],[11,"try_into","","",1523,[[],["result",4]]],[11,"type_id","","",1523,[[],["typeid",3]]],[11,"from","","",1525,[[]]],[11,"borrow","","",1525,[[]]],[11,"borrow_mut","","",1525,[[]]],[11,"try_from","","",1525,[[],["result",4]]],[11,"into","","",1525,[[]]],[11,"try_into","","",1525,[[],["result",4]]],[11,"type_id","","",1525,[[],["typeid",3]]],[11,"from","","",1526,[[]]],[11,"borrow","","",1526,[[]]],[11,"borrow_mut","","",1526,[[]]],[11,"try_from","","",1526,[[],["result",4]]],[11,"into","","",1526,[[]]],[11,"try_into","","",1526,[[],["result",4]]],[11,"type_id","","",1526,[[],["typeid",3]]],[11,"from","","",1527,[[]]],[11,"borrow","","",1527,[[]]],[11,"borrow_mut","","",1527,[[]]],[11,"try_from","","",1527,[[],["result",4]]],[11,"into","","",1527,[[]]],[11,"try_into","","",1527,[[],["result",4]]],[11,"type_id","","",1527,[[],["typeid",3]]],[11,"from","","",1519,[[]]],[11,"borrow","","",1519,[[]]],[11,"borrow_mut","","",1519,[[]]],[11,"try_from","","",1519,[[],["result",4]]],[11,"into","","",1519,[[]]],[11,"try_into","","",1519,[[],["result",4]]],[11,"type_id","","",1519,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::xosc32k","",1530,[[]]],[11,"borrow","","",1530,[[]]],[11,"borrow_mut","","",1530,[[]]],[11,"try_from","","",1530,[[],["result",4]]],[11,"into","","",1530,[[]]],[11,"try_into","","",1530,[[],["result",4]]],[11,"type_id","","",1530,[[],["typeid",3]]],[11,"from","","",1531,[[]]],[11,"borrow","","",1531,[[]]],[11,"borrow_mut","","",1531,[[]]],[11,"try_from","","",1531,[[],["result",4]]],[11,"into","","",1531,[[]]],[11,"try_into","","",1531,[[],["result",4]]],[11,"type_id","","",1531,[[],["typeid",3]]],[11,"from","","",1532,[[]]],[11,"borrow","","",1532,[[]]],[11,"borrow_mut","","",1532,[[]]],[11,"try_from","","",1532,[[],["result",4]]],[11,"into","","",1532,[[]]],[11,"try_into","","",1532,[[],["result",4]]],[11,"type_id","","",1532,[[],["typeid",3]]],[11,"from","","",1533,[[]]],[11,"borrow","","",1533,[[]]],[11,"borrow_mut","","",1533,[[]]],[11,"try_from","","",1533,[[],["result",4]]],[11,"into","","",1533,[[]]],[11,"try_into","","",1533,[[],["result",4]]],[11,"type_id","","",1533,[[],["typeid",3]]],[11,"from","","",1534,[[]]],[11,"borrow","","",1534,[[]]],[11,"borrow_mut","","",1534,[[]]],[11,"try_from","","",1534,[[],["result",4]]],[11,"into","","",1534,[[]]],[11,"try_into","","",1534,[[],["result",4]]],[11,"type_id","","",1534,[[],["typeid",3]]],[11,"from","","",1535,[[]]],[11,"borrow","","",1535,[[]]],[11,"borrow_mut","","",1535,[[]]],[11,"try_from","","",1535,[[],["result",4]]],[11,"into","","",1535,[[]]],[11,"try_into","","",1535,[[],["result",4]]],[11,"type_id","","",1535,[[],["typeid",3]]],[11,"from","","",1536,[[]]],[11,"borrow","","",1536,[[]]],[11,"borrow_mut","","",1536,[[]]],[11,"try_from","","",1536,[[],["result",4]]],[11,"into","","",1536,[[]]],[11,"try_into","","",1536,[[],["result",4]]],[11,"type_id","","",1536,[[],["typeid",3]]],[11,"from","","",1537,[[]]],[11,"borrow","","",1537,[[]]],[11,"borrow_mut","","",1537,[[]]],[11,"try_from","","",1537,[[],["result",4]]],[11,"into","","",1537,[[]]],[11,"try_into","","",1537,[[],["result",4]]],[11,"type_id","","",1537,[[],["typeid",3]]],[11,"from","","",1538,[[]]],[11,"borrow","","",1538,[[]]],[11,"borrow_mut","","",1538,[[]]],[11,"try_from","","",1538,[[],["result",4]]],[11,"into","","",1538,[[]]],[11,"try_into","","",1538,[[],["result",4]]],[11,"type_id","","",1538,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::osc32k","",1541,[[]]],[11,"borrow","","",1541,[[]]],[11,"borrow_mut","","",1541,[[]]],[11,"try_from","","",1541,[[],["result",4]]],[11,"into","","",1541,[[]]],[11,"try_into","","",1541,[[],["result",4]]],[11,"type_id","","",1541,[[],["typeid",3]]],[11,"from","","",1542,[[]]],[11,"borrow","","",1542,[[]]],[11,"borrow_mut","","",1542,[[]]],[11,"try_from","","",1542,[[],["result",4]]],[11,"into","","",1542,[[]]],[11,"try_into","","",1542,[[],["result",4]]],[11,"type_id","","",1542,[[],["typeid",3]]],[11,"from","","",1543,[[]]],[11,"borrow","","",1543,[[]]],[11,"borrow_mut","","",1543,[[]]],[11,"try_from","","",1543,[[],["result",4]]],[11,"into","","",1543,[[]]],[11,"try_into","","",1543,[[],["result",4]]],[11,"type_id","","",1543,[[],["typeid",3]]],[11,"from","","",1544,[[]]],[11,"borrow","","",1544,[[]]],[11,"borrow_mut","","",1544,[[]]],[11,"try_from","","",1544,[[],["result",4]]],[11,"into","","",1544,[[]]],[11,"try_into","","",1544,[[],["result",4]]],[11,"type_id","","",1544,[[],["typeid",3]]],[11,"from","","",1545,[[]]],[11,"borrow","","",1545,[[]]],[11,"borrow_mut","","",1545,[[]]],[11,"try_from","","",1545,[[],["result",4]]],[11,"into","","",1545,[[]]],[11,"try_into","","",1545,[[],["result",4]]],[11,"type_id","","",1545,[[],["typeid",3]]],[11,"from","","",1546,[[]]],[11,"borrow","","",1546,[[]]],[11,"borrow_mut","","",1546,[[]]],[11,"try_from","","",1546,[[],["result",4]]],[11,"into","","",1546,[[]]],[11,"try_into","","",1546,[[],["result",4]]],[11,"type_id","","",1546,[[],["typeid",3]]],[11,"from","","",1547,[[]]],[11,"borrow","","",1547,[[]]],[11,"borrow_mut","","",1547,[[]]],[11,"try_from","","",1547,[[],["result",4]]],[11,"into","","",1547,[[]]],[11,"try_into","","",1547,[[],["result",4]]],[11,"type_id","","",1547,[[],["typeid",3]]],[11,"from","","",1548,[[]]],[11,"borrow","","",1548,[[]]],[11,"borrow_mut","","",1548,[[]]],[11,"try_from","","",1548,[[],["result",4]]],[11,"into","","",1548,[[]]],[11,"try_into","","",1548,[[],["result",4]]],[11,"type_id","","",1548,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::osculp32k","",1551,[[]]],[11,"borrow","","",1551,[[]]],[11,"borrow_mut","","",1551,[[]]],[11,"try_from","","",1551,[[],["result",4]]],[11,"into","","",1551,[[]]],[11,"try_into","","",1551,[[],["result",4]]],[11,"type_id","","",1551,[[],["typeid",3]]],[11,"from","","",1552,[[]]],[11,"borrow","","",1552,[[]]],[11,"borrow_mut","","",1552,[[]]],[11,"try_from","","",1552,[[],["result",4]]],[11,"into","","",1552,[[]]],[11,"try_into","","",1552,[[],["result",4]]],[11,"type_id","","",1552,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::osc8m","",1557,[[]]],[11,"borrow","","",1557,[[]]],[11,"borrow_mut","","",1557,[[]]],[11,"try_from","","",1557,[[],["result",4]]],[11,"into","","",1557,[[]]],[11,"try_into","","",1557,[[],["result",4]]],[11,"type_id","","",1557,[[],["typeid",3]]],[11,"from","","",1558,[[]]],[11,"borrow","","",1558,[[]]],[11,"borrow_mut","","",1558,[[]]],[11,"try_from","","",1558,[[],["result",4]]],[11,"into","","",1558,[[]]],[11,"try_into","","",1558,[[],["result",4]]],[11,"type_id","","",1558,[[],["typeid",3]]],[11,"from","","",1559,[[]]],[11,"borrow","","",1559,[[]]],[11,"borrow_mut","","",1559,[[]]],[11,"try_from","","",1559,[[],["result",4]]],[11,"into","","",1559,[[]]],[11,"try_into","","",1559,[[],["result",4]]],[11,"type_id","","",1559,[[],["typeid",3]]],[11,"from","","",1561,[[]]],[11,"borrow","","",1561,[[]]],[11,"borrow_mut","","",1561,[[]]],[11,"try_from","","",1561,[[],["result",4]]],[11,"into","","",1561,[[]]],[11,"try_into","","",1561,[[],["result",4]]],[11,"type_id","","",1561,[[],["typeid",3]]],[11,"from","","",1562,[[]]],[11,"borrow","","",1562,[[]]],[11,"borrow_mut","","",1562,[[]]],[11,"try_from","","",1562,[[],["result",4]]],[11,"into","","",1562,[[]]],[11,"try_into","","",1562,[[],["result",4]]],[11,"type_id","","",1562,[[],["typeid",3]]],[11,"from","","",1564,[[]]],[11,"borrow","","",1564,[[]]],[11,"borrow_mut","","",1564,[[]]],[11,"try_from","","",1564,[[],["result",4]]],[11,"into","","",1564,[[]]],[11,"try_into","","",1564,[[],["result",4]]],[11,"type_id","","",1564,[[],["typeid",3]]],[11,"from","","",1555,[[]]],[11,"borrow","","",1555,[[]]],[11,"borrow_mut","","",1555,[[]]],[11,"try_from","","",1555,[[],["result",4]]],[11,"into","","",1555,[[]]],[11,"try_into","","",1555,[[],["result",4]]],[11,"type_id","","",1555,[[],["typeid",3]]],[11,"from","","",1556,[[]]],[11,"borrow","","",1556,[[]]],[11,"borrow_mut","","",1556,[[]]],[11,"try_from","","",1556,[[],["result",4]]],[11,"into","","",1556,[[]]],[11,"try_into","","",1556,[[],["result",4]]],[11,"type_id","","",1556,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dfllctrl","",1567,[[]]],[11,"borrow","","",1567,[[]]],[11,"borrow_mut","","",1567,[[]]],[11,"try_from","","",1567,[[],["result",4]]],[11,"into","","",1567,[[]]],[11,"try_into","","",1567,[[],["result",4]]],[11,"type_id","","",1567,[[],["typeid",3]]],[11,"from","","",1568,[[]]],[11,"borrow","","",1568,[[]]],[11,"borrow_mut","","",1568,[[]]],[11,"try_from","","",1568,[[],["result",4]]],[11,"into","","",1568,[[]]],[11,"try_into","","",1568,[[],["result",4]]],[11,"type_id","","",1568,[[],["typeid",3]]],[11,"from","","",1569,[[]]],[11,"borrow","","",1569,[[]]],[11,"borrow_mut","","",1569,[[]]],[11,"try_from","","",1569,[[],["result",4]]],[11,"into","","",1569,[[]]],[11,"try_into","","",1569,[[],["result",4]]],[11,"type_id","","",1569,[[],["typeid",3]]],[11,"from","","",1570,[[]]],[11,"borrow","","",1570,[[]]],[11,"borrow_mut","","",1570,[[]]],[11,"try_from","","",1570,[[],["result",4]]],[11,"into","","",1570,[[]]],[11,"try_into","","",1570,[[],["result",4]]],[11,"type_id","","",1570,[[],["typeid",3]]],[11,"from","","",1571,[[]]],[11,"borrow","","",1571,[[]]],[11,"borrow_mut","","",1571,[[]]],[11,"try_from","","",1571,[[],["result",4]]],[11,"into","","",1571,[[]]],[11,"try_into","","",1571,[[],["result",4]]],[11,"type_id","","",1571,[[],["typeid",3]]],[11,"from","","",1572,[[]]],[11,"borrow","","",1572,[[]]],[11,"borrow_mut","","",1572,[[]]],[11,"try_from","","",1572,[[],["result",4]]],[11,"into","","",1572,[[]]],[11,"try_into","","",1572,[[],["result",4]]],[11,"type_id","","",1572,[[],["typeid",3]]],[11,"from","","",1573,[[]]],[11,"borrow","","",1573,[[]]],[11,"borrow_mut","","",1573,[[]]],[11,"try_from","","",1573,[[],["result",4]]],[11,"into","","",1573,[[]]],[11,"try_into","","",1573,[[],["result",4]]],[11,"type_id","","",1573,[[],["typeid",3]]],[11,"from","","",1574,[[]]],[11,"borrow","","",1574,[[]]],[11,"borrow_mut","","",1574,[[]]],[11,"try_from","","",1574,[[],["result",4]]],[11,"into","","",1574,[[]]],[11,"try_into","","",1574,[[],["result",4]]],[11,"type_id","","",1574,[[],["typeid",3]]],[11,"from","","",1575,[[]]],[11,"borrow","","",1575,[[]]],[11,"borrow_mut","","",1575,[[]]],[11,"try_from","","",1575,[[],["result",4]]],[11,"into","","",1575,[[]]],[11,"try_into","","",1575,[[],["result",4]]],[11,"type_id","","",1575,[[],["typeid",3]]],[11,"from","","",1576,[[]]],[11,"borrow","","",1576,[[]]],[11,"borrow_mut","","",1576,[[]]],[11,"try_from","","",1576,[[],["result",4]]],[11,"into","","",1576,[[]]],[11,"try_into","","",1576,[[],["result",4]]],[11,"type_id","","",1576,[[],["typeid",3]]],[11,"from","","",1577,[[]]],[11,"borrow","","",1577,[[]]],[11,"borrow_mut","","",1577,[[]]],[11,"try_from","","",1577,[[],["result",4]]],[11,"into","","",1577,[[]]],[11,"try_into","","",1577,[[],["result",4]]],[11,"type_id","","",1577,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dfllval","",1580,[[]]],[11,"borrow","","",1580,[[]]],[11,"borrow_mut","","",1580,[[]]],[11,"try_from","","",1580,[[],["result",4]]],[11,"into","","",1580,[[]]],[11,"try_into","","",1580,[[],["result",4]]],[11,"type_id","","",1580,[[],["typeid",3]]],[11,"from","","",1581,[[]]],[11,"borrow","","",1581,[[]]],[11,"borrow_mut","","",1581,[[]]],[11,"try_from","","",1581,[[],["result",4]]],[11,"into","","",1581,[[]]],[11,"try_into","","",1581,[[],["result",4]]],[11,"type_id","","",1581,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dfllmul","",1584,[[]]],[11,"borrow","","",1584,[[]]],[11,"borrow_mut","","",1584,[[]]],[11,"try_from","","",1584,[[],["result",4]]],[11,"into","","",1584,[[]]],[11,"try_into","","",1584,[[],["result",4]]],[11,"type_id","","",1584,[[],["typeid",3]]],[11,"from","","",1585,[[]]],[11,"borrow","","",1585,[[]]],[11,"borrow_mut","","",1585,[[]]],[11,"try_from","","",1585,[[],["result",4]]],[11,"into","","",1585,[[]]],[11,"try_into","","",1585,[[],["result",4]]],[11,"type_id","","",1585,[[],["typeid",3]]],[11,"from","","",1586,[[]]],[11,"borrow","","",1586,[[]]],[11,"borrow_mut","","",1586,[[]]],[11,"try_from","","",1586,[[],["result",4]]],[11,"into","","",1586,[[]]],[11,"try_into","","",1586,[[],["result",4]]],[11,"type_id","","",1586,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dfllsync","",1589,[[]]],[11,"borrow","","",1589,[[]]],[11,"borrow_mut","","",1589,[[]]],[11,"try_from","","",1589,[[],["result",4]]],[11,"into","","",1589,[[]]],[11,"try_into","","",1589,[[],["result",4]]],[11,"type_id","","",1589,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::bod33","",1593,[[]]],[11,"borrow","","",1593,[[]]],[11,"borrow_mut","","",1593,[[]]],[11,"try_from","","",1593,[[],["result",4]]],[11,"into","","",1593,[[]]],[11,"try_into","","",1593,[[],["result",4]]],[11,"type_id","","",1593,[[],["typeid",3]]],[11,"from","","",1594,[[]]],[11,"borrow","","",1594,[[]]],[11,"borrow_mut","","",1594,[[]]],[11,"try_from","","",1594,[[],["result",4]]],[11,"into","","",1594,[[]]],[11,"try_into","","",1594,[[],["result",4]]],[11,"type_id","","",1594,[[],["typeid",3]]],[11,"from","","",1596,[[]]],[11,"borrow","","",1596,[[]]],[11,"borrow_mut","","",1596,[[]]],[11,"try_from","","",1596,[[],["result",4]]],[11,"into","","",1596,[[]]],[11,"try_into","","",1596,[[],["result",4]]],[11,"type_id","","",1596,[[],["typeid",3]]],[11,"from","","",1597,[[]]],[11,"borrow","","",1597,[[]]],[11,"borrow_mut","","",1597,[[]]],[11,"try_from","","",1597,[[],["result",4]]],[11,"into","","",1597,[[]]],[11,"try_into","","",1597,[[],["result",4]]],[11,"type_id","","",1597,[[],["typeid",3]]],[11,"from","","",1598,[[]]],[11,"borrow","","",1598,[[]]],[11,"borrow_mut","","",1598,[[]]],[11,"try_from","","",1598,[[],["result",4]]],[11,"into","","",1598,[[]]],[11,"try_into","","",1598,[[],["result",4]]],[11,"type_id","","",1598,[[],["typeid",3]]],[11,"from","","",1599,[[]]],[11,"borrow","","",1599,[[]]],[11,"borrow_mut","","",1599,[[]]],[11,"try_from","","",1599,[[],["result",4]]],[11,"into","","",1599,[[]]],[11,"try_into","","",1599,[[],["result",4]]],[11,"type_id","","",1599,[[],["typeid",3]]],[11,"from","","",1601,[[]]],[11,"borrow","","",1601,[[]]],[11,"borrow_mut","","",1601,[[]]],[11,"try_from","","",1601,[[],["result",4]]],[11,"into","","",1601,[[]]],[11,"try_into","","",1601,[[],["result",4]]],[11,"type_id","","",1601,[[],["typeid",3]]],[11,"from","","",1602,[[]]],[11,"borrow","","",1602,[[]]],[11,"borrow_mut","","",1602,[[]]],[11,"try_from","","",1602,[[],["result",4]]],[11,"into","","",1602,[[]]],[11,"try_into","","",1602,[[],["result",4]]],[11,"type_id","","",1602,[[],["typeid",3]]],[11,"from","","",1591,[[]]],[11,"borrow","","",1591,[[]]],[11,"borrow_mut","","",1591,[[]]],[11,"try_from","","",1591,[[],["result",4]]],[11,"into","","",1591,[[]]],[11,"try_into","","",1591,[[],["result",4]]],[11,"type_id","","",1591,[[],["typeid",3]]],[11,"from","","",1592,[[]]],[11,"borrow","","",1592,[[]]],[11,"borrow_mut","","",1592,[[]]],[11,"try_from","","",1592,[[],["result",4]]],[11,"into","","",1592,[[]]],[11,"try_into","","",1592,[[],["result",4]]],[11,"type_id","","",1592,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::vreg","",1605,[[]]],[11,"borrow","","",1605,[[]]],[11,"borrow_mut","","",1605,[[]]],[11,"try_from","","",1605,[[],["result",4]]],[11,"into","","",1605,[[]]],[11,"try_into","","",1605,[[],["result",4]]],[11,"type_id","","",1605,[[],["typeid",3]]],[11,"from","","",1606,[[]]],[11,"borrow","","",1606,[[]]],[11,"borrow_mut","","",1606,[[]]],[11,"try_from","","",1606,[[],["result",4]]],[11,"into","","",1606,[[]]],[11,"try_into","","",1606,[[],["result",4]]],[11,"type_id","","",1606,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::vref","",1609,[[]]],[11,"borrow","","",1609,[[]]],[11,"borrow_mut","","",1609,[[]]],[11,"try_from","","",1609,[[],["result",4]]],[11,"into","","",1609,[[]]],[11,"try_into","","",1609,[[],["result",4]]],[11,"type_id","","",1609,[[],["typeid",3]]],[11,"from","","",1610,[[]]],[11,"borrow","","",1610,[[]]],[11,"borrow_mut","","",1610,[[]]],[11,"try_from","","",1610,[[],["result",4]]],[11,"into","","",1610,[[]]],[11,"try_into","","",1610,[[],["result",4]]],[11,"type_id","","",1610,[[],["typeid",3]]],[11,"from","","",1611,[[]]],[11,"borrow","","",1611,[[]]],[11,"borrow_mut","","",1611,[[]]],[11,"try_from","","",1611,[[],["result",4]]],[11,"into","","",1611,[[]]],[11,"try_into","","",1611,[[],["result",4]]],[11,"type_id","","",1611,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dpllctrla","",1614,[[]]],[11,"borrow","","",1614,[[]]],[11,"borrow_mut","","",1614,[[]]],[11,"try_from","","",1614,[[],["result",4]]],[11,"into","","",1614,[[]]],[11,"try_into","","",1614,[[],["result",4]]],[11,"type_id","","",1614,[[],["typeid",3]]],[11,"from","","",1615,[[]]],[11,"borrow","","",1615,[[]]],[11,"borrow_mut","","",1615,[[]]],[11,"try_from","","",1615,[[],["result",4]]],[11,"into","","",1615,[[]]],[11,"try_into","","",1615,[[],["result",4]]],[11,"type_id","","",1615,[[],["typeid",3]]],[11,"from","","",1616,[[]]],[11,"borrow","","",1616,[[]]],[11,"borrow_mut","","",1616,[[]]],[11,"try_from","","",1616,[[],["result",4]]],[11,"into","","",1616,[[]]],[11,"try_into","","",1616,[[],["result",4]]],[11,"type_id","","",1616,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dpllratio","",1619,[[]]],[11,"borrow","","",1619,[[]]],[11,"borrow_mut","","",1619,[[]]],[11,"try_from","","",1619,[[],["result",4]]],[11,"into","","",1619,[[]]],[11,"try_into","","",1619,[[],["result",4]]],[11,"type_id","","",1619,[[],["typeid",3]]],[11,"from","","",1620,[[]]],[11,"borrow","","",1620,[[]]],[11,"borrow_mut","","",1620,[[]]],[11,"try_from","","",1620,[[],["result",4]]],[11,"into","","",1620,[[]]],[11,"try_into","","",1620,[[],["result",4]]],[11,"type_id","","",1620,[[],["typeid",3]]],[11,"from","atsamd21g::sysctrl::dpllctrlb","",1627,[[]]],[11,"borrow","","",1627,[[]]],[11,"borrow_mut","","",1627,[[]]],[11,"try_from","","",1627,[[],["result",4]]],[11,"into","","",1627,[[]]],[11,"try_into","","",1627,[[],["result",4]]],[11,"type_id","","",1627,[[],["typeid",3]]],[11,"from","","",1628,[[]]],[11,"borrow","","",1628,[[]]],[11,"borrow_mut","","",1628,[[]]],[11,"try_from","","",1628,[[],["result",4]]],[11,"into","","",1628,[[]]],[11,"try_into","","",1628,[[],["result",4]]],[11,"type_id","","",1628,[[],["typeid",3]]],[11,"from","","",1629,[[]]],[11,"borrow","","",1629,[[]]],[11,"borrow_mut","","",1629,[[]]],[11,"try_from","","",1629,[[],["result",4]]],[11,"into","","",1629,[[]]],[11,"try_into","","",1629,[[],["result",4]]],[11,"type_id","","",1629,[[],["typeid",3]]],[11,"from","","",1631,[[]]],[11,"borrow","","",1631,[[]]],[11,"borrow_mut","","",1631,[[]]],[11,"try_from","","",1631,[[],["result",4]]],[11,"into","","",1631,[[]]],[11,"try_into","","",1631,[[],["result",4]]],[11,"type_id","","",1631,[[],["typeid",3]]],[11,"from","","",1633,[[]]],[11,"borrow","","",1633,[[]]],[11,"borrow_mut","","",1633,[[]]],[11,"try_from","","",1633,[[],["result",4]]],[11,"into","","",1633,[[]]],[11,"try_into","","",1633,[[],["result",4]]],[11,"type_id","","",1633,[[],["typeid",3]]],[11,"from","","",1634,[[]]],[11,"borrow","","",1634,[[]]],[11,"borrow_mut","","",1634,[[]]],[11,"try_from","","",1634,[[],["result",4]]],[11,"into","","",1634,[[]]],[11,"try_into","","",1634,[[],["result",4]]],[11,"type_id","","",1634,[[],["typeid",3]]],[11,"from","","",1635,[[]]],[11,"borrow","","",1635,[[]]],[11,"borrow_mut","","",1635,[[]]],[11,"try_from","","",1635,[[],["result",4]]],[11,"into","","",1635,[[]]],[11,"try_into","","",1635,[[],["result",4]]],[11,"type_id","","",1635,[[],["typeid",3]]],[11,"from","","",1623,[[]]],[11,"borrow","","",1623,[[]]],[11,"borrow_mut","","",1623,[[]]],[11,"try_from","","",1623,[[],["result",4]]],[11,"into","","",1623,[[]]],[11,"try_into","","",1623,[[],["result",4]]],[11,"type_id","","",1623,[[],["typeid",3]]],[11,"from","","",1624,[[]]],[11,"borrow","","",1624,[[]]],[11,"borrow_mut","","",1624,[[]]],[11,"try_from","","",1624,[[],["result",4]]],[11,"into","","",1624,[[]]],[11,"try_into","","",1624,[[],["result",4]]],[11,"type_id","","",1624,[[],["typeid",3]]],[11,"from","","",1625,[[]]],[11,"borrow","","",1625,[[]]],[11,"borrow_mut","","",1625,[[]]],[11,"try_from","","",1625,[[],["result",4]]],[11,"into","","",1625,[[]]],[11,"try_into","","",1625,[[],["result",4]]],[11,"type_id","","",1625,[[],["typeid",3]]],[11,"from","atsamd21g::tc3","",1894,[[]]],[11,"borrow","","",1894,[[]]],[11,"borrow_mut","","",1894,[[]]],[11,"try_from","","",1894,[[],["result",4]]],[11,"into","","",1894,[[]]],[11,"try_into","","",1894,[[],["result",4]]],[11,"type_id","","",1894,[[],["typeid",3]]],[11,"from","","",1639,[[]]],[11,"borrow","","",1639,[[]]],[11,"borrow_mut","","",1639,[[]]],[11,"try_from","","",1639,[[],["result",4]]],[11,"into","","",1639,[[]]],[11,"try_into","","",1639,[[],["result",4]]],[11,"type_id","","",1639,[[],["typeid",3]]],[11,"from","","",1640,[[]]],[11,"borrow","","",1640,[[]]],[11,"borrow_mut","","",1640,[[]]],[11,"try_from","","",1640,[[],["result",4]]],[11,"into","","",1640,[[]]],[11,"try_into","","",1640,[[],["result",4]]],[11,"type_id","","",1640,[[],["typeid",3]]],[11,"from","","",1641,[[]]],[11,"borrow","","",1641,[[]]],[11,"borrow_mut","","",1641,[[]]],[11,"try_from","","",1641,[[],["result",4]]],[11,"into","","",1641,[[]]],[11,"try_into","","",1641,[[],["result",4]]],[11,"type_id","","",1641,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::ctrla","",1646,[[]]],[11,"borrow","","",1646,[[]]],[11,"borrow_mut","","",1646,[[]]],[11,"try_from","","",1646,[[],["result",4]]],[11,"into","","",1646,[[]]],[11,"try_into","","",1646,[[],["result",4]]],[11,"type_id","","",1646,[[],["typeid",3]]],[11,"from","","",1647,[[]]],[11,"borrow","","",1647,[[]]],[11,"borrow_mut","","",1647,[[]]],[11,"try_from","","",1647,[[],["result",4]]],[11,"into","","",1647,[[]]],[11,"try_into","","",1647,[[],["result",4]]],[11,"type_id","","",1647,[[],["typeid",3]]],[11,"from","","",1649,[[]]],[11,"borrow","","",1649,[[]]],[11,"borrow_mut","","",1649,[[]]],[11,"try_from","","",1649,[[],["result",4]]],[11,"into","","",1649,[[]]],[11,"try_into","","",1649,[[],["result",4]]],[11,"type_id","","",1649,[[],["typeid",3]]],[11,"from","","",1651,[[]]],[11,"borrow","","",1651,[[]]],[11,"borrow_mut","","",1651,[[]]],[11,"try_from","","",1651,[[],["result",4]]],[11,"into","","",1651,[[]]],[11,"try_into","","",1651,[[],["result",4]]],[11,"type_id","","",1651,[[],["typeid",3]]],[11,"from","","",1653,[[]]],[11,"borrow","","",1653,[[]]],[11,"borrow_mut","","",1653,[[]]],[11,"try_from","","",1653,[[],["result",4]]],[11,"into","","",1653,[[]]],[11,"try_into","","",1653,[[],["result",4]]],[11,"type_id","","",1653,[[],["typeid",3]]],[11,"from","","",1654,[[]]],[11,"borrow","","",1654,[[]]],[11,"borrow_mut","","",1654,[[]]],[11,"try_from","","",1654,[[],["result",4]]],[11,"into","","",1654,[[]]],[11,"try_into","","",1654,[[],["result",4]]],[11,"type_id","","",1654,[[],["typeid",3]]],[11,"from","","",1656,[[]]],[11,"borrow","","",1656,[[]]],[11,"borrow_mut","","",1656,[[]]],[11,"try_from","","",1656,[[],["result",4]]],[11,"into","","",1656,[[]]],[11,"try_into","","",1656,[[],["result",4]]],[11,"type_id","","",1656,[[],["typeid",3]]],[11,"from","","",1642,[[]]],[11,"borrow","","",1642,[[]]],[11,"borrow_mut","","",1642,[[]]],[11,"try_from","","",1642,[[],["result",4]]],[11,"into","","",1642,[[]]],[11,"try_into","","",1642,[[],["result",4]]],[11,"type_id","","",1642,[[],["typeid",3]]],[11,"from","","",1643,[[]]],[11,"borrow","","",1643,[[]]],[11,"borrow_mut","","",1643,[[]]],[11,"try_from","","",1643,[[],["result",4]]],[11,"into","","",1643,[[]]],[11,"try_into","","",1643,[[],["result",4]]],[11,"type_id","","",1643,[[],["typeid",3]]],[11,"from","","",1644,[[]]],[11,"borrow","","",1644,[[]]],[11,"borrow_mut","","",1644,[[]]],[11,"try_from","","",1644,[[],["result",4]]],[11,"into","","",1644,[[]]],[11,"try_into","","",1644,[[],["result",4]]],[11,"type_id","","",1644,[[],["typeid",3]]],[11,"from","","",1645,[[]]],[11,"borrow","","",1645,[[]]],[11,"borrow_mut","","",1645,[[]]],[11,"try_from","","",1645,[[],["result",4]]],[11,"into","","",1645,[[]]],[11,"try_into","","",1645,[[],["result",4]]],[11,"type_id","","",1645,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::readreq","",1659,[[]]],[11,"borrow","","",1659,[[]]],[11,"borrow_mut","","",1659,[[]]],[11,"try_from","","",1659,[[],["result",4]]],[11,"into","","",1659,[[]]],[11,"try_into","","",1659,[[],["result",4]]],[11,"type_id","","",1659,[[],["typeid",3]]],[11,"from","","",1660,[[]]],[11,"borrow","","",1660,[[]]],[11,"borrow_mut","","",1660,[[]]],[11,"try_from","","",1660,[[],["result",4]]],[11,"into","","",1660,[[]]],[11,"try_into","","",1660,[[],["result",4]]],[11,"type_id","","",1660,[[],["typeid",3]]],[11,"from","","",1661,[[]]],[11,"borrow","","",1661,[[]]],[11,"borrow_mut","","",1661,[[]]],[11,"try_from","","",1661,[[],["result",4]]],[11,"into","","",1661,[[]]],[11,"try_into","","",1661,[[],["result",4]]],[11,"type_id","","",1661,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::ctrlbclr","",1665,[[]]],[11,"borrow","","",1665,[[]]],[11,"borrow_mut","","",1665,[[]]],[11,"try_from","","",1665,[[],["result",4]]],[11,"into","","",1665,[[]]],[11,"try_into","","",1665,[[],["result",4]]],[11,"type_id","","",1665,[[],["typeid",3]]],[11,"from","","",1666,[[]]],[11,"borrow","","",1666,[[]]],[11,"borrow_mut","","",1666,[[]]],[11,"try_from","","",1666,[[],["result",4]]],[11,"into","","",1666,[[]]],[11,"try_into","","",1666,[[],["result",4]]],[11,"type_id","","",1666,[[],["typeid",3]]],[11,"from","","",1668,[[]]],[11,"borrow","","",1668,[[]]],[11,"borrow_mut","","",1668,[[]]],[11,"try_from","","",1668,[[],["result",4]]],[11,"into","","",1668,[[]]],[11,"try_into","","",1668,[[],["result",4]]],[11,"type_id","","",1668,[[],["typeid",3]]],[11,"from","","",1664,[[]]],[11,"borrow","","",1664,[[]]],[11,"borrow_mut","","",1664,[[]]],[11,"try_from","","",1664,[[],["result",4]]],[11,"into","","",1664,[[]]],[11,"try_into","","",1664,[[],["result",4]]],[11,"type_id","","",1664,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::ctrlbset","",1672,[[]]],[11,"borrow","","",1672,[[]]],[11,"borrow_mut","","",1672,[[]]],[11,"try_from","","",1672,[[],["result",4]]],[11,"into","","",1672,[[]]],[11,"try_into","","",1672,[[],["result",4]]],[11,"type_id","","",1672,[[],["typeid",3]]],[11,"from","","",1673,[[]]],[11,"borrow","","",1673,[[]]],[11,"borrow_mut","","",1673,[[]]],[11,"try_from","","",1673,[[],["result",4]]],[11,"into","","",1673,[[]]],[11,"try_into","","",1673,[[],["result",4]]],[11,"type_id","","",1673,[[],["typeid",3]]],[11,"from","","",1675,[[]]],[11,"borrow","","",1675,[[]]],[11,"borrow_mut","","",1675,[[]]],[11,"try_from","","",1675,[[],["result",4]]],[11,"into","","",1675,[[]]],[11,"try_into","","",1675,[[],["result",4]]],[11,"type_id","","",1675,[[],["typeid",3]]],[11,"from","","",1671,[[]]],[11,"borrow","","",1671,[[]]],[11,"borrow_mut","","",1671,[[]]],[11,"try_from","","",1671,[[],["result",4]]],[11,"into","","",1671,[[]]],[11,"try_into","","",1671,[[],["result",4]]],[11,"type_id","","",1671,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::ctrlc","",1678,[[]]],[11,"borrow","","",1678,[[]]],[11,"borrow_mut","","",1678,[[]]],[11,"try_from","","",1678,[[],["result",4]]],[11,"into","","",1678,[[]]],[11,"try_into","","",1678,[[],["result",4]]],[11,"type_id","","",1678,[[],["typeid",3]]],[11,"from","","",1679,[[]]],[11,"borrow","","",1679,[[]]],[11,"borrow_mut","","",1679,[[]]],[11,"try_from","","",1679,[[],["result",4]]],[11,"into","","",1679,[[]]],[11,"try_into","","",1679,[[],["result",4]]],[11,"type_id","","",1679,[[],["typeid",3]]],[11,"from","","",1680,[[]]],[11,"borrow","","",1680,[[]]],[11,"borrow_mut","","",1680,[[]]],[11,"try_from","","",1680,[[],["result",4]]],[11,"into","","",1680,[[]]],[11,"try_into","","",1680,[[],["result",4]]],[11,"type_id","","",1680,[[],["typeid",3]]],[11,"from","","",1681,[[]]],[11,"borrow","","",1681,[[]]],[11,"borrow_mut","","",1681,[[]]],[11,"try_from","","",1681,[[],["result",4]]],[11,"into","","",1681,[[]]],[11,"try_into","","",1681,[[],["result",4]]],[11,"type_id","","",1681,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::dbgctrl","",1684,[[]]],[11,"borrow","","",1684,[[]]],[11,"borrow_mut","","",1684,[[]]],[11,"try_from","","",1684,[[],["result",4]]],[11,"into","","",1684,[[]]],[11,"try_into","","",1684,[[],["result",4]]],[11,"type_id","","",1684,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::evctrl","",1689,[[]]],[11,"borrow","","",1689,[[]]],[11,"borrow_mut","","",1689,[[]]],[11,"try_from","","",1689,[[],["result",4]]],[11,"into","","",1689,[[]]],[11,"try_into","","",1689,[[],["result",4]]],[11,"type_id","","",1689,[[],["typeid",3]]],[11,"from","","",1690,[[]]],[11,"borrow","","",1690,[[]]],[11,"borrow_mut","","",1690,[[]]],[11,"try_from","","",1690,[[],["result",4]]],[11,"into","","",1690,[[]]],[11,"try_into","","",1690,[[],["result",4]]],[11,"type_id","","",1690,[[],["typeid",3]]],[11,"from","","",1691,[[]]],[11,"borrow","","",1691,[[]]],[11,"borrow_mut","","",1691,[[]]],[11,"try_from","","",1691,[[],["result",4]]],[11,"into","","",1691,[[]]],[11,"try_into","","",1691,[[],["result",4]]],[11,"type_id","","",1691,[[],["typeid",3]]],[11,"from","","",1692,[[]]],[11,"borrow","","",1692,[[]]],[11,"borrow_mut","","",1692,[[]]],[11,"try_from","","",1692,[[],["result",4]]],[11,"into","","",1692,[[]]],[11,"try_into","","",1692,[[],["result",4]]],[11,"type_id","","",1692,[[],["typeid",3]]],[11,"from","","",1693,[[]]],[11,"borrow","","",1693,[[]]],[11,"borrow_mut","","",1693,[[]]],[11,"try_from","","",1693,[[],["result",4]]],[11,"into","","",1693,[[]]],[11,"try_into","","",1693,[[],["result",4]]],[11,"type_id","","",1693,[[],["typeid",3]]],[11,"from","","",1694,[[]]],[11,"borrow","","",1694,[[]]],[11,"borrow_mut","","",1694,[[]]],[11,"try_from","","",1694,[[],["result",4]]],[11,"into","","",1694,[[]]],[11,"try_into","","",1694,[[],["result",4]]],[11,"type_id","","",1694,[[],["typeid",3]]],[11,"from","","",1687,[[]]],[11,"borrow","","",1687,[[]]],[11,"borrow_mut","","",1687,[[]]],[11,"try_from","","",1687,[[],["result",4]]],[11,"into","","",1687,[[]]],[11,"try_into","","",1687,[[],["result",4]]],[11,"type_id","","",1687,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::intenclr","",1697,[[]]],[11,"borrow","","",1697,[[]]],[11,"borrow_mut","","",1697,[[]]],[11,"try_from","","",1697,[[],["result",4]]],[11,"into","","",1697,[[]]],[11,"try_into","","",1697,[[],["result",4]]],[11,"type_id","","",1697,[[],["typeid",3]]],[11,"from","","",1698,[[]]],[11,"borrow","","",1698,[[]]],[11,"borrow_mut","","",1698,[[]]],[11,"try_from","","",1698,[[],["result",4]]],[11,"into","","",1698,[[]]],[11,"try_into","","",1698,[[],["result",4]]],[11,"type_id","","",1698,[[],["typeid",3]]],[11,"from","","",1699,[[]]],[11,"borrow","","",1699,[[]]],[11,"borrow_mut","","",1699,[[]]],[11,"try_from","","",1699,[[],["result",4]]],[11,"into","","",1699,[[]]],[11,"try_into","","",1699,[[],["result",4]]],[11,"type_id","","",1699,[[],["typeid",3]]],[11,"from","","",1700,[[]]],[11,"borrow","","",1700,[[]]],[11,"borrow_mut","","",1700,[[]]],[11,"try_from","","",1700,[[],["result",4]]],[11,"into","","",1700,[[]]],[11,"try_into","","",1700,[[],["result",4]]],[11,"type_id","","",1700,[[],["typeid",3]]],[11,"from","","",1701,[[]]],[11,"borrow","","",1701,[[]]],[11,"borrow_mut","","",1701,[[]]],[11,"try_from","","",1701,[[],["result",4]]],[11,"into","","",1701,[[]]],[11,"try_into","","",1701,[[],["result",4]]],[11,"type_id","","",1701,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::intenset","",1704,[[]]],[11,"borrow","","",1704,[[]]],[11,"borrow_mut","","",1704,[[]]],[11,"try_from","","",1704,[[],["result",4]]],[11,"into","","",1704,[[]]],[11,"try_into","","",1704,[[],["result",4]]],[11,"type_id","","",1704,[[],["typeid",3]]],[11,"from","","",1705,[[]]],[11,"borrow","","",1705,[[]]],[11,"borrow_mut","","",1705,[[]]],[11,"try_from","","",1705,[[],["result",4]]],[11,"into","","",1705,[[]]],[11,"try_into","","",1705,[[],["result",4]]],[11,"type_id","","",1705,[[],["typeid",3]]],[11,"from","","",1706,[[]]],[11,"borrow","","",1706,[[]]],[11,"borrow_mut","","",1706,[[]]],[11,"try_from","","",1706,[[],["result",4]]],[11,"into","","",1706,[[]]],[11,"try_into","","",1706,[[],["result",4]]],[11,"type_id","","",1706,[[],["typeid",3]]],[11,"from","","",1707,[[]]],[11,"borrow","","",1707,[[]]],[11,"borrow_mut","","",1707,[[]]],[11,"try_from","","",1707,[[],["result",4]]],[11,"into","","",1707,[[]]],[11,"try_into","","",1707,[[],["result",4]]],[11,"type_id","","",1707,[[],["typeid",3]]],[11,"from","","",1708,[[]]],[11,"borrow","","",1708,[[]]],[11,"borrow_mut","","",1708,[[]]],[11,"try_from","","",1708,[[],["result",4]]],[11,"into","","",1708,[[]]],[11,"try_into","","",1708,[[],["result",4]]],[11,"type_id","","",1708,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::intflag","",1711,[[]]],[11,"borrow","","",1711,[[]]],[11,"borrow_mut","","",1711,[[]]],[11,"try_from","","",1711,[[],["result",4]]],[11,"into","","",1711,[[]]],[11,"try_into","","",1711,[[],["result",4]]],[11,"type_id","","",1711,[[],["typeid",3]]],[11,"from","","",1712,[[]]],[11,"borrow","","",1712,[[]]],[11,"borrow_mut","","",1712,[[]]],[11,"try_from","","",1712,[[],["result",4]]],[11,"into","","",1712,[[]]],[11,"try_into","","",1712,[[],["result",4]]],[11,"type_id","","",1712,[[],["typeid",3]]],[11,"from","","",1713,[[]]],[11,"borrow","","",1713,[[]]],[11,"borrow_mut","","",1713,[[]]],[11,"try_from","","",1713,[[],["result",4]]],[11,"into","","",1713,[[]]],[11,"try_into","","",1713,[[],["result",4]]],[11,"type_id","","",1713,[[],["typeid",3]]],[11,"from","","",1714,[[]]],[11,"borrow","","",1714,[[]]],[11,"borrow_mut","","",1714,[[]]],[11,"try_from","","",1714,[[],["result",4]]],[11,"into","","",1714,[[]]],[11,"try_into","","",1714,[[],["result",4]]],[11,"type_id","","",1714,[[],["typeid",3]]],[11,"from","","",1715,[[]]],[11,"borrow","","",1715,[[]]],[11,"borrow_mut","","",1715,[[]]],[11,"try_from","","",1715,[[],["result",4]]],[11,"into","","",1715,[[]]],[11,"try_into","","",1715,[[],["result",4]]],[11,"type_id","","",1715,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::count","",1719,[[]]],[11,"borrow","","",1719,[[]]],[11,"borrow_mut","","",1719,[[]]],[11,"try_from","","",1719,[[],["result",4]]],[11,"into","","",1719,[[]]],[11,"try_into","","",1719,[[],["result",4]]],[11,"type_id","","",1719,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::per","",1722,[[]]],[11,"borrow","","",1722,[[]]],[11,"borrow_mut","","",1722,[[]]],[11,"try_from","","",1722,[[],["result",4]]],[11,"into","","",1722,[[]]],[11,"try_into","","",1722,[[],["result",4]]],[11,"type_id","","",1722,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count8::cc","",1725,[[]]],[11,"borrow","","",1725,[[]]],[11,"borrow_mut","","",1725,[[]]],[11,"try_from","","",1725,[[],["result",4]]],[11,"into","","",1725,[[]]],[11,"try_into","","",1725,[[],["result",4]]],[11,"type_id","","",1725,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::ctrla","",1732,[[]]],[11,"borrow","","",1732,[[]]],[11,"borrow_mut","","",1732,[[]]],[11,"try_from","","",1732,[[],["result",4]]],[11,"into","","",1732,[[]]],[11,"try_into","","",1732,[[],["result",4]]],[11,"type_id","","",1732,[[],["typeid",3]]],[11,"from","","",1733,[[]]],[11,"borrow","","",1733,[[]]],[11,"borrow_mut","","",1733,[[]]],[11,"try_from","","",1733,[[],["result",4]]],[11,"into","","",1733,[[]]],[11,"try_into","","",1733,[[],["result",4]]],[11,"type_id","","",1733,[[],["typeid",3]]],[11,"from","","",1735,[[]]],[11,"borrow","","",1735,[[]]],[11,"borrow_mut","","",1735,[[]]],[11,"try_from","","",1735,[[],["result",4]]],[11,"into","","",1735,[[]]],[11,"try_into","","",1735,[[],["result",4]]],[11,"type_id","","",1735,[[],["typeid",3]]],[11,"from","","",1737,[[]]],[11,"borrow","","",1737,[[]]],[11,"borrow_mut","","",1737,[[]]],[11,"try_from","","",1737,[[],["result",4]]],[11,"into","","",1737,[[]]],[11,"try_into","","",1737,[[],["result",4]]],[11,"type_id","","",1737,[[],["typeid",3]]],[11,"from","","",1739,[[]]],[11,"borrow","","",1739,[[]]],[11,"borrow_mut","","",1739,[[]]],[11,"try_from","","",1739,[[],["result",4]]],[11,"into","","",1739,[[]]],[11,"try_into","","",1739,[[],["result",4]]],[11,"type_id","","",1739,[[],["typeid",3]]],[11,"from","","",1740,[[]]],[11,"borrow","","",1740,[[]]],[11,"borrow_mut","","",1740,[[]]],[11,"try_from","","",1740,[[],["result",4]]],[11,"into","","",1740,[[]]],[11,"try_into","","",1740,[[],["result",4]]],[11,"type_id","","",1740,[[],["typeid",3]]],[11,"from","","",1742,[[]]],[11,"borrow","","",1742,[[]]],[11,"borrow_mut","","",1742,[[]]],[11,"try_from","","",1742,[[],["result",4]]],[11,"into","","",1742,[[]]],[11,"try_into","","",1742,[[],["result",4]]],[11,"type_id","","",1742,[[],["typeid",3]]],[11,"from","","",1728,[[]]],[11,"borrow","","",1728,[[]]],[11,"borrow_mut","","",1728,[[]]],[11,"try_from","","",1728,[[],["result",4]]],[11,"into","","",1728,[[]]],[11,"try_into","","",1728,[[],["result",4]]],[11,"type_id","","",1728,[[],["typeid",3]]],[11,"from","","",1729,[[]]],[11,"borrow","","",1729,[[]]],[11,"borrow_mut","","",1729,[[]]],[11,"try_from","","",1729,[[],["result",4]]],[11,"into","","",1729,[[]]],[11,"try_into","","",1729,[[],["result",4]]],[11,"type_id","","",1729,[[],["typeid",3]]],[11,"from","","",1730,[[]]],[11,"borrow","","",1730,[[]]],[11,"borrow_mut","","",1730,[[]]],[11,"try_from","","",1730,[[],["result",4]]],[11,"into","","",1730,[[]]],[11,"try_into","","",1730,[[],["result",4]]],[11,"type_id","","",1730,[[],["typeid",3]]],[11,"from","","",1731,[[]]],[11,"borrow","","",1731,[[]]],[11,"borrow_mut","","",1731,[[]]],[11,"try_from","","",1731,[[],["result",4]]],[11,"into","","",1731,[[]]],[11,"try_into","","",1731,[[],["result",4]]],[11,"type_id","","",1731,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::readreq","",1745,[[]]],[11,"borrow","","",1745,[[]]],[11,"borrow_mut","","",1745,[[]]],[11,"try_from","","",1745,[[],["result",4]]],[11,"into","","",1745,[[]]],[11,"try_into","","",1745,[[],["result",4]]],[11,"type_id","","",1745,[[],["typeid",3]]],[11,"from","","",1746,[[]]],[11,"borrow","","",1746,[[]]],[11,"borrow_mut","","",1746,[[]]],[11,"try_from","","",1746,[[],["result",4]]],[11,"into","","",1746,[[]]],[11,"try_into","","",1746,[[],["result",4]]],[11,"type_id","","",1746,[[],["typeid",3]]],[11,"from","","",1747,[[]]],[11,"borrow","","",1747,[[]]],[11,"borrow_mut","","",1747,[[]]],[11,"try_from","","",1747,[[],["result",4]]],[11,"into","","",1747,[[]]],[11,"try_into","","",1747,[[],["result",4]]],[11,"type_id","","",1747,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::ctrlbclr","",1751,[[]]],[11,"borrow","","",1751,[[]]],[11,"borrow_mut","","",1751,[[]]],[11,"try_from","","",1751,[[],["result",4]]],[11,"into","","",1751,[[]]],[11,"try_into","","",1751,[[],["result",4]]],[11,"type_id","","",1751,[[],["typeid",3]]],[11,"from","","",1752,[[]]],[11,"borrow","","",1752,[[]]],[11,"borrow_mut","","",1752,[[]]],[11,"try_from","","",1752,[[],["result",4]]],[11,"into","","",1752,[[]]],[11,"try_into","","",1752,[[],["result",4]]],[11,"type_id","","",1752,[[],["typeid",3]]],[11,"from","","",1754,[[]]],[11,"borrow","","",1754,[[]]],[11,"borrow_mut","","",1754,[[]]],[11,"try_from","","",1754,[[],["result",4]]],[11,"into","","",1754,[[]]],[11,"try_into","","",1754,[[],["result",4]]],[11,"type_id","","",1754,[[],["typeid",3]]],[11,"from","","",1750,[[]]],[11,"borrow","","",1750,[[]]],[11,"borrow_mut","","",1750,[[]]],[11,"try_from","","",1750,[[],["result",4]]],[11,"into","","",1750,[[]]],[11,"try_into","","",1750,[[],["result",4]]],[11,"type_id","","",1750,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::ctrlbset","",1758,[[]]],[11,"borrow","","",1758,[[]]],[11,"borrow_mut","","",1758,[[]]],[11,"try_from","","",1758,[[],["result",4]]],[11,"into","","",1758,[[]]],[11,"try_into","","",1758,[[],["result",4]]],[11,"type_id","","",1758,[[],["typeid",3]]],[11,"from","","",1759,[[]]],[11,"borrow","","",1759,[[]]],[11,"borrow_mut","","",1759,[[]]],[11,"try_from","","",1759,[[],["result",4]]],[11,"into","","",1759,[[]]],[11,"try_into","","",1759,[[],["result",4]]],[11,"type_id","","",1759,[[],["typeid",3]]],[11,"from","","",1761,[[]]],[11,"borrow","","",1761,[[]]],[11,"borrow_mut","","",1761,[[]]],[11,"try_from","","",1761,[[],["result",4]]],[11,"into","","",1761,[[]]],[11,"try_into","","",1761,[[],["result",4]]],[11,"type_id","","",1761,[[],["typeid",3]]],[11,"from","","",1757,[[]]],[11,"borrow","","",1757,[[]]],[11,"borrow_mut","","",1757,[[]]],[11,"try_from","","",1757,[[],["result",4]]],[11,"into","","",1757,[[]]],[11,"try_into","","",1757,[[],["result",4]]],[11,"type_id","","",1757,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::ctrlc","",1764,[[]]],[11,"borrow","","",1764,[[]]],[11,"borrow_mut","","",1764,[[]]],[11,"try_from","","",1764,[[],["result",4]]],[11,"into","","",1764,[[]]],[11,"try_into","","",1764,[[],["result",4]]],[11,"type_id","","",1764,[[],["typeid",3]]],[11,"from","","",1765,[[]]],[11,"borrow","","",1765,[[]]],[11,"borrow_mut","","",1765,[[]]],[11,"try_from","","",1765,[[],["result",4]]],[11,"into","","",1765,[[]]],[11,"try_into","","",1765,[[],["result",4]]],[11,"type_id","","",1765,[[],["typeid",3]]],[11,"from","","",1766,[[]]],[11,"borrow","","",1766,[[]]],[11,"borrow_mut","","",1766,[[]]],[11,"try_from","","",1766,[[],["result",4]]],[11,"into","","",1766,[[]]],[11,"try_into","","",1766,[[],["result",4]]],[11,"type_id","","",1766,[[],["typeid",3]]],[11,"from","","",1767,[[]]],[11,"borrow","","",1767,[[]]],[11,"borrow_mut","","",1767,[[]]],[11,"try_from","","",1767,[[],["result",4]]],[11,"into","","",1767,[[]]],[11,"try_into","","",1767,[[],["result",4]]],[11,"type_id","","",1767,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::dbgctrl","",1770,[[]]],[11,"borrow","","",1770,[[]]],[11,"borrow_mut","","",1770,[[]]],[11,"try_from","","",1770,[[],["result",4]]],[11,"into","","",1770,[[]]],[11,"try_into","","",1770,[[],["result",4]]],[11,"type_id","","",1770,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::evctrl","",1775,[[]]],[11,"borrow","","",1775,[[]]],[11,"borrow_mut","","",1775,[[]]],[11,"try_from","","",1775,[[],["result",4]]],[11,"into","","",1775,[[]]],[11,"try_into","","",1775,[[],["result",4]]],[11,"type_id","","",1775,[[],["typeid",3]]],[11,"from","","",1776,[[]]],[11,"borrow","","",1776,[[]]],[11,"borrow_mut","","",1776,[[]]],[11,"try_from","","",1776,[[],["result",4]]],[11,"into","","",1776,[[]]],[11,"try_into","","",1776,[[],["result",4]]],[11,"type_id","","",1776,[[],["typeid",3]]],[11,"from","","",1777,[[]]],[11,"borrow","","",1777,[[]]],[11,"borrow_mut","","",1777,[[]]],[11,"try_from","","",1777,[[],["result",4]]],[11,"into","","",1777,[[]]],[11,"try_into","","",1777,[[],["result",4]]],[11,"type_id","","",1777,[[],["typeid",3]]],[11,"from","","",1778,[[]]],[11,"borrow","","",1778,[[]]],[11,"borrow_mut","","",1778,[[]]],[11,"try_from","","",1778,[[],["result",4]]],[11,"into","","",1778,[[]]],[11,"try_into","","",1778,[[],["result",4]]],[11,"type_id","","",1778,[[],["typeid",3]]],[11,"from","","",1779,[[]]],[11,"borrow","","",1779,[[]]],[11,"borrow_mut","","",1779,[[]]],[11,"try_from","","",1779,[[],["result",4]]],[11,"into","","",1779,[[]]],[11,"try_into","","",1779,[[],["result",4]]],[11,"type_id","","",1779,[[],["typeid",3]]],[11,"from","","",1780,[[]]],[11,"borrow","","",1780,[[]]],[11,"borrow_mut","","",1780,[[]]],[11,"try_from","","",1780,[[],["result",4]]],[11,"into","","",1780,[[]]],[11,"try_into","","",1780,[[],["result",4]]],[11,"type_id","","",1780,[[],["typeid",3]]],[11,"from","","",1773,[[]]],[11,"borrow","","",1773,[[]]],[11,"borrow_mut","","",1773,[[]]],[11,"try_from","","",1773,[[],["result",4]]],[11,"into","","",1773,[[]]],[11,"try_into","","",1773,[[],["result",4]]],[11,"type_id","","",1773,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::intenclr","",1783,[[]]],[11,"borrow","","",1783,[[]]],[11,"borrow_mut","","",1783,[[]]],[11,"try_from","","",1783,[[],["result",4]]],[11,"into","","",1783,[[]]],[11,"try_into","","",1783,[[],["result",4]]],[11,"type_id","","",1783,[[],["typeid",3]]],[11,"from","","",1784,[[]]],[11,"borrow","","",1784,[[]]],[11,"borrow_mut","","",1784,[[]]],[11,"try_from","","",1784,[[],["result",4]]],[11,"into","","",1784,[[]]],[11,"try_into","","",1784,[[],["result",4]]],[11,"type_id","","",1784,[[],["typeid",3]]],[11,"from","","",1785,[[]]],[11,"borrow","","",1785,[[]]],[11,"borrow_mut","","",1785,[[]]],[11,"try_from","","",1785,[[],["result",4]]],[11,"into","","",1785,[[]]],[11,"try_into","","",1785,[[],["result",4]]],[11,"type_id","","",1785,[[],["typeid",3]]],[11,"from","","",1786,[[]]],[11,"borrow","","",1786,[[]]],[11,"borrow_mut","","",1786,[[]]],[11,"try_from","","",1786,[[],["result",4]]],[11,"into","","",1786,[[]]],[11,"try_into","","",1786,[[],["result",4]]],[11,"type_id","","",1786,[[],["typeid",3]]],[11,"from","","",1787,[[]]],[11,"borrow","","",1787,[[]]],[11,"borrow_mut","","",1787,[[]]],[11,"try_from","","",1787,[[],["result",4]]],[11,"into","","",1787,[[]]],[11,"try_into","","",1787,[[],["result",4]]],[11,"type_id","","",1787,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::intenset","",1790,[[]]],[11,"borrow","","",1790,[[]]],[11,"borrow_mut","","",1790,[[]]],[11,"try_from","","",1790,[[],["result",4]]],[11,"into","","",1790,[[]]],[11,"try_into","","",1790,[[],["result",4]]],[11,"type_id","","",1790,[[],["typeid",3]]],[11,"from","","",1791,[[]]],[11,"borrow","","",1791,[[]]],[11,"borrow_mut","","",1791,[[]]],[11,"try_from","","",1791,[[],["result",4]]],[11,"into","","",1791,[[]]],[11,"try_into","","",1791,[[],["result",4]]],[11,"type_id","","",1791,[[],["typeid",3]]],[11,"from","","",1792,[[]]],[11,"borrow","","",1792,[[]]],[11,"borrow_mut","","",1792,[[]]],[11,"try_from","","",1792,[[],["result",4]]],[11,"into","","",1792,[[]]],[11,"try_into","","",1792,[[],["result",4]]],[11,"type_id","","",1792,[[],["typeid",3]]],[11,"from","","",1793,[[]]],[11,"borrow","","",1793,[[]]],[11,"borrow_mut","","",1793,[[]]],[11,"try_from","","",1793,[[],["result",4]]],[11,"into","","",1793,[[]]],[11,"try_into","","",1793,[[],["result",4]]],[11,"type_id","","",1793,[[],["typeid",3]]],[11,"from","","",1794,[[]]],[11,"borrow","","",1794,[[]]],[11,"borrow_mut","","",1794,[[]]],[11,"try_from","","",1794,[[],["result",4]]],[11,"into","","",1794,[[]]],[11,"try_into","","",1794,[[],["result",4]]],[11,"type_id","","",1794,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::intflag","",1797,[[]]],[11,"borrow","","",1797,[[]]],[11,"borrow_mut","","",1797,[[]]],[11,"try_from","","",1797,[[],["result",4]]],[11,"into","","",1797,[[]]],[11,"try_into","","",1797,[[],["result",4]]],[11,"type_id","","",1797,[[],["typeid",3]]],[11,"from","","",1798,[[]]],[11,"borrow","","",1798,[[]]],[11,"borrow_mut","","",1798,[[]]],[11,"try_from","","",1798,[[],["result",4]]],[11,"into","","",1798,[[]]],[11,"try_into","","",1798,[[],["result",4]]],[11,"type_id","","",1798,[[],["typeid",3]]],[11,"from","","",1799,[[]]],[11,"borrow","","",1799,[[]]],[11,"borrow_mut","","",1799,[[]]],[11,"try_from","","",1799,[[],["result",4]]],[11,"into","","",1799,[[]]],[11,"try_into","","",1799,[[],["result",4]]],[11,"type_id","","",1799,[[],["typeid",3]]],[11,"from","","",1800,[[]]],[11,"borrow","","",1800,[[]]],[11,"borrow_mut","","",1800,[[]]],[11,"try_from","","",1800,[[],["result",4]]],[11,"into","","",1800,[[]]],[11,"try_into","","",1800,[[],["result",4]]],[11,"type_id","","",1800,[[],["typeid",3]]],[11,"from","","",1801,[[]]],[11,"borrow","","",1801,[[]]],[11,"borrow_mut","","",1801,[[]]],[11,"try_from","","",1801,[[],["result",4]]],[11,"into","","",1801,[[]]],[11,"try_into","","",1801,[[],["result",4]]],[11,"type_id","","",1801,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::count","",1805,[[]]],[11,"borrow","","",1805,[[]]],[11,"borrow_mut","","",1805,[[]]],[11,"try_from","","",1805,[[],["result",4]]],[11,"into","","",1805,[[]]],[11,"try_into","","",1805,[[],["result",4]]],[11,"type_id","","",1805,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count16::cc","",1808,[[]]],[11,"borrow","","",1808,[[]]],[11,"borrow_mut","","",1808,[[]]],[11,"try_from","","",1808,[[],["result",4]]],[11,"into","","",1808,[[]]],[11,"try_into","","",1808,[[],["result",4]]],[11,"type_id","","",1808,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::ctrla","",1815,[[]]],[11,"borrow","","",1815,[[]]],[11,"borrow_mut","","",1815,[[]]],[11,"try_from","","",1815,[[],["result",4]]],[11,"into","","",1815,[[]]],[11,"try_into","","",1815,[[],["result",4]]],[11,"type_id","","",1815,[[],["typeid",3]]],[11,"from","","",1816,[[]]],[11,"borrow","","",1816,[[]]],[11,"borrow_mut","","",1816,[[]]],[11,"try_from","","",1816,[[],["result",4]]],[11,"into","","",1816,[[]]],[11,"try_into","","",1816,[[],["result",4]]],[11,"type_id","","",1816,[[],["typeid",3]]],[11,"from","","",1818,[[]]],[11,"borrow","","",1818,[[]]],[11,"borrow_mut","","",1818,[[]]],[11,"try_from","","",1818,[[],["result",4]]],[11,"into","","",1818,[[]]],[11,"try_into","","",1818,[[],["result",4]]],[11,"type_id","","",1818,[[],["typeid",3]]],[11,"from","","",1820,[[]]],[11,"borrow","","",1820,[[]]],[11,"borrow_mut","","",1820,[[]]],[11,"try_from","","",1820,[[],["result",4]]],[11,"into","","",1820,[[]]],[11,"try_into","","",1820,[[],["result",4]]],[11,"type_id","","",1820,[[],["typeid",3]]],[11,"from","","",1822,[[]]],[11,"borrow","","",1822,[[]]],[11,"borrow_mut","","",1822,[[]]],[11,"try_from","","",1822,[[],["result",4]]],[11,"into","","",1822,[[]]],[11,"try_into","","",1822,[[],["result",4]]],[11,"type_id","","",1822,[[],["typeid",3]]],[11,"from","","",1823,[[]]],[11,"borrow","","",1823,[[]]],[11,"borrow_mut","","",1823,[[]]],[11,"try_from","","",1823,[[],["result",4]]],[11,"into","","",1823,[[]]],[11,"try_into","","",1823,[[],["result",4]]],[11,"type_id","","",1823,[[],["typeid",3]]],[11,"from","","",1825,[[]]],[11,"borrow","","",1825,[[]]],[11,"borrow_mut","","",1825,[[]]],[11,"try_from","","",1825,[[],["result",4]]],[11,"into","","",1825,[[]]],[11,"try_into","","",1825,[[],["result",4]]],[11,"type_id","","",1825,[[],["typeid",3]]],[11,"from","","",1811,[[]]],[11,"borrow","","",1811,[[]]],[11,"borrow_mut","","",1811,[[]]],[11,"try_from","","",1811,[[],["result",4]]],[11,"into","","",1811,[[]]],[11,"try_into","","",1811,[[],["result",4]]],[11,"type_id","","",1811,[[],["typeid",3]]],[11,"from","","",1812,[[]]],[11,"borrow","","",1812,[[]]],[11,"borrow_mut","","",1812,[[]]],[11,"try_from","","",1812,[[],["result",4]]],[11,"into","","",1812,[[]]],[11,"try_into","","",1812,[[],["result",4]]],[11,"type_id","","",1812,[[],["typeid",3]]],[11,"from","","",1813,[[]]],[11,"borrow","","",1813,[[]]],[11,"borrow_mut","","",1813,[[]]],[11,"try_from","","",1813,[[],["result",4]]],[11,"into","","",1813,[[]]],[11,"try_into","","",1813,[[],["result",4]]],[11,"type_id","","",1813,[[],["typeid",3]]],[11,"from","","",1814,[[]]],[11,"borrow","","",1814,[[]]],[11,"borrow_mut","","",1814,[[]]],[11,"try_from","","",1814,[[],["result",4]]],[11,"into","","",1814,[[]]],[11,"try_into","","",1814,[[],["result",4]]],[11,"type_id","","",1814,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::readreq","",1828,[[]]],[11,"borrow","","",1828,[[]]],[11,"borrow_mut","","",1828,[[]]],[11,"try_from","","",1828,[[],["result",4]]],[11,"into","","",1828,[[]]],[11,"try_into","","",1828,[[],["result",4]]],[11,"type_id","","",1828,[[],["typeid",3]]],[11,"from","","",1829,[[]]],[11,"borrow","","",1829,[[]]],[11,"borrow_mut","","",1829,[[]]],[11,"try_from","","",1829,[[],["result",4]]],[11,"into","","",1829,[[]]],[11,"try_into","","",1829,[[],["result",4]]],[11,"type_id","","",1829,[[],["typeid",3]]],[11,"from","","",1830,[[]]],[11,"borrow","","",1830,[[]]],[11,"borrow_mut","","",1830,[[]]],[11,"try_from","","",1830,[[],["result",4]]],[11,"into","","",1830,[[]]],[11,"try_into","","",1830,[[],["result",4]]],[11,"type_id","","",1830,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::ctrlbclr","",1834,[[]]],[11,"borrow","","",1834,[[]]],[11,"borrow_mut","","",1834,[[]]],[11,"try_from","","",1834,[[],["result",4]]],[11,"into","","",1834,[[]]],[11,"try_into","","",1834,[[],["result",4]]],[11,"type_id","","",1834,[[],["typeid",3]]],[11,"from","","",1835,[[]]],[11,"borrow","","",1835,[[]]],[11,"borrow_mut","","",1835,[[]]],[11,"try_from","","",1835,[[],["result",4]]],[11,"into","","",1835,[[]]],[11,"try_into","","",1835,[[],["result",4]]],[11,"type_id","","",1835,[[],["typeid",3]]],[11,"from","","",1837,[[]]],[11,"borrow","","",1837,[[]]],[11,"borrow_mut","","",1837,[[]]],[11,"try_from","","",1837,[[],["result",4]]],[11,"into","","",1837,[[]]],[11,"try_into","","",1837,[[],["result",4]]],[11,"type_id","","",1837,[[],["typeid",3]]],[11,"from","","",1833,[[]]],[11,"borrow","","",1833,[[]]],[11,"borrow_mut","","",1833,[[]]],[11,"try_from","","",1833,[[],["result",4]]],[11,"into","","",1833,[[]]],[11,"try_into","","",1833,[[],["result",4]]],[11,"type_id","","",1833,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::ctrlbset","",1841,[[]]],[11,"borrow","","",1841,[[]]],[11,"borrow_mut","","",1841,[[]]],[11,"try_from","","",1841,[[],["result",4]]],[11,"into","","",1841,[[]]],[11,"try_into","","",1841,[[],["result",4]]],[11,"type_id","","",1841,[[],["typeid",3]]],[11,"from","","",1842,[[]]],[11,"borrow","","",1842,[[]]],[11,"borrow_mut","","",1842,[[]]],[11,"try_from","","",1842,[[],["result",4]]],[11,"into","","",1842,[[]]],[11,"try_into","","",1842,[[],["result",4]]],[11,"type_id","","",1842,[[],["typeid",3]]],[11,"from","","",1844,[[]]],[11,"borrow","","",1844,[[]]],[11,"borrow_mut","","",1844,[[]]],[11,"try_from","","",1844,[[],["result",4]]],[11,"into","","",1844,[[]]],[11,"try_into","","",1844,[[],["result",4]]],[11,"type_id","","",1844,[[],["typeid",3]]],[11,"from","","",1840,[[]]],[11,"borrow","","",1840,[[]]],[11,"borrow_mut","","",1840,[[]]],[11,"try_from","","",1840,[[],["result",4]]],[11,"into","","",1840,[[]]],[11,"try_into","","",1840,[[],["result",4]]],[11,"type_id","","",1840,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::ctrlc","",1847,[[]]],[11,"borrow","","",1847,[[]]],[11,"borrow_mut","","",1847,[[]]],[11,"try_from","","",1847,[[],["result",4]]],[11,"into","","",1847,[[]]],[11,"try_into","","",1847,[[],["result",4]]],[11,"type_id","","",1847,[[],["typeid",3]]],[11,"from","","",1848,[[]]],[11,"borrow","","",1848,[[]]],[11,"borrow_mut","","",1848,[[]]],[11,"try_from","","",1848,[[],["result",4]]],[11,"into","","",1848,[[]]],[11,"try_into","","",1848,[[],["result",4]]],[11,"type_id","","",1848,[[],["typeid",3]]],[11,"from","","",1849,[[]]],[11,"borrow","","",1849,[[]]],[11,"borrow_mut","","",1849,[[]]],[11,"try_from","","",1849,[[],["result",4]]],[11,"into","","",1849,[[]]],[11,"try_into","","",1849,[[],["result",4]]],[11,"type_id","","",1849,[[],["typeid",3]]],[11,"from","","",1850,[[]]],[11,"borrow","","",1850,[[]]],[11,"borrow_mut","","",1850,[[]]],[11,"try_from","","",1850,[[],["result",4]]],[11,"into","","",1850,[[]]],[11,"try_into","","",1850,[[],["result",4]]],[11,"type_id","","",1850,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::dbgctrl","",1853,[[]]],[11,"borrow","","",1853,[[]]],[11,"borrow_mut","","",1853,[[]]],[11,"try_from","","",1853,[[],["result",4]]],[11,"into","","",1853,[[]]],[11,"try_into","","",1853,[[],["result",4]]],[11,"type_id","","",1853,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::evctrl","",1858,[[]]],[11,"borrow","","",1858,[[]]],[11,"borrow_mut","","",1858,[[]]],[11,"try_from","","",1858,[[],["result",4]]],[11,"into","","",1858,[[]]],[11,"try_into","","",1858,[[],["result",4]]],[11,"type_id","","",1858,[[],["typeid",3]]],[11,"from","","",1859,[[]]],[11,"borrow","","",1859,[[]]],[11,"borrow_mut","","",1859,[[]]],[11,"try_from","","",1859,[[],["result",4]]],[11,"into","","",1859,[[]]],[11,"try_into","","",1859,[[],["result",4]]],[11,"type_id","","",1859,[[],["typeid",3]]],[11,"from","","",1860,[[]]],[11,"borrow","","",1860,[[]]],[11,"borrow_mut","","",1860,[[]]],[11,"try_from","","",1860,[[],["result",4]]],[11,"into","","",1860,[[]]],[11,"try_into","","",1860,[[],["result",4]]],[11,"type_id","","",1860,[[],["typeid",3]]],[11,"from","","",1861,[[]]],[11,"borrow","","",1861,[[]]],[11,"borrow_mut","","",1861,[[]]],[11,"try_from","","",1861,[[],["result",4]]],[11,"into","","",1861,[[]]],[11,"try_into","","",1861,[[],["result",4]]],[11,"type_id","","",1861,[[],["typeid",3]]],[11,"from","","",1862,[[]]],[11,"borrow","","",1862,[[]]],[11,"borrow_mut","","",1862,[[]]],[11,"try_from","","",1862,[[],["result",4]]],[11,"into","","",1862,[[]]],[11,"try_into","","",1862,[[],["result",4]]],[11,"type_id","","",1862,[[],["typeid",3]]],[11,"from","","",1863,[[]]],[11,"borrow","","",1863,[[]]],[11,"borrow_mut","","",1863,[[]]],[11,"try_from","","",1863,[[],["result",4]]],[11,"into","","",1863,[[]]],[11,"try_into","","",1863,[[],["result",4]]],[11,"type_id","","",1863,[[],["typeid",3]]],[11,"from","","",1856,[[]]],[11,"borrow","","",1856,[[]]],[11,"borrow_mut","","",1856,[[]]],[11,"try_from","","",1856,[[],["result",4]]],[11,"into","","",1856,[[]]],[11,"try_into","","",1856,[[],["result",4]]],[11,"type_id","","",1856,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::intenclr","",1866,[[]]],[11,"borrow","","",1866,[[]]],[11,"borrow_mut","","",1866,[[]]],[11,"try_from","","",1866,[[],["result",4]]],[11,"into","","",1866,[[]]],[11,"try_into","","",1866,[[],["result",4]]],[11,"type_id","","",1866,[[],["typeid",3]]],[11,"from","","",1867,[[]]],[11,"borrow","","",1867,[[]]],[11,"borrow_mut","","",1867,[[]]],[11,"try_from","","",1867,[[],["result",4]]],[11,"into","","",1867,[[]]],[11,"try_into","","",1867,[[],["result",4]]],[11,"type_id","","",1867,[[],["typeid",3]]],[11,"from","","",1868,[[]]],[11,"borrow","","",1868,[[]]],[11,"borrow_mut","","",1868,[[]]],[11,"try_from","","",1868,[[],["result",4]]],[11,"into","","",1868,[[]]],[11,"try_into","","",1868,[[],["result",4]]],[11,"type_id","","",1868,[[],["typeid",3]]],[11,"from","","",1869,[[]]],[11,"borrow","","",1869,[[]]],[11,"borrow_mut","","",1869,[[]]],[11,"try_from","","",1869,[[],["result",4]]],[11,"into","","",1869,[[]]],[11,"try_into","","",1869,[[],["result",4]]],[11,"type_id","","",1869,[[],["typeid",3]]],[11,"from","","",1870,[[]]],[11,"borrow","","",1870,[[]]],[11,"borrow_mut","","",1870,[[]]],[11,"try_from","","",1870,[[],["result",4]]],[11,"into","","",1870,[[]]],[11,"try_into","","",1870,[[],["result",4]]],[11,"type_id","","",1870,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::intenset","",1873,[[]]],[11,"borrow","","",1873,[[]]],[11,"borrow_mut","","",1873,[[]]],[11,"try_from","","",1873,[[],["result",4]]],[11,"into","","",1873,[[]]],[11,"try_into","","",1873,[[],["result",4]]],[11,"type_id","","",1873,[[],["typeid",3]]],[11,"from","","",1874,[[]]],[11,"borrow","","",1874,[[]]],[11,"borrow_mut","","",1874,[[]]],[11,"try_from","","",1874,[[],["result",4]]],[11,"into","","",1874,[[]]],[11,"try_into","","",1874,[[],["result",4]]],[11,"type_id","","",1874,[[],["typeid",3]]],[11,"from","","",1875,[[]]],[11,"borrow","","",1875,[[]]],[11,"borrow_mut","","",1875,[[]]],[11,"try_from","","",1875,[[],["result",4]]],[11,"into","","",1875,[[]]],[11,"try_into","","",1875,[[],["result",4]]],[11,"type_id","","",1875,[[],["typeid",3]]],[11,"from","","",1876,[[]]],[11,"borrow","","",1876,[[]]],[11,"borrow_mut","","",1876,[[]]],[11,"try_from","","",1876,[[],["result",4]]],[11,"into","","",1876,[[]]],[11,"try_into","","",1876,[[],["result",4]]],[11,"type_id","","",1876,[[],["typeid",3]]],[11,"from","","",1877,[[]]],[11,"borrow","","",1877,[[]]],[11,"borrow_mut","","",1877,[[]]],[11,"try_from","","",1877,[[],["result",4]]],[11,"into","","",1877,[[]]],[11,"try_into","","",1877,[[],["result",4]]],[11,"type_id","","",1877,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::intflag","",1880,[[]]],[11,"borrow","","",1880,[[]]],[11,"borrow_mut","","",1880,[[]]],[11,"try_from","","",1880,[[],["result",4]]],[11,"into","","",1880,[[]]],[11,"try_into","","",1880,[[],["result",4]]],[11,"type_id","","",1880,[[],["typeid",3]]],[11,"from","","",1881,[[]]],[11,"borrow","","",1881,[[]]],[11,"borrow_mut","","",1881,[[]]],[11,"try_from","","",1881,[[],["result",4]]],[11,"into","","",1881,[[]]],[11,"try_into","","",1881,[[],["result",4]]],[11,"type_id","","",1881,[[],["typeid",3]]],[11,"from","","",1882,[[]]],[11,"borrow","","",1882,[[]]],[11,"borrow_mut","","",1882,[[]]],[11,"try_from","","",1882,[[],["result",4]]],[11,"into","","",1882,[[]]],[11,"try_into","","",1882,[[],["result",4]]],[11,"type_id","","",1882,[[],["typeid",3]]],[11,"from","","",1883,[[]]],[11,"borrow","","",1883,[[]]],[11,"borrow_mut","","",1883,[[]]],[11,"try_from","","",1883,[[],["result",4]]],[11,"into","","",1883,[[]]],[11,"try_into","","",1883,[[],["result",4]]],[11,"type_id","","",1883,[[],["typeid",3]]],[11,"from","","",1884,[[]]],[11,"borrow","","",1884,[[]]],[11,"borrow_mut","","",1884,[[]]],[11,"try_from","","",1884,[[],["result",4]]],[11,"into","","",1884,[[]]],[11,"try_into","","",1884,[[],["result",4]]],[11,"type_id","","",1884,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::count","",1888,[[]]],[11,"borrow","","",1888,[[]]],[11,"borrow_mut","","",1888,[[]]],[11,"try_from","","",1888,[[],["result",4]]],[11,"into","","",1888,[[]]],[11,"try_into","","",1888,[[],["result",4]]],[11,"type_id","","",1888,[[],["typeid",3]]],[11,"from","atsamd21g::tc3::count32::cc","",1891,[[]]],[11,"borrow","","",1891,[[]]],[11,"borrow_mut","","",1891,[[]]],[11,"try_from","","",1891,[[],["result",4]]],[11,"into","","",1891,[[]]],[11,"try_into","","",1891,[[],["result",4]]],[11,"type_id","","",1891,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0","",1895,[[]]],[11,"borrow","","",1895,[[]]],[11,"borrow_mut","","",1895,[[]]],[11,"try_from","","",1895,[[],["result",4]]],[11,"into","","",1895,[[]]],[11,"try_into","","",1895,[[],["result",4]]],[11,"type_id","","",1895,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ctrla","",1899,[[]]],[11,"borrow","","",1899,[[]]],[11,"borrow_mut","","",1899,[[]]],[11,"try_from","","",1899,[[],["result",4]]],[11,"into","","",1899,[[]]],[11,"try_into","","",1899,[[],["result",4]]],[11,"type_id","","",1899,[[],["typeid",3]]],[11,"from","","",1900,[[]]],[11,"borrow","","",1900,[[]]],[11,"borrow_mut","","",1900,[[]]],[11,"try_from","","",1900,[[],["result",4]]],[11,"into","","",1900,[[]]],[11,"try_into","","",1900,[[],["result",4]]],[11,"type_id","","",1900,[[],["typeid",3]]],[11,"from","","",1902,[[]]],[11,"borrow","","",1902,[[]]],[11,"borrow_mut","","",1902,[[]]],[11,"try_from","","",1902,[[],["result",4]]],[11,"into","","",1902,[[]]],[11,"try_into","","",1902,[[],["result",4]]],[11,"type_id","","",1902,[[],["typeid",3]]],[11,"from","","",1904,[[]]],[11,"borrow","","",1904,[[]]],[11,"borrow_mut","","",1904,[[]]],[11,"try_from","","",1904,[[],["result",4]]],[11,"into","","",1904,[[]]],[11,"try_into","","",1904,[[],["result",4]]],[11,"type_id","","",1904,[[],["typeid",3]]],[11,"from","","",1905,[[]]],[11,"borrow","","",1905,[[]]],[11,"borrow_mut","","",1905,[[]]],[11,"try_from","","",1905,[[],["result",4]]],[11,"into","","",1905,[[]]],[11,"try_into","","",1905,[[],["result",4]]],[11,"type_id","","",1905,[[],["typeid",3]]],[11,"from","","",1907,[[]]],[11,"borrow","","",1907,[[]]],[11,"borrow_mut","","",1907,[[]]],[11,"try_from","","",1907,[[],["result",4]]],[11,"into","","",1907,[[]]],[11,"try_into","","",1907,[[],["result",4]]],[11,"type_id","","",1907,[[],["typeid",3]]],[11,"from","","",1908,[[]]],[11,"borrow","","",1908,[[]]],[11,"borrow_mut","","",1908,[[]]],[11,"try_from","","",1908,[[],["result",4]]],[11,"into","","",1908,[[]]],[11,"try_into","","",1908,[[],["result",4]]],[11,"type_id","","",1908,[[],["typeid",3]]],[11,"from","","",1909,[[]]],[11,"borrow","","",1909,[[]]],[11,"borrow_mut","","",1909,[[]]],[11,"try_from","","",1909,[[],["result",4]]],[11,"into","","",1909,[[]]],[11,"try_into","","",1909,[[],["result",4]]],[11,"type_id","","",1909,[[],["typeid",3]]],[11,"from","","",1910,[[]]],[11,"borrow","","",1910,[[]]],[11,"borrow_mut","","",1910,[[]]],[11,"try_from","","",1910,[[],["result",4]]],[11,"into","","",1910,[[]]],[11,"try_into","","",1910,[[],["result",4]]],[11,"type_id","","",1910,[[],["typeid",3]]],[11,"from","","",1911,[[]]],[11,"borrow","","",1911,[[]]],[11,"borrow_mut","","",1911,[[]]],[11,"try_from","","",1911,[[],["result",4]]],[11,"into","","",1911,[[]]],[11,"try_into","","",1911,[[],["result",4]]],[11,"type_id","","",1911,[[],["typeid",3]]],[11,"from","","",1912,[[]]],[11,"borrow","","",1912,[[]]],[11,"borrow_mut","","",1912,[[]]],[11,"try_from","","",1912,[[],["result",4]]],[11,"into","","",1912,[[]]],[11,"try_into","","",1912,[[],["result",4]]],[11,"type_id","","",1912,[[],["typeid",3]]],[11,"from","","",1896,[[]]],[11,"borrow","","",1896,[[]]],[11,"borrow_mut","","",1896,[[]]],[11,"try_from","","",1896,[[],["result",4]]],[11,"into","","",1896,[[]]],[11,"try_into","","",1896,[[],["result",4]]],[11,"type_id","","",1896,[[],["typeid",3]]],[11,"from","","",1897,[[]]],[11,"borrow","","",1897,[[]]],[11,"borrow_mut","","",1897,[[]]],[11,"try_from","","",1897,[[],["result",4]]],[11,"into","","",1897,[[]]],[11,"try_into","","",1897,[[],["result",4]]],[11,"type_id","","",1897,[[],["typeid",3]]],[11,"from","","",1898,[[]]],[11,"borrow","","",1898,[[]]],[11,"borrow_mut","","",1898,[[]]],[11,"try_from","","",1898,[[],["result",4]]],[11,"into","","",1898,[[]]],[11,"try_into","","",1898,[[],["result",4]]],[11,"type_id","","",1898,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ctrlbclr","",1917,[[]]],[11,"borrow","","",1917,[[]]],[11,"borrow_mut","","",1917,[[]]],[11,"try_from","","",1917,[[],["result",4]]],[11,"into","","",1917,[[]]],[11,"try_into","","",1917,[[],["result",4]]],[11,"type_id","","",1917,[[],["typeid",3]]],[11,"from","","",1918,[[]]],[11,"borrow","","",1918,[[]]],[11,"borrow_mut","","",1918,[[]]],[11,"try_from","","",1918,[[],["result",4]]],[11,"into","","",1918,[[]]],[11,"try_into","","",1918,[[],["result",4]]],[11,"type_id","","",1918,[[],["typeid",3]]],[11,"from","","",1919,[[]]],[11,"borrow","","",1919,[[]]],[11,"borrow_mut","","",1919,[[]]],[11,"try_from","","",1919,[[],["result",4]]],[11,"into","","",1919,[[]]],[11,"try_into","","",1919,[[],["result",4]]],[11,"type_id","","",1919,[[],["typeid",3]]],[11,"from","","",1921,[[]]],[11,"borrow","","",1921,[[]]],[11,"borrow_mut","","",1921,[[]]],[11,"try_from","","",1921,[[],["result",4]]],[11,"into","","",1921,[[]]],[11,"try_into","","",1921,[[],["result",4]]],[11,"type_id","","",1921,[[],["typeid",3]]],[11,"from","","",1923,[[]]],[11,"borrow","","",1923,[[]]],[11,"borrow_mut","","",1923,[[]]],[11,"try_from","","",1923,[[],["result",4]]],[11,"into","","",1923,[[]]],[11,"try_into","","",1923,[[],["result",4]]],[11,"type_id","","",1923,[[],["typeid",3]]],[11,"from","","",1915,[[]]],[11,"borrow","","",1915,[[]]],[11,"borrow_mut","","",1915,[[]]],[11,"try_from","","",1915,[[],["result",4]]],[11,"into","","",1915,[[]]],[11,"try_into","","",1915,[[],["result",4]]],[11,"type_id","","",1915,[[],["typeid",3]]],[11,"from","","",1916,[[]]],[11,"borrow","","",1916,[[]]],[11,"borrow_mut","","",1916,[[]]],[11,"try_from","","",1916,[[],["result",4]]],[11,"into","","",1916,[[]]],[11,"try_into","","",1916,[[],["result",4]]],[11,"type_id","","",1916,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ctrlbset","",1928,[[]]],[11,"borrow","","",1928,[[]]],[11,"borrow_mut","","",1928,[[]]],[11,"try_from","","",1928,[[],["result",4]]],[11,"into","","",1928,[[]]],[11,"try_into","","",1928,[[],["result",4]]],[11,"type_id","","",1928,[[],["typeid",3]]],[11,"from","","",1929,[[]]],[11,"borrow","","",1929,[[]]],[11,"borrow_mut","","",1929,[[]]],[11,"try_from","","",1929,[[],["result",4]]],[11,"into","","",1929,[[]]],[11,"try_into","","",1929,[[],["result",4]]],[11,"type_id","","",1929,[[],["typeid",3]]],[11,"from","","",1930,[[]]],[11,"borrow","","",1930,[[]]],[11,"borrow_mut","","",1930,[[]]],[11,"try_from","","",1930,[[],["result",4]]],[11,"into","","",1930,[[]]],[11,"try_into","","",1930,[[],["result",4]]],[11,"type_id","","",1930,[[],["typeid",3]]],[11,"from","","",1932,[[]]],[11,"borrow","","",1932,[[]]],[11,"borrow_mut","","",1932,[[]]],[11,"try_from","","",1932,[[],["result",4]]],[11,"into","","",1932,[[]]],[11,"try_into","","",1932,[[],["result",4]]],[11,"type_id","","",1932,[[],["typeid",3]]],[11,"from","","",1934,[[]]],[11,"borrow","","",1934,[[]]],[11,"borrow_mut","","",1934,[[]]],[11,"try_from","","",1934,[[],["result",4]]],[11,"into","","",1934,[[]]],[11,"try_into","","",1934,[[],["result",4]]],[11,"type_id","","",1934,[[],["typeid",3]]],[11,"from","","",1926,[[]]],[11,"borrow","","",1926,[[]]],[11,"borrow_mut","","",1926,[[]]],[11,"try_from","","",1926,[[],["result",4]]],[11,"into","","",1926,[[]]],[11,"try_into","","",1926,[[],["result",4]]],[11,"type_id","","",1926,[[],["typeid",3]]],[11,"from","","",1927,[[]]],[11,"borrow","","",1927,[[]]],[11,"borrow_mut","","",1927,[[]]],[11,"try_from","","",1927,[[],["result",4]]],[11,"into","","",1927,[[]]],[11,"try_into","","",1927,[[],["result",4]]],[11,"type_id","","",1927,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::fctrla","",1944,[[]]],[11,"borrow","","",1944,[[]]],[11,"borrow_mut","","",1944,[[]]],[11,"try_from","","",1944,[[],["result",4]]],[11,"into","","",1944,[[]]],[11,"try_into","","",1944,[[],["result",4]]],[11,"type_id","","",1944,[[],["typeid",3]]],[11,"from","","",1945,[[]]],[11,"borrow","","",1945,[[]]],[11,"borrow_mut","","",1945,[[]]],[11,"try_from","","",1945,[[],["result",4]]],[11,"into","","",1945,[[]]],[11,"try_into","","",1945,[[],["result",4]]],[11,"type_id","","",1945,[[],["typeid",3]]],[11,"from","","",1946,[[]]],[11,"borrow","","",1946,[[]]],[11,"borrow_mut","","",1946,[[]]],[11,"try_from","","",1946,[[],["result",4]]],[11,"into","","",1946,[[]]],[11,"try_into","","",1946,[[],["result",4]]],[11,"type_id","","",1946,[[],["typeid",3]]],[11,"from","","",1948,[[]]],[11,"borrow","","",1948,[[]]],[11,"borrow_mut","","",1948,[[]]],[11,"try_from","","",1948,[[],["result",4]]],[11,"into","","",1948,[[]]],[11,"try_into","","",1948,[[],["result",4]]],[11,"type_id","","",1948,[[],["typeid",3]]],[11,"from","","",1949,[[]]],[11,"borrow","","",1949,[[]]],[11,"borrow_mut","","",1949,[[]]],[11,"try_from","","",1949,[[],["result",4]]],[11,"into","","",1949,[[]]],[11,"try_into","","",1949,[[],["result",4]]],[11,"type_id","","",1949,[[],["typeid",3]]],[11,"from","","",1951,[[]]],[11,"borrow","","",1951,[[]]],[11,"borrow_mut","","",1951,[[]]],[11,"try_from","","",1951,[[],["result",4]]],[11,"into","","",1951,[[]]],[11,"try_into","","",1951,[[],["result",4]]],[11,"type_id","","",1951,[[],["typeid",3]]],[11,"from","","",1953,[[]]],[11,"borrow","","",1953,[[]]],[11,"borrow_mut","","",1953,[[]]],[11,"try_from","","",1953,[[],["result",4]]],[11,"into","","",1953,[[]]],[11,"try_into","","",1953,[[],["result",4]]],[11,"type_id","","",1953,[[],["typeid",3]]],[11,"from","","",1955,[[]]],[11,"borrow","","",1955,[[]]],[11,"borrow_mut","","",1955,[[]]],[11,"try_from","","",1955,[[],["result",4]]],[11,"into","","",1955,[[]]],[11,"try_into","","",1955,[[],["result",4]]],[11,"type_id","","",1955,[[],["typeid",3]]],[11,"from","","",1956,[[]]],[11,"borrow","","",1956,[[]]],[11,"borrow_mut","","",1956,[[]]],[11,"try_from","","",1956,[[],["result",4]]],[11,"into","","",1956,[[]]],[11,"try_into","","",1956,[[],["result",4]]],[11,"type_id","","",1956,[[],["typeid",3]]],[11,"from","","",1957,[[]]],[11,"borrow","","",1957,[[]]],[11,"borrow_mut","","",1957,[[]]],[11,"try_from","","",1957,[[],["result",4]]],[11,"into","","",1957,[[]]],[11,"try_into","","",1957,[[],["result",4]]],[11,"type_id","","",1957,[[],["typeid",3]]],[11,"from","","",1938,[[]]],[11,"borrow","","",1938,[[]]],[11,"borrow_mut","","",1938,[[]]],[11,"try_from","","",1938,[[],["result",4]]],[11,"into","","",1938,[[]]],[11,"try_into","","",1938,[[],["result",4]]],[11,"type_id","","",1938,[[],["typeid",3]]],[11,"from","","",1939,[[]]],[11,"borrow","","",1939,[[]]],[11,"borrow_mut","","",1939,[[]]],[11,"try_from","","",1939,[[],["result",4]]],[11,"into","","",1939,[[]]],[11,"try_into","","",1939,[[],["result",4]]],[11,"type_id","","",1939,[[],["typeid",3]]],[11,"from","","",1940,[[]]],[11,"borrow","","",1940,[[]]],[11,"borrow_mut","","",1940,[[]]],[11,"try_from","","",1940,[[],["result",4]]],[11,"into","","",1940,[[]]],[11,"try_into","","",1940,[[],["result",4]]],[11,"type_id","","",1940,[[],["typeid",3]]],[11,"from","","",1941,[[]]],[11,"borrow","","",1941,[[]]],[11,"borrow_mut","","",1941,[[]]],[11,"try_from","","",1941,[[],["result",4]]],[11,"into","","",1941,[[]]],[11,"try_into","","",1941,[[],["result",4]]],[11,"type_id","","",1941,[[],["typeid",3]]],[11,"from","","",1942,[[]]],[11,"borrow","","",1942,[[]]],[11,"borrow_mut","","",1942,[[]]],[11,"try_from","","",1942,[[],["result",4]]],[11,"into","","",1942,[[]]],[11,"try_into","","",1942,[[],["result",4]]],[11,"type_id","","",1942,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::fctrlb","",1966,[[]]],[11,"borrow","","",1966,[[]]],[11,"borrow_mut","","",1966,[[]]],[11,"try_from","","",1966,[[],["result",4]]],[11,"into","","",1966,[[]]],[11,"try_into","","",1966,[[],["result",4]]],[11,"type_id","","",1966,[[],["typeid",3]]],[11,"from","","",1967,[[]]],[11,"borrow","","",1967,[[]]],[11,"borrow_mut","","",1967,[[]]],[11,"try_from","","",1967,[[],["result",4]]],[11,"into","","",1967,[[]]],[11,"try_into","","",1967,[[],["result",4]]],[11,"type_id","","",1967,[[],["typeid",3]]],[11,"from","","",1968,[[]]],[11,"borrow","","",1968,[[]]],[11,"borrow_mut","","",1968,[[]]],[11,"try_from","","",1968,[[],["result",4]]],[11,"into","","",1968,[[]]],[11,"try_into","","",1968,[[],["result",4]]],[11,"type_id","","",1968,[[],["typeid",3]]],[11,"from","","",1970,[[]]],[11,"borrow","","",1970,[[]]],[11,"borrow_mut","","",1970,[[]]],[11,"try_from","","",1970,[[],["result",4]]],[11,"into","","",1970,[[]]],[11,"try_into","","",1970,[[],["result",4]]],[11,"type_id","","",1970,[[],["typeid",3]]],[11,"from","","",1971,[[]]],[11,"borrow","","",1971,[[]]],[11,"borrow_mut","","",1971,[[]]],[11,"try_from","","",1971,[[],["result",4]]],[11,"into","","",1971,[[]]],[11,"try_into","","",1971,[[],["result",4]]],[11,"type_id","","",1971,[[],["typeid",3]]],[11,"from","","",1973,[[]]],[11,"borrow","","",1973,[[]]],[11,"borrow_mut","","",1973,[[]]],[11,"try_from","","",1973,[[],["result",4]]],[11,"into","","",1973,[[]]],[11,"try_into","","",1973,[[],["result",4]]],[11,"type_id","","",1973,[[],["typeid",3]]],[11,"from","","",1975,[[]]],[11,"borrow","","",1975,[[]]],[11,"borrow_mut","","",1975,[[]]],[11,"try_from","","",1975,[[],["result",4]]],[11,"into","","",1975,[[]]],[11,"try_into","","",1975,[[],["result",4]]],[11,"type_id","","",1975,[[],["typeid",3]]],[11,"from","","",1977,[[]]],[11,"borrow","","",1977,[[]]],[11,"borrow_mut","","",1977,[[]]],[11,"try_from","","",1977,[[],["result",4]]],[11,"into","","",1977,[[]]],[11,"try_into","","",1977,[[],["result",4]]],[11,"type_id","","",1977,[[],["typeid",3]]],[11,"from","","",1978,[[]]],[11,"borrow","","",1978,[[]]],[11,"borrow_mut","","",1978,[[]]],[11,"try_from","","",1978,[[],["result",4]]],[11,"into","","",1978,[[]]],[11,"try_into","","",1978,[[],["result",4]]],[11,"type_id","","",1978,[[],["typeid",3]]],[11,"from","","",1979,[[]]],[11,"borrow","","",1979,[[]]],[11,"borrow_mut","","",1979,[[]]],[11,"try_from","","",1979,[[],["result",4]]],[11,"into","","",1979,[[]]],[11,"try_into","","",1979,[[],["result",4]]],[11,"type_id","","",1979,[[],["typeid",3]]],[11,"from","","",1960,[[]]],[11,"borrow","","",1960,[[]]],[11,"borrow_mut","","",1960,[[]]],[11,"try_from","","",1960,[[],["result",4]]],[11,"into","","",1960,[[]]],[11,"try_into","","",1960,[[],["result",4]]],[11,"type_id","","",1960,[[],["typeid",3]]],[11,"from","","",1961,[[]]],[11,"borrow","","",1961,[[]]],[11,"borrow_mut","","",1961,[[]]],[11,"try_from","","",1961,[[],["result",4]]],[11,"into","","",1961,[[]]],[11,"try_into","","",1961,[[],["result",4]]],[11,"type_id","","",1961,[[],["typeid",3]]],[11,"from","","",1962,[[]]],[11,"borrow","","",1962,[[]]],[11,"borrow_mut","","",1962,[[]]],[11,"try_from","","",1962,[[],["result",4]]],[11,"into","","",1962,[[]]],[11,"try_into","","",1962,[[],["result",4]]],[11,"type_id","","",1962,[[],["typeid",3]]],[11,"from","","",1963,[[]]],[11,"borrow","","",1963,[[]]],[11,"borrow_mut","","",1963,[[]]],[11,"try_from","","",1963,[[],["result",4]]],[11,"into","","",1963,[[]]],[11,"try_into","","",1963,[[],["result",4]]],[11,"type_id","","",1963,[[],["typeid",3]]],[11,"from","","",1964,[[]]],[11,"borrow","","",1964,[[]]],[11,"borrow_mut","","",1964,[[]]],[11,"try_from","","",1964,[[],["result",4]]],[11,"into","","",1964,[[]]],[11,"try_into","","",1964,[[],["result",4]]],[11,"type_id","","",1964,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::wexctrl","",1982,[[]]],[11,"borrow","","",1982,[[]]],[11,"borrow_mut","","",1982,[[]]],[11,"try_from","","",1982,[[],["result",4]]],[11,"into","","",1982,[[]]],[11,"try_into","","",1982,[[],["result",4]]],[11,"type_id","","",1982,[[],["typeid",3]]],[11,"from","","",1983,[[]]],[11,"borrow","","",1983,[[]]],[11,"borrow_mut","","",1983,[[]]],[11,"try_from","","",1983,[[],["result",4]]],[11,"into","","",1983,[[]]],[11,"try_into","","",1983,[[],["result",4]]],[11,"type_id","","",1983,[[],["typeid",3]]],[11,"from","","",1984,[[]]],[11,"borrow","","",1984,[[]]],[11,"borrow_mut","","",1984,[[]]],[11,"try_from","","",1984,[[],["result",4]]],[11,"into","","",1984,[[]]],[11,"try_into","","",1984,[[],["result",4]]],[11,"type_id","","",1984,[[],["typeid",3]]],[11,"from","","",1985,[[]]],[11,"borrow","","",1985,[[]]],[11,"borrow_mut","","",1985,[[]]],[11,"try_from","","",1985,[[],["result",4]]],[11,"into","","",1985,[[]]],[11,"try_into","","",1985,[[],["result",4]]],[11,"type_id","","",1985,[[],["typeid",3]]],[11,"from","","",1986,[[]]],[11,"borrow","","",1986,[[]]],[11,"borrow_mut","","",1986,[[]]],[11,"try_from","","",1986,[[],["result",4]]],[11,"into","","",1986,[[]]],[11,"try_into","","",1986,[[],["result",4]]],[11,"type_id","","",1986,[[],["typeid",3]]],[11,"from","","",1987,[[]]],[11,"borrow","","",1987,[[]]],[11,"borrow_mut","","",1987,[[]]],[11,"try_from","","",1987,[[],["result",4]]],[11,"into","","",1987,[[]]],[11,"try_into","","",1987,[[],["result",4]]],[11,"type_id","","",1987,[[],["typeid",3]]],[11,"from","","",1988,[[]]],[11,"borrow","","",1988,[[]]],[11,"borrow_mut","","",1988,[[]]],[11,"try_from","","",1988,[[],["result",4]]],[11,"into","","",1988,[[]]],[11,"try_into","","",1988,[[],["result",4]]],[11,"type_id","","",1988,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::drvctrl","",1991,[[]]],[11,"borrow","","",1991,[[]]],[11,"borrow_mut","","",1991,[[]]],[11,"try_from","","",1991,[[],["result",4]]],[11,"into","","",1991,[[]]],[11,"try_into","","",1991,[[],["result",4]]],[11,"type_id","","",1991,[[],["typeid",3]]],[11,"from","","",1992,[[]]],[11,"borrow","","",1992,[[]]],[11,"borrow_mut","","",1992,[[]]],[11,"try_from","","",1992,[[],["result",4]]],[11,"into","","",1992,[[]]],[11,"try_into","","",1992,[[],["result",4]]],[11,"type_id","","",1992,[[],["typeid",3]]],[11,"from","","",1993,[[]]],[11,"borrow","","",1993,[[]]],[11,"borrow_mut","","",1993,[[]]],[11,"try_from","","",1993,[[],["result",4]]],[11,"into","","",1993,[[]]],[11,"try_into","","",1993,[[],["result",4]]],[11,"type_id","","",1993,[[],["typeid",3]]],[11,"from","","",1994,[[]]],[11,"borrow","","",1994,[[]]],[11,"borrow_mut","","",1994,[[]]],[11,"try_from","","",1994,[[],["result",4]]],[11,"into","","",1994,[[]]],[11,"try_into","","",1994,[[],["result",4]]],[11,"type_id","","",1994,[[],["typeid",3]]],[11,"from","","",1995,[[]]],[11,"borrow","","",1995,[[]]],[11,"borrow_mut","","",1995,[[]]],[11,"try_from","","",1995,[[],["result",4]]],[11,"into","","",1995,[[]]],[11,"try_into","","",1995,[[],["result",4]]],[11,"type_id","","",1995,[[],["typeid",3]]],[11,"from","","",1996,[[]]],[11,"borrow","","",1996,[[]]],[11,"borrow_mut","","",1996,[[]]],[11,"try_from","","",1996,[[],["result",4]]],[11,"into","","",1996,[[]]],[11,"try_into","","",1996,[[],["result",4]]],[11,"type_id","","",1996,[[],["typeid",3]]],[11,"from","","",1997,[[]]],[11,"borrow","","",1997,[[]]],[11,"borrow_mut","","",1997,[[]]],[11,"try_from","","",1997,[[],["result",4]]],[11,"into","","",1997,[[]]],[11,"try_into","","",1997,[[],["result",4]]],[11,"type_id","","",1997,[[],["typeid",3]]],[11,"from","","",1998,[[]]],[11,"borrow","","",1998,[[]]],[11,"borrow_mut","","",1998,[[]]],[11,"try_from","","",1998,[[],["result",4]]],[11,"into","","",1998,[[]]],[11,"try_into","","",1998,[[],["result",4]]],[11,"type_id","","",1998,[[],["typeid",3]]],[11,"from","","",1999,[[]]],[11,"borrow","","",1999,[[]]],[11,"borrow_mut","","",1999,[[]]],[11,"try_from","","",1999,[[],["result",4]]],[11,"into","","",1999,[[]]],[11,"try_into","","",1999,[[],["result",4]]],[11,"type_id","","",1999,[[],["typeid",3]]],[11,"from","","",2000,[[]]],[11,"borrow","","",2000,[[]]],[11,"borrow_mut","","",2000,[[]]],[11,"try_from","","",2000,[[],["result",4]]],[11,"into","","",2000,[[]]],[11,"try_into","","",2000,[[],["result",4]]],[11,"type_id","","",2000,[[],["typeid",3]]],[11,"from","","",2001,[[]]],[11,"borrow","","",2001,[[]]],[11,"borrow_mut","","",2001,[[]]],[11,"try_from","","",2001,[[],["result",4]]],[11,"into","","",2001,[[]]],[11,"try_into","","",2001,[[],["result",4]]],[11,"type_id","","",2001,[[],["typeid",3]]],[11,"from","","",2002,[[]]],[11,"borrow","","",2002,[[]]],[11,"borrow_mut","","",2002,[[]]],[11,"try_from","","",2002,[[],["result",4]]],[11,"into","","",2002,[[]]],[11,"try_into","","",2002,[[],["result",4]]],[11,"type_id","","",2002,[[],["typeid",3]]],[11,"from","","",2003,[[]]],[11,"borrow","","",2003,[[]]],[11,"borrow_mut","","",2003,[[]]],[11,"try_from","","",2003,[[],["result",4]]],[11,"into","","",2003,[[]]],[11,"try_into","","",2003,[[],["result",4]]],[11,"type_id","","",2003,[[],["typeid",3]]],[11,"from","","",2004,[[]]],[11,"borrow","","",2004,[[]]],[11,"borrow_mut","","",2004,[[]]],[11,"try_from","","",2004,[[],["result",4]]],[11,"into","","",2004,[[]]],[11,"try_into","","",2004,[[],["result",4]]],[11,"type_id","","",2004,[[],["typeid",3]]],[11,"from","","",2005,[[]]],[11,"borrow","","",2005,[[]]],[11,"borrow_mut","","",2005,[[]]],[11,"try_from","","",2005,[[],["result",4]]],[11,"into","","",2005,[[]]],[11,"try_into","","",2005,[[],["result",4]]],[11,"type_id","","",2005,[[],["typeid",3]]],[11,"from","","",2006,[[]]],[11,"borrow","","",2006,[[]]],[11,"borrow_mut","","",2006,[[]]],[11,"try_from","","",2006,[[],["result",4]]],[11,"into","","",2006,[[]]],[11,"try_into","","",2006,[[],["result",4]]],[11,"type_id","","",2006,[[],["typeid",3]]],[11,"from","","",2007,[[]]],[11,"borrow","","",2007,[[]]],[11,"borrow_mut","","",2007,[[]]],[11,"try_from","","",2007,[[],["result",4]]],[11,"into","","",2007,[[]]],[11,"try_into","","",2007,[[],["result",4]]],[11,"type_id","","",2007,[[],["typeid",3]]],[11,"from","","",2008,[[]]],[11,"borrow","","",2008,[[]]],[11,"borrow_mut","","",2008,[[]]],[11,"try_from","","",2008,[[],["result",4]]],[11,"into","","",2008,[[]]],[11,"try_into","","",2008,[[],["result",4]]],[11,"type_id","","",2008,[[],["typeid",3]]],[11,"from","","",2009,[[]]],[11,"borrow","","",2009,[[]]],[11,"borrow_mut","","",2009,[[]]],[11,"try_from","","",2009,[[],["result",4]]],[11,"into","","",2009,[[]]],[11,"try_into","","",2009,[[],["result",4]]],[11,"type_id","","",2009,[[],["typeid",3]]],[11,"from","","",2010,[[]]],[11,"borrow","","",2010,[[]]],[11,"borrow_mut","","",2010,[[]]],[11,"try_from","","",2010,[[],["result",4]]],[11,"into","","",2010,[[]]],[11,"try_into","","",2010,[[],["result",4]]],[11,"type_id","","",2010,[[],["typeid",3]]],[11,"from","","",2011,[[]]],[11,"borrow","","",2011,[[]]],[11,"borrow_mut","","",2011,[[]]],[11,"try_from","","",2011,[[],["result",4]]],[11,"into","","",2011,[[]]],[11,"try_into","","",2011,[[],["result",4]]],[11,"type_id","","",2011,[[],["typeid",3]]],[11,"from","","",2012,[[]]],[11,"borrow","","",2012,[[]]],[11,"borrow_mut","","",2012,[[]]],[11,"try_from","","",2012,[[],["result",4]]],[11,"into","","",2012,[[]]],[11,"try_into","","",2012,[[],["result",4]]],[11,"type_id","","",2012,[[],["typeid",3]]],[11,"from","","",2013,[[]]],[11,"borrow","","",2013,[[]]],[11,"borrow_mut","","",2013,[[]]],[11,"try_from","","",2013,[[],["result",4]]],[11,"into","","",2013,[[]]],[11,"try_into","","",2013,[[],["result",4]]],[11,"type_id","","",2013,[[],["typeid",3]]],[11,"from","","",2014,[[]]],[11,"borrow","","",2014,[[]]],[11,"borrow_mut","","",2014,[[]]],[11,"try_from","","",2014,[[],["result",4]]],[11,"into","","",2014,[[]]],[11,"try_into","","",2014,[[],["result",4]]],[11,"type_id","","",2014,[[],["typeid",3]]],[11,"from","","",2015,[[]]],[11,"borrow","","",2015,[[]]],[11,"borrow_mut","","",2015,[[]]],[11,"try_from","","",2015,[[],["result",4]]],[11,"into","","",2015,[[]]],[11,"try_into","","",2015,[[],["result",4]]],[11,"type_id","","",2015,[[],["typeid",3]]],[11,"from","","",2016,[[]]],[11,"borrow","","",2016,[[]]],[11,"borrow_mut","","",2016,[[]]],[11,"try_from","","",2016,[[],["result",4]]],[11,"into","","",2016,[[]]],[11,"try_into","","",2016,[[],["result",4]]],[11,"type_id","","",2016,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::dbgctrl","",2019,[[]]],[11,"borrow","","",2019,[[]]],[11,"borrow_mut","","",2019,[[]]],[11,"try_from","","",2019,[[],["result",4]]],[11,"into","","",2019,[[]]],[11,"try_into","","",2019,[[],["result",4]]],[11,"type_id","","",2019,[[],["typeid",3]]],[11,"from","","",2020,[[]]],[11,"borrow","","",2020,[[]]],[11,"borrow_mut","","",2020,[[]]],[11,"try_from","","",2020,[[],["result",4]]],[11,"into","","",2020,[[]]],[11,"try_into","","",2020,[[],["result",4]]],[11,"type_id","","",2020,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::evctrl","",2027,[[]]],[11,"borrow","","",2027,[[]]],[11,"borrow_mut","","",2027,[[]]],[11,"try_from","","",2027,[[],["result",4]]],[11,"into","","",2027,[[]]],[11,"try_into","","",2027,[[],["result",4]]],[11,"type_id","","",2027,[[],["typeid",3]]],[11,"from","","",2029,[[]]],[11,"borrow","","",2029,[[]]],[11,"borrow_mut","","",2029,[[]]],[11,"try_from","","",2029,[[],["result",4]]],[11,"into","","",2029,[[]]],[11,"try_into","","",2029,[[],["result",4]]],[11,"type_id","","",2029,[[],["typeid",3]]],[11,"from","","",2031,[[]]],[11,"borrow","","",2031,[[]]],[11,"borrow_mut","","",2031,[[]]],[11,"try_from","","",2031,[[],["result",4]]],[11,"into","","",2031,[[]]],[11,"try_into","","",2031,[[],["result",4]]],[11,"type_id","","",2031,[[],["typeid",3]]],[11,"from","","",2032,[[]]],[11,"borrow","","",2032,[[]]],[11,"borrow_mut","","",2032,[[]]],[11,"try_from","","",2032,[[],["result",4]]],[11,"into","","",2032,[[]]],[11,"try_into","","",2032,[[],["result",4]]],[11,"type_id","","",2032,[[],["typeid",3]]],[11,"from","","",2033,[[]]],[11,"borrow","","",2033,[[]]],[11,"borrow_mut","","",2033,[[]]],[11,"try_from","","",2033,[[],["result",4]]],[11,"into","","",2033,[[]]],[11,"try_into","","",2033,[[],["result",4]]],[11,"type_id","","",2033,[[],["typeid",3]]],[11,"from","","",2034,[[]]],[11,"borrow","","",2034,[[]]],[11,"borrow_mut","","",2034,[[]]],[11,"try_from","","",2034,[[],["result",4]]],[11,"into","","",2034,[[]]],[11,"try_into","","",2034,[[],["result",4]]],[11,"type_id","","",2034,[[],["typeid",3]]],[11,"from","","",2035,[[]]],[11,"borrow","","",2035,[[]]],[11,"borrow_mut","","",2035,[[]]],[11,"try_from","","",2035,[[],["result",4]]],[11,"into","","",2035,[[]]],[11,"try_into","","",2035,[[],["result",4]]],[11,"type_id","","",2035,[[],["typeid",3]]],[11,"from","","",2036,[[]]],[11,"borrow","","",2036,[[]]],[11,"borrow_mut","","",2036,[[]]],[11,"try_from","","",2036,[[],["result",4]]],[11,"into","","",2036,[[]]],[11,"try_into","","",2036,[[],["result",4]]],[11,"type_id","","",2036,[[],["typeid",3]]],[11,"from","","",2037,[[]]],[11,"borrow","","",2037,[[]]],[11,"borrow_mut","","",2037,[[]]],[11,"try_from","","",2037,[[],["result",4]]],[11,"into","","",2037,[[]]],[11,"try_into","","",2037,[[],["result",4]]],[11,"type_id","","",2037,[[],["typeid",3]]],[11,"from","","",2038,[[]]],[11,"borrow","","",2038,[[]]],[11,"borrow_mut","","",2038,[[]]],[11,"try_from","","",2038,[[],["result",4]]],[11,"into","","",2038,[[]]],[11,"try_into","","",2038,[[],["result",4]]],[11,"type_id","","",2038,[[],["typeid",3]]],[11,"from","","",2039,[[]]],[11,"borrow","","",2039,[[]]],[11,"borrow_mut","","",2039,[[]]],[11,"try_from","","",2039,[[],["result",4]]],[11,"into","","",2039,[[]]],[11,"try_into","","",2039,[[],["result",4]]],[11,"type_id","","",2039,[[],["typeid",3]]],[11,"from","","",2040,[[]]],[11,"borrow","","",2040,[[]]],[11,"borrow_mut","","",2040,[[]]],[11,"try_from","","",2040,[[],["result",4]]],[11,"into","","",2040,[[]]],[11,"try_into","","",2040,[[],["result",4]]],[11,"type_id","","",2040,[[],["typeid",3]]],[11,"from","","",2041,[[]]],[11,"borrow","","",2041,[[]]],[11,"borrow_mut","","",2041,[[]]],[11,"try_from","","",2041,[[],["result",4]]],[11,"into","","",2041,[[]]],[11,"try_into","","",2041,[[],["result",4]]],[11,"type_id","","",2041,[[],["typeid",3]]],[11,"from","","",2042,[[]]],[11,"borrow","","",2042,[[]]],[11,"borrow_mut","","",2042,[[]]],[11,"try_from","","",2042,[[],["result",4]]],[11,"into","","",2042,[[]]],[11,"try_into","","",2042,[[],["result",4]]],[11,"type_id","","",2042,[[],["typeid",3]]],[11,"from","","",2043,[[]]],[11,"borrow","","",2043,[[]]],[11,"borrow_mut","","",2043,[[]]],[11,"try_from","","",2043,[[],["result",4]]],[11,"into","","",2043,[[]]],[11,"try_into","","",2043,[[],["result",4]]],[11,"type_id","","",2043,[[],["typeid",3]]],[11,"from","","",2044,[[]]],[11,"borrow","","",2044,[[]]],[11,"borrow_mut","","",2044,[[]]],[11,"try_from","","",2044,[[],["result",4]]],[11,"into","","",2044,[[]]],[11,"try_into","","",2044,[[],["result",4]]],[11,"type_id","","",2044,[[],["typeid",3]]],[11,"from","","",2045,[[]]],[11,"borrow","","",2045,[[]]],[11,"borrow_mut","","",2045,[[]]],[11,"try_from","","",2045,[[],["result",4]]],[11,"into","","",2045,[[]]],[11,"try_into","","",2045,[[],["result",4]]],[11,"type_id","","",2045,[[],["typeid",3]]],[11,"from","","",2046,[[]]],[11,"borrow","","",2046,[[]]],[11,"borrow_mut","","",2046,[[]]],[11,"try_from","","",2046,[[],["result",4]]],[11,"into","","",2046,[[]]],[11,"try_into","","",2046,[[],["result",4]]],[11,"type_id","","",2046,[[],["typeid",3]]],[11,"from","","",2023,[[]]],[11,"borrow","","",2023,[[]]],[11,"borrow_mut","","",2023,[[]]],[11,"try_from","","",2023,[[],["result",4]]],[11,"into","","",2023,[[]]],[11,"try_into","","",2023,[[],["result",4]]],[11,"type_id","","",2023,[[],["typeid",3]]],[11,"from","","",2024,[[]]],[11,"borrow","","",2024,[[]]],[11,"borrow_mut","","",2024,[[]]],[11,"try_from","","",2024,[[],["result",4]]],[11,"into","","",2024,[[]]],[11,"try_into","","",2024,[[],["result",4]]],[11,"type_id","","",2024,[[],["typeid",3]]],[11,"from","","",2025,[[]]],[11,"borrow","","",2025,[[]]],[11,"borrow_mut","","",2025,[[]]],[11,"try_from","","",2025,[[],["result",4]]],[11,"into","","",2025,[[]]],[11,"try_into","","",2025,[[],["result",4]]],[11,"type_id","","",2025,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::intenclr","",2049,[[]]],[11,"borrow","","",2049,[[]]],[11,"borrow_mut","","",2049,[[]]],[11,"try_from","","",2049,[[],["result",4]]],[11,"into","","",2049,[[]]],[11,"try_into","","",2049,[[],["result",4]]],[11,"type_id","","",2049,[[],["typeid",3]]],[11,"from","","",2050,[[]]],[11,"borrow","","",2050,[[]]],[11,"borrow_mut","","",2050,[[]]],[11,"try_from","","",2050,[[],["result",4]]],[11,"into","","",2050,[[]]],[11,"try_into","","",2050,[[],["result",4]]],[11,"type_id","","",2050,[[],["typeid",3]]],[11,"from","","",2051,[[]]],[11,"borrow","","",2051,[[]]],[11,"borrow_mut","","",2051,[[]]],[11,"try_from","","",2051,[[],["result",4]]],[11,"into","","",2051,[[]]],[11,"try_into","","",2051,[[],["result",4]]],[11,"type_id","","",2051,[[],["typeid",3]]],[11,"from","","",2052,[[]]],[11,"borrow","","",2052,[[]]],[11,"borrow_mut","","",2052,[[]]],[11,"try_from","","",2052,[[],["result",4]]],[11,"into","","",2052,[[]]],[11,"try_into","","",2052,[[],["result",4]]],[11,"type_id","","",2052,[[],["typeid",3]]],[11,"from","","",2053,[[]]],[11,"borrow","","",2053,[[]]],[11,"borrow_mut","","",2053,[[]]],[11,"try_from","","",2053,[[],["result",4]]],[11,"into","","",2053,[[]]],[11,"try_into","","",2053,[[],["result",4]]],[11,"type_id","","",2053,[[],["typeid",3]]],[11,"from","","",2054,[[]]],[11,"borrow","","",2054,[[]]],[11,"borrow_mut","","",2054,[[]]],[11,"try_from","","",2054,[[],["result",4]]],[11,"into","","",2054,[[]]],[11,"try_into","","",2054,[[],["result",4]]],[11,"type_id","","",2054,[[],["typeid",3]]],[11,"from","","",2055,[[]]],[11,"borrow","","",2055,[[]]],[11,"borrow_mut","","",2055,[[]]],[11,"try_from","","",2055,[[],["result",4]]],[11,"into","","",2055,[[]]],[11,"try_into","","",2055,[[],["result",4]]],[11,"type_id","","",2055,[[],["typeid",3]]],[11,"from","","",2056,[[]]],[11,"borrow","","",2056,[[]]],[11,"borrow_mut","","",2056,[[]]],[11,"try_from","","",2056,[[],["result",4]]],[11,"into","","",2056,[[]]],[11,"try_into","","",2056,[[],["result",4]]],[11,"type_id","","",2056,[[],["typeid",3]]],[11,"from","","",2057,[[]]],[11,"borrow","","",2057,[[]]],[11,"borrow_mut","","",2057,[[]]],[11,"try_from","","",2057,[[],["result",4]]],[11,"into","","",2057,[[]]],[11,"try_into","","",2057,[[],["result",4]]],[11,"type_id","","",2057,[[],["typeid",3]]],[11,"from","","",2058,[[]]],[11,"borrow","","",2058,[[]]],[11,"borrow_mut","","",2058,[[]]],[11,"try_from","","",2058,[[],["result",4]]],[11,"into","","",2058,[[]]],[11,"try_into","","",2058,[[],["result",4]]],[11,"type_id","","",2058,[[],["typeid",3]]],[11,"from","","",2059,[[]]],[11,"borrow","","",2059,[[]]],[11,"borrow_mut","","",2059,[[]]],[11,"try_from","","",2059,[[],["result",4]]],[11,"into","","",2059,[[]]],[11,"try_into","","",2059,[[],["result",4]]],[11,"type_id","","",2059,[[],["typeid",3]]],[11,"from","","",2060,[[]]],[11,"borrow","","",2060,[[]]],[11,"borrow_mut","","",2060,[[]]],[11,"try_from","","",2060,[[],["result",4]]],[11,"into","","",2060,[[]]],[11,"try_into","","",2060,[[],["result",4]]],[11,"type_id","","",2060,[[],["typeid",3]]],[11,"from","","",2061,[[]]],[11,"borrow","","",2061,[[]]],[11,"borrow_mut","","",2061,[[]]],[11,"try_from","","",2061,[[],["result",4]]],[11,"into","","",2061,[[]]],[11,"try_into","","",2061,[[],["result",4]]],[11,"type_id","","",2061,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::intenset","",2064,[[]]],[11,"borrow","","",2064,[[]]],[11,"borrow_mut","","",2064,[[]]],[11,"try_from","","",2064,[[],["result",4]]],[11,"into","","",2064,[[]]],[11,"try_into","","",2064,[[],["result",4]]],[11,"type_id","","",2064,[[],["typeid",3]]],[11,"from","","",2065,[[]]],[11,"borrow","","",2065,[[]]],[11,"borrow_mut","","",2065,[[]]],[11,"try_from","","",2065,[[],["result",4]]],[11,"into","","",2065,[[]]],[11,"try_into","","",2065,[[],["result",4]]],[11,"type_id","","",2065,[[],["typeid",3]]],[11,"from","","",2066,[[]]],[11,"borrow","","",2066,[[]]],[11,"borrow_mut","","",2066,[[]]],[11,"try_from","","",2066,[[],["result",4]]],[11,"into","","",2066,[[]]],[11,"try_into","","",2066,[[],["result",4]]],[11,"type_id","","",2066,[[],["typeid",3]]],[11,"from","","",2067,[[]]],[11,"borrow","","",2067,[[]]],[11,"borrow_mut","","",2067,[[]]],[11,"try_from","","",2067,[[],["result",4]]],[11,"into","","",2067,[[]]],[11,"try_into","","",2067,[[],["result",4]]],[11,"type_id","","",2067,[[],["typeid",3]]],[11,"from","","",2068,[[]]],[11,"borrow","","",2068,[[]]],[11,"borrow_mut","","",2068,[[]]],[11,"try_from","","",2068,[[],["result",4]]],[11,"into","","",2068,[[]]],[11,"try_into","","",2068,[[],["result",4]]],[11,"type_id","","",2068,[[],["typeid",3]]],[11,"from","","",2069,[[]]],[11,"borrow","","",2069,[[]]],[11,"borrow_mut","","",2069,[[]]],[11,"try_from","","",2069,[[],["result",4]]],[11,"into","","",2069,[[]]],[11,"try_into","","",2069,[[],["result",4]]],[11,"type_id","","",2069,[[],["typeid",3]]],[11,"from","","",2070,[[]]],[11,"borrow","","",2070,[[]]],[11,"borrow_mut","","",2070,[[]]],[11,"try_from","","",2070,[[],["result",4]]],[11,"into","","",2070,[[]]],[11,"try_into","","",2070,[[],["result",4]]],[11,"type_id","","",2070,[[],["typeid",3]]],[11,"from","","",2071,[[]]],[11,"borrow","","",2071,[[]]],[11,"borrow_mut","","",2071,[[]]],[11,"try_from","","",2071,[[],["result",4]]],[11,"into","","",2071,[[]]],[11,"try_into","","",2071,[[],["result",4]]],[11,"type_id","","",2071,[[],["typeid",3]]],[11,"from","","",2072,[[]]],[11,"borrow","","",2072,[[]]],[11,"borrow_mut","","",2072,[[]]],[11,"try_from","","",2072,[[],["result",4]]],[11,"into","","",2072,[[]]],[11,"try_into","","",2072,[[],["result",4]]],[11,"type_id","","",2072,[[],["typeid",3]]],[11,"from","","",2073,[[]]],[11,"borrow","","",2073,[[]]],[11,"borrow_mut","","",2073,[[]]],[11,"try_from","","",2073,[[],["result",4]]],[11,"into","","",2073,[[]]],[11,"try_into","","",2073,[[],["result",4]]],[11,"type_id","","",2073,[[],["typeid",3]]],[11,"from","","",2074,[[]]],[11,"borrow","","",2074,[[]]],[11,"borrow_mut","","",2074,[[]]],[11,"try_from","","",2074,[[],["result",4]]],[11,"into","","",2074,[[]]],[11,"try_into","","",2074,[[],["result",4]]],[11,"type_id","","",2074,[[],["typeid",3]]],[11,"from","","",2075,[[]]],[11,"borrow","","",2075,[[]]],[11,"borrow_mut","","",2075,[[]]],[11,"try_from","","",2075,[[],["result",4]]],[11,"into","","",2075,[[]]],[11,"try_into","","",2075,[[],["result",4]]],[11,"type_id","","",2075,[[],["typeid",3]]],[11,"from","","",2076,[[]]],[11,"borrow","","",2076,[[]]],[11,"borrow_mut","","",2076,[[]]],[11,"try_from","","",2076,[[],["result",4]]],[11,"into","","",2076,[[]]],[11,"try_into","","",2076,[[],["result",4]]],[11,"type_id","","",2076,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::intflag","",2079,[[]]],[11,"borrow","","",2079,[[]]],[11,"borrow_mut","","",2079,[[]]],[11,"try_from","","",2079,[[],["result",4]]],[11,"into","","",2079,[[]]],[11,"try_into","","",2079,[[],["result",4]]],[11,"type_id","","",2079,[[],["typeid",3]]],[11,"from","","",2080,[[]]],[11,"borrow","","",2080,[[]]],[11,"borrow_mut","","",2080,[[]]],[11,"try_from","","",2080,[[],["result",4]]],[11,"into","","",2080,[[]]],[11,"try_into","","",2080,[[],["result",4]]],[11,"type_id","","",2080,[[],["typeid",3]]],[11,"from","","",2081,[[]]],[11,"borrow","","",2081,[[]]],[11,"borrow_mut","","",2081,[[]]],[11,"try_from","","",2081,[[],["result",4]]],[11,"into","","",2081,[[]]],[11,"try_into","","",2081,[[],["result",4]]],[11,"type_id","","",2081,[[],["typeid",3]]],[11,"from","","",2082,[[]]],[11,"borrow","","",2082,[[]]],[11,"borrow_mut","","",2082,[[]]],[11,"try_from","","",2082,[[],["result",4]]],[11,"into","","",2082,[[]]],[11,"try_into","","",2082,[[],["result",4]]],[11,"type_id","","",2082,[[],["typeid",3]]],[11,"from","","",2083,[[]]],[11,"borrow","","",2083,[[]]],[11,"borrow_mut","","",2083,[[]]],[11,"try_from","","",2083,[[],["result",4]]],[11,"into","","",2083,[[]]],[11,"try_into","","",2083,[[],["result",4]]],[11,"type_id","","",2083,[[],["typeid",3]]],[11,"from","","",2084,[[]]],[11,"borrow","","",2084,[[]]],[11,"borrow_mut","","",2084,[[]]],[11,"try_from","","",2084,[[],["result",4]]],[11,"into","","",2084,[[]]],[11,"try_into","","",2084,[[],["result",4]]],[11,"type_id","","",2084,[[],["typeid",3]]],[11,"from","","",2085,[[]]],[11,"borrow","","",2085,[[]]],[11,"borrow_mut","","",2085,[[]]],[11,"try_from","","",2085,[[],["result",4]]],[11,"into","","",2085,[[]]],[11,"try_into","","",2085,[[],["result",4]]],[11,"type_id","","",2085,[[],["typeid",3]]],[11,"from","","",2086,[[]]],[11,"borrow","","",2086,[[]]],[11,"borrow_mut","","",2086,[[]]],[11,"try_from","","",2086,[[],["result",4]]],[11,"into","","",2086,[[]]],[11,"try_into","","",2086,[[],["result",4]]],[11,"type_id","","",2086,[[],["typeid",3]]],[11,"from","","",2087,[[]]],[11,"borrow","","",2087,[[]]],[11,"borrow_mut","","",2087,[[]]],[11,"try_from","","",2087,[[],["result",4]]],[11,"into","","",2087,[[]]],[11,"try_into","","",2087,[[],["result",4]]],[11,"type_id","","",2087,[[],["typeid",3]]],[11,"from","","",2088,[[]]],[11,"borrow","","",2088,[[]]],[11,"borrow_mut","","",2088,[[]]],[11,"try_from","","",2088,[[],["result",4]]],[11,"into","","",2088,[[]]],[11,"try_into","","",2088,[[],["result",4]]],[11,"type_id","","",2088,[[],["typeid",3]]],[11,"from","","",2089,[[]]],[11,"borrow","","",2089,[[]]],[11,"borrow_mut","","",2089,[[]]],[11,"try_from","","",2089,[[],["result",4]]],[11,"into","","",2089,[[]]],[11,"try_into","","",2089,[[],["result",4]]],[11,"type_id","","",2089,[[],["typeid",3]]],[11,"from","","",2090,[[]]],[11,"borrow","","",2090,[[]]],[11,"borrow_mut","","",2090,[[]]],[11,"try_from","","",2090,[[],["result",4]]],[11,"into","","",2090,[[]]],[11,"try_into","","",2090,[[],["result",4]]],[11,"type_id","","",2090,[[],["typeid",3]]],[11,"from","","",2091,[[]]],[11,"borrow","","",2091,[[]]],[11,"borrow_mut","","",2091,[[]]],[11,"try_from","","",2091,[[],["result",4]]],[11,"into","","",2091,[[]]],[11,"try_into","","",2091,[[],["result",4]]],[11,"type_id","","",2091,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::status","",2094,[[]]],[11,"borrow","","",2094,[[]]],[11,"borrow_mut","","",2094,[[]]],[11,"try_from","","",2094,[[],["result",4]]],[11,"into","","",2094,[[]]],[11,"try_into","","",2094,[[],["result",4]]],[11,"type_id","","",2094,[[],["typeid",3]]],[11,"from","","",2095,[[]]],[11,"borrow","","",2095,[[]]],[11,"borrow_mut","","",2095,[[]]],[11,"try_from","","",2095,[[],["result",4]]],[11,"into","","",2095,[[]]],[11,"try_into","","",2095,[[],["result",4]]],[11,"type_id","","",2095,[[],["typeid",3]]],[11,"from","","",2096,[[]]],[11,"borrow","","",2096,[[]]],[11,"borrow_mut","","",2096,[[]]],[11,"try_from","","",2096,[[],["result",4]]],[11,"into","","",2096,[[]]],[11,"try_into","","",2096,[[],["result",4]]],[11,"type_id","","",2096,[[],["typeid",3]]],[11,"from","","",2097,[[]]],[11,"borrow","","",2097,[[]]],[11,"borrow_mut","","",2097,[[]]],[11,"try_from","","",2097,[[],["result",4]]],[11,"into","","",2097,[[]]],[11,"try_into","","",2097,[[],["result",4]]],[11,"type_id","","",2097,[[],["typeid",3]]],[11,"from","","",2098,[[]]],[11,"borrow","","",2098,[[]]],[11,"borrow_mut","","",2098,[[]]],[11,"try_from","","",2098,[[],["result",4]]],[11,"into","","",2098,[[]]],[11,"try_into","","",2098,[[],["result",4]]],[11,"type_id","","",2098,[[],["typeid",3]]],[11,"from","","",2099,[[]]],[11,"borrow","","",2099,[[]]],[11,"borrow_mut","","",2099,[[]]],[11,"try_from","","",2099,[[],["result",4]]],[11,"into","","",2099,[[]]],[11,"try_into","","",2099,[[],["result",4]]],[11,"type_id","","",2099,[[],["typeid",3]]],[11,"from","","",2100,[[]]],[11,"borrow","","",2100,[[]]],[11,"borrow_mut","","",2100,[[]]],[11,"try_from","","",2100,[[],["result",4]]],[11,"into","","",2100,[[]]],[11,"try_into","","",2100,[[],["result",4]]],[11,"type_id","","",2100,[[],["typeid",3]]],[11,"from","","",2101,[[]]],[11,"borrow","","",2101,[[]]],[11,"borrow_mut","","",2101,[[]]],[11,"try_from","","",2101,[[],["result",4]]],[11,"into","","",2101,[[]]],[11,"try_into","","",2101,[[],["result",4]]],[11,"type_id","","",2101,[[],["typeid",3]]],[11,"from","","",2102,[[]]],[11,"borrow","","",2102,[[]]],[11,"borrow_mut","","",2102,[[]]],[11,"try_from","","",2102,[[],["result",4]]],[11,"into","","",2102,[[]]],[11,"try_into","","",2102,[[],["result",4]]],[11,"type_id","","",2102,[[],["typeid",3]]],[11,"from","","",2103,[[]]],[11,"borrow","","",2103,[[]]],[11,"borrow_mut","","",2103,[[]]],[11,"try_from","","",2103,[[],["result",4]]],[11,"into","","",2103,[[]]],[11,"try_into","","",2103,[[],["result",4]]],[11,"type_id","","",2103,[[],["typeid",3]]],[11,"from","","",2104,[[]]],[11,"borrow","","",2104,[[]]],[11,"borrow_mut","","",2104,[[]]],[11,"try_from","","",2104,[[],["result",4]]],[11,"into","","",2104,[[]]],[11,"try_into","","",2104,[[],["result",4]]],[11,"type_id","","",2104,[[],["typeid",3]]],[11,"from","","",2105,[[]]],[11,"borrow","","",2105,[[]]],[11,"borrow_mut","","",2105,[[]]],[11,"try_from","","",2105,[[],["result",4]]],[11,"into","","",2105,[[]]],[11,"try_into","","",2105,[[],["result",4]]],[11,"type_id","","",2105,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::count","",2108,[[]]],[11,"borrow","","",2108,[[]]],[11,"borrow_mut","","",2108,[[]]],[11,"try_from","","",2108,[[],["result",4]]],[11,"into","","",2108,[[]]],[11,"try_into","","",2108,[[],["result",4]]],[11,"type_id","","",2108,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::count_dith4","",2111,[[]]],[11,"borrow","","",2111,[[]]],[11,"borrow_mut","","",2111,[[]]],[11,"try_from","","",2111,[[],["result",4]]],[11,"into","","",2111,[[]]],[11,"try_into","","",2111,[[],["result",4]]],[11,"type_id","","",2111,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::count_dith5","",2114,[[]]],[11,"borrow","","",2114,[[]]],[11,"borrow_mut","","",2114,[[]]],[11,"try_from","","",2114,[[],["result",4]]],[11,"into","","",2114,[[]]],[11,"try_into","","",2114,[[],["result",4]]],[11,"type_id","","",2114,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::count_dith6","",2117,[[]]],[11,"borrow","","",2117,[[]]],[11,"borrow_mut","","",2117,[[]]],[11,"try_from","","",2117,[[],["result",4]]],[11,"into","","",2117,[[]]],[11,"try_into","","",2117,[[],["result",4]]],[11,"type_id","","",2117,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::patt","",2120,[[]]],[11,"borrow","","",2120,[[]]],[11,"borrow_mut","","",2120,[[]]],[11,"try_from","","",2120,[[],["result",4]]],[11,"into","","",2120,[[]]],[11,"try_into","","",2120,[[],["result",4]]],[11,"type_id","","",2120,[[],["typeid",3]]],[11,"from","","",2121,[[]]],[11,"borrow","","",2121,[[]]],[11,"borrow_mut","","",2121,[[]]],[11,"try_from","","",2121,[[],["result",4]]],[11,"into","","",2121,[[]]],[11,"try_into","","",2121,[[],["result",4]]],[11,"type_id","","",2121,[[],["typeid",3]]],[11,"from","","",2122,[[]]],[11,"borrow","","",2122,[[]]],[11,"borrow_mut","","",2122,[[]]],[11,"try_from","","",2122,[[],["result",4]]],[11,"into","","",2122,[[]]],[11,"try_into","","",2122,[[],["result",4]]],[11,"type_id","","",2122,[[],["typeid",3]]],[11,"from","","",2123,[[]]],[11,"borrow","","",2123,[[]]],[11,"borrow_mut","","",2123,[[]]],[11,"try_from","","",2123,[[],["result",4]]],[11,"into","","",2123,[[]]],[11,"try_into","","",2123,[[],["result",4]]],[11,"type_id","","",2123,[[],["typeid",3]]],[11,"from","","",2124,[[]]],[11,"borrow","","",2124,[[]]],[11,"borrow_mut","","",2124,[[]]],[11,"try_from","","",2124,[[],["result",4]]],[11,"into","","",2124,[[]]],[11,"try_into","","",2124,[[],["result",4]]],[11,"type_id","","",2124,[[],["typeid",3]]],[11,"from","","",2125,[[]]],[11,"borrow","","",2125,[[]]],[11,"borrow_mut","","",2125,[[]]],[11,"try_from","","",2125,[[],["result",4]]],[11,"into","","",2125,[[]]],[11,"try_into","","",2125,[[],["result",4]]],[11,"type_id","","",2125,[[],["typeid",3]]],[11,"from","","",2126,[[]]],[11,"borrow","","",2126,[[]]],[11,"borrow_mut","","",2126,[[]]],[11,"try_from","","",2126,[[],["result",4]]],[11,"into","","",2126,[[]]],[11,"try_into","","",2126,[[],["result",4]]],[11,"type_id","","",2126,[[],["typeid",3]]],[11,"from","","",2127,[[]]],[11,"borrow","","",2127,[[]]],[11,"borrow_mut","","",2127,[[]]],[11,"try_from","","",2127,[[],["result",4]]],[11,"into","","",2127,[[]]],[11,"try_into","","",2127,[[],["result",4]]],[11,"type_id","","",2127,[[],["typeid",3]]],[11,"from","","",2128,[[]]],[11,"borrow","","",2128,[[]]],[11,"borrow_mut","","",2128,[[]]],[11,"try_from","","",2128,[[],["result",4]]],[11,"into","","",2128,[[]]],[11,"try_into","","",2128,[[],["result",4]]],[11,"type_id","","",2128,[[],["typeid",3]]],[11,"from","","",2129,[[]]],[11,"borrow","","",2129,[[]]],[11,"borrow_mut","","",2129,[[]]],[11,"try_from","","",2129,[[],["result",4]]],[11,"into","","",2129,[[]]],[11,"try_into","","",2129,[[],["result",4]]],[11,"type_id","","",2129,[[],["typeid",3]]],[11,"from","","",2130,[[]]],[11,"borrow","","",2130,[[]]],[11,"borrow_mut","","",2130,[[]]],[11,"try_from","","",2130,[[],["result",4]]],[11,"into","","",2130,[[]]],[11,"try_into","","",2130,[[],["result",4]]],[11,"type_id","","",2130,[[],["typeid",3]]],[11,"from","","",2131,[[]]],[11,"borrow","","",2131,[[]]],[11,"borrow_mut","","",2131,[[]]],[11,"try_from","","",2131,[[],["result",4]]],[11,"into","","",2131,[[]]],[11,"try_into","","",2131,[[],["result",4]]],[11,"type_id","","",2131,[[],["typeid",3]]],[11,"from","","",2132,[[]]],[11,"borrow","","",2132,[[]]],[11,"borrow_mut","","",2132,[[]]],[11,"try_from","","",2132,[[],["result",4]]],[11,"into","","",2132,[[]]],[11,"try_into","","",2132,[[],["result",4]]],[11,"type_id","","",2132,[[],["typeid",3]]],[11,"from","","",2133,[[]]],[11,"borrow","","",2133,[[]]],[11,"borrow_mut","","",2133,[[]]],[11,"try_from","","",2133,[[],["result",4]]],[11,"into","","",2133,[[]]],[11,"try_into","","",2133,[[],["result",4]]],[11,"type_id","","",2133,[[],["typeid",3]]],[11,"from","","",2134,[[]]],[11,"borrow","","",2134,[[]]],[11,"borrow_mut","","",2134,[[]]],[11,"try_from","","",2134,[[],["result",4]]],[11,"into","","",2134,[[]]],[11,"try_into","","",2134,[[],["result",4]]],[11,"type_id","","",2134,[[],["typeid",3]]],[11,"from","","",2135,[[]]],[11,"borrow","","",2135,[[]]],[11,"borrow_mut","","",2135,[[]]],[11,"try_from","","",2135,[[],["result",4]]],[11,"into","","",2135,[[]]],[11,"try_into","","",2135,[[],["result",4]]],[11,"type_id","","",2135,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::wave","",2141,[[]]],[11,"borrow","","",2141,[[]]],[11,"borrow_mut","","",2141,[[]]],[11,"try_from","","",2141,[[],["result",4]]],[11,"into","","",2141,[[]]],[11,"try_into","","",2141,[[],["result",4]]],[11,"type_id","","",2141,[[],["typeid",3]]],[11,"from","","",2143,[[]]],[11,"borrow","","",2143,[[]]],[11,"borrow_mut","","",2143,[[]]],[11,"try_from","","",2143,[[],["result",4]]],[11,"into","","",2143,[[]]],[11,"try_into","","",2143,[[],["result",4]]],[11,"type_id","","",2143,[[],["typeid",3]]],[11,"from","","",2144,[[]]],[11,"borrow","","",2144,[[]]],[11,"borrow_mut","","",2144,[[]]],[11,"try_from","","",2144,[[],["result",4]]],[11,"into","","",2144,[[]]],[11,"try_into","","",2144,[[],["result",4]]],[11,"type_id","","",2144,[[],["typeid",3]]],[11,"from","","",2145,[[]]],[11,"borrow","","",2145,[[]]],[11,"borrow_mut","","",2145,[[]]],[11,"try_from","","",2145,[[],["result",4]]],[11,"into","","",2145,[[]]],[11,"try_into","","",2145,[[],["result",4]]],[11,"type_id","","",2145,[[],["typeid",3]]],[11,"from","","",2146,[[]]],[11,"borrow","","",2146,[[]]],[11,"borrow_mut","","",2146,[[]]],[11,"try_from","","",2146,[[],["result",4]]],[11,"into","","",2146,[[]]],[11,"try_into","","",2146,[[],["result",4]]],[11,"type_id","","",2146,[[],["typeid",3]]],[11,"from","","",2147,[[]]],[11,"borrow","","",2147,[[]]],[11,"borrow_mut","","",2147,[[]]],[11,"try_from","","",2147,[[],["result",4]]],[11,"into","","",2147,[[]]],[11,"try_into","","",2147,[[],["result",4]]],[11,"type_id","","",2147,[[],["typeid",3]]],[11,"from","","",2148,[[]]],[11,"borrow","","",2148,[[]]],[11,"borrow_mut","","",2148,[[]]],[11,"try_from","","",2148,[[],["result",4]]],[11,"into","","",2148,[[]]],[11,"try_into","","",2148,[[],["result",4]]],[11,"type_id","","",2148,[[],["typeid",3]]],[11,"from","","",2149,[[]]],[11,"borrow","","",2149,[[]]],[11,"borrow_mut","","",2149,[[]]],[11,"try_from","","",2149,[[],["result",4]]],[11,"into","","",2149,[[]]],[11,"try_into","","",2149,[[],["result",4]]],[11,"type_id","","",2149,[[],["typeid",3]]],[11,"from","","",2150,[[]]],[11,"borrow","","",2150,[[]]],[11,"borrow_mut","","",2150,[[]]],[11,"try_from","","",2150,[[],["result",4]]],[11,"into","","",2150,[[]]],[11,"try_into","","",2150,[[],["result",4]]],[11,"type_id","","",2150,[[],["typeid",3]]],[11,"from","","",2151,[[]]],[11,"borrow","","",2151,[[]]],[11,"borrow_mut","","",2151,[[]]],[11,"try_from","","",2151,[[],["result",4]]],[11,"into","","",2151,[[]]],[11,"try_into","","",2151,[[],["result",4]]],[11,"type_id","","",2151,[[],["typeid",3]]],[11,"from","","",2152,[[]]],[11,"borrow","","",2152,[[]]],[11,"borrow_mut","","",2152,[[]]],[11,"try_from","","",2152,[[],["result",4]]],[11,"into","","",2152,[[]]],[11,"try_into","","",2152,[[],["result",4]]],[11,"type_id","","",2152,[[],["typeid",3]]],[11,"from","","",2153,[[]]],[11,"borrow","","",2153,[[]]],[11,"borrow_mut","","",2153,[[]]],[11,"try_from","","",2153,[[],["result",4]]],[11,"into","","",2153,[[]]],[11,"try_into","","",2153,[[],["result",4]]],[11,"type_id","","",2153,[[],["typeid",3]]],[11,"from","","",2154,[[]]],[11,"borrow","","",2154,[[]]],[11,"borrow_mut","","",2154,[[]]],[11,"try_from","","",2154,[[],["result",4]]],[11,"into","","",2154,[[]]],[11,"try_into","","",2154,[[],["result",4]]],[11,"type_id","","",2154,[[],["typeid",3]]],[11,"from","","",2155,[[]]],[11,"borrow","","",2155,[[]]],[11,"borrow_mut","","",2155,[[]]],[11,"try_from","","",2155,[[],["result",4]]],[11,"into","","",2155,[[]]],[11,"try_into","","",2155,[[],["result",4]]],[11,"type_id","","",2155,[[],["typeid",3]]],[11,"from","","",2156,[[]]],[11,"borrow","","",2156,[[]]],[11,"borrow_mut","","",2156,[[]]],[11,"try_from","","",2156,[[],["result",4]]],[11,"into","","",2156,[[]]],[11,"try_into","","",2156,[[],["result",4]]],[11,"type_id","","",2156,[[],["typeid",3]]],[11,"from","","",2138,[[]]],[11,"borrow","","",2138,[[]]],[11,"borrow_mut","","",2138,[[]]],[11,"try_from","","",2138,[[],["result",4]]],[11,"into","","",2138,[[]]],[11,"try_into","","",2138,[[],["result",4]]],[11,"type_id","","",2138,[[],["typeid",3]]],[11,"from","","",2139,[[]]],[11,"borrow","","",2139,[[]]],[11,"borrow_mut","","",2139,[[]]],[11,"try_from","","",2139,[[],["result",4]]],[11,"into","","",2139,[[]]],[11,"try_into","","",2139,[[],["result",4]]],[11,"type_id","","",2139,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::per","",2159,[[]]],[11,"borrow","","",2159,[[]]],[11,"borrow_mut","","",2159,[[]]],[11,"try_from","","",2159,[[],["result",4]]],[11,"into","","",2159,[[]]],[11,"try_into","","",2159,[[],["result",4]]],[11,"type_id","","",2159,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::per_dith4","",2162,[[]]],[11,"borrow","","",2162,[[]]],[11,"borrow_mut","","",2162,[[]]],[11,"try_from","","",2162,[[],["result",4]]],[11,"into","","",2162,[[]]],[11,"try_into","","",2162,[[],["result",4]]],[11,"type_id","","",2162,[[],["typeid",3]]],[11,"from","","",2163,[[]]],[11,"borrow","","",2163,[[]]],[11,"borrow_mut","","",2163,[[]]],[11,"try_from","","",2163,[[],["result",4]]],[11,"into","","",2163,[[]]],[11,"try_into","","",2163,[[],["result",4]]],[11,"type_id","","",2163,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::per_dith5","",2166,[[]]],[11,"borrow","","",2166,[[]]],[11,"borrow_mut","","",2166,[[]]],[11,"try_from","","",2166,[[],["result",4]]],[11,"into","","",2166,[[]]],[11,"try_into","","",2166,[[],["result",4]]],[11,"type_id","","",2166,[[],["typeid",3]]],[11,"from","","",2167,[[]]],[11,"borrow","","",2167,[[]]],[11,"borrow_mut","","",2167,[[]]],[11,"try_from","","",2167,[[],["result",4]]],[11,"into","","",2167,[[]]],[11,"try_into","","",2167,[[],["result",4]]],[11,"type_id","","",2167,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::per_dith6","",2170,[[]]],[11,"borrow","","",2170,[[]]],[11,"borrow_mut","","",2170,[[]]],[11,"try_from","","",2170,[[],["result",4]]],[11,"into","","",2170,[[]]],[11,"try_into","","",2170,[[],["result",4]]],[11,"type_id","","",2170,[[],["typeid",3]]],[11,"from","","",2171,[[]]],[11,"borrow","","",2171,[[]]],[11,"borrow_mut","","",2171,[[]]],[11,"try_from","","",2171,[[],["result",4]]],[11,"into","","",2171,[[]]],[11,"try_into","","",2171,[[],["result",4]]],[11,"type_id","","",2171,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::cc","",2174,[[]]],[11,"borrow","","",2174,[[]]],[11,"borrow_mut","","",2174,[[]]],[11,"try_from","","",2174,[[],["result",4]]],[11,"into","","",2174,[[]]],[11,"try_into","","",2174,[[],["result",4]]],[11,"type_id","","",2174,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::cc_dith4","",2177,[[]]],[11,"borrow","","",2177,[[]]],[11,"borrow_mut","","",2177,[[]]],[11,"try_from","","",2177,[[],["result",4]]],[11,"into","","",2177,[[]]],[11,"try_into","","",2177,[[],["result",4]]],[11,"type_id","","",2177,[[],["typeid",3]]],[11,"from","","",2178,[[]]],[11,"borrow","","",2178,[[]]],[11,"borrow_mut","","",2178,[[]]],[11,"try_from","","",2178,[[],["result",4]]],[11,"into","","",2178,[[]]],[11,"try_into","","",2178,[[],["result",4]]],[11,"type_id","","",2178,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::cc_dith5","",2181,[[]]],[11,"borrow","","",2181,[[]]],[11,"borrow_mut","","",2181,[[]]],[11,"try_from","","",2181,[[],["result",4]]],[11,"into","","",2181,[[]]],[11,"try_into","","",2181,[[],["result",4]]],[11,"type_id","","",2181,[[],["typeid",3]]],[11,"from","","",2182,[[]]],[11,"borrow","","",2182,[[]]],[11,"borrow_mut","","",2182,[[]]],[11,"try_from","","",2182,[[],["result",4]]],[11,"into","","",2182,[[]]],[11,"try_into","","",2182,[[],["result",4]]],[11,"type_id","","",2182,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::cc_dith6","",2185,[[]]],[11,"borrow","","",2185,[[]]],[11,"borrow_mut","","",2185,[[]]],[11,"try_from","","",2185,[[],["result",4]]],[11,"into","","",2185,[[]]],[11,"try_into","","",2185,[[],["result",4]]],[11,"type_id","","",2185,[[],["typeid",3]]],[11,"from","","",2186,[[]]],[11,"borrow","","",2186,[[]]],[11,"borrow_mut","","",2186,[[]]],[11,"try_from","","",2186,[[],["result",4]]],[11,"into","","",2186,[[]]],[11,"try_into","","",2186,[[],["result",4]]],[11,"type_id","","",2186,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::pattb","",2189,[[]]],[11,"borrow","","",2189,[[]]],[11,"borrow_mut","","",2189,[[]]],[11,"try_from","","",2189,[[],["result",4]]],[11,"into","","",2189,[[]]],[11,"try_into","","",2189,[[],["result",4]]],[11,"type_id","","",2189,[[],["typeid",3]]],[11,"from","","",2190,[[]]],[11,"borrow","","",2190,[[]]],[11,"borrow_mut","","",2190,[[]]],[11,"try_from","","",2190,[[],["result",4]]],[11,"into","","",2190,[[]]],[11,"try_into","","",2190,[[],["result",4]]],[11,"type_id","","",2190,[[],["typeid",3]]],[11,"from","","",2191,[[]]],[11,"borrow","","",2191,[[]]],[11,"borrow_mut","","",2191,[[]]],[11,"try_from","","",2191,[[],["result",4]]],[11,"into","","",2191,[[]]],[11,"try_into","","",2191,[[],["result",4]]],[11,"type_id","","",2191,[[],["typeid",3]]],[11,"from","","",2192,[[]]],[11,"borrow","","",2192,[[]]],[11,"borrow_mut","","",2192,[[]]],[11,"try_from","","",2192,[[],["result",4]]],[11,"into","","",2192,[[]]],[11,"try_into","","",2192,[[],["result",4]]],[11,"type_id","","",2192,[[],["typeid",3]]],[11,"from","","",2193,[[]]],[11,"borrow","","",2193,[[]]],[11,"borrow_mut","","",2193,[[]]],[11,"try_from","","",2193,[[],["result",4]]],[11,"into","","",2193,[[]]],[11,"try_into","","",2193,[[],["result",4]]],[11,"type_id","","",2193,[[],["typeid",3]]],[11,"from","","",2194,[[]]],[11,"borrow","","",2194,[[]]],[11,"borrow_mut","","",2194,[[]]],[11,"try_from","","",2194,[[],["result",4]]],[11,"into","","",2194,[[]]],[11,"try_into","","",2194,[[],["result",4]]],[11,"type_id","","",2194,[[],["typeid",3]]],[11,"from","","",2195,[[]]],[11,"borrow","","",2195,[[]]],[11,"borrow_mut","","",2195,[[]]],[11,"try_from","","",2195,[[],["result",4]]],[11,"into","","",2195,[[]]],[11,"try_into","","",2195,[[],["result",4]]],[11,"type_id","","",2195,[[],["typeid",3]]],[11,"from","","",2196,[[]]],[11,"borrow","","",2196,[[]]],[11,"borrow_mut","","",2196,[[]]],[11,"try_from","","",2196,[[],["result",4]]],[11,"into","","",2196,[[]]],[11,"try_into","","",2196,[[],["result",4]]],[11,"type_id","","",2196,[[],["typeid",3]]],[11,"from","","",2197,[[]]],[11,"borrow","","",2197,[[]]],[11,"borrow_mut","","",2197,[[]]],[11,"try_from","","",2197,[[],["result",4]]],[11,"into","","",2197,[[]]],[11,"try_into","","",2197,[[],["result",4]]],[11,"type_id","","",2197,[[],["typeid",3]]],[11,"from","","",2198,[[]]],[11,"borrow","","",2198,[[]]],[11,"borrow_mut","","",2198,[[]]],[11,"try_from","","",2198,[[],["result",4]]],[11,"into","","",2198,[[]]],[11,"try_into","","",2198,[[],["result",4]]],[11,"type_id","","",2198,[[],["typeid",3]]],[11,"from","","",2199,[[]]],[11,"borrow","","",2199,[[]]],[11,"borrow_mut","","",2199,[[]]],[11,"try_from","","",2199,[[],["result",4]]],[11,"into","","",2199,[[]]],[11,"try_into","","",2199,[[],["result",4]]],[11,"type_id","","",2199,[[],["typeid",3]]],[11,"from","","",2200,[[]]],[11,"borrow","","",2200,[[]]],[11,"borrow_mut","","",2200,[[]]],[11,"try_from","","",2200,[[],["result",4]]],[11,"into","","",2200,[[]]],[11,"try_into","","",2200,[[],["result",4]]],[11,"type_id","","",2200,[[],["typeid",3]]],[11,"from","","",2201,[[]]],[11,"borrow","","",2201,[[]]],[11,"borrow_mut","","",2201,[[]]],[11,"try_from","","",2201,[[],["result",4]]],[11,"into","","",2201,[[]]],[11,"try_into","","",2201,[[],["result",4]]],[11,"type_id","","",2201,[[],["typeid",3]]],[11,"from","","",2202,[[]]],[11,"borrow","","",2202,[[]]],[11,"borrow_mut","","",2202,[[]]],[11,"try_from","","",2202,[[],["result",4]]],[11,"into","","",2202,[[]]],[11,"try_into","","",2202,[[],["result",4]]],[11,"type_id","","",2202,[[],["typeid",3]]],[11,"from","","",2203,[[]]],[11,"borrow","","",2203,[[]]],[11,"borrow_mut","","",2203,[[]]],[11,"try_from","","",2203,[[],["result",4]]],[11,"into","","",2203,[[]]],[11,"try_into","","",2203,[[],["result",4]]],[11,"type_id","","",2203,[[],["typeid",3]]],[11,"from","","",2204,[[]]],[11,"borrow","","",2204,[[]]],[11,"borrow_mut","","",2204,[[]]],[11,"try_from","","",2204,[[],["result",4]]],[11,"into","","",2204,[[]]],[11,"try_into","","",2204,[[],["result",4]]],[11,"type_id","","",2204,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::waveb","",2210,[[]]],[11,"borrow","","",2210,[[]]],[11,"borrow_mut","","",2210,[[]]],[11,"try_from","","",2210,[[],["result",4]]],[11,"into","","",2210,[[]]],[11,"try_into","","",2210,[[],["result",4]]],[11,"type_id","","",2210,[[],["typeid",3]]],[11,"from","","",2212,[[]]],[11,"borrow","","",2212,[[]]],[11,"borrow_mut","","",2212,[[]]],[11,"try_from","","",2212,[[],["result",4]]],[11,"into","","",2212,[[]]],[11,"try_into","","",2212,[[],["result",4]]],[11,"type_id","","",2212,[[],["typeid",3]]],[11,"from","","",2213,[[]]],[11,"borrow","","",2213,[[]]],[11,"borrow_mut","","",2213,[[]]],[11,"try_from","","",2213,[[],["result",4]]],[11,"into","","",2213,[[]]],[11,"try_into","","",2213,[[],["result",4]]],[11,"type_id","","",2213,[[],["typeid",3]]],[11,"from","","",2214,[[]]],[11,"borrow","","",2214,[[]]],[11,"borrow_mut","","",2214,[[]]],[11,"try_from","","",2214,[[],["result",4]]],[11,"into","","",2214,[[]]],[11,"try_into","","",2214,[[],["result",4]]],[11,"type_id","","",2214,[[],["typeid",3]]],[11,"from","","",2215,[[]]],[11,"borrow","","",2215,[[]]],[11,"borrow_mut","","",2215,[[]]],[11,"try_from","","",2215,[[],["result",4]]],[11,"into","","",2215,[[]]],[11,"try_into","","",2215,[[],["result",4]]],[11,"type_id","","",2215,[[],["typeid",3]]],[11,"from","","",2216,[[]]],[11,"borrow","","",2216,[[]]],[11,"borrow_mut","","",2216,[[]]],[11,"try_from","","",2216,[[],["result",4]]],[11,"into","","",2216,[[]]],[11,"try_into","","",2216,[[],["result",4]]],[11,"type_id","","",2216,[[],["typeid",3]]],[11,"from","","",2217,[[]]],[11,"borrow","","",2217,[[]]],[11,"borrow_mut","","",2217,[[]]],[11,"try_from","","",2217,[[],["result",4]]],[11,"into","","",2217,[[]]],[11,"try_into","","",2217,[[],["result",4]]],[11,"type_id","","",2217,[[],["typeid",3]]],[11,"from","","",2218,[[]]],[11,"borrow","","",2218,[[]]],[11,"borrow_mut","","",2218,[[]]],[11,"try_from","","",2218,[[],["result",4]]],[11,"into","","",2218,[[]]],[11,"try_into","","",2218,[[],["result",4]]],[11,"type_id","","",2218,[[],["typeid",3]]],[11,"from","","",2219,[[]]],[11,"borrow","","",2219,[[]]],[11,"borrow_mut","","",2219,[[]]],[11,"try_from","","",2219,[[],["result",4]]],[11,"into","","",2219,[[]]],[11,"try_into","","",2219,[[],["result",4]]],[11,"type_id","","",2219,[[],["typeid",3]]],[11,"from","","",2220,[[]]],[11,"borrow","","",2220,[[]]],[11,"borrow_mut","","",2220,[[]]],[11,"try_from","","",2220,[[],["result",4]]],[11,"into","","",2220,[[]]],[11,"try_into","","",2220,[[],["result",4]]],[11,"type_id","","",2220,[[],["typeid",3]]],[11,"from","","",2221,[[]]],[11,"borrow","","",2221,[[]]],[11,"borrow_mut","","",2221,[[]]],[11,"try_from","","",2221,[[],["result",4]]],[11,"into","","",2221,[[]]],[11,"try_into","","",2221,[[],["result",4]]],[11,"type_id","","",2221,[[],["typeid",3]]],[11,"from","","",2222,[[]]],[11,"borrow","","",2222,[[]]],[11,"borrow_mut","","",2222,[[]]],[11,"try_from","","",2222,[[],["result",4]]],[11,"into","","",2222,[[]]],[11,"try_into","","",2222,[[],["result",4]]],[11,"type_id","","",2222,[[],["typeid",3]]],[11,"from","","",2223,[[]]],[11,"borrow","","",2223,[[]]],[11,"borrow_mut","","",2223,[[]]],[11,"try_from","","",2223,[[],["result",4]]],[11,"into","","",2223,[[]]],[11,"try_into","","",2223,[[],["result",4]]],[11,"type_id","","",2223,[[],["typeid",3]]],[11,"from","","",2224,[[]]],[11,"borrow","","",2224,[[]]],[11,"borrow_mut","","",2224,[[]]],[11,"try_from","","",2224,[[],["result",4]]],[11,"into","","",2224,[[]]],[11,"try_into","","",2224,[[],["result",4]]],[11,"type_id","","",2224,[[],["typeid",3]]],[11,"from","","",2225,[[]]],[11,"borrow","","",2225,[[]]],[11,"borrow_mut","","",2225,[[]]],[11,"try_from","","",2225,[[],["result",4]]],[11,"into","","",2225,[[]]],[11,"try_into","","",2225,[[],["result",4]]],[11,"type_id","","",2225,[[],["typeid",3]]],[11,"from","","",2207,[[]]],[11,"borrow","","",2207,[[]]],[11,"borrow_mut","","",2207,[[]]],[11,"try_from","","",2207,[[],["result",4]]],[11,"into","","",2207,[[]]],[11,"try_into","","",2207,[[],["result",4]]],[11,"type_id","","",2207,[[],["typeid",3]]],[11,"from","","",2208,[[]]],[11,"borrow","","",2208,[[]]],[11,"borrow_mut","","",2208,[[]]],[11,"try_from","","",2208,[[],["result",4]]],[11,"into","","",2208,[[]]],[11,"try_into","","",2208,[[],["result",4]]],[11,"type_id","","",2208,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::perb","",2228,[[]]],[11,"borrow","","",2228,[[]]],[11,"borrow_mut","","",2228,[[]]],[11,"try_from","","",2228,[[],["result",4]]],[11,"into","","",2228,[[]]],[11,"try_into","","",2228,[[],["result",4]]],[11,"type_id","","",2228,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::perb_dith4","",2231,[[]]],[11,"borrow","","",2231,[[]]],[11,"borrow_mut","","",2231,[[]]],[11,"try_from","","",2231,[[],["result",4]]],[11,"into","","",2231,[[]]],[11,"try_into","","",2231,[[],["result",4]]],[11,"type_id","","",2231,[[],["typeid",3]]],[11,"from","","",2232,[[]]],[11,"borrow","","",2232,[[]]],[11,"borrow_mut","","",2232,[[]]],[11,"try_from","","",2232,[[],["result",4]]],[11,"into","","",2232,[[]]],[11,"try_into","","",2232,[[],["result",4]]],[11,"type_id","","",2232,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::perb_dith5","",2235,[[]]],[11,"borrow","","",2235,[[]]],[11,"borrow_mut","","",2235,[[]]],[11,"try_from","","",2235,[[],["result",4]]],[11,"into","","",2235,[[]]],[11,"try_into","","",2235,[[],["result",4]]],[11,"type_id","","",2235,[[],["typeid",3]]],[11,"from","","",2236,[[]]],[11,"borrow","","",2236,[[]]],[11,"borrow_mut","","",2236,[[]]],[11,"try_from","","",2236,[[],["result",4]]],[11,"into","","",2236,[[]]],[11,"try_into","","",2236,[[],["result",4]]],[11,"type_id","","",2236,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::perb_dith6","",2239,[[]]],[11,"borrow","","",2239,[[]]],[11,"borrow_mut","","",2239,[[]]],[11,"try_from","","",2239,[[],["result",4]]],[11,"into","","",2239,[[]]],[11,"try_into","","",2239,[[],["result",4]]],[11,"type_id","","",2239,[[],["typeid",3]]],[11,"from","","",2240,[[]]],[11,"borrow","","",2240,[[]]],[11,"borrow_mut","","",2240,[[]]],[11,"try_from","","",2240,[[],["result",4]]],[11,"into","","",2240,[[]]],[11,"try_into","","",2240,[[],["result",4]]],[11,"type_id","","",2240,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ccb","",2243,[[]]],[11,"borrow","","",2243,[[]]],[11,"borrow_mut","","",2243,[[]]],[11,"try_from","","",2243,[[],["result",4]]],[11,"into","","",2243,[[]]],[11,"try_into","","",2243,[[],["result",4]]],[11,"type_id","","",2243,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ccb_dith4","",2246,[[]]],[11,"borrow","","",2246,[[]]],[11,"borrow_mut","","",2246,[[]]],[11,"try_from","","",2246,[[],["result",4]]],[11,"into","","",2246,[[]]],[11,"try_into","","",2246,[[],["result",4]]],[11,"type_id","","",2246,[[],["typeid",3]]],[11,"from","","",2247,[[]]],[11,"borrow","","",2247,[[]]],[11,"borrow_mut","","",2247,[[]]],[11,"try_from","","",2247,[[],["result",4]]],[11,"into","","",2247,[[]]],[11,"try_into","","",2247,[[],["result",4]]],[11,"type_id","","",2247,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ccb_dith5","",2250,[[]]],[11,"borrow","","",2250,[[]]],[11,"borrow_mut","","",2250,[[]]],[11,"try_from","","",2250,[[],["result",4]]],[11,"into","","",2250,[[]]],[11,"try_into","","",2250,[[],["result",4]]],[11,"type_id","","",2250,[[],["typeid",3]]],[11,"from","","",2251,[[]]],[11,"borrow","","",2251,[[]]],[11,"borrow_mut","","",2251,[[]]],[11,"try_from","","",2251,[[],["result",4]]],[11,"into","","",2251,[[]]],[11,"try_into","","",2251,[[],["result",4]]],[11,"type_id","","",2251,[[],["typeid",3]]],[11,"from","atsamd21g::tcc0::ccb_dith6","",2254,[[]]],[11,"borrow","","",2254,[[]]],[11,"borrow_mut","","",2254,[[]]],[11,"try_from","","",2254,[[],["result",4]]],[11,"into","","",2254,[[]]],[11,"try_into","","",2254,[[],["result",4]]],[11,"type_id","","",2254,[[],["typeid",3]]],[11,"from","","",2255,[[]]],[11,"borrow","","",2255,[[]]],[11,"borrow_mut","","",2255,[[]]],[11,"try_from","","",2255,[[],["result",4]]],[11,"into","","",2255,[[]]],[11,"try_into","","",2255,[[],["result",4]]],[11,"type_id","","",2255,[[],["typeid",3]]],[11,"from","atsamd21g::usb","",2527,[[]]],[11,"borrow","","",2527,[[]]],[11,"borrow_mut","","",2527,[[]]],[11,"try_from","","",2527,[[],["result",4]]],[11,"into","","",2527,[[]]],[11,"try_into","","",2527,[[],["result",4]]],[11,"type_id","","",2527,[[],["typeid",3]]],[11,"from","","",2258,[[]]],[11,"borrow","","",2258,[[]]],[11,"borrow_mut","","",2258,[[]]],[11,"try_from","","",2258,[[],["result",4]]],[11,"into","","",2258,[[]]],[11,"try_into","","",2258,[[],["result",4]]],[11,"type_id","","",2258,[[],["typeid",3]]],[11,"from","","",2259,[[]]],[11,"borrow","","",2259,[[]]],[11,"borrow_mut","","",2259,[[]]],[11,"try_from","","",2259,[[],["result",4]]],[11,"into","","",2259,[[]]],[11,"try_into","","",2259,[[],["result",4]]],[11,"type_id","","",2259,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::ctrla","",2261,[[]]],[11,"borrow","","",2261,[[]]],[11,"borrow_mut","","",2261,[[]]],[11,"try_from","","",2261,[[],["result",4]]],[11,"into","","",2261,[[]]],[11,"try_into","","",2261,[[],["result",4]]],[11,"type_id","","",2261,[[],["typeid",3]]],[11,"from","","",2262,[[]]],[11,"borrow","","",2262,[[]]],[11,"borrow_mut","","",2262,[[]]],[11,"try_from","","",2262,[[],["result",4]]],[11,"into","","",2262,[[]]],[11,"try_into","","",2262,[[],["result",4]]],[11,"type_id","","",2262,[[],["typeid",3]]],[11,"from","","",2263,[[]]],[11,"borrow","","",2263,[[]]],[11,"borrow_mut","","",2263,[[]]],[11,"try_from","","",2263,[[],["result",4]]],[11,"into","","",2263,[[]]],[11,"try_into","","",2263,[[],["result",4]]],[11,"type_id","","",2263,[[],["typeid",3]]],[11,"from","","",2265,[[]]],[11,"borrow","","",2265,[[]]],[11,"borrow_mut","","",2265,[[]]],[11,"try_from","","",2265,[[],["result",4]]],[11,"into","","",2265,[[]]],[11,"try_into","","",2265,[[],["result",4]]],[11,"type_id","","",2265,[[],["typeid",3]]],[11,"from","","",2260,[[]]],[11,"borrow","","",2260,[[]]],[11,"borrow_mut","","",2260,[[]]],[11,"try_from","","",2260,[[],["result",4]]],[11,"into","","",2260,[[]]],[11,"try_into","","",2260,[[],["result",4]]],[11,"type_id","","",2260,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::qosctrl","",2272,[[]]],[11,"borrow","","",2272,[[]]],[11,"borrow_mut","","",2272,[[]]],[11,"try_from","","",2272,[[],["result",4]]],[11,"into","","",2272,[[]]],[11,"try_into","","",2272,[[],["result",4]]],[11,"type_id","","",2272,[[],["typeid",3]]],[11,"from","","",2274,[[]]],[11,"borrow","","",2274,[[]]],[11,"borrow_mut","","",2274,[[]]],[11,"try_from","","",2274,[[],["result",4]]],[11,"into","","",2274,[[]]],[11,"try_into","","",2274,[[],["result",4]]],[11,"type_id","","",2274,[[],["typeid",3]]],[11,"from","","",2269,[[]]],[11,"borrow","","",2269,[[]]],[11,"borrow_mut","","",2269,[[]]],[11,"try_from","","",2269,[[],["result",4]]],[11,"into","","",2269,[[]]],[11,"try_into","","",2269,[[],["result",4]]],[11,"type_id","","",2269,[[],["typeid",3]]],[11,"from","","",2270,[[]]],[11,"borrow","","",2270,[[]]],[11,"borrow_mut","","",2270,[[]]],[11,"try_from","","",2270,[[],["result",4]]],[11,"into","","",2270,[[]]],[11,"try_into","","",2270,[[],["result",4]]],[11,"type_id","","",2270,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::ctrlb","",2279,[[]]],[11,"borrow","","",2279,[[]]],[11,"borrow_mut","","",2279,[[]]],[11,"try_from","","",2279,[[],["result",4]]],[11,"into","","",2279,[[]]],[11,"try_into","","",2279,[[],["result",4]]],[11,"type_id","","",2279,[[],["typeid",3]]],[11,"from","","",2280,[[]]],[11,"borrow","","",2280,[[]]],[11,"borrow_mut","","",2280,[[]]],[11,"try_from","","",2280,[[],["result",4]]],[11,"into","","",2280,[[]]],[11,"try_into","","",2280,[[],["result",4]]],[11,"type_id","","",2280,[[],["typeid",3]]],[11,"from","","",2282,[[]]],[11,"borrow","","",2282,[[]]],[11,"borrow_mut","","",2282,[[]]],[11,"try_from","","",2282,[[],["result",4]]],[11,"into","","",2282,[[]]],[11,"try_into","","",2282,[[],["result",4]]],[11,"type_id","","",2282,[[],["typeid",3]]],[11,"from","","",2283,[[]]],[11,"borrow","","",2283,[[]]],[11,"borrow_mut","","",2283,[[]]],[11,"try_from","","",2283,[[],["result",4]]],[11,"into","","",2283,[[]]],[11,"try_into","","",2283,[[],["result",4]]],[11,"type_id","","",2283,[[],["typeid",3]]],[11,"from","","",2284,[[]]],[11,"borrow","","",2284,[[]]],[11,"borrow_mut","","",2284,[[]]],[11,"try_from","","",2284,[[],["result",4]]],[11,"into","","",2284,[[]]],[11,"try_into","","",2284,[[],["result",4]]],[11,"type_id","","",2284,[[],["typeid",3]]],[11,"from","","",2285,[[]]],[11,"borrow","","",2285,[[]]],[11,"borrow_mut","","",2285,[[]]],[11,"try_from","","",2285,[[],["result",4]]],[11,"into","","",2285,[[]]],[11,"try_into","","",2285,[[],["result",4]]],[11,"type_id","","",2285,[[],["typeid",3]]],[11,"from","","",2286,[[]]],[11,"borrow","","",2286,[[]]],[11,"borrow_mut","","",2286,[[]]],[11,"try_from","","",2286,[[],["result",4]]],[11,"into","","",2286,[[]]],[11,"try_into","","",2286,[[],["result",4]]],[11,"type_id","","",2286,[[],["typeid",3]]],[11,"from","","",2287,[[]]],[11,"borrow","","",2287,[[]]],[11,"borrow_mut","","",2287,[[]]],[11,"try_from","","",2287,[[],["result",4]]],[11,"into","","",2287,[[]]],[11,"try_into","","",2287,[[],["result",4]]],[11,"type_id","","",2287,[[],["typeid",3]]],[11,"from","","",2288,[[]]],[11,"borrow","","",2288,[[]]],[11,"borrow_mut","","",2288,[[]]],[11,"try_from","","",2288,[[],["result",4]]],[11,"into","","",2288,[[]]],[11,"try_into","","",2288,[[],["result",4]]],[11,"type_id","","",2288,[[],["typeid",3]]],[11,"from","","",2290,[[]]],[11,"borrow","","",2290,[[]]],[11,"borrow_mut","","",2290,[[]]],[11,"try_from","","",2290,[[],["result",4]]],[11,"into","","",2290,[[]]],[11,"try_into","","",2290,[[],["result",4]]],[11,"type_id","","",2290,[[],["typeid",3]]],[11,"from","","",2277,[[]]],[11,"borrow","","",2277,[[]]],[11,"borrow_mut","","",2277,[[]]],[11,"try_from","","",2277,[[],["result",4]]],[11,"into","","",2277,[[]]],[11,"try_into","","",2277,[[],["result",4]]],[11,"type_id","","",2277,[[],["typeid",3]]],[11,"from","","",2278,[[]]],[11,"borrow","","",2278,[[]]],[11,"borrow_mut","","",2278,[[]]],[11,"try_from","","",2278,[[],["result",4]]],[11,"into","","",2278,[[]]],[11,"try_into","","",2278,[[],["result",4]]],[11,"type_id","","",2278,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::dadd","",2293,[[]]],[11,"borrow","","",2293,[[]]],[11,"borrow_mut","","",2293,[[]]],[11,"try_from","","",2293,[[],["result",4]]],[11,"into","","",2293,[[]]],[11,"try_into","","",2293,[[],["result",4]]],[11,"type_id","","",2293,[[],["typeid",3]]],[11,"from","","",2294,[[]]],[11,"borrow","","",2294,[[]]],[11,"borrow_mut","","",2294,[[]]],[11,"try_from","","",2294,[[],["result",4]]],[11,"into","","",2294,[[]]],[11,"try_into","","",2294,[[],["result",4]]],[11,"type_id","","",2294,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::status","",2297,[[]]],[11,"borrow","","",2297,[[]]],[11,"borrow_mut","","",2297,[[]]],[11,"try_from","","",2297,[[],["result",4]]],[11,"into","","",2297,[[]]],[11,"try_into","","",2297,[[],["result",4]]],[11,"type_id","","",2297,[[],["typeid",3]]],[11,"from","","",2298,[[]]],[11,"borrow","","",2298,[[]]],[11,"borrow_mut","","",2298,[[]]],[11,"try_from","","",2298,[[],["result",4]]],[11,"into","","",2298,[[]]],[11,"try_into","","",2298,[[],["result",4]]],[11,"type_id","","",2298,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::fsmstatus","",2302,[[]]],[11,"borrow","","",2302,[[]]],[11,"borrow_mut","","",2302,[[]]],[11,"try_from","","",2302,[[],["result",4]]],[11,"into","","",2302,[[]]],[11,"try_into","","",2302,[[],["result",4]]],[11,"type_id","","",2302,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::intenclr","",2306,[[]]],[11,"borrow","","",2306,[[]]],[11,"borrow_mut","","",2306,[[]]],[11,"try_from","","",2306,[[],["result",4]]],[11,"into","","",2306,[[]]],[11,"try_into","","",2306,[[],["result",4]]],[11,"type_id","","",2306,[[],["typeid",3]]],[11,"from","","",2307,[[]]],[11,"borrow","","",2307,[[]]],[11,"borrow_mut","","",2307,[[]]],[11,"try_from","","",2307,[[],["result",4]]],[11,"into","","",2307,[[]]],[11,"try_into","","",2307,[[],["result",4]]],[11,"type_id","","",2307,[[],["typeid",3]]],[11,"from","","",2308,[[]]],[11,"borrow","","",2308,[[]]],[11,"borrow_mut","","",2308,[[]]],[11,"try_from","","",2308,[[],["result",4]]],[11,"into","","",2308,[[]]],[11,"try_into","","",2308,[[],["result",4]]],[11,"type_id","","",2308,[[],["typeid",3]]],[11,"from","","",2309,[[]]],[11,"borrow","","",2309,[[]]],[11,"borrow_mut","","",2309,[[]]],[11,"try_from","","",2309,[[],["result",4]]],[11,"into","","",2309,[[]]],[11,"try_into","","",2309,[[],["result",4]]],[11,"type_id","","",2309,[[],["typeid",3]]],[11,"from","","",2310,[[]]],[11,"borrow","","",2310,[[]]],[11,"borrow_mut","","",2310,[[]]],[11,"try_from","","",2310,[[],["result",4]]],[11,"into","","",2310,[[]]],[11,"try_into","","",2310,[[],["result",4]]],[11,"type_id","","",2310,[[],["typeid",3]]],[11,"from","","",2311,[[]]],[11,"borrow","","",2311,[[]]],[11,"borrow_mut","","",2311,[[]]],[11,"try_from","","",2311,[[],["result",4]]],[11,"into","","",2311,[[]]],[11,"try_into","","",2311,[[],["result",4]]],[11,"type_id","","",2311,[[],["typeid",3]]],[11,"from","","",2312,[[]]],[11,"borrow","","",2312,[[]]],[11,"borrow_mut","","",2312,[[]]],[11,"try_from","","",2312,[[],["result",4]]],[11,"into","","",2312,[[]]],[11,"try_into","","",2312,[[],["result",4]]],[11,"type_id","","",2312,[[],["typeid",3]]],[11,"from","","",2313,[[]]],[11,"borrow","","",2313,[[]]],[11,"borrow_mut","","",2313,[[]]],[11,"try_from","","",2313,[[],["result",4]]],[11,"into","","",2313,[[]]],[11,"try_into","","",2313,[[],["result",4]]],[11,"type_id","","",2313,[[],["typeid",3]]],[11,"from","","",2314,[[]]],[11,"borrow","","",2314,[[]]],[11,"borrow_mut","","",2314,[[]]],[11,"try_from","","",2314,[[],["result",4]]],[11,"into","","",2314,[[]]],[11,"try_into","","",2314,[[],["result",4]]],[11,"type_id","","",2314,[[],["typeid",3]]],[11,"from","","",2315,[[]]],[11,"borrow","","",2315,[[]]],[11,"borrow_mut","","",2315,[[]]],[11,"try_from","","",2315,[[],["result",4]]],[11,"into","","",2315,[[]]],[11,"try_into","","",2315,[[],["result",4]]],[11,"type_id","","",2315,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::intenset","",2318,[[]]],[11,"borrow","","",2318,[[]]],[11,"borrow_mut","","",2318,[[]]],[11,"try_from","","",2318,[[],["result",4]]],[11,"into","","",2318,[[]]],[11,"try_into","","",2318,[[],["result",4]]],[11,"type_id","","",2318,[[],["typeid",3]]],[11,"from","","",2319,[[]]],[11,"borrow","","",2319,[[]]],[11,"borrow_mut","","",2319,[[]]],[11,"try_from","","",2319,[[],["result",4]]],[11,"into","","",2319,[[]]],[11,"try_into","","",2319,[[],["result",4]]],[11,"type_id","","",2319,[[],["typeid",3]]],[11,"from","","",2320,[[]]],[11,"borrow","","",2320,[[]]],[11,"borrow_mut","","",2320,[[]]],[11,"try_from","","",2320,[[],["result",4]]],[11,"into","","",2320,[[]]],[11,"try_into","","",2320,[[],["result",4]]],[11,"type_id","","",2320,[[],["typeid",3]]],[11,"from","","",2321,[[]]],[11,"borrow","","",2321,[[]]],[11,"borrow_mut","","",2321,[[]]],[11,"try_from","","",2321,[[],["result",4]]],[11,"into","","",2321,[[]]],[11,"try_into","","",2321,[[],["result",4]]],[11,"type_id","","",2321,[[],["typeid",3]]],[11,"from","","",2322,[[]]],[11,"borrow","","",2322,[[]]],[11,"borrow_mut","","",2322,[[]]],[11,"try_from","","",2322,[[],["result",4]]],[11,"into","","",2322,[[]]],[11,"try_into","","",2322,[[],["result",4]]],[11,"type_id","","",2322,[[],["typeid",3]]],[11,"from","","",2323,[[]]],[11,"borrow","","",2323,[[]]],[11,"borrow_mut","","",2323,[[]]],[11,"try_from","","",2323,[[],["result",4]]],[11,"into","","",2323,[[]]],[11,"try_into","","",2323,[[],["result",4]]],[11,"type_id","","",2323,[[],["typeid",3]]],[11,"from","","",2324,[[]]],[11,"borrow","","",2324,[[]]],[11,"borrow_mut","","",2324,[[]]],[11,"try_from","","",2324,[[],["result",4]]],[11,"into","","",2324,[[]]],[11,"try_into","","",2324,[[],["result",4]]],[11,"type_id","","",2324,[[],["typeid",3]]],[11,"from","","",2325,[[]]],[11,"borrow","","",2325,[[]]],[11,"borrow_mut","","",2325,[[]]],[11,"try_from","","",2325,[[],["result",4]]],[11,"into","","",2325,[[]]],[11,"try_into","","",2325,[[],["result",4]]],[11,"type_id","","",2325,[[],["typeid",3]]],[11,"from","","",2326,[[]]],[11,"borrow","","",2326,[[]]],[11,"borrow_mut","","",2326,[[]]],[11,"try_from","","",2326,[[],["result",4]]],[11,"into","","",2326,[[]]],[11,"try_into","","",2326,[[],["result",4]]],[11,"type_id","","",2326,[[],["typeid",3]]],[11,"from","","",2327,[[]]],[11,"borrow","","",2327,[[]]],[11,"borrow_mut","","",2327,[[]]],[11,"try_from","","",2327,[[],["result",4]]],[11,"into","","",2327,[[]]],[11,"try_into","","",2327,[[],["result",4]]],[11,"type_id","","",2327,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::intflag","",2330,[[]]],[11,"borrow","","",2330,[[]]],[11,"borrow_mut","","",2330,[[]]],[11,"try_from","","",2330,[[],["result",4]]],[11,"into","","",2330,[[]]],[11,"try_into","","",2330,[[],["result",4]]],[11,"type_id","","",2330,[[],["typeid",3]]],[11,"from","","",2331,[[]]],[11,"borrow","","",2331,[[]]],[11,"borrow_mut","","",2331,[[]]],[11,"try_from","","",2331,[[],["result",4]]],[11,"into","","",2331,[[]]],[11,"try_into","","",2331,[[],["result",4]]],[11,"type_id","","",2331,[[],["typeid",3]]],[11,"from","","",2332,[[]]],[11,"borrow","","",2332,[[]]],[11,"borrow_mut","","",2332,[[]]],[11,"try_from","","",2332,[[],["result",4]]],[11,"into","","",2332,[[]]],[11,"try_into","","",2332,[[],["result",4]]],[11,"type_id","","",2332,[[],["typeid",3]]],[11,"from","","",2333,[[]]],[11,"borrow","","",2333,[[]]],[11,"borrow_mut","","",2333,[[]]],[11,"try_from","","",2333,[[],["result",4]]],[11,"into","","",2333,[[]]],[11,"try_into","","",2333,[[],["result",4]]],[11,"type_id","","",2333,[[],["typeid",3]]],[11,"from","","",2334,[[]]],[11,"borrow","","",2334,[[]]],[11,"borrow_mut","","",2334,[[]]],[11,"try_from","","",2334,[[],["result",4]]],[11,"into","","",2334,[[]]],[11,"try_into","","",2334,[[],["result",4]]],[11,"type_id","","",2334,[[],["typeid",3]]],[11,"from","","",2335,[[]]],[11,"borrow","","",2335,[[]]],[11,"borrow_mut","","",2335,[[]]],[11,"try_from","","",2335,[[],["result",4]]],[11,"into","","",2335,[[]]],[11,"try_into","","",2335,[[],["result",4]]],[11,"type_id","","",2335,[[],["typeid",3]]],[11,"from","","",2336,[[]]],[11,"borrow","","",2336,[[]]],[11,"borrow_mut","","",2336,[[]]],[11,"try_from","","",2336,[[],["result",4]]],[11,"into","","",2336,[[]]],[11,"try_into","","",2336,[[],["result",4]]],[11,"type_id","","",2336,[[],["typeid",3]]],[11,"from","","",2337,[[]]],[11,"borrow","","",2337,[[]]],[11,"borrow_mut","","",2337,[[]]],[11,"try_from","","",2337,[[],["result",4]]],[11,"into","","",2337,[[]]],[11,"try_into","","",2337,[[],["result",4]]],[11,"type_id","","",2337,[[],["typeid",3]]],[11,"from","","",2338,[[]]],[11,"borrow","","",2338,[[]]],[11,"borrow_mut","","",2338,[[]]],[11,"try_from","","",2338,[[],["result",4]]],[11,"into","","",2338,[[]]],[11,"try_into","","",2338,[[],["result",4]]],[11,"type_id","","",2338,[[],["typeid",3]]],[11,"from","","",2339,[[]]],[11,"borrow","","",2339,[[]]],[11,"borrow_mut","","",2339,[[]]],[11,"try_from","","",2339,[[],["result",4]]],[11,"into","","",2339,[[]]],[11,"try_into","","",2339,[[],["result",4]]],[11,"type_id","","",2339,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::descadd","",2343,[[]]],[11,"borrow","","",2343,[[]]],[11,"borrow_mut","","",2343,[[]]],[11,"try_from","","",2343,[[],["result",4]]],[11,"into","","",2343,[[]]],[11,"try_into","","",2343,[[],["result",4]]],[11,"type_id","","",2343,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::padcal","",2346,[[]]],[11,"borrow","","",2346,[[]]],[11,"borrow_mut","","",2346,[[]]],[11,"try_from","","",2346,[[],["result",4]]],[11,"into","","",2346,[[]]],[11,"try_into","","",2346,[[],["result",4]]],[11,"type_id","","",2346,[[],["typeid",3]]],[11,"from","","",2347,[[]]],[11,"borrow","","",2347,[[]]],[11,"borrow_mut","","",2347,[[]]],[11,"try_from","","",2347,[[],["result",4]]],[11,"into","","",2347,[[]]],[11,"try_into","","",2347,[[],["result",4]]],[11,"type_id","","",2347,[[],["typeid",3]]],[11,"from","","",2348,[[]]],[11,"borrow","","",2348,[[]]],[11,"borrow_mut","","",2348,[[]]],[11,"try_from","","",2348,[[],["result",4]]],[11,"into","","",2348,[[]]],[11,"try_into","","",2348,[[],["result",4]]],[11,"type_id","","",2348,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::epcfg","",2351,[[]]],[11,"borrow","","",2351,[[]]],[11,"borrow_mut","","",2351,[[]]],[11,"try_from","","",2351,[[],["result",4]]],[11,"into","","",2351,[[]]],[11,"try_into","","",2351,[[],["result",4]]],[11,"type_id","","",2351,[[],["typeid",3]]],[11,"from","","",2352,[[]]],[11,"borrow","","",2352,[[]]],[11,"borrow_mut","","",2352,[[]]],[11,"try_from","","",2352,[[],["result",4]]],[11,"into","","",2352,[[]]],[11,"try_into","","",2352,[[],["result",4]]],[11,"type_id","","",2352,[[],["typeid",3]]],[11,"from","","",2353,[[]]],[11,"borrow","","",2353,[[]]],[11,"borrow_mut","","",2353,[[]]],[11,"try_from","","",2353,[[],["result",4]]],[11,"into","","",2353,[[]]],[11,"try_into","","",2353,[[],["result",4]]],[11,"type_id","","",2353,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::epstatusclr","",2356,[[]]],[11,"borrow","","",2356,[[]]],[11,"borrow_mut","","",2356,[[]]],[11,"try_from","","",2356,[[],["result",4]]],[11,"into","","",2356,[[]]],[11,"try_into","","",2356,[[],["result",4]]],[11,"type_id","","",2356,[[],["typeid",3]]],[11,"from","","",2357,[[]]],[11,"borrow","","",2357,[[]]],[11,"borrow_mut","","",2357,[[]]],[11,"try_from","","",2357,[[],["result",4]]],[11,"into","","",2357,[[]]],[11,"try_into","","",2357,[[],["result",4]]],[11,"type_id","","",2357,[[],["typeid",3]]],[11,"from","","",2358,[[]]],[11,"borrow","","",2358,[[]]],[11,"borrow_mut","","",2358,[[]]],[11,"try_from","","",2358,[[],["result",4]]],[11,"into","","",2358,[[]]],[11,"try_into","","",2358,[[],["result",4]]],[11,"type_id","","",2358,[[],["typeid",3]]],[11,"from","","",2359,[[]]],[11,"borrow","","",2359,[[]]],[11,"borrow_mut","","",2359,[[]]],[11,"try_from","","",2359,[[],["result",4]]],[11,"into","","",2359,[[]]],[11,"try_into","","",2359,[[],["result",4]]],[11,"type_id","","",2359,[[],["typeid",3]]],[11,"from","","",2360,[[]]],[11,"borrow","","",2360,[[]]],[11,"borrow_mut","","",2360,[[]]],[11,"try_from","","",2360,[[],["result",4]]],[11,"into","","",2360,[[]]],[11,"try_into","","",2360,[[],["result",4]]],[11,"type_id","","",2360,[[],["typeid",3]]],[11,"from","","",2361,[[]]],[11,"borrow","","",2361,[[]]],[11,"borrow_mut","","",2361,[[]]],[11,"try_from","","",2361,[[],["result",4]]],[11,"into","","",2361,[[]]],[11,"try_into","","",2361,[[],["result",4]]],[11,"type_id","","",2361,[[],["typeid",3]]],[11,"from","","",2362,[[]]],[11,"borrow","","",2362,[[]]],[11,"borrow_mut","","",2362,[[]]],[11,"try_from","","",2362,[[],["result",4]]],[11,"into","","",2362,[[]]],[11,"try_into","","",2362,[[],["result",4]]],[11,"type_id","","",2362,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::epstatusset","",2364,[[]]],[11,"borrow","","",2364,[[]]],[11,"borrow_mut","","",2364,[[]]],[11,"try_from","","",2364,[[],["result",4]]],[11,"into","","",2364,[[]]],[11,"try_into","","",2364,[[],["result",4]]],[11,"type_id","","",2364,[[],["typeid",3]]],[11,"from","","",2365,[[]]],[11,"borrow","","",2365,[[]]],[11,"borrow_mut","","",2365,[[]]],[11,"try_from","","",2365,[[],["result",4]]],[11,"into","","",2365,[[]]],[11,"try_into","","",2365,[[],["result",4]]],[11,"type_id","","",2365,[[],["typeid",3]]],[11,"from","","",2366,[[]]],[11,"borrow","","",2366,[[]]],[11,"borrow_mut","","",2366,[[]]],[11,"try_from","","",2366,[[],["result",4]]],[11,"into","","",2366,[[]]],[11,"try_into","","",2366,[[],["result",4]]],[11,"type_id","","",2366,[[],["typeid",3]]],[11,"from","","",2367,[[]]],[11,"borrow","","",2367,[[]]],[11,"borrow_mut","","",2367,[[]]],[11,"try_from","","",2367,[[],["result",4]]],[11,"into","","",2367,[[]]],[11,"try_into","","",2367,[[],["result",4]]],[11,"type_id","","",2367,[[],["typeid",3]]],[11,"from","","",2368,[[]]],[11,"borrow","","",2368,[[]]],[11,"borrow_mut","","",2368,[[]]],[11,"try_from","","",2368,[[],["result",4]]],[11,"into","","",2368,[[]]],[11,"try_into","","",2368,[[],["result",4]]],[11,"type_id","","",2368,[[],["typeid",3]]],[11,"from","","",2369,[[]]],[11,"borrow","","",2369,[[]]],[11,"borrow_mut","","",2369,[[]]],[11,"try_from","","",2369,[[],["result",4]]],[11,"into","","",2369,[[]]],[11,"try_into","","",2369,[[],["result",4]]],[11,"type_id","","",2369,[[],["typeid",3]]],[11,"from","","",2370,[[]]],[11,"borrow","","",2370,[[]]],[11,"borrow_mut","","",2370,[[]]],[11,"try_from","","",2370,[[],["result",4]]],[11,"into","","",2370,[[]]],[11,"try_into","","",2370,[[],["result",4]]],[11,"type_id","","",2370,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::epintflag","",2373,[[]]],[11,"borrow","","",2373,[[]]],[11,"borrow_mut","","",2373,[[]]],[11,"try_from","","",2373,[[],["result",4]]],[11,"into","","",2373,[[]]],[11,"try_into","","",2373,[[],["result",4]]],[11,"type_id","","",2373,[[],["typeid",3]]],[11,"from","","",2374,[[]]],[11,"borrow","","",2374,[[]]],[11,"borrow_mut","","",2374,[[]]],[11,"try_from","","",2374,[[],["result",4]]],[11,"into","","",2374,[[]]],[11,"try_into","","",2374,[[],["result",4]]],[11,"type_id","","",2374,[[],["typeid",3]]],[11,"from","","",2375,[[]]],[11,"borrow","","",2375,[[]]],[11,"borrow_mut","","",2375,[[]]],[11,"try_from","","",2375,[[],["result",4]]],[11,"into","","",2375,[[]]],[11,"try_into","","",2375,[[],["result",4]]],[11,"type_id","","",2375,[[],["typeid",3]]],[11,"from","","",2376,[[]]],[11,"borrow","","",2376,[[]]],[11,"borrow_mut","","",2376,[[]]],[11,"try_from","","",2376,[[],["result",4]]],[11,"into","","",2376,[[]]],[11,"try_into","","",2376,[[],["result",4]]],[11,"type_id","","",2376,[[],["typeid",3]]],[11,"from","","",2377,[[]]],[11,"borrow","","",2377,[[]]],[11,"borrow_mut","","",2377,[[]]],[11,"try_from","","",2377,[[],["result",4]]],[11,"into","","",2377,[[]]],[11,"try_into","","",2377,[[],["result",4]]],[11,"type_id","","",2377,[[],["typeid",3]]],[11,"from","","",2378,[[]]],[11,"borrow","","",2378,[[]]],[11,"borrow_mut","","",2378,[[]]],[11,"try_from","","",2378,[[],["result",4]]],[11,"into","","",2378,[[]]],[11,"try_into","","",2378,[[],["result",4]]],[11,"type_id","","",2378,[[],["typeid",3]]],[11,"from","","",2379,[[]]],[11,"borrow","","",2379,[[]]],[11,"borrow_mut","","",2379,[[]]],[11,"try_from","","",2379,[[],["result",4]]],[11,"into","","",2379,[[]]],[11,"try_into","","",2379,[[],["result",4]]],[11,"type_id","","",2379,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::epintenclr","",2382,[[]]],[11,"borrow","","",2382,[[]]],[11,"borrow_mut","","",2382,[[]]],[11,"try_from","","",2382,[[],["result",4]]],[11,"into","","",2382,[[]]],[11,"try_into","","",2382,[[],["result",4]]],[11,"type_id","","",2382,[[],["typeid",3]]],[11,"from","","",2383,[[]]],[11,"borrow","","",2383,[[]]],[11,"borrow_mut","","",2383,[[]]],[11,"try_from","","",2383,[[],["result",4]]],[11,"into","","",2383,[[]]],[11,"try_into","","",2383,[[],["result",4]]],[11,"type_id","","",2383,[[],["typeid",3]]],[11,"from","","",2384,[[]]],[11,"borrow","","",2384,[[]]],[11,"borrow_mut","","",2384,[[]]],[11,"try_from","","",2384,[[],["result",4]]],[11,"into","","",2384,[[]]],[11,"try_into","","",2384,[[],["result",4]]],[11,"type_id","","",2384,[[],["typeid",3]]],[11,"from","","",2385,[[]]],[11,"borrow","","",2385,[[]]],[11,"borrow_mut","","",2385,[[]]],[11,"try_from","","",2385,[[],["result",4]]],[11,"into","","",2385,[[]]],[11,"try_into","","",2385,[[],["result",4]]],[11,"type_id","","",2385,[[],["typeid",3]]],[11,"from","","",2386,[[]]],[11,"borrow","","",2386,[[]]],[11,"borrow_mut","","",2386,[[]]],[11,"try_from","","",2386,[[],["result",4]]],[11,"into","","",2386,[[]]],[11,"try_into","","",2386,[[],["result",4]]],[11,"type_id","","",2386,[[],["typeid",3]]],[11,"from","","",2387,[[]]],[11,"borrow","","",2387,[[]]],[11,"borrow_mut","","",2387,[[]]],[11,"try_from","","",2387,[[],["result",4]]],[11,"into","","",2387,[[]]],[11,"try_into","","",2387,[[],["result",4]]],[11,"type_id","","",2387,[[],["typeid",3]]],[11,"from","","",2388,[[]]],[11,"borrow","","",2388,[[]]],[11,"borrow_mut","","",2388,[[]]],[11,"try_from","","",2388,[[],["result",4]]],[11,"into","","",2388,[[]]],[11,"try_into","","",2388,[[],["result",4]]],[11,"type_id","","",2388,[[],["typeid",3]]],[11,"from","atsamd21g::usb::device::epintenset","",2391,[[]]],[11,"borrow","","",2391,[[]]],[11,"borrow_mut","","",2391,[[]]],[11,"try_from","","",2391,[[],["result",4]]],[11,"into","","",2391,[[]]],[11,"try_into","","",2391,[[],["result",4]]],[11,"type_id","","",2391,[[],["typeid",3]]],[11,"from","","",2392,[[]]],[11,"borrow","","",2392,[[]]],[11,"borrow_mut","","",2392,[[]]],[11,"try_from","","",2392,[[],["result",4]]],[11,"into","","",2392,[[]]],[11,"try_into","","",2392,[[],["result",4]]],[11,"type_id","","",2392,[[],["typeid",3]]],[11,"from","","",2393,[[]]],[11,"borrow","","",2393,[[]]],[11,"borrow_mut","","",2393,[[]]],[11,"try_from","","",2393,[[],["result",4]]],[11,"into","","",2393,[[]]],[11,"try_into","","",2393,[[],["result",4]]],[11,"type_id","","",2393,[[],["typeid",3]]],[11,"from","","",2394,[[]]],[11,"borrow","","",2394,[[]]],[11,"borrow_mut","","",2394,[[]]],[11,"try_from","","",2394,[[],["result",4]]],[11,"into","","",2394,[[]]],[11,"try_into","","",2394,[[],["result",4]]],[11,"type_id","","",2394,[[],["typeid",3]]],[11,"from","","",2395,[[]]],[11,"borrow","","",2395,[[]]],[11,"borrow_mut","","",2395,[[]]],[11,"try_from","","",2395,[[],["result",4]]],[11,"into","","",2395,[[]]],[11,"try_into","","",2395,[[],["result",4]]],[11,"type_id","","",2395,[[],["typeid",3]]],[11,"from","","",2396,[[]]],[11,"borrow","","",2396,[[]]],[11,"borrow_mut","","",2396,[[]]],[11,"try_from","","",2396,[[],["result",4]]],[11,"into","","",2396,[[]]],[11,"try_into","","",2396,[[],["result",4]]],[11,"type_id","","",2396,[[],["typeid",3]]],[11,"from","","",2397,[[]]],[11,"borrow","","",2397,[[]]],[11,"borrow_mut","","",2397,[[]]],[11,"try_from","","",2397,[[],["result",4]]],[11,"into","","",2397,[[]]],[11,"try_into","","",2397,[[],["result",4]]],[11,"type_id","","",2397,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::ctrla","",2401,[[]]],[11,"borrow","","",2401,[[]]],[11,"borrow_mut","","",2401,[[]]],[11,"try_from","","",2401,[[],["result",4]]],[11,"into","","",2401,[[]]],[11,"try_into","","",2401,[[],["result",4]]],[11,"type_id","","",2401,[[],["typeid",3]]],[11,"from","","",2402,[[]]],[11,"borrow","","",2402,[[]]],[11,"borrow_mut","","",2402,[[]]],[11,"try_from","","",2402,[[],["result",4]]],[11,"into","","",2402,[[]]],[11,"try_into","","",2402,[[],["result",4]]],[11,"type_id","","",2402,[[],["typeid",3]]],[11,"from","","",2403,[[]]],[11,"borrow","","",2403,[[]]],[11,"borrow_mut","","",2403,[[]]],[11,"try_from","","",2403,[[],["result",4]]],[11,"into","","",2403,[[]]],[11,"try_into","","",2403,[[],["result",4]]],[11,"type_id","","",2403,[[],["typeid",3]]],[11,"from","","",2405,[[]]],[11,"borrow","","",2405,[[]]],[11,"borrow_mut","","",2405,[[]]],[11,"try_from","","",2405,[[],["result",4]]],[11,"into","","",2405,[[]]],[11,"try_into","","",2405,[[],["result",4]]],[11,"type_id","","",2405,[[],["typeid",3]]],[11,"from","","",2400,[[]]],[11,"borrow","","",2400,[[]]],[11,"borrow_mut","","",2400,[[]]],[11,"try_from","","",2400,[[],["result",4]]],[11,"into","","",2400,[[]]],[11,"try_into","","",2400,[[],["result",4]]],[11,"type_id","","",2400,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::qosctrl","",2412,[[]]],[11,"borrow","","",2412,[[]]],[11,"borrow_mut","","",2412,[[]]],[11,"try_from","","",2412,[[],["result",4]]],[11,"into","","",2412,[[]]],[11,"try_into","","",2412,[[],["result",4]]],[11,"type_id","","",2412,[[],["typeid",3]]],[11,"from","","",2414,[[]]],[11,"borrow","","",2414,[[]]],[11,"borrow_mut","","",2414,[[]]],[11,"try_from","","",2414,[[],["result",4]]],[11,"into","","",2414,[[]]],[11,"try_into","","",2414,[[],["result",4]]],[11,"type_id","","",2414,[[],["typeid",3]]],[11,"from","","",2409,[[]]],[11,"borrow","","",2409,[[]]],[11,"borrow_mut","","",2409,[[]]],[11,"try_from","","",2409,[[],["result",4]]],[11,"into","","",2409,[[]]],[11,"try_into","","",2409,[[],["result",4]]],[11,"type_id","","",2409,[[],["typeid",3]]],[11,"from","","",2410,[[]]],[11,"borrow","","",2410,[[]]],[11,"borrow_mut","","",2410,[[]]],[11,"try_from","","",2410,[[],["result",4]]],[11,"into","","",2410,[[]]],[11,"try_into","","",2410,[[],["result",4]]],[11,"type_id","","",2410,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::ctrlb","",2418,[[]]],[11,"borrow","","",2418,[[]]],[11,"borrow_mut","","",2418,[[]]],[11,"try_from","","",2418,[[],["result",4]]],[11,"into","","",2418,[[]]],[11,"try_into","","",2418,[[],["result",4]]],[11,"type_id","","",2418,[[],["typeid",3]]],[11,"from","","",2420,[[]]],[11,"borrow","","",2420,[[]]],[11,"borrow_mut","","",2420,[[]]],[11,"try_from","","",2420,[[],["result",4]]],[11,"into","","",2420,[[]]],[11,"try_into","","",2420,[[],["result",4]]],[11,"type_id","","",2420,[[],["typeid",3]]],[11,"from","","",2421,[[]]],[11,"borrow","","",2421,[[]]],[11,"borrow_mut","","",2421,[[]]],[11,"try_from","","",2421,[[],["result",4]]],[11,"into","","",2421,[[]]],[11,"try_into","","",2421,[[],["result",4]]],[11,"type_id","","",2421,[[],["typeid",3]]],[11,"from","","",2422,[[]]],[11,"borrow","","",2422,[[]]],[11,"borrow_mut","","",2422,[[]]],[11,"try_from","","",2422,[[],["result",4]]],[11,"into","","",2422,[[]]],[11,"try_into","","",2422,[[],["result",4]]],[11,"type_id","","",2422,[[],["typeid",3]]],[11,"from","","",2423,[[]]],[11,"borrow","","",2423,[[]]],[11,"borrow_mut","","",2423,[[]]],[11,"try_from","","",2423,[[],["result",4]]],[11,"into","","",2423,[[]]],[11,"try_into","","",2423,[[],["result",4]]],[11,"type_id","","",2423,[[],["typeid",3]]],[11,"from","","",2424,[[]]],[11,"borrow","","",2424,[[]]],[11,"borrow_mut","","",2424,[[]]],[11,"try_from","","",2424,[[],["result",4]]],[11,"into","","",2424,[[]]],[11,"try_into","","",2424,[[],["result",4]]],[11,"type_id","","",2424,[[],["typeid",3]]],[11,"from","","",2425,[[]]],[11,"borrow","","",2425,[[]]],[11,"borrow_mut","","",2425,[[]]],[11,"try_from","","",2425,[[],["result",4]]],[11,"into","","",2425,[[]]],[11,"try_into","","",2425,[[],["result",4]]],[11,"type_id","","",2425,[[],["typeid",3]]],[11,"from","","",2426,[[]]],[11,"borrow","","",2426,[[]]],[11,"borrow_mut","","",2426,[[]]],[11,"try_from","","",2426,[[],["result",4]]],[11,"into","","",2426,[[]]],[11,"try_into","","",2426,[[],["result",4]]],[11,"type_id","","",2426,[[],["typeid",3]]],[11,"from","","",2417,[[]]],[11,"borrow","","",2417,[[]]],[11,"borrow_mut","","",2417,[[]]],[11,"try_from","","",2417,[[],["result",4]]],[11,"into","","",2417,[[]]],[11,"try_into","","",2417,[[],["result",4]]],[11,"type_id","","",2417,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::hsofc","",2429,[[]]],[11,"borrow","","",2429,[[]]],[11,"borrow_mut","","",2429,[[]]],[11,"try_from","","",2429,[[],["result",4]]],[11,"into","","",2429,[[]]],[11,"try_into","","",2429,[[],["result",4]]],[11,"type_id","","",2429,[[],["typeid",3]]],[11,"from","","",2430,[[]]],[11,"borrow","","",2430,[[]]],[11,"borrow_mut","","",2430,[[]]],[11,"try_from","","",2430,[[],["result",4]]],[11,"into","","",2430,[[]]],[11,"try_into","","",2430,[[],["result",4]]],[11,"type_id","","",2430,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::status","",2433,[[]]],[11,"borrow","","",2433,[[]]],[11,"borrow_mut","","",2433,[[]]],[11,"try_from","","",2433,[[],["result",4]]],[11,"into","","",2433,[[]]],[11,"try_into","","",2433,[[],["result",4]]],[11,"type_id","","",2433,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::fsmstatus","",2436,[[]]],[11,"borrow","","",2436,[[]]],[11,"borrow_mut","","",2436,[[]]],[11,"try_from","","",2436,[[],["result",4]]],[11,"into","","",2436,[[]]],[11,"try_into","","",2436,[[],["result",4]]],[11,"type_id","","",2436,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::fnum","",2439,[[]]],[11,"borrow","","",2439,[[]]],[11,"borrow_mut","","",2439,[[]]],[11,"try_from","","",2439,[[],["result",4]]],[11,"into","","",2439,[[]]],[11,"try_into","","",2439,[[],["result",4]]],[11,"type_id","","",2439,[[],["typeid",3]]],[11,"from","","",2440,[[]]],[11,"borrow","","",2440,[[]]],[11,"borrow_mut","","",2440,[[]]],[11,"try_from","","",2440,[[],["result",4]]],[11,"into","","",2440,[[]]],[11,"try_into","","",2440,[[],["result",4]]],[11,"type_id","","",2440,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::intenclr","",2444,[[]]],[11,"borrow","","",2444,[[]]],[11,"borrow_mut","","",2444,[[]]],[11,"try_from","","",2444,[[],["result",4]]],[11,"into","","",2444,[[]]],[11,"try_into","","",2444,[[],["result",4]]],[11,"type_id","","",2444,[[],["typeid",3]]],[11,"from","","",2445,[[]]],[11,"borrow","","",2445,[[]]],[11,"borrow_mut","","",2445,[[]]],[11,"try_from","","",2445,[[],["result",4]]],[11,"into","","",2445,[[]]],[11,"try_into","","",2445,[[],["result",4]]],[11,"type_id","","",2445,[[],["typeid",3]]],[11,"from","","",2446,[[]]],[11,"borrow","","",2446,[[]]],[11,"borrow_mut","","",2446,[[]]],[11,"try_from","","",2446,[[],["result",4]]],[11,"into","","",2446,[[]]],[11,"try_into","","",2446,[[],["result",4]]],[11,"type_id","","",2446,[[],["typeid",3]]],[11,"from","","",2447,[[]]],[11,"borrow","","",2447,[[]]],[11,"borrow_mut","","",2447,[[]]],[11,"try_from","","",2447,[[],["result",4]]],[11,"into","","",2447,[[]]],[11,"try_into","","",2447,[[],["result",4]]],[11,"type_id","","",2447,[[],["typeid",3]]],[11,"from","","",2448,[[]]],[11,"borrow","","",2448,[[]]],[11,"borrow_mut","","",2448,[[]]],[11,"try_from","","",2448,[[],["result",4]]],[11,"into","","",2448,[[]]],[11,"try_into","","",2448,[[],["result",4]]],[11,"type_id","","",2448,[[],["typeid",3]]],[11,"from","","",2449,[[]]],[11,"borrow","","",2449,[[]]],[11,"borrow_mut","","",2449,[[]]],[11,"try_from","","",2449,[[],["result",4]]],[11,"into","","",2449,[[]]],[11,"try_into","","",2449,[[],["result",4]]],[11,"type_id","","",2449,[[],["typeid",3]]],[11,"from","","",2450,[[]]],[11,"borrow","","",2450,[[]]],[11,"borrow_mut","","",2450,[[]]],[11,"try_from","","",2450,[[],["result",4]]],[11,"into","","",2450,[[]]],[11,"try_into","","",2450,[[],["result",4]]],[11,"type_id","","",2450,[[],["typeid",3]]],[11,"from","","",2451,[[]]],[11,"borrow","","",2451,[[]]],[11,"borrow_mut","","",2451,[[]]],[11,"try_from","","",2451,[[],["result",4]]],[11,"into","","",2451,[[]]],[11,"try_into","","",2451,[[],["result",4]]],[11,"type_id","","",2451,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::intenset","",2454,[[]]],[11,"borrow","","",2454,[[]]],[11,"borrow_mut","","",2454,[[]]],[11,"try_from","","",2454,[[],["result",4]]],[11,"into","","",2454,[[]]],[11,"try_into","","",2454,[[],["result",4]]],[11,"type_id","","",2454,[[],["typeid",3]]],[11,"from","","",2455,[[]]],[11,"borrow","","",2455,[[]]],[11,"borrow_mut","","",2455,[[]]],[11,"try_from","","",2455,[[],["result",4]]],[11,"into","","",2455,[[]]],[11,"try_into","","",2455,[[],["result",4]]],[11,"type_id","","",2455,[[],["typeid",3]]],[11,"from","","",2456,[[]]],[11,"borrow","","",2456,[[]]],[11,"borrow_mut","","",2456,[[]]],[11,"try_from","","",2456,[[],["result",4]]],[11,"into","","",2456,[[]]],[11,"try_into","","",2456,[[],["result",4]]],[11,"type_id","","",2456,[[],["typeid",3]]],[11,"from","","",2457,[[]]],[11,"borrow","","",2457,[[]]],[11,"borrow_mut","","",2457,[[]]],[11,"try_from","","",2457,[[],["result",4]]],[11,"into","","",2457,[[]]],[11,"try_into","","",2457,[[],["result",4]]],[11,"type_id","","",2457,[[],["typeid",3]]],[11,"from","","",2458,[[]]],[11,"borrow","","",2458,[[]]],[11,"borrow_mut","","",2458,[[]]],[11,"try_from","","",2458,[[],["result",4]]],[11,"into","","",2458,[[]]],[11,"try_into","","",2458,[[],["result",4]]],[11,"type_id","","",2458,[[],["typeid",3]]],[11,"from","","",2459,[[]]],[11,"borrow","","",2459,[[]]],[11,"borrow_mut","","",2459,[[]]],[11,"try_from","","",2459,[[],["result",4]]],[11,"into","","",2459,[[]]],[11,"try_into","","",2459,[[],["result",4]]],[11,"type_id","","",2459,[[],["typeid",3]]],[11,"from","","",2460,[[]]],[11,"borrow","","",2460,[[]]],[11,"borrow_mut","","",2460,[[]]],[11,"try_from","","",2460,[[],["result",4]]],[11,"into","","",2460,[[]]],[11,"try_into","","",2460,[[],["result",4]]],[11,"type_id","","",2460,[[],["typeid",3]]],[11,"from","","",2461,[[]]],[11,"borrow","","",2461,[[]]],[11,"borrow_mut","","",2461,[[]]],[11,"try_from","","",2461,[[],["result",4]]],[11,"into","","",2461,[[]]],[11,"try_into","","",2461,[[],["result",4]]],[11,"type_id","","",2461,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::intflag","",2464,[[]]],[11,"borrow","","",2464,[[]]],[11,"borrow_mut","","",2464,[[]]],[11,"try_from","","",2464,[[],["result",4]]],[11,"into","","",2464,[[]]],[11,"try_into","","",2464,[[],["result",4]]],[11,"type_id","","",2464,[[],["typeid",3]]],[11,"from","","",2465,[[]]],[11,"borrow","","",2465,[[]]],[11,"borrow_mut","","",2465,[[]]],[11,"try_from","","",2465,[[],["result",4]]],[11,"into","","",2465,[[]]],[11,"try_into","","",2465,[[],["result",4]]],[11,"type_id","","",2465,[[],["typeid",3]]],[11,"from","","",2466,[[]]],[11,"borrow","","",2466,[[]]],[11,"borrow_mut","","",2466,[[]]],[11,"try_from","","",2466,[[],["result",4]]],[11,"into","","",2466,[[]]],[11,"try_into","","",2466,[[],["result",4]]],[11,"type_id","","",2466,[[],["typeid",3]]],[11,"from","","",2467,[[]]],[11,"borrow","","",2467,[[]]],[11,"borrow_mut","","",2467,[[]]],[11,"try_from","","",2467,[[],["result",4]]],[11,"into","","",2467,[[]]],[11,"try_into","","",2467,[[],["result",4]]],[11,"type_id","","",2467,[[],["typeid",3]]],[11,"from","","",2468,[[]]],[11,"borrow","","",2468,[[]]],[11,"borrow_mut","","",2468,[[]]],[11,"try_from","","",2468,[[],["result",4]]],[11,"into","","",2468,[[]]],[11,"try_into","","",2468,[[],["result",4]]],[11,"type_id","","",2468,[[],["typeid",3]]],[11,"from","","",2469,[[]]],[11,"borrow","","",2469,[[]]],[11,"borrow_mut","","",2469,[[]]],[11,"try_from","","",2469,[[],["result",4]]],[11,"into","","",2469,[[]]],[11,"try_into","","",2469,[[],["result",4]]],[11,"type_id","","",2469,[[],["typeid",3]]],[11,"from","","",2470,[[]]],[11,"borrow","","",2470,[[]]],[11,"borrow_mut","","",2470,[[]]],[11,"try_from","","",2470,[[],["result",4]]],[11,"into","","",2470,[[]]],[11,"try_into","","",2470,[[],["result",4]]],[11,"type_id","","",2470,[[],["typeid",3]]],[11,"from","","",2471,[[]]],[11,"borrow","","",2471,[[]]],[11,"borrow_mut","","",2471,[[]]],[11,"try_from","","",2471,[[],["result",4]]],[11,"into","","",2471,[[]]],[11,"try_into","","",2471,[[],["result",4]]],[11,"type_id","","",2471,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::descadd","",2475,[[]]],[11,"borrow","","",2475,[[]]],[11,"borrow_mut","","",2475,[[]]],[11,"try_from","","",2475,[[],["result",4]]],[11,"into","","",2475,[[]]],[11,"try_into","","",2475,[[],["result",4]]],[11,"type_id","","",2475,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::padcal","",2478,[[]]],[11,"borrow","","",2478,[[]]],[11,"borrow_mut","","",2478,[[]]],[11,"try_from","","",2478,[[],["result",4]]],[11,"into","","",2478,[[]]],[11,"try_into","","",2478,[[],["result",4]]],[11,"type_id","","",2478,[[],["typeid",3]]],[11,"from","","",2479,[[]]],[11,"borrow","","",2479,[[]]],[11,"borrow_mut","","",2479,[[]]],[11,"try_from","","",2479,[[],["result",4]]],[11,"into","","",2479,[[]]],[11,"try_into","","",2479,[[],["result",4]]],[11,"type_id","","",2479,[[],["typeid",3]]],[11,"from","","",2480,[[]]],[11,"borrow","","",2480,[[]]],[11,"borrow_mut","","",2480,[[]]],[11,"try_from","","",2480,[[],["result",4]]],[11,"into","","",2480,[[]]],[11,"try_into","","",2480,[[],["result",4]]],[11,"type_id","","",2480,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::pcfg","",2483,[[]]],[11,"borrow","","",2483,[[]]],[11,"borrow_mut","","",2483,[[]]],[11,"try_from","","",2483,[[],["result",4]]],[11,"into","","",2483,[[]]],[11,"try_into","","",2483,[[],["result",4]]],[11,"type_id","","",2483,[[],["typeid",3]]],[11,"from","","",2484,[[]]],[11,"borrow","","",2484,[[]]],[11,"borrow_mut","","",2484,[[]]],[11,"try_from","","",2484,[[],["result",4]]],[11,"into","","",2484,[[]]],[11,"try_into","","",2484,[[],["result",4]]],[11,"type_id","","",2484,[[],["typeid",3]]],[11,"from","","",2485,[[]]],[11,"borrow","","",2485,[[]]],[11,"borrow_mut","","",2485,[[]]],[11,"try_from","","",2485,[[],["result",4]]],[11,"into","","",2485,[[]]],[11,"try_into","","",2485,[[],["result",4]]],[11,"type_id","","",2485,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::binterval","",2488,[[]]],[11,"borrow","","",2488,[[]]],[11,"borrow_mut","","",2488,[[]]],[11,"try_from","","",2488,[[],["result",4]]],[11,"into","","",2488,[[]]],[11,"try_into","","",2488,[[],["result",4]]],[11,"type_id","","",2488,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::pstatusclr","",2491,[[]]],[11,"borrow","","",2491,[[]]],[11,"borrow_mut","","",2491,[[]]],[11,"try_from","","",2491,[[],["result",4]]],[11,"into","","",2491,[[]]],[11,"try_into","","",2491,[[],["result",4]]],[11,"type_id","","",2491,[[],["typeid",3]]],[11,"from","","",2492,[[]]],[11,"borrow","","",2492,[[]]],[11,"borrow_mut","","",2492,[[]]],[11,"try_from","","",2492,[[],["result",4]]],[11,"into","","",2492,[[]]],[11,"try_into","","",2492,[[],["result",4]]],[11,"type_id","","",2492,[[],["typeid",3]]],[11,"from","","",2493,[[]]],[11,"borrow","","",2493,[[]]],[11,"borrow_mut","","",2493,[[]]],[11,"try_from","","",2493,[[],["result",4]]],[11,"into","","",2493,[[]]],[11,"try_into","","",2493,[[],["result",4]]],[11,"type_id","","",2493,[[],["typeid",3]]],[11,"from","","",2494,[[]]],[11,"borrow","","",2494,[[]]],[11,"borrow_mut","","",2494,[[]]],[11,"try_from","","",2494,[[],["result",4]]],[11,"into","","",2494,[[]]],[11,"try_into","","",2494,[[],["result",4]]],[11,"type_id","","",2494,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::pstatusset","",2496,[[]]],[11,"borrow","","",2496,[[]]],[11,"borrow_mut","","",2496,[[]]],[11,"try_from","","",2496,[[],["result",4]]],[11,"into","","",2496,[[]]],[11,"try_into","","",2496,[[],["result",4]]],[11,"type_id","","",2496,[[],["typeid",3]]],[11,"from","","",2497,[[]]],[11,"borrow","","",2497,[[]]],[11,"borrow_mut","","",2497,[[]]],[11,"try_from","","",2497,[[],["result",4]]],[11,"into","","",2497,[[]]],[11,"try_into","","",2497,[[],["result",4]]],[11,"type_id","","",2497,[[],["typeid",3]]],[11,"from","","",2498,[[]]],[11,"borrow","","",2498,[[]]],[11,"borrow_mut","","",2498,[[]]],[11,"try_from","","",2498,[[],["result",4]]],[11,"into","","",2498,[[]]],[11,"try_into","","",2498,[[],["result",4]]],[11,"type_id","","",2498,[[],["typeid",3]]],[11,"from","","",2499,[[]]],[11,"borrow","","",2499,[[]]],[11,"borrow_mut","","",2499,[[]]],[11,"try_from","","",2499,[[],["result",4]]],[11,"into","","",2499,[[]]],[11,"try_into","","",2499,[[],["result",4]]],[11,"type_id","","",2499,[[],["typeid",3]]],[11,"from","","",2500,[[]]],[11,"borrow","","",2500,[[]]],[11,"borrow_mut","","",2500,[[]]],[11,"try_from","","",2500,[[],["result",4]]],[11,"into","","",2500,[[]]],[11,"try_into","","",2500,[[],["result",4]]],[11,"type_id","","",2500,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::pintflag","",2503,[[]]],[11,"borrow","","",2503,[[]]],[11,"borrow_mut","","",2503,[[]]],[11,"try_from","","",2503,[[],["result",4]]],[11,"into","","",2503,[[]]],[11,"try_into","","",2503,[[],["result",4]]],[11,"type_id","","",2503,[[],["typeid",3]]],[11,"from","","",2504,[[]]],[11,"borrow","","",2504,[[]]],[11,"borrow_mut","","",2504,[[]]],[11,"try_from","","",2504,[[],["result",4]]],[11,"into","","",2504,[[]]],[11,"try_into","","",2504,[[],["result",4]]],[11,"type_id","","",2504,[[],["typeid",3]]],[11,"from","","",2505,[[]]],[11,"borrow","","",2505,[[]]],[11,"borrow_mut","","",2505,[[]]],[11,"try_from","","",2505,[[],["result",4]]],[11,"into","","",2505,[[]]],[11,"try_into","","",2505,[[],["result",4]]],[11,"type_id","","",2505,[[],["typeid",3]]],[11,"from","","",2506,[[]]],[11,"borrow","","",2506,[[]]],[11,"borrow_mut","","",2506,[[]]],[11,"try_from","","",2506,[[],["result",4]]],[11,"into","","",2506,[[]]],[11,"try_into","","",2506,[[],["result",4]]],[11,"type_id","","",2506,[[],["typeid",3]]],[11,"from","","",2507,[[]]],[11,"borrow","","",2507,[[]]],[11,"borrow_mut","","",2507,[[]]],[11,"try_from","","",2507,[[],["result",4]]],[11,"into","","",2507,[[]]],[11,"try_into","","",2507,[[],["result",4]]],[11,"type_id","","",2507,[[],["typeid",3]]],[11,"from","","",2508,[[]]],[11,"borrow","","",2508,[[]]],[11,"borrow_mut","","",2508,[[]]],[11,"try_from","","",2508,[[],["result",4]]],[11,"into","","",2508,[[]]],[11,"try_into","","",2508,[[],["result",4]]],[11,"type_id","","",2508,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::pintenclr","",2511,[[]]],[11,"borrow","","",2511,[[]]],[11,"borrow_mut","","",2511,[[]]],[11,"try_from","","",2511,[[],["result",4]]],[11,"into","","",2511,[[]]],[11,"try_into","","",2511,[[],["result",4]]],[11,"type_id","","",2511,[[],["typeid",3]]],[11,"from","","",2512,[[]]],[11,"borrow","","",2512,[[]]],[11,"borrow_mut","","",2512,[[]]],[11,"try_from","","",2512,[[],["result",4]]],[11,"into","","",2512,[[]]],[11,"try_into","","",2512,[[],["result",4]]],[11,"type_id","","",2512,[[],["typeid",3]]],[11,"from","","",2513,[[]]],[11,"borrow","","",2513,[[]]],[11,"borrow_mut","","",2513,[[]]],[11,"try_from","","",2513,[[],["result",4]]],[11,"into","","",2513,[[]]],[11,"try_into","","",2513,[[],["result",4]]],[11,"type_id","","",2513,[[],["typeid",3]]],[11,"from","","",2514,[[]]],[11,"borrow","","",2514,[[]]],[11,"borrow_mut","","",2514,[[]]],[11,"try_from","","",2514,[[],["result",4]]],[11,"into","","",2514,[[]]],[11,"try_into","","",2514,[[],["result",4]]],[11,"type_id","","",2514,[[],["typeid",3]]],[11,"from","","",2515,[[]]],[11,"borrow","","",2515,[[]]],[11,"borrow_mut","","",2515,[[]]],[11,"try_from","","",2515,[[],["result",4]]],[11,"into","","",2515,[[]]],[11,"try_into","","",2515,[[],["result",4]]],[11,"type_id","","",2515,[[],["typeid",3]]],[11,"from","","",2516,[[]]],[11,"borrow","","",2516,[[]]],[11,"borrow_mut","","",2516,[[]]],[11,"try_from","","",2516,[[],["result",4]]],[11,"into","","",2516,[[]]],[11,"try_into","","",2516,[[],["result",4]]],[11,"type_id","","",2516,[[],["typeid",3]]],[11,"from","atsamd21g::usb::host::pintenset","",2519,[[]]],[11,"borrow","","",2519,[[]]],[11,"borrow_mut","","",2519,[[]]],[11,"try_from","","",2519,[[],["result",4]]],[11,"into","","",2519,[[]]],[11,"try_into","","",2519,[[],["result",4]]],[11,"type_id","","",2519,[[],["typeid",3]]],[11,"from","","",2520,[[]]],[11,"borrow","","",2520,[[]]],[11,"borrow_mut","","",2520,[[]]],[11,"try_from","","",2520,[[],["result",4]]],[11,"into","","",2520,[[]]],[11,"try_into","","",2520,[[],["result",4]]],[11,"type_id","","",2520,[[],["typeid",3]]],[11,"from","","",2521,[[]]],[11,"borrow","","",2521,[[]]],[11,"borrow_mut","","",2521,[[]]],[11,"try_from","","",2521,[[],["result",4]]],[11,"into","","",2521,[[]]],[11,"try_into","","",2521,[[],["result",4]]],[11,"type_id","","",2521,[[],["typeid",3]]],[11,"from","","",2522,[[]]],[11,"borrow","","",2522,[[]]],[11,"borrow_mut","","",2522,[[]]],[11,"try_from","","",2522,[[],["result",4]]],[11,"into","","",2522,[[]]],[11,"try_into","","",2522,[[],["result",4]]],[11,"type_id","","",2522,[[],["typeid",3]]],[11,"from","","",2523,[[]]],[11,"borrow","","",2523,[[]]],[11,"borrow_mut","","",2523,[[]]],[11,"try_from","","",2523,[[],["result",4]]],[11,"into","","",2523,[[]]],[11,"try_into","","",2523,[[],["result",4]]],[11,"type_id","","",2523,[[],["typeid",3]]],[11,"from","","",2524,[[]]],[11,"borrow","","",2524,[[]]],[11,"borrow_mut","","",2524,[[]]],[11,"try_from","","",2524,[[],["result",4]]],[11,"into","","",2524,[[]]],[11,"try_into","","",2524,[[],["result",4]]],[11,"type_id","","",2524,[[],["typeid",3]]],[11,"from","atsamd21g::wdt","",2528,[[]]],[11,"borrow","","",2528,[[]]],[11,"borrow_mut","","",2528,[[]]],[11,"try_from","","",2528,[[],["result",4]]],[11,"into","","",2528,[[]]],[11,"try_into","","",2528,[[],["result",4]]],[11,"type_id","","",2528,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::ctrl","",2529,[[]]],[11,"borrow","","",2529,[[]]],[11,"borrow_mut","","",2529,[[]]],[11,"try_from","","",2529,[[],["result",4]]],[11,"into","","",2529,[[]]],[11,"try_into","","",2529,[[],["result",4]]],[11,"type_id","","",2529,[[],["typeid",3]]],[11,"from","","",2530,[[]]],[11,"borrow","","",2530,[[]]],[11,"borrow_mut","","",2530,[[]]],[11,"try_from","","",2530,[[],["result",4]]],[11,"into","","",2530,[[]]],[11,"try_into","","",2530,[[],["result",4]]],[11,"type_id","","",2530,[[],["typeid",3]]],[11,"from","","",2531,[[]]],[11,"borrow","","",2531,[[]]],[11,"borrow_mut","","",2531,[[]]],[11,"try_from","","",2531,[[],["result",4]]],[11,"into","","",2531,[[]]],[11,"try_into","","",2531,[[],["result",4]]],[11,"type_id","","",2531,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::config","",2537,[[]]],[11,"borrow","","",2537,[[]]],[11,"borrow_mut","","",2537,[[]]],[11,"try_from","","",2537,[[],["result",4]]],[11,"into","","",2537,[[]]],[11,"try_into","","",2537,[[],["result",4]]],[11,"type_id","","",2537,[[],["typeid",3]]],[11,"from","","",2539,[[]]],[11,"borrow","","",2539,[[]]],[11,"borrow_mut","","",2539,[[]]],[11,"try_from","","",2539,[[],["result",4]]],[11,"into","","",2539,[[]]],[11,"try_into","","",2539,[[],["result",4]]],[11,"type_id","","",2539,[[],["typeid",3]]],[11,"from","","",2534,[[]]],[11,"borrow","","",2534,[[]]],[11,"borrow_mut","","",2534,[[]]],[11,"try_from","","",2534,[[],["result",4]]],[11,"into","","",2534,[[]]],[11,"try_into","","",2534,[[],["result",4]]],[11,"type_id","","",2534,[[],["typeid",3]]],[11,"from","","",2535,[[]]],[11,"borrow","","",2535,[[]]],[11,"borrow_mut","","",2535,[[]]],[11,"try_from","","",2535,[[],["result",4]]],[11,"into","","",2535,[[]]],[11,"try_into","","",2535,[[],["result",4]]],[11,"type_id","","",2535,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::ewctrl","",2544,[[]]],[11,"borrow","","",2544,[[]]],[11,"borrow_mut","","",2544,[[]]],[11,"try_from","","",2544,[[],["result",4]]],[11,"into","","",2544,[[]]],[11,"try_into","","",2544,[[],["result",4]]],[11,"type_id","","",2544,[[],["typeid",3]]],[11,"from","","",2542,[[]]],[11,"borrow","","",2542,[[]]],[11,"borrow_mut","","",2542,[[]]],[11,"try_from","","",2542,[[],["result",4]]],[11,"into","","",2542,[[]]],[11,"try_into","","",2542,[[],["result",4]]],[11,"type_id","","",2542,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::intenclr","",2547,[[]]],[11,"borrow","","",2547,[[]]],[11,"borrow_mut","","",2547,[[]]],[11,"try_from","","",2547,[[],["result",4]]],[11,"into","","",2547,[[]]],[11,"try_into","","",2547,[[],["result",4]]],[11,"type_id","","",2547,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::intenset","",2550,[[]]],[11,"borrow","","",2550,[[]]],[11,"borrow_mut","","",2550,[[]]],[11,"try_from","","",2550,[[],["result",4]]],[11,"into","","",2550,[[]]],[11,"try_into","","",2550,[[],["result",4]]],[11,"type_id","","",2550,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::intflag","",2553,[[]]],[11,"borrow","","",2553,[[]]],[11,"borrow_mut","","",2553,[[]]],[11,"try_from","","",2553,[[],["result",4]]],[11,"into","","",2553,[[]]],[11,"try_into","","",2553,[[],["result",4]]],[11,"type_id","","",2553,[[],["typeid",3]]],[11,"from","atsamd21g::wdt::clear","",2558,[[]]],[11,"borrow","","",2558,[[]]],[11,"borrow_mut","","",2558,[[]]],[11,"try_from","","",2558,[[],["result",4]]],[11,"into","","",2558,[[]]],[11,"try_into","","",2558,[[],["result",4]]],[11,"type_id","","",2558,[[],["typeid",3]]],[11,"from","","",2557,[[]]],[11,"borrow","","",2557,[[]]],[11,"borrow_mut","","",2557,[[]]],[11,"try_from","","",2557,[[],["result",4]]],[11,"into","","",2557,[[]]],[11,"try_into","","",2557,[[],["result",4]]],[11,"type_id","","",2557,[[],["typeid",3]]],[11,"deref","atsamd21g","",2597,[[]]],[11,"deref","","",2602,[[]]],[11,"deref","","",2603,[[]]],[11,"deref","","",2596,[[]]],[11,"deref","","",2595,[[]]],[11,"deref","","",2600,[[]]],[11,"deref","","",2601,[[]]],[11,"reset_value","","",2605,[[]]],[11,"reset_value","","",2606,[[]]],[11,"reset_value","","",2607,[[]]],[11,"reset_value","","",2608,[[]]],[11,"reset_value","","",2609,[[]]],[11,"reset_value","","",2610,[[]]],[11,"reset_value","","",2611,[[]]],[11,"reset_value","","",2612,[[]]],[11,"reset_value","","",2613,[[]]],[11,"reset_value","","",2614,[[]]],[11,"reset_value","","",2615,[[]]],[11,"reset_value","","",2616,[[]]],[11,"reset_value","","",2617,[[]]],[11,"reset_value","","",2618,[[]]],[11,"reset_value","","",2619,[[]]],[11,"reset_value","","",2620,[[]]],[11,"reset_value","","",2621,[[]]],[11,"reset_value","","",2622,[[]]],[11,"reset_value","","",2623,[[]]],[11,"reset_value","","",2624,[[]]],[11,"reset_value","","",2625,[[]]],[11,"reset_value","","",2626,[[]]],[11,"reset_value","","",2627,[[]]],[11,"reset_value","","",2628,[[]]],[11,"reset_value","","",2629,[[]]],[11,"reset_value","","",2630,[[]]],[11,"reset_value","","",2631,[[]]],[11,"reset_value","","",2632,[[]]],[11,"reset_value","","",2633,[[]]],[11,"reset_value","","",2634,[[]]],[11,"reset_value","","",2635,[[]]],[11,"reset_value","","",2636,[[]]],[11,"reset_value","","",2637,[[]]],[11,"reset_value","","",2638,[[]]],[11,"reset_value","","",2639,[[]]],[11,"reset_value","","",2640,[[]]],[11,"reset_value","","",2641,[[]]],[11,"reset_value","","",2642,[[]]],[11,"reset_value","","",2643,[[]]],[11,"reset_value","","",2644,[[]]],[11,"reset_value","","",2645,[[]]],[11,"reset_value","","",2646,[[]]],[11,"reset_value","","",2647,[[]]],[11,"reset_value","","",2648,[[]]],[11,"reset_value","","",2649,[[]]],[11,"reset_value","","",2650,[[]]],[11,"reset_value","","",2651,[[]]],[11,"reset_value","","",2652,[[]]],[11,"reset_value","","",2653,[[]]],[11,"reset_value","","",2654,[[]]],[11,"reset_value","","",2655,[[]]],[11,"reset_value","","",2656,[[]]],[11,"reset_value","","",2657,[[]]],[11,"reset_value","","",2658,[[]]],[11,"reset_value","","",2659,[[]]],[11,"reset_value","","",2660,[[]]],[11,"reset_value","","",2661,[[]]],[11,"reset_value","","",2662,[[]]],[11,"reset_value","","",2663,[[]]],[11,"reset_value","","",2664,[[]]],[11,"reset_value","","",2665,[[]]],[11,"reset_value","","",2666,[[]]],[11,"reset_value","","",2667,[[]]],[11,"reset_value","","",2668,[[]]],[11,"reset_value","","",2669,[[]]],[11,"reset_value","","",2670,[[]]],[11,"reset_value","","",2671,[[]]],[11,"reset_value","","",2672,[[]]],[11,"reset_value","","",2673,[[]]],[11,"reset_value","","",2674,[[]]],[11,"reset_value","","",2675,[[]]],[11,"reset_value","","",2676,[[]]],[11,"reset_value","","",2677,[[]]],[11,"reset_value","","",2678,[[]]],[11,"reset_value","","",2679,[[]]],[11,"reset_value","","",2680,[[]]],[11,"reset_value","","",2681,[[]]],[11,"reset_value","","",2682,[[]]],[11,"reset_value","","",2683,[[]]],[11,"reset_value","","",2684,[[]]],[11,"reset_value","","",2685,[[]]],[11,"reset_value","","",2686,[[]]],[11,"reset_value","","",2687,[[]]],[11,"reset_value","","",2688,[[]]],[11,"reset_value","","",2689,[[]]],[11,"reset_value","","",2690,[[]]],[11,"reset_value","","",2691,[[]]],[11,"reset_value","","",2692,[[]]],[11,"reset_value","","",2693,[[]]],[11,"reset_value","","",2694,[[]]],[11,"reset_value","","",2695,[[]]],[11,"reset_value","","",2696,[[]]],[11,"reset_value","","",2697,[[]]],[11,"reset_value","","",2698,[[]]],[11,"reset_value","","",2699,[[]]],[11,"reset_value","","",2700,[[]]],[11,"reset_value","","",2701,[[]]],[11,"reset_value","","",2702,[[]]],[11,"reset_value","","",2703,[[]]],[11,"reset_value","","",2704,[[]]],[11,"reset_value","","",2705,[[]]],[11,"reset_value","","",2706,[[]]],[11,"reset_value","","",2707,[[]]],[11,"reset_value","","",2708,[[]]],[11,"reset_value","","",2709,[[]]],[11,"reset_value","","",2710,[[]]],[11,"reset_value","","",2711,[[]]],[11,"reset_value","","",2712,[[]]],[11,"reset_value","","",2713,[[]]],[11,"reset_value","","",2714,[[]]],[11,"reset_value","","",2715,[[]]],[11,"reset_value","","",2716,[[]]],[11,"reset_value","","",2717,[[]]],[11,"reset_value","","",2718,[[]]],[11,"reset_value","","",2719,[[]]],[11,"reset_value","","",2720,[[]]],[11,"reset_value","","",2721,[[]]],[11,"reset_value","","",2722,[[]]],[11,"reset_value","","",2723,[[]]],[11,"reset_value","","",2724,[[]]],[11,"reset_value","","",2725,[[]]],[11,"reset_value","","",2726,[[]]],[11,"reset_value","","",2727,[[]]],[11,"reset_value","","",2728,[[]]],[11,"reset_value","","",2729,[[]]],[11,"reset_value","","",2730,[[]]],[11,"reset_value","","",2731,[[]]],[11,"reset_value","","",2732,[[]]],[11,"reset_value","","",2733,[[]]],[11,"reset_value","","",2734,[[]]],[11,"reset_value","","",2735,[[]]],[11,"reset_value","","",2736,[[]]],[11,"reset_value","","",2737,[[]]],[11,"reset_value","","",2738,[[]]],[11,"reset_value","","",2739,[[]]],[11,"reset_value","","",2740,[[]]],[11,"reset_value","","",2741,[[]]],[11,"reset_value","","",2742,[[]]],[11,"reset_value","","",2743,[[]]],[11,"reset_value","","",2744,[[]]],[11,"reset_value","","",2745,[[]]],[11,"reset_value","","",2746,[[]]],[11,"reset_value","","",2747,[[]]],[11,"reset_value","","",2748,[[]]],[11,"reset_value","","",2749,[[]]],[11,"reset_value","","",2750,[[]]],[11,"reset_value","","",2751,[[]]],[11,"reset_value","","",2752,[[]]],[11,"reset_value","","",2753,[[]]],[11,"reset_value","","",2754,[[]]],[11,"reset_value","","",2755,[[]]],[11,"reset_value","","",2756,[[]]],[11,"reset_value","","",2757,[[]]],[11,"reset_value","","",2758,[[]]],[11,"reset_value","","",2759,[[]]],[11,"reset_value","","",2760,[[]]],[11,"reset_value","","",2761,[[]]],[11,"reset_value","","",2762,[[]]],[11,"reset_value","","",2763,[[]]],[11,"reset_value","","",2764,[[]]],[11,"reset_value","","",2765,[[]]],[11,"reset_value","","",2766,[[]]],[11,"reset_value","","",2767,[[]]],[11,"reset_value","","",2768,[[]]],[11,"reset_value","","",2769,[[]]],[11,"reset_value","","",2770,[[]]],[11,"reset_value","","",2771,[[]]],[11,"reset_value","","",2772,[[]]],[11,"reset_value","","",2773,[[]]],[11,"reset_value","","",2774,[[]]],[11,"reset_value","","",2775,[[]]],[11,"reset_value","","",2776,[[]]],[11,"reset_value","","",2777,[[]]],[11,"reset_value","","",2778,[[]]],[11,"reset_value","","",2779,[[]]],[11,"reset_value","","",2780,[[]]],[11,"reset_value","","",2781,[[]]],[11,"reset_value","","",2782,[[]]],[11,"reset_value","","",2783,[[]]],[11,"reset_value","","",2784,[[]]],[11,"reset_value","","",2785,[[]]],[11,"reset_value","","",2786,[[]]],[11,"reset_value","","",2787,[[]]],[11,"reset_value","","",2788,[[]]],[11,"reset_value","","",2789,[[]]],[11,"reset_value","","",2790,[[]]],[11,"reset_value","","",2791,[[]]],[11,"reset_value","","",2792,[[]]],[11,"reset_value","","",2793,[[]]],[11,"reset_value","","",2794,[[]]],[11,"reset_value","","",2795,[[]]],[11,"reset_value","","",2796,[[]]],[11,"reset_value","","",2797,[[]]],[11,"reset_value","","",2798,[[]]],[11,"reset_value","","",2799,[[]]],[11,"reset_value","","",2800,[[]]],[11,"reset_value","","",2801,[[]]],[11,"reset_value","","",2802,[[]]],[11,"reset_value","","",2803,[[]]],[11,"reset_value","","",2804,[[]]],[11,"reset_value","","",2805,[[]]],[11,"reset_value","","",2806,[[]]],[11,"reset_value","","",2807,[[]]],[11,"reset_value","","",2808,[[]]],[11,"reset_value","","",2809,[[]]],[11,"reset_value","","",2810,[[]]],[11,"reset_value","","",2811,[[]]],[11,"reset_value","","",2812,[[]]],[11,"reset_value","","",2813,[[]]],[11,"reset_value","","",2814,[[]]],[11,"reset_value","","",2815,[[]]],[11,"reset_value","","",2816,[[]]],[11,"reset_value","","",2817,[[]]],[11,"reset_value","","",2818,[[]]],[11,"reset_value","","",2819,[[]]],[11,"reset_value","","",2820,[[]]],[11,"reset_value","","",2821,[[]]],[11,"reset_value","","",2822,[[]]],[11,"reset_value","","",2823,[[]]],[11,"reset_value","","",2824,[[]]],[11,"reset_value","","",2825,[[]]],[11,"reset_value","","",2826,[[]]],[11,"reset_value","","",2827,[[]]],[11,"reset_value","","",2828,[[]]],[11,"reset_value","","",2829,[[]]],[11,"reset_value","","",2830,[[]]],[11,"reset_value","","",2831,[[]]],[11,"reset_value","","",2832,[[]]],[11,"reset_value","","",2833,[[]]],[11,"reset_value","","",2834,[[]]],[11,"reset_value","","",2835,[[]]],[11,"reset_value","","",2836,[[]]],[11,"reset_value","","",2837,[[]]],[11,"reset_value","","",2838,[[]]],[11,"reset_value","","",2839,[[]]],[11,"reset_value","","",2840,[[]]],[11,"reset_value","","",2841,[[]]],[11,"reset_value","","",2842,[[]]],[11,"reset_value","","",2843,[[]]],[11,"reset_value","","",2844,[[]]],[11,"reset_value","","",2845,[[]]],[11,"reset_value","","",2846,[[]]],[11,"reset_value","","",2847,[[]]],[11,"reset_value","","",2848,[[]]],[11,"reset_value","","",2849,[[]]],[11,"reset_value","","",2850,[[]]],[11,"reset_value","","",2851,[[]]],[11,"reset_value","","",2852,[[]]],[11,"reset_value","","",2853,[[]]],[11,"reset_value","","",2854,[[]]],[11,"reset_value","","",2855,[[]]],[11,"reset_value","","",2856,[[]]],[11,"reset_value","","",2857,[[]]],[11,"reset_value","","",2858,[[]]],[11,"reset_value","","",2859,[[]]],[11,"reset_value","","",2860,[[]]],[11,"reset_value","","",2861,[[]]],[11,"reset_value","","",2862,[[]]],[11,"reset_value","","",2863,[[]]],[11,"reset_value","","",2864,[[]]],[11,"reset_value","","",2865,[[]]],[11,"reset_value","","",2866,[[]]],[11,"reset_value","","",2867,[[]]],[11,"reset_value","","",2868,[[]]],[11,"reset_value","","",2869,[[]]],[11,"reset_value","","",2870,[[]]],[11,"reset_value","","",2871,[[]]],[11,"reset_value","","",2872,[[]]],[11,"reset_value","","",2873,[[]]],[11,"reset_value","","",2874,[[]]],[11,"reset_value","","",2875,[[]]],[11,"reset_value","","",2876,[[]]],[11,"reset_value","","",2877,[[]]],[11,"reset_value","","",2878,[[]]],[11,"reset_value","","",2879,[[]]],[11,"reset_value","","",2880,[[]]],[11,"reset_value","","",2881,[[]]],[11,"reset_value","","",2882,[[]]],[11,"reset_value","","",2883,[[]]],[11,"reset_value","","",2884,[[]]],[11,"reset_value","","",2885,[[]]],[11,"reset_value","","",2886,[[]]],[11,"reset_value","","",2887,[[]]],[11,"reset_value","","",2888,[[]]],[11,"reset_value","","",2889,[[]]],[11,"reset_value","","",2890,[[]]],[11,"reset_value","","",2891,[[]]],[11,"reset_value","","",2892,[[]]],[11,"reset_value","","",2893,[[]]],[11,"reset_value","","",2894,[[]]],[11,"reset_value","","",2895,[[]]],[11,"reset_value","","",2896,[[]]],[11,"reset_value","","",2897,[[]]],[11,"reset_value","","",2898,[[]]],[11,"reset_value","","",2899,[[]]],[11,"reset_value","","",2900,[[]]],[11,"reset_value","","",2901,[[]]],[11,"reset_value","","",2902,[[]]],[11,"reset_value","","",2903,[[]]],[11,"reset_value","","",2904,[[]]],[11,"reset_value","","",2905,[[]]],[11,"reset_value","","",2906,[[]]],[11,"reset_value","","",2907,[[]]],[11,"reset_value","","",2908,[[]]],[11,"reset_value","","",2909,[[]]],[11,"reset_value","","",2910,[[]]],[11,"reset_value","","",2911,[[]]],[11,"reset_value","","",2912,[[]]],[11,"reset_value","","",2913,[[]]],[11,"reset_value","","",2914,[[]]],[11,"reset_value","","",2915,[[]]],[11,"reset_value","","",2916,[[]]],[11,"reset_value","","",2917,[[]]],[11,"reset_value","","",2918,[[]]],[11,"reset_value","","",2919,[[]]],[11,"reset_value","","",2920,[[]]],[11,"reset_value","","",2921,[[]]],[11,"reset_value","","",2922,[[]]],[11,"reset_value","","",2923,[[]]],[11,"reset_value","","",2924,[[]]],[11,"reset_value","","",2925,[[]]],[11,"reset_value","","",2926,[[]]],[11,"reset_value","","",2927,[[]]],[11,"reset_value","","",2928,[[]]],[11,"reset_value","","",2929,[[]]],[11,"reset_value","","",2930,[[]]],[11,"reset_value","","",2931,[[]]],[11,"reset_value","","",2932,[[]]],[11,"reset_value","","",2933,[[]]],[11,"reset_value","","",2934,[[]]],[11,"reset_value","","",2935,[[]]],[11,"reset_value","","",2936,[[]]],[11,"reset_value","","",2937,[[]]],[11,"reset_value","","",2938,[[]]],[11,"reset_value","","",2939,[[]]],[11,"reset_value","","",2940,[[]]],[11,"deref","","",2560,[[]]],[11,"deref","","",2561,[[]]],[11,"deref","","",2562,[[]]],[11,"deref","","",2563,[[]]],[11,"deref","","",2564,[[]]],[11,"deref","","",2565,[[]]],[11,"deref","","",2566,[[]]],[11,"deref","","",2567,[[]]],[11,"deref","","",2568,[[]]],[11,"deref","","",2569,[[]]],[11,"deref","","",2570,[[]]],[11,"deref","","",2571,[[]]],[11,"deref","","",2572,[[]]],[11,"deref","","",2573,[[]]],[11,"deref","","",2574,[[]]],[11,"deref","","",2575,[[]]],[11,"deref","","",2576,[[]]],[11,"deref","","",2577,[[]]],[11,"deref","","",2578,[[]]],[11,"deref","","",2579,[[]]],[11,"deref","","",2580,[[]]],[11,"deref","","",2581,[[]]],[11,"deref","","",2582,[[]]],[11,"deref","","",2583,[[]]],[11,"deref","","",2584,[[]]],[11,"deref","","",2585,[[]]],[11,"deref","","",2586,[[]]],[11,"deref","","",2587,[[]]],[11,"deref","","",2588,[[]]],[11,"deref","","",2589,[[]]],[11,"deref","","",2590,[[]]],[11,"deref","","",2591,[[]]],[11,"deref","","",2592,[[]]],[11,"deref","","",2593,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::ac::statusa","",40,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::ac::statusc","",44,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::ac::winctrl","",47,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::ac::compctrl","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::adc::refctrl","",86,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::adc::avgctrl","",92,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::adc::ctrlb","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::adc::winctrl","",113,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::adc::inputctrl","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::dac::ctrlb","",186,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::dmac::crcctrl","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::dmac::qosctrl","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::dmac::chctrlb","",313,[[["formatter",3]],["result",6]]],[11,"fmt","","",314,[[["formatter",3]],["result",6]]],[11,"fmt","","",315,[[["formatter",3]],["result",6]]],[11,"fmt","","",316,[[["formatter",3]],["result",6]]],[11,"fmt","","",317,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::eic::nmictrl","",393,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::eic::config","",492,[[["formatter",3]],["result",6]]],[11,"fmt","","",493,[[["formatter",3]],["result",6]]],[11,"fmt","","",494,[[["formatter",3]],["result",6]]],[11,"fmt","","",495,[[["formatter",3]],["result",6]]],[11,"fmt","","",496,[[["formatter",3]],["result",6]]],[11,"fmt","","",497,[[["formatter",3]],["result",6]]],[11,"fmt","","",498,[[["formatter",3]],["result",6]]],[11,"fmt","","",499,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::evsys::channel","",530,[[["formatter",3]],["result",6]]],[11,"fmt","","",531,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::evsys::user","",541,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::gclk::clkctrl","",631,[[["formatter",3]],["result",6]]],[11,"fmt","","",632,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::gclk::genctrl","",641,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::i2s::clkctrl","",670,[[["formatter",3]],["result",6]]],[11,"fmt","","",671,[[["formatter",3]],["result",6]]],[11,"fmt","","",672,[[["formatter",3]],["result",6]]],[11,"fmt","","",673,[[["formatter",3]],["result",6]]],[11,"fmt","","",674,[[["formatter",3]],["result",6]]],[11,"fmt","","",675,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::i2s::serctrl","",729,[[["formatter",3]],["result",6]]],[11,"fmt","","",730,[[["formatter",3]],["result",6]]],[11,"fmt","","",731,[[["formatter",3]],["result",6]]],[11,"fmt","","",732,[[["formatter",3]],["result",6]]],[11,"fmt","","",733,[[["formatter",3]],["result",6]]],[11,"fmt","","",734,[[["formatter",3]],["result",6]]],[11,"fmt","","",735,[[["formatter",3]],["result",6]]],[11,"fmt","","",736,[[["formatter",3]],["result",6]]],[11,"fmt","","",737,[[["formatter",3]],["result",6]]],[11,"fmt","","",738,[[["formatter",3]],["result",6]]],[11,"fmt","","",739,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::nvmctrl::ctrla","",796,[[["formatter",3]],["result",6]]],[11,"fmt","","",797,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::nvmctrl::ctrlb","",804,[[["formatter",3]],["result",6]]],[11,"fmt","","",805,[[["formatter",3]],["result",6]]],[11,"fmt","","",806,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::nvmctrl::param","",817,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::pm::sleep","",849,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::pm::cpusel","",854,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::pm::apbasel","",859,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::pm::apbbsel","",864,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::pm::apbcsel","",869,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::port::pmux0_","",970,[[["formatter",3]],["result",6]]],[11,"fmt","","",971,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::port::pmux1_","",978,[[["formatter",3]],["result",6]]],[11,"fmt","","",979,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::rtc::mode0::ctrl","",1001,[[["formatter",3]],["result",6]]],[11,"fmt","","",1002,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::rtc::mode1::ctrl","",1057,[[["formatter",3]],["result",6]]],[11,"fmt","","",1058,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::rtc::mode2::ctrl","",1119,[[["formatter",3]],["result",6]]],[11,"fmt","","",1120,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::rtc::mode2::clock","",1170,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::rtc::mode2::alarm","",1180,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::rtc::mode2::mask","",1190,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sercom0::i2cm::ctrla","",1200,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sercom0::i2cs::ctrla","",1266,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sercom0::spi::ctrla","",1323,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sercom0::usart::ctrla","",1382,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sysctrl::xosc","",1519,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sysctrl::osc8m","",1555,[[["formatter",3]],["result",6]]],[11,"fmt","","",1556,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sysctrl::bod33","",1591,[[["formatter",3]],["result",6]]],[11,"fmt","","",1592,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::sysctrl::dpllctrlb","",1623,[[["formatter",3]],["result",6]]],[11,"fmt","","",1624,[[["formatter",3]],["result",6]]],[11,"fmt","","",1625,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count8::ctrla","",1642,[[["formatter",3]],["result",6]]],[11,"fmt","","",1643,[[["formatter",3]],["result",6]]],[11,"fmt","","",1644,[[["formatter",3]],["result",6]]],[11,"fmt","","",1645,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count8::ctrlbclr","",1664,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count8::ctrlbset","",1671,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count8::evctrl","",1687,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count16::ctrla","",1728,[[["formatter",3]],["result",6]]],[11,"fmt","","",1729,[[["formatter",3]],["result",6]]],[11,"fmt","","",1730,[[["formatter",3]],["result",6]]],[11,"fmt","","",1731,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count16::ctrlbclr","",1750,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count16::ctrlbset","",1757,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count16::evctrl","",1773,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count32::ctrla","",1811,[[["formatter",3]],["result",6]]],[11,"fmt","","",1812,[[["formatter",3]],["result",6]]],[11,"fmt","","",1813,[[["formatter",3]],["result",6]]],[11,"fmt","","",1814,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count32::ctrlbclr","",1833,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count32::ctrlbset","",1840,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tc3::count32::evctrl","",1856,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::ctrla","",1896,[[["formatter",3]],["result",6]]],[11,"fmt","","",1897,[[["formatter",3]],["result",6]]],[11,"fmt","","",1898,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::ctrlbclr","",1915,[[["formatter",3]],["result",6]]],[11,"fmt","","",1916,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::ctrlbset","",1926,[[["formatter",3]],["result",6]]],[11,"fmt","","",1927,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::fctrla","",1938,[[["formatter",3]],["result",6]]],[11,"fmt","","",1939,[[["formatter",3]],["result",6]]],[11,"fmt","","",1940,[[["formatter",3]],["result",6]]],[11,"fmt","","",1941,[[["formatter",3]],["result",6]]],[11,"fmt","","",1942,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::fctrlb","",1960,[[["formatter",3]],["result",6]]],[11,"fmt","","",1961,[[["formatter",3]],["result",6]]],[11,"fmt","","",1962,[[["formatter",3]],["result",6]]],[11,"fmt","","",1963,[[["formatter",3]],["result",6]]],[11,"fmt","","",1964,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::evctrl","",2023,[[["formatter",3]],["result",6]]],[11,"fmt","","",2024,[[["formatter",3]],["result",6]]],[11,"fmt","","",2025,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::wave","",2138,[[["formatter",3]],["result",6]]],[11,"fmt","","",2139,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::tcc0::waveb","",2207,[[["formatter",3]],["result",6]]],[11,"fmt","","",2208,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::device::ctrla","",2260,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::device::qosctrl","",2269,[[["formatter",3]],["result",6]]],[11,"fmt","","",2270,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::device::ctrlb","",2277,[[["formatter",3]],["result",6]]],[11,"fmt","","",2278,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::device::status","",2297,[[["formatter",3]],["result",6]]],[11,"fmt","","",2298,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::device::fsmstatus","",2302,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::host::ctrla","",2400,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::host::qosctrl","",2409,[[["formatter",3]],["result",6]]],[11,"fmt","","",2410,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::host::ctrlb","",2417,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::usb::host::fsmstatus","",2436,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::wdt::config","",2534,[[["formatter",3]],["result",6]]],[11,"fmt","","",2535,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::wdt::ewctrl","",2542,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd21g::wdt::clear","",2557,[[["formatter",3]],["result",6]]],[11,"eq","atsamd21g::generic","",6,[[]]],[11,"eq","","",3,[[["variant",4]]]],[11,"ne","","",3,[[["variant",4]]]],[11,"eq","atsamd21g::ac::statusa","",40,[[["wstate0_a",4]]]],[11,"eq","atsamd21g::ac::statusc","",44,[[["wstate0_a",4]]]],[11,"eq","atsamd21g::ac::winctrl","",47,[[["wintsel0_a",4]]]],[11,"eq","atsamd21g::ac::compctrl","",53,[[["speed_a",4]]]],[11,"eq","","",54,[[["intsel_a",4]]]],[11,"eq","","",55,[[["muxneg_a",4]]]],[11,"eq","","",56,[[["muxpos_a",4]]]],[11,"eq","","",57,[[["out_a",4]]]],[11,"eq","","",58,[[["flen_a",4]]]],[11,"eq","atsamd21g::adc::refctrl","",86,[[["refsel_a",4]]]],[11,"eq","atsamd21g::adc::avgctrl","",92,[[["samplenum_a",4]]]],[11,"eq","atsamd21g::adc::ctrlb","",101,[[["ressel_a",4]]]],[11,"eq","","",102,[[["prescaler_a",4]]]],[11,"eq","atsamd21g::adc::winctrl","",113,[[["winmode_a",4]]]],[11,"eq","atsamd21g::adc::inputctrl","",122,[[["muxpos_a",4]]]],[11,"eq","","",123,[[["muxneg_a",4]]]],[11,"eq","","",124,[[["gain_a",4]]]],[11,"eq","atsamd21g::dac::ctrlb","",186,[[["refsel_a",4]]]],[11,"eq","atsamd21g::dmac::crcctrl","",232,[[["crcbeatsize_a",4]]]],[11,"eq","","",233,[[["crcpoly_a",4]]]],[11,"eq","","",234,[[["crcsrc_a",4]]]],[11,"eq","atsamd21g::dmac::qosctrl","",255,[[["wrbqos_a",4]]]],[11,"eq","","",256,[[["fqos_a",4]]]],[11,"eq","","",257,[[["dqos_a",4]]]],[11,"eq","atsamd21g::dmac::chctrlb","",313,[[["evact_a",4]]]],[11,"eq","","",314,[[["lvl_a",4]]]],[11,"eq","","",315,[[["trigsrc_a",4]]]],[11,"eq","","",316,[[["trigact_a",4]]]],[11,"eq","","",317,[[["cmd_a",4]]]],[11,"eq","atsamd21g::eic::nmictrl","",393,[[["nmisense_a",4]]]],[11,"eq","atsamd21g::eic::config","",492,[[["sense0_a",4]]]],[11,"eq","","",493,[[["sense1_a",4]]]],[11,"eq","","",494,[[["sense2_a",4]]]],[11,"eq","","",495,[[["sense3_a",4]]]],[11,"eq","","",496,[[["sense4_a",4]]]],[11,"eq","","",497,[[["sense5_a",4]]]],[11,"eq","","",498,[[["sense6_a",4]]]],[11,"eq","","",499,[[["sense7_a",4]]]],[11,"eq","atsamd21g::evsys::channel","",530,[[["path_a",4]]]],[11,"eq","","",531,[[["edgsel_a",4]]]],[11,"eq","atsamd21g::evsys::user","",541,[[["channel_a",4]]]],[11,"eq","atsamd21g::gclk::clkctrl","",631,[[["id_a",4]]]],[11,"eq","","",632,[[["gen_a",4]]]],[11,"eq","atsamd21g::gclk::genctrl","",641,[[["src_a",4]]]],[11,"eq","atsamd21g::i2s::clkctrl","",670,[[["slotsize_a",4]]]],[11,"eq","","",671,[[["fswidth_a",4]]]],[11,"eq","","",672,[[["bitdelay_a",4]]]],[11,"eq","","",673,[[["fssel_a",4]]]],[11,"eq","","",674,[[["scksel_a",4]]]],[11,"eq","","",675,[[["mcksel_a",4]]]],[11,"eq","atsamd21g::i2s::serctrl","",729,[[["sermode_a",4]]]],[11,"eq","","",730,[[["txdefault_a",4]]]],[11,"eq","","",731,[[["txsame_a",4]]]],[11,"eq","","",732,[[["clksel_a",4]]]],[11,"eq","","",733,[[["slotadj_a",4]]]],[11,"eq","","",734,[[["datasize_a",4]]]],[11,"eq","","",735,[[["wordadj_a",4]]]],[11,"eq","","",736,[[["extend_a",4]]]],[11,"eq","","",737,[[["bitrev_a",4]]]],[11,"eq","","",738,[[["mono_a",4]]]],[11,"eq","","",739,[[["dma_a",4]]]],[11,"eq","atsamd21g::nvmctrl::ctrla","",796,[[["cmd_a",4]]]],[11,"eq","","",797,[[["cmdex_a",4]]]],[11,"eq","atsamd21g::nvmctrl::ctrlb","",804,[[["rws_a",4]]]],[11,"eq","","",805,[[["sleepprm_a",4]]]],[11,"eq","","",806,[[["readmode_a",4]]]],[11,"eq","atsamd21g::nvmctrl::param","",817,[[["psz_a",4]]]],[11,"eq","atsamd21g::pm::sleep","",849,[[["idle_a",4]]]],[11,"eq","atsamd21g::pm::cpusel","",854,[[["cpudiv_a",4]]]],[11,"eq","atsamd21g::pm::apbasel","",859,[[["apbadiv_a",4]]]],[11,"eq","atsamd21g::pm::apbbsel","",864,[[["apbbdiv_a",4]]]],[11,"eq","atsamd21g::pm::apbcsel","",869,[[["apbcdiv_a",4]]]],[11,"eq","atsamd21g::port::pmux0_","",970,[[["pmuxe_a",4]]]],[11,"eq","","",971,[[["pmuxo_a",4]]]],[11,"eq","atsamd21g::port::pmux1_","",978,[[["pmuxe_a",4]]]],[11,"eq","","",979,[[["pmuxo_a",4]]]],[11,"eq","atsamd21g::rtc::mode0::ctrl","",1001,[[["mode_a",4]]]],[11,"eq","","",1002,[[["prescaler_a",4]]]],[11,"eq","atsamd21g::rtc::mode1::ctrl","",1057,[[["mode_a",4]]]],[11,"eq","","",1058,[[["prescaler_a",4]]]],[11,"eq","atsamd21g::rtc::mode2::ctrl","",1119,[[["mode_a",4]]]],[11,"eq","","",1120,[[["prescaler_a",4]]]],[11,"eq","atsamd21g::rtc::mode2::clock","",1170,[[["hour_a",4]]]],[11,"eq","atsamd21g::rtc::mode2::alarm","",1180,[[["hour_a",4]]]],[11,"eq","atsamd21g::rtc::mode2::mask","",1190,[[["sel_a",4]]]],[11,"eq","atsamd21g::sercom0::i2cm::ctrla","",1200,[[["mode_a",4]]]],[11,"eq","atsamd21g::sercom0::i2cs::ctrla","",1266,[[["mode_a",4]]]],[11,"eq","atsamd21g::sercom0::spi::ctrla","",1323,[[["mode_a",4]]]],[11,"eq","atsamd21g::sercom0::usart::ctrla","",1382,[[["mode_a",4]]]],[11,"eq","atsamd21g::sysctrl::xosc","",1519,[[["gain_a",4]]]],[11,"eq","atsamd21g::sysctrl::osc8m","",1555,[[["presc_a",4]]]],[11,"eq","","",1556,[[["frange_a",4]]]],[11,"eq","atsamd21g::sysctrl::bod33","",1591,[[["action_a",4]]]],[11,"eq","","",1592,[[["psel_a",4]]]],[11,"eq","atsamd21g::sysctrl::dpllctrlb","",1623,[[["filter_a",4]]]],[11,"eq","","",1624,[[["refclk_a",4]]]],[11,"eq","","",1625,[[["ltime_a",4]]]],[11,"eq","atsamd21g::tc3::count8::ctrla","",1642,[[["mode_a",4]]]],[11,"eq","","",1643,[[["wavegen_a",4]]]],[11,"eq","","",1644,[[["prescaler_a",4]]]],[11,"eq","","",1645,[[["prescsync_a",4]]]],[11,"eq","atsamd21g::tc3::count8::ctrlbclr","",1664,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tc3::count8::ctrlbset","",1671,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tc3::count8::evctrl","",1687,[[["evact_a",4]]]],[11,"eq","atsamd21g::tc3::count16::ctrla","",1728,[[["mode_a",4]]]],[11,"eq","","",1729,[[["wavegen_a",4]]]],[11,"eq","","",1730,[[["prescaler_a",4]]]],[11,"eq","","",1731,[[["prescsync_a",4]]]],[11,"eq","atsamd21g::tc3::count16::ctrlbclr","",1750,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tc3::count16::ctrlbset","",1757,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tc3::count16::evctrl","",1773,[[["evact_a",4]]]],[11,"eq","atsamd21g::tc3::count32::ctrla","",1811,[[["mode_a",4]]]],[11,"eq","","",1812,[[["wavegen_a",4]]]],[11,"eq","","",1813,[[["prescaler_a",4]]]],[11,"eq","","",1814,[[["prescsync_a",4]]]],[11,"eq","atsamd21g::tc3::count32::ctrlbclr","",1833,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tc3::count32::ctrlbset","",1840,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tc3::count32::evctrl","",1856,[[["evact_a",4]]]],[11,"eq","atsamd21g::tcc0::ctrla","",1896,[[["resolution_a",4]]]],[11,"eq","","",1897,[[["prescaler_a",4]]]],[11,"eq","","",1898,[[["prescsync_a",4]]]],[11,"eq","atsamd21g::tcc0::ctrlbclr","",1915,[[["idxcmd_a",4]]]],[11,"eq","","",1916,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tcc0::ctrlbset","",1926,[[["idxcmd_a",4]]]],[11,"eq","","",1927,[[["cmd_a",4]]]],[11,"eq","atsamd21g::tcc0::fctrla","",1938,[[["src_a",4]]]],[11,"eq","","",1939,[[["blank_a",4]]]],[11,"eq","","",1940,[[["halt_a",4]]]],[11,"eq","","",1941,[[["chsel_a",4]]]],[11,"eq","","",1942,[[["capture_a",4]]]],[11,"eq","atsamd21g::tcc0::fctrlb","",1960,[[["src_a",4]]]],[11,"eq","","",1961,[[["blank_a",4]]]],[11,"eq","","",1962,[[["halt_a",4]]]],[11,"eq","","",1963,[[["chsel_a",4]]]],[11,"eq","","",1964,[[["capture_a",4]]]],[11,"eq","atsamd21g::tcc0::evctrl","",2023,[[["evact0_a",4]]]],[11,"eq","","",2024,[[["evact1_a",4]]]],[11,"eq","","",2025,[[["cntsel_a",4]]]],[11,"eq","atsamd21g::tcc0::wave","",2138,[[["wavegen_a",4]]]],[11,"eq","","",2139,[[["ramp_a",4]]]],[11,"eq","atsamd21g::tcc0::waveb","",2207,[[["wavegenb_a",4]]]],[11,"eq","","",2208,[[["rampb_a",4]]]],[11,"eq","atsamd21g::usb::device::ctrla","",2260,[[["mode_a",4]]]],[11,"eq","atsamd21g::usb::device::qosctrl","",2269,[[["cqos_a",4]]]],[11,"eq","","",2270,[[["dqos_a",4]]]],[11,"eq","atsamd21g::usb::device::ctrlb","",2277,[[["spdconf_a",4]]]],[11,"eq","","",2278,[[["lpmhdsk_a",4]]]],[11,"eq","atsamd21g::usb::device::status","",2297,[[["speed_a",4]]]],[11,"eq","","",2298,[[["linestate_a",4]]]],[11,"eq","atsamd21g::usb::device::fsmstatus","",2302,[[["fsmstate_a",4]]]],[11,"eq","atsamd21g::usb::host::ctrla","",2400,[[["mode_a",4]]]],[11,"eq","atsamd21g::usb::host::qosctrl","",2409,[[["cqos_a",4]]]],[11,"eq","","",2410,[[["dqos_a",4]]]],[11,"eq","atsamd21g::usb::host::ctrlb","",2417,[[["spdconf_a",4]]]],[11,"eq","atsamd21g::usb::host::fsmstatus","",2436,[[["fsmstate_a",4]]]],[11,"eq","atsamd21g::wdt::config","",2534,[[["per_a",4]]]],[11,"eq","","",2535,[[["window_a",4]]]],[11,"eq","atsamd21g::wdt::ewctrl","",2542,[[["ewoffset_a",4]]]],[11,"eq","atsamd21g::wdt::clear","",2557,[[["clear_aw",4]]]],[11,"clone","atsamd21g","",2,[[],["interrupt",4]]],[11,"clone","atsamd21g::generic","",3,[[],["variant",4]]],[11,"clone","atsamd21g::ac::statusa","",40,[[],["wstate0_a",4]]],[11,"clone","atsamd21g::ac::statusc","",44,[[],["wstate0_a",4]]],[11,"clone","atsamd21g::ac::winctrl","",47,[[],["wintsel0_a",4]]],[11,"clone","atsamd21g::ac::compctrl","",53,[[],["speed_a",4]]],[11,"clone","","",54,[[],["intsel_a",4]]],[11,"clone","","",55,[[],["muxneg_a",4]]],[11,"clone","","",56,[[],["muxpos_a",4]]],[11,"clone","","",57,[[],["out_a",4]]],[11,"clone","","",58,[[],["flen_a",4]]],[11,"clone","atsamd21g::adc::refctrl","",86,[[],["refsel_a",4]]],[11,"clone","atsamd21g::adc::avgctrl","",92,[[],["samplenum_a",4]]],[11,"clone","atsamd21g::adc::ctrlb","",101,[[],["ressel_a",4]]],[11,"clone","","",102,[[],["prescaler_a",4]]],[11,"clone","atsamd21g::adc::winctrl","",113,[[],["winmode_a",4]]],[11,"clone","atsamd21g::adc::inputctrl","",122,[[],["muxpos_a",4]]],[11,"clone","","",123,[[],["muxneg_a",4]]],[11,"clone","","",124,[[],["gain_a",4]]],[11,"clone","atsamd21g::dac::ctrlb","",186,[[],["refsel_a",4]]],[11,"clone","atsamd21g::dmac::crcctrl","",232,[[],["crcbeatsize_a",4]]],[11,"clone","","",233,[[],["crcpoly_a",4]]],[11,"clone","","",234,[[],["crcsrc_a",4]]],[11,"clone","atsamd21g::dmac::qosctrl","",255,[[],["wrbqos_a",4]]],[11,"clone","","",256,[[],["fqos_a",4]]],[11,"clone","","",257,[[],["dqos_a",4]]],[11,"clone","atsamd21g::dmac::chctrlb","",313,[[],["evact_a",4]]],[11,"clone","","",314,[[],["lvl_a",4]]],[11,"clone","","",315,[[],["trigsrc_a",4]]],[11,"clone","","",316,[[],["trigact_a",4]]],[11,"clone","","",317,[[],["cmd_a",4]]],[11,"clone","atsamd21g::eic::nmictrl","",393,[[],["nmisense_a",4]]],[11,"clone","atsamd21g::eic::config","",492,[[],["sense0_a",4]]],[11,"clone","","",493,[[],["sense1_a",4]]],[11,"clone","","",494,[[],["sense2_a",4]]],[11,"clone","","",495,[[],["sense3_a",4]]],[11,"clone","","",496,[[],["sense4_a",4]]],[11,"clone","","",497,[[],["sense5_a",4]]],[11,"clone","","",498,[[],["sense6_a",4]]],[11,"clone","","",499,[[],["sense7_a",4]]],[11,"clone","atsamd21g::evsys::channel","",530,[[],["path_a",4]]],[11,"clone","","",531,[[],["edgsel_a",4]]],[11,"clone","atsamd21g::evsys::user","",541,[[],["channel_a",4]]],[11,"clone","atsamd21g::gclk::clkctrl","",631,[[],["id_a",4]]],[11,"clone","","",632,[[],["gen_a",4]]],[11,"clone","atsamd21g::gclk::genctrl","",641,[[],["src_a",4]]],[11,"clone","atsamd21g::i2s::clkctrl","",670,[[],["slotsize_a",4]]],[11,"clone","","",671,[[],["fswidth_a",4]]],[11,"clone","","",672,[[],["bitdelay_a",4]]],[11,"clone","","",673,[[],["fssel_a",4]]],[11,"clone","","",674,[[],["scksel_a",4]]],[11,"clone","","",675,[[],["mcksel_a",4]]],[11,"clone","atsamd21g::i2s::serctrl","",729,[[],["sermode_a",4]]],[11,"clone","","",730,[[],["txdefault_a",4]]],[11,"clone","","",731,[[],["txsame_a",4]]],[11,"clone","","",732,[[],["clksel_a",4]]],[11,"clone","","",733,[[],["slotadj_a",4]]],[11,"clone","","",734,[[],["datasize_a",4]]],[11,"clone","","",735,[[],["wordadj_a",4]]],[11,"clone","","",736,[[],["extend_a",4]]],[11,"clone","","",737,[[],["bitrev_a",4]]],[11,"clone","","",738,[[],["mono_a",4]]],[11,"clone","","",739,[[],["dma_a",4]]],[11,"clone","atsamd21g::nvmctrl::ctrla","",796,[[],["cmd_a",4]]],[11,"clone","","",797,[[],["cmdex_a",4]]],[11,"clone","atsamd21g::nvmctrl::ctrlb","",804,[[],["rws_a",4]]],[11,"clone","","",805,[[],["sleepprm_a",4]]],[11,"clone","","",806,[[],["readmode_a",4]]],[11,"clone","atsamd21g::nvmctrl::param","",817,[[],["psz_a",4]]],[11,"clone","atsamd21g::pm::sleep","",849,[[],["idle_a",4]]],[11,"clone","atsamd21g::pm::cpusel","",854,[[],["cpudiv_a",4]]],[11,"clone","atsamd21g::pm::apbasel","",859,[[],["apbadiv_a",4]]],[11,"clone","atsamd21g::pm::apbbsel","",864,[[],["apbbdiv_a",4]]],[11,"clone","atsamd21g::pm::apbcsel","",869,[[],["apbcdiv_a",4]]],[11,"clone","atsamd21g::port::pmux0_","",970,[[],["pmuxe_a",4]]],[11,"clone","","",971,[[],["pmuxo_a",4]]],[11,"clone","atsamd21g::port::pmux1_","",978,[[],["pmuxe_a",4]]],[11,"clone","","",979,[[],["pmuxo_a",4]]],[11,"clone","atsamd21g::rtc::mode0::ctrl","",1001,[[],["mode_a",4]]],[11,"clone","","",1002,[[],["prescaler_a",4]]],[11,"clone","atsamd21g::rtc::mode1::ctrl","",1057,[[],["mode_a",4]]],[11,"clone","","",1058,[[],["prescaler_a",4]]],[11,"clone","atsamd21g::rtc::mode2::ctrl","",1119,[[],["mode_a",4]]],[11,"clone","","",1120,[[],["prescaler_a",4]]],[11,"clone","atsamd21g::rtc::mode2::clock","",1170,[[],["hour_a",4]]],[11,"clone","atsamd21g::rtc::mode2::alarm","",1180,[[],["hour_a",4]]],[11,"clone","atsamd21g::rtc::mode2::mask","",1190,[[],["sel_a",4]]],[11,"clone","atsamd21g::sercom0::i2cm::ctrla","",1200,[[],["mode_a",4]]],[11,"clone","atsamd21g::sercom0::i2cs::ctrla","",1266,[[],["mode_a",4]]],[11,"clone","atsamd21g::sercom0::spi::ctrla","",1323,[[],["mode_a",4]]],[11,"clone","atsamd21g::sercom0::usart::ctrla","",1382,[[],["mode_a",4]]],[11,"clone","atsamd21g::sysctrl::xosc","",1519,[[],["gain_a",4]]],[11,"clone","atsamd21g::sysctrl::osc8m","",1555,[[],["presc_a",4]]],[11,"clone","","",1556,[[],["frange_a",4]]],[11,"clone","atsamd21g::sysctrl::bod33","",1591,[[],["action_a",4]]],[11,"clone","","",1592,[[],["psel_a",4]]],[11,"clone","atsamd21g::sysctrl::dpllctrlb","",1623,[[],["filter_a",4]]],[11,"clone","","",1624,[[],["refclk_a",4]]],[11,"clone","","",1625,[[],["ltime_a",4]]],[11,"clone","atsamd21g::tc3::count8::ctrla","",1642,[[],["mode_a",4]]],[11,"clone","","",1643,[[],["wavegen_a",4]]],[11,"clone","","",1644,[[],["prescaler_a",4]]],[11,"clone","","",1645,[[],["prescsync_a",4]]],[11,"clone","atsamd21g::tc3::count8::ctrlbclr","",1664,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tc3::count8::ctrlbset","",1671,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tc3::count8::evctrl","",1687,[[],["evact_a",4]]],[11,"clone","atsamd21g::tc3::count16::ctrla","",1728,[[],["mode_a",4]]],[11,"clone","","",1729,[[],["wavegen_a",4]]],[11,"clone","","",1730,[[],["prescaler_a",4]]],[11,"clone","","",1731,[[],["prescsync_a",4]]],[11,"clone","atsamd21g::tc3::count16::ctrlbclr","",1750,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tc3::count16::ctrlbset","",1757,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tc3::count16::evctrl","",1773,[[],["evact_a",4]]],[11,"clone","atsamd21g::tc3::count32::ctrla","",1811,[[],["mode_a",4]]],[11,"clone","","",1812,[[],["wavegen_a",4]]],[11,"clone","","",1813,[[],["prescaler_a",4]]],[11,"clone","","",1814,[[],["prescsync_a",4]]],[11,"clone","atsamd21g::tc3::count32::ctrlbclr","",1833,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tc3::count32::ctrlbset","",1840,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tc3::count32::evctrl","",1856,[[],["evact_a",4]]],[11,"clone","atsamd21g::tcc0::ctrla","",1896,[[],["resolution_a",4]]],[11,"clone","","",1897,[[],["prescaler_a",4]]],[11,"clone","","",1898,[[],["prescsync_a",4]]],[11,"clone","atsamd21g::tcc0::ctrlbclr","",1915,[[],["idxcmd_a",4]]],[11,"clone","","",1916,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tcc0::ctrlbset","",1926,[[],["idxcmd_a",4]]],[11,"clone","","",1927,[[],["cmd_a",4]]],[11,"clone","atsamd21g::tcc0::fctrla","",1938,[[],["src_a",4]]],[11,"clone","","",1939,[[],["blank_a",4]]],[11,"clone","","",1940,[[],["halt_a",4]]],[11,"clone","","",1941,[[],["chsel_a",4]]],[11,"clone","","",1942,[[],["capture_a",4]]],[11,"clone","atsamd21g::tcc0::fctrlb","",1960,[[],["src_a",4]]],[11,"clone","","",1961,[[],["blank_a",4]]],[11,"clone","","",1962,[[],["halt_a",4]]],[11,"clone","","",1963,[[],["chsel_a",4]]],[11,"clone","","",1964,[[],["capture_a",4]]],[11,"clone","atsamd21g::tcc0::evctrl","",2023,[[],["evact0_a",4]]],[11,"clone","","",2024,[[],["evact1_a",4]]],[11,"clone","","",2025,[[],["cntsel_a",4]]],[11,"clone","atsamd21g::tcc0::wave","",2138,[[],["wavegen_a",4]]],[11,"clone","","",2139,[[],["ramp_a",4]]],[11,"clone","atsamd21g::tcc0::waveb","",2207,[[],["wavegenb_a",4]]],[11,"clone","","",2208,[[],["rampb_a",4]]],[11,"clone","atsamd21g::usb::device::ctrla","",2260,[[],["mode_a",4]]],[11,"clone","atsamd21g::usb::device::qosctrl","",2269,[[],["cqos_a",4]]],[11,"clone","","",2270,[[],["dqos_a",4]]],[11,"clone","atsamd21g::usb::device::ctrlb","",2277,[[],["spdconf_a",4]]],[11,"clone","","",2278,[[],["lpmhdsk_a",4]]],[11,"clone","atsamd21g::usb::device::status","",2297,[[],["speed_a",4]]],[11,"clone","","",2298,[[],["linestate_a",4]]],[11,"clone","atsamd21g::usb::device::fsmstatus","",2302,[[],["fsmstate_a",4]]],[11,"clone","atsamd21g::usb::host::ctrla","",2400,[[],["mode_a",4]]],[11,"clone","atsamd21g::usb::host::qosctrl","",2409,[[],["cqos_a",4]]],[11,"clone","","",2410,[[],["dqos_a",4]]],[11,"clone","atsamd21g::usb::host::ctrlb","",2417,[[],["spdconf_a",4]]],[11,"clone","atsamd21g::usb::host::fsmstatus","",2436,[[],["fsmstate_a",4]]],[11,"clone","atsamd21g::wdt::config","",2534,[[],["per_a",4]]],[11,"clone","","",2535,[[],["window_a",4]]],[11,"clone","atsamd21g::wdt::ewctrl","",2542,[[],["ewoffset_a",4]]],[11,"clone","atsamd21g::wdt::clear","",2557,[[],["clear_aw",4]]],[11,"nr","atsamd21g","",2,[[]]],[11,"take","","Returns all the core peripherals once",0,[[],[["peripherals",3],["option",4]]]],[11,"steal","","Unchecked version of `Peripherals::take`",0,[[],["peripherals",3]]],[11,"ptr","","Returns a pointer to the register block",2595,[[]]],[11,"enable_trace","","Enables TRACE. This is for example required by the…",2596,[[]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",2596,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",2596,[[]]],[11,"ptr","","Returns a pointer to the register block",2596,[[]]],[11,"ptr","","Returns a pointer to the register block",2597,[[]]],[11,"ptr","","Returns a pointer to the register block",2600,[[]]],[11,"clear_pending","","Clears `interrupt`\'s pending state",2601,[[]]],[11,"mask","","Disables `interrupt`",2601,[[]]],[11,"unmask","","Enables `interrupt`",2601,[[]]],[11,"disable","","Disables `interrupt`",2601,[[]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",2601,[[]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",2601,[[]]],[11,"is_enabled","","Checks if `interrupt` is enabled",2601,[[]]],[11,"is_pending","","Checks if `interrupt` is pending",2601,[[]]],[11,"pend","","Forces `interrupt` into pending state",2601,[[]]],[11,"set_pending","","Forces `interrupt` into pending state",2601,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of `interrupt` to `prio`",2601,[[]]],[11,"unpend","","Clears `interrupt`\'s pending state",2601,[[]]],[11,"ptr","","Returns a pointer to the register block",2601,[[]]],[11,"vect_active","","Returns the active exception number",2602,[[],["vectactive",4]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",2602,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",2602,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",2602,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",2602,[[]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",2602,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",2602,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",2602,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",2602,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",2602,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will pend…",2602,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",2602,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",2602,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",2602,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",2602,[[["systemhandler",4]]]],[11,"ptr","","Returns a pointer to the register block",2602,[[]]],[11,"clear_current","","Clears current value to 0",2603,[[]]],[11,"disable_counter","","Disables counter",2603,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",2603,[[]]],[11,"enable_counter","","Enables counter",2603,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",2603,[[]]],[11,"get_clock_source","","Gets clock source",2603,[[],["systclksource",4]]],[11,"get_current","","Gets current value",2603,[[]]],[11,"get_reload","","Gets reload value",2603,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",2603,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",2603,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",2603,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",2603,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",2603,[[]]],[11,"is_precise","","Checks if the calibration value is precise",2603,[[]]],[11,"set_clock_source","","Sets clock source",2603,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",2603,[[]]],[11,"ptr","","Returns a pointer to the register block",2603,[[]]]],"p":[[3,"CorePeripherals"],[3,"Peripherals"],[4,"Interrupt"],[4,"Variant"],[8,"ResetValue"],[3,"Reg"],[3,"R"],[3,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"LPMUX_W"],[6,"R"],[6,"W"],[3,"START0_W"],[3,"START1_W"],[6,"W"],[3,"COMPEO0_W"],[3,"COMPEO1_W"],[3,"WINEO0_W"],[3,"COMPEI0_W"],[3,"COMPEI1_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[4,"WSTATE0_A"],[6,"WSTATE0_R"],[6,"R"],[6,"R"],[4,"WSTATE0_A"],[6,"WSTATE0_R"],[6,"R"],[4,"WINTSEL0_A"],[3,"WEN0_W"],[6,"WINTSEL0_R"],[3,"WINTSEL0_W"],[6,"R"],[6,"W"],[4,"SPEED_A"],[4,"INTSEL_A"],[4,"MUXNEG_A"],[4,"MUXPOS_A"],[4,"OUT_A"],[4,"FLEN_A"],[3,"ENABLE_W"],[3,"SINGLE_W"],[6,"SPEED_R"],[3,"SPEED_W"],[6,"INTSEL_R"],[3,"INTSEL_W"],[6,"MUXNEG_R"],[3,"MUXNEG_W"],[6,"MUXPOS_R"],[3,"MUXPOS_W"],[3,"SWAP_W"],[6,"OUT_R"],[3,"OUT_W"],[3,"HYST_W"],[6,"FLEN_R"],[3,"FLEN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[4,"REFSEL_A"],[6,"REFSEL_R"],[3,"REFSEL_W"],[3,"REFCOMP_W"],[6,"R"],[6,"W"],[4,"SAMPLENUM_A"],[6,"SAMPLENUM_R"],[3,"SAMPLENUM_W"],[3,"ADJRES_W"],[6,"R"],[6,"W"],[3,"SAMPLEN_W"],[6,"R"],[6,"W"],[4,"RESSEL_A"],[4,"PRESCALER_A"],[3,"DIFFMODE_W"],[3,"LEFTADJ_W"],[3,"FREERUN_W"],[3,"CORREN_W"],[6,"RESSEL_R"],[3,"RESSEL_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[4,"WINMODE_A"],[6,"WINMODE_R"],[3,"WINMODE_W"],[6,"R"],[6,"W"],[3,"FLUSH_W"],[3,"START_W"],[6,"R"],[6,"W"],[4,"MUXPOS_A"],[4,"MUXNEG_A"],[4,"GAIN_A"],[6,"MUXPOS_R"],[3,"MUXPOS_W"],[6,"MUXNEG_R"],[3,"MUXNEG_W"],[3,"INPUTSCAN_W"],[3,"INPUTOFFSET_W"],[6,"GAIN_R"],[3,"GAIN_W"],[6,"R"],[6,"W"],[3,"STARTEI_W"],[3,"SYNCEI_W"],[3,"RESRDYEO_W"],[3,"WINMONEO_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"WINLT_W"],[6,"R"],[6,"W"],[3,"WINUT_W"],[6,"R"],[6,"W"],[3,"GAINCORR_W"],[6,"R"],[6,"W"],[3,"OFFSETCORR_W"],[6,"R"],[6,"W"],[3,"LINEARITY_CAL_W"],[3,"BIAS_CAL_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[4,"REFSEL_A"],[3,"EOEN_W"],[3,"IOEN_W"],[3,"LEFTADJ_W"],[3,"VPD_W"],[3,"BDWP_W"],[6,"REFSEL_R"],[3,"REFSEL_W"],[6,"R"],[6,"W"],[3,"STARTEI_W"],[3,"EMPTYEO_W"],[6,"R"],[6,"W"],[3,"UNDERRUN_W"],[3,"EMPTY_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"UNDERRUN_W"],[3,"EMPTY_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"UNDERRUN_W"],[3,"EMPTY_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DATABUF_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"DMAENABLE_W"],[3,"CRCENABLE_W"],[3,"LVLEN0_W"],[3,"LVLEN1_W"],[3,"LVLEN2_W"],[3,"LVLEN3_W"],[6,"R"],[6,"W"],[4,"CRCBEATSIZE_A"],[4,"CRCPOLY_A"],[4,"CRCSRC_A"],[6,"CRCBEATSIZE_R"],[3,"CRCBEATSIZE_W"],[6,"CRCPOLY_R"],[3,"CRCPOLY_W"],[6,"CRCSRC_R"],[3,"CRCSRC_W"],[6,"R"],[6,"W"],[3,"CRCDATAIN_W"],[6,"R"],[6,"W"],[3,"CRCCHKSUM_W"],[6,"R"],[6,"W"],[3,"CRCBUSY_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"WRBQOS_A"],[4,"FQOS_A"],[4,"DQOS_A"],[6,"WRBQOS_R"],[3,"WRBQOS_W"],[6,"FQOS_R"],[3,"FQOS_W"],[6,"DQOS_R"],[3,"DQOS_W"],[6,"R"],[6,"W"],[3,"SWTRIG0_W"],[3,"SWTRIG1_W"],[3,"SWTRIG2_W"],[3,"SWTRIG3_W"],[3,"SWTRIG4_W"],[3,"SWTRIG5_W"],[3,"SWTRIG6_W"],[3,"SWTRIG7_W"],[3,"SWTRIG8_W"],[3,"SWTRIG9_W"],[3,"SWTRIG10_W"],[3,"SWTRIG11_W"],[6,"R"],[6,"W"],[3,"LVLPRI0_W"],[3,"RRLVLEN0_W"],[3,"LVLPRI1_W"],[3,"RRLVLEN1_W"],[3,"LVLPRI2_W"],[3,"RRLVLEN2_W"],[3,"LVLPRI3_W"],[3,"RRLVLEN3_W"],[6,"R"],[6,"W"],[3,"ID_W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"BASEADDR_W"],[6,"R"],[6,"W"],[3,"WRBADDR_W"],[6,"R"],[6,"W"],[3,"ID_W"],[6,"R"],[6,"W"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[4,"LVL_A"],[4,"TRIGSRC_A"],[4,"TRIGACT_A"],[4,"CMD_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"EVIE_W"],[3,"EVOE_W"],[6,"LVL_R"],[3,"LVL_W"],[6,"TRIGSRC_R"],[3,"TRIGSRC_W"],[6,"TRIGACT_R"],[3,"TRIGACT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"CRC_W"],[3,"MBIST_W"],[3,"CE_W"],[6,"W"],[3,"DONE_W"],[3,"CRSTEXT_W"],[3,"BERR_W"],[3,"FAIL_W"],[3,"PERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[6,"R"],[6,"W"],[3,"LENGTH_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[6,"R"],[4,"NMISENSE_A"],[6,"NMISENSE_R"],[3,"NMISENSE_W"],[3,"NMIFILTEN_W"],[6,"R"],[6,"W"],[3,"NMI_W"],[6,"R"],[6,"W"],[3,"EXTINTEO0_W"],[3,"EXTINTEO1_W"],[3,"EXTINTEO2_W"],[3,"EXTINTEO3_W"],[3,"EXTINTEO4_W"],[3,"EXTINTEO5_W"],[3,"EXTINTEO6_W"],[3,"EXTINTEO7_W"],[3,"EXTINTEO8_W"],[3,"EXTINTEO9_W"],[3,"EXTINTEO10_W"],[3,"EXTINTEO11_W"],[3,"EXTINTEO12_W"],[3,"EXTINTEO13_W"],[3,"EXTINTEO14_W"],[3,"EXTINTEO15_W"],[6,"R"],[6,"W"],[3,"EXTINT0_W"],[3,"EXTINT1_W"],[3,"EXTINT2_W"],[3,"EXTINT3_W"],[3,"EXTINT4_W"],[3,"EXTINT5_W"],[3,"EXTINT6_W"],[3,"EXTINT7_W"],[3,"EXTINT8_W"],[3,"EXTINT9_W"],[3,"EXTINT10_W"],[3,"EXTINT11_W"],[3,"EXTINT12_W"],[3,"EXTINT13_W"],[3,"EXTINT14_W"],[3,"EXTINT15_W"],[6,"R"],[6,"W"],[3,"EXTINT0_W"],[3,"EXTINT1_W"],[3,"EXTINT2_W"],[3,"EXTINT3_W"],[3,"EXTINT4_W"],[3,"EXTINT5_W"],[3,"EXTINT6_W"],[3,"EXTINT7_W"],[3,"EXTINT8_W"],[3,"EXTINT9_W"],[3,"EXTINT10_W"],[3,"EXTINT11_W"],[3,"EXTINT12_W"],[3,"EXTINT13_W"],[3,"EXTINT14_W"],[3,"EXTINT15_W"],[6,"R"],[6,"W"],[3,"EXTINT0_W"],[3,"EXTINT1_W"],[3,"EXTINT2_W"],[3,"EXTINT3_W"],[3,"EXTINT4_W"],[3,"EXTINT5_W"],[3,"EXTINT6_W"],[3,"EXTINT7_W"],[3,"EXTINT8_W"],[3,"EXTINT9_W"],[3,"EXTINT10_W"],[3,"EXTINT11_W"],[3,"EXTINT12_W"],[3,"EXTINT13_W"],[3,"EXTINT14_W"],[3,"EXTINT15_W"],[6,"R"],[6,"W"],[3,"WAKEUPEN0_W"],[3,"WAKEUPEN1_W"],[3,"WAKEUPEN2_W"],[3,"WAKEUPEN3_W"],[3,"WAKEUPEN4_W"],[3,"WAKEUPEN5_W"],[3,"WAKEUPEN6_W"],[3,"WAKEUPEN7_W"],[3,"WAKEUPEN8_W"],[3,"WAKEUPEN9_W"],[3,"WAKEUPEN10_W"],[3,"WAKEUPEN11_W"],[3,"WAKEUPEN12_W"],[3,"WAKEUPEN13_W"],[3,"WAKEUPEN14_W"],[3,"WAKEUPEN15_W"],[6,"R"],[6,"W"],[4,"SENSE0_A"],[4,"SENSE1_A"],[4,"SENSE2_A"],[4,"SENSE3_A"],[4,"SENSE4_A"],[4,"SENSE5_A"],[4,"SENSE6_A"],[4,"SENSE7_A"],[6,"SENSE0_R"],[3,"SENSE0_W"],[3,"FILTEN0_W"],[6,"SENSE1_R"],[3,"SENSE1_W"],[3,"FILTEN1_W"],[6,"SENSE2_R"],[3,"SENSE2_W"],[3,"FILTEN2_W"],[6,"SENSE3_R"],[3,"SENSE3_W"],[3,"FILTEN3_W"],[6,"SENSE4_R"],[3,"SENSE4_W"],[3,"FILTEN4_W"],[6,"SENSE5_R"],[3,"SENSE5_W"],[3,"FILTEN5_W"],[6,"SENSE6_R"],[3,"SENSE6_W"],[3,"FILTEN6_W"],[6,"SENSE7_R"],[3,"SENSE7_W"],[3,"FILTEN7_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"GCLKREQ_W"],[6,"W"],[4,"PATH_A"],[4,"EDGSEL_A"],[3,"CHANNEL_W"],[3,"SWEVT_W"],[3,"EVGEN_W"],[6,"PATH_R"],[3,"PATH_W"],[6,"EDGSEL_R"],[3,"EDGSEL_W"],[6,"R"],[6,"W"],[4,"CHANNEL_A"],[3,"USER_W"],[6,"CHANNEL_R"],[3,"CHANNEL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"OVR0_W"],[3,"OVR1_W"],[3,"OVR2_W"],[3,"OVR3_W"],[3,"OVR4_W"],[3,"OVR5_W"],[3,"OVR6_W"],[3,"OVR7_W"],[3,"EVD0_W"],[3,"EVD1_W"],[3,"EVD2_W"],[3,"EVD3_W"],[3,"EVD4_W"],[3,"EVD5_W"],[3,"EVD6_W"],[3,"EVD7_W"],[3,"OVR8_W"],[3,"OVR9_W"],[3,"OVR10_W"],[3,"OVR11_W"],[3,"EVD8_W"],[3,"EVD9_W"],[3,"EVD10_W"],[3,"EVD11_W"],[6,"R"],[6,"W"],[3,"OVR0_W"],[3,"OVR1_W"],[3,"OVR2_W"],[3,"OVR3_W"],[3,"OVR4_W"],[3,"OVR5_W"],[3,"OVR6_W"],[3,"OVR7_W"],[3,"EVD0_W"],[3,"EVD1_W"],[3,"EVD2_W"],[3,"EVD3_W"],[3,"EVD4_W"],[3,"EVD5_W"],[3,"EVD6_W"],[3,"EVD7_W"],[3,"OVR8_W"],[3,"OVR9_W"],[3,"OVR10_W"],[3,"OVR11_W"],[3,"EVD8_W"],[3,"EVD9_W"],[3,"EVD10_W"],[3,"EVD11_W"],[6,"R"],[6,"W"],[3,"OVR0_W"],[3,"OVR1_W"],[3,"OVR2_W"],[3,"OVR3_W"],[3,"OVR4_W"],[3,"OVR5_W"],[3,"OVR6_W"],[3,"OVR7_W"],[3,"EVD0_W"],[3,"EVD1_W"],[3,"EVD2_W"],[3,"EVD3_W"],[3,"EVD4_W"],[3,"EVD5_W"],[3,"EVD6_W"],[3,"EVD7_W"],[3,"OVR8_W"],[3,"OVR9_W"],[3,"OVR10_W"],[3,"OVR11_W"],[3,"EVD8_W"],[3,"EVD9_W"],[3,"EVD10_W"],[3,"EVD11_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[6,"R"],[6,"W"],[6,"R"],[4,"ID_A"],[4,"GEN_A"],[6,"ID_R"],[3,"ID_W"],[6,"GEN_R"],[3,"GEN_W"],[3,"CLKEN_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[4,"SRC_A"],[3,"ID_W"],[6,"SRC_R"],[3,"SRC_W"],[3,"GENEN_W"],[3,"IDC_W"],[3,"OOV_W"],[3,"OE_W"],[3,"DIVSEL_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[3,"ID_W"],[3,"DIV_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SFR_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"CKEN0_W"],[3,"CKEN1_W"],[3,"SEREN0_W"],[3,"SEREN1_W"],[6,"R"],[6,"W"],[4,"SLOTSIZE_A"],[4,"FSWIDTH_A"],[4,"BITDELAY_A"],[4,"FSSEL_A"],[4,"SCKSEL_A"],[4,"MCKSEL_A"],[6,"SLOTSIZE_R"],[3,"SLOTSIZE_W"],[3,"NBSLOTS_W"],[6,"FSWIDTH_R"],[3,"FSWIDTH_W"],[6,"BITDELAY_R"],[3,"BITDELAY_W"],[6,"FSSEL_R"],[3,"FSSEL_W"],[3,"FSINV_W"],[6,"SCKSEL_R"],[3,"SCKSEL_W"],[6,"MCKSEL_R"],[3,"MCKSEL_W"],[3,"MCKEN_W"],[3,"MCKDIV_W"],[3,"MCKOUTDIV_W"],[3,"FSOUTINV_W"],[3,"SCKOUTINV_W"],[3,"MCKOUTINV_W"],[6,"R"],[6,"W"],[3,"RXRDY0_W"],[3,"RXRDY1_W"],[3,"RXOR0_W"],[3,"RXOR1_W"],[3,"TXRDY0_W"],[3,"TXRDY1_W"],[3,"TXUR0_W"],[3,"TXUR1_W"],[6,"R"],[6,"W"],[3,"RXRDY0_W"],[3,"RXRDY1_W"],[3,"RXOR0_W"],[3,"RXOR1_W"],[3,"TXRDY0_W"],[3,"TXRDY1_W"],[3,"TXUR0_W"],[3,"TXUR1_W"],[6,"R"],[6,"W"],[3,"RXRDY0_W"],[3,"RXRDY1_W"],[3,"RXOR0_W"],[3,"RXOR1_W"],[3,"TXRDY0_W"],[3,"TXRDY1_W"],[3,"TXUR0_W"],[3,"TXUR1_W"],[6,"R"],[6,"W"],[6,"R"],[4,"SERMODE_A"],[4,"TXDEFAULT_A"],[4,"TXSAME_A"],[4,"CLKSEL_A"],[4,"SLOTADJ_A"],[4,"DATASIZE_A"],[4,"WORDADJ_A"],[4,"EXTEND_A"],[4,"BITREV_A"],[4,"MONO_A"],[4,"DMA_A"],[6,"SERMODE_R"],[3,"SERMODE_W"],[6,"TXDEFAULT_R"],[3,"TXDEFAULT_W"],[6,"TXSAME_R"],[3,"TXSAME_W"],[6,"CLKSEL_R"],[3,"CLKSEL_W"],[6,"SLOTADJ_R"],[3,"SLOTADJ_W"],[6,"DATASIZE_R"],[3,"DATASIZE_W"],[6,"WORDADJ_R"],[3,"WORDADJ_W"],[6,"EXTEND_R"],[3,"EXTEND_W"],[6,"BITREV_R"],[3,"BITREV_W"],[3,"SLOTDIS0_W"],[3,"SLOTDIS1_W"],[3,"SLOTDIS2_W"],[3,"SLOTDIS3_W"],[3,"SLOTDIS4_W"],[3,"SLOTDIS5_W"],[3,"SLOTDIS6_W"],[3,"SLOTDIS7_W"],[6,"MONO_R"],[3,"MONO_W"],[6,"DMA_R"],[3,"DMA_W"],[3,"RXLOOP_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"WRAP_W"],[3,"POINTER_W"],[6,"R"],[6,"W"],[3,"MASK_W"],[3,"TSTARTEN_W"],[3,"TSTOPEN_W"],[3,"SFRWPRIV_W"],[3,"RAMPRIV_W"],[3,"HALTREQ_W"],[3,"EN_W"],[6,"R"],[6,"W"],[3,"AUTOSTOP_W"],[3,"AUTOHALT_W"],[3,"WATERMARK_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"CMD_A"],[4,"CMDEX_A"],[6,"CMD_R"],[3,"CMD_W"],[6,"CMDEX_R"],[3,"CMDEX_W"],[6,"R"],[6,"W"],[4,"RWS_A"],[4,"SLEEPPRM_A"],[4,"READMODE_A"],[6,"RWS_R"],[3,"RWS_W"],[3,"MANW_W"],[6,"SLEEPPRM_R"],[3,"SLEEPPRM_W"],[6,"READMODE_R"],[3,"READMODE_W"],[3,"CACHEDIS_W"],[6,"R"],[6,"W"],[4,"PSZ_A"],[6,"PSZ_R"],[6,"R"],[3,"READY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"READY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"LOAD_W"],[3,"PROGE_W"],[3,"LOCKE_W"],[3,"NVME_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"WP_W"],[6,"R"],[6,"W"],[3,"WP_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"IDLE_A"],[6,"IDLE_R"],[3,"IDLE_W"],[6,"R"],[6,"W"],[4,"CPUDIV_A"],[6,"CPUDIV_R"],[3,"CPUDIV_W"],[6,"R"],[6,"W"],[4,"APBADIV_A"],[6,"APBADIV_R"],[3,"APBADIV_W"],[6,"R"],[6,"W"],[4,"APBBDIV_A"],[6,"APBBDIV_R"],[3,"APBBDIV_W"],[6,"R"],[6,"W"],[4,"APBCDIV_A"],[6,"APBCDIV_R"],[3,"APBCDIV_W"],[6,"R"],[6,"W"],[3,"HPB0__W"],[3,"HPB1__W"],[3,"HPB2__W"],[3,"DSU__W"],[3,"NVMCTRL__W"],[3,"DMAC__W"],[3,"USB__W"],[6,"R"],[6,"W"],[3,"PAC0__W"],[3,"PM__W"],[3,"SYSCTRL__W"],[3,"GCLK__W"],[3,"WDT__W"],[3,"RTC__W"],[3,"EIC__W"],[6,"R"],[6,"W"],[3,"PAC1__W"],[3,"DSU__W"],[3,"NVMCTRL__W"],[3,"PORT__W"],[3,"DMAC__W"],[3,"USB__W"],[3,"HMATRIX__W"],[6,"R"],[6,"W"],[3,"PAC2__W"],[3,"EVSYS__W"],[3,"SERCOM0__W"],[3,"SERCOM1__W"],[3,"SERCOM2__W"],[3,"SERCOM3__W"],[3,"SERCOM4__W"],[3,"SERCOM5__W"],[3,"TCC0__W"],[3,"TCC1__W"],[3,"TCC2__W"],[3,"TC3__W"],[3,"TC4__W"],[3,"TC5__W"],[3,"ADC__W"],[3,"AC__W"],[3,"DAC__W"],[3,"PTC__W"],[3,"I2S__W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"DIR_W"],[6,"R"],[6,"W"],[3,"DIRCLR_W"],[6,"R"],[6,"W"],[3,"DIRSET_W"],[6,"R"],[6,"W"],[3,"DIRTGL_W"],[6,"R"],[6,"W"],[3,"OUT_W"],[6,"R"],[6,"W"],[3,"OUTCLR_W"],[6,"R"],[6,"W"],[3,"OUTSET_W"],[6,"R"],[6,"W"],[3,"OUTTGL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"SAMPLING_W"],[6,"W"],[3,"PINMASK_W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[3,"PMUX_W"],[3,"WRPMUX_W"],[3,"WRPINCFG_W"],[3,"HWSEL_W"],[6,"W"],[4,"PMUXE_A"],[4,"PMUXO_A"],[6,"PMUXE_R"],[3,"PMUXE_W"],[6,"PMUXO_R"],[3,"PMUXO_W"],[6,"R"],[6,"W"],[4,"PMUXE_A"],[4,"PMUXO_A"],[6,"PMUXE_R"],[3,"PMUXE_W"],[6,"PMUXO_R"],[3,"PMUXO_W"],[6,"R"],[6,"W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[6,"R"],[6,"W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[6,"R"],[6,"W"],[3,"MODE0"],[3,"MODE1"],[3,"MODE2"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"MATCHCLR_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"CMPEO0_W"],[3,"OVFEO_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COMP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"CMPEO0_W"],[3,"CMPEO1_W"],[3,"OVFEO_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"COMP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"CLKREP_W"],[3,"MATCHCLR_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"ALARMEO0_W"],[3,"OVFEO_W"],[6,"R"],[6,"W"],[3,"ALARM0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"ALARM0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"ALARM0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[4,"SEL_A"],[6,"SEL_R"],[3,"SEL_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"I2CM"],[3,"I2CS"],[3,"SPI"],[3,"USART"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"PINOUT_W"],[3,"SDAHOLD_W"],[3,"MEXTTOEN_W"],[3,"SEXTTOEN_W"],[3,"SPEED_W"],[3,"SCLSM_W"],[3,"INACTOUT_W"],[3,"LOWTOUTEN_W"],[6,"R"],[6,"W"],[3,"SMEN_W"],[3,"QCEN_W"],[3,"CMD_W"],[3,"ACKACT_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"BAUDLOW_W"],[3,"HSBAUD_W"],[3,"HSBAUDLOW_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUSERR_W"],[3,"ARBLOST_W"],[3,"BUSSTATE_W"],[3,"LOWTOUT_W"],[3,"MEXTTOUT_W"],[3,"SEXTTOUT_W"],[3,"LENERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[3,"LENEN_W"],[3,"HS_W"],[3,"TENBITEN_W"],[3,"LEN_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"PINOUT_W"],[3,"SDAHOLD_W"],[3,"SEXTTOEN_W"],[3,"SPEED_W"],[3,"SCLSM_W"],[3,"LOWTOUTEN_W"],[6,"R"],[6,"W"],[3,"SMEN_W"],[3,"GCMD_W"],[3,"AACKEN_W"],[3,"AMODE_W"],[3,"CMD_W"],[3,"ACKACT_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUSERR_W"],[3,"COLL_W"],[3,"LOWTOUT_W"],[3,"SEXTTOUT_W"],[3,"HS_W"],[6,"R"],[6,"W"],[6,"R"],[3,"GENCEN_W"],[3,"ADDR_W"],[3,"TENBITEN_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[3,"DOPO_W"],[3,"DIPO_W"],[3,"FORM_W"],[3,"CPHA_W"],[3,"CPOL_W"],[3,"DORD_W"],[6,"R"],[6,"W"],[3,"CHSIZE_W"],[3,"PLOADEN_W"],[3,"SSDE_W"],[3,"MSSEN_W"],[3,"AMODE_W"],[3,"RXEN_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"TXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUFOVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[3,"SAMPR_W"],[3,"TXPO_W"],[3,"RXPO_W"],[3,"SAMPA_W"],[3,"FORM_W"],[3,"CMODE_W"],[3,"CPOL_W"],[3,"DORD_W"],[6,"R"],[6,"W"],[3,"CHSIZE_W"],[3,"SBMODE_W"],[3,"COLDEN_W"],[3,"SFDE_W"],[3,"ENC_W"],[3,"PMODE_W"],[3,"TXEN_W"],[3,"RXEN_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"RXPL_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"TXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PERR_W"],[3,"FERR_W"],[3,"BUFOVF_W"],[3,"ISF_W"],[3,"COLL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"XOSCRDY_W"],[3,"XOSC32KRDY_W"],[3,"OSC32KRDY_W"],[3,"OSC8MRDY_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"DPLLLCKR_W"],[3,"DPLLLCKF_W"],[3,"DPLLLTO_W"],[6,"R"],[6,"W"],[3,"XOSCRDY_W"],[3,"XOSC32KRDY_W"],[3,"OSC32KRDY_W"],[3,"OSC8MRDY_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"DPLLLCKR_W"],[3,"DPLLLCKF_W"],[3,"DPLLLTO_W"],[6,"R"],[6,"W"],[3,"XOSCRDY_W"],[3,"XOSC32KRDY_W"],[3,"OSC32KRDY_W"],[3,"OSC8MRDY_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"DPLLLCKR_W"],[3,"DPLLLCKF_W"],[3,"DPLLLTO_W"],[6,"R"],[6,"W"],[6,"R"],[4,"GAIN_A"],[3,"ENABLE_W"],[3,"XTALEN_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"GAIN_R"],[3,"GAIN_W"],[3,"AMPGC_W"],[3,"STARTUP_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"XTALEN_W"],[3,"EN32K_W"],[3,"EN1K_W"],[3,"AAMPEN_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"STARTUP_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"EN32K_W"],[3,"EN1K_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"STARTUP_W"],[3,"WRTLOCK_W"],[3,"CALIB_W"],[6,"R"],[6,"W"],[3,"CALIB_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[4,"PRESC_A"],[4,"FRANGE_A"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"PRESC_R"],[3,"PRESC_W"],[3,"CALIB_W"],[6,"FRANGE_R"],[3,"FRANGE_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"MODE_W"],[3,"STABLE_W"],[3,"LLAW_W"],[3,"USBCRM_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"CCDIS_W"],[3,"QLDIS_W"],[3,"BPLCKC_W"],[3,"WAITLOCK_W"],[6,"R"],[6,"W"],[3,"FINE_W"],[3,"COARSE_W"],[6,"R"],[6,"W"],[3,"MUL_W"],[3,"FSTEP_W"],[3,"CSTEP_W"],[6,"R"],[6,"W"],[3,"READREQ_W"],[6,"W"],[4,"ACTION_A"],[4,"PSEL_A"],[3,"ENABLE_W"],[3,"HYST_W"],[6,"ACTION_R"],[3,"ACTION_W"],[3,"RUNSTDBY_W"],[3,"MODE_W"],[3,"CEN_W"],[6,"PSEL_R"],[3,"PSEL_W"],[3,"LEVEL_W"],[6,"R"],[6,"W"],[3,"RUNSTDBY_W"],[3,"FORCELDO_W"],[6,"R"],[6,"W"],[3,"TSEN_W"],[3,"BGOUTEN_W"],[3,"CALIB_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"R"],[6,"W"],[3,"LDR_W"],[3,"LDRFRAC_W"],[6,"R"],[6,"W"],[4,"FILTER_A"],[4,"REFCLK_A"],[4,"LTIME_A"],[6,"FILTER_R"],[3,"FILTER_W"],[3,"LPEN_W"],[3,"WUF_W"],[6,"REFCLK_R"],[3,"REFCLK_W"],[6,"LTIME_R"],[3,"LTIME_W"],[3,"LBYPASS_W"],[3,"DIV_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT8"],[3,"COUNT16"],[3,"COUNT32"],[4,"MODE_A"],[4,"WAVEGEN_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"WAVEGEN_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"WAVEGEN_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"RESOLUTION_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"RESOLUTION_R"],[3,"RESOLUTION_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[3,"ALOCK_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[3,"CPTEN2_W"],[3,"CPTEN3_W"],[6,"R"],[6,"W"],[4,"IDXCMD_A"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"IDXCMD_R"],[3,"IDXCMD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"IDXCMD_A"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"IDXCMD_R"],[3,"IDXCMD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[6,"R"],[4,"SRC_A"],[4,"BLANK_A"],[4,"HALT_A"],[4,"CHSEL_A"],[4,"CAPTURE_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"KEEP_W"],[3,"QUAL_W"],[6,"BLANK_R"],[3,"BLANK_W"],[3,"RESTART_W"],[6,"HALT_R"],[3,"HALT_W"],[6,"CHSEL_R"],[3,"CHSEL_W"],[6,"CAPTURE_R"],[3,"CAPTURE_W"],[3,"BLANKVAL_W"],[3,"FILTERVAL_W"],[6,"R"],[6,"W"],[4,"SRC_A"],[4,"BLANK_A"],[4,"HALT_A"],[4,"CHSEL_A"],[4,"CAPTURE_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"KEEP_W"],[3,"QUAL_W"],[6,"BLANK_R"],[3,"BLANK_W"],[3,"RESTART_W"],[6,"HALT_R"],[3,"HALT_W"],[6,"CHSEL_R"],[3,"CHSEL_W"],[6,"CAPTURE_R"],[3,"CAPTURE_W"],[3,"BLANKVAL_W"],[3,"FILTERVAL_W"],[6,"R"],[6,"W"],[3,"OTMX_W"],[3,"DTIEN0_W"],[3,"DTIEN1_W"],[3,"DTIEN2_W"],[3,"DTIEN3_W"],[3,"DTLS_W"],[3,"DTHS_W"],[6,"R"],[6,"W"],[3,"NRE0_W"],[3,"NRE1_W"],[3,"NRE2_W"],[3,"NRE3_W"],[3,"NRE4_W"],[3,"NRE5_W"],[3,"NRE6_W"],[3,"NRE7_W"],[3,"NRV0_W"],[3,"NRV1_W"],[3,"NRV2_W"],[3,"NRV3_W"],[3,"NRV4_W"],[3,"NRV5_W"],[3,"NRV6_W"],[3,"NRV7_W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"INVEN2_W"],[3,"INVEN3_W"],[3,"INVEN4_W"],[3,"INVEN5_W"],[3,"INVEN6_W"],[3,"INVEN7_W"],[3,"FILTERVAL0_W"],[3,"FILTERVAL1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[3,"FDDBD_W"],[6,"R"],[6,"W"],[4,"EVACT0_A"],[4,"EVACT1_A"],[4,"CNTSEL_A"],[6,"EVACT0_R"],[3,"EVACT0_W"],[6,"EVACT1_R"],[3,"EVACT1_W"],[6,"CNTSEL_R"],[3,"CNTSEL_W"],[3,"OVFEO_W"],[3,"TRGEO_W"],[3,"CNTEO_W"],[3,"TCINV0_W"],[3,"TCINV1_W"],[3,"TCEI0_W"],[3,"TCEI1_W"],[3,"MCEI0_W"],[3,"MCEI1_W"],[3,"MCEI2_W"],[3,"MCEI3_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[3,"MCEO2_W"],[3,"MCEO3_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[6,"R"],[6,"W"],[3,"DFS_W"],[3,"PATTBV_W"],[3,"WAVEBV_W"],[3,"PERBV_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"CCBV0_W"],[3,"CCBV1_W"],[3,"CCBV2_W"],[3,"CCBV3_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PGE0_W"],[3,"PGE1_W"],[3,"PGE2_W"],[3,"PGE3_W"],[3,"PGE4_W"],[3,"PGE5_W"],[3,"PGE6_W"],[3,"PGE7_W"],[3,"PGV0_W"],[3,"PGV1_W"],[3,"PGV2_W"],[3,"PGV3_W"],[3,"PGV4_W"],[3,"PGV5_W"],[3,"PGV6_W"],[3,"PGV7_W"],[6,"R"],[6,"W"],[4,"WAVEGEN_A"],[4,"RAMP_A"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"RAMP_R"],[3,"RAMP_W"],[3,"CIPEREN_W"],[3,"CICCEN0_W"],[3,"CICCEN1_W"],[3,"CICCEN2_W"],[3,"CICCEN3_W"],[3,"POL0_W"],[3,"POL1_W"],[3,"POL2_W"],[3,"POL3_W"],[3,"SWAP0_W"],[3,"SWAP1_W"],[3,"SWAP2_W"],[3,"SWAP3_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"PGEB0_W"],[3,"PGEB1_W"],[3,"PGEB2_W"],[3,"PGEB3_W"],[3,"PGEB4_W"],[3,"PGEB5_W"],[3,"PGEB6_W"],[3,"PGEB7_W"],[3,"PGVB0_W"],[3,"PGVB1_W"],[3,"PGVB2_W"],[3,"PGVB3_W"],[3,"PGVB4_W"],[3,"PGVB5_W"],[3,"PGVB6_W"],[3,"PGVB7_W"],[6,"R"],[6,"W"],[4,"WAVEGENB_A"],[4,"RAMPB_A"],[6,"WAVEGENB_R"],[3,"WAVEGENB_W"],[6,"RAMPB_R"],[3,"RAMPB_W"],[3,"CIPERENB_W"],[3,"CICCENB0_W"],[3,"CICCENB1_W"],[3,"CICCENB2_W"],[3,"CICCENB3_W"],[3,"POLB0_W"],[3,"POLB1_W"],[3,"POLB2_W"],[3,"POLB3_W"],[3,"SWAPB0_W"],[3,"SWAPB1_W"],[3,"SWAPB2_W"],[3,"SWAPB3_W"],[6,"R"],[6,"W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DEVICE"],[3,"HOST"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"R"],[6,"W"],[6,"R"],[4,"CQOS_A"],[4,"DQOS_A"],[6,"CQOS_R"],[3,"CQOS_W"],[6,"DQOS_R"],[3,"DQOS_W"],[6,"R"],[6,"W"],[4,"SPDCONF_A"],[4,"LPMHDSK_A"],[3,"DETACH_W"],[3,"UPRSM_W"],[6,"SPDCONF_R"],[3,"SPDCONF_W"],[3,"NREPLY_W"],[3,"TSTJ_W"],[3,"TSTK_W"],[3,"TSTPCKT_W"],[3,"OPMODE2_W"],[3,"GNAK_W"],[6,"LPMHDSK_R"],[3,"LPMHDSK_W"],[6,"R"],[6,"W"],[3,"DADD_W"],[3,"ADDEN_W"],[6,"R"],[6,"W"],[4,"SPEED_A"],[4,"LINESTATE_A"],[6,"SPEED_R"],[6,"LINESTATE_R"],[6,"R"],[4,"FSMSTATE_A"],[6,"FSMSTATE_R"],[6,"R"],[6,"R"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DESCADD_W"],[6,"R"],[6,"W"],[3,"TRANSP_W"],[3,"TRANSN_W"],[3,"TRIM_W"],[6,"R"],[6,"W"],[3,"EPTYPE0_W"],[3,"EPTYPE1_W"],[3,"NYETDIS_W"],[6,"R"],[6,"W"],[3,"DTGLOUT_W"],[3,"DTGLIN_W"],[3,"CURBK_W"],[3,"STALLRQ0_W"],[3,"STALLRQ1_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[3,"DTGLOUT_W"],[3,"DTGLIN_W"],[3,"CURBK_W"],[3,"STALLRQ0_W"],[3,"STALLRQ1_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[6,"R"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"R"],[6,"W"],[6,"R"],[4,"CQOS_A"],[4,"DQOS_A"],[6,"CQOS_R"],[3,"CQOS_W"],[6,"DQOS_R"],[3,"DQOS_W"],[6,"R"],[6,"W"],[4,"SPDCONF_A"],[3,"RESUME_W"],[6,"SPDCONF_R"],[3,"SPDCONF_W"],[3,"TSTJ_W"],[3,"TSTK_W"],[3,"SOFE_W"],[3,"BUSRESET_W"],[3,"VBUSOK_W"],[3,"L1RESUME_W"],[6,"R"],[6,"W"],[3,"FLENC_W"],[3,"FLENCE_W"],[6,"R"],[6,"W"],[3,"SPEED_W"],[6,"R"],[6,"W"],[4,"FSMSTATE_A"],[6,"FSMSTATE_R"],[6,"R"],[3,"MFNUM_W"],[3,"FNUM_W"],[6,"R"],[6,"W"],[6,"R"],[3,"HSOF_W"],[3,"RST_W"],[3,"WAKEUP_W"],[3,"DNRSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"DCONN_W"],[3,"DDISC_W"],[6,"R"],[6,"W"],[3,"HSOF_W"],[3,"RST_W"],[3,"WAKEUP_W"],[3,"DNRSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"DCONN_W"],[3,"DDISC_W"],[6,"R"],[6,"W"],[3,"HSOF_W"],[3,"RST_W"],[3,"WAKEUP_W"],[3,"DNRSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"DCONN_W"],[3,"DDISC_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DESCADD_W"],[6,"R"],[6,"W"],[3,"TRANSP_W"],[3,"TRANSN_W"],[3,"TRIM_W"],[6,"R"],[6,"W"],[3,"PTOKEN_W"],[3,"BK_W"],[3,"PTYPE_W"],[6,"R"],[6,"W"],[3,"BITINTERVAL_W"],[6,"R"],[6,"W"],[3,"CURBK_W"],[3,"PFREEZE_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[3,"DTGL_W"],[3,"CURBK_W"],[3,"PFREEZE_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[6,"R"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL_W"],[3,"PERR_W"],[3,"TXSTP_W"],[3,"STALL_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL_W"],[3,"PERR_W"],[3,"TXSTP_W"],[3,"STALL_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL_W"],[3,"PERR_W"],[3,"TXSTP_W"],[3,"STALL_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"ENABLE_W"],[3,"WEN_W"],[3,"ALWAYSON_W"],[6,"R"],[6,"W"],[4,"PER_A"],[4,"WINDOW_A"],[6,"PER_R"],[3,"PER_W"],[6,"WINDOW_R"],[3,"WINDOW_W"],[6,"R"],[6,"W"],[4,"EWOFFSET_A"],[6,"EWOFFSET_R"],[3,"EWOFFSET_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[6,"R"],[4,"CLEAR_AW"],[3,"CLEAR_W"],[6,"W"],[3,"AC"],[3,"ADC"],[3,"DAC"],[3,"DMAC"],[3,"DSU"],[3,"EIC"],[3,"EVSYS"],[3,"GCLK"],[3,"HMATRIX"],[3,"I2S"],[3,"MTB"],[3,"NVMCTRL"],[3,"PAC0"],[3,"PAC1"],[3,"PAC2"],[3,"PM"],[3,"PORT"],[3,"PORT_IOBUS"],[3,"RTC"],[3,"SERCOM0"],[3,"SERCOM1"],[3,"SERCOM2"],[3,"SERCOM3"],[3,"SERCOM4"],[3,"SERCOM5"],[3,"SYSCTRL"],[3,"TC3"],[3,"TC4"],[3,"TC5"],[3,"TCC0"],[3,"TCC1"],[3,"TCC2"],[3,"USB"],[3,"WDT"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"WINCTRL"],[6,"COMPCTRL"],[6,"SCALER"],[6,"CTRLA"],[6,"REFCTRL"],[6,"AVGCTRL"],[6,"SAMPCTRL"],[6,"CTRLB"],[6,"WINCTRL"],[6,"SWTRIG"],[6,"INPUTCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"WINLT"],[6,"WINUT"],[6,"GAINCORR"],[6,"OFFSETCORR"],[6,"CALIB"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DATA"],[6,"DATABUF"],[6,"CTRL"],[6,"CRCCTRL"],[6,"CRCDATAIN"],[6,"CRCCHKSUM"],[6,"CRCSTATUS"],[6,"DBGCTRL"],[6,"QOSCTRL"],[6,"SWTRIGCTRL"],[6,"PRICTRL0"],[6,"INTPEND"],[6,"BASEADDR"],[6,"WRBADDR"],[6,"CHID"],[6,"CHCTRLA"],[6,"CHCTRLB"],[6,"CHINTENCLR"],[6,"CHINTENSET"],[6,"CHINTFLAG"],[6,"CTRL"],[6,"STATUSA"],[6,"ADDR"],[6,"LENGTH"],[6,"DATA"],[6,"DCC"],[6,"CTRL"],[6,"NMICTRL"],[6,"NMIFLAG"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"WAKEUP"],[6,"CONFIG"],[6,"CTRL"],[6,"CHANNEL"],[6,"USER"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CTRL"],[6,"CLKCTRL"],[6,"GENCTRL"],[6,"GENDIV"],[6,"PRAS"],[6,"PRBS"],[6,"SFR"],[6,"CTRLA"],[6,"CLKCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"SERCTRL"],[6,"DATA"],[6,"POSITION"],[6,"MASTER"],[6,"FLOW"],[6,"ITCTRL"],[6,"CLAIMSET"],[6,"CLAIMCLR"],[6,"LOCKACCESS"],[6,"CTRLA"],[6,"CTRLB"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"WPCLR"],[6,"WPSET"],[6,"CTRL"],[6,"SLEEP"],[6,"CPUSEL"],[6,"APBASEL"],[6,"APBBSEL"],[6,"APBCSEL"],[6,"AHBMASK"],[6,"APBAMASK"],[6,"APBBMASK"],[6,"APBCMASK"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DIR"],[6,"DIRCLR"],[6,"DIRSET"],[6,"DIRTGL"],[6,"OUT"],[6,"OUTCLR"],[6,"OUTSET"],[6,"OUTTGL"],[6,"CTRL"],[6,"WRCONFIG"],[6,"PMUX0_"],[6,"PMUX1_"],[6,"PINCFG0_"],[6,"PINCFG1_"],[6,"CTRL"],[6,"READREQ"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"COUNT"],[6,"COMP"],[6,"CTRL"],[6,"READREQ"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"COUNT"],[6,"PER"],[6,"COMP"],[6,"CTRL"],[6,"READREQ"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"CLOCK"],[6,"ALARM"],[6,"MASK"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"BAUD_FRAC_MODE"],[6,"BAUD_FRACFP_MODE"],[6,"BAUD_USARTFP_MODE"],[6,"RXPL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"DATA"],[6,"DBGCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"XOSC"],[6,"XOSC32K"],[6,"OSC32K"],[6,"OSCULP32K"],[6,"OSC8M"],[6,"DFLLCTRL"],[6,"DFLLVAL"],[6,"DFLLMUL"],[6,"DFLLSYNC"],[6,"BOD33"],[6,"VREG"],[6,"VREF"],[6,"DPLLCTRLA"],[6,"DPLLRATIO"],[6,"DPLLCTRLB"],[6,"CTRLA"],[6,"READREQ"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"CTRLC"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"COUNT"],[6,"PER"],[6,"CC"],[6,"CTRLA"],[6,"READREQ"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"CTRLC"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"COUNT"],[6,"CC"],[6,"CTRLA"],[6,"READREQ"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"CTRLC"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"COUNT"],[6,"CC"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"FCTRLA"],[6,"FCTRLB"],[6,"WEXCTRL"],[6,"DRVCTRL"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"COUNT"],[6,"COUNT_DITH4"],[6,"COUNT_DITH5"],[6,"COUNT_DITH6"],[6,"PATT"],[6,"WAVE"],[6,"PER"],[6,"PER_DITH4"],[6,"PER_DITH5"],[6,"PER_DITH6"],[6,"CC"],[6,"CC_DITH4"],[6,"CC_DITH5"],[6,"CC_DITH6"],[6,"PATTB"],[6,"WAVEB"],[6,"PERB"],[6,"PERB_DITH4"],[6,"PERB_DITH5"],[6,"PERB_DITH6"],[6,"CCB"],[6,"CCB_DITH4"],[6,"CCB_DITH5"],[6,"CCB_DITH6"],[6,"CTRLA"],[6,"QOSCTRL"],[6,"CTRLB"],[6,"DADD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DESCADD"],[6,"PADCAL"],[6,"EPCFG"],[6,"EPSTATUSCLR"],[6,"EPSTATUSSET"],[6,"EPINTFLAG"],[6,"EPINTENCLR"],[6,"EPINTENSET"],[6,"CTRLA"],[6,"QOSCTRL"],[6,"CTRLB"],[6,"HSOFC"],[6,"STATUS"],[6,"FNUM"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DESCADD"],[6,"PADCAL"],[6,"PCFG"],[6,"BINTERVAL"],[6,"PSTATUSCLR"],[6,"PSTATUSSET"],[6,"PINTFLAG"],[6,"PINTENCLR"],[6,"PINTENSET"],[6,"CTRL"],[6,"CONFIG"],[6,"EWCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CLEAR"]]},\
"atsamd_hal":{"doc":"","i":[[0,"typelevel","atsamd_hal","Module supporting type-level programming",null,null],[3,"NoneT","atsamd_hal::typelevel","Type-level version of the None variant",null,null],[0,"common","atsamd_hal","",null,null],[4,"ResetCause","atsamd_hal::common","ResetCause represents the reason the MCU was reset.",null,null],[13,"Unknown","","",0,null],[13,"POR","","",0,null],[13,"BOD12","","",0,null],[13,"BOD33","","",0,null],[13,"External","","",0,null],[13,"Watchdog","","",0,null],[13,"System","","",0,null],[5,"reset_cause","","Returns the cause of the last reset.",null,[[["pm",3]],["resetcause",4]]],[5,"split_serial_number","","Returns the serial number of the chip as 4 32-bit…",null,[[]]],[5,"serial_number","","Returns the serial number of the chip as an array of…",null,[[]]],[0,"delay","","Delays",null,null],[3,"Delay","atsamd_hal::common::delay","System timer (SysTick) as a delay provider",null,null],[11,"new","","Configures the system timer (SysTick) as a delay provider",1,[[["syst",3],["genericclockcontroller",3]]]],[11,"free","","Releases the system timer (SysTick) resource",1,[[],["syst",3]]],[0,"gpio","atsamd_hal::common","GPIOThe GPIO module is used to configure GPIO pins through…",null,null],[0,"v1","atsamd_hal::common::gpio","Version 1 of the GPIO moduleThis module is a compatibility…",null,null],[3,"Pin","atsamd_hal::common::gpio::v1","Represents a GPIO pin with a corresponding `PinId` and…",null,null],[3,"Port","","Opaque port reference",null,null],[3,"Parts","","Holds the GPIO Port peripheral and broken out pin instances",null,null],[12,"port","","Opaque port reference",2,null],[12,"pa0","","",2,null],[12,"pa1","","",2,null],[12,"pa2","","",2,null],[12,"pa3","","",2,null],[12,"pa4","","",2,null],[12,"pa5","","",2,null],[12,"pa6","","",2,null],[12,"pa7","","",2,null],[12,"pa8","","",2,null],[12,"pa9","","",2,null],[12,"pa10","","",2,null],[12,"pa11","","",2,null],[12,"pa12","","",2,null],[12,"pa13","","",2,null],[12,"pa14","","",2,null],[12,"pa15","","",2,null],[12,"pa16","","",2,null],[12,"pa17","","",2,null],[12,"pa18","","",2,null],[12,"pa19","","",2,null],[12,"pa20","","",2,null],[12,"pa21","","",2,null],[12,"pa22","","",2,null],[12,"pa23","","",2,null],[12,"pa24","","",2,null],[12,"pa25","","",2,null],[12,"pa27","","",2,null],[12,"pa28","","",2,null],[12,"pa30","","",2,null],[12,"pa31","","",2,null],[12,"pb2","","",2,null],[12,"pb3","","",2,null],[12,"pb8","","",2,null],[12,"pb9","","",2,null],[12,"pb10","","",2,null],[12,"pb11","","",2,null],[12,"pb22","","",2,null],[12,"pb23","","",2,null],[6,"Input","","Represents a pin configured for input. The MODE type is…",null,null],[6,"Output","","Represents a pin configured for output. The MODE type is…",null,null],[6,"Floating","","Floating Input",null,null],[6,"PullDown","","Pulled down Input",null,null],[6,"PullUp","","Pulled up Input",null,null],[6,"PushPull","","Totem Pole aka Push-Pull",null,null],[6,"OpenDrain","","Open drain output. The SAMD5x/E5x chips don\'t actually…",null,null],[6,"ReadableOpenDrain","","Open drain output, which can be read when not driven The…",null,null],[6,"PfA","","Peripheral Function A",null,null],[6,"PfB","","Peripheral Function B",null,null],[6,"PfC","","Peripheral Function C",null,null],[6,"PfD","","Peripheral Function D",null,null],[6,"PfE","","Peripheral Function E",null,null],[6,"PfF","","Peripheral Function F",null,null],[6,"PfG","","Peripheral Function G",null,null],[6,"PfH","","Peripheral Function H",null,null],[6,"Pa0","","Represents the IO pin with the matching name",null,null],[6,"Pa1","","Represents the IO pin with the matching name",null,null],[6,"Pa2","","Represents the IO pin with the matching name",null,null],[6,"Pa3","","Represents the IO pin with the matching name",null,null],[6,"Pa4","","Represents the IO pin with the matching name",null,null],[6,"Pa5","","Represents the IO pin with the matching name",null,null],[6,"Pa6","","Represents the IO pin with the matching name",null,null],[6,"Pa7","","Represents the IO pin with the matching name",null,null],[6,"Pa8","","Represents the IO pin with the matching name",null,null],[6,"Pa9","","Represents the IO pin with the matching name",null,null],[6,"Pa10","","Represents the IO pin with the matching name",null,null],[6,"Pa11","","Represents the IO pin with the matching name",null,null],[6,"Pa12","","Represents the IO pin with the matching name",null,null],[6,"Pa13","","Represents the IO pin with the matching name",null,null],[6,"Pa14","","Represents the IO pin with the matching name",null,null],[6,"Pa15","","Represents the IO pin with the matching name",null,null],[6,"Pa16","","Represents the IO pin with the matching name",null,null],[6,"Pa17","","Represents the IO pin with the matching name",null,null],[6,"Pa18","","Represents the IO pin with the matching name",null,null],[6,"Pa19","","Represents the IO pin with the matching name",null,null],[6,"Pa20","","Represents the IO pin with the matching name",null,null],[6,"Pa21","","Represents the IO pin with the matching name",null,null],[6,"Pa22","","Represents the IO pin with the matching name",null,null],[6,"Pa23","","Represents the IO pin with the matching name",null,null],[6,"Pa24","","Represents the IO pin with the matching name",null,null],[6,"Pa25","","Represents the IO pin with the matching name",null,null],[6,"Pa27","","Represents the IO pin with the matching name",null,null],[6,"Pa28","","Represents the IO pin with the matching name",null,null],[6,"Pa30","","Represents the IO pin with the matching name",null,null],[6,"Pa31","","Represents the IO pin with the matching name",null,null],[6,"Pb2","","Represents the IO pin with the matching name",null,null],[6,"Pb3","","Represents the IO pin with the matching name",null,null],[6,"Pb8","","Represents the IO pin with the matching name",null,null],[6,"Pb9","","Represents the IO pin with the matching name",null,null],[6,"Pb10","","Represents the IO pin with the matching name",null,null],[6,"Pb11","","Represents the IO pin with the matching name",null,null],[6,"Pb22","","Represents the IO pin with the matching name",null,null],[6,"Pb23","","Represents the IO pin with the matching name",null,null],[8,"GpioExt","","The GpioExt trait allows splitting the PORT hardware into…",null,null],[16,"Parts","","",3,null],[10,"split","","Consume and split the device into its constitent parts",3,[[]]],[8,"IntoFunction","","A trait that makes it easier to generically manage…",null,null],[10,"into_function","","Consume the pin and configure it to operate in the mode T.",4,[[["port",3]]]],[11,"into_floating_input","","Configures the pin to operate as a floating input",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_pull_down_input","","Configures the pin to operate as a pulled down input pin",5,[[["port",3]],[["input",6],["pin",3]]]],[11,"into_pull_up_input","","Configures the pin to operate as a pulled up input pin",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_open_drain_output","","Configures the pin to operate as an open drain output",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_readable_open_drain_output","","Configures the pin to operate as an open drain output…",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_push_pull_output","","Configures the pin to operate as a push-pull output",5,[[["port",3]],[["pin",3],["output",6]]]],[11,"into_function_a","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfa",6],["pin",3]]]],[11,"into_function_b","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfb",6]]]],[11,"into_function_c","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfc",6]]]],[11,"into_function_d","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfd",6]]]],[11,"into_function_e","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfe",6],["pin",3]]]],[11,"into_function_f","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pff",6],["pin",3]]]],[11,"into_function_g","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfg",6],["pin",3]]]],[11,"into_function_h","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfh",6],["pin",3]]]],[11,"internal_pull_up","","Control state of the internal pull up",5,[[["port",3]]]],[11,"toggle","","Toggle the logic level of the pin; if it is currently…",5,[[]]],[0,"v2","atsamd_hal::common::gpio","Version 2 of the GPIO moduleThe new API provides two…",null,null],[0,"pin","atsamd_hal::common::gpio::v2","Type-level module for GPIO pinsThis module provides a…",null,null],[3,"Disabled","atsamd_hal::common::gpio::v2::pin","Type-level variant of [`PinMode`] for disabled modes",null,null],[3,"Input","","Type-level variant of [`PinMode`] for input modes",null,null],[3,"Output","","Type-level variant of [`PinMode`] for output modes",null,null],[3,"Alternate","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[3,"Pin","","A type-level GPIO pin, parameterized by [`PinId`] and…",null,null],[3,"Pins","","Collection of all the individual [`Pin`]s",null,null],[12,"pa00","","Pin PA00",6,null],[12,"pa01","","Pin PA01",6,null],[12,"pa02","","Pin PA02",6,null],[12,"pa03","","Pin PA03",6,null],[12,"pa04","","Pin PA04",6,null],[12,"pa05","","Pin PA05",6,null],[12,"pa06","","Pin PA06",6,null],[12,"pa07","","Pin PA07",6,null],[12,"pa08","","Pin PA08",6,null],[12,"pa09","","Pin PA09",6,null],[12,"pa10","","Pin PA10",6,null],[12,"pa11","","Pin PA11",6,null],[12,"pa12","","Pin PA12",6,null],[12,"pa13","","Pin PA13",6,null],[12,"pa14","","Pin PA14",6,null],[12,"pa15","","Pin PA15",6,null],[12,"pa16","","Pin PA16",6,null],[12,"pa17","","Pin PA17",6,null],[12,"pa18","","Pin PA18",6,null],[12,"pa19","","Pin PA19",6,null],[12,"pa20","","Pin PA20",6,null],[12,"pa21","","Pin PA21",6,null],[12,"pa22","","Pin PA22",6,null],[12,"pa23","","Pin PA23",6,null],[12,"pa24","","Pin PA24",6,null],[12,"pa25","","Pin PA25",6,null],[12,"pa27","","Pin PA27",6,null],[12,"pa28","","Pin PA28",6,null],[12,"pa30","","Pin PA30",6,null],[12,"pa31","","Pin PA31",6,null],[12,"pb02","","Pin PB02",6,null],[12,"pb03","","Pin PB03",6,null],[12,"pb08","","Pin PB08",6,null],[12,"pb09","","Pin PB09",6,null],[12,"pb10","","Pin PB10",6,null],[12,"pb11","","Pin PB11",6,null],[12,"pb22","","Pin PB22",6,null],[12,"pb23","","Pin PB23",6,null],[4,"Floating","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PullDown","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PullUp","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PushPull","","Type-level variant of [`OutputConfig`] for a push-pull…",null,null],[4,"Readable","","Type-level variant of [`OutputConfig`] for a readable…",null,null],[4,"A","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"B","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"C","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"D","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"E","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"F","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"G","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"H","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"GroupA","","Type-level variant of `Group`",null,null],[4,"GroupB","","Type-level variant of `Group`",null,null],[4,"PA00","","Pin ID representing pin PA00",null,null],[4,"PA01","","Pin ID representing pin PA01",null,null],[4,"PA02","","Pin ID representing pin PA02",null,null],[4,"PA03","","Pin ID representing pin PA03",null,null],[4,"PA04","","Pin ID representing pin PA04",null,null],[4,"PA05","","Pin ID representing pin PA05",null,null],[4,"PA06","","Pin ID representing pin PA06",null,null],[4,"PA07","","Pin ID representing pin PA07",null,null],[4,"PA08","","Pin ID representing pin PA08",null,null],[4,"PA09","","Pin ID representing pin PA09",null,null],[4,"PA10","","Pin ID representing pin PA10",null,null],[4,"PA11","","Pin ID representing pin PA11",null,null],[4,"PA12","","Pin ID representing pin PA12",null,null],[4,"PA13","","Pin ID representing pin PA13",null,null],[4,"PA14","","Pin ID representing pin PA14",null,null],[4,"PA15","","Pin ID representing pin PA15",null,null],[4,"PA16","","Pin ID representing pin PA16",null,null],[4,"PA17","","Pin ID representing pin PA17",null,null],[4,"PA18","","Pin ID representing pin PA18",null,null],[4,"PA19","","Pin ID representing pin PA19",null,null],[4,"PA20","","Pin ID representing pin PA20",null,null],[4,"PA21","","Pin ID representing pin PA21",null,null],[4,"PA22","","Pin ID representing pin PA22",null,null],[4,"PA23","","Pin ID representing pin PA23",null,null],[4,"PA24","","Pin ID representing pin PA24",null,null],[4,"PA25","","Pin ID representing pin PA25",null,null],[4,"PA27","","Pin ID representing pin PA27",null,null],[4,"PA28","","Pin ID representing pin PA28",null,null],[4,"PA30","","Pin ID representing pin PA30",null,null],[4,"PA31","","Pin ID representing pin PA31",null,null],[4,"PB02","","Pin ID representing pin PB02",null,null],[4,"PB03","","Pin ID representing pin PB03",null,null],[4,"PB08","","Pin ID representing pin PB08",null,null],[4,"PB09","","Pin ID representing pin PB09",null,null],[4,"PB10","","Pin ID representing pin PB10",null,null],[4,"PB11","","Pin ID representing pin PB11",null,null],[4,"PB22","","Pin ID representing pin PB22",null,null],[4,"PB23","","Pin ID representing pin PB23",null,null],[6,"FloatingDisabled","","Type-level variant of [`PinMode`] for floating disabled mode",null,null],[6,"PullDownDisabled","","Type-level variant of [`PinMode`] for pull-down disabled…",null,null],[6,"PullUpDisabled","","Type-level variant of [`PinMode`] for pull-up disabled mode",null,null],[6,"Reset","","Type alias for the [`PinMode`] at reset",null,null],[6,"FloatingInput","","Type-level variant of [`PinMode`] for floating input mode",null,null],[6,"PullDownInput","","Type-level variant of [`PinMode`] for pull-down input mode",null,null],[6,"PullUpInput","","Type-level variant of [`PinMode`] for pull-up input mode",null,null],[6,"PushPullOutput","","Type-level variant of [`PinMode`] for push-pull output mode",null,null],[6,"ReadableOutput","","Type-level variant of [`PinMode`] for readable push-pull…",null,null],[6,"AlternateA","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateB","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateC","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateD","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateE","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateF","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateG","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateH","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"ConcretePin","","Type alias to recover the corresponding concrete [`Pin`]…",null,null],[8,"DisabledConfig","","Type-level `enum` for disabled configurations",null,null],[18,"DYN","","Corresponding `DynDisabled`",7,null],[18,"PULLEN","","Value of the PULLEN field in this configuration",7,null],[18,"OUT","","Value of the OUT field in this configuration",7,null],[8,"InputConfig","","Type-level `enum` for input configurations",null,null],[18,"DYN","","Corresponding `DynInput`",8,null],[18,"PULLEN","","Value of the PULLEN field in this configuration",8,null],[18,"OUT","","Value of the OUT field in this configuration",8,null],[8,"OutputConfig","","Type-level `enum` for output configurations",null,null],[18,"DYN","","Corresponding `DynOutput`",9,null],[18,"INEN","","Value of the INEN field in this configuration",9,null],[8,"AlternateConfig","","Type-level `enum` for alternate peripheral function…",null,null],[18,"DYN","","Corresponding `DynAlternate`",10,null],[18,"PMUX","","Value of the PMUXE/PMUXO field in this configuration",10,null],[8,"PinMode","","Type-level `enum` representing pin modes",null,null],[18,"DYN","","Corresponding `DynPinMode`",11,null],[18,"DIR","","Value of the DIR field in this mode",11,null],[18,"INEN","","Value of the INEN field in this mode",11,null],[18,"PULLEN","","Value of the PULLEN field in this mode",11,null],[18,"OUT","","Value of the OUT field in this mode",11,null],[18,"PMUXEN","","Value of the PMUXEN field in this mode",11,null],[18,"PMUX","","Value of the PMUXE/PMUXO field in this mode",11,null],[11,"into_mode","","Convert a [`Pin`] into this [`PinMode`]",11,[[["pin",3]],["pin",3]]],[8,"PinId","","Type-level `enum` for pin IDs",null,null],[18,"DYN","","Corresponding `DynPinId`",12,null],[16,"Group","","Pin group; Also acts as zero-sized reference to the GROUP…",12,null],[18,"NUM","","Pin number",12,null],[8,"AnyPin","","Meta-type representing any [`Pin`]",null,null],[16,"Id","","[`PinId`] of the corresponding [`Pin`]",13,null],[16,"Mode","","[`PinMode`] of the corresponding [`Pin`]",13,null],[10,"as_concrete","","Convert a type that implements [`AnyPin`] to a concrete…",13,[[],["concretepin",6]]],[10,"as_concrete_ref","","Implement `as_concrete` for references",13,[[],["concretepin",6]]],[10,"as_concrete_mut","","Implement `as_concrete` for mutable references",13,[[],["concretepin",6]]],[11,"into_mode","","Convert the pin to the requested [`PinMode`]",13,[[],[["pin",3],["pinmode",8]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",13,[[],[["floatingdisabled",6],["pin",3]]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",13,[[],[["pulldowndisabled",6],["pin",3]]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",13,[[],[["pin",3],["pullupdisabled",6]]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",13,[[],[["pin",3],["floatinginput",6]]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",13,[[],[["pulldowninput",6],["pin",3]]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",13,[[],[["pin",3],["pullupinput",6]]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",13,[[],[["pin",3],["pushpulloutput",6]]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",13,[[],[["pin",3],["readableoutput",6]]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",13,[[],[["alternate",3],["pin",3]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",13,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",13,[[]]],[8,"OptionalPin","","Meta-type representing an optional [`Pin`].",null,null],[8,"SomePin","","Meta-type representing a valid [`Pin`].",null,null],[11,"as_any","","Convert a [`Pin`] to a type that implements [`AnyPin`]",14,[[]]],[11,"as_any_ref","","Implement `as_any` for references",14,[[]]],[11,"as_any_mut","","Implement `as_any` for mutable references",14,[[]]],[11,"into_mode","","Convert the pin to the requested [`PinMode`]",14,[[],[["pin",3],["pinmode",8]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",14,[[],[["floatingdisabled",6],["pin",3]]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",14,[[],[["pin",3],["pulldowndisabled",6]]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",14,[[],[["pin",3],["pullupdisabled",6]]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",14,[[],[["pin",3],["floatinginput",6]]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",14,[[],[["pulldowninput",6],["pin",3]]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",14,[[],[["pullupinput",6],["pin",3]]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",14,[[],[["pin",3],["pushpulloutput",6]]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",14,[[],[["pin",3],["readableoutput",6]]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",14,[[],[["alternate",3],["pin",3]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",14,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",14,[[]]],[11,"new","","Take ownership of the PAC `PORT` and split it into…",6,[[["port",3]],["pins",3]]],[11,"port","","Get a reference to the PAC `PORT`",6,[[],["port",3]]],[11,"free","","Consume the [`Pins`] struct and return the PAC `PORT`",6,[[],["port",3]]],[0,"dynpin","atsamd_hal::common::gpio::v2","Type-erased, value-level module for GPIO pinsAlthough the…",null,null],[3,"DynPinId","atsamd_hal::common::gpio::v2::dynpin","Value-level `struct` representing pin IDs",null,null],[12,"group","","",15,null],[12,"num","","",15,null],[3,"DynPin","","A value-level pin, parameterized by [DynPinId] and…",null,null],[4,"Error","","GPIO error type",null,null],[13,"InvalidPinType","","The pin did not have the correct ID or mode for the…",16,null],[4,"DynDisabled","","Value-level `enum` for disabled configurations",null,null],[13,"Floating","","",17,null],[13,"PullDown","","",17,null],[13,"PullUp","","",17,null],[4,"DynInput","","Value-level `enum` for input configurations",null,null],[13,"Floating","","",18,null],[13,"PullDown","","",18,null],[13,"PullUp","","",18,null],[4,"DynOutput","","Value-level `enum` for output configurations",null,null],[13,"PushPull","","",19,null],[13,"Readable","","",19,null],[4,"DynAlternate","","Value-level `enum` for alternate peripheral function…",null,null],[13,"A","","",20,null],[13,"B","","",20,null],[13,"C","","",20,null],[13,"D","","",20,null],[13,"E","","",20,null],[13,"F","","",20,null],[13,"G","","",20,null],[13,"H","","",20,null],[4,"DynPinMode","","Value-level `enum` representing pin modes",null,null],[13,"Disabled","","",21,null],[13,"Input","","",21,null],[13,"Output","","",21,null],[13,"Alternate","","",21,null],[4,"DynGroup","","Value-level `enum` for pin groups",null,null],[13,"A","","",22,null],[13,"B","","",22,null],[17,"DYN_FLOATING_DISABLED","","Value-level variant of [DynPinMode] for floating disabled…",null,null],[17,"DYN_PULL_DOWN_DISABLED","","Value-level variant of [DynPinMode] for pull-down disabled…",null,null],[17,"DYN_PULL_UP_DISABLED","","Value-level variant of [DynPinMode] for pull-up disabled…",null,null],[17,"DYN_FLOATING_INPUT","","Value-level variant of [DynPinMode] for floating input mode",null,null],[17,"DYN_PULL_DOWN_INPUT","","Value-level variant of [DynPinMode] for pull-down input mode",null,null],[17,"DYN_PULL_UP_INPUT","","Value-level variant of [DynPinMode] for pull-up input mode",null,null],[17,"DYN_PUSH_PULL_OUTPUT","","Value-level variant of [DynPinMode] for push-pull output…",null,null],[17,"DYN_READABLE_OUTPUT","","Value-level variant of [DynPinMode] for readable push-pull…",null,null],[17,"DYN_ALTERNATE_A","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_B","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_C","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_D","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_E","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_F","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_G","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_H","","Value-level variant of [DynPinMode] for alternate…",null,null],[11,"id","","Return a copy of the pin ID",23,[[],["dynpinid",3]]],[11,"mode","","Return a copy of the pin mode",23,[[],["dynpinmode",4]]],[11,"into_mode","","Convert the pin to the requested [DynPinMode]",23,[[["dynpinmode",4]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",23,[[]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",23,[[]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",23,[[]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",23,[[]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",23,[[]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",23,[[]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",23,[[]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",23,[[]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",23,[[["dynalternate",4]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",23,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",23,[[]]],[0,"prelude","atsamd_hal::common","Import the prelude to gain convenient access to helper…",null,null],[8,"_atsamd_hal_embedded_hal_digital_v2_InputPin","atsamd_hal::common::prelude","Single digital input pin",null,null],[16,"Error","","Error type",24,null],[10,"is_high","","Is the input pin high?",24,[[],["result",4]]],[10,"is_low","","Is the input pin low?",24,[[],["result",4]]],[8,"_atsamd_hal_embedded_hal_digital_v2_OutputPin","","Single digital push-pull output pin",null,null],[16,"Error","","Error type",25,null],[10,"set_low","","Drives the pin low",25,[[],["result",4]]],[10,"set_high","","Drives the pin high",25,[[],["result",4]]],[8,"_atsamd_hal_embedded_hal_digital_v2_ToggleableOutputPin","","Output pin that can be toggled",null,null],[16,"Error","","Error type",26,null],[10,"toggle","","Toggle pin output.",26,[[],["result",4]]],[8,"_embedded_hal_adc_OneShot","","ADCs that sample on single channels per request, and do so…",null,null],[16,"Error","","Error type returned by ADC methods",27,null],[10,"read","","Request that the ADC begin a conversion on the specified pin",27,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_blocking_delay_DelayMs","","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",28,[[]]],[8,"_embedded_hal_blocking_delay_DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",29,[[]]],[8,"_embedded_hal_blocking_i2c_Read","","Blocking read",null,null],[16,"Error","","Error type",30,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",30,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_Write","","Blocking write",null,null],[16,"Error","","Error type",31,null],[10,"write","","Sends bytes to slave with address `addr`",31,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",32,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",32,[[],["result",4]]],[8,"_embedded_hal_blocking_rng_Read","","Blocking read",null,null],[16,"Error","","Error type",33,null],[10,"read","","Reads enough bytes from hardware random number generator…",33,[[],["result",4]]],[8,"_embedded_hal_blocking_serial_Write","","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",34,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",34,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered words",34,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Transfer","","Blocking transfer",null,null],[16,"Error","","Error type",35,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",35,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Write","","Blocking write",null,null],[16,"Error","","Error type",36,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",36,[[],["result",4]]],[8,"_embedded_hal_digital_InputPin","","Single digital input pin",null,null],[10,"is_high","","Is the input pin high?",37,[[]]],[10,"is_low","","Is the input pin low?",37,[[]]],[8,"_embedded_hal_digital_OutputPin","","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",38,[[]]],[10,"set_high","","Drives the pin high",38,[[]]],[8,"_embedded_hal_digital_ToggleableOutputPin","","Output pin that can be toggled",null,null],[10,"toggle","","Toggle pin output.",39,[[]]],[8,"_embedded_hal_serial_Read","","Read half of a serial interface",null,null],[16,"Error","","Read error",40,null],[10,"read","","Reads a single word from the serial interface",40,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_serial_Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",41,null],[10,"write","","Writes a single word to the serial interface",41,[[],[["error",4],["result",4]]]],[10,"flush","","Ensures that none of the previously written words are…",41,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_spi_FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",42,null],[10,"read","","Reads the word stored in the shift register",42,[[],[["result",4],["error",4]]]],[10,"send","","Sends a word to the slave",42,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_timer_CountDown","","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",43,null],[10,"start","","Starts a new count down",43,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",43,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_watchdog_Watchdog","","Feeds an existing watchdog to ensure the processor isn\'t…",null,null],[10,"feed","","Triggers the watchdog. This must be done once the watchdog…",44,[[]]],[8,"_embedded_hal_watchdog_WatchdogDisable","","Disables a running watchdog timer so the processor won\'t…",null,null],[10,"disable","","Disables the watchdog",45,[[]]],[8,"_embedded_hal_watchdog_WatchdogEnable","","Enables A watchdog timer to reset the processor if…",null,null],[16,"Time","","Unit of time used by the watchdog",46,null],[10,"start","","Starts the watchdog with a given period, typically once…",46,[[]]],[8,"_embedded_hal_Capture","","Input capture",null,null],[16,"Error","","Enumeration of `Capture` errors",47,null],[16,"Channel","","Enumeration of channels that can be used with this…",47,null],[16,"Time","","A time unit that can be converted into a human time unit…",47,null],[16,"Capture","","The type of the value returned by `capture`",47,null],[10,"capture","","\\\"Waits\\\" for a transition in the capture `channel` and…",47,[[],[["error",4],["result",4]]]],[10,"disable","","Disables a capture `channel`",47,[[]]],[10,"enable","","Enables a capture `channel`",47,[[]]],[10,"get_resolution","","Returns the current resolution",47,[[]]],[10,"set_resolution","","Sets the resolution of the capture timer",47,[[]]],[8,"_embedded_hal_Pwm","","Pulse Width Modulation",null,null],[16,"Channel","","Enumeration of channels that can be used with this `Pwm`…",48,null],[16,"Time","","A time unit that can be converted into a human time unit…",48,null],[16,"Duty","","Type for the `duty` methods",48,null],[10,"disable","","Disables a PWM `channel`",48,[[]]],[10,"enable","","Enables a PWM `channel`",48,[[]]],[10,"get_period","","Returns the current PWM period",48,[[]]],[10,"get_duty","","Returns the current duty cycle",48,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",48,[[]]],[10,"set_duty","","Sets a new duty cycle",48,[[]]],[10,"set_period","","Sets a new PWM period",48,[[]]],[8,"_embedded_hal_PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",49,null],[10,"disable","","Disables a PWM `channel`",49,[[]]],[10,"enable","","Enables a PWM `channel`",49,[[]]],[10,"get_duty","","Returns the current duty cycle",49,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",49,[[]]],[10,"set_duty","","Sets a new duty cycle",49,[[]]],[8,"_embedded_hal_Qei","","Quadrature encoder interface",null,null],[16,"Count","","The type of the value returned by `count`",50,null],[10,"count","","Returns the current pulse count of the encoder",50,[[]]],[10,"direction","","Returns the count direction",50,[[],["direction",4]]],[8,"EicPin","","The EicPin trait makes it more ergonomic to convert a gpio…",null,null],[10,"into_ei","","",51,[[["port",3]]]],[0,"rtc","atsamd_hal::common","Real-time clock/counter",null,null],[3,"Datetime","atsamd_hal::common::rtc","Datetime represents an RTC clock/calendar value.",null,null],[12,"seconds","","",52,null],[12,"minutes","","",52,null],[12,"hours","","",52,null],[12,"day","","",52,null],[12,"month","","",52,null],[12,"year","","",52,null],[3,"Rtc","","Rtc represents the RTC peripheral for either…",null,null],[3,"TimerParams","","Helper type for computing cycles and divider given frequency",null,null],[12,"divider","","",53,null],[12,"cycles","","",53,null],[11,"new","","Resets & does the basic configuration of the RTC…",54,[[["rtc",3],["pm",3],["hertz",3]]]],[11,"clock_mode","","Configures the peripheral for clock/calendar mode.…",54,[[]]],[11,"current_time","","Returns the current clock/calendar value.",54,[[],["datetime",3]]],[11,"set_time","","Updates the current clock/calendar value.",54,[[["datetime",3]]]],[11,"new","","calculates RTC timer paramters based on the input…",53,[[]]],[11,"new_us","","calculates RTC timer paramters based on the input…",53,[[]]],[0,"sercom","atsamd_hal::common","Configure the SERCOM peripheralsThe SERCOM module is used…",null,null],[0,"v1","atsamd_hal::common::sercom","Version 1 of the SERCOM moduleThis module retains the…",null,null],[3,"I2CMaster0","atsamd_hal::common::sercom::v1","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster1","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster2","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster3","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster4","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster5","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"SPIMaster0Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster0","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster1Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster1","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster2Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster2","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster3Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster3","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster4Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster4","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster5Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster5","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"UART0Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART0","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART1Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART1","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART2Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART2","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART3Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART3","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART4Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART4","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART5Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART5","","UARTX represents the corresponding SERCOMX instance…",null,null],[4,"I2CError","","",null,null],[13,"ArbitrationLost","","",55,null],[13,"AddressError","","",55,null],[13,"BusError","","",55,null],[13,"Timeout","","",55,null],[13,"Nack","","",55,null],[4,"Error","","",null,null],[13,"Overrun","","",56,null],[0,"pads","","Version 1 of the SERCOM pads module",null,null],[6,"Sercom0Pad0","atsamd_hal::common::sercom::v1::pads","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad3","","Represents a numbered pad for the associated sercom…",null,null],[8,"PadPin","","The PadPin trait makes it more ergonomic to convert a pin…",null,null],[10,"into_pad","","",57,[[["port",3]]]],[0,"i2c","atsamd_hal::common::sercom::v1","",null,null],[3,"I2CMaster0","atsamd_hal::common::sercom::v1::i2c","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster1","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster2","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster3","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster4","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster5","","Represents the Sercom instance configured to act as an I2C…",null,null],[4,"I2CError","","",null,null],[13,"ArbitrationLost","","",55,null],[13,"AddressError","","",55,null],[13,"BusError","","",55,null],[13,"Timeout","","",55,null],[13,"Nack","","",55,null],[0,"spi","atsamd_hal::common::sercom::v1","",null,null],[3,"SPIMaster0Padout","atsamd_hal::common::sercom::v1::spi","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster0","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster1Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster1","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster2Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster2","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster3Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster3","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster4Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster4","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster5Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster5","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[4,"Error","","",null,null],[13,"Overrun","","",56,null],[8,"DipoDopo","","The DipoDopo trait defines a way to get the data in and…",null,null],[10,"dipo_dopo","","",58,[[]]],[0,"uart","atsamd_hal::common::sercom::v1","",null,null],[3,"UART0Padout","atsamd_hal::common::sercom::v1::uart","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART0","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART1Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART1","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART2Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART2","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART3Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART3","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART4Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART4","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART5Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART5","","UARTX represents the corresponding SERCOMX instance…",null,null],[8,"RxpoTxpo","","The RxpoTxpo trait defines a way to get the data in and…",null,null],[10,"rxpo_txpo","","",59,[[]]],[0,"pad_map","atsamd_hal::common::sercom::v1","Implementations of the `pads` `Map` trait",null,null],[8,"DipoDopo","","The DipoDopo trait defines a way to get the data in and…",null,null],[10,"dipo_dopo","","",58,[[]]],[8,"RxpoTxpo","","The RxpoTxpo trait defines a way to get the data in and…",null,null],[10,"rxpo_txpo","","",59,[[]]],[0,"v2","atsamd_hal::common::sercom","Version 2 of the SERCOM moduleThis module provides a new…",null,null],[0,"pads","atsamd_hal::common::sercom::v2","Version 2 of the SERCOM pads module",null,null],[3,"Pad","atsamd_hal::common::sercom::v2::pads","Represents a SERCOM Pad configured to use a particular pin",null,null],[4,"Sercom0","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom1","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom2","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom3","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom4","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom5","","Represents the corresponding SERCOM instance",null,null],[4,"Pad0","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad1","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad2","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad3","","Represents the corresponding SERCOM pad number",null,null],[6,"SERCOM","","Type alias to extract the correct PAC SERCOM type from the…",null,null],[6,"ConcretePad","","Type alias to convert from an implementation of [`AnyPad`]…",null,null],[8,"Sercom","","Type-level `enum` representing a Serial Communication…",null,null],[16,"SERCOM","","Corresponding PAC SERCOM type",60,null],[8,"PadNum","","Type-level `enum` representing a SERCOM pad number",null,null],[8,"Map","","Type-level function mapping [`Pad`]s to [`Pin`]s",null,null],[16,"Id","","The [`PinId`] for the corresponding pin",61,null],[16,"Mode","","The [`PinMode`] for the corresponding pin",61,null],[8,"AnyPad","","Meta-type representing any [`Pad`]",null,null],[16,"Sercom","","",62,null],[16,"PadNum","","",62,null],[16,"Map","","",62,null],[10,"as_concrete","","Convert a type that implements [`AnyPad`] to a concrete…",62,[[],["concretepad",6]]],[8,"OptionalPad","","Meta-type representing an optional [`Pad`].",null,null],[8,"SomePad","","Meta-type representing a valid [`Pad`].",null,null],[11,"new","","Create a new SERCOM [`Pad`] from a [`Pin`]",63,[[["pin",3],["pinmode",8]]]],[11,"free","","Consume the [`Pad`] and release the corresponding [`Pin`]",63,[[],["pin",3]]],[11,"as_any","","Convert a [`Pad`] to a type that implements [`AnyPad`]",63,[[]]],[0,"pad_map","atsamd_hal::common::sercom::v2","Implementations of the `pads` `Map` trait",null,null],[0,"sleeping_delay","atsamd_hal::common","Delays with WFI sleep while we wait using a timer",null,null],[3,"SleepingDelay","atsamd_hal::common::sleeping_delay","Delay and sleep while we do (WFI) using a timer",null,null],[11,"new","","Initializes a new SleepingDelay struct",64,[[["atomicbool",3]],["sleepingdelay",3]]],[11,"free","","Releases the timer resource",64,[[]]],[0,"spi_common","atsamd_hal::common","",null,null],[8,"CommonSpi","atsamd_hal::common::spi_common","",null,null],[10,"spi","","Helper for accessing the spi member of the sercom instance",65,[[],["spi",3]]],[10,"spi_mut","","Helper for accessing the spi member of the sercom instance",65,[[],["spi",3]]],[11,"disable","","Disable the SPI",65,[[]]],[11,"enable","","Enable the SPI",65,[[]]],[11,"set_mode","","Set the polarity (CPOL) and phase (CPHA) of the SPI",65,[[["mode",3]]]],[11,"freq","","Method for calculating the output frequency given our baud…",65,[[["hertz",3]],["hertz",3]]],[11,"calculate_baud","","Helper for calculating our baudrate register",65,[[["into",8],["hertz",3]]]],[0,"time","atsamd_hal::common","Time units",null,null],[3,"Bps","atsamd_hal::common::time","Bits per second",null,null],[12,"0","","",66,null],[3,"Hertz","","Hertz",null,null],[12,"0","","",67,null],[3,"KiloHertz","","KiloHertz",null,null],[12,"0","","",68,null],[3,"MegaHertz","","MegaHertz",null,null],[12,"0","","",69,null],[3,"Seconds","","Seconds",null,null],[12,"0","","",70,null],[3,"Milliseconds","","Milliseconds",null,null],[12,"0","","",71,null],[3,"Microseconds","","Microseconds",null,null],[12,"0","","",72,null],[3,"Nanoseconds","","Nanoseconds",null,null],[12,"0","","",73,null],[8,"U32Ext","","Extension trait that adds convenience methods to the `u32`…",null,null],[10,"bps","","Wrap in `Bps`",74,[[],["bps",3]]],[10,"hz","","Wrap in `Hertz`",74,[[],["hertz",3]]],[10,"khz","","Wrap in `KiloHertz`",74,[[],["kilohertz",3]]],[10,"mhz","","Wrap in `MegaHertz`",74,[[],["megahertz",3]]],[10,"s","","Wrap in `Seconds`",74,[[],["seconds",3]]],[10,"ms","","Wrap in `Milliseconds`",74,[[],["milliseconds",3]]],[10,"us","","Wrap in `Microseconds`",74,[[],["microseconds",3]]],[10,"ns","","Wrap in `NanoSeconds`",74,[[],["nanoseconds",3]]],[0,"timer_params","atsamd_hal::common","helper struct to calculate divider & cycles settings for…",null,null],[3,"TimerParams","atsamd_hal::common::timer_params","Helper type for computing cycles and divider given frequency",null,null],[12,"divider","","",75,null],[12,"cycles","","",75,null],[11,"new","","calculates TimerParams from a given frequency based timeout.",75,[[]]],[11,"new_us","","calculates TimerParams from a given period based timeout.",75,[[]]],[0,"timer_traits","atsamd_hal::common","",null,null],[8,"InterruptDrivenTimer","atsamd_hal::common::timer_traits","Trait for timers that can enable & disable an interrupt…",null,null],[10,"enable_interrupt","","Enable the timer interrupt",76,[[]]],[10,"disable_interrupt","","Disable the timer interrupt",76,[[]]],[11,"new","atsamd_hal::common::sercom::v1","Configures the sercom instance to work as an I2C Master.…",77,[[["sercom0coreclock",3],["into",8],["hertz",3],["sercom0",3],["pm",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",77,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",78,[[["sercom1",3],["sercom1coreclock",3],["hertz",3],["into",8],["pm",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",78,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",79,[[["sercom2coreclock",3],["hertz",3],["into",8],["sercom2",3],["pm",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",79,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",80,[[["into",8],["hertz",3],["sercom3coreclock",3],["sercom3",3],["pm",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",80,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",81,[[["sercom4",3],["into",8],["hertz",3],["pm",3],["sercom4coreclock",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",81,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",82,[[["sercom5coreclock",3],["hertz",3],["into",8],["sercom5",3],["pm",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",82,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",83,[[["spimaster0padout",3],["pm",3],["mode",3],["sercom0coreclock",3],["into",8],["hertz",3],["sercom0",3],["into",8]]]],[11,"set_baud","","Set the baud rate",83,[[["sercom0coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",83,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",84,[[["sercom1",3],["sercom1coreclock",3],["pm",3],["mode",3],["into",8],["into",8],["hertz",3],["spimaster1padout",3]]]],[11,"set_baud","","Set the baud rate",84,[[["sercom1coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",84,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",85,[[["sercom2coreclock",3],["pm",3],["mode",3],["into",8],["hertz",3],["sercom2",3],["into",8],["spimaster2padout",3]]]],[11,"set_baud","","Set the baud rate",85,[[["sercom2coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",85,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",86,[[["pm",3],["sercom3coreclock",3],["spimaster3padout",3],["sercom3",3],["mode",3],["into",8],["into",8],["hertz",3]]]],[11,"set_baud","","Set the baud rate",86,[[["sercom3coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",86,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",87,[[["pm",3],["spimaster4padout",3],["mode",3],["into",8],["sercom4",3],["into",8],["hertz",3],["sercom4coreclock",3]]]],[11,"set_baud","","Set the baud rate",87,[[["sercom4coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",87,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",88,[[["spimaster5padout",3],["pm",3],["mode",3],["sercom5coreclock",3],["hertz",3],["into",8],["into",8],["sercom5",3]]]],[11,"set_baud","","Set the baud rate",88,[[["sercom5coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",88,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",89,[[["sercom0coreclock",3],["into",8],["hertz",3],["sercom0",3],["pm",3],["into",8],["uart0padout",3]],["uart0",3]]],[11,"free","","",89,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",90,[[["sercom1",3],["sercom1coreclock",3],["hertz",3],["into",8],["pm",3],["uart1padout",3],["into",8]],["uart1",3]]],[11,"free","","",90,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",91,[[["into",8],["sercom2coreclock",3],["hertz",3],["into",8],["sercom2",3],["pm",3],["uart2padout",3]],["uart2",3]]],[11,"free","","",91,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",92,[[["uart3padout",3],["into",8],["hertz",3],["sercom3coreclock",3],["sercom3",3],["pm",3],["into",8]],["uart3",3]]],[11,"free","","",92,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",93,[[["sercom4",3],["into",8],["hertz",3],["pm",3],["sercom4coreclock",3],["into",8],["uart4padout",3]],["uart4",3]]],[11,"free","","",93,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",94,[[["uart5padout",3],["sercom5coreclock",3],["hertz",3],["into",8],["sercom5",3],["pm",3],["into",8]],["uart5",3]]],[11,"free","","",94,[[]]],[0,"eic","atsamd_hal::common","",null,null],[3,"EIC","atsamd_hal::common::eic","",null,null],[0,"pin","","",null,null],[3,"ExtInt0","atsamd_hal::common::eic::pin","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt1","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt2","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt3","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt4","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt5","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt6","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt7","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt8","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt9","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt10","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt11","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt12","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt13","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt14","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt15","","Represents a numbered external interrupt. The external…",null,null],[6,"Sense","","",null,null],[6,"ExternalInterruptID","","",null,null],[8,"EicPin","","The EicPin trait makes it more ergonomic to convert a gpio…",null,null],[10,"into_ei","","",51,[[["port",3]]]],[8,"ExternalInterrupt","","ExternalInterrupt describes something with an external…",null,null],[10,"id","","",95,[[],["externalinterruptid",6]]],[0,"adc","atsamd_hal::common","",null,null],[3,"Adc","atsamd_hal::common::adc","",null,null],[0,"pwm","atsamd_hal::common","",null,null],[3,"Pwm3","atsamd_hal::common::pwm","",null,null],[3,"Pwm4","","",null,null],[3,"Pwm5","","",null,null],[3,"Pwm0","","",null,null],[3,"Pwm1","","",null,null],[3,"Pwm2","","",null,null],[4,"Channel","","",null,null],[13,"_0","","",96,null],[13,"_1","","",96,null],[13,"_2","","",96,null],[13,"_3","","",96,null],[0,"watchdog","atsamd_hal::common","",null,null],[3,"Watchdog","atsamd_hal::common::watchdog","",null,null],[4,"WatchdogTimeout","","WatchdogTimeout enumerates usable values for configuring…",null,null],[13,"Cycles8","","",97,null],[13,"Cycles16","","",97,null],[13,"Cycles32","","",97,null],[13,"Cycles64","","",97,null],[13,"Cycles128","","",97,null],[13,"Cycles256","","",97,null],[13,"Cycles512","","",97,null],[13,"Cycles1K","","",97,null],[13,"Cycles2K","","",97,null],[13,"Cycles4K","","",97,null],[13,"Cycles8K","","",97,null],[13,"Cycles16K","","",97,null],[0,"pad","atsamd_hal::common","",null,null],[0,"samd21","atsamd_hal","",null,null],[0,"calibration","atsamd_hal::samd21","NVM Software Calibration Area Mapping",null,null],[5,"osc32k_cal","atsamd_hal::samd21::calibration","Returns the osc32k calibration value from the NVM…",null,[[]]],[5,"dfll48m_coarse_cal","","Returns the dfll48m coarse calibration value",null,[[]]],[5,"usb_transn_cal","","USB TRANSN calibration value. Should be written to USB…",null,[[]]],[5,"usb_transp_cal","","USB TRANSP calibration value. Should be written to USB…",null,[[]]],[5,"usb_trim_cal","","USB TRIM calibration value. Should be written to USB…",null,[[]]],[0,"clock","atsamd_hal::samd21","Configuring the system clock sources. You will typically…",null,null],[3,"GClock","atsamd_hal::samd21::clock","Represents a configured clock generator. Can be converted…",null,null],[3,"GenericClockController","","`GenericClockController` encapsulates the GCLK hardware.…",null,null],[3,"Tcc0Tcc1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tcc2Tc3Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tc4Tc5Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tc6Tc7Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom0CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom1CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom2CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom3CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom4CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom5CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"UsbClock","","A typed token that indicates that the clock for the…",null,null],[3,"RtcClock","","A typed token that indicates that the clock for the…",null,null],[3,"AdcClock","","A typed token that indicates that the clock for the…",null,null],[3,"WdtClock","","A typed token that indicates that the clock for the…",null,null],[3,"EicClock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys2Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys3Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys4Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys5Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys6Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys7Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys8Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys9Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys10Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys11Clock","","A typed token that indicates that the clock for the…",null,null],[3,"AcAnaClock","","A typed token that indicates that the clock for the…",null,null],[3,"AcDigClock","","A typed token that indicates that the clock for the…",null,null],[3,"DacClock","","A typed token that indicates that the clock for the…",null,null],[3,"I2S0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"I2S1Clock","","A typed token that indicates that the clock for the…",null,null],[5,"enable_internal_32kosc","","Turn on the internal 32hkz oscillator",null,[[["sysctrl",3]]]],[5,"enable_external_32kosc","","Turn on the external 32hkz oscillator",null,[[["sysctrl",3]]]],[6,"ClockId","","",null,null],[6,"ClockGenId","","",null,null],[6,"ClockSource","","",null,null],[17,"OSC48M_FREQ","","The frequency of the 48Mhz source.",null,null],[17,"OSC8M_FREQ","","The frequency of the 8 Mhz source.",null,null],[17,"OSC32K_FREQ","","The frequency of the 32Khz source.",null,null],[11,"with_internal_32kosc","","Reset the clock controller, configure the system to run at…",98,[[["gclk",3],["pm",3],["sysctrl",3],["nvmctrl",3]]]],[11,"with_external_32kosc","","Reset the clock controller, configure the system to run at…",98,[[["gclk",3],["pm",3],["sysctrl",3],["nvmctrl",3]]]],[11,"with_internal_8mhz","","Reset the clock controller, configure the system to run at…",98,[[["gclk",3],["pm",3],["sysctrl",3],["nvmctrl",3]]]],[11,"gclk0","","Returns a `GClock` for gclk0, the system clock generator…",98,[[],["gclock",3]]],[11,"gclk1","","Returns a `GClock` for gclk1, the 32Khz oscillator.",98,[[],["gclock",3]]],[11,"get_gclk","","Returns the `GClock` for the specified clock generator. If…",98,[[["clockgenid",6]],[["gclock",3],["option",4]]]],[11,"configure_gclk_divider_and_source","","Configures a clock generator with the specified divider…",98,[[["clockgenid",6],["clocksource",6]],[["gclock",3],["option",4]]]],[11,"configure_standby","","Enables or disables the given GClk from operation in…",98,[[["clockgenid",6]]]],[11,"freq","","Returns the frequency of the configured clock",99,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",100,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",101,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",102,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",103,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",104,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",105,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",106,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",107,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",108,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",109,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",110,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",111,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",112,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",113,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",114,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",115,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",116,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",117,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",118,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",119,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",120,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",121,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",122,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",123,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",124,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",125,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",126,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",127,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",128,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",129,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",130,[[],["hertz",3]]],[11,"tcc0_tcc1","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["tcc0tcc1clock",3],["option",4]]]],[11,"tcc2_tc3","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["tcc2tc3clock",3],["option",4]]]],[11,"tc4_tc5","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["tc4tc5clock",3],["option",4]]]],[11,"tc6_tc7","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["tc6tc7clock",3]]]],[11,"sercom0_core","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["sercom0coreclock",3]]]],[11,"sercom1_core","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["sercom1coreclock",3]]]],[11,"sercom2_core","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["sercom2coreclock",3],["option",4]]]],[11,"sercom3_core","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["sercom3coreclock",3],["option",4]]]],[11,"sercom4_core","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["sercom4coreclock",3],["option",4]]]],[11,"sercom5_core","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["sercom5coreclock",3]]]],[11,"usb","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["usbclock",3],["option",4]]]],[11,"rtc","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["rtcclock",3]]]],[11,"adc","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["adcclock",3]]]],[11,"wdt","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["wdtclock",3]]]],[11,"eic","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["eicclock",3]]]],[11,"evsys0","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["evsys0clock",3]]]],[11,"evsys1","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["evsys1clock",3]]]],[11,"evsys2","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["evsys2clock",3]]]],[11,"evsys3","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["evsys3clock",3]]]],[11,"evsys4","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["evsys4clock",3],["option",4]]]],[11,"evsys5","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["evsys5clock",3]]]],[11,"evsys6","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["evsys6clock",3],["option",4]]]],[11,"evsys7","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["evsys7clock",3],["option",4]]]],[11,"evsys8","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["evsys8clock",3]]]],[11,"evsys9","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["evsys9clock",3],["option",4]]]],[11,"evsys10","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["evsys10clock",3],["option",4]]]],[11,"evsys11","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["evsys11clock",3],["option",4]]]],[11,"ac_ana","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["acanaclock",3],["option",4]]]],[11,"ac_dig","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["acdigclock",3]]]],[11,"dac","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["option",4],["dacclock",3]]]],[11,"i2s0","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["i2s0clock",3],["option",4]]]],[11,"i2s1","","Configure the clock for peripheral(s) that match the name…",98,[[["gclock",3]],[["i2s1clock",3],["option",4]]]],[0,"timer","atsamd_hal::samd21","Working with timer counter hardware",null,null],[3,"TimerCounter","atsamd_hal::samd21::timer","A generic hardware timer counter. The counters are exposed…",null,null],[3,"SpinTimer","","",null,null],[6,"TimerCounter3","","",null,null],[6,"TimerCounter4","","",null,null],[6,"TimerCounter5","","",null,null],[8,"Count16","","This is a helper trait to make it easier to make most of…",null,null],[10,"count_16","","",131,[[],["count16",3]]],[11,"tc3_","","Configure this timer counter instance. The clock is…",132,[[["tc3",3],["tcc2tc3clock",3],["pm",3]]]],[11,"tc4_","","Configure this timer counter instance. The clock is…",132,[[["tc4tc5clock",3],["tc4",3],["pm",3]]]],[11,"tc5_","","Configure this timer counter instance. The clock is…",132,[[["tc4tc5clock",3],["pm",3],["tc5",3]]]],[11,"new","","",133,[[],["spintimer",3]]],[0,"usb","atsamd_hal::samd21","USB Device support",null,null],[3,"UsbBus","atsamd_hal::samd21::usb","",null,null],[11,"new","","",134,[[["dppad",6],["pm",3],["dmpad",6],["usb",3],["usbclock",3]]]],[6,"SofPad","","Emit SOF at 1Khz on this pin when configured as function G",null,null],[6,"DmPad","","USB D- is connected here",null,null],[6,"DpPad","","USB D+ is connected here",null,null],[14,"dbgprint","atsamd_hal","",null,null],[14,"define_pins","","This macro is a helper for defining a `Pins` type in a…",null,null],[11,"from","atsamd_hal::typelevel","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","atsamd_hal::common","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","atsamd_hal::common::delay","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v1","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"set_low","","",5,[[],["result",4]]],[11,"set_high","","",5,[[],["result",4]]],[11,"is_set_low","","",5,[[],["result",4]]],[11,"is_set_high","","",5,[[],["result",4]]],[11,"toggle","","Toggle pin output",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","","",5,[[],["result",4]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"set_low","","",14,[[],["result",4]]],[11,"set_high","","",14,[[],["result",4]]],[11,"is_set_low","","",14,[[],["result",4]]],[11,"is_set_high","","",14,[[],["result",4]]],[11,"toggle","","Toggle pin output",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","","",14,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v2::dynpin","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"set_low","","",23,[[],["result",4]]],[11,"set_high","","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"is_set_high","","",23,[[],["result",4]]],[11,"toggle","","Toggle pin output",23,[[],["result",4]]],[11,"is_low","","",23,[[],["result",4]]],[11,"is_high","","",23,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","atsamd_hal::common::rtc","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sercom::v1","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"transfer","","",83,[[],["result",4]]],[11,"write","","",83,[[],["result",4]]],[11,"write_iter","","",83,[[],["result",4]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"transfer","","",84,[[],["result",4]]],[11,"write","","",84,[[],["result",4]]],[11,"write_iter","","",84,[[],["result",4]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"transfer","","",85,[[],["result",4]]],[11,"write","","",85,[[],["result",4]]],[11,"write_iter","","",85,[[],["result",4]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"transfer","","",86,[[],["result",4]]],[11,"write","","",86,[[],["result",4]]],[11,"write_iter","","",86,[[],["result",4]]],[11,"from","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"transfer","","",87,[[],["result",4]]],[11,"write","","",87,[[],["result",4]]],[11,"write_iter","","",87,[[],["result",4]]],[11,"from","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"transfer","","",88,[[],["result",4]]],[11,"write","","",88,[[],["result",4]]],[11,"write_iter","","",88,[[],["result",4]]],[11,"from","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"bwrite_all","","",89,[[],["result",4]]],[11,"bflush","","",89,[[],["result",4]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"bwrite_all","","",90,[[],["result",4]]],[11,"bflush","","",90,[[],["result",4]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"bwrite_all","","",91,[[],["result",4]]],[11,"bflush","","",91,[[],["result",4]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"bwrite_all","","",92,[[],["result",4]]],[11,"bflush","","",92,[[],["result",4]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"bwrite_all","","",93,[[],["result",4]]],[11,"bflush","","",93,[[],["result",4]]],[11,"from","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"bwrite_all","","",94,[[],["result",4]]],[11,"bflush","","",94,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sercom::v2::pads","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sleeping_delay","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","atsamd_hal::common::time","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","atsamd_hal::common::timer_params","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","atsamd_hal::common::eic","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","atsamd_hal::common::eic::pin","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","atsamd_hal::common::adc","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","atsamd_hal::common::pwm","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","atsamd_hal::common::watchdog","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","atsamd_hal::samd21::clock","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","atsamd_hal::samd21::timer","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","atsamd_hal::samd21::usb","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"write_str","atsamd_hal::common::prelude","",41,[[],[["result",4],["error",3]]]],[11,"into_function","atsamd_hal::common::gpio::v1","",5,[[["port",3]],[["pin",3],["alternate",3]]]],[11,"as_concrete","atsamd_hal::common::gpio::v2::pin","",14,[[],["concretepin",6]]],[11,"as_concrete_ref","","",14,[[],["concretepin",6]]],[11,"as_concrete_mut","","",14,[[],["concretepin",6]]],[11,"into_pad","atsamd_hal::common::gpio::v1","",5,[[["port",3]],[["pad",3],["pin",3]]]],[11,"as_concrete","atsamd_hal::common::sercom::v2::pads","",63,[[],["concretepad",6]]],[11,"spi","atsamd_hal::common::sercom::v1","Helper for accessing the spi member of the sercom instance",83,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",83,[[],["spi",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",84,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",84,[[],["spi",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",85,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",85,[[],["spi",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",86,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",86,[[],["spi",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",87,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",87,[[],["spi",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",88,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",88,[[],["spi",3]]],[11,"enable_interrupt","atsamd_hal::common::rtc","Enable the interrupt generation for this hardware timer.…",54,[[]]],[11,"disable_interrupt","","Disables interrupt generation for this hardware timer.…",54,[[]]],[11,"enable_interrupt","atsamd_hal::samd21::timer","Enable the interrupt generation for this hardware timer.…",132,[[]]],[11,"disable_interrupt","","Disables interrupt generation for this hardware timer.…",132,[[]]],[11,"into_ei","atsamd_hal","",242,[[["port",3]],[["pa0",6],["extint0",3]]]],[11,"into_ei","","",243,[[["port",3]],[["pa16",6],["extint0",3]]]],[11,"into_ei","","",244,[[["port",3]],[["extint1",3],["pa1",6]]]],[11,"into_ei","","",245,[[["port",3]],[["pa17",6],["extint1",3]]]],[11,"into_ei","","",246,[[["port",3]],[["pa2",6],["extint2",3]]]],[11,"into_ei","","",247,[[["port",3]],[["pa18",6],["extint2",3]]]],[11,"into_ei","","",248,[[["port",3]],[["pb2",6],["extint2",3]]]],[11,"into_ei","","",249,[[["port",3]],[["extint3",3],["pa3",6]]]],[11,"into_ei","","",250,[[["port",3]],[["extint3",3],["pa19",6]]]],[11,"into_ei","","",251,[[["port",3]],[["extint3",3],["pb3",6]]]],[11,"into_ei","","",252,[[["port",3]],[["pa4",6],["extint4",3]]]],[11,"into_ei","","",253,[[["port",3]],[["pa20",6],["extint4",3]]]],[11,"into_ei","","",254,[[["port",3]],[["extint5",3],["pa5",6]]]],[11,"into_ei","","",255,[[["port",3]],[["pa21",6],["extint5",3]]]],[11,"into_ei","","",256,[[["port",3]],[["pa6",6],["extint6",3]]]],[11,"into_ei","","",257,[[["port",3]],[["extint6",3],["pa22",6]]]],[11,"into_ei","","",258,[[["port",3]],[["pb22",6],["extint6",3]]]],[11,"into_ei","","",259,[[["port",3]],[["extint7",3],["pa7",6]]]],[11,"into_ei","","",260,[[["port",3]],[["pa23",6],["extint7",3]]]],[11,"into_ei","","",261,[[["port",3]],[["extint7",3],["pb23",6]]]],[11,"into_ei","","",262,[[["port",3]],[["extint8",3],["pa28",6]]]],[11,"into_ei","","",263,[[["port",3]],[["pb8",6],["extint8",3]]]],[11,"into_ei","","",264,[[["port",3]],[["extint9",3],["pa9",6]]]],[11,"into_ei","","",265,[[["port",3]],[["extint9",3],["pb9",6]]]],[11,"into_ei","","",266,[[["port",3]],[["pa10",6],["extint10",3]]]],[11,"into_ei","","",267,[[["port",3]],[["pa30",6],["extint10",3]]]],[11,"into_ei","","",268,[[["port",3]],[["extint10",3],["pb10",6]]]],[11,"into_ei","","",269,[[["port",3]],[["extint11",3],["pa11",6]]]],[11,"into_ei","","",270,[[["port",3]],[["pa31",6],["extint11",3]]]],[11,"into_ei","","",271,[[["port",3]],[["pb11",6],["extint11",3]]]],[11,"into_ei","","",272,[[["port",3]],[["extint12",3],["pa12",6]]]],[11,"into_ei","","",273,[[["port",3]],[["extint12",3],["pa24",6]]]],[11,"into_ei","","",274,[[["port",3]],[["extint13",3],["pa13",6]]]],[11,"into_ei","","",275,[[["port",3]],[["pa25",6],["extint13",3]]]],[11,"into_ei","","",276,[[["port",3]],[["pa14",6],["extint14",3]]]],[11,"into_ei","","",277,[[["port",3]],[["pa15",6],["extint15",3]]]],[11,"into_ei","","",278,[[["port",3]],[["extint15",3],["pa27",6]]]],[11,"dipo_dopo","atsamd_hal::common::sercom::v1","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",194,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",195,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",196,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",197,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",198,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"dipo_dopo","","",199,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",200,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",201,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",202,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",203,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",204,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"rxpo_txpo","","",205,[[]]],[11,"from","atsamd_hal::common::gpio::v1","",5,[[["pin",3]],["pin",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","",14,[[["pin",3]],["pin",3]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullDownDisabled`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`FloatingDisabled`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullUpDisabled`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`FloatingDisabled`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`FloatingInput`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`FloatingDisabled`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullDownInput`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`FloatingDisabled`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullUpInput`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`FloatingDisabled`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PushPullOutput`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`FloatingDisabled`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`ReadableOutput`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`FloatingDisabled`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateA`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateB`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`FloatingDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateC`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`FloatingDisabled`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateD`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`FloatingDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateE`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`FloatingDisabled`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateF`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`FloatingDisabled`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateG`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`FloatingDisabled`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateH`]",14,[[["floatingdisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`FloatingDisabled`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullUpDisabled`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullDownDisabled`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`FloatingInput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullDownDisabled`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullDownInput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullDownDisabled`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullUpInput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullDownDisabled`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullDownDisabled`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullDownDisabled`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateA`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateB`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullDownDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateC`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullDownDisabled`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateD`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullDownDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateE`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullDownDisabled`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateF`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullDownDisabled`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateG`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullDownDisabled`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateH`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PullDownDisabled`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`FloatingInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullUpDisabled`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullDownInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullUpDisabled`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullUpInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullUpDisabled`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullUpDisabled`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullUpDisabled`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateA`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateB`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullUpDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateC`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullUpDisabled`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateD`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullUpDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateE`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullUpDisabled`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateF`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullUpDisabled`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateG`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullUpDisabled`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateH`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PullUpDisabled`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullDownInput`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`FloatingInput`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullUpInput`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`FloatingInput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`PushPullOutput`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`FloatingInput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`ReadableOutput`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`FloatingInput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateA`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`FloatingInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateB`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`FloatingInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateC`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`FloatingInput`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateD`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`FloatingInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateE`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`FloatingInput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateF`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`FloatingInput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateG`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`FloatingInput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateH`]",14,[[["pin",3],["floatinginput",6]]]],[11,"from","","Convert from [`AlternateH`] to [`FloatingInput`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullUpInput`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullDownInput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`PushPullOutput`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullDownInput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`ReadableOutput`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullDownInput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateA`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`PullDownInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateB`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`PullDownInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateC`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`PullDownInput`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateD`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`PullDownInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateE`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`PullDownInput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateF`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`PullDownInput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateG`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`PullDownInput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateH`]",14,[[["pulldowninput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`PullDownInput`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PushPullOutput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullUpInput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`ReadableOutput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullUpInput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateA`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`PullUpInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateB`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`PullUpInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateC`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`PullUpInput`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateD`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`PullUpInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateE`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`PullUpInput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateF`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`PullUpInput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateG`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`PullUpInput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateH`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`PullUpInput`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`ReadableOutput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PushPullOutput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateA`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PushPullOutput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateB`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PushPullOutput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateC`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PushPullOutput`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateD`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PushPullOutput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateE`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PushPullOutput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateF`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PushPullOutput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateG`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PushPullOutput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateH`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PushPullOutput`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateA`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`ReadableOutput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateB`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`ReadableOutput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateC`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`ReadableOutput`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateD`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`ReadableOutput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateE`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`ReadableOutput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateF`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`ReadableOutput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateG`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`ReadableOutput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateH`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateH`] to [`ReadableOutput`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateB`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateA`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateC`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateA`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateD`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateA`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateE`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateA`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateF`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateA`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateG`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateA`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateH`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateA`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateC`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateB`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateD`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateB`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateE`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateB`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateF`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateB`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateG`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateB`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateH`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateB`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateD`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateC`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateE`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateC`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateF`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateC`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateG`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateC`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateH`]",14,[[["alternatec",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateC`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateE`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateD`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateF`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateD`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateG`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateD`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateH`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateD`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateF`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateE`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateG`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateE`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateH`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateE`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateG`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateF`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateH`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateF`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateH`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateG`]",14,[[["pin",3],["alternateh",6]]]],[11,"from","atsamd_hal::common::gpio::v2::dynpin","Erase the type-level information in a [Pin] and return a…",23,[[["pin",3]]]],[11,"from","atsamd_hal::common::rtc","",52,[[["r",6]],["datetime",3]]],[11,"from","atsamd_hal::common::sercom::v2::pads","",63,[[["pad",3]],[["pad",3],["pin",3]]]],[11,"from","","",63,[[["pad",3],["pin",3]],["pad",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","Convert from a [`Pad`] to its corresponding [`Pin`].",14,[[["pad",3]]]],[11,"from","atsamd_hal::common::sercom::v2::pads","Convert from a [`Pin`] to its corresponding [`Pad`].",63,[[["pin",3]]]],[11,"from","atsamd_hal::common","",0,[[],["resetcause",4]]],[11,"from","atsamd_hal::common::sercom::v1","",194,[[],[["sercom0pad0",6],["spimaster0padout",3],["sercom0pad3",6],["sercom0pad2",6]]]],[11,"from","","",194,[[],[["sercom0pad0",6],["sercom0pad1",6],["sercom0pad3",6],["spimaster0padout",3]]]],[11,"from","","",194,[[],[["sercom0pad3",6],["sercom0pad1",6],["spimaster0padout",3],["sercom0pad2",6]]]],[11,"from","","",194,[[],[["sercom0pad1",6],["sercom0pad0",6],["spimaster0padout",3],["sercom0pad3",6]]]],[11,"from","","",194,[[],[["sercom0pad0",6],["sercom0pad2",6],["sercom0pad1",6],["spimaster0padout",3]]]],[11,"from","","",194,[[],[["sercom0pad2",6],["sercom0pad3",6],["spimaster0padout",3],["sercom0pad1",6]]]],[11,"from","","",194,[[],[["spimaster0padout",3],["sercom0pad0",6],["sercom0pad2",6],["sercom0pad3",6]]]],[11,"from","","",194,[[],[["sercom0pad0",6],["spimaster0padout",3],["sercom0pad3",6],["sercom0pad1",6]]]],[11,"from","","",195,[[],[["sercom1pad0",6],["spimaster1padout",3],["sercom1pad2",6],["sercom1pad3",6]]]],[11,"from","","",195,[[],[["sercom1pad0",6],["spimaster1padout",3],["sercom1pad1",6],["sercom1pad3",6]]]],[11,"from","","",195,[[],[["sercom1pad3",6],["spimaster1padout",3],["sercom1pad2",6],["sercom1pad1",6]]]],[11,"from","","",195,[[],[["sercom1pad3",6],["sercom1pad0",6],["spimaster1padout",3],["sercom1pad1",6]]]],[11,"from","","",195,[[],[["spimaster1padout",3],["sercom1pad0",6],["sercom1pad1",6],["sercom1pad2",6]]]],[11,"from","","",195,[[],[["spimaster1padout",3],["sercom1pad1",6],["sercom1pad3",6],["sercom1pad2",6]]]],[11,"from","","",195,[[],[["sercom1pad3",6],["sercom1pad0",6],["spimaster1padout",3],["sercom1pad2",6]]]],[11,"from","","",195,[[],[["sercom1pad0",6],["spimaster1padout",3],["sercom1pad1",6],["sercom1pad3",6]]]],[11,"from","","",196,[[],[["sercom2pad3",6],["sercom2pad2",6],["spimaster2padout",3],["sercom2pad0",6]]]],[11,"from","","",196,[[],[["sercom2pad0",6],["spimaster2padout",3],["sercom2pad1",6],["sercom2pad3",6]]]],[11,"from","","",196,[[],[["sercom2pad3",6],["sercom2pad2",6],["sercom2pad1",6],["spimaster2padout",3]]]],[11,"from","","",196,[[],[["sercom2pad3",6],["sercom2pad1",6],["sercom2pad0",6],["spimaster2padout",3]]]],[11,"from","","",196,[[],[["sercom2pad1",6],["sercom2pad0",6],["spimaster2padout",3],["sercom2pad2",6]]]],[11,"from","","",196,[[],[["sercom2pad1",6],["spimaster2padout",3],["sercom2pad2",6],["sercom2pad3",6]]]],[11,"from","","",196,[[],[["sercom2pad3",6],["sercom2pad0",6],["sercom2pad2",6],["spimaster2padout",3]]]],[11,"from","","",196,[[],[["sercom2pad3",6],["sercom2pad1",6],["sercom2pad0",6],["spimaster2padout",3]]]],[11,"from","","",197,[[],[["sercom3pad2",6],["sercom3pad3",6],["sercom3pad0",6],["spimaster3padout",3]]]],[11,"from","","",197,[[],[["sercom3pad3",6],["sercom3pad1",6],["spimaster3padout",3],["sercom3pad0",6]]]],[11,"from","","",197,[[],[["sercom3pad2",6],["spimaster3padout",3],["sercom3pad3",6],["sercom3pad1",6]]]],[11,"from","","",197,[[],[["sercom3pad0",6],["sercom3pad3",6],["spimaster3padout",3],["sercom3pad1",6]]]],[11,"from","","",197,[[],[["spimaster3padout",3],["sercom3pad2",6],["sercom3pad0",6],["sercom3pad1",6]]]],[11,"from","","",197,[[],[["sercom3pad2",6],["sercom3pad3",6],["sercom3pad1",6],["spimaster3padout",3]]]],[11,"from","","",197,[[],[["sercom3pad2",6],["sercom3pad0",6],["sercom3pad3",6],["spimaster3padout",3]]]],[11,"from","","",197,[[],[["spimaster3padout",3],["sercom3pad3",6],["sercom3pad0",6],["sercom3pad1",6]]]],[11,"from","","",198,[[],[["sercom4pad3",6],["sercom4pad2",6],["sercom4pad0",6],["spimaster4padout",3]]]],[11,"from","","",198,[[],[["spimaster4padout",3],["sercom4pad1",6],["sercom4pad0",6],["sercom4pad3",6]]]],[11,"from","","",198,[[],[["sercom4pad3",6],["spimaster4padout",3],["sercom4pad2",6],["sercom4pad1",6]]]],[11,"from","","",198,[[],[["sercom4pad3",6],["spimaster4padout",3],["sercom4pad0",6],["sercom4pad1",6]]]],[11,"from","","",198,[[],[["sercom4pad2",6],["sercom4pad1",6],["spimaster4padout",3],["sercom4pad0",6]]]],[11,"from","","",198,[[],[["sercom4pad2",6],["sercom4pad1",6],["spimaster4padout",3],["sercom4pad3",6]]]],[11,"from","","",198,[[],[["sercom4pad2",6],["spimaster4padout",3],["sercom4pad0",6],["sercom4pad3",6]]]],[11,"from","","",198,[[],[["sercom4pad1",6],["spimaster4padout",3],["sercom4pad3",6],["sercom4pad0",6]]]],[11,"from","","",199,[[],[["spimaster5padout",3],["sercom5pad2",6],["sercom5pad3",6],["sercom5pad0",6]]]],[11,"from","","",199,[[],[["sercom5pad3",6],["sercom5pad1",6],["spimaster5padout",3],["sercom5pad0",6]]]],[11,"from","","",199,[[],[["sercom5pad1",6],["spimaster5padout",3],["sercom5pad2",6],["sercom5pad3",6]]]],[11,"from","","",199,[[],[["sercom5pad1",6],["sercom5pad0",6],["spimaster5padout",3],["sercom5pad3",6]]]],[11,"from","","",199,[[],[["spimaster5padout",3],["sercom5pad2",6],["sercom5pad1",6],["sercom5pad0",6]]]],[11,"from","","",199,[[],[["spimaster5padout",3],["sercom5pad3",6],["sercom5pad2",6],["sercom5pad1",6]]]],[11,"from","","",199,[[],[["spimaster5padout",3],["sercom5pad2",6],["sercom5pad0",6],["sercom5pad3",6]]]],[11,"from","","",199,[[],[["sercom5pad3",6],["spimaster5padout",3],["sercom5pad1",6],["sercom5pad0",6]]]],[11,"from","","",200,[[],[["sercom0pad0",6],["uart0padout",3],["sercom0pad2",6]]]],[11,"from","","",200,[[],[["sercom0pad1",6],["sercom0pad0",6],["uart0padout",3]]]],[11,"from","","",200,[[],[["sercom0pad3",6],["sercom0pad1",6],["sercom0pad0",6],["sercom0pad2",6],["uart0padout",3]]]],[11,"from","","",200,[[],[["uart0padout",3],["sercom0pad1",6],["sercom0pad2",6]]]],[11,"from","","",200,[[],[["uart0padout",3],["sercom0pad2",6],["sercom0pad0",6]]]],[11,"from","","",200,[[],[["sercom0pad3",6],["sercom0pad0",6],["uart0padout",3]]]],[11,"from","","",200,[[],[["sercom0pad2",6],["uart0padout",3],["sercom0pad3",6]]]],[11,"from","","",201,[[],[["sercom1pad0",6],["sercom1pad2",6],["uart1padout",3]]]],[11,"from","","",201,[[],[["sercom1pad1",6],["sercom1pad0",6],["uart1padout",3]]]],[11,"from","","",201,[[],[["uart1padout",3],["sercom1pad0",6],["sercom1pad3",6],["sercom1pad2",6],["sercom1pad1",6]]]],[11,"from","","",201,[[],[["sercom1pad2",6],["uart1padout",3],["sercom1pad1",6]]]],[11,"from","","",201,[[],[["uart1padout",3],["sercom1pad0",6],["sercom1pad2",6]]]],[11,"from","","",201,[[],[["sercom1pad0",6],["sercom1pad3",6],["uart1padout",3]]]],[11,"from","","",201,[[],[["sercom1pad2",6],["uart1padout",3],["sercom1pad3",6]]]],[11,"from","","",202,[[],[["uart2padout",3],["sercom2pad2",6],["sercom2pad0",6]]]],[11,"from","","",202,[[],[["uart2padout",3],["sercom2pad1",6],["sercom2pad0",6]]]],[11,"from","","",202,[[],[["uart2padout",3],["sercom2pad1",6],["sercom2pad0",6],["sercom2pad3",6],["sercom2pad2",6]]]],[11,"from","","",202,[[],[["sercom2pad2",6],["uart2padout",3],["sercom2pad1",6]]]],[11,"from","","",202,[[],[["uart2padout",3],["sercom2pad2",6],["sercom2pad0",6]]]],[11,"from","","",202,[[],[["uart2padout",3],["sercom2pad3",6],["sercom2pad0",6]]]],[11,"from","","",202,[[],[["uart2padout",3],["sercom2pad3",6],["sercom2pad2",6]]]],[11,"from","","",203,[[],[["sercom3pad2",6],["uart3padout",3],["sercom3pad0",6]]]],[11,"from","","",203,[[],[["sercom3pad1",6],["sercom3pad0",6],["uart3padout",3]]]],[11,"from","","",203,[[],[["sercom3pad0",6],["sercom3pad2",6],["sercom3pad3",6],["uart3padout",3],["sercom3pad1",6]]]],[11,"from","","",203,[[],[["sercom3pad1",6],["sercom3pad2",6],["uart3padout",3]]]],[11,"from","","",203,[[],[["sercom3pad2",6],["sercom3pad0",6],["uart3padout",3]]]],[11,"from","","",203,[[],[["uart3padout",3],["sercom3pad3",6],["sercom3pad0",6]]]],[11,"from","","",203,[[],[["uart3padout",3],["sercom3pad3",6],["sercom3pad2",6]]]],[11,"from","","",204,[[],[["sercom4pad2",6],["sercom4pad0",6],["uart4padout",3]]]],[11,"from","","",204,[[],[["uart4padout",3],["sercom4pad0",6],["sercom4pad1",6]]]],[11,"from","","",204,[[],[["sercom4pad2",6],["sercom4pad3",6],["uart4padout",3],["sercom4pad0",6],["sercom4pad1",6]]]],[11,"from","","",204,[[],[["sercom4pad2",6],["uart4padout",3],["sercom4pad1",6]]]],[11,"from","","",204,[[],[["sercom4pad2",6],["uart4padout",3],["sercom4pad0",6]]]],[11,"from","","",204,[[],[["uart4padout",3],["sercom4pad3",6],["sercom4pad0",6]]]],[11,"from","","",204,[[],[["uart4padout",3],["sercom4pad3",6],["sercom4pad2",6]]]],[11,"from","","",205,[[],[["sercom5pad2",6],["uart5padout",3],["sercom5pad0",6]]]],[11,"from","","",205,[[],[["uart5padout",3],["sercom5pad1",6],["sercom5pad0",6]]]],[11,"from","","",205,[[],[["sercom5pad1",6],["sercom5pad3",6],["uart5padout",3],["sercom5pad0",6],["sercom5pad2",6]]]],[11,"from","","",205,[[],[["uart5padout",3],["sercom5pad1",6],["sercom5pad2",6]]]],[11,"from","","",205,[[],[["sercom5pad0",6],["uart5padout",3],["sercom5pad2",6]]]],[11,"from","","",205,[[],[["uart5padout",3],["sercom5pad3",6],["sercom5pad0",6]]]],[11,"from","","",205,[[],[["sercom5pad2",6],["sercom5pad3",6],["uart5padout",3]]]],[11,"fmt","atsamd_hal::common::rtc","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::time","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::timer_params","",75,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common","",0,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::watchdog","",97,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::sercom::v1","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::samd21::clock","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"eq","atsamd_hal::common::gpio::v2::dynpin","",17,[[["dyndisabled",4]]]],[11,"eq","","",18,[[["dyninput",4]]]],[11,"eq","","",19,[[["dynoutput",4]]]],[11,"eq","","",20,[[["dynalternate",4]]]],[11,"eq","","",21,[[["dynpinmode",4]]]],[11,"ne","","",21,[[["dynpinmode",4]]]],[11,"eq","","",22,[[["dyngroup",4]]]],[11,"eq","","",15,[[["dynpinid",3]]]],[11,"ne","","",15,[[["dynpinid",3]]]],[11,"eq","atsamd_hal::common::time","",66,[[["bps",3]]]],[11,"ne","","",66,[[["bps",3]]]],[11,"eq","","",67,[[["hertz",3]]]],[11,"ne","","",67,[[["hertz",3]]]],[11,"eq","","",68,[[["kilohertz",3]]]],[11,"ne","","",68,[[["kilohertz",3]]]],[11,"eq","","",69,[[["megahertz",3]]]],[11,"ne","","",69,[[["megahertz",3]]]],[11,"eq","","",70,[[["seconds",3]]]],[11,"ne","","",70,[[["seconds",3]]]],[11,"eq","","",71,[[["milliseconds",3]]]],[11,"ne","","",71,[[["milliseconds",3]]]],[11,"eq","","",72,[[["microseconds",3]]]],[11,"ne","","",72,[[["microseconds",3]]]],[11,"eq","","",73,[[["nanoseconds",3]]]],[11,"ne","","",73,[[["nanoseconds",3]]]],[11,"eq","atsamd_hal::common::watchdog","",97,[[["watchdogtimeout",4]]]],[11,"try_from","atsamd_hal::common::gpio::v2::pin","Try to recreate a type-level [Pin] from a value-level…",14,[[["dynpin",3]],[["result",4],["error",4]]]],[11,"write_str","atsamd_hal::common::sercom::v1","",89,[[],["result",6]]],[11,"write_str","","",90,[[],["result",6]]],[11,"write_str","","",91,[[],["result",6]]],[11,"write_str","","",92,[[],["result",6]]],[11,"write_str","","",93,[[],["result",6]]],[11,"write_str","","",94,[[],["result",6]]],[11,"into","atsamd_hal::common::time","",68,[[],["hertz",3]]],[11,"into","","",69,[[],["hertz",3]]],[11,"into","","",69,[[],["kilohertz",3]]],[11,"into","","",67,[[],["kilohertz",3]]],[11,"into","","",67,[[],["megahertz",3]]],[11,"into","","",68,[[],["megahertz",3]]],[11,"into","","",70,[[],["milliseconds",3]]],[11,"into","","",70,[[],["microseconds",3]]],[11,"into","","",70,[[],["nanoseconds",3]]],[11,"into","","",71,[[],["microseconds",3]]],[11,"into","","",72,[[],["nanoseconds",3]]],[11,"into","","",71,[[],["seconds",3]]],[11,"into","","",72,[[],["seconds",3]]],[11,"into","","",72,[[],["milliseconds",3]]],[11,"into","","",71,[[],["nanoseconds",3]]],[11,"into","","",73,[[],["hertz",3]]],[11,"into","","",72,[[],["hertz",3]]],[11,"into","","",73,[[],["kilohertz",3]]],[11,"into","","",73,[[],["megahertz",3]]],[11,"into","","",67,[[],["microseconds",3]]],[11,"into","","",67,[[],["nanoseconds",3]]],[11,"into","","",68,[[],["nanoseconds",3]]],[11,"into","","",69,[[],["nanoseconds",3]]],[11,"into","atsamd_hal::samd21::clock","",241,[[],["hertz",3]]],[11,"into","","",99,[[],["hertz",3]]],[11,"into","","",100,[[],["hertz",3]]],[11,"into","","",101,[[],["hertz",3]]],[11,"into","","",102,[[],["hertz",3]]],[11,"into","","",103,[[],["hertz",3]]],[11,"into","","",104,[[],["hertz",3]]],[11,"into","","",105,[[],["hertz",3]]],[11,"into","","",106,[[],["hertz",3]]],[11,"into","","",107,[[],["hertz",3]]],[11,"into","","",108,[[],["hertz",3]]],[11,"into","","",109,[[],["hertz",3]]],[11,"into","","",110,[[],["hertz",3]]],[11,"into","","",111,[[],["hertz",3]]],[11,"into","","",112,[[],["hertz",3]]],[11,"into","","",113,[[],["hertz",3]]],[11,"into","","",114,[[],["hertz",3]]],[11,"into","","",115,[[],["hertz",3]]],[11,"into","","",116,[[],["hertz",3]]],[11,"into","","",117,[[],["hertz",3]]],[11,"into","","",118,[[],["hertz",3]]],[11,"into","","",119,[[],["hertz",3]]],[11,"into","","",120,[[],["hertz",3]]],[11,"into","","",121,[[],["hertz",3]]],[11,"into","","",122,[[],["hertz",3]]],[11,"into","","",123,[[],["hertz",3]]],[11,"into","","",124,[[],["hertz",3]]],[11,"into","","",125,[[],["hertz",3]]],[11,"into","","",126,[[],["hertz",3]]],[11,"into","","",127,[[],["hertz",3]]],[11,"into","","",128,[[],["hertz",3]]],[11,"into","","",129,[[],["hertz",3]]],[11,"into","","",130,[[],["hertz",3]]],[11,"clone","atsamd_hal::common::gpio::v2::dynpin","",17,[[],["dyndisabled",4]]],[11,"clone","","",18,[[],["dyninput",4]]],[11,"clone","","",19,[[],["dynoutput",4]]],[11,"clone","","",20,[[],["dynalternate",4]]],[11,"clone","","",21,[[],["dynpinmode",4]]],[11,"clone","","",22,[[],["dyngroup",4]]],[11,"clone","","",15,[[],["dynpinid",3]]],[11,"clone","atsamd_hal::common::rtc","",52,[[],["datetime",3]]],[11,"clone","","",53,[[],["timerparams",3]]],[11,"clone","atsamd_hal::common::time","",66,[[],["bps",3]]],[11,"clone","","",67,[[],["hertz",3]]],[11,"clone","","",68,[[],["kilohertz",3]]],[11,"clone","","",69,[[],["megahertz",3]]],[11,"clone","","",70,[[],["seconds",3]]],[11,"clone","","",71,[[],["milliseconds",3]]],[11,"clone","","",72,[[],["microseconds",3]]],[11,"clone","","",73,[[],["nanoseconds",3]]],[11,"clone","atsamd_hal::common::timer_params","",75,[[],["timerparams",3]]],[11,"clone","atsamd_hal::common","",0,[[],["resetcause",4]]],[11,"clone","atsamd_hal::common::pwm","",96,[[],["channel",4]]],[11,"clone","atsamd_hal::common::watchdog","",97,[[],["watchdogtimeout",4]]],[11,"clone","atsamd_hal::samd21::clock","",241,[[],["gclock",3]]],[11,"clone","atsamd_hal::samd21::timer","",133,[[],["spintimer",3]]],[11,"channel","atsamd_hal","",246,[[]]],[11,"channel","","",249,[[]]],[11,"channel","","",252,[[]]],[11,"channel","","",254,[[]]],[11,"channel","","",256,[[]]],[11,"channel","","",259,[[]]],[11,"channel","","",279,[[]]],[11,"channel","","",264,[[]]],[11,"channel","","",266,[[]]],[11,"channel","","",269,[[]]],[11,"channel","","",248,[[]]],[11,"channel","","",251,[[]]],[11,"channel","","",263,[[]]],[11,"channel","","",265,[[]]],[11,"read","atsamd_hal::common::adc","",233,[[],["result",6]]],[11,"delay_ms","atsamd_hal::common::delay","",1,[[]]],[11,"delay_ms","","",1,[[]]],[11,"delay_ms","","",1,[[]]],[11,"delay_ms","atsamd_hal::common::sleeping_delay","",64,[[]]],[11,"delay_us","atsamd_hal::common::delay","",1,[[]]],[11,"delay_us","","",1,[[]]],[11,"delay_us","","",1,[[]]],[11,"delay_us","atsamd_hal::common::sleeping_delay","",64,[[]]],[11,"read","atsamd_hal::common::sercom::v1","",77,[[],["result",4]]],[11,"read","","",78,[[],["result",4]]],[11,"read","","",79,[[],["result",4]]],[11,"read","","",80,[[],["result",4]]],[11,"read","","",81,[[],["result",4]]],[11,"read","","",82,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",77,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",78,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",79,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",80,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",81,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",82,[[],["result",4]]],[11,"write_read","","",77,[[],["result",4]]],[11,"write_read","","",78,[[],["result",4]]],[11,"write_read","","",79,[[],["result",4]]],[11,"write_read","","",80,[[],["result",4]]],[11,"write_read","","",81,[[],["result",4]]],[11,"write_read","","",82,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"set_low","","",5,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"set_low","","",14,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"set_low","","",23,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"is_set_low","","",5,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"is_set_low","","",14,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","","",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","","",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_low","","",23,[[],["result",4]]],[11,"read","atsamd_hal::common::sercom::v1","",89,[[],["result",6]]],[11,"read","","",90,[[],["result",6]]],[11,"read","","",91,[[],["result",6]]],[11,"read","","",92,[[],["result",6]]],[11,"read","","",93,[[],["result",6]]],[11,"read","","",94,[[],["result",6]]],[11,"write","","",89,[[],["result",6]]],[11,"flush","","",89,[[],["result",6]]],[11,"write","","",90,[[],["result",6]]],[11,"flush","","",90,[[],["result",6]]],[11,"write","","",91,[[],["result",6]]],[11,"flush","","",91,[[],["result",6]]],[11,"write","","",92,[[],["result",6]]],[11,"flush","","",92,[[],["result",6]]],[11,"write","","",93,[[],["result",6]]],[11,"flush","","",93,[[],["result",6]]],[11,"write","","",94,[[],["result",6]]],[11,"flush","","",94,[[],["result",6]]],[11,"read","","",83,[[],[["result",6],["error",4]]]],[11,"send","","",83,[[],[["result",6],["error",4]]]],[11,"read","","",84,[[],[["result",6],["error",4]]]],[11,"send","","",84,[[],[["result",6],["error",4]]]],[11,"read","","",85,[[],[["result",6],["error",4]]]],[11,"send","","",85,[[],[["result",6],["error",4]]]],[11,"read","","",86,[[],[["result",6],["error",4]]]],[11,"send","","",86,[[],[["result",6],["error",4]]]],[11,"read","","",87,[[],[["result",6],["error",4]]]],[11,"send","","",87,[[],[["result",6],["error",4]]]],[11,"read","","",88,[[],[["result",6],["error",4]]]],[11,"send","","",88,[[],[["result",6],["error",4]]]],[11,"start","atsamd_hal::common::rtc","",54,[[]]],[11,"wait","","",54,[[],[["result",6],["void",4]]]],[11,"start","atsamd_hal::samd21::timer","",132,[[]]],[11,"wait","","",132,[[],[["result",6],["void",4]]]],[11,"start","","",133,[[]]],[11,"wait","","",133,[[],[["void",4],["result",6]]]],[11,"feed","atsamd_hal::common::watchdog","Feeds an existing watchdog to ensure the processor isn\'t…",240,[[]]],[11,"disable","","",240,[[]]],[11,"start","","Enables a watchdog timer to reset the processor if…",240,[[]]],[11,"disable","atsamd_hal::common::pwm","",237,[[]]],[11,"enable","","",237,[[]]],[11,"get_period","","",237,[[]]],[11,"get_duty","","",237,[[]]],[11,"get_max_duty","","",237,[[]]],[11,"set_duty","","",237,[[]]],[11,"set_period","","",237,[[]]],[11,"disable","","",238,[[]]],[11,"enable","","",238,[[]]],[11,"get_period","","",238,[[]]],[11,"get_duty","","",238,[[]]],[11,"get_max_duty","","",238,[[]]],[11,"set_duty","","",238,[[]]],[11,"set_period","","",238,[[]]],[11,"disable","","",239,[[]]],[11,"enable","","",239,[[]]],[11,"get_period","","",239,[[]]],[11,"get_duty","","",239,[[]]],[11,"get_max_duty","","",239,[[]]],[11,"set_duty","","",239,[[]]],[11,"set_period","","",239,[[]]],[11,"disable","","",234,[[]]],[11,"enable","","",234,[[]]],[11,"get_duty","","",234,[[]]],[11,"get_max_duty","","",234,[[]]],[11,"set_duty","","",234,[[]]],[11,"disable","","",235,[[]]],[11,"enable","","",235,[[]]],[11,"get_duty","","",235,[[]]],[11,"get_max_duty","","",235,[[]]],[11,"set_duty","","",235,[[]]],[11,"disable","","",236,[[]]],[11,"enable","","",236,[[]]],[11,"get_duty","","",236,[[]]],[11,"get_max_duty","","",236,[[]]],[11,"set_duty","","",236,[[]]],[11,"enable","atsamd_hal::samd21::usb","",134,[[]]],[11,"reset","","",134,[[]]],[11,"suspend","","",134,[[]]],[11,"resume","","",134,[[]]],[11,"alloc_ep","","",134,[[["option",4],["usbdirection",4],["endpointaddress",3],["endpointtype",4]],[["usbresult",6],["endpointaddress",3]]]],[11,"set_device_address","","",134,[[]]],[11,"poll","","",134,[[],["pollresult",4]]],[11,"write","","",134,[[["endpointaddress",3]],["usbresult",6]]],[11,"read","","",134,[[["endpointaddress",3]],["usbresult",6]]],[11,"set_stalled","","",134,[[["endpointaddress",3]]]],[11,"is_stalled","","",134,[[["endpointaddress",3]]]],[11,"new","atsamd_hal::common::eic::pin","Construct pad from the appropriate pin in any mode. You…",217,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",217,[[["eic",3]]]],[11,"enable_interrupt","","",217,[[["eic",3]]]],[11,"enable_interrupt_wake","","",217,[[["eic",3]]]],[11,"disable_interrupt","","",217,[[["eic",3]]]],[11,"is_interrupt","","",217,[[]]],[11,"clear_interrupt","","",217,[[]]],[11,"sense","","",217,[[["eic",3],["sense",6]]]],[11,"filter","","",217,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",218,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",218,[[["eic",3]]]],[11,"enable_interrupt","","",218,[[["eic",3]]]],[11,"enable_interrupt_wake","","",218,[[["eic",3]]]],[11,"disable_interrupt","","",218,[[["eic",3]]]],[11,"is_interrupt","","",218,[[]]],[11,"clear_interrupt","","",218,[[]]],[11,"sense","","",218,[[["eic",3],["sense",6]]]],[11,"filter","","",218,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",219,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",219,[[["eic",3]]]],[11,"enable_interrupt","","",219,[[["eic",3]]]],[11,"enable_interrupt_wake","","",219,[[["eic",3]]]],[11,"disable_interrupt","","",219,[[["eic",3]]]],[11,"is_interrupt","","",219,[[]]],[11,"clear_interrupt","","",219,[[]]],[11,"sense","","",219,[[["eic",3],["sense",6]]]],[11,"filter","","",219,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",220,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",220,[[["eic",3]]]],[11,"enable_interrupt","","",220,[[["eic",3]]]],[11,"enable_interrupt_wake","","",220,[[["eic",3]]]],[11,"disable_interrupt","","",220,[[["eic",3]]]],[11,"is_interrupt","","",220,[[]]],[11,"clear_interrupt","","",220,[[]]],[11,"sense","","",220,[[["eic",3],["sense",6]]]],[11,"filter","","",220,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",221,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",221,[[["eic",3]]]],[11,"enable_interrupt","","",221,[[["eic",3]]]],[11,"enable_interrupt_wake","","",221,[[["eic",3]]]],[11,"disable_interrupt","","",221,[[["eic",3]]]],[11,"is_interrupt","","",221,[[]]],[11,"clear_interrupt","","",221,[[]]],[11,"sense","","",221,[[["eic",3],["sense",6]]]],[11,"filter","","",221,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",222,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",222,[[["eic",3]]]],[11,"enable_interrupt","","",222,[[["eic",3]]]],[11,"enable_interrupt_wake","","",222,[[["eic",3]]]],[11,"disable_interrupt","","",222,[[["eic",3]]]],[11,"is_interrupt","","",222,[[]]],[11,"clear_interrupt","","",222,[[]]],[11,"sense","","",222,[[["eic",3],["sense",6]]]],[11,"filter","","",222,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",223,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",223,[[["eic",3]]]],[11,"enable_interrupt","","",223,[[["eic",3]]]],[11,"enable_interrupt_wake","","",223,[[["eic",3]]]],[11,"disable_interrupt","","",223,[[["eic",3]]]],[11,"is_interrupt","","",223,[[]]],[11,"clear_interrupt","","",223,[[]]],[11,"sense","","",223,[[["eic",3],["sense",6]]]],[11,"filter","","",223,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",224,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",224,[[["eic",3]]]],[11,"enable_interrupt","","",224,[[["eic",3]]]],[11,"enable_interrupt_wake","","",224,[[["eic",3]]]],[11,"disable_interrupt","","",224,[[["eic",3]]]],[11,"is_interrupt","","",224,[[]]],[11,"clear_interrupt","","",224,[[]]],[11,"sense","","",224,[[["eic",3],["sense",6]]]],[11,"filter","","",224,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",225,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",225,[[["eic",3]]]],[11,"enable_interrupt","","",225,[[["eic",3]]]],[11,"enable_interrupt_wake","","",225,[[["eic",3]]]],[11,"disable_interrupt","","",225,[[["eic",3]]]],[11,"is_interrupt","","",225,[[]]],[11,"clear_interrupt","","",225,[[]]],[11,"sense","","",225,[[["eic",3],["sense",6]]]],[11,"filter","","",225,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",226,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",226,[[["eic",3]]]],[11,"enable_interrupt","","",226,[[["eic",3]]]],[11,"enable_interrupt_wake","","",226,[[["eic",3]]]],[11,"disable_interrupt","","",226,[[["eic",3]]]],[11,"is_interrupt","","",226,[[]]],[11,"clear_interrupt","","",226,[[]]],[11,"sense","","",226,[[["eic",3],["sense",6]]]],[11,"filter","","",226,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",227,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",227,[[["eic",3]]]],[11,"enable_interrupt","","",227,[[["eic",3]]]],[11,"enable_interrupt_wake","","",227,[[["eic",3]]]],[11,"disable_interrupt","","",227,[[["eic",3]]]],[11,"is_interrupt","","",227,[[]]],[11,"clear_interrupt","","",227,[[]]],[11,"sense","","",227,[[["eic",3],["sense",6]]]],[11,"filter","","",227,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",228,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",228,[[["eic",3]]]],[11,"enable_interrupt","","",228,[[["eic",3]]]],[11,"enable_interrupt_wake","","",228,[[["eic",3]]]],[11,"disable_interrupt","","",228,[[["eic",3]]]],[11,"is_interrupt","","",228,[[]]],[11,"clear_interrupt","","",228,[[]]],[11,"sense","","",228,[[["eic",3],["sense",6]]]],[11,"filter","","",228,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",229,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",229,[[["eic",3]]]],[11,"enable_interrupt","","",229,[[["eic",3]]]],[11,"enable_interrupt_wake","","",229,[[["eic",3]]]],[11,"disable_interrupt","","",229,[[["eic",3]]]],[11,"is_interrupt","","",229,[[]]],[11,"clear_interrupt","","",229,[[]]],[11,"sense","","",229,[[["eic",3],["sense",6]]]],[11,"filter","","",229,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",230,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",230,[[["eic",3]]]],[11,"enable_interrupt","","",230,[[["eic",3]]]],[11,"enable_interrupt_wake","","",230,[[["eic",3]]]],[11,"disable_interrupt","","",230,[[["eic",3]]]],[11,"is_interrupt","","",230,[[]]],[11,"clear_interrupt","","",230,[[]]],[11,"sense","","",230,[[["eic",3],["sense",6]]]],[11,"filter","","",230,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",231,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",231,[[["eic",3]]]],[11,"enable_interrupt","","",231,[[["eic",3]]]],[11,"enable_interrupt_wake","","",231,[[["eic",3]]]],[11,"disable_interrupt","","",231,[[["eic",3]]]],[11,"is_interrupt","","",231,[[]]],[11,"clear_interrupt","","",231,[[]]],[11,"sense","","",231,[[["eic",3],["sense",6]]]],[11,"filter","","",231,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",232,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",232,[[["eic",3]]]],[11,"enable_interrupt","","",232,[[["eic",3]]]],[11,"enable_interrupt_wake","","",232,[[["eic",3]]]],[11,"disable_interrupt","","",232,[[["eic",3]]]],[11,"is_interrupt","","",232,[[]]],[11,"clear_interrupt","","",232,[[]]],[11,"sense","","",232,[[["eic",3],["sense",6]]]],[11,"filter","","",232,[[["eic",3]]]],[11,"init","atsamd_hal::common::eic","",216,[[["pm",3],["eic",3],["eicclock",3]]]],[11,"adc","atsamd_hal::common::adc","",233,[[["genericclockcontroller",3],["pm",3],["adc",3]]]],[11,"samples","","",233,[[["samplenum_a",4]]]],[11,"gain","","",233,[[["gain_a",4]]]],[11,"reference","","",233,[[["refsel_a",4]]]],[11,"new","atsamd_hal::common::pwm","",234,[[["tc3",3],["tcc2tc3clock",3],["hertz",3],["into",8],["pm",3]]]],[11,"set_period","","",234,[[]]],[11,"get_period","","",234,[[],["hertz",3]]],[11,"new","","",235,[[["into",8],["hertz",3],["pm",3],["tc4tc5clock",3],["tc4",3]]]],[11,"set_period","","",235,[[]]],[11,"get_period","","",235,[[],["hertz",3]]],[11,"new","","",236,[[["into",8],["hertz",3],["pm",3],["tc4tc5clock",3],["tc5",3]]]],[11,"set_period","","",236,[[]]],[11,"get_period","","",236,[[],["hertz",3]]],[11,"new","","",237,[[["tcc0",3],["tcc0tcc1clock",3],["hertz",3],["into",8],["pm",3]]]],[11,"new","","",238,[[["tcc1",3],["tcc0tcc1clock",3],["hertz",3],["into",8],["pm",3]]]],[11,"new","","",239,[[["tcc2tc3clock",3],["hertz",3],["into",8],["tcc2",3],["pm",3]]]],[11,"new","atsamd_hal::common::watchdog","",240,[[["wdt",3]]]]],"p":[[4,"ResetCause"],[3,"Delay"],[3,"Parts"],[8,"GpioExt"],[8,"IntoFunction"],[3,"Pin"],[3,"Pins"],[8,"DisabledConfig"],[8,"InputConfig"],[8,"OutputConfig"],[8,"AlternateConfig"],[8,"PinMode"],[8,"PinId"],[8,"AnyPin"],[3,"Pin"],[3,"DynPinId"],[4,"Error"],[4,"DynDisabled"],[4,"DynInput"],[4,"DynOutput"],[4,"DynAlternate"],[4,"DynPinMode"],[4,"DynGroup"],[3,"DynPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_InputPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_OutputPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_ToggleableOutputPin"],[8,"_embedded_hal_adc_OneShot"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_rng_Read"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_digital_InputPin"],[8,"_embedded_hal_digital_OutputPin"],[8,"_embedded_hal_digital_ToggleableOutputPin"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_serial_Write"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_watchdog_Watchdog"],[8,"_embedded_hal_watchdog_WatchdogDisable"],[8,"_embedded_hal_watchdog_WatchdogEnable"],[8,"_embedded_hal_Capture"],[8,"_embedded_hal_Pwm"],[8,"_embedded_hal_PwmPin"],[8,"_embedded_hal_Qei"],[8,"EicPin"],[3,"Datetime"],[3,"TimerParams"],[3,"Rtc"],[4,"I2CError"],[4,"Error"],[8,"PadPin"],[8,"DipoDopo"],[8,"RxpoTxpo"],[8,"Sercom"],[8,"Map"],[8,"AnyPad"],[3,"Pad"],[3,"SleepingDelay"],[8,"CommonSpi"],[3,"Bps"],[3,"Hertz"],[3,"KiloHertz"],[3,"MegaHertz"],[3,"Seconds"],[3,"Milliseconds"],[3,"Microseconds"],[3,"Nanoseconds"],[8,"U32Ext"],[3,"TimerParams"],[8,"InterruptDrivenTimer"],[3,"I2CMaster0"],[3,"I2CMaster1"],[3,"I2CMaster2"],[3,"I2CMaster3"],[3,"I2CMaster4"],[3,"I2CMaster5"],[3,"SPIMaster0"],[3,"SPIMaster1"],[3,"SPIMaster2"],[3,"SPIMaster3"],[3,"SPIMaster4"],[3,"SPIMaster5"],[3,"UART0"],[3,"UART1"],[3,"UART2"],[3,"UART3"],[3,"UART4"],[3,"UART5"],[8,"ExternalInterrupt"],[4,"Channel"],[4,"WatchdogTimeout"],[3,"GenericClockController"],[3,"Tcc0Tcc1Clock"],[3,"Tcc2Tc3Clock"],[3,"Tc4Tc5Clock"],[3,"Tc6Tc7Clock"],[3,"Sercom0CoreClock"],[3,"Sercom1CoreClock"],[3,"Sercom2CoreClock"],[3,"Sercom3CoreClock"],[3,"Sercom4CoreClock"],[3,"Sercom5CoreClock"],[3,"UsbClock"],[3,"RtcClock"],[3,"AdcClock"],[3,"WdtClock"],[3,"EicClock"],[3,"Evsys0Clock"],[3,"Evsys1Clock"],[3,"Evsys2Clock"],[3,"Evsys3Clock"],[3,"Evsys4Clock"],[3,"Evsys5Clock"],[3,"Evsys6Clock"],[3,"Evsys7Clock"],[3,"Evsys8Clock"],[3,"Evsys9Clock"],[3,"Evsys10Clock"],[3,"Evsys11Clock"],[3,"AcAnaClock"],[3,"AcDigClock"],[3,"DacClock"],[3,"I2S0Clock"],[3,"I2S1Clock"],[8,"Count16"],[3,"TimerCounter"],[3,"SpinTimer"],[3,"UsbBus"],[3,"NoneT"],[3,"Port"],[3,"Disabled"],[3,"Input"],[3,"Output"],[3,"Alternate"],[4,"Floating"],[4,"PullDown"],[4,"PullUp"],[4,"PushPull"],[4,"Readable"],[4,"A"],[4,"B"],[4,"C"],[4,"D"],[4,"E"],[4,"F"],[4,"G"],[4,"H"],[4,"GroupA"],[4,"GroupB"],[4,"PA00"],[4,"PA01"],[4,"PA02"],[4,"PA03"],[4,"PA04"],[4,"PA05"],[4,"PA06"],[4,"PA07"],[4,"PA08"],[4,"PA09"],[4,"PA10"],[4,"PA11"],[4,"PA12"],[4,"PA13"],[4,"PA14"],[4,"PA15"],[4,"PA16"],[4,"PA17"],[4,"PA18"],[4,"PA19"],[4,"PA20"],[4,"PA21"],[4,"PA22"],[4,"PA23"],[4,"PA24"],[4,"PA25"],[4,"PA27"],[4,"PA28"],[4,"PA30"],[4,"PA31"],[4,"PB02"],[4,"PB03"],[4,"PB08"],[4,"PB09"],[4,"PB10"],[4,"PB11"],[4,"PB22"],[4,"PB23"],[3,"SPIMaster0Padout"],[3,"SPIMaster1Padout"],[3,"SPIMaster2Padout"],[3,"SPIMaster3Padout"],[3,"SPIMaster4Padout"],[3,"SPIMaster5Padout"],[3,"UART0Padout"],[3,"UART1Padout"],[3,"UART2Padout"],[3,"UART3Padout"],[3,"UART4Padout"],[3,"UART5Padout"],[4,"Sercom0"],[4,"Sercom1"],[4,"Sercom2"],[4,"Sercom3"],[4,"Sercom4"],[4,"Sercom5"],[4,"Pad0"],[4,"Pad1"],[4,"Pad2"],[4,"Pad3"],[3,"EIC"],[3,"ExtInt0"],[3,"ExtInt1"],[3,"ExtInt2"],[3,"ExtInt3"],[3,"ExtInt4"],[3,"ExtInt5"],[3,"ExtInt6"],[3,"ExtInt7"],[3,"ExtInt8"],[3,"ExtInt9"],[3,"ExtInt10"],[3,"ExtInt11"],[3,"ExtInt12"],[3,"ExtInt13"],[3,"ExtInt14"],[3,"ExtInt15"],[3,"Adc"],[3,"Pwm3"],[3,"Pwm4"],[3,"Pwm5"],[3,"Pwm0"],[3,"Pwm1"],[3,"Pwm2"],[3,"Watchdog"],[3,"GClock"],[6,"Pa0"],[6,"Pa16"],[6,"Pa1"],[6,"Pa17"],[6,"Pa2"],[6,"Pa18"],[6,"Pb2"],[6,"Pa3"],[6,"Pa19"],[6,"Pb3"],[6,"Pa4"],[6,"Pa20"],[6,"Pa5"],[6,"Pa21"],[6,"Pa6"],[6,"Pa22"],[6,"Pb22"],[6,"Pa7"],[6,"Pa23"],[6,"Pb23"],[6,"Pa28"],[6,"Pb8"],[6,"Pa9"],[6,"Pb9"],[6,"Pa10"],[6,"Pa30"],[6,"Pb10"],[6,"Pa11"],[6,"Pa31"],[6,"Pb11"],[6,"Pa12"],[6,"Pa24"],[6,"Pa13"],[6,"Pa25"],[6,"Pa14"],[6,"Pa15"],[6,"Pa27"],[6,"Pa8"]]},\
"bare_metal":{"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[3,"CriticalSection","","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[]]],[11,"new","","Creates a new peripheral",1,[[]]],[11,"borrow","","Borrows the peripheral for the duration of a critical…",1,[[["criticalsection",3]]]],[11,"get","","Returns a pointer to the register block",1,[[]]],[11,"new","","Creates a critical section token",2,[[]]],[11,"new","","Creates a new mutex",3,[[]]],[11,"borrow","","Borrows the data for the duration of the critical section",3,[[["criticalsection",3]]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[8,"Nr"],[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like struct.","i":[[8,"BitRange","bitfield","A trait to get or set ranges of bits.",null,null],[10,"bit_range","","Get a range of bits.",0,[[]]],[10,"set_bit_range","","Set a range of bits.",0,[[]]],[8,"Bit","","A trait to get or set a single bit.",null,null],[10,"bit","","Get a single bit.",1,[[]]],[10,"set_bit","","Set a single bit.",1,[[]]],[14,"bitfield_fields","","Declares the fields of struct.",null,null],[14,"bitfield_debug","","Generates a `fmt::Debug` implementation.",null,null],[14,"bitfield_bitrange","","Implements `BitRange` for a tuple struct (or \\\"newtype\\\").",null,null],[14,"bitfield","","Combines `bitfield_bitrange` and `bitfield_fields`.",null,null]],"p":[[8,"BitRange"],[8,"Bit"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","i":[[0,"asm","cortex_m","Miscellaneous assembly instructions",null,null],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick this…",null,[[]]],[5,"delay","","Blocks the program for at least `n` instruction cycles",null,[[]]],[5,"nop","","A no-operation. Useful to prevent delay loops from being…",null,[[]]],[5,"udf","","Generate an Undefined Instruction exception.",null,[[]]],[5,"wfe","","Wait For Event",null,[[]]],[5,"wfi","","Wait For Interrupt",null,[[]]],[5,"sev","","Send Event",null,[[]]],[5,"isb","","Instruction Synchronization Barrier",null,[[]]],[5,"dsb","","Data Synchronization Barrier",null,[[]]],[5,"dmb","","Data Memory Barrier",null,[[]]],[0,"interrupt","cortex_m","Interrupts",null,null],[3,"CriticalSection","cortex_m::interrupt","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure `f` in an interrupt-free context.",null,[[]]],[0,"peripheral","cortex_m","Core peripherals",null,null],[3,"Peripherals","cortex_m::peripheral","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",1,null],[12,"CPUID","","CPUID",1,null],[12,"DCB","","Debug Control Block",1,null],[12,"DWT","","Data Watchpoint and Trace unit",1,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",1,null],[12,"FPU","","Floating Point Unit (only present on…",1,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",1,null],[12,"MPU","","Memory Protection Unit",1,null],[12,"NVIC","","Nested Vector Interrupt Controller",1,null],[12,"SCB","","System Control Block",1,null],[12,"SYST","","SysTick: System Timer",1,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",1,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"FPU","","Floating Point Unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[0,"cpuid","","CPUID",null,null],[3,"RegisterBlock","cortex_m::peripheral::cpuid","Register block",null,null],[12,"base","","CPUID base",2,null],[0,"dcb","cortex_m::peripheral","Debug Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::dcb","Register block",null,null],[12,"dhcsr","","Debug Halting Control and Status",3,null],[12,"dcrsr","","Debug Core Register Selector",3,null],[12,"dcrdr","","Debug Core Register Data",3,null],[12,"demcr","","Debug Exception and Monitor Control",3,null],[11,"enable_trace","cortex_m::peripheral","Enables TRACE. This is for example required by the…",4,[[]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",4,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",4,[[]]],[0,"dwt","","Data Watchpoint and Trace unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::dwt","Register block",null,null],[12,"ctrl","","Control",5,null],[12,"pcsr","","Program Counter Sample",5,null],[12,"c","","Comparators",5,null],[3,"Comparator","","Comparator",null,null],[12,"comp","","Comparator",6,null],[12,"mask","","Comparator Mask",6,null],[12,"function","","Comparator Function",6,null],[0,"mpu","cortex_m::peripheral","Memory Protection Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::mpu","Register block",null,null],[12,"_type","","Type",7,null],[12,"ctrl","","Control",7,null],[12,"rnr","","Region Number",7,null],[12,"rbar","","Region Base Address",7,null],[12,"rasr","","Region Attribute and Size",7,null],[12,"rbar_a1","","Alias 1 of RBAR",7,null],[12,"rsar_a1","","Alias 1 of RSAR",7,null],[12,"rbar_a2","","Alias 2 of RBAR",7,null],[12,"rsar_a2","","Alias 2 of RSAR",7,null],[12,"rbar_a3","","Alias 3 of RBAR",7,null],[12,"rsar_a3","","Alias 3 of RSAR",7,null],[0,"nvic","cortex_m::peripheral","Nested Vector Interrupt Controller",null,null],[3,"RegisterBlock","cortex_m::peripheral::nvic","Register block",null,null],[12,"iser","","Interrupt Set-Enable",8,null],[12,"icer","","Interrupt Clear-Enable",8,null],[12,"ispr","","Interrupt Set-Pending",8,null],[12,"icpr","","Interrupt Clear-Pending",8,null],[12,"ipr","","Interrupt Priority",8,null],[11,"clear_pending","cortex_m::peripheral","Clears `interrupt`\'s pending state",9,[[]]],[11,"mask","","Disables `interrupt`",9,[[]]],[11,"unmask","","Enables `interrupt`",9,[[]]],[11,"disable","","Disables `interrupt`",9,[[]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",9,[[]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",9,[[]]],[11,"is_enabled","","Checks if `interrupt` is enabled",9,[[]]],[11,"is_pending","","Checks if `interrupt` is pending",9,[[]]],[11,"pend","","Forces `interrupt` into pending state",9,[[]]],[11,"set_pending","","Forces `interrupt` into pending state",9,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of `interrupt` to `prio`",9,[[]]],[11,"unpend","","Clears `interrupt`\'s pending state",9,[[]]],[0,"scb","","System Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::scb","Register block",null,null],[12,"icsr","","Interrupt Control and State",10,null],[12,"vtor","","Vector Table Offset (not present on Cortex-M0 variants)",10,null],[12,"aircr","","Application Interrupt and Reset Control",10,null],[12,"scr","","System Control",10,null],[12,"ccr","","Configuration and Control",10,null],[12,"shpr","","System Handler Priority (word accessible only on Cortex-M0…",10,null],[12,"shcsr","","System Handler Control and State",10,null],[4,"Exception","","Processor core exceptions (internal interrupts)",null,null],[13,"NonMaskableInt","","Non maskable interrupt",11,null],[13,"HardFault","","Hard fault interrupt",11,null],[13,"SVCall","","SV call interrupt",11,null],[13,"PendSV","","Pend SV interrupt",11,null],[13,"SysTick","","System Tick interrupt",11,null],[4,"VectActive","","Active exception number",null,null],[13,"ThreadMode","","Thread mode",12,null],[13,"Exception","","Processor core exception (internal interrupts)",12,null],[13,"Interrupt","","Device specific exception (external interrupts)",12,null],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open…",13,null],[4,"SystemHandler","cortex_m::peripheral::scb","System handlers, exceptions with configurable priority",null,null],[13,"SVCall","","SV call interrupt",14,null],[13,"PendSV","","Pend SV interrupt",14,null],[13,"SysTick","","System Tick interrupt",14,null],[11,"vect_active","cortex_m::peripheral","Returns the active exception number",15,[[],["vectactive",4]]],[11,"irqn","cortex_m::peripheral::scb","Returns the IRQ number of this `Exception`",11,[[]]],[11,"from","","Converts a `byte` into `VectActive`",12,[[],["option",4]]],[11,"set_sleepdeep","cortex_m::peripheral","Set the SLEEPDEEP bit in the SCR register",15,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",15,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",15,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",15,[[]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",15,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",15,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",15,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",15,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",15,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will pend…",15,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",15,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",15,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",15,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",15,[[["systemhandler",4]]]],[0,"syst","","SysTick: System Timer",null,null],[3,"RegisterBlock","cortex_m::peripheral::syst","Register block",null,null],[12,"csr","","Control and Status",16,null],[12,"rvr","","Reload Value",16,null],[12,"cvr","","Current Value",16,null],[12,"calib","","Calibration Value",16,null],[4,"SystClkSource","","SysTick clock source",null,null],[13,"Core","","Core-provided clock",17,null],[13,"External","","External reference clock",17,null],[11,"clear_current","cortex_m::peripheral","Clears current value to 0",18,[[]]],[11,"disable_counter","","Disables counter",18,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",18,[[]]],[11,"enable_counter","","Enables counter",18,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",18,[[]]],[11,"get_clock_source","","Gets clock source",18,[[],["systclksource",4]]],[11,"get_current","","Gets current value",18,[[]]],[11,"get_reload","","Gets reload value",18,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",18,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",18,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",18,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",18,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",18,[[]]],[11,"is_precise","","Checks if the calibration value is precise",18,[[]]],[11,"set_clock_source","","Sets clock source",18,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",18,[[]]],[11,"take","","Returns all the core peripherals once",1,[[],["option",4]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[]]],[11,"ptr","","Returns a pointer to the register block",19,[[]]],[11,"ptr","","Returns a pointer to the register block",4,[[]]],[11,"ptr","","Returns a pointer to the register block",20,[[]]],[11,"ptr","","Returns a pointer to the register block",21,[[]]],[11,"ptr","","Returns a pointer to the register block",9,[[]]],[11,"ptr","","Returns a pointer to the register block",15,[[]]],[11,"ptr","","Returns a pointer to the register block",18,[[]]],[0,"register","cortex_m","Processor core registers",null,null],[0,"control","cortex_m::register","Control register",null,null],[3,"Control","cortex_m::register::control","Control register",null,null],[4,"Npriv","","Thread mode privilege level",null,null],[13,"Privileged","","Privileged",22,null],[13,"Unprivileged","","Unprivileged",22,null],[4,"Spsel","","Currently active stack pointer",null,null],[13,"Msp","","MSP is the current stack pointer",23,null],[13,"Psp","","PSP is the current stack pointer",23,null],[4,"Fpca","","Whether context floating-point is currently active",null,null],[13,"Active","","Floating-point context active.",24,null],[13,"NotActive","","No floating-point context active",24,null],[5,"read","","Reads the CPU register",null,[[],["control",3]]],[5,"write","","Writes to the CPU register.",null,[[["control",3]]]],[11,"from_bits","","Creates a `Control` value from raw bits.",25,[[]]],[11,"bits","","Returns the contents of the register as raw bits",25,[[]]],[11,"npriv","","Thread mode privilege level",25,[[],["npriv",4]]],[11,"set_npriv","","Sets the thread mode privilege level value (nPRIV).",25,[[["npriv",4]]]],[11,"spsel","","Currently active stack pointer",25,[[],["spsel",4]]],[11,"set_spsel","","Sets the SPSEL value.",25,[[["spsel",4]]]],[11,"fpca","","Whether context floating-point is currently active",25,[[],["fpca",4]]],[11,"set_fpca","","Sets the FPCA value.",25,[[["fpca",4]]]],[11,"is_privileged","","Is in privileged thread mode?",22,[[]]],[11,"is_unprivileged","","Is in unprivileged thread mode?",22,[[]]],[11,"is_msp","","Is MSP the current stack pointer?",23,[[]]],[11,"is_psp","","Is PSP the current stack pointer?",23,[[]]],[11,"is_active","","Is a floating-point context active?",24,[[]]],[11,"is_not_active","","Is a floating-point context not active?",24,[[]]],[0,"msp","cortex_m::register","Main Stack Pointer",null,null],[5,"read","cortex_m::register::msp","Reads the CPU register",null,[[]]],[5,"write","","Writes `bits` to the CPU register",null,[[]]],[0,"primask","cortex_m::register","Priority mask register",null,null],[4,"Primask","cortex_m::register::primask","All exceptions with configurable priority are ...",null,null],[13,"Active","","Active",26,null],[13,"Inactive","","Inactive",26,null],[5,"read","","Reads the CPU register",null,[[],["primask",4]]],[11,"is_active","","All exceptions with configurable priority are active",26,[[]]],[11,"is_inactive","","All exceptions with configurable priority are inactive",26,[[]]],[0,"psp","cortex_m::register","Process Stack Pointer",null,null],[5,"read","cortex_m::register::psp","Reads the CPU register",null,[[]]],[5,"write","","Writes `bits` to the CPU register",null,[[]]],[14,"iprint","cortex_m","Macro for sending a formatted string through an ITM channel",null,null],[14,"iprintln","","Macro for sending a formatted string through an ITM…",null,null],[14,"singleton","","Macro to create a mutable reference to a statically…",null,null],[11,"from","cortex_m::interrupt","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","cortex_m::peripheral","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::cpuid","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dcb","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dwt","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::mpu","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::nvic","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::scb","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::syst","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","cortex_m::register::control","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","cortex_m::register::primask","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"deref","cortex_m::peripheral","",19,[[]]],[11,"deref","","",4,[[]]],[11,"deref","","",20,[[]]],[11,"deref","","",21,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",15,[[]]],[11,"deref","","",18,[[]]],[11,"fmt","cortex_m::peripheral::scb","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::syst","",17,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::control","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::primask","",26,[[["formatter",3]],["result",6]]],[11,"eq","cortex_m::peripheral::scb","",11,[[["exception",4]]]],[11,"eq","","",12,[[["vectactive",4]]]],[11,"ne","","",12,[[["vectactive",4]]]],[11,"eq","","",14,[[["systemhandler",4]]]],[11,"eq","cortex_m::peripheral::syst","",17,[[["systclksource",4]]]],[11,"eq","cortex_m::register::control","",22,[[["npriv",4]]]],[11,"eq","","",23,[[["spsel",4]]]],[11,"eq","","",24,[[["fpca",4]]]],[11,"eq","cortex_m::register::primask","",26,[[["primask",4]]]],[11,"clone","cortex_m::peripheral::scb","",11,[[],["exception",4]]],[11,"clone","","",12,[[],["vectactive",4]]],[11,"clone","","",14,[[],["systemhandler",4]]],[11,"clone","cortex_m::peripheral::syst","",17,[[],["systclksource",4]]],[11,"clone","cortex_m::register::control","",25,[[],["control",3]]],[11,"clone","","",22,[[],["npriv",4]]],[11,"clone","","",23,[[],["spsel",4]]],[11,"clone","","",24,[[],["fpca",4]]],[11,"clone","cortex_m::register::primask","",26,[[],["primask",4]]],[11,"new","cortex_m::interrupt","Creates a critical section token",27,[[],["criticalsection",3]]],[11,"new","","Creates a new mutex",28,[[],["mutex",3]]],[11,"borrow","","Borrows the data for the duration of the critical section",28,[[["criticalsection",3]]]]],"p":[[8,"Nr"],[3,"Peripherals"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"DCB"],[3,"RegisterBlock"],[3,"Comparator"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"NVIC"],[3,"RegisterBlock"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"SCB"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"SYST"],[3,"CPUID"],[3,"DWT"],[3,"MPU"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[3,"Control"],[4,"Primask"],[3,"CriticalSection"],[3,"Mutex"],[3,"CBP"],[3,"FPB"],[3,"FPU"],[3,"ITM"],[3,"TPIU"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","i":[[4,"Direction","embedded_hal","Count direction",null,null],[13,"Downcounting","","3, 2, 1",0,null],[13,"Upcounting","","1, 2, 3",0,null],[0,"adc","","Analog-digital conversion traits",null,null],[8,"Channel","embedded_hal::adc","A marker trait to identify MCU pins that can be used as…",null,null],[16,"ID","","Channel ID type",1,null],[10,"channel","","Get the specific ID that identifies this channel, for…",1,[[]]],[8,"OneShot","","ADCs that sample on single channels per request, and do so…",null,null],[16,"Error","","Error type returned by ADC methods",2,null],[10,"read","","Request that the ADC begin a conversion on the specified pin",2,[[],["result",6]]],[0,"blocking","embedded_hal","Blocking API",null,null],[0,"delay","embedded_hal::blocking","Delays",null,null],[8,"DelayMs","embedded_hal::blocking::delay","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",3,[[]]],[8,"DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",4,[[]]],[0,"i2c","embedded_hal::blocking","Blocking I2C API",null,null],[8,"Read","embedded_hal::blocking::i2c","Blocking read",null,null],[16,"Error","","Error type",5,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",5,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",6,null],[10,"write","","Sends bytes to slave with address `addr`",6,[[],["result",4]]],[8,"WriteIter","","Blocking write (iterator version)",null,null],[16,"Error","","Error type",7,null],[10,"write","","Sends bytes to slave with address `addr`",7,[[],["result",4]]],[8,"WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",8,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",8,[[],["result",4]]],[8,"WriteIterRead","","Blocking write (iterator version) + read",null,null],[16,"Error","","Error type",9,null],[10,"write_iter_read","","Sends bytes to slave with address `addr` and then reads…",9,[[],["result",4]]],[0,"rng","embedded_hal::blocking","Blocking hardware random number generator",null,null],[8,"Read","embedded_hal::blocking::rng","Blocking read",null,null],[16,"Error","","Error type",10,null],[10,"read","","Reads enough bytes from hardware random number generator…",10,[[],["result",4]]],[0,"serial","embedded_hal::blocking","Blocking serial API",null,null],[0,"write","embedded_hal::blocking::serial","Blocking serial write",null,null],[8,"Default","embedded_hal::blocking::serial::write","Marker trait to opt into default blocking write…",null,null],[8,"Write","embedded_hal::blocking::serial","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",11,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",11,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered words",11,[[],["result",4]]],[0,"spi","embedded_hal::blocking","Blocking SPI API",null,null],[0,"transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[8,"Default","embedded_hal::blocking::spi::transfer","Default implementation of `blocking::spi::Transfer<W>` for…",null,null],[0,"write","embedded_hal::blocking::spi","Blocking write",null,null],[8,"Default","embedded_hal::blocking::spi::write","Default implementation of `blocking::spi::Write<W>` for…",null,null],[0,"write_iter","embedded_hal::blocking::spi","Blocking write (iterator version)",null,null],[8,"Default","embedded_hal::blocking::spi::write_iter","Default implementation of `blocking::spi::WriteIter<W>`…",null,null],[8,"Transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[16,"Error","","Error type",12,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",12,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",13,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",13,[[],["result",4]]],[8,"WriteIter","","Blocking write (iterator version)",null,null],[16,"Error","","Error type",14,null],[10,"write_iter","","Sends `words` to the slave, ignoring all the incoming words",14,[[],["result",4]]],[0,"digital","embedded_hal","Digital I/O",null,null],[0,"v1","embedded_hal::digital","Digital I/O",null,null],[0,"toggleable","embedded_hal::digital::v1","If you can read and write the output state, a pin is…",null,null],[8,"Default","embedded_hal::digital::v1::toggleable","Software-driven `toggle()` implementation.",null,null],[8,"OutputPin","embedded_hal::digital::v1","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",15,[[]]],[10,"set_high","","Drives the pin high",15,[[]]],[8,"StatefulOutputPin","","Push-pull output pin that can read its output state",null,null],[10,"is_set_high","","Is the pin in drive high mode?",16,[[]]],[10,"is_set_low","","Is the pin in drive low mode?",16,[[]]],[8,"ToggleableOutputPin","","Output pin that can be toggled",null,null],[10,"toggle","","Toggle pin output.",17,[[]]],[8,"InputPin","","Single digital input pin",null,null],[10,"is_high","","Is the input pin high?",18,[[]]],[10,"is_low","","Is the input pin low?",18,[[]]],[0,"v2","embedded_hal::digital","Digital I/O",null,null],[0,"toggleable","embedded_hal::digital::v2","If you can read and write the output state, a pin is…",null,null],[8,"Default","embedded_hal::digital::v2::toggleable","Software-driven `toggle()` implementation.",null,null],[8,"OutputPin","embedded_hal::digital::v2","Single digital push-pull output pin",null,null],[16,"Error","","Error type",19,null],[10,"set_low","","Drives the pin low",19,[[],["result",4]]],[10,"set_high","","Drives the pin high",19,[[],["result",4]]],[8,"StatefulOutputPin","","Push-pull output pin that can read its output state",null,null],[10,"is_set_high","","Is the pin in drive high mode?",20,[[],["result",4]]],[10,"is_set_low","","Is the pin in drive low mode?",20,[[],["result",4]]],[8,"ToggleableOutputPin","","Output pin that can be toggled",null,null],[16,"Error","","Error type",21,null],[10,"toggle","","Toggle pin output.",21,[[],["result",4]]],[8,"InputPin","","Single digital input pin",null,null],[16,"Error","","Error type",22,null],[10,"is_high","","Is the input pin high?",22,[[],["result",4]]],[10,"is_low","","Is the input pin low?",22,[[],["result",4]]],[0,"v1_compat","embedded_hal::digital","v1 compatibility wrappers",null,null],[3,"OldOutputPin","embedded_hal::digital::v1_compat","Wrapper to allow fallible `v2::OutputPin` traits to be…",null,null],[3,"OldInputPin","","Wrapper to allow fallible `v2::InputPin` traits to be…",null,null],[11,"new","","Create a new OldOutputPin wrapper around a `v2::OutputPin`",23,[[]]],[11,"new","","Create an `OldInputPin` wrapper around a `v2::InputPin`.",24,[[]]],[0,"v2_compat","embedded_hal::digital","v2 compatibility shims",null,null],[0,"fmt","embedded_hal","Implementation of `core::fmt::Write` for the HAL\'s…",null,null],[0,"prelude","","The prelude is a collection of all the traits in this crate",null,null],[0,"serial","","Serial interface",null,null],[8,"Read","embedded_hal::serial","Read half of a serial interface",null,null],[16,"Error","","Read error",25,null],[10,"read","","Reads a single word from the serial interface",25,[[],["result",6]]],[8,"Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",26,null],[10,"write","","Writes a single word to the serial interface",26,[[],["result",6]]],[10,"flush","","Ensures that none of the previously written words are…",26,[[],["result",6]]],[0,"spi","embedded_hal","Serial Peripheral Interface",null,null],[3,"Mode","embedded_hal::spi","SPI mode",null,null],[12,"polarity","","Clock polarity",27,null],[12,"phase","","Clock phase",27,null],[4,"Polarity","","Clock polarity",null,null],[13,"IdleLow","","Clock signal low when idle",28,null],[13,"IdleHigh","","Clock signal high when idle",28,null],[4,"Phase","","Clock phase",null,null],[13,"CaptureOnFirstTransition","","Data in \\\"captured\\\" on the first clock transition",29,null],[13,"CaptureOnSecondTransition","","Data in \\\"captured\\\" on the second clock transition",29,null],[17,"MODE_0","","Helper for CPOL = 0, CPHA = 0",null,null],[17,"MODE_1","","Helper for CPOL = 0, CPHA = 1",null,null],[17,"MODE_2","","Helper for CPOL = 1, CPHA = 0",null,null],[17,"MODE_3","","Helper for CPOL = 1, CPHA = 1",null,null],[8,"FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",30,null],[10,"read","","Reads the word stored in the shift register",30,[[],["result",6]]],[10,"send","","Sends a word to the slave",30,[[],["result",6]]],[0,"timer","embedded_hal","Timers",null,null],[8,"CountDown","embedded_hal::timer","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",31,null],[10,"start","","Starts a new count down",31,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",31,[[],[["result",6],["void",4]]]],[8,"Periodic","","Marker trait that indicates that a timer is periodic",null,null],[8,"Cancel","","Trait for cancelable countdowns.",null,null],[16,"Error","","Error returned when a countdown can\'t be canceled.",32,null],[10,"cancel","","Tries to cancel this countdown.",32,[[],["result",4]]],[0,"watchdog","embedded_hal","Traits for interactions with a processors watchdog timer.",null,null],[8,"Watchdog","embedded_hal::watchdog","Feeds an existing watchdog to ensure the processor isn\'t…",null,null],[10,"feed","","Triggers the watchdog. This must be done once the watchdog…",33,[[]]],[8,"WatchdogEnable","","Enables A watchdog timer to reset the processor if…",null,null],[16,"Time","","Unit of time used by the watchdog",34,null],[10,"start","","Starts the watchdog with a given period, typically once…",34,[[]]],[8,"WatchdogDisable","","Disables a running watchdog timer so the processor won\'t…",null,null],[10,"disable","","Disables the watchdog",35,[[]]],[8,"Capture","embedded_hal","Input capture",null,null],[16,"Error","","Enumeration of `Capture` errors",36,null],[16,"Channel","","Enumeration of channels that can be used with this…",36,null],[16,"Time","","A time unit that can be converted into a human time unit…",36,null],[16,"Capture","","The type of the value returned by `capture`",36,null],[10,"capture","","\\\"Waits\\\" for a transition in the capture `channel` and…",36,[[],["result",6]]],[10,"disable","","Disables a capture `channel`",36,[[]]],[10,"enable","","Enables a capture `channel`",36,[[]]],[10,"get_resolution","","Returns the current resolution",36,[[]]],[10,"set_resolution","","Sets the resolution of the capture timer",36,[[]]],[8,"Pwm","","Pulse Width Modulation",null,null],[16,"Channel","","Enumeration of channels that can be used with this `Pwm`…",37,null],[16,"Time","","A time unit that can be converted into a human time unit…",37,null],[16,"Duty","","Type for the `duty` methods",37,null],[10,"disable","","Disables a PWM `channel`",37,[[]]],[10,"enable","","Enables a PWM `channel`",37,[[]]],[10,"get_period","","Returns the current PWM period",37,[[]]],[10,"get_duty","","Returns the current duty cycle",37,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",37,[[]]],[10,"set_duty","","Sets a new duty cycle",37,[[]]],[10,"set_period","","Sets a new PWM period",37,[[]]],[8,"PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",38,null],[10,"disable","","Disables a PWM `channel`",38,[[]]],[10,"enable","","Enables a PWM `channel`",38,[[]]],[10,"get_duty","","Returns the current duty cycle",38,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",38,[[]]],[10,"set_duty","","Sets a new duty cycle",38,[[]]],[8,"Qei","","Quadrature encoder interface",null,null],[16,"Count","","The type of the value returned by `count`",39,null],[10,"count","","Returns the current pulse count of the encoder",39,[[]]],[10,"direction","","Returns the count direction",39,[[],["direction",4]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",23,[[],["result",4]]],[11,"set_high","","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"is_set_high","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"is_low","","",24,[[],["result",4]]],[11,"is_high","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","embedded_hal::spi","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",23,[[]]],[11,"set_high","","",23,[[]]],[11,"is_set_low","","",23,[[]]],[11,"is_set_high","","",23,[[]]],[11,"is_low","","",24,[[]]],[11,"is_high","","",24,[[]]],[11,"from","","",23,[[]]],[11,"from","","",24,[[]]],[11,"fmt","embedded_hal","",0,[[["formatter",3]],["result",6]]],[11,"eq","embedded_hal::spi","",28,[[["polarity",4]]]],[11,"eq","","",29,[[["phase",4]]]],[11,"eq","","",27,[[["mode",3]]]],[11,"ne","","",27,[[["mode",3]]]],[11,"eq","embedded_hal","",0,[[["direction",4]]]],[11,"write_str","embedded_hal::serial","",26,[[],["result",6]]],[11,"clone","embedded_hal::spi","",28,[[],["polarity",4]]],[11,"clone","","",29,[[],["phase",4]]],[11,"clone","","",27,[[],["mode",3]]],[11,"clone","embedded_hal","",0,[[],["direction",4]]]],"p":[[4,"Direction"],[8,"Channel"],[8,"OneShot"],[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteIter"],[8,"WriteRead"],[8,"WriteIterRead"],[8,"Read"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"WriteIter"],[8,"OutputPin"],[8,"StatefulOutputPin"],[8,"ToggleableOutputPin"],[8,"InputPin"],[8,"OutputPin"],[8,"StatefulOutputPin"],[8,"ToggleableOutputPin"],[8,"InputPin"],[3,"OldOutputPin"],[3,"OldInputPin"],[8,"Read"],[8,"Write"],[3,"Mode"],[4,"Polarity"],[4,"Phase"],[8,"FullDuplex"],[8,"CountDown"],[8,"Cancel"],[8,"Watchdog"],[8,"WatchdogEnable"],[8,"WatchdogDisable"],[8,"Capture"],[8,"Pwm"],[8,"PwmPin"],[8,"Qei"]]},\
"generic_array":{"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[],["mappedsequence",6]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[],["mappedsequence",6]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray",3]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray",3]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray",3]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[],["option",4]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","generic_array::iter","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"map","generic_array","",10,[[],["mappedsequence",6]]],[11,"zip","","",10,[[],["mappedsequence",6]]],[11,"fold","","",10,[[]]],[11,"generate","","",10,[[],["genericarray",3]]],[11,"append","","",10,[[]]],[11,"prepend","","",10,[[]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","generic_array::iter","",3,[[["formatter",3]],["result",6]]],[11,"eq","generic_array","",10,[[]]],[11,"cmp","","",10,[[["genericarray",3]],["ordering",4]]],[11,"partial_cmp","","",10,[[["genericarray",3]],[["option",4],["ordering",4]]]],[11,"drop","generic_array::iter","",3,[[]]],[11,"hash","generic_array","",10,[[]]],[11,"len","generic_array::iter","",3,[[]]],[11,"borrow","generic_array","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"from_iter","","",10,[[],["genericarray",3]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"next_back","generic_array::iter","",3,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[]]],[11,"nth","","",3,[[],["option",4]]],[11,"last","","",3,[[],["option",4]]],[11,"into_iter","generic_array","",10,[[]]],[11,"clone","","",10,[[],["genericarray",3]]],[11,"clone","generic_array::iter","",3,[[]]],[11,"default","generic_array","",10,[[]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]},\
"nb":{"doc":"Minimal and reusable non-blocking I/O layer","i":[[14,"block","nb","Turns the non-blocking expression `$e` into a blocking…",null,null],[4,"Error","","A non-blocking error",null,null],[13,"Other","","A different kind of error",0,null],[13,"WouldBlock","","This operation requires blocking behavior to complete",0,null],[6,"Result","","A non-blocking result",null,null],[14,"await","","Await operation (won\'t work until the language gains…",null,null],[14,"try_nb","","Future adapter",null,null],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"cmp","","",0,[[["error",4]],["ordering",4]]],[11,"from","","",0,[[],["error",4]]],[11,"partial_cmp","","",0,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["error",4]]]],[11,"le","","",0,[[["error",4]]]],[11,"gt","","",0,[[["error",4]]]],[11,"ge","","",0,[[["error",4]]]],[11,"hash","","",0,[[]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"map","","Maps an `Error<E>` to `Error<T>` by applying a function to…",0,[[],["error",4]]]],"p":[[4,"Error"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",0,[[],[["nonzerou32",3],["option",4]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"from_seed","","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",0,[[["nonzerou32",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",0,[[["formatter",3]],["result",6]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",null,null]],"p":[]},\
"usb_device":{"doc":"Experimental device-side USB stack for embedded devices.","i":[[4,"UsbError","usb_device","A USB stack error.",null,null],[13,"WouldBlock","","An operation would block because the device is currently…",0,null],[13,"ParseError","","Parsing failed due to invalid input.",0,null],[13,"BufferOverflow","","A buffer too short for the data to read was passed, or…",0,null],[13,"EndpointOverflow","","Classes attempted to allocate more endpoints than the…",0,null],[13,"EndpointMemoryOverflow","","Classes attempted to allocate more packet buffer memory…",0,null],[13,"InvalidEndpoint","","The endpoint address is invalid or already used.",0,null],[13,"Unsupported","","Operation is not supported by device or configuration.",0,null],[13,"InvalidState","","Operation is not valid in the current state of the object.",0,null],[4,"UsbDirection","","Direction of USB traffic. Note that in the USB standard…",null,null],[13,"Out","","Host to device (OUT)",1,null],[13,"In","","Device to host (IN)",1,null],[0,"control","","USB control transfers and the SETUP packet.",null,null],[3,"Request","usb_device::control","A control request read from a SETUP packet.",null,null],[12,"direction","","Direction of the request.",2,null],[12,"request_type","","Type of the request.",2,null],[12,"recipient","","Recipient of the request.",2,null],[12,"request","","Request code. The meaning of the value depends on the…",2,null],[12,"value","","Request value. The meaning of the value depends on the…",2,null],[12,"index","","Request index. The meaning of the value depends on the…",2,null],[12,"length","","Length of the DATA stage. For control OUT transfers this…",2,null],[4,"RequestType","","Control request type.",null,null],[13,"Standard","","Request is a USB standard request. Usually handled by…",3,null],[13,"Class","","Request is intended for a USB class.",3,null],[13,"Vendor","","Request is vendor-specific.",3,null],[13,"Reserved","","Reserved.",3,null],[4,"Recipient","","Control request recipient.",null,null],[13,"Device","","Request is intended for the entire device.",4,null],[13,"Interface","","Request is intended for an interface. Generally, the…",4,null],[13,"Endpoint","","Request is intended for an endpoint. Generally, the…",4,null],[13,"Other","","None of the above.",4,null],[13,"Reserved","","Reserved.",4,null],[18,"GET_STATUS","","Standard USB control request Get Status",2,null],[18,"CLEAR_FEATURE","","Standard USB control request Clear Feature",2,null],[18,"SET_FEATURE","","Standard USB control request Set Feature",2,null],[18,"SET_ADDRESS","","Standard USB control request Set Address",2,null],[18,"GET_DESCRIPTOR","","Standard USB control request Get Descriptor",2,null],[18,"SET_DESCRIPTOR","","Standard USB control request Set Descriptor",2,null],[18,"GET_CONFIGURATION","","Standard USB control request Get Configuration",2,null],[18,"SET_CONFIGURATION","","Standard USB control request Set Configuration",2,null],[18,"GET_INTERFACE","","Standard USB control request Get Interface",2,null],[18,"SET_INTERFACE","","Standard USB control request Set Interface",2,null],[18,"SYNCH_FRAME","","Standard USB control request Synch Frame",2,null],[18,"FEATURE_ENDPOINT_HALT","","Standard USB feature Endpoint Halt for Set/Clear Feature",2,null],[18,"FEATURE_DEVICE_REMOTE_WAKEUP","","Standard USB feature Device Remote Wakeup for Set/Clear…",2,null],[11,"descriptor_type_index","","Gets the descriptor type and index from the value field of…",2,[[]]],[0,"bus","usb_device","For implementing peripheral drivers.",null,null],[3,"UsbBusAllocator","usb_device::bus","Helper type used for UsbBus resource allocation and…",null,null],[3,"InterfaceNumber","","A handle for a USB interface that contains its number.",null,null],[3,"StringIndex","","A handle for a USB string descriptor that contains its…",null,null],[4,"PollResult","","Event and incoming packet information returned by…",null,null],[13,"None","","No events or packets to report.",5,null],[13,"Reset","","The USB reset condition has been detected.",5,null],[13,"Data","","USB packets have been received or sent. Each data field is…",5,null],[12,"ep_out","usb_device::bus::PollResult","An OUT packet has been received. This event should…",6,null],[12,"ep_in_complete","","An IN packet has finished transmitting. This event should…",6,null],[12,"ep_setup","","A SETUP packet has been received. This event should…",6,null],[13,"Suspend","usb_device::bus","A USB suspend request has been detected or, in the case of…",5,null],[13,"Resume","","A USB resume request has been detected after being…",5,null],[8,"UsbBus","","A trait for device-specific USB peripherals. Implement…",null,null],[10,"alloc_ep","","Allocates an endpoint and specified endpoint parameters.…",7,[[["endpointaddress",3],["option",4],["usbdirection",4],["endpointtype",4]],[["result",6],["endpointaddress",3]]]],[10,"enable","","Enables and initializes the USB peripheral. Soon after…",7,[[]]],[10,"reset","","Performs a USB reset. This method should reset the…",7,[[]]],[10,"set_device_address","","Sets the device USB address to `addr`.",7,[[]]],[10,"write","","Writes a single packet of data to the specified endpoint…",7,[[["endpointaddress",3]],["result",6]]],[10,"read","","Reads a single packet of data from the specified endpoint…",7,[[["endpointaddress",3]],["result",6]]],[10,"set_stalled","","Sets or clears the STALL condition for an endpoint. If the…",7,[[["endpointaddress",3]]]],[10,"is_stalled","","Gets whether the STALL condition is set for an endpoint.",7,[[["endpointaddress",3]]]],[10,"suspend","","Causes the USB peripheral to enter USB suspend mode,…",7,[[]]],[10,"resume","","Resumes from suspend mode. This may only be called after…",7,[[]]],[10,"poll","","Gets information about events and incoming data. Usually…",7,[[],["pollresult",4]]],[11,"force_reset","","Simulates a disconnect from the USB bus, causing the host…",7,[[],["result",6]]],[18,"QUIRK_SET_ADDRESS_BEFORE_STATUS","","Indicates that `set_device_address` must be called before…",7,null],[11,"new","","Creates a new [`UsbBusAllocator`] that wraps the provided…",8,[[],["usbbusallocator",3]]],[11,"interface","","Allocates a new interface number.",8,[[],["interfacenumber",3]]],[11,"string","","Allocates a new string index.",8,[[],["stringindex",3]]],[11,"alloc","","Allocates an endpoint with the specified direction and…",8,[[["endpointtype",4],["endpointaddress",3],["option",4]],[["result",6],["endpoint",3]]]],[11,"control","","Allocates a control endpoint.",8,[[],[["endpointdirection",8],["endpoint",3]]]],[11,"bulk","","Allocates a bulk endpoint.",8,[[],[["endpointdirection",8],["endpoint",3]]]],[11,"interrupt","","Allocates an interrupt endpoint.",8,[[],[["endpointdirection",8],["endpoint",3]]]],[0,"class","usb_device","For implementing standard as well as vendor-specific USB…",null,null],[3,"ControlIn","usb_device::class","Handle for a control IN transfer. When implementing a…",null,null],[3,"ControlOut","","Handle for a control OUT transfer. When implementing a…",null,null],[8,"UsbClass","","A trait for implementing USB classes.",null,null],[11,"get_configuration_descriptors","","Called when a GET_DESCRIPTOR request is received for a…",9,[[["descriptorwriter",3]],["result",6]]],[11,"get_bos_descriptors","","Called when a GET_DESCRIPTOR request is received for a BOS…",9,[[["boswriter",3]],["result",6]]],[11,"get_string","","Gets a class-specific string descriptor.",9,[[["stringindex",3]],["option",4]]],[11,"reset","","Called after a USB reset after the bus reset sequence is…",9,[[]]],[11,"poll","","Called whenever the `UsbDevice` is polled.",9,[[]]],[11,"control_out","","Called when a control request is received with direction…",9,[[["controlout",3]]]],[11,"control_in","","Called when a control request is received with direction…",9,[[["controlin",3]]]],[11,"endpoint_setup","","Called when endpoint with address `addr` has received a…",9,[[["endpointaddress",3]]]],[11,"endpoint_out","","Called when endpoint with address `addr` has received data…",9,[[["endpointaddress",3]]]],[11,"endpoint_in_complete","","Called when endpoint with address `addr` has completed…",9,[[["endpointaddress",3]]]],[11,"request","","Gets the request from the SETUP packet.",10,[[],["request",3]]],[11,"accept_with","","Accepts the transfer with the supplied buffer.",10,[[],["result",6]]],[11,"accept_with_static","","Accepts the transfer with the supplied static buffer. This…",10,[[],["result",6]]],[11,"accept","","Accepts the transfer with a callback that can write to the…",10,[[],["result",6]]],[11,"reject","","Rejects the transfer by stalling the pipe.",10,[[],["result",6]]],[11,"request","","Gets the request from the SETUP packet.",11,[[],["request",3]]],[11,"data","","Gets the data from the data stage of the request. May be…",11,[[]]],[11,"accept","","Accepts the transfer by succesfully responding to the…",11,[[],["result",6]]],[11,"reject","","Rejects the transfer by stalling the pipe.",11,[[],["result",6]]],[0,"endpoint","usb_device","USB endpoints.",null,null],[3,"Out","usb_device::endpoint","Marker type for OUT endpoints.",null,null],[3,"In","","Marker type for IN endpoints.",null,null],[3,"Endpoint","","Handle for a USB endpoint. The endpoint direction is…",null,null],[3,"EndpointAddress","","Type-safe endpoint address.",null,null],[4,"EndpointType","","USB endpoint transfer type. The values of this enum can be…",null,null],[13,"Control","","Control endpoint. Used for device management. Only the…",12,null],[13,"Isochronous","","Isochronous endpoint. Used for time-critical unreliable…",12,null],[13,"Bulk","","Bulk endpoint. Used for large amounts of best-effort…",12,null],[13,"Interrupt","","Interrupt endpoint. Used for small amounts of…",12,null],[6,"EndpointOut","","A host-to-device (OUT) endpoint.",null,null],[6,"EndpointIn","","A device-to-host (IN) endpoint.",null,null],[8,"EndpointDirection","","Trait for endpoint type markers.",null,null],[18,"DIRECTION","","Direction value of the marker type.",13,null],[11,"address","","Gets the endpoint address including direction bit.",14,[[],["endpointaddress",3]]],[11,"ep_type","","Gets the endpoint transfer type.",14,[[],["endpointtype",4]]],[11,"max_packet_size","","Gets the maximum packet size for the endpoint.",14,[[]]],[11,"interval","","Gets the poll interval for interrupt endpoints.",14,[[]]],[11,"stall","","Sets the STALL condition for the endpoint.",14,[[]]],[11,"unstall","","Clears the STALL condition of the endpoint.",14,[[]]],[11,"write","","Writes a single packet of data to the specified endpoint…",14,[[],["result",6]]],[11,"read","","Reads a single packet of data from the specified endpoint…",14,[[],["result",6]]],[11,"from_parts","","Constructs a new EndpointAddress with the given index and…",15,[[["usbdirection",4]]]],[11,"direction","","Gets the direction part of the address.",15,[[],["usbdirection",4]]],[11,"is_in","","Returns true if the direction is IN, otherwise false.",15,[[]]],[11,"is_out","","Returns true if the direction is OUT, otherwise false.",15,[[]]],[11,"index","","Gets the index part of the endpoint address.",15,[[]]],[0,"device","usb_device","USB composite device.",null,null],[3,"UsbDeviceBuilder","usb_device::device","Used to build new [`UsbDevice`]s.",null,null],[3,"UsbVidPid","","A USB vendor ID and product ID pair.",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[3,"UsbDevice","","A USB device consisting of one or more device classes.",null,null],[4,"UsbDeviceState","","The global state of the USB device.",null,null],[13,"Default","","The USB device has just been created or reset.",17,null],[13,"Addressed","","The USB device has received an address from the host.",17,null],[13,"Configured","","The USB device has been configured and is fully functional.",17,null],[13,"Suspend","","The USB device has been suspended by the host or it has…",17,null],[17,"CONFIGURATION_NONE","","The bConfiguration value for the not configured state.",null,null],[17,"CONFIGURATION_VALUE","","The bConfiguration value for the single configuration…",null,null],[17,"DEFAULT_ALTERNATE_SETTING","","The default value for bAlternateSetting for all interfaces.",null,null],[11,"bus","","Gets a reference to the [`UsbBus`] implementation used by…",18,[[]]],[11,"state","","Gets the current state of the device.",18,[[],["usbdevicestate",4]]],[11,"remote_wakeup_enabled","","Gets whether host remote wakeup has been enabled by the…",18,[[]]],[11,"self_powered","","Gets whether the device is currently self powered.",18,[[]]],[11,"set_self_powered","","Sets whether the device is currently self powered.",18,[[]]],[11,"force_reset","","Simulates a disconnect from the USB bus, causing the host…",18,[[],["result",6]]],[11,"poll","","Polls the [`UsbBus`] for new events and dispatches them to…",18,[[]]],[0,"descriptor","usb_device","Creating USB descriptors",null,null],[3,"DescriptorWriter","usb_device::descriptor","A writer for USB descriptors.",null,null],[3,"BosWriter","","A writer for Binary Object Store descriptor.",null,null],[0,"descriptor_type","","Standard descriptor types",null,null],[17,"DEVICE","usb_device::descriptor::descriptor_type","",null,null],[17,"CONFIGURATION","","",null,null],[17,"STRING","","",null,null],[17,"INTERFACE","","",null,null],[17,"ENDPOINT","","",null,null],[17,"IAD","","",null,null],[17,"BOS","","",null,null],[17,"CAPABILITY","","",null,null],[0,"lang_id","usb_device::descriptor","String descriptor language IDs.",null,null],[17,"ENGLISH_US","usb_device::descriptor::lang_id","English (US)",null,null],[0,"capability_type","usb_device::descriptor","Standard capability descriptor types",null,null],[17,"WIRELESS_USB","usb_device::descriptor::capability_type","",null,null],[17,"USB_2_0_EXTENSION","","",null,null],[17,"SS_USB_DEVICE","","",null,null],[17,"CONTAINER_ID","","",null,null],[17,"PLATFORM","","",null,null],[11,"position","usb_device::descriptor","Gets the current position in the buffer, i.e. the number…",19,[[]]],[11,"write","","Writes an arbitrary (usually class-specific) descriptor.",19,[[],["result",6]]],[11,"iad","","Writes a interface association descriptor. Call from…",19,[[["interfacenumber",3]],["result",6]]],[11,"interface","","Writes a interface descriptor.",19,[[["interfacenumber",3]],["result",6]]],[11,"endpoint","","Writes an endpoint descriptor.",19,[[["endpoint",3]],["result",6]]],[11,"capability","","Writes capability descriptor to a BOS",20,[[],["result",6]]],[0,"test_class","usb_device","Test USB class for testing USB driver implementations.…",null,null],[3,"TestClass","usb_device::test_class","Test USB class for testing USB driver implementations.…",null,null],[17,"VID","","",null,null],[17,"PID","","",null,null],[17,"MANUFACTURER","","",null,null],[17,"PRODUCT","","",null,null],[17,"SERIAL_NUMBER","","",null,null],[17,"CUSTOM_STRING","","",null,null],[17,"REQ_STORE_REQUEST","","",null,null],[17,"REQ_READ_BUFFER","","",null,null],[17,"REQ_WRITE_BUFFER","","",null,null],[17,"REQ_SET_BENCH_ENABLED","","",null,null],[17,"REQ_READ_LONG_DATA","","",null,null],[17,"REQ_UNKNOWN","","",null,null],[17,"LONG_DATA","","",null,null],[11,"new","","Creates a new TestClass.",21,[[["usbbusallocator",3]],["testclass",3]]],[11,"make_device","","Convenience method to create a UsbDevice that is…",21,[[["usbbusallocator",3]],["usbdevice",3]]],[11,"poll","","Must be called after polling the UsbDevice.",21,[[]]],[11,"new","usb_device::device","Creates a builder for constructing a new [`UsbDevice`].",22,[[["usbvidpid",3],["usbbusallocator",3]],["usbdevicebuilder",3]]],[11,"build","","Creates the [`UsbDevice`] instance with the configuration…",22,[[],["usbdevice",3]]],[11,"device_class","","Sets the device class code assigned by USB.org. Set to…",22,[[]]],[11,"device_sub_class","","Sets the device sub-class code. Depends on class.",22,[[]]],[11,"device_protocol","","Sets the device protocol code. Depends on class and…",22,[[]]],[11,"device_release","","Sets the device release version in BCD.",22,[[]]],[11,"self_powered","","Sets whether the device may have an external power source.",22,[[]]],[11,"supports_remote_wakeup","","Sets whether the device supports remotely waking up the…",22,[[]]],[11,"composite_with_iads","","Configures the device as a composite device with interface…",22,[[]]],[11,"manufacturer","","Sets the manufacturer name string descriptor.",22,[[]]],[11,"product","","Sets the product name string descriptor.",22,[[]]],[11,"serial_number","","Sets the serial number string descriptor.",22,[[]]],[11,"max_packet_size_0","","Sets the maximum packet size in bytes for the control…",22,[[]]],[11,"max_power","","Sets the maximum current drawn from the USB bus by the…",22,[[]]],[0,"prelude","usb_device","Prelude for device implementors.",null,null],[3,"UsbDeviceBuilder","usb_device::prelude","Used to build new [`UsbDevice`]s.",null,null],[3,"UsbVidPid","","A USB vendor ID and product ID pair.",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[0,"class_prelude","usb_device","Prelude for class implementors.",null,null],[6,"Result","","Result for USB operations.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","usb_device::control","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","usb_device::bus","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","usb_device::class","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","usb_device::endpoint","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","usb_device::device","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","usb_device::descriptor","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","usb_device::test_class","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"reset","","",21,[[]]],[11,"get_configuration_descriptors","","",21,[[["descriptorwriter",3]],["result",6]]],[11,"get_string","","",21,[[["stringindex",3]],["option",4]]],[11,"endpoint_in_complete","","",21,[[["endpointaddress",3]]]],[11,"endpoint_out","","",21,[[["endpointaddress",3]]]],[11,"control_in","","",21,[[["controlin",3]]]],[11,"control_out","","",21,[[["controlout",3]]]],[11,"from","usb_device","",1,[[]]],[11,"from","usb_device::endpoint","",15,[[],["endpointaddress",3]]],[11,"fmt","usb_device","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","usb_device::control","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","usb_device::endpoint","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","usb_device::device","",17,[[["formatter",3]],["result",6]]],[11,"eq","usb_device","",1,[[["usbdirection",4]]]],[11,"eq","usb_device::control","",3,[[["requesttype",4]]]],[11,"eq","","",4,[[["recipient",4]]]],[11,"eq","","",2,[[["request",3]]]],[11,"ne","","",2,[[["request",3]]]],[11,"eq","usb_device::bus","",23,[[["interfacenumber",3]]]],[11,"ne","","",23,[[["interfacenumber",3]]]],[11,"eq","","",24,[[["stringindex",3]]]],[11,"ne","","",24,[[["stringindex",3]]]],[11,"eq","usb_device::endpoint","",12,[[["endpointtype",4]]]],[11,"eq","","",15,[[["endpointaddress",3]]]],[11,"ne","","",15,[[["endpointaddress",3]]]],[11,"eq","usb_device::device","",17,[[["usbdevicestate",4]]]],[11,"clone","usb_device","",1,[[],["usbdirection",4]]],[11,"clone","usb_device::control","",3,[[],["requesttype",4]]],[11,"clone","","",4,[[],["recipient",4]]],[11,"clone","","",2,[[],["request",3]]],[11,"clone","usb_device::bus","",23,[[],["interfacenumber",3]]],[11,"clone","","",24,[[],["stringindex",3]]],[11,"clone","usb_device::endpoint","",12,[[],["endpointtype",4]]],[11,"clone","","",15,[[],["endpointaddress",3]]],[11,"clone","usb_device::device","",17,[[],["usbdevicestate",4]]]],"p":[[4,"UsbError"],[4,"UsbDirection"],[3,"Request"],[4,"RequestType"],[4,"Recipient"],[4,"PollResult"],[13,"Data"],[8,"UsbBus"],[3,"UsbBusAllocator"],[8,"UsbClass"],[3,"ControlIn"],[3,"ControlOut"],[4,"EndpointType"],[8,"EndpointDirection"],[3,"Endpoint"],[3,"EndpointAddress"],[3,"UsbVidPid"],[4,"UsbDeviceState"],[3,"UsbDevice"],[3,"DescriptorWriter"],[3,"BosWriter"],[3,"TestClass"],[3,"UsbDeviceBuilder"],[3,"InterfaceNumber"],[3,"StringIndex"],[3,"Out"],[3,"In"]]},\
"vcell":{"doc":"Just like `Cell` but with volatile read / write operations","i":[[3,"VolatileCell","vcell","Just like `Cell` but with volatile read / write operations",null,null],[11,"new","","Creates a new `VolatileCell` containing the given value",0,[[]]],[11,"get","","Returns a copy of the contained value",0,[[]]],[11,"set","","Sets the contained value",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"VolatileCell"]]},\
"void":{"doc":"VoidThe uninhabited void type for use in statically…","i":[[4,"Void","void","The empty type for cases which can\'t occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,[[["void",4]]]],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[]]],[11,"partial_cmp","","",2,[[],[["ordering",4],["option",4]]]],[11,"clone","","",2,[[],["void",4]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",null,null],[3,"RW","","Read-Write register",null,null],[3,"WO","","Write-Only register",null,null],[11,"read","","Reads the value of the register",0,[[]]],[11,"modify","","Performs a read-modify-write operation",1,[[]]],[11,"read","","Reads the value of the register",1,[[]]],[11,"write","","Writes a `value` into the register",1,[[]]],[11,"write","","Writes `value` into the register",2,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);