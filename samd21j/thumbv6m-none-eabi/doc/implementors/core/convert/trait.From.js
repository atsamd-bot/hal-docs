(function() {var implementors = {};
implementors["atsamd21j"] = [{"text":"impl From&lt;WSTATE0_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WSTATE0_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WINTSEL0_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SPEED_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;INTSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MUXNEG_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MUXPOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;OUT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FLEN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;REFSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SAMPLENUM_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;RESSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WINMODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MUXPOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MUXNEG_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;GAIN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;REFSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CRCBEATSIZE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CRCPOLY_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CRCSRC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WRBQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;DQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EVACT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;LVL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;TRIGSRC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;TRIGACT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;NMISENSE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE0_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE1_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE2_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE3_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE4_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE5_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE6_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SENSE7_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PATH_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EDGSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CHANNEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;ID_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;GEN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SRC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SLOTSIZE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FSWIDTH_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;BITDELAY_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;FSSEL_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;SCKSEL_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;MCKSEL_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;SERMODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;TXDEFAULT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;TXSAME_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;CLKSEL_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;SLOTADJ_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;DATASIZE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WORDADJ_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;EXTEND_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;BITREV_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;MONO_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;DMA_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMDEX_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;RWS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SLEEPPRM_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;READMODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PSZ_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;IDLE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CPUDIV_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;APBADIV_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;APBBDIV_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;APBCDIV_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PMUXE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PMUXO_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PMUXE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PMUXO_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;HOUR_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;HOUR_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;GAIN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FRANGE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;ACTION_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FILTER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;REFCLK_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;LTIME_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WAVEGEN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCSYNC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EVACT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WAVEGEN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCSYNC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EVACT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WAVEGEN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCSYNC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EVACT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;RESOLUTION_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCALER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PRESCSYNC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;IDXCMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;IDXCMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CMD_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SRC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;BLANK_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;HALT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CHSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CAPTURE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SRC_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;BLANK_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;HALT_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CHSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CAPTURE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EVACT0_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EVACT1_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CNTSEL_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WAVEGEN_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;RAMP_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WAVEGENB_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;RAMPB_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;CQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;DQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SPDCONF_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;LPMHDSK_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SPEED_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;LINESTATE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FSMSTATE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;MODE_A&gt; for bool","synthetic":false,"types":[]},{"text":"impl From&lt;CQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;DQOS_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;SPDCONF_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;FSMSTATE_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;PER_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;WINDOW_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;EWOFFSET_A&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;CLEAR_AW&gt; for u8","synthetic":false,"types":[]}];
implementors["atsamd_hal"] = [{"text":"impl&lt;I, M&gt; From&lt;Pin&lt;I, M&gt;&gt; for Pin&lt;I, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: PinMode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, M&gt; From&lt;Pin&lt;I, M&gt;&gt; for Pin&lt;I, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: PinMode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, FloatingDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, PullDownDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Disabled&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, PullUpDisabled&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;Floating&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, FloatingInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullDown&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, PullDownInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Input&lt;PullUp&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, PullUpInput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;PushPull&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, PushPullOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Output&lt;Readable&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, ReadableOutput&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;A&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;B&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;C&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;D&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateD&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;E&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;F&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateF&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;G&gt;&gt;&gt; for Pin&lt;I, AlternateH&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; From&lt;Pin&lt;I, Alternate&lt;H&gt;&gt;&gt; for Pin&lt;I, AlternateG&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, M&gt; From&lt;Pin&lt;I, M&gt;&gt; for DynPin <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: PinMode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;R&lt;u32, Reg&lt;u32, _CLOCK&gt;&gt;&gt; for Datetime","synthetic":false,"types":[]},{"text":"impl&lt;S, P, I&gt; From&lt;Pad&lt;S, P, I&gt;&gt; for Pad&lt;S, P, Pin&lt;I::Id, I::Mode&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sercom,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: PadNum,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId + Map&lt;S, P&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pin&lt;I::Id, I::Mode&gt;: Map&lt;S, P, Id = I::Id, Mode = I::Mode&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, P, I&gt; From&lt;Pad&lt;S, P, Pin&lt;&lt;I as Map&lt;S, P&gt;&gt;::Id, &lt;I as Map&lt;S, P&gt;&gt;::Mode&gt;&gt;&gt; for Pad&lt;S, P, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sercom,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: PadNum,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: PinId + Map&lt;S, P&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pin&lt;I::Id, I::Mode&gt;: Map&lt;S, P, Id = I::Id, Mode = I::Mode&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, P, M&gt; From&lt;Pad&lt;S, P, M&gt;&gt; for Pin&lt;M::Id, M::Mode&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sercom,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: PadNum,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Map&lt;S, P&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S, P, M, O&gt; From&lt;Pin&lt;&lt;M as Map&lt;S, P&gt;&gt;::Id, O&gt;&gt; for Pad&lt;S, P, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sercom,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: PadNum,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Map&lt;S, P&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: PinMode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pin&lt;M::Id, O&gt;: Into&lt;Pin&lt;M::Id, M::Mode&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for ResetCause","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad0, PIN0&gt;, Pad&lt;Sercom0, Pad2, PIN1&gt;, Pad&lt;Sercom0, Pad3, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad0&lt;PIN0&gt;, Sercom0Pad2&lt;PIN1&gt;, Sercom0Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad0, PIN0&gt;, Pad&lt;Sercom0, Pad3, PIN1&gt;, Pad&lt;Sercom0, Pad1, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad0&lt;PIN0&gt;, Sercom0Pad3&lt;PIN1&gt;, Sercom0Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad1, PIN0&gt;, Pad&lt;Sercom0, Pad2, PIN1&gt;, Pad&lt;Sercom0, Pad3, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad1&lt;PIN0&gt;, Sercom0Pad2&lt;PIN1&gt;, Sercom0Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad1, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;, Pad&lt;Sercom0, Pad3, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad1&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, Sercom0Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad2, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;, Pad&lt;Sercom0, Pad1, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad2&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, Sercom0Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad2, PIN0&gt;, Pad&lt;Sercom0, Pad3, PIN1&gt;, Pad&lt;Sercom0, Pad1, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad2&lt;PIN0&gt;, Sercom0Pad3&lt;PIN1&gt;, Sercom0Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad2, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;, Pad&lt;Sercom0, Pad3, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad2&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, Sercom0Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom0, Pad3, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;, Pad&lt;Sercom0, Pad1, PIN2&gt;)&gt; for SPIMaster0Padout&lt;Sercom0Pad3&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, Sercom0Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad0, PIN0&gt;, Pad&lt;Sercom1, Pad2, PIN1&gt;, Pad&lt;Sercom1, Pad3, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad0&lt;PIN0&gt;, Sercom1Pad2&lt;PIN1&gt;, Sercom1Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad0, PIN0&gt;, Pad&lt;Sercom1, Pad3, PIN1&gt;, Pad&lt;Sercom1, Pad1, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad0&lt;PIN0&gt;, Sercom1Pad3&lt;PIN1&gt;, Sercom1Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad1, PIN0&gt;, Pad&lt;Sercom1, Pad2, PIN1&gt;, Pad&lt;Sercom1, Pad3, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad1&lt;PIN0&gt;, Sercom1Pad2&lt;PIN1&gt;, Sercom1Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad1, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;, Pad&lt;Sercom1, Pad3, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad1&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, Sercom1Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad2, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;, Pad&lt;Sercom1, Pad1, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad2&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, Sercom1Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad2, PIN0&gt;, Pad&lt;Sercom1, Pad3, PIN1&gt;, Pad&lt;Sercom1, Pad1, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad2&lt;PIN0&gt;, Sercom1Pad3&lt;PIN1&gt;, Sercom1Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad2, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;, Pad&lt;Sercom1, Pad3, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad2&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, Sercom1Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom1, Pad3, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;, Pad&lt;Sercom1, Pad1, PIN2&gt;)&gt; for SPIMaster1Padout&lt;Sercom1Pad3&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, Sercom1Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad0, PIN0&gt;, Pad&lt;Sercom2, Pad2, PIN1&gt;, Pad&lt;Sercom2, Pad3, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad0&lt;PIN0&gt;, Sercom2Pad2&lt;PIN1&gt;, Sercom2Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad0, PIN0&gt;, Pad&lt;Sercom2, Pad3, PIN1&gt;, Pad&lt;Sercom2, Pad1, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad0&lt;PIN0&gt;, Sercom2Pad3&lt;PIN1&gt;, Sercom2Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad1, PIN0&gt;, Pad&lt;Sercom2, Pad2, PIN1&gt;, Pad&lt;Sercom2, Pad3, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad1&lt;PIN0&gt;, Sercom2Pad2&lt;PIN1&gt;, Sercom2Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad1, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;, Pad&lt;Sercom2, Pad3, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad1&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, Sercom2Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad2, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;, Pad&lt;Sercom2, Pad1, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad2&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, Sercom2Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad2, PIN0&gt;, Pad&lt;Sercom2, Pad3, PIN1&gt;, Pad&lt;Sercom2, Pad1, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad2&lt;PIN0&gt;, Sercom2Pad3&lt;PIN1&gt;, Sercom2Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad2, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;, Pad&lt;Sercom2, Pad3, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad2&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, Sercom2Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom2, Pad3, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;, Pad&lt;Sercom2, Pad1, PIN2&gt;)&gt; for SPIMaster2Padout&lt;Sercom2Pad3&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, Sercom2Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad0, PIN0&gt;, Pad&lt;Sercom3, Pad2, PIN1&gt;, Pad&lt;Sercom3, Pad3, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad0&lt;PIN0&gt;, Sercom3Pad2&lt;PIN1&gt;, Sercom3Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad0, PIN0&gt;, Pad&lt;Sercom3, Pad3, PIN1&gt;, Pad&lt;Sercom3, Pad1, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad0&lt;PIN0&gt;, Sercom3Pad3&lt;PIN1&gt;, Sercom3Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad1, PIN0&gt;, Pad&lt;Sercom3, Pad2, PIN1&gt;, Pad&lt;Sercom3, Pad3, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad1&lt;PIN0&gt;, Sercom3Pad2&lt;PIN1&gt;, Sercom3Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad1, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;, Pad&lt;Sercom3, Pad3, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad1&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, Sercom3Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad2, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;, Pad&lt;Sercom3, Pad1, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad2&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, Sercom3Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad2, PIN0&gt;, Pad&lt;Sercom3, Pad3, PIN1&gt;, Pad&lt;Sercom3, Pad1, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad2&lt;PIN0&gt;, Sercom3Pad3&lt;PIN1&gt;, Sercom3Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad2, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;, Pad&lt;Sercom3, Pad3, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad2&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, Sercom3Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom3, Pad3, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;, Pad&lt;Sercom3, Pad1, PIN2&gt;)&gt; for SPIMaster3Padout&lt;Sercom3Pad3&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, Sercom3Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad0, PIN0&gt;, Pad&lt;Sercom4, Pad2, PIN1&gt;, Pad&lt;Sercom4, Pad3, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad0&lt;PIN0&gt;, Sercom4Pad2&lt;PIN1&gt;, Sercom4Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad0, PIN0&gt;, Pad&lt;Sercom4, Pad3, PIN1&gt;, Pad&lt;Sercom4, Pad1, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad0&lt;PIN0&gt;, Sercom4Pad3&lt;PIN1&gt;, Sercom4Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad1, PIN0&gt;, Pad&lt;Sercom4, Pad2, PIN1&gt;, Pad&lt;Sercom4, Pad3, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad1&lt;PIN0&gt;, Sercom4Pad2&lt;PIN1&gt;, Sercom4Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad1, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;, Pad&lt;Sercom4, Pad3, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad1&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, Sercom4Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad2, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;, Pad&lt;Sercom4, Pad1, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad2&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, Sercom4Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad2, PIN0&gt;, Pad&lt;Sercom4, Pad3, PIN1&gt;, Pad&lt;Sercom4, Pad1, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad2&lt;PIN0&gt;, Sercom4Pad3&lt;PIN1&gt;, Sercom4Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad2, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;, Pad&lt;Sercom4, Pad3, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad2&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, Sercom4Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom4, Pad3, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;, Pad&lt;Sercom4, Pad1, PIN2&gt;)&gt; for SPIMaster4Padout&lt;Sercom4Pad3&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, Sercom4Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad0, PIN0&gt;, Pad&lt;Sercom5, Pad2, PIN1&gt;, Pad&lt;Sercom5, Pad3, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad0&lt;PIN0&gt;, Sercom5Pad2&lt;PIN1&gt;, Sercom5Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad0, PIN0&gt;, Pad&lt;Sercom5, Pad3, PIN1&gt;, Pad&lt;Sercom5, Pad1, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad0&lt;PIN0&gt;, Sercom5Pad3&lt;PIN1&gt;, Sercom5Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad1, PIN0&gt;, Pad&lt;Sercom5, Pad2, PIN1&gt;, Pad&lt;Sercom5, Pad3, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad1&lt;PIN0&gt;, Sercom5Pad2&lt;PIN1&gt;, Sercom5Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad1, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;, Pad&lt;Sercom5, Pad3, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad1&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, Sercom5Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad2, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;, Pad&lt;Sercom5, Pad1, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad2&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, Sercom5Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad2, PIN0&gt;, Pad&lt;Sercom5, Pad3, PIN1&gt;, Pad&lt;Sercom5, Pad1, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad2&lt;PIN0&gt;, Sercom5Pad3&lt;PIN1&gt;, Sercom5Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad2, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;, Pad&lt;Sercom5, Pad3, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad2&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, Sercom5Pad3&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2&gt; From&lt;(Pad&lt;Sercom5, Pad3, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;, Pad&lt;Sercom5, Pad1, PIN2&gt;)&gt; for SPIMaster5Padout&lt;Sercom5Pad3&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, Sercom5Pad1&lt;PIN2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad1&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom0, Pad0, PIN0&gt;, Pad&lt;Sercom0, Pad2, PIN1&gt;)&gt; for UART0Padout&lt;Sercom0Pad0&lt;PIN0&gt;, Sercom0Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom0, Pad1, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;)&gt; for UART0Padout&lt;Sercom0Pad1&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2, PIN3&gt; From&lt;(Pad&lt;Sercom0, Pad1, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;, Pad&lt;Sercom0, Pad2, PIN2&gt;, Pad&lt;Sercom0, Pad3, PIN3&gt;)&gt; for UART0Padout&lt;Sercom0Pad1&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, Sercom0Pad2&lt;PIN2&gt;, Sercom0Pad3&lt;PIN3&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN3: Map&lt;Sercom0, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom0, Pad1, PIN0&gt;, Pad&lt;Sercom0, Pad2, PIN1&gt;)&gt; for UART0Padout&lt;Sercom0Pad1&lt;PIN0&gt;, Sercom0Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom0, Pad2, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;)&gt; for UART0Padout&lt;Sercom0Pad2&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom0, Pad3, PIN0&gt;, Pad&lt;Sercom0, Pad0, PIN1&gt;)&gt; for UART0Padout&lt;Sercom0Pad3&lt;PIN0&gt;, Sercom0Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom0, Pad3, PIN0&gt;, Pad&lt;Sercom0, Pad2, PIN1&gt;)&gt; for UART0Padout&lt;Sercom0Pad3&lt;PIN0&gt;, Sercom0Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom0, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom0, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom1, Pad0, PIN0&gt;, Pad&lt;Sercom1, Pad2, PIN1&gt;)&gt; for UART1Padout&lt;Sercom1Pad0&lt;PIN0&gt;, Sercom1Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom1, Pad1, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;)&gt; for UART1Padout&lt;Sercom1Pad1&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2, PIN3&gt; From&lt;(Pad&lt;Sercom1, Pad1, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;, Pad&lt;Sercom1, Pad2, PIN2&gt;, Pad&lt;Sercom1, Pad3, PIN3&gt;)&gt; for UART1Padout&lt;Sercom1Pad1&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, Sercom1Pad2&lt;PIN2&gt;, Sercom1Pad3&lt;PIN3&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN3: Map&lt;Sercom1, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom1, Pad1, PIN0&gt;, Pad&lt;Sercom1, Pad2, PIN1&gt;)&gt; for UART1Padout&lt;Sercom1Pad1&lt;PIN0&gt;, Sercom1Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom1, Pad2, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;)&gt; for UART1Padout&lt;Sercom1Pad2&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom1, Pad3, PIN0&gt;, Pad&lt;Sercom1, Pad0, PIN1&gt;)&gt; for UART1Padout&lt;Sercom1Pad3&lt;PIN0&gt;, Sercom1Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom1, Pad3, PIN0&gt;, Pad&lt;Sercom1, Pad2, PIN1&gt;)&gt; for UART1Padout&lt;Sercom1Pad3&lt;PIN0&gt;, Sercom1Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom1, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom1, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom2, Pad0, PIN0&gt;, Pad&lt;Sercom2, Pad2, PIN1&gt;)&gt; for UART2Padout&lt;Sercom2Pad0&lt;PIN0&gt;, Sercom2Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom2, Pad1, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;)&gt; for UART2Padout&lt;Sercom2Pad1&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2, PIN3&gt; From&lt;(Pad&lt;Sercom2, Pad1, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;, Pad&lt;Sercom2, Pad2, PIN2&gt;, Pad&lt;Sercom2, Pad3, PIN3&gt;)&gt; for UART2Padout&lt;Sercom2Pad1&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, Sercom2Pad2&lt;PIN2&gt;, Sercom2Pad3&lt;PIN3&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN3: Map&lt;Sercom2, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom2, Pad1, PIN0&gt;, Pad&lt;Sercom2, Pad2, PIN1&gt;)&gt; for UART2Padout&lt;Sercom2Pad1&lt;PIN0&gt;, Sercom2Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom2, Pad2, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;)&gt; for UART2Padout&lt;Sercom2Pad2&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom2, Pad3, PIN0&gt;, Pad&lt;Sercom2, Pad0, PIN1&gt;)&gt; for UART2Padout&lt;Sercom2Pad3&lt;PIN0&gt;, Sercom2Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom2, Pad3, PIN0&gt;, Pad&lt;Sercom2, Pad2, PIN1&gt;)&gt; for UART2Padout&lt;Sercom2Pad3&lt;PIN0&gt;, Sercom2Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom2, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom2, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom3, Pad0, PIN0&gt;, Pad&lt;Sercom3, Pad2, PIN1&gt;)&gt; for UART3Padout&lt;Sercom3Pad0&lt;PIN0&gt;, Sercom3Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom3, Pad1, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;)&gt; for UART3Padout&lt;Sercom3Pad1&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2, PIN3&gt; From&lt;(Pad&lt;Sercom3, Pad1, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;, Pad&lt;Sercom3, Pad2, PIN2&gt;, Pad&lt;Sercom3, Pad3, PIN3&gt;)&gt; for UART3Padout&lt;Sercom3Pad1&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, Sercom3Pad2&lt;PIN2&gt;, Sercom3Pad3&lt;PIN3&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN3: Map&lt;Sercom3, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom3, Pad1, PIN0&gt;, Pad&lt;Sercom3, Pad2, PIN1&gt;)&gt; for UART3Padout&lt;Sercom3Pad1&lt;PIN0&gt;, Sercom3Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom3, Pad2, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;)&gt; for UART3Padout&lt;Sercom3Pad2&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom3, Pad3, PIN0&gt;, Pad&lt;Sercom3, Pad0, PIN1&gt;)&gt; for UART3Padout&lt;Sercom3Pad3&lt;PIN0&gt;, Sercom3Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom3, Pad3, PIN0&gt;, Pad&lt;Sercom3, Pad2, PIN1&gt;)&gt; for UART3Padout&lt;Sercom3Pad3&lt;PIN0&gt;, Sercom3Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom3, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom3, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom4, Pad0, PIN0&gt;, Pad&lt;Sercom4, Pad2, PIN1&gt;)&gt; for UART4Padout&lt;Sercom4Pad0&lt;PIN0&gt;, Sercom4Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom4, Pad1, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;)&gt; for UART4Padout&lt;Sercom4Pad1&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2, PIN3&gt; From&lt;(Pad&lt;Sercom4, Pad1, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;, Pad&lt;Sercom4, Pad2, PIN2&gt;, Pad&lt;Sercom4, Pad3, PIN3&gt;)&gt; for UART4Padout&lt;Sercom4Pad1&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, Sercom4Pad2&lt;PIN2&gt;, Sercom4Pad3&lt;PIN3&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN3: Map&lt;Sercom4, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom4, Pad1, PIN0&gt;, Pad&lt;Sercom4, Pad2, PIN1&gt;)&gt; for UART4Padout&lt;Sercom4Pad1&lt;PIN0&gt;, Sercom4Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom4, Pad2, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;)&gt; for UART4Padout&lt;Sercom4Pad2&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom4, Pad3, PIN0&gt;, Pad&lt;Sercom4, Pad0, PIN1&gt;)&gt; for UART4Padout&lt;Sercom4Pad3&lt;PIN0&gt;, Sercom4Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom4, Pad3, PIN0&gt;, Pad&lt;Sercom4, Pad2, PIN1&gt;)&gt; for UART4Padout&lt;Sercom4Pad3&lt;PIN0&gt;, Sercom4Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom4, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom4, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom5, Pad0, PIN0&gt;, Pad&lt;Sercom5, Pad2, PIN1&gt;)&gt; for UART5Padout&lt;Sercom5Pad0&lt;PIN0&gt;, Sercom5Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom5, Pad1, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;)&gt; for UART5Padout&lt;Sercom5Pad1&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1, PIN2, PIN3&gt; From&lt;(Pad&lt;Sercom5, Pad1, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;, Pad&lt;Sercom5, Pad2, PIN2&gt;, Pad&lt;Sercom5, Pad3, PIN3&gt;)&gt; for UART5Padout&lt;Sercom5Pad1&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, Sercom5Pad2&lt;PIN2&gt;, Sercom5Pad3&lt;PIN3&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN2: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN3: Map&lt;Sercom5, Pad3&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom5, Pad1, PIN0&gt;, Pad&lt;Sercom5, Pad2, PIN1&gt;)&gt; for UART5Padout&lt;Sercom5Pad1&lt;PIN0&gt;, Sercom5Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad1&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom5, Pad2, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;)&gt; for UART5Padout&lt;Sercom5Pad2&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad2&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom5, Pad3, PIN0&gt;, Pad&lt;Sercom5, Pad0, PIN1&gt;)&gt; for UART5Padout&lt;Sercom5Pad3&lt;PIN0&gt;, Sercom5Pad0&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad0&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;PIN0, PIN1&gt; From&lt;(Pad&lt;Sercom5, Pad3, PIN0&gt;, Pad&lt;Sercom5, Pad2, PIN1&gt;)&gt; for UART5Padout&lt;Sercom5Pad3&lt;PIN0&gt;, Sercom5Pad2&lt;PIN1&gt;, (), ()&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN0: Map&lt;Sercom5, Pad3&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PIN1: Map&lt;Sercom5, Pad2&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["embedded_hal"] = [{"text":"impl&lt;T, E&gt; From&lt;T&gt; for OldOutputPin&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: OutputPin&lt;Error = E&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, E&gt; From&lt;T&gt; for OldInputPin&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: InputPin&lt;Error = E&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T&gt; From&lt;[T; 1]&gt; for GenericArray&lt;T, U1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UTerm, B1&gt;&gt;&gt; for [T; 1]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 1]&gt; for &amp;'a GenericArray&lt;T, U1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 1]&gt; for &amp;'a mut GenericArray&lt;T, U1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 2]&gt; for GenericArray&lt;T, U2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;&gt;&gt; for [T; 2]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 2]&gt; for &amp;'a GenericArray&lt;T, U2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 2]&gt; for &amp;'a mut GenericArray&lt;T, U2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 3]&gt; for GenericArray&lt;T, U3&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;&gt;&gt; for [T; 3]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 3]&gt; for &amp;'a GenericArray&lt;T, U3&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 3]&gt; for &amp;'a mut GenericArray&lt;T, U3&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 4]&gt; for GenericArray&lt;T, U4&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 4]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 4]&gt; for &amp;'a GenericArray&lt;T, U4&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 4]&gt; for &amp;'a mut GenericArray&lt;T, U4&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 5]&gt; for GenericArray&lt;T, U5&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 5]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 5]&gt; for &amp;'a GenericArray&lt;T, U5&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 5]&gt; for &amp;'a mut GenericArray&lt;T, U5&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 6]&gt; for GenericArray&lt;T, U6&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 6]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 6]&gt; for &amp;'a GenericArray&lt;T, U6&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 6]&gt; for &amp;'a mut GenericArray&lt;T, U6&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 7]&gt; for GenericArray&lt;T, U7&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 7]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 7]&gt; for &amp;'a GenericArray&lt;T, U7&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 7]&gt; for &amp;'a mut GenericArray&lt;T, U7&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 8]&gt; for GenericArray&lt;T, U8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 8]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 8]&gt; for &amp;'a GenericArray&lt;T, U8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 8]&gt; for &amp;'a mut GenericArray&lt;T, U8&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 9]&gt; for GenericArray&lt;T, U9&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 9]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 9]&gt; for &amp;'a GenericArray&lt;T, U9&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 9]&gt; for &amp;'a mut GenericArray&lt;T, U9&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 10]&gt; for GenericArray&lt;T, U10&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 10]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 10]&gt; for &amp;'a GenericArray&lt;T, U10&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 10]&gt; for &amp;'a mut GenericArray&lt;T, U10&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 11]&gt; for GenericArray&lt;T, U11&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 11]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 11]&gt; for &amp;'a GenericArray&lt;T, U11&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 11]&gt; for &amp;'a mut GenericArray&lt;T, U11&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 12]&gt; for GenericArray&lt;T, U12&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 12]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 12]&gt; for &amp;'a GenericArray&lt;T, U12&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 12]&gt; for &amp;'a mut GenericArray&lt;T, U12&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 13]&gt; for GenericArray&lt;T, U13&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 13]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 13]&gt; for &amp;'a GenericArray&lt;T, U13&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 13]&gt; for &amp;'a mut GenericArray&lt;T, U13&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 14]&gt; for GenericArray&lt;T, U14&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 14]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 14]&gt; for &amp;'a GenericArray&lt;T, U14&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 14]&gt; for &amp;'a mut GenericArray&lt;T, U14&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 15]&gt; for GenericArray&lt;T, U15&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 15]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 15]&gt; for &amp;'a GenericArray&lt;T, U15&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 15]&gt; for &amp;'a mut GenericArray&lt;T, U15&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 16]&gt; for GenericArray&lt;T, U16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 16]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 16]&gt; for &amp;'a GenericArray&lt;T, U16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 16]&gt; for &amp;'a mut GenericArray&lt;T, U16&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 17]&gt; for GenericArray&lt;T, U17&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 17]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 17]&gt; for &amp;'a GenericArray&lt;T, U17&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 17]&gt; for &amp;'a mut GenericArray&lt;T, U17&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 18]&gt; for GenericArray&lt;T, U18&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 18]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 18]&gt; for &amp;'a GenericArray&lt;T, U18&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 18]&gt; for &amp;'a mut GenericArray&lt;T, U18&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 19]&gt; for GenericArray&lt;T, U19&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 19]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 19]&gt; for &amp;'a GenericArray&lt;T, U19&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 19]&gt; for &amp;'a mut GenericArray&lt;T, U19&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 20]&gt; for GenericArray&lt;T, U20&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 20]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 20]&gt; for &amp;'a GenericArray&lt;T, U20&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 20]&gt; for &amp;'a mut GenericArray&lt;T, U20&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 21]&gt; for GenericArray&lt;T, U21&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 21]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 21]&gt; for &amp;'a GenericArray&lt;T, U21&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 21]&gt; for &amp;'a mut GenericArray&lt;T, U21&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 22]&gt; for GenericArray&lt;T, U22&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 22]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 22]&gt; for &amp;'a GenericArray&lt;T, U22&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 22]&gt; for &amp;'a mut GenericArray&lt;T, U22&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 23]&gt; for GenericArray&lt;T, U23&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B1&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 23]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 23]&gt; for &amp;'a GenericArray&lt;T, U23&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 23]&gt; for &amp;'a mut GenericArray&lt;T, U23&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 24]&gt; for GenericArray&lt;T, U24&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 24]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 24]&gt; for &amp;'a GenericArray&lt;T, U24&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 24]&gt; for &amp;'a mut GenericArray&lt;T, U24&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 25]&gt; for GenericArray&lt;T, U25&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 25]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 25]&gt; for &amp;'a GenericArray&lt;T, U25&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 25]&gt; for &amp;'a mut GenericArray&lt;T, U25&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 26]&gt; for GenericArray&lt;T, U26&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 26]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 26]&gt; for &amp;'a GenericArray&lt;T, U26&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 26]&gt; for &amp;'a mut GenericArray&lt;T, U26&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 27]&gt; for GenericArray&lt;T, U27&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B0&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 27]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 27]&gt; for &amp;'a GenericArray&lt;T, U27&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 27]&gt; for &amp;'a mut GenericArray&lt;T, U27&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 28]&gt; for GenericArray&lt;T, U28&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 28]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 28]&gt; for &amp;'a GenericArray&lt;T, U28&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 28]&gt; for &amp;'a mut GenericArray&lt;T, U28&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 29]&gt; for GenericArray&lt;T, U29&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;, B0&gt;, B1&gt;&gt;&gt; for [T; 29]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 29]&gt; for &amp;'a GenericArray&lt;T, U29&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 29]&gt; for &amp;'a mut GenericArray&lt;T, U29&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 30]&gt; for GenericArray&lt;T, U30&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;, B1&gt;, B0&gt;&gt;&gt; for [T; 30]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 30]&gt; for &amp;'a GenericArray&lt;T, U30&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 30]&gt; for &amp;'a mut GenericArray&lt;T, U30&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 31]&gt; for GenericArray&lt;T, U31&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B1&gt;, B1&gt;, B1&gt;, B1&gt;&gt;&gt; for [T; 31]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 31]&gt; for &amp;'a GenericArray&lt;T, U31&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 31]&gt; for &amp;'a mut GenericArray&lt;T, U31&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;[T; 32]&gt; for GenericArray&lt;T, U32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;GenericArray&lt;T, UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UInt&lt;UTerm, B1&gt;, B0&gt;, B0&gt;, B0&gt;, B0&gt;, B0&gt;&gt;&gt; for [T; 32]","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a [T; 32]&gt; for &amp;'a GenericArray&lt;T, U32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; From&lt;&amp;'a mut [T; 32]&gt; for &amp;'a mut GenericArray&lt;T, U32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, N:&nbsp;ArrayLength&lt;T&gt;&gt; From&lt;&amp;'a [T]&gt; for &amp;'a GenericArray&lt;T, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, N:&nbsp;ArrayLength&lt;T&gt;&gt; From&lt;&amp;'a mut [T]&gt; for &amp;'a mut GenericArray&lt;T, N&gt;","synthetic":false,"types":[]}];
implementors["nb"] = [{"text":"impl&lt;E&gt; From&lt;E&gt; for Error&lt;E&gt;","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl From&lt;NonZeroU32&gt; for Error","synthetic":false,"types":[]}];
implementors["usb_device"] = [{"text":"impl From&lt;u8&gt; for UsbDirection","synthetic":false,"types":[]},{"text":"impl From&lt;InterfaceNumber&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;StringIndex&gt; for u8","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for EndpointAddress","synthetic":false,"types":[]},{"text":"impl From&lt;EndpointAddress&gt; for u8","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()