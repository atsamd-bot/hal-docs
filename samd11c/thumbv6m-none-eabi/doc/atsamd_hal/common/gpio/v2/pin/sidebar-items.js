initSidebarItems({"enum":[["A","Type-level variant of [`AlternateConfig`] for alternate peripheral function A"],["B","Type-level variant of [`AlternateConfig`] for alternate peripheral function B"],["C","Type-level variant of [`AlternateConfig`] for alternate peripheral function C"],["D","Type-level variant of [`AlternateConfig`] for alternate peripheral function D"],["E","Type-level variant of [`AlternateConfig`] for alternate peripheral function E"],["F","Type-level variant of [`AlternateConfig`] for alternate peripheral function F"],["Floating","Type-level variant of both [`DisabledConfig`] and [`InputConfig`]"],["G","Type-level variant of [`AlternateConfig`] for alternate peripheral function G"],["GroupA","Type-level variant of `Group`"],["PA02","Pin ID representing pin PA02"],["PA04","Pin ID representing pin PA04"],["PA05","Pin ID representing pin PA05"],["PA08","Pin ID representing pin PA08"],["PA09","Pin ID representing pin PA09"],["PA14","Pin ID representing pin PA14"],["PA15","Pin ID representing pin PA15"],["PA24","Pin ID representing pin PA24"],["PA25","Pin ID representing pin PA25"],["PA28","Pin ID representing pin PA28"],["PA30","Pin ID representing pin PA30"],["PA31","Pin ID representing pin PA31"],["PullDown","Type-level variant of both [`DisabledConfig`] and [`InputConfig`]"],["PullUp","Type-level variant of both [`DisabledConfig`] and [`InputConfig`]"],["PushPull","Type-level variant of [`OutputConfig`] for a push-pull configuration"],["Readable","Type-level variant of [`OutputConfig`] for a readable push-pull configuration"]],"struct":[["Alternate","Type-level variant of [`PinMode`] for alternate peripheral functions"],["Disabled","Type-level variant of [`PinMode`] for disabled modes"],["Input","Type-level variant of [`PinMode`] for input modes"],["Output","Type-level variant of [`PinMode`] for output modes"],["Pin","A type-level GPIO pin, parameterized by [`PinId`] and [`PinMode`] types"],["Pins","Collection of all the individual [`Pin`]s"]],"trait":[["AlternateConfig","Type-level `enum` for alternate peripheral function configurations"],["AnyPin","Meta-type representing any [`Pin`]"],["DisabledConfig","Type-level `enum` for disabled configurations"],["InputConfig","Type-level `enum` for input configurations"],["OptionalPin","Meta-type representing an optional [`Pin`]."],["OutputConfig","Type-level `enum` for output configurations"],["PinId","Type-level `enum` for pin IDs"],["PinMode","Type-level `enum` representing pin modes"],["SomePin","Meta-type representing a valid [`Pin`]."]],"type":[["AlternateA","Type-level variant of [`PinMode`] for alternate peripheral function [A]"],["AlternateB","Type-level variant of [`PinMode`] for alternate peripheral function [B]"],["AlternateC","Type-level variant of [`PinMode`] for alternate peripheral function [C]"],["AlternateD","Type-level variant of [`PinMode`] for alternate peripheral function [D]"],["AlternateE","Type-level variant of [`PinMode`] for alternate peripheral function [E]"],["AlternateF","Type-level variant of [`PinMode`] for alternate peripheral function [F]"],["AlternateG","Type-level variant of [`PinMode`] for alternate peripheral function [G]"],["ConcretePin","Type alias to recover the corresponding concrete [`Pin`] type from a given implementation of [`AnyPin`]"],["FloatingDisabled","Type-level variant of [`PinMode`] for floating disabled mode"],["FloatingInput","Type-level variant of [`PinMode`] for floating input mode"],["PullDownDisabled","Type-level variant of [`PinMode`] for pull-down disabled mode"],["PullDownInput","Type-level variant of [`PinMode`] for pull-down input mode"],["PullUpDisabled","Type-level variant of [`PinMode`] for pull-up disabled mode"],["PullUpInput","Type-level variant of [`PinMode`] for pull-up input mode"],["PushPullOutput","Type-level variant of [`PinMode`] for push-pull output mode"],["ReadableOutput","Type-level variant of [`PinMode`] for readable push-pull output mode"],["Reset","Type alias for the [`PinMode`] at reset"]]});