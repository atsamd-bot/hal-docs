var searchIndex = JSON.parse('{\
"aligned":{"doc":"A newtype with alignment of at least `A` bytes","i":[[3,"A2","aligned","2-byte alignment",null,null],[3,"A4","","4-byte alignment",null,null],[3,"A8","","8-byte alignment",null,null],[3,"A16","","16-byte alignment",null,null],[3,"Aligned","","A newtype with alignment of at least `A` bytes",null,null],[5,"Aligned","","Changes the alignment of `value` to be at least `A` bytes",null,[[],["aligned",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"index","","",4,[[["rangeto",3]],["aligned",3]]],[11,"hash","","",4,[[]]],[11,"clone","","",4,[[]]],[11,"default","","",4,[[]]],[11,"as_slice","","",4,[[]]],[11,"as_mut_slice","","",4,[[]]]],"p":[[3,"A2"],[3,"A4"],[3,"A8"],[3,"A16"],[3,"Aligned"]]},\
"as_slice":{"doc":"`AsSlice` and `AsMutSlice` traits","i":[[8,"AsSlice","as_slice","Something that can be seen as an immutable slice",null,null],[16,"Element","","The element type of the slice view",0,null],[10,"as_slice","","Returns the immutable slice view of `Self`",0,[[]]],[8,"AsMutSlice","","Something that can be seen as an mutable slice",null,null],[10,"as_mut_slice","","Returns the mutable slice view of `Self`",1,[[]]]],"p":[[8,"AsSlice"],[8,"AsMutSlice"]]},\
"atsamd11c":{"doc":"Peripheral access API for ATSAMD11C microcontrollers…","i":[[3,"CorePeripherals","atsamd11c","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",0,null],[12,"CPUID","","CPUID",0,null],[12,"DCB","","Debug Control Block",0,null],[12,"DWT","","Data Watchpoint and Trace unit",0,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",0,null],[12,"FPU","","Floating Point Unit (only present on…",0,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",0,null],[12,"MPU","","Memory Protection Unit",0,null],[12,"NVIC","","Nested Vector Interrupt Controller",0,null],[12,"SCB","","System Control Block",0,null],[12,"SYST","","SysTick: System Timer",0,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",0,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[3,"AC","","Analog Comparators",null,null],[3,"ADC","","Analog Digital Converter",null,null],[3,"DAC","","Digital Analog Converter",null,null],[3,"DMAC","","Direct Memory Access Controller",null,null],[3,"DSU","","Device Service Unit",null,null],[3,"EIC","","External Interrupt Controller",null,null],[3,"EVSYS","","Event System Interface",null,null],[3,"GCLK","","Generic Clock Generator",null,null],[3,"HMATRIX","","HSB Matrix",null,null],[3,"MTB","","Cortex-M0+ Micro-Trace Buffer",null,null],[3,"NVMCTRL","","Non-Volatile Memory Controller",null,null],[3,"PAC0","","Peripheral Access Controller 0",null,null],[3,"PAC1","","Peripheral Access Controller 1",null,null],[3,"PAC2","","Peripheral Access Controller 2",null,null],[3,"PM","","Power Manager",null,null],[3,"PORT","","Port Module",null,null],[3,"PORT_IOBUS","","Port Module (IOBUS)",null,null],[3,"RTC","","Real-Time Counter",null,null],[3,"SERCOM0","","Serial Communication Interface 0",null,null],[3,"SERCOM1","","Serial Communication Interface 1",null,null],[3,"SYSCTRL","","System Control",null,null],[3,"TC1","","Basic Timer Counter 1",null,null],[3,"TC2","","Basic Timer Counter 2",null,null],[3,"TCC0","","Timer Counter Control",null,null],[3,"USB","","Universal Serial Bus",null,null],[3,"WDT","","Watchdog Timer",null,null],[3,"Peripherals","","All the peripherals",null,null],[12,"AC","","AC",1,null],[12,"ADC","","ADC",1,null],[12,"DAC","","DAC",1,null],[12,"DMAC","","DMAC",1,null],[12,"DSU","","DSU",1,null],[12,"EIC","","EIC",1,null],[12,"EVSYS","","EVSYS",1,null],[12,"GCLK","","GCLK",1,null],[12,"HMATRIX","","HMATRIX",1,null],[12,"MTB","","MTB",1,null],[12,"NVMCTRL","","NVMCTRL",1,null],[12,"PAC0","","PAC0",1,null],[12,"PAC1","","PAC1",1,null],[12,"PAC2","","PAC2",1,null],[12,"PM","","PM",1,null],[12,"PORT","","PORT",1,null],[12,"PORT_IOBUS","","PORT_IOBUS",1,null],[12,"RTC","","RTC",1,null],[12,"SERCOM0","","SERCOM0",1,null],[12,"SERCOM1","","SERCOM1",1,null],[12,"SYSCTRL","","SYSCTRL",1,null],[12,"TC1","","TC1",1,null],[12,"TC2","","TC2",1,null],[12,"TCC0","","TCC0",1,null],[12,"USB","","USB",1,null],[12,"WDT","","WDT",1,null],[4,"Interrupt","","Enumeration of all the interrupts",null,null],[13,"PM","","0 - PM",2,null],[13,"SYSCTRL","","1 - SYSCTRL",2,null],[13,"WDT","","2 - WDT",2,null],[13,"RTC","","3 - RTC",2,null],[13,"EIC","","4 - EIC",2,null],[13,"NVMCTRL","","5 - NVMCTRL",2,null],[13,"DMAC","","6 - DMAC",2,null],[13,"USB","","7 - USB",2,null],[13,"EVSYS","","8 - EVSYS",2,null],[13,"SERCOM0","","9 - SERCOM0",2,null],[13,"SERCOM1","","10 - SERCOM1",2,null],[13,"TCC0","","12 - TCC0",2,null],[13,"TC1","","13 - TC1",2,null],[13,"TC2","","14 - TC2",2,null],[13,"ADC","","15 - ADC",2,null],[13,"AC","","16 - AC",2,null],[13,"DAC","","17 - DAC",2,null],[0,"generic","","Common register and bit access and modify traits",null,null],[3,"Reg","atsamd11c::generic","This structure provides volatile access to registers.",null,null],[3,"R","","Register/field reader.",null,null],[3,"W","","Register writer.",null,null],[4,"Variant","","Used if enumerated values cover not the whole range.",null,null],[13,"Val","","Expected variant.",3,null],[13,"Res","","Raw bits.",3,null],[8,"Readable","","Trait implemented by readable registers to enable the…",null,null],[8,"Writable","","Trait implemented by writeable registers.",null,null],[8,"ResetValue","","Reset value of the register.",null,null],[16,"Type","","Raw register type (`u8`, `u16`, `u32`, ...).",4,null],[10,"reset_value","","Reset value of the register.",4,[[]]],[11,"as_ptr","","Returns the underlying memory address of register.",5,[[]]],[11,"read","","Reads the contents of a `Readable` register.",5,[[],["r",3]]],[11,"reset","","Writes the reset value to `Writable` register.",5,[[]]],[11,"write","","Writes bits to a `Writable` register.",5,[[]]],[11,"write_with_zero","","Writes 0 to a `Writable` register.",5,[[]]],[11,"modify","","Modifies the contents of the register by reading and then…",5,[[]]],[11,"bits","","Reads raw bits from register/field.",6,[[]]],[11,"bit","","Value of the field as raw bits.",6,[[]]],[11,"bit_is_clear","","Returns `true` if the bit is clear (0).",6,[[]]],[11,"bit_is_set","","Returns `true` if the bit is set (1).",6,[[]]],[11,"bits","","Writes raw bits to the register.",7,[[]]],[0,"ac","atsamd11c","Analog Comparators",null,null],[3,"RegisterBlock","atsamd11c::ac","Register block",null,null],[12,"ctrla","","0x00 - Control A",8,null],[12,"ctrlb","","0x01 - Control B",8,null],[12,"evctrl","","0x02 - Event Control",8,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",8,null],[12,"intenset","","0x05 - Interrupt Enable Set",8,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",8,null],[12,"statusa","","0x08 - Status A",8,null],[12,"statusb","","0x09 - Status B",8,null],[12,"statusc","","0x0a - Status C",8,null],[12,"winctrl","","0x0c - Window Control",8,null],[12,"compctrl","","0x10 - Comparator Control n",8,null],[12,"scaler","","0x20 - Scaler n",8,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd11c::ac::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"LPMUX_W","","Write proxy for field `LPMUX`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"LPMUX_R","","Reader of field `LPMUX`",null,null],[11,"set_bit","","Sets the field bit",9,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",9,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",9,[[],["w",6]]],[11,"set_bit","","Sets the field bit",10,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",10,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",10,[[],["w",6]]],[11,"set_bit","","Sets the field bit",11,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",11,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",11,[[],["w",6]]],[11,"set_bit","","Sets the field bit",12,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",12,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",12,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"lpmux","","Bit 7 - Low-Power Mux",6,[[],["lpmux_r",6]]],[11,"enable","atsamd11c::ac::ctrla","Bit 1 - Enable",13,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",13,[[],["runstdby_r",6]]],[11,"lpmux","","Bit 7 - Low-Power Mux",13,[[],["lpmux_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"lpmux","","Bit 7 - Low-Power Mux",7,[[],["lpmux_w",3]]],[11,"swrst","atsamd11c::ac::ctrla","Bit 0 - Software Reset",14,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",14,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",14,[[],["runstdby_w",3]]],[11,"lpmux","","Bit 7 - Low-Power Mux",14,[[],["lpmux_w",3]]],[0,"ctrlb","atsamd11c::ac","Control B",null,null],[3,"START0_W","atsamd11c::ac::ctrlb","Write proxy for field `START0`",null,null],[3,"START1_W","","Write proxy for field `START1`",null,null],[6,"W","","Writer for register CTRLB",null,null],[11,"set_bit","","Sets the field bit",15,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",15,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",15,[[],["w",6]]],[11,"set_bit","","Sets the field bit",16,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",16,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",16,[[],["w",6]]],[11,"start0","atsamd11c::generic","Bit 0 - Comparator 0 Start Comparison",7,[[],["start0_w",3]]],[11,"start1","","Bit 1 - Comparator 1 Start Comparison",7,[[],["start1_w",3]]],[11,"start0","atsamd11c::ac::ctrlb","Bit 0 - Comparator 0 Start Comparison",17,[[],["start0_w",3]]],[11,"start1","","Bit 1 - Comparator 1 Start Comparison",17,[[],["start1_w",3]]],[0,"evctrl","atsamd11c::ac","Event Control",null,null],[3,"COMPEO0_W","atsamd11c::ac::evctrl","Write proxy for field `COMPEO0`",null,null],[3,"COMPEO1_W","","Write proxy for field `COMPEO1`",null,null],[3,"WINEO0_W","","Write proxy for field `WINEO0`",null,null],[3,"COMPEI0_W","","Write proxy for field `COMPEI0`",null,null],[3,"COMPEI1_W","","Write proxy for field `COMPEI1`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"COMPEO0_R","","Reader of field `COMPEO0`",null,null],[6,"COMPEO1_R","","Reader of field `COMPEO1`",null,null],[6,"WINEO0_R","","Reader of field `WINEO0`",null,null],[6,"COMPEI0_R","","Reader of field `COMPEI0`",null,null],[6,"COMPEI1_R","","Reader of field `COMPEI1`",null,null],[11,"set_bit","","Sets the field bit",18,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",18,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",18,[[],["w",6]]],[11,"set_bit","","Sets the field bit",19,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",19,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",19,[[],["w",6]]],[11,"set_bit","","Sets the field bit",20,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",20,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",20,[[],["w",6]]],[11,"set_bit","","Sets the field bit",21,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",21,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",21,[[],["w",6]]],[11,"set_bit","","Sets the field bit",22,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",22,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",22,[[],["w",6]]],[11,"compeo0","atsamd11c::generic","Bit 0 - Comparator 0 Event Output Enable",6,[[],["compeo0_r",6]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",6,[[],["compeo1_r",6]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",6,[[],["wineo0_r",6]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",6,[[],["compei0_r",6]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",6,[[],["compei1_r",6]]],[11,"compeo0","atsamd11c::ac::evctrl","Bit 0 - Comparator 0 Event Output Enable",23,[[],["compeo0_r",6]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",23,[[],["compeo1_r",6]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",23,[[],["wineo0_r",6]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",23,[[],["compei0_r",6]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",23,[[],["compei1_r",6]]],[11,"compeo0","atsamd11c::generic","Bit 0 - Comparator 0 Event Output Enable",7,[[],["compeo0_w",3]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",7,[[],["compeo1_w",3]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",7,[[],["wineo0_w",3]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",7,[[],["compei0_w",3]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",7,[[],["compei1_w",3]]],[11,"compeo0","atsamd11c::ac::evctrl","Bit 0 - Comparator 0 Event Output Enable",24,[[],["compeo0_w",3]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",24,[[],["compeo1_w",3]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",24,[[],["wineo0_w",3]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input",24,[[],["compei0_w",3]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input",24,[[],["compei1_w",3]]],[0,"intenclr","atsamd11c::ac","Interrupt Enable Clear",null,null],[3,"COMP0_W","atsamd11c::ac::intenclr","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",25,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",25,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",25,[[],["w",6]]],[11,"set_bit","","Sets the field bit",26,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",26,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",26,[[],["w",6]]],[11,"set_bit","","Sets the field bit",27,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",27,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",27,[[],["w",6]]],[11,"comp0","atsamd11c::generic","Bit 0 - Comparator 0 Interrupt Enable",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",6,[[],["win0_r",6]]],[11,"comp0","atsamd11c::ac::intenclr","Bit 0 - Comparator 0 Interrupt Enable",28,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",28,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",28,[[],["win0_r",6]]],[11,"comp0","atsamd11c::generic","Bit 0 - Comparator 0 Interrupt Enable",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",7,[[],["win0_w",3]]],[11,"comp0","atsamd11c::ac::intenclr","Bit 0 - Comparator 0 Interrupt Enable",29,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",29,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",29,[[],["win0_w",3]]],[0,"intenset","atsamd11c::ac","Interrupt Enable Set",null,null],[3,"COMP0_W","atsamd11c::ac::intenset","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",30,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",30,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",30,[[],["w",6]]],[11,"set_bit","","Sets the field bit",31,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",31,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",31,[[],["w",6]]],[11,"set_bit","","Sets the field bit",32,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",32,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",32,[[],["w",6]]],[11,"comp0","atsamd11c::generic","Bit 0 - Comparator 0 Interrupt Enable",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",6,[[],["win0_r",6]]],[11,"comp0","atsamd11c::ac::intenset","Bit 0 - Comparator 0 Interrupt Enable",33,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",33,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",33,[[],["win0_r",6]]],[11,"comp0","atsamd11c::generic","Bit 0 - Comparator 0 Interrupt Enable",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",7,[[],["win0_w",3]]],[11,"comp0","atsamd11c::ac::intenset","Bit 0 - Comparator 0 Interrupt Enable",34,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",34,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",34,[[],["win0_w",3]]],[0,"intflag","atsamd11c::ac","Interrupt Flag Status and Clear",null,null],[3,"COMP0_W","atsamd11c::ac::intflag","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",35,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",35,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",35,[[],["w",6]]],[11,"set_bit","","Sets the field bit",36,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",36,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",36,[[],["w",6]]],[11,"set_bit","","Sets the field bit",37,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",37,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",37,[[],["w",6]]],[11,"comp0","atsamd11c::generic","Bit 0 - Comparator 0",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0",6,[[],["win0_r",6]]],[11,"comp0","atsamd11c::ac::intflag","Bit 0 - Comparator 0",38,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1",38,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0",38,[[],["win0_r",6]]],[11,"comp0","atsamd11c::generic","Bit 0 - Comparator 0",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0",7,[[],["win0_w",3]]],[11,"comp0","atsamd11c::ac::intflag","Bit 0 - Comparator 0",39,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1",39,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0",39,[[],["win0_w",3]]],[0,"statusa","atsamd11c::ac","Status A",null,null],[4,"WSTATE0_A","atsamd11c::ac::statusa","Window 0 Current State",null,null],[13,"ABOVE","","0: Signal is above window",40,null],[13,"INSIDE","","1: Signal is inside window",40,null],[13,"BELOW","","2: Signal is below window",40,null],[6,"R","","Reader of register STATUSA",null,null],[6,"STATE0_R","","Reader of field `STATE0`",null,null],[6,"STATE1_R","","Reader of field `STATE1`",null,null],[6,"WSTATE0_R","","Reader of field `WSTATE0`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["wstate0_a",4],["variant",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"variant","atsamd11c::ac::statusa","Get enumerated values variant",41,[[],[["wstate0_a",4],["variant",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",41,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",41,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",41,[[]]],[11,"state0","atsamd11c::generic","Bit 0 - Comparator 0 Current State",6,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",6,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",6,[[],["wstate0_r",6]]],[11,"state0","atsamd11c::ac::statusa","Bit 0 - Comparator 0 Current State",42,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",42,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",42,[[],["wstate0_r",6]]],[0,"statusb","atsamd11c::ac","Status B",null,null],[6,"R","atsamd11c::ac::statusb","Reader of register STATUSB",null,null],[6,"READY0_R","","Reader of field `READY0`",null,null],[6,"READY1_R","","Reader of field `READY1`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"ready0","atsamd11c::generic","Bit 0 - Comparator 0 Ready",6,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - Comparator 1 Ready",6,[[],["ready1_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"ready0","atsamd11c::ac::statusb","Bit 0 - Comparator 0 Ready",43,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - Comparator 1 Ready",43,[[],["ready1_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",43,[[],["syncbusy_r",6]]],[0,"statusc","atsamd11c::ac","Status C",null,null],[4,"WSTATE0_A","atsamd11c::ac::statusc","Window 0 Current State",null,null],[13,"ABOVE","","0: Signal is above window",44,null],[13,"INSIDE","","1: Signal is inside window",44,null],[13,"BELOW","","2: Signal is below window",44,null],[6,"R","","Reader of register STATUSC",null,null],[6,"STATE0_R","","Reader of field `STATE0`",null,null],[6,"STATE1_R","","Reader of field `STATE1`",null,null],[6,"WSTATE0_R","","Reader of field `WSTATE0`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["wstate0_a",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"variant","atsamd11c::ac::statusc","Get enumerated values variant",45,[[],[["variant",4],["wstate0_a",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",45,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",45,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",45,[[]]],[11,"state0","atsamd11c::generic","Bit 0 - Comparator 0 Current State",6,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",6,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",6,[[],["wstate0_r",6]]],[11,"state0","atsamd11c::ac::statusc","Bit 0 - Comparator 0 Current State",46,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",46,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",46,[[],["wstate0_r",6]]],[0,"winctrl","atsamd11c::ac","Window Control",null,null],[3,"WEN0_W","atsamd11c::ac::winctrl","Write proxy for field `WEN0`",null,null],[3,"WINTSEL0_W","","Write proxy for field `WINTSEL0`",null,null],[4,"WINTSEL0_A","","Window 0 Interrupt Selection",null,null],[13,"ABOVE","","0: Interrupt on signal above window",47,null],[13,"INSIDE","","1: Interrupt on signal inside window",47,null],[13,"BELOW","","2: Interrupt on signal below window",47,null],[13,"OUTSIDE","","3: Interrupt on signal outside window",47,null],[6,"R","","Reader of register WINCTRL",null,null],[6,"W","","Writer for register WINCTRL",null,null],[6,"WEN0_R","","Reader of field `WEN0`",null,null],[6,"WINTSEL0_R","","Reader of field `WINTSEL0`",null,null],[11,"set_bit","","Sets the field bit",48,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",48,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",48,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["wintsel0_a",4]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"is_outside","","Checks if the value of the field is `OUTSIDE`",6,[[]]],[11,"variant","atsamd11c::ac::winctrl","Get enumerated values variant",49,[[],["wintsel0_a",4]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",49,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",49,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",49,[[]]],[11,"is_outside","","Checks if the value of the field is `OUTSIDE`",49,[[]]],[11,"variant","","Writes `variant` to the field",50,[[["wintsel0_a",4]],["w",6]]],[11,"above","","Interrupt on signal above window",50,[[],["w",6]]],[11,"inside","","Interrupt on signal inside window",50,[[],["w",6]]],[11,"below","","Interrupt on signal below window",50,[[],["w",6]]],[11,"outside","","Interrupt on signal outside window",50,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",50,[[],["w",6]]],[11,"wen0","atsamd11c::generic","Bit 0 - Window 0 Mode Enable",6,[[],["wen0_r",6]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",6,[[],["wintsel0_r",6]]],[11,"wen0","atsamd11c::ac::winctrl","Bit 0 - Window 0 Mode Enable",51,[[],["wen0_r",6]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",51,[[],["wintsel0_r",6]]],[11,"wen0","atsamd11c::generic","Bit 0 - Window 0 Mode Enable",7,[[],["wen0_w",3]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",7,[[],["wintsel0_w",3]]],[11,"wen0","atsamd11c::ac::winctrl","Bit 0 - Window 0 Mode Enable",52,[[],["wen0_w",3]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",52,[[],["wintsel0_w",3]]],[0,"compctrl","atsamd11c::ac","Comparator Control n",null,null],[3,"ENABLE_W","atsamd11c::ac::compctrl","Write proxy for field `ENABLE`",null,null],[3,"SINGLE_W","","Write proxy for field `SINGLE`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"INTSEL_W","","Write proxy for field `INTSEL`",null,null],[3,"MUXNEG_W","","Write proxy for field `MUXNEG`",null,null],[3,"MUXPOS_W","","Write proxy for field `MUXPOS`",null,null],[3,"SWAP_W","","Write proxy for field `SWAP`",null,null],[3,"OUT_W","","Write proxy for field `OUT`",null,null],[3,"HYST_W","","Write proxy for field `HYST`",null,null],[3,"FLEN_W","","Write proxy for field `FLEN`",null,null],[4,"SPEED_A","","Speed Selection",null,null],[13,"LOW","","0: Low speed",53,null],[13,"HIGH","","1: High speed",53,null],[4,"INTSEL_A","","Interrupt Selection",null,null],[13,"TOGGLE","","0: Interrupt on comparator output toggle",54,null],[13,"RISING","","1: Interrupt on comparator output rising",54,null],[13,"FALLING","","2: Interrupt on comparator output falling",54,null],[13,"EOC","","3: Interrupt on end of comparison (single-shot mode only)",54,null],[4,"MUXNEG_A","","Negative Input Mux Selection",null,null],[13,"PIN0","","0: I/O pin 0",55,null],[13,"PIN1","","1: I/O pin 1",55,null],[13,"PIN2","","2: I/O pin 2",55,null],[13,"PIN3","","3: I/O pin 3",55,null],[13,"GND","","4: Ground",55,null],[13,"VSCALE","","5: VDD scaler",55,null],[13,"BANDGAP","","6: Internal bandgap voltage",55,null],[13,"DAC","","7: DAC output",55,null],[4,"MUXPOS_A","","Positive Input Mux Selection",null,null],[13,"PIN0","","0: I/O pin 0",56,null],[13,"PIN1","","1: I/O pin 1",56,null],[13,"PIN2","","2: I/O pin 2",56,null],[13,"PIN3","","3: I/O pin 3",56,null],[4,"OUT_A","","Output",null,null],[13,"OFF","","0: The output of COMPn is not routed to the COMPn I/O port",57,null],[13,"ASYNC","","1: The asynchronous output of COMPn is routed to the COMPn…",57,null],[13,"SYNC","","2: The synchronous output (including filtering) of COMPn…",57,null],[4,"FLEN_A","","Filter Length",null,null],[13,"OFF","","0: No filtering",58,null],[13,"MAJ3","","1: 3-bit majority function (2 of 3)",58,null],[13,"MAJ5","","2: 5-bit majority function (3 of 5)",58,null],[6,"R","","Reader of register COMPCTRL%s",null,null],[6,"W","","Writer for register COMPCTRL%s",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SINGLE_R","","Reader of field `SINGLE`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"INTSEL_R","","Reader of field `INTSEL`",null,null],[6,"MUXNEG_R","","Reader of field `MUXNEG`",null,null],[6,"MUXPOS_R","","Reader of field `MUXPOS`",null,null],[6,"SWAP_R","","Reader of field `SWAP`",null,null],[6,"OUT_R","","Reader of field `OUT`",null,null],[6,"HYST_R","","Reader of field `HYST`",null,null],[6,"FLEN_R","","Reader of field `FLEN`",null,null],[11,"set_bit","","Sets the field bit",59,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",59,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",59,[[],["w",6]]],[11,"set_bit","","Sets the field bit",60,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",60,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",60,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["speed_a",4]]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd11c::ac::compctrl","Get enumerated values variant",61,[[],[["variant",4],["speed_a",4]]]],[11,"is_low","","Checks if the value of the field is `LOW`",61,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",61,[[]]],[11,"variant","","Writes `variant` to the field",62,[[["speed_a",4]],["w",6]]],[11,"low","","Low speed",62,[[],["w",6]]],[11,"high","","High speed",62,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",62,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["intsel_a",4]]],[11,"is_toggle","","Checks if the value of the field is `TOGGLE`",6,[[]]],[11,"is_rising","","Checks if the value of the field is `RISING`",6,[[]]],[11,"is_falling","","Checks if the value of the field is `FALLING`",6,[[]]],[11,"is_eoc","","Checks if the value of the field is `EOC`",6,[[]]],[11,"variant","atsamd11c::ac::compctrl","Get enumerated values variant",63,[[],["intsel_a",4]]],[11,"is_toggle","","Checks if the value of the field is `TOGGLE`",63,[[]]],[11,"is_rising","","Checks if the value of the field is `RISING`",63,[[]]],[11,"is_falling","","Checks if the value of the field is `FALLING`",63,[[]]],[11,"is_eoc","","Checks if the value of the field is `EOC`",63,[[]]],[11,"variant","","Writes `variant` to the field",64,[[["intsel_a",4]],["w",6]]],[11,"toggle","","Interrupt on comparator output toggle",64,[[],["w",6]]],[11,"rising","","Interrupt on comparator output rising",64,[[],["w",6]]],[11,"falling","","Interrupt on comparator output falling",64,[[],["w",6]]],[11,"eoc","","Interrupt on end of comparison (single-shot mode only)",64,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",64,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["muxneg_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",6,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",6,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"variant","atsamd11c::ac::compctrl","Get enumerated values variant",65,[[],["muxneg_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",65,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",65,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",65,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",65,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",65,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",65,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",65,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",65,[[]]],[11,"variant","","Writes `variant` to the field",66,[[["muxneg_a",4]],["w",6]]],[11,"pin0","","I/O pin 0",66,[[],["w",6]]],[11,"pin1","","I/O pin 1",66,[[],["w",6]]],[11,"pin2","","I/O pin 2",66,[[],["w",6]]],[11,"pin3","","I/O pin 3",66,[[],["w",6]]],[11,"gnd","","Ground",66,[[],["w",6]]],[11,"vscale","","VDD scaler",66,[[],["w",6]]],[11,"bandgap","","Internal bandgap voltage",66,[[],["w",6]]],[11,"dac","","DAC output",66,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",66,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["muxpos_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"variant","atsamd11c::ac::compctrl","Get enumerated values variant",67,[[],["muxpos_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",67,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",67,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",67,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",67,[[]]],[11,"variant","","Writes `variant` to the field",68,[[["muxpos_a",4]],["w",6]]],[11,"pin0","","I/O pin 0",68,[[],["w",6]]],[11,"pin1","","I/O pin 1",68,[[],["w",6]]],[11,"pin2","","I/O pin 2",68,[[],["w",6]]],[11,"pin3","","I/O pin 3",68,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",68,[[],["w",6]]],[11,"set_bit","","Sets the field bit",69,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",69,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",69,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["out_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"variant","atsamd11c::ac::compctrl","Get enumerated values variant",70,[[],[["variant",4],["out_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",70,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",70,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",70,[[]]],[11,"variant","","Writes `variant` to the field",71,[[["out_a",4]],["w",6]]],[11,"off","","The output of COMPn is not routed to the COMPn I/O port",71,[[],["w",6]]],[11,"async_","","The asynchronous output of COMPn is routed to the COMPn…",71,[[],["w",6]]],[11,"sync","","The synchronous output (including filtering) of COMPn is…",71,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",71,[[],["w",6]]],[11,"set_bit","","Sets the field bit",72,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",72,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",72,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["flen_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_maj3","","Checks if the value of the field is `MAJ3`",6,[[]]],[11,"is_maj5","","Checks if the value of the field is `MAJ5`",6,[[]]],[11,"variant","atsamd11c::ac::compctrl","Get enumerated values variant",73,[[],[["variant",4],["flen_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",73,[[]]],[11,"is_maj3","","Checks if the value of the field is `MAJ3`",73,[[]]],[11,"is_maj5","","Checks if the value of the field is `MAJ5`",73,[[]]],[11,"variant","","Writes `variant` to the field",74,[[["flen_a",4]],["w",6]]],[11,"off","","No filtering",74,[[],["w",6]]],[11,"maj3","","3-bit majority function (2 of 3)",74,[[],["w",6]]],[11,"maj5","","5-bit majority function (3 of 5)",74,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",74,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 0 - Enable",6,[[],["enable_r",6]]],[11,"single","","Bit 1 - Single-Shot Mode",6,[[],["single_r",6]]],[11,"speed","","Bits 2:3 - Speed Selection",6,[[],["speed_r",6]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",6,[[],["intsel_r",6]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",6,[[],["muxneg_r",6]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",6,[[],["muxpos_r",6]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",6,[[],["swap_r",6]]],[11,"out","","Bits 16:17 - Output",6,[[],["out_r",6]]],[11,"hyst","","Bit 19 - Hysteresis Enable",6,[[],["hyst_r",6]]],[11,"flen","","Bits 24:26 - Filter Length",6,[[],["flen_r",6]]],[11,"enable","atsamd11c::ac::compctrl","Bit 0 - Enable",75,[[],["enable_r",6]]],[11,"single","","Bit 1 - Single-Shot Mode",75,[[],["single_r",6]]],[11,"speed","","Bits 2:3 - Speed Selection",75,[[],["speed_r",6]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",75,[[],["intsel_r",6]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",75,[[],["muxneg_r",6]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",75,[[],["muxpos_r",6]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",75,[[],["swap_r",6]]],[11,"out","","Bits 16:17 - Output",75,[[],["out_r",6]]],[11,"hyst","","Bit 19 - Hysteresis Enable",75,[[],["hyst_r",6]]],[11,"flen","","Bits 24:26 - Filter Length",75,[[],["flen_r",6]]],[11,"enable","atsamd11c::generic","Bit 0 - Enable",7,[[],["enable_w",3]]],[11,"single","","Bit 1 - Single-Shot Mode",7,[[],["single_w",3]]],[11,"speed","","Bits 2:3 - Speed Selection",7,[[],["speed_w",3]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",7,[[],["intsel_w",3]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",7,[[],["muxneg_w",3]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",7,[[],["muxpos_w",3]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",7,[[],["swap_w",3]]],[11,"out","","Bits 16:17 - Output",7,[[],["out_w",3]]],[11,"hyst","","Bit 19 - Hysteresis Enable",7,[[],["hyst_w",3]]],[11,"flen","","Bits 24:26 - Filter Length",7,[[],["flen_w",3]]],[11,"enable","atsamd11c::ac::compctrl","Bit 0 - Enable",76,[[],["enable_w",3]]],[11,"single","","Bit 1 - Single-Shot Mode",76,[[],["single_w",3]]],[11,"speed","","Bits 2:3 - Speed Selection",76,[[],["speed_w",3]]],[11,"intsel","","Bits 5:6 - Interrupt Selection",76,[[],["intsel_w",3]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",76,[[],["muxneg_w",3]]],[11,"muxpos","","Bits 12:13 - Positive Input Mux Selection",76,[[],["muxpos_w",3]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",76,[[],["swap_w",3]]],[11,"out","","Bits 16:17 - Output",76,[[],["out_w",3]]],[11,"hyst","","Bit 19 - Hysteresis Enable",76,[[],["hyst_w",3]]],[11,"flen","","Bits 24:26 - Filter Length",76,[[],["flen_w",3]]],[0,"scaler","atsamd11c::ac","Scaler n",null,null],[3,"VALUE_W","atsamd11c::ac::scaler","Write proxy for field `VALUE`",null,null],[6,"R","","Reader of register SCALER%s",null,null],[6,"W","","Writer for register SCALER%s",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[11,"bits","","Writes raw bits to the field",77,[[],["w",6]]],[11,"value","atsamd11c::generic","Bits 0:5 - Scaler Value",6,[[],["value_r",6]]],[11,"value","atsamd11c::ac::scaler","Bits 0:5 - Scaler Value",78,[[],["value_r",6]]],[11,"value","atsamd11c::generic","Bits 0:5 - Scaler Value",7,[[],["value_w",3]]],[11,"value","atsamd11c::ac::scaler","Bits 0:5 - Scaler Value",79,[[],["value_w",3]]],[6,"CTRLA","atsamd11c::ac","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUSA","","Status A",null,null],[6,"STATUSB","","Status B",null,null],[6,"STATUSC","","Status C",null,null],[6,"WINCTRL","","Window Control",null,null],[6,"COMPCTRL","","Comparator Control n",null,null],[6,"SCALER","","Scaler n",null,null],[0,"adc","atsamd11c","Analog Digital Converter",null,null],[3,"RegisterBlock","atsamd11c::adc","Register block",null,null],[12,"ctrla","","0x00 - Control A",80,null],[12,"refctrl","","0x01 - Reference Control",80,null],[12,"avgctrl","","0x02 - Average Control",80,null],[12,"sampctrl","","0x03 - Sampling Time Control",80,null],[12,"ctrlb","","0x04 - Control B",80,null],[12,"winctrl","","0x08 - Window Monitor Control",80,null],[12,"swtrig","","0x0c - Software Trigger",80,null],[12,"inputctrl","","0x10 - Input Control",80,null],[12,"evctrl","","0x14 - Event Control",80,null],[12,"intenclr","","0x16 - Interrupt Enable Clear",80,null],[12,"intenset","","0x17 - Interrupt Enable Set",80,null],[12,"intflag","","0x18 - Interrupt Flag Status and Clear",80,null],[12,"status","","0x19 - Status",80,null],[12,"result","","0x1a - Result",80,null],[12,"winlt","","0x1c - Window Monitor Lower Threshold",80,null],[12,"winut","","0x20 - Window Monitor Upper Threshold",80,null],[12,"gaincorr","","0x24 - Gain Correction",80,null],[12,"offsetcorr","","0x26 - Offset Correction",80,null],[12,"calib","","0x28 - Calibration",80,null],[12,"dbgctrl","","0x2a - Debug Control",80,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd11c::adc::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"set_bit","","Sets the field bit",81,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",81,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",81,[[],["w",6]]],[11,"set_bit","","Sets the field bit",82,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",82,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",82,[[],["w",6]]],[11,"set_bit","","Sets the field bit",83,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",83,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",83,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"swrst","atsamd11c::adc::ctrla","Bit 0 - Software Reset",84,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",84,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",84,[[],["runstdby_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"swrst","atsamd11c::adc::ctrla","Bit 0 - Software Reset",85,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",85,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",85,[[],["runstdby_w",3]]],[0,"refctrl","atsamd11c::adc","Reference Control",null,null],[3,"REFSEL_W","atsamd11c::adc::refctrl","Write proxy for field `REFSEL`",null,null],[3,"REFCOMP_W","","Write proxy for field `REFCOMP`",null,null],[4,"REFSEL_A","","Reference Selection",null,null],[13,"INT1V","","0: 1.0V voltage reference",86,null],[13,"INTVCC0","","1: 1/1.48 VDDANA",86,null],[13,"INTVCC1","","2: 1/2 VDDANA (only for VDDANA > 2.0V)",86,null],[13,"AREFA","","3: External reference",86,null],[13,"AREFB","","4: External reference",86,null],[6,"R","","Reader of register REFCTRL",null,null],[6,"W","","Writer for register REFCTRL",null,null],[6,"REFSEL_R","","Reader of field `REFSEL`",null,null],[6,"REFCOMP_R","","Reader of field `REFCOMP`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["refsel_a",4],["variant",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",6,[[]]],[11,"is_intvcc0","","Checks if the value of the field is `INTVCC0`",6,[[]]],[11,"is_intvcc1","","Checks if the value of the field is `INTVCC1`",6,[[]]],[11,"is_arefa","","Checks if the value of the field is `AREFA`",6,[[]]],[11,"is_arefb","","Checks if the value of the field is `AREFB`",6,[[]]],[11,"variant","atsamd11c::adc::refctrl","Get enumerated values variant",87,[[],[["refsel_a",4],["variant",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",87,[[]]],[11,"is_intvcc0","","Checks if the value of the field is `INTVCC0`",87,[[]]],[11,"is_intvcc1","","Checks if the value of the field is `INTVCC1`",87,[[]]],[11,"is_arefa","","Checks if the value of the field is `AREFA`",87,[[]]],[11,"is_arefb","","Checks if the value of the field is `AREFB`",87,[[]]],[11,"variant","","Writes `variant` to the field",88,[[["refsel_a",4]],["w",6]]],[11,"int1v","","1.0V voltage reference",88,[[],["w",6]]],[11,"intvcc0","","1/1.48 VDDANA",88,[[],["w",6]]],[11,"intvcc1","","1/2 VDDANA (only for VDDANA > 2.0V)",88,[[],["w",6]]],[11,"arefa","","External reference",88,[[],["w",6]]],[11,"arefb","","External reference",88,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",88,[[],["w",6]]],[11,"set_bit","","Sets the field bit",89,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",89,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",89,[[],["w",6]]],[11,"refsel","atsamd11c::generic","Bits 0:3 - Reference Selection",6,[[],["refsel_r",6]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",6,[[],["refcomp_r",6]]],[11,"refsel","atsamd11c::adc::refctrl","Bits 0:3 - Reference Selection",90,[[],["refsel_r",6]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",90,[[],["refcomp_r",6]]],[11,"refsel","atsamd11c::generic","Bits 0:3 - Reference Selection",7,[[],["refsel_w",3]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",7,[[],["refcomp_w",3]]],[11,"refsel","atsamd11c::adc::refctrl","Bits 0:3 - Reference Selection",91,[[],["refsel_w",3]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",91,[[],["refcomp_w",3]]],[0,"avgctrl","atsamd11c::adc","Average Control",null,null],[3,"SAMPLENUM_W","atsamd11c::adc::avgctrl","Write proxy for field `SAMPLENUM`",null,null],[3,"ADJRES_W","","Write proxy for field `ADJRES`",null,null],[4,"SAMPLENUM_A","","Number of Samples to be Collected",null,null],[13,"_1","","0: 1 sample",92,null],[13,"_2","","1: 2 samples",92,null],[13,"_4","","2: 4 samples",92,null],[13,"_8","","3: 8 samples",92,null],[13,"_16","","4: 16 samples",92,null],[13,"_32","","5: 32 samples",92,null],[13,"_64","","6: 64 samples",92,null],[13,"_128","","7: 128 samples",92,null],[13,"_256","","8: 256 samples",92,null],[13,"_512","","9: 512 samples",92,null],[13,"_1024","","10: 1024 samples",92,null],[6,"R","","Reader of register AVGCTRL",null,null],[6,"W","","Writer for register AVGCTRL",null,null],[6,"SAMPLENUM_R","","Reader of field `SAMPLENUM`",null,null],[6,"ADJRES_R","","Reader of field `ADJRES`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["samplenum_a",4],["variant",4]]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",6,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"variant","atsamd11c::adc::avgctrl","Get enumerated values variant",93,[[],[["samplenum_a",4],["variant",4]]]],[11,"is_1","","Checks if the value of the field is `_1`",93,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",93,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",93,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",93,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",93,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",93,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",93,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",93,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",93,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",93,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",93,[[]]],[11,"variant","","Writes `variant` to the field",94,[[["samplenum_a",4]],["w",6]]],[11,"_1","","1 sample",94,[[],["w",6]]],[11,"_2","","2 samples",94,[[],["w",6]]],[11,"_4","","4 samples",94,[[],["w",6]]],[11,"_8","","8 samples",94,[[],["w",6]]],[11,"_16","","16 samples",94,[[],["w",6]]],[11,"_32","","32 samples",94,[[],["w",6]]],[11,"_64","","64 samples",94,[[],["w",6]]],[11,"_128","","128 samples",94,[[],["w",6]]],[11,"_256","","256 samples",94,[[],["w",6]]],[11,"_512","","512 samples",94,[[],["w",6]]],[11,"_1024","","1024 samples",94,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",94,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",95,[[],["w",6]]],[11,"samplenum","atsamd11c::generic","Bits 0:3 - Number of Samples to be Collected",6,[[],["samplenum_r",6]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",6,[[],["adjres_r",6]]],[11,"samplenum","atsamd11c::adc::avgctrl","Bits 0:3 - Number of Samples to be Collected",96,[[],["samplenum_r",6]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",96,[[],["adjres_r",6]]],[11,"samplenum","atsamd11c::generic","Bits 0:3 - Number of Samples to be Collected",7,[[],["samplenum_w",3]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",7,[[],["adjres_w",3]]],[11,"samplenum","atsamd11c::adc::avgctrl","Bits 0:3 - Number of Samples to be Collected",97,[[],["samplenum_w",3]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",97,[[],["adjres_w",3]]],[0,"sampctrl","atsamd11c::adc","Sampling Time Control",null,null],[3,"SAMPLEN_W","atsamd11c::adc::sampctrl","Write proxy for field `SAMPLEN`",null,null],[6,"R","","Reader of register SAMPCTRL",null,null],[6,"W","","Writer for register SAMPCTRL",null,null],[6,"SAMPLEN_R","","Reader of field `SAMPLEN`",null,null],[11,"bits","","Writes raw bits to the field",98,[[],["w",6]]],[11,"samplen","atsamd11c::generic","Bits 0:5 - Sampling Time Length",6,[[],["samplen_r",6]]],[11,"samplen","atsamd11c::adc::sampctrl","Bits 0:5 - Sampling Time Length",99,[[],["samplen_r",6]]],[11,"samplen","atsamd11c::generic","Bits 0:5 - Sampling Time Length",7,[[],["samplen_w",3]]],[11,"samplen","atsamd11c::adc::sampctrl","Bits 0:5 - Sampling Time Length",100,[[],["samplen_w",3]]],[0,"ctrlb","atsamd11c::adc","Control B",null,null],[3,"DIFFMODE_W","atsamd11c::adc::ctrlb","Write proxy for field `DIFFMODE`",null,null],[3,"LEFTADJ_W","","Write proxy for field `LEFTADJ`",null,null],[3,"FREERUN_W","","Write proxy for field `FREERUN`",null,null],[3,"CORREN_W","","Write proxy for field `CORREN`",null,null],[3,"RESSEL_W","","Write proxy for field `RESSEL`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"RESSEL_A","","Conversion Result Resolution",null,null],[13,"_12BIT","","0: 12-bit result",101,null],[13,"_16BIT","","1: For averaging mode output",101,null],[13,"_10BIT","","2: 10-bit result",101,null],[13,"_8BIT","","3: 8-bit result",101,null],[4,"PRESCALER_A","","Prescaler Configuration",null,null],[13,"DIV4","","0: Peripheral clock divided by 4",102,null],[13,"DIV8","","1: Peripheral clock divided by 8",102,null],[13,"DIV16","","2: Peripheral clock divided by 16",102,null],[13,"DIV32","","3: Peripheral clock divided by 32",102,null],[13,"DIV64","","4: Peripheral clock divided by 64",102,null],[13,"DIV128","","5: Peripheral clock divided by 128",102,null],[13,"DIV256","","6: Peripheral clock divided by 256",102,null],[13,"DIV512","","7: Peripheral clock divided by 512",102,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"DIFFMODE_R","","Reader of field `DIFFMODE`",null,null],[6,"LEFTADJ_R","","Reader of field `LEFTADJ`",null,null],[6,"FREERUN_R","","Reader of field `FREERUN`",null,null],[6,"CORREN_R","","Reader of field `CORREN`",null,null],[6,"RESSEL_R","","Reader of field `RESSEL`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",105,[[],["w",6]]],[11,"set_bit","","Sets the field bit",106,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",106,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",106,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["ressel_a",4]]],[11,"is_12bit","","Checks if the value of the field is `_12BIT`",6,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",6,[[]]],[11,"is_10bit","","Checks if the value of the field is `_10BIT`",6,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",6,[[]]],[11,"variant","atsamd11c::adc::ctrlb","Get enumerated values variant",107,[[],["ressel_a",4]]],[11,"is_12bit","","Checks if the value of the field is `_12BIT`",107,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",107,[[]]],[11,"is_10bit","","Checks if the value of the field is `_10BIT`",107,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",107,[[]]],[11,"variant","","Writes `variant` to the field",108,[[["ressel_a",4]],["w",6]]],[11,"_12bit","","12-bit result",108,[[],["w",6]]],[11,"_16bit","","For averaging mode output",108,[[],["w",6]]],[11,"_10bit","","10-bit result",108,[[],["w",6]]],[11,"_8bit","","8-bit result",108,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",108,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"variant","atsamd11c::adc::ctrlb","Get enumerated values variant",109,[[],["prescaler_a",4]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",109,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",109,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",109,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",109,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",109,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",109,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",109,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",109,[[]]],[11,"variant","","Writes `variant` to the field",110,[[["prescaler_a",4]],["w",6]]],[11,"div4","","Peripheral clock divided by 4",110,[[],["w",6]]],[11,"div8","","Peripheral clock divided by 8",110,[[],["w",6]]],[11,"div16","","Peripheral clock divided by 16",110,[[],["w",6]]],[11,"div32","","Peripheral clock divided by 32",110,[[],["w",6]]],[11,"div64","","Peripheral clock divided by 64",110,[[],["w",6]]],[11,"div128","","Peripheral clock divided by 128",110,[[],["w",6]]],[11,"div256","","Peripheral clock divided by 256",110,[[],["w",6]]],[11,"div512","","Peripheral clock divided by 512",110,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",110,[[],["w",6]]],[11,"diffmode","atsamd11c::generic","Bit 0 - Differential Mode",6,[[],["diffmode_r",6]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",6,[[],["leftadj_r",6]]],[11,"freerun","","Bit 2 - Free Running Mode",6,[[],["freerun_r",6]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",6,[[],["corren_r",6]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",6,[[],["ressel_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",6,[[],["prescaler_r",6]]],[11,"diffmode","atsamd11c::adc::ctrlb","Bit 0 - Differential Mode",111,[[],["diffmode_r",6]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",111,[[],["leftadj_r",6]]],[11,"freerun","","Bit 2 - Free Running Mode",111,[[],["freerun_r",6]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",111,[[],["corren_r",6]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",111,[[],["ressel_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",111,[[],["prescaler_r",6]]],[11,"diffmode","atsamd11c::generic","Bit 0 - Differential Mode",7,[[],["diffmode_w",3]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",7,[[],["leftadj_w",3]]],[11,"freerun","","Bit 2 - Free Running Mode",7,[[],["freerun_w",3]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",7,[[],["corren_w",3]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",7,[[],["ressel_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",7,[[],["prescaler_w",3]]],[11,"diffmode","atsamd11c::adc::ctrlb","Bit 0 - Differential Mode",112,[[],["diffmode_w",3]]],[11,"leftadj","","Bit 1 - Left-Adjusted Result",112,[[],["leftadj_w",3]]],[11,"freerun","","Bit 2 - Free Running Mode",112,[[],["freerun_w",3]]],[11,"corren","","Bit 3 - Digital Correction Logic Enabled",112,[[],["corren_w",3]]],[11,"ressel","","Bits 4:5 - Conversion Result Resolution",112,[[],["ressel_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",112,[[],["prescaler_w",3]]],[0,"winctrl","atsamd11c::adc","Window Monitor Control",null,null],[3,"WINMODE_W","atsamd11c::adc::winctrl","Write proxy for field `WINMODE`",null,null],[4,"WINMODE_A","","Window Monitor Mode",null,null],[13,"DISABLE","","0: No window mode (default)",113,null],[13,"MODE1","","1: Mode 1: RESULT > WINLT",113,null],[13,"MODE2","","2: Mode 2: RESULT < WINUT",113,null],[13,"MODE3","","3: Mode 3: WINLT < RESULT < WINUT",113,null],[13,"MODE4","","4: Mode 4: !(WINLT < RESULT < WINUT)",113,null],[6,"R","","Reader of register WINCTRL",null,null],[6,"W","","Writer for register WINCTRL",null,null],[6,"WINMODE_R","","Reader of field `WINMODE`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["winmode_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_mode1","","Checks if the value of the field is `MODE1`",6,[[]]],[11,"is_mode2","","Checks if the value of the field is `MODE2`",6,[[]]],[11,"is_mode3","","Checks if the value of the field is `MODE3`",6,[[]]],[11,"is_mode4","","Checks if the value of the field is `MODE4`",6,[[]]],[11,"variant","atsamd11c::adc::winctrl","Get enumerated values variant",114,[[],[["variant",4],["winmode_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",114,[[]]],[11,"is_mode1","","Checks if the value of the field is `MODE1`",114,[[]]],[11,"is_mode2","","Checks if the value of the field is `MODE2`",114,[[]]],[11,"is_mode3","","Checks if the value of the field is `MODE3`",114,[[]]],[11,"is_mode4","","Checks if the value of the field is `MODE4`",114,[[]]],[11,"variant","","Writes `variant` to the field",115,[[["winmode_a",4]],["w",6]]],[11,"disable","","No window mode (default)",115,[[],["w",6]]],[11,"mode1","","Mode 1: RESULT > WINLT",115,[[],["w",6]]],[11,"mode2","","Mode 2: RESULT < WINUT",115,[[],["w",6]]],[11,"mode3","","Mode 3: WINLT < RESULT < WINUT",115,[[],["w",6]]],[11,"mode4","","Mode 4: !(WINLT < RESULT < WINUT)",115,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",115,[[],["w",6]]],[11,"winmode","atsamd11c::generic","Bits 0:2 - Window Monitor Mode",6,[[],["winmode_r",6]]],[11,"winmode","atsamd11c::adc::winctrl","Bits 0:2 - Window Monitor Mode",116,[[],["winmode_r",6]]],[11,"winmode","atsamd11c::generic","Bits 0:2 - Window Monitor Mode",7,[[],["winmode_w",3]]],[11,"winmode","atsamd11c::adc::winctrl","Bits 0:2 - Window Monitor Mode",117,[[],["winmode_w",3]]],[0,"swtrig","atsamd11c::adc","Software Trigger",null,null],[3,"FLUSH_W","atsamd11c::adc::swtrig","Write proxy for field `FLUSH`",null,null],[3,"START_W","","Write proxy for field `START`",null,null],[6,"R","","Reader of register SWTRIG",null,null],[6,"W","","Writer for register SWTRIG",null,null],[6,"FLUSH_R","","Reader of field `FLUSH`",null,null],[6,"START_R","","Reader of field `START`",null,null],[11,"set_bit","","Sets the field bit",118,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",118,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",118,[[],["w",6]]],[11,"set_bit","","Sets the field bit",119,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",119,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",119,[[],["w",6]]],[11,"flush","atsamd11c::generic","Bit 0 - ADC Conversion Flush",6,[[],["flush_r",6]]],[11,"start","","Bit 1 - ADC Start Conversion",6,[[],["start_r",6]]],[11,"flush","atsamd11c::adc::swtrig","Bit 0 - ADC Conversion Flush",120,[[],["flush_r",6]]],[11,"start","","Bit 1 - ADC Start Conversion",120,[[],["start_r",6]]],[11,"flush","atsamd11c::generic","Bit 0 - ADC Conversion Flush",7,[[],["flush_w",3]]],[11,"start","","Bit 1 - ADC Start Conversion",7,[[],["start_w",3]]],[11,"flush","atsamd11c::adc::swtrig","Bit 0 - ADC Conversion Flush",121,[[],["flush_w",3]]],[11,"start","","Bit 1 - ADC Start Conversion",121,[[],["start_w",3]]],[0,"inputctrl","atsamd11c::adc","Input Control",null,null],[3,"MUXPOS_W","atsamd11c::adc::inputctrl","Write proxy for field `MUXPOS`",null,null],[3,"MUXNEG_W","","Write proxy for field `MUXNEG`",null,null],[3,"INPUTSCAN_W","","Write proxy for field `INPUTSCAN`",null,null],[3,"INPUTOFFSET_W","","Write proxy for field `INPUTOFFSET`",null,null],[3,"GAIN_W","","Write proxy for field `GAIN`",null,null],[4,"MUXPOS_A","","Positive Mux Input Selection",null,null],[13,"PIN0","","0: ADC AIN0 Pin",122,null],[13,"PIN1","","1: ADC AIN1 Pin",122,null],[13,"PIN2","","2: ADC AIN2 Pin",122,null],[13,"PIN3","","3: ADC AIN3 Pin",122,null],[13,"PIN4","","4: ADC AIN4 Pin",122,null],[13,"PIN5","","5: ADC AIN5 Pin",122,null],[13,"PIN6","","6: ADC AIN6 Pin",122,null],[13,"PIN7","","7: ADC AIN7 Pin",122,null],[13,"PIN8","","8: ADC AIN8 Pin",122,null],[13,"PIN9","","9: ADC AIN9 Pin",122,null],[13,"PIN10","","10: ADC AIN10 Pin",122,null],[13,"PIN11","","11: ADC AIN11 Pin",122,null],[13,"PIN12","","12: ADC AIN12 Pin",122,null],[13,"PIN13","","13: ADC AIN13 Pin",122,null],[13,"PIN14","","14: ADC AIN14 Pin",122,null],[13,"PIN15","","15: ADC AIN15 Pin",122,null],[13,"PIN16","","16: ADC AIN16 Pin",122,null],[13,"PIN17","","17: ADC AIN17 Pin",122,null],[13,"PIN18","","18: ADC AIN18 Pin",122,null],[13,"PIN19","","19: ADC AIN19 Pin",122,null],[13,"TEMP","","24: Temperature Reference",122,null],[13,"BANDGAP","","25: Bandgap Voltage",122,null],[13,"SCALEDCOREVCC","","26: 1/4  Scaled Core Supply",122,null],[13,"SCALEDIOVCC","","27: 1/4  Scaled I/O Supply",122,null],[13,"DAC","","28: DAC Output",122,null],[4,"MUXNEG_A","","Negative Mux Input Selection",null,null],[13,"PIN0","","0: ADC AIN0 Pin",123,null],[13,"PIN1","","1: ADC AIN1 Pin",123,null],[13,"PIN2","","2: ADC AIN2 Pin",123,null],[13,"PIN3","","3: ADC AIN3 Pin",123,null],[13,"PIN4","","4: ADC AIN4 Pin",123,null],[13,"PIN5","","5: ADC AIN5 Pin",123,null],[13,"PIN6","","6: ADC AIN6 Pin",123,null],[13,"PIN7","","7: ADC AIN7 Pin",123,null],[13,"GND","","24: Internal Ground",123,null],[13,"IOGND","","25: I/O Ground",123,null],[4,"GAIN_A","","Gain Factor Selection",null,null],[13,"_1X","","0: 1x",124,null],[13,"_2X","","1: 2x",124,null],[13,"_4X","","2: 4x",124,null],[13,"_8X","","3: 8x",124,null],[13,"_16X","","4: 16x",124,null],[13,"DIV2","","15: 1/2x",124,null],[6,"R","","Reader of register INPUTCTRL",null,null],[6,"W","","Writer for register INPUTCTRL",null,null],[6,"MUXPOS_R","","Reader of field `MUXPOS`",null,null],[6,"MUXNEG_R","","Reader of field `MUXNEG`",null,null],[6,"INPUTSCAN_R","","Reader of field `INPUTSCAN`",null,null],[6,"INPUTOFFSET_R","","Reader of field `INPUTOFFSET`",null,null],[6,"GAIN_R","","Reader of field `GAIN`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["muxpos_a",4],["variant",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",6,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",6,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",6,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",6,[[]]],[11,"is_pin8","","Checks if the value of the field is `PIN8`",6,[[]]],[11,"is_pin9","","Checks if the value of the field is `PIN9`",6,[[]]],[11,"is_pin10","","Checks if the value of the field is `PIN10`",6,[[]]],[11,"is_pin11","","Checks if the value of the field is `PIN11`",6,[[]]],[11,"is_pin12","","Checks if the value of the field is `PIN12`",6,[[]]],[11,"is_pin13","","Checks if the value of the field is `PIN13`",6,[[]]],[11,"is_pin14","","Checks if the value of the field is `PIN14`",6,[[]]],[11,"is_pin15","","Checks if the value of the field is `PIN15`",6,[[]]],[11,"is_pin16","","Checks if the value of the field is `PIN16`",6,[[]]],[11,"is_pin17","","Checks if the value of the field is `PIN17`",6,[[]]],[11,"is_pin18","","Checks if the value of the field is `PIN18`",6,[[]]],[11,"is_pin19","","Checks if the value of the field is `PIN19`",6,[[]]],[11,"is_temp","","Checks if the value of the field is `TEMP`",6,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",6,[[]]],[11,"is_scaledcorevcc","","Checks if the value of the field is `SCALEDCOREVCC`",6,[[]]],[11,"is_scalediovcc","","Checks if the value of the field is `SCALEDIOVCC`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"variant","atsamd11c::adc::inputctrl","Get enumerated values variant",125,[[],[["muxpos_a",4],["variant",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",125,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",125,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",125,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",125,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",125,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",125,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",125,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",125,[[]]],[11,"is_pin8","","Checks if the value of the field is `PIN8`",125,[[]]],[11,"is_pin9","","Checks if the value of the field is `PIN9`",125,[[]]],[11,"is_pin10","","Checks if the value of the field is `PIN10`",125,[[]]],[11,"is_pin11","","Checks if the value of the field is `PIN11`",125,[[]]],[11,"is_pin12","","Checks if the value of the field is `PIN12`",125,[[]]],[11,"is_pin13","","Checks if the value of the field is `PIN13`",125,[[]]],[11,"is_pin14","","Checks if the value of the field is `PIN14`",125,[[]]],[11,"is_pin15","","Checks if the value of the field is `PIN15`",125,[[]]],[11,"is_pin16","","Checks if the value of the field is `PIN16`",125,[[]]],[11,"is_pin17","","Checks if the value of the field is `PIN17`",125,[[]]],[11,"is_pin18","","Checks if the value of the field is `PIN18`",125,[[]]],[11,"is_pin19","","Checks if the value of the field is `PIN19`",125,[[]]],[11,"is_temp","","Checks if the value of the field is `TEMP`",125,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",125,[[]]],[11,"is_scaledcorevcc","","Checks if the value of the field is `SCALEDCOREVCC`",125,[[]]],[11,"is_scalediovcc","","Checks if the value of the field is `SCALEDIOVCC`",125,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",125,[[]]],[11,"variant","","Writes `variant` to the field",126,[[["muxpos_a",4]],["w",6]]],[11,"pin0","","ADC AIN0 Pin",126,[[],["w",6]]],[11,"pin1","","ADC AIN1 Pin",126,[[],["w",6]]],[11,"pin2","","ADC AIN2 Pin",126,[[],["w",6]]],[11,"pin3","","ADC AIN3 Pin",126,[[],["w",6]]],[11,"pin4","","ADC AIN4 Pin",126,[[],["w",6]]],[11,"pin5","","ADC AIN5 Pin",126,[[],["w",6]]],[11,"pin6","","ADC AIN6 Pin",126,[[],["w",6]]],[11,"pin7","","ADC AIN7 Pin",126,[[],["w",6]]],[11,"pin8","","ADC AIN8 Pin",126,[[],["w",6]]],[11,"pin9","","ADC AIN9 Pin",126,[[],["w",6]]],[11,"pin10","","ADC AIN10 Pin",126,[[],["w",6]]],[11,"pin11","","ADC AIN11 Pin",126,[[],["w",6]]],[11,"pin12","","ADC AIN12 Pin",126,[[],["w",6]]],[11,"pin13","","ADC AIN13 Pin",126,[[],["w",6]]],[11,"pin14","","ADC AIN14 Pin",126,[[],["w",6]]],[11,"pin15","","ADC AIN15 Pin",126,[[],["w",6]]],[11,"pin16","","ADC AIN16 Pin",126,[[],["w",6]]],[11,"pin17","","ADC AIN17 Pin",126,[[],["w",6]]],[11,"pin18","","ADC AIN18 Pin",126,[[],["w",6]]],[11,"pin19","","ADC AIN19 Pin",126,[[],["w",6]]],[11,"temp","","Temperature Reference",126,[[],["w",6]]],[11,"bandgap","","Bandgap Voltage",126,[[],["w",6]]],[11,"scaledcorevcc","","1/4 Scaled Core Supply",126,[[],["w",6]]],[11,"scalediovcc","","1/4 Scaled I/O Supply",126,[[],["w",6]]],[11,"dac","","DAC Output",126,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",126,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["muxneg_a",4],["variant",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",6,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",6,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",6,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",6,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",6,[[]]],[11,"is_iognd","","Checks if the value of the field is `IOGND`",6,[[]]],[11,"variant","atsamd11c::adc::inputctrl","Get enumerated values variant",127,[[],[["muxneg_a",4],["variant",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",127,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",127,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",127,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",127,[[]]],[11,"is_pin4","","Checks if the value of the field is `PIN4`",127,[[]]],[11,"is_pin5","","Checks if the value of the field is `PIN5`",127,[[]]],[11,"is_pin6","","Checks if the value of the field is `PIN6`",127,[[]]],[11,"is_pin7","","Checks if the value of the field is `PIN7`",127,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",127,[[]]],[11,"is_iognd","","Checks if the value of the field is `IOGND`",127,[[]]],[11,"variant","","Writes `variant` to the field",128,[[["muxneg_a",4]],["w",6]]],[11,"pin0","","ADC AIN0 Pin",128,[[],["w",6]]],[11,"pin1","","ADC AIN1 Pin",128,[[],["w",6]]],[11,"pin2","","ADC AIN2 Pin",128,[[],["w",6]]],[11,"pin3","","ADC AIN3 Pin",128,[[],["w",6]]],[11,"pin4","","ADC AIN4 Pin",128,[[],["w",6]]],[11,"pin5","","ADC AIN5 Pin",128,[[],["w",6]]],[11,"pin6","","ADC AIN6 Pin",128,[[],["w",6]]],[11,"pin7","","ADC AIN7 Pin",128,[[],["w",6]]],[11,"gnd","","Internal Ground",128,[[],["w",6]]],[11,"iognd","","I/O Ground",128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",129,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",130,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["gain_a",4]]]],[11,"is_1x","","Checks if the value of the field is `_1X`",6,[[]]],[11,"is_2x","","Checks if the value of the field is `_2X`",6,[[]]],[11,"is_4x","","Checks if the value of the field is `_4X`",6,[[]]],[11,"is_8x","","Checks if the value of the field is `_8X`",6,[[]]],[11,"is_16x","","Checks if the value of the field is `_16X`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"variant","atsamd11c::adc::inputctrl","Get enumerated values variant",131,[[],[["variant",4],["gain_a",4]]]],[11,"is_1x","","Checks if the value of the field is `_1X`",131,[[]]],[11,"is_2x","","Checks if the value of the field is `_2X`",131,[[]]],[11,"is_4x","","Checks if the value of the field is `_4X`",131,[[]]],[11,"is_8x","","Checks if the value of the field is `_8X`",131,[[]]],[11,"is_16x","","Checks if the value of the field is `_16X`",131,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",131,[[]]],[11,"variant","","Writes `variant` to the field",132,[[["gain_a",4]],["w",6]]],[11,"_1x","","1x",132,[[],["w",6]]],[11,"_2x","","2x",132,[[],["w",6]]],[11,"_4x","","4x",132,[[],["w",6]]],[11,"_8x","","8x",132,[[],["w",6]]],[11,"_16x","","16x",132,[[],["w",6]]],[11,"div2","","1/2x",132,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",132,[[],["w",6]]],[11,"muxpos","atsamd11c::generic","Bits 0:4 - Positive Mux Input Selection",6,[[],["muxpos_r",6]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",6,[[],["muxneg_r",6]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",6,[[],["inputscan_r",6]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",6,[[],["inputoffset_r",6]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",6,[[],["gain_r",6]]],[11,"muxpos","atsamd11c::adc::inputctrl","Bits 0:4 - Positive Mux Input Selection",133,[[],["muxpos_r",6]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",133,[[],["muxneg_r",6]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",133,[[],["inputscan_r",6]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",133,[[],["inputoffset_r",6]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",133,[[],["gain_r",6]]],[11,"muxpos","atsamd11c::generic","Bits 0:4 - Positive Mux Input Selection",7,[[],["muxpos_w",3]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",7,[[],["muxneg_w",3]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",7,[[],["inputscan_w",3]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",7,[[],["inputoffset_w",3]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",7,[[],["gain_w",3]]],[11,"muxpos","atsamd11c::adc::inputctrl","Bits 0:4 - Positive Mux Input Selection",134,[[],["muxpos_w",3]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",134,[[],["muxneg_w",3]]],[11,"inputscan","","Bits 16:19 - Number of Input Channels Included in Scan",134,[[],["inputscan_w",3]]],[11,"inputoffset","","Bits 20:23 - Positive Mux Setting Offset",134,[[],["inputoffset_w",3]]],[11,"gain","","Bits 24:27 - Gain Factor Selection",134,[[],["gain_w",3]]],[0,"evctrl","atsamd11c::adc","Event Control",null,null],[3,"STARTEI_W","atsamd11c::adc::evctrl","Write proxy for field `STARTEI`",null,null],[3,"SYNCEI_W","","Write proxy for field `SYNCEI`",null,null],[3,"RESRDYEO_W","","Write proxy for field `RESRDYEO`",null,null],[3,"WINMONEO_W","","Write proxy for field `WINMONEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"STARTEI_R","","Reader of field `STARTEI`",null,null],[6,"SYNCEI_R","","Reader of field `SYNCEI`",null,null],[6,"RESRDYEO_R","","Reader of field `RESRDYEO`",null,null],[6,"WINMONEO_R","","Reader of field `WINMONEO`",null,null],[11,"set_bit","","Sets the field bit",135,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",135,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",135,[[],["w",6]]],[11,"set_bit","","Sets the field bit",136,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",136,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",136,[[],["w",6]]],[11,"set_bit","","Sets the field bit",137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",138,[[],["w",6]]],[11,"startei","atsamd11c::generic","Bit 0 - Start Conversion Event In",6,[[],["startei_r",6]]],[11,"syncei","","Bit 1 - Synchronization Event In",6,[[],["syncei_r",6]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",6,[[],["resrdyeo_r",6]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",6,[[],["winmoneo_r",6]]],[11,"startei","atsamd11c::adc::evctrl","Bit 0 - Start Conversion Event In",139,[[],["startei_r",6]]],[11,"syncei","","Bit 1 - Synchronization Event In",139,[[],["syncei_r",6]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",139,[[],["resrdyeo_r",6]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",139,[[],["winmoneo_r",6]]],[11,"startei","atsamd11c::generic","Bit 0 - Start Conversion Event In",7,[[],["startei_w",3]]],[11,"syncei","","Bit 1 - Synchronization Event In",7,[[],["syncei_w",3]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",7,[[],["resrdyeo_w",3]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",7,[[],["winmoneo_w",3]]],[11,"startei","atsamd11c::adc::evctrl","Bit 0 - Start Conversion Event In",140,[[],["startei_w",3]]],[11,"syncei","","Bit 1 - Synchronization Event In",140,[[],["syncei_w",3]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",140,[[],["resrdyeo_w",3]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",140,[[],["winmoneo_w",3]]],[0,"intenclr","atsamd11c::adc","Interrupt Enable Clear",null,null],[3,"RESRDY_W","atsamd11c::adc::intenclr","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",141,[[],["w",6]]],[11,"set_bit","","Sets the field bit",142,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",142,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",142,[[],["w",6]]],[11,"set_bit","","Sets the field bit",143,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",143,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",144,[[],["w",6]]],[11,"resrdy","atsamd11c::generic","Bit 0 - Result Ready Interrupt Enable",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",6,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd11c::adc::intenclr","Bit 0 - Result Ready Interrupt Enable",145,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",145,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",145,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",145,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd11c::generic","Bit 0 - Result Ready Interrupt Enable",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",7,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"resrdy","atsamd11c::adc::intenclr","Bit 0 - Result Ready Interrupt Enable",146,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",146,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",146,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",146,[[],["syncrdy_w",3]]],[0,"intenset","atsamd11c::adc","Interrupt Enable Set",null,null],[3,"RESRDY_W","atsamd11c::adc::intenset","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",149,[[],["w",6]]],[11,"set_bit","","Sets the field bit",150,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",150,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",150,[[],["w",6]]],[11,"resrdy","atsamd11c::generic","Bit 0 - Result Ready Interrupt Enable",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",6,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd11c::adc::intenset","Bit 0 - Result Ready Interrupt Enable",151,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",151,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",151,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",151,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd11c::generic","Bit 0 - Result Ready Interrupt Enable",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",7,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"resrdy","atsamd11c::adc::intenset","Bit 0 - Result Ready Interrupt Enable",152,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",152,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",152,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",152,[[],["syncrdy_w",3]]],[0,"intflag","atsamd11c::adc","Interrupt Flag Status and Clear",null,null],[3,"RESRDY_W","atsamd11c::adc::intflag","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",156,[[],["w",6]]],[11,"resrdy","atsamd11c::generic","Bit 0 - Result Ready",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor",6,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd11c::adc::intflag","Bit 0 - Result Ready",157,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun",157,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor",157,[[],["winmon_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",157,[[],["syncrdy_r",6]]],[11,"resrdy","atsamd11c::generic","Bit 0 - Result Ready",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor",7,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"resrdy","atsamd11c::adc::intflag","Bit 0 - Result Ready",158,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun",158,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor",158,[[],["winmon_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",158,[[],["syncrdy_w",3]]],[0,"status","atsamd11c::adc","Status",null,null],[6,"R","atsamd11c::adc::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::adc::status","Bit 7 - Synchronization Busy",159,[[],["syncbusy_r",6]]],[0,"result","atsamd11c::adc","Result",null,null],[6,"R","atsamd11c::adc::result","Reader of register RESULT",null,null],[6,"RESULT_R","","Reader of field `RESULT`",null,null],[11,"result","atsamd11c::generic","Bits 0:15 - Result Conversion Value",6,[[],["result_r",6]]],[11,"result","atsamd11c::adc::result","Bits 0:15 - Result Conversion Value",160,[[],["result_r",6]]],[0,"winlt","atsamd11c::adc","Window Monitor Lower Threshold",null,null],[3,"WINLT_W","atsamd11c::adc::winlt","Write proxy for field `WINLT`",null,null],[6,"R","","Reader of register WINLT",null,null],[6,"W","","Writer for register WINLT",null,null],[6,"WINLT_R","","Reader of field `WINLT`",null,null],[11,"bits","","Writes raw bits to the field",161,[[],["w",6]]],[11,"winlt","atsamd11c::generic","Bits 0:15 - Window Lower Threshold",6,[[],["winlt_r",6]]],[11,"winlt","atsamd11c::adc::winlt","Bits 0:15 - Window Lower Threshold",162,[[],["winlt_r",6]]],[11,"winlt","atsamd11c::generic","Bits 0:15 - Window Lower Threshold",7,[[],["winlt_w",3]]],[11,"winlt","atsamd11c::adc::winlt","Bits 0:15 - Window Lower Threshold",163,[[],["winlt_w",3]]],[0,"winut","atsamd11c::adc","Window Monitor Upper Threshold",null,null],[3,"WINUT_W","atsamd11c::adc::winut","Write proxy for field `WINUT`",null,null],[6,"R","","Reader of register WINUT",null,null],[6,"W","","Writer for register WINUT",null,null],[6,"WINUT_R","","Reader of field `WINUT`",null,null],[11,"bits","","Writes raw bits to the field",164,[[],["w",6]]],[11,"winut","atsamd11c::generic","Bits 0:15 - Window Upper Threshold",6,[[],["winut_r",6]]],[11,"winut","atsamd11c::adc::winut","Bits 0:15 - Window Upper Threshold",165,[[],["winut_r",6]]],[11,"winut","atsamd11c::generic","Bits 0:15 - Window Upper Threshold",7,[[],["winut_w",3]]],[11,"winut","atsamd11c::adc::winut","Bits 0:15 - Window Upper Threshold",166,[[],["winut_w",3]]],[0,"gaincorr","atsamd11c::adc","Gain Correction",null,null],[3,"GAINCORR_W","atsamd11c::adc::gaincorr","Write proxy for field `GAINCORR`",null,null],[6,"R","","Reader of register GAINCORR",null,null],[6,"W","","Writer for register GAINCORR",null,null],[6,"GAINCORR_R","","Reader of field `GAINCORR`",null,null],[11,"bits","","Writes raw bits to the field",167,[[],["w",6]]],[11,"gaincorr","atsamd11c::generic","Bits 0:11 - Gain Correction Value",6,[[],["gaincorr_r",6]]],[11,"gaincorr","atsamd11c::adc::gaincorr","Bits 0:11 - Gain Correction Value",168,[[],["gaincorr_r",6]]],[11,"gaincorr","atsamd11c::generic","Bits 0:11 - Gain Correction Value",7,[[],["gaincorr_w",3]]],[11,"gaincorr","atsamd11c::adc::gaincorr","Bits 0:11 - Gain Correction Value",169,[[],["gaincorr_w",3]]],[0,"offsetcorr","atsamd11c::adc","Offset Correction",null,null],[3,"OFFSETCORR_W","atsamd11c::adc::offsetcorr","Write proxy for field `OFFSETCORR`",null,null],[6,"R","","Reader of register OFFSETCORR",null,null],[6,"W","","Writer for register OFFSETCORR",null,null],[6,"OFFSETCORR_R","","Reader of field `OFFSETCORR`",null,null],[11,"bits","","Writes raw bits to the field",170,[[],["w",6]]],[11,"offsetcorr","atsamd11c::generic","Bits 0:11 - Offset Correction Value",6,[[],["offsetcorr_r",6]]],[11,"offsetcorr","atsamd11c::adc::offsetcorr","Bits 0:11 - Offset Correction Value",171,[[],["offsetcorr_r",6]]],[11,"offsetcorr","atsamd11c::generic","Bits 0:11 - Offset Correction Value",7,[[],["offsetcorr_w",3]]],[11,"offsetcorr","atsamd11c::adc::offsetcorr","Bits 0:11 - Offset Correction Value",172,[[],["offsetcorr_w",3]]],[0,"calib","atsamd11c::adc","Calibration",null,null],[3,"LINEARITY_CAL_W","atsamd11c::adc::calib","Write proxy for field `LINEARITY_CAL`",null,null],[3,"BIAS_CAL_W","","Write proxy for field `BIAS_CAL`",null,null],[6,"R","","Reader of register CALIB",null,null],[6,"W","","Writer for register CALIB",null,null],[6,"LINEARITY_CAL_R","","Reader of field `LINEARITY_CAL`",null,null],[6,"BIAS_CAL_R","","Reader of field `BIAS_CAL`",null,null],[11,"bits","","Writes raw bits to the field",173,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",174,[[],["w",6]]],[11,"linearity_cal","atsamd11c::generic","Bits 0:7 - Linearity Calibration Value",6,[[],["linearity_cal_r",6]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",6,[[],["bias_cal_r",6]]],[11,"linearity_cal","atsamd11c::adc::calib","Bits 0:7 - Linearity Calibration Value",175,[[],["linearity_cal_r",6]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",175,[[],["bias_cal_r",6]]],[11,"linearity_cal","atsamd11c::generic","Bits 0:7 - Linearity Calibration Value",7,[[],["linearity_cal_w",3]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",7,[[],["bias_cal_w",3]]],[11,"linearity_cal","atsamd11c::adc::calib","Bits 0:7 - Linearity Calibration Value",176,[[],["linearity_cal_w",3]]],[11,"bias_cal","","Bits 8:10 - Bias Calibration Value",176,[[],["bias_cal_w",3]]],[0,"dbgctrl","atsamd11c::adc","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::adc::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",177,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",177,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",177,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::adc::dbgctrl","Bit 0 - Debug Run",178,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::adc::dbgctrl","Bit 0 - Debug Run",179,[[],["dbgrun_w",3]]],[6,"CTRLA","atsamd11c::adc","Control A",null,null],[6,"REFCTRL","","Reference Control",null,null],[6,"AVGCTRL","","Average Control",null,null],[6,"SAMPCTRL","","Sampling Time Control",null,null],[6,"CTRLB","","Control B",null,null],[6,"WINCTRL","","Window Monitor Control",null,null],[6,"SWTRIG","","Software Trigger",null,null],[6,"INPUTCTRL","","Input Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"RESULT","","Result",null,null],[6,"WINLT","","Window Monitor Lower Threshold",null,null],[6,"WINUT","","Window Monitor Upper Threshold",null,null],[6,"GAINCORR","","Gain Correction",null,null],[6,"OFFSETCORR","","Offset Correction",null,null],[6,"CALIB","","Calibration",null,null],[6,"DBGCTRL","","Debug Control",null,null],[0,"dac","atsamd11c","Digital Analog Converter",null,null],[3,"RegisterBlock","atsamd11c::dac","Register block",null,null],[12,"ctrla","","0x00 - Control A",180,null],[12,"ctrlb","","0x01 - Control B",180,null],[12,"evctrl","","0x02 - Event Control",180,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",180,null],[12,"intenset","","0x05 - Interrupt Enable Set",180,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",180,null],[12,"status","","0x07 - Status",180,null],[12,"data","","0x08 - Data",180,null],[12,"databuf","","0x0c - Data Buffer",180,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd11c::dac::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"set_bit","","Sets the field bit",181,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",181,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",183,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"swrst","atsamd11c::dac::ctrla","Bit 0 - Software Reset",184,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",184,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby",184,[[],["runstdby_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"swrst","atsamd11c::dac::ctrla","Bit 0 - Software Reset",185,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",185,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby",185,[[],["runstdby_w",3]]],[0,"ctrlb","atsamd11c::dac","Control B",null,null],[3,"EOEN_W","atsamd11c::dac::ctrlb","Write proxy for field `EOEN`",null,null],[3,"IOEN_W","","Write proxy for field `IOEN`",null,null],[3,"LEFTADJ_W","","Write proxy for field `LEFTADJ`",null,null],[3,"VPD_W","","Write proxy for field `VPD`",null,null],[3,"BDWP_W","","Write proxy for field `BDWP`",null,null],[3,"REFSEL_W","","Write proxy for field `REFSEL`",null,null],[4,"REFSEL_A","","Reference Selection",null,null],[13,"INT1V","","0: Internal 1.0V reference",186,null],[13,"AVCC","","1: AVCC",186,null],[13,"VREFP","","2: External reference",186,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"EOEN_R","","Reader of field `EOEN`",null,null],[6,"IOEN_R","","Reader of field `IOEN`",null,null],[6,"LEFTADJ_R","","Reader of field `LEFTADJ`",null,null],[6,"VPD_R","","Reader of field `VPD`",null,null],[6,"BDWP_R","","Reader of field `BDWP`",null,null],[6,"REFSEL_R","","Reader of field `REFSEL`",null,null],[11,"set_bit","","Sets the field bit",187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",187,[[],["w",6]]],[11,"set_bit","","Sets the field bit",188,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",188,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",188,[[],["w",6]]],[11,"set_bit","","Sets the field bit",189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",191,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["refsel_a",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",6,[[]]],[11,"is_avcc","","Checks if the value of the field is `AVCC`",6,[[]]],[11,"is_vrefp","","Checks if the value of the field is `VREFP`",6,[[]]],[11,"variant","atsamd11c::dac::ctrlb","Get enumerated values variant",192,[[],[["variant",4],["refsel_a",4]]]],[11,"is_int1v","","Checks if the value of the field is `INT1V`",192,[[]]],[11,"is_avcc","","Checks if the value of the field is `AVCC`",192,[[]]],[11,"is_vrefp","","Checks if the value of the field is `VREFP`",192,[[]]],[11,"variant","","Writes `variant` to the field",193,[[["refsel_a",4]],["w",6]]],[11,"int1v","","Internal 1.0V reference",193,[[],["w",6]]],[11,"avcc","","AVCC",193,[[],["w",6]]],[11,"vrefp","","External reference",193,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",193,[[],["w",6]]],[11,"eoen","atsamd11c::generic","Bit 0 - External Output Enable",6,[[],["eoen_r",6]]],[11,"ioen","","Bit 1 - Internal Output Enable",6,[[],["ioen_r",6]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",6,[[],["leftadj_r",6]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",6,[[],["vpd_r",6]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",6,[[],["bdwp_r",6]]],[11,"refsel","","Bits 6:7 - Reference Selection",6,[[],["refsel_r",6]]],[11,"eoen","atsamd11c::dac::ctrlb","Bit 0 - External Output Enable",194,[[],["eoen_r",6]]],[11,"ioen","","Bit 1 - Internal Output Enable",194,[[],["ioen_r",6]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",194,[[],["leftadj_r",6]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",194,[[],["vpd_r",6]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",194,[[],["bdwp_r",6]]],[11,"refsel","","Bits 6:7 - Reference Selection",194,[[],["refsel_r",6]]],[11,"eoen","atsamd11c::generic","Bit 0 - External Output Enable",7,[[],["eoen_w",3]]],[11,"ioen","","Bit 1 - Internal Output Enable",7,[[],["ioen_w",3]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",7,[[],["leftadj_w",3]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",7,[[],["vpd_w",3]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",7,[[],["bdwp_w",3]]],[11,"refsel","","Bits 6:7 - Reference Selection",7,[[],["refsel_w",3]]],[11,"eoen","atsamd11c::dac::ctrlb","Bit 0 - External Output Enable",195,[[],["eoen_w",3]]],[11,"ioen","","Bit 1 - Internal Output Enable",195,[[],["ioen_w",3]]],[11,"leftadj","","Bit 2 - Left Adjusted Data",195,[[],["leftadj_w",3]]],[11,"vpd","","Bit 3 - Voltage Pump Disable",195,[[],["vpd_w",3]]],[11,"bdwp","","Bit 4 - Bypass DATABUF Write Protection",195,[[],["bdwp_w",3]]],[11,"refsel","","Bits 6:7 - Reference Selection",195,[[],["refsel_w",3]]],[0,"evctrl","atsamd11c::dac","Event Control",null,null],[3,"STARTEI_W","atsamd11c::dac::evctrl","Write proxy for field `STARTEI`",null,null],[3,"EMPTYEO_W","","Write proxy for field `EMPTYEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"STARTEI_R","","Reader of field `STARTEI`",null,null],[6,"EMPTYEO_R","","Reader of field `EMPTYEO`",null,null],[11,"set_bit","","Sets the field bit",196,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",196,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",196,[[],["w",6]]],[11,"set_bit","","Sets the field bit",197,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",197,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",197,[[],["w",6]]],[11,"startei","atsamd11c::generic","Bit 0 - Start Conversion Event Input",6,[[],["startei_r",6]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",6,[[],["emptyeo_r",6]]],[11,"startei","atsamd11c::dac::evctrl","Bit 0 - Start Conversion Event Input",198,[[],["startei_r",6]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",198,[[],["emptyeo_r",6]]],[11,"startei","atsamd11c::generic","Bit 0 - Start Conversion Event Input",7,[[],["startei_w",3]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",7,[[],["emptyeo_w",3]]],[11,"startei","atsamd11c::dac::evctrl","Bit 0 - Start Conversion Event Input",199,[[],["startei_w",3]]],[11,"emptyeo","","Bit 1 - Data Buffer Empty Event Output",199,[[],["emptyeo_w",3]]],[0,"intenclr","atsamd11c::dac","Interrupt Enable Clear",null,null],[3,"UNDERRUN_W","atsamd11c::dac::intenclr","Write proxy for field `UNDERRUN`",null,null],[3,"EMPTY_W","","Write proxy for field `EMPTY`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"UNDERRUN_R","","Reader of field `UNDERRUN`",null,null],[6,"EMPTY_R","","Reader of field `EMPTY`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",200,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",200,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",200,[[],["w",6]]],[11,"set_bit","","Sets the field bit",201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",202,[[],["w",6]]],[11,"underrun","atsamd11c::generic","Bit 0 - Underrun Interrupt Enable",6,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",6,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"underrun","atsamd11c::dac::intenclr","Bit 0 - Underrun Interrupt Enable",203,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",203,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",203,[[],["syncrdy_r",6]]],[11,"underrun","atsamd11c::generic","Bit 0 - Underrun Interrupt Enable",7,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",7,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"underrun","atsamd11c::dac::intenclr","Bit 0 - Underrun Interrupt Enable",204,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",204,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",204,[[],["syncrdy_w",3]]],[0,"intenset","atsamd11c::dac","Interrupt Enable Set",null,null],[3,"UNDERRUN_W","atsamd11c::dac::intenset","Write proxy for field `UNDERRUN`",null,null],[3,"EMPTY_W","","Write proxy for field `EMPTY`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"UNDERRUN_R","","Reader of field `UNDERRUN`",null,null],[6,"EMPTY_R","","Reader of field `EMPTY`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",205,[[],["w",6]]],[11,"set_bit","","Sets the field bit",206,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",206,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",206,[[],["w",6]]],[11,"set_bit","","Sets the field bit",207,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",207,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",207,[[],["w",6]]],[11,"underrun","atsamd11c::generic","Bit 0 - Underrun Interrupt Enable",6,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",6,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"underrun","atsamd11c::dac::intenset","Bit 0 - Underrun Interrupt Enable",208,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",208,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",208,[[],["syncrdy_r",6]]],[11,"underrun","atsamd11c::generic","Bit 0 - Underrun Interrupt Enable",7,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",7,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"underrun","atsamd11c::dac::intenset","Bit 0 - Underrun Interrupt Enable",209,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty Interrupt Enable",209,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready Interrupt Enable",209,[[],["syncrdy_w",3]]],[0,"intflag","atsamd11c::dac","Interrupt Flag Status and Clear",null,null],[3,"UNDERRUN_W","atsamd11c::dac::intflag","Write proxy for field `UNDERRUN`",null,null],[3,"EMPTY_W","","Write proxy for field `EMPTY`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"UNDERRUN_R","","Reader of field `UNDERRUN`",null,null],[6,"EMPTY_R","","Reader of field `EMPTY`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[11,"set_bit","","Sets the field bit",210,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",210,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",211,[[],["w",6]]],[11,"set_bit","","Sets the field bit",212,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",212,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",212,[[],["w",6]]],[11,"underrun","atsamd11c::generic","Bit 0 - Underrun",6,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty",6,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"underrun","atsamd11c::dac::intflag","Bit 0 - Underrun",213,[[],["underrun_r",6]]],[11,"empty","","Bit 1 - Data Buffer Empty",213,[[],["empty_r",6]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",213,[[],["syncrdy_r",6]]],[11,"underrun","atsamd11c::generic","Bit 0 - Underrun",7,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty",7,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"underrun","atsamd11c::dac::intflag","Bit 0 - Underrun",214,[[],["underrun_w",3]]],[11,"empty","","Bit 1 - Data Buffer Empty",214,[[],["empty_w",3]]],[11,"syncrdy","","Bit 2 - Synchronization Ready",214,[[],["syncrdy_w",3]]],[0,"status","atsamd11c::dac","Status",null,null],[6,"R","atsamd11c::dac::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy Status",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::dac::status","Bit 7 - Synchronization Busy Status",215,[[],["syncbusy_r",6]]],[0,"data","atsamd11c::dac","Data",null,null],[3,"DATA_W","atsamd11c::dac::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",216,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:15 - Data value to be converted",6,[[],["data_r",6]]],[11,"data","atsamd11c::dac::data","Bits 0:15 - Data value to be converted",217,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:15 - Data value to be converted",7,[[],["data_w",3]]],[11,"data","atsamd11c::dac::data","Bits 0:15 - Data value to be converted",218,[[],["data_w",3]]],[0,"databuf","atsamd11c::dac","Data Buffer",null,null],[3,"DATABUF_W","atsamd11c::dac::databuf","Write proxy for field `DATABUF`",null,null],[6,"R","","Reader of register DATABUF",null,null],[6,"W","","Writer for register DATABUF",null,null],[6,"DATABUF_R","","Reader of field `DATABUF`",null,null],[11,"bits","","Writes raw bits to the field",219,[[],["w",6]]],[11,"databuf","atsamd11c::generic","Bits 0:15 - Data Buffer",6,[[],["databuf_r",6]]],[11,"databuf","atsamd11c::dac::databuf","Bits 0:15 - Data Buffer",220,[[],["databuf_r",6]]],[11,"databuf","atsamd11c::generic","Bits 0:15 - Data Buffer",7,[[],["databuf_w",3]]],[11,"databuf","atsamd11c::dac::databuf","Bits 0:15 - Data Buffer",221,[[],["databuf_w",3]]],[6,"CTRLA","atsamd11c::dac","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DATA","","Data",null,null],[6,"DATABUF","","Data Buffer",null,null],[0,"dmac","atsamd11c","Direct Memory Access Controller",null,null],[3,"RegisterBlock","atsamd11c::dmac","Register block",null,null],[12,"ctrl","","0x00 - Control",222,null],[12,"crcctrl","","0x02 - CRC Control",222,null],[12,"crcdatain","","0x04 - CRC Data Input",222,null],[12,"crcchksum","","0x08 - CRC Checksum",222,null],[12,"crcstatus","","0x0c - CRC Status",222,null],[12,"dbgctrl","","0x0d - Debug Control",222,null],[12,"qosctrl","","0x0e - QOS Control",222,null],[12,"swtrigctrl","","0x10 - Software Trigger Control",222,null],[12,"prictrl0","","0x14 - Priority Control 0",222,null],[12,"intpend","","0x20 - Interrupt Pending",222,null],[12,"intstatus","","0x24 - Interrupt Status",222,null],[12,"busych","","0x28 - Busy Channels",222,null],[12,"pendch","","0x2c - Pending Channels",222,null],[12,"active","","0x30 - Active Channel and Levels",222,null],[12,"baseaddr","","0x34 - Descriptor Memory Section Base Address",222,null],[12,"wrbaddr","","0x38 - Write-Back Memory Section Base Address",222,null],[12,"chid","","0x3f - Channel ID",222,null],[12,"chctrla","","0x40 - Channel Control A",222,null],[12,"chctrlb","","0x44 - Channel Control B",222,null],[12,"chintenclr","","0x4c - Channel Interrupt Enable Clear",222,null],[12,"chintenset","","0x4d - Channel Interrupt Enable Set",222,null],[12,"chintflag","","0x4e - Channel Interrupt Flag Status and Clear",222,null],[12,"chstatus","","0x4f - Channel Status",222,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd11c::dmac::ctrl","Write proxy for field `SWRST`",null,null],[3,"DMAENABLE_W","","Write proxy for field `DMAENABLE`",null,null],[3,"CRCENABLE_W","","Write proxy for field `CRCENABLE`",null,null],[3,"LVLEN0_W","","Write proxy for field `LVLEN0`",null,null],[3,"LVLEN1_W","","Write proxy for field `LVLEN1`",null,null],[3,"LVLEN2_W","","Write proxy for field `LVLEN2`",null,null],[3,"LVLEN3_W","","Write proxy for field `LVLEN3`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"DMAENABLE_R","","Reader of field `DMAENABLE`",null,null],[6,"CRCENABLE_R","","Reader of field `CRCENABLE`",null,null],[6,"LVLEN0_R","","Reader of field `LVLEN0`",null,null],[6,"LVLEN1_R","","Reader of field `LVLEN1`",null,null],[6,"LVLEN2_R","","Reader of field `LVLEN2`",null,null],[6,"LVLEN3_R","","Reader of field `LVLEN3`",null,null],[11,"set_bit","","Sets the field bit",223,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",223,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",223,[[],["w",6]]],[11,"set_bit","","Sets the field bit",224,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",224,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",224,[[],["w",6]]],[11,"set_bit","","Sets the field bit",225,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",225,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",225,[[],["w",6]]],[11,"set_bit","","Sets the field bit",226,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",226,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",226,[[],["w",6]]],[11,"set_bit","","Sets the field bit",227,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",227,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",227,[[],["w",6]]],[11,"set_bit","","Sets the field bit",228,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",228,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",228,[[],["w",6]]],[11,"set_bit","","Sets the field bit",229,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",229,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",229,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"dmaenable","","Bit 1 - DMA Enable",6,[[],["dmaenable_r",6]]],[11,"crcenable","","Bit 2 - CRC Enable",6,[[],["crcenable_r",6]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",6,[[],["lvlen0_r",6]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",6,[[],["lvlen1_r",6]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",6,[[],["lvlen2_r",6]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",6,[[],["lvlen3_r",6]]],[11,"swrst","atsamd11c::dmac::ctrl","Bit 0 - Software Reset",230,[[],["swrst_r",6]]],[11,"dmaenable","","Bit 1 - DMA Enable",230,[[],["dmaenable_r",6]]],[11,"crcenable","","Bit 2 - CRC Enable",230,[[],["crcenable_r",6]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",230,[[],["lvlen0_r",6]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",230,[[],["lvlen1_r",6]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",230,[[],["lvlen2_r",6]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",230,[[],["lvlen3_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"dmaenable","","Bit 1 - DMA Enable",7,[[],["dmaenable_w",3]]],[11,"crcenable","","Bit 2 - CRC Enable",7,[[],["crcenable_w",3]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",7,[[],["lvlen0_w",3]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",7,[[],["lvlen1_w",3]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",7,[[],["lvlen2_w",3]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",7,[[],["lvlen3_w",3]]],[11,"swrst","atsamd11c::dmac::ctrl","Bit 0 - Software Reset",231,[[],["swrst_w",3]]],[11,"dmaenable","","Bit 1 - DMA Enable",231,[[],["dmaenable_w",3]]],[11,"crcenable","","Bit 2 - CRC Enable",231,[[],["crcenable_w",3]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",231,[[],["lvlen0_w",3]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",231,[[],["lvlen1_w",3]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",231,[[],["lvlen2_w",3]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",231,[[],["lvlen3_w",3]]],[0,"crcctrl","atsamd11c::dmac","CRC Control",null,null],[3,"CRCBEATSIZE_W","atsamd11c::dmac::crcctrl","Write proxy for field `CRCBEATSIZE`",null,null],[3,"CRCPOLY_W","","Write proxy for field `CRCPOLY`",null,null],[3,"CRCSRC_W","","Write proxy for field `CRCSRC`",null,null],[4,"CRCBEATSIZE_A","","CRC Beat Size",null,null],[13,"BYTE","","0: 8-bit bus transfer",232,null],[13,"HWORD","","1: 16-bit bus transfer",232,null],[13,"WORD","","2: 32-bit bus transfer",232,null],[4,"CRCPOLY_A","","CRC Polynomial Type",null,null],[13,"CRC16","","0: CRC-16 (CRC-CCITT)",233,null],[13,"CRC32","","1: CRC32 (IEEE 802.3)",233,null],[4,"CRCSRC_A","","CRC Input Source",null,null],[13,"NOACT","","0: No action",234,null],[13,"IO","","1: I/O interface",234,null],[6,"R","","Reader of register CRCCTRL",null,null],[6,"W","","Writer for register CRCCTRL",null,null],[6,"CRCBEATSIZE_R","","Reader of field `CRCBEATSIZE`",null,null],[6,"CRCPOLY_R","","Reader of field `CRCPOLY`",null,null],[6,"CRCSRC_R","","Reader of field `CRCSRC`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["crcbeatsize_a",4],["variant",4]]]],[11,"is_byte","","Checks if the value of the field is `BYTE`",6,[[]]],[11,"is_hword","","Checks if the value of the field is `HWORD`",6,[[]]],[11,"is_word","","Checks if the value of the field is `WORD`",6,[[]]],[11,"variant","atsamd11c::dmac::crcctrl","Get enumerated values variant",235,[[],[["crcbeatsize_a",4],["variant",4]]]],[11,"is_byte","","Checks if the value of the field is `BYTE`",235,[[]]],[11,"is_hword","","Checks if the value of the field is `HWORD`",235,[[]]],[11,"is_word","","Checks if the value of the field is `WORD`",235,[[]]],[11,"variant","","Writes `variant` to the field",236,[[["crcbeatsize_a",4]],["w",6]]],[11,"byte","","8-bit bus transfer",236,[[],["w",6]]],[11,"hword","","16-bit bus transfer",236,[[],["w",6]]],[11,"word","","32-bit bus transfer",236,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",236,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["crcpoly_a",4],["variant",4]]]],[11,"is_crc16","","Checks if the value of the field is `CRC16`",6,[[]]],[11,"is_crc32","","Checks if the value of the field is `CRC32`",6,[[]]],[11,"variant","atsamd11c::dmac::crcctrl","Get enumerated values variant",237,[[],[["crcpoly_a",4],["variant",4]]]],[11,"is_crc16","","Checks if the value of the field is `CRC16`",237,[[]]],[11,"is_crc32","","Checks if the value of the field is `CRC32`",237,[[]]],[11,"variant","","Writes `variant` to the field",238,[[["crcpoly_a",4]],["w",6]]],[11,"crc16","","CRC-16 (CRC-CCITT)",238,[[],["w",6]]],[11,"crc32","","CRC32 (IEEE 802.3)",238,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",238,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["crcsrc_a",4],["variant",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",6,[[]]],[11,"variant","atsamd11c::dmac::crcctrl","Get enumerated values variant",239,[[],[["crcsrc_a",4],["variant",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",239,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",239,[[]]],[11,"variant","","Writes `variant` to the field",240,[[["crcsrc_a",4]],["w",6]]],[11,"noact","","No action",240,[[],["w",6]]],[11,"io","","I/O interface",240,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",240,[[],["w",6]]],[11,"crcbeatsize","atsamd11c::generic","Bits 0:1 - CRC Beat Size",6,[[],["crcbeatsize_r",6]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",6,[[],["crcpoly_r",6]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",6,[[],["crcsrc_r",6]]],[11,"crcbeatsize","atsamd11c::dmac::crcctrl","Bits 0:1 - CRC Beat Size",241,[[],["crcbeatsize_r",6]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",241,[[],["crcpoly_r",6]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",241,[[],["crcsrc_r",6]]],[11,"crcbeatsize","atsamd11c::generic","Bits 0:1 - CRC Beat Size",7,[[],["crcbeatsize_w",3]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",7,[[],["crcpoly_w",3]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",7,[[],["crcsrc_w",3]]],[11,"crcbeatsize","atsamd11c::dmac::crcctrl","Bits 0:1 - CRC Beat Size",242,[[],["crcbeatsize_w",3]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",242,[[],["crcpoly_w",3]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",242,[[],["crcsrc_w",3]]],[0,"crcdatain","atsamd11c::dmac","CRC Data Input",null,null],[3,"CRCDATAIN_W","atsamd11c::dmac::crcdatain","Write proxy for field `CRCDATAIN`",null,null],[6,"R","","Reader of register CRCDATAIN",null,null],[6,"W","","Writer for register CRCDATAIN",null,null],[6,"CRCDATAIN_R","","Reader of field `CRCDATAIN`",null,null],[11,"bits","","Writes raw bits to the field",243,[[],["w",6]]],[11,"crcdatain","atsamd11c::generic","Bits 0:31 - CRC Data Input",6,[[],["crcdatain_r",6]]],[11,"crcdatain","atsamd11c::dmac::crcdatain","Bits 0:31 - CRC Data Input",244,[[],["crcdatain_r",6]]],[11,"crcdatain","atsamd11c::generic","Bits 0:31 - CRC Data Input",7,[[],["crcdatain_w",3]]],[11,"crcdatain","atsamd11c::dmac::crcdatain","Bits 0:31 - CRC Data Input",245,[[],["crcdatain_w",3]]],[0,"crcchksum","atsamd11c::dmac","CRC Checksum",null,null],[3,"CRCCHKSUM_W","atsamd11c::dmac::crcchksum","Write proxy for field `CRCCHKSUM`",null,null],[6,"R","","Reader of register CRCCHKSUM",null,null],[6,"W","","Writer for register CRCCHKSUM",null,null],[6,"CRCCHKSUM_R","","Reader of field `CRCCHKSUM`",null,null],[11,"bits","","Writes raw bits to the field",246,[[],["w",6]]],[11,"crcchksum","atsamd11c::generic","Bits 0:31 - CRC Checksum",6,[[],["crcchksum_r",6]]],[11,"crcchksum","atsamd11c::dmac::crcchksum","Bits 0:31 - CRC Checksum",247,[[],["crcchksum_r",6]]],[11,"crcchksum","atsamd11c::generic","Bits 0:31 - CRC Checksum",7,[[],["crcchksum_w",3]]],[11,"crcchksum","atsamd11c::dmac::crcchksum","Bits 0:31 - CRC Checksum",248,[[],["crcchksum_w",3]]],[0,"crcstatus","atsamd11c::dmac","CRC Status",null,null],[3,"CRCBUSY_W","atsamd11c::dmac::crcstatus","Write proxy for field `CRCBUSY`",null,null],[6,"R","","Reader of register CRCSTATUS",null,null],[6,"W","","Writer for register CRCSTATUS",null,null],[6,"CRCBUSY_R","","Reader of field `CRCBUSY`",null,null],[6,"CRCZERO_R","","Reader of field `CRCZERO`",null,null],[11,"set_bit","","Sets the field bit",249,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",249,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",249,[[],["w",6]]],[11,"crcbusy","atsamd11c::generic","Bit 0 - CRC Module Busy",6,[[],["crcbusy_r",6]]],[11,"crczero","","Bit 1 - CRC Zero",6,[[],["crczero_r",6]]],[11,"crcbusy","atsamd11c::dmac::crcstatus","Bit 0 - CRC Module Busy",250,[[],["crcbusy_r",6]]],[11,"crczero","","Bit 1 - CRC Zero",250,[[],["crczero_r",6]]],[11,"crcbusy","atsamd11c::generic","Bit 0 - CRC Module Busy",7,[[],["crcbusy_w",3]]],[11,"crcbusy","atsamd11c::dmac::crcstatus","Bit 0 - CRC Module Busy",251,[[],["crcbusy_w",3]]],[0,"dbgctrl","atsamd11c::dmac","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::dmac::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",252,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",252,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",252,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::dmac::dbgctrl","Bit 0 - Debug Run",253,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::dmac::dbgctrl","Bit 0 - Debug Run",254,[[],["dbgrun_w",3]]],[0,"qosctrl","atsamd11c::dmac","QOS Control",null,null],[3,"WRBQOS_W","atsamd11c::dmac::qosctrl","Write proxy for field `WRBQOS`",null,null],[3,"FQOS_W","","Write proxy for field `FQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[4,"WRBQOS_A","","Write-Back Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",255,null],[13,"LOW","","1: Sensitive Bandwidth",255,null],[13,"MEDIUM","","2: Sensitive Latency",255,null],[13,"HIGH","","3: Critical Latency",255,null],[4,"FQOS_A","","Fetch Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",256,null],[13,"LOW","","1: Sensitive Bandwidth",256,null],[13,"MEDIUM","","2: Sensitive Latency",256,null],[13,"HIGH","","3: Critical Latency",256,null],[4,"DQOS_A","","Data Transfer Quality of Service",null,null],[13,"DISABLE","","0: Background (no sensitive operation)",257,null],[13,"LOW","","1: Sensitive Bandwidth",257,null],[13,"MEDIUM","","2: Sensitive Latency",257,null],[13,"HIGH","","3: Critical Latency",257,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"WRBQOS_R","","Reader of field `WRBQOS`",null,null],[6,"FQOS_R","","Reader of field `FQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["wrbqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd11c::dmac::qosctrl","Get enumerated values variant",258,[[],["wrbqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",258,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",258,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",258,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",258,[[]]],[11,"variant","","Writes `variant` to the field",259,[[["wrbqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",259,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",259,[[],["w",6]]],[11,"medium","","Sensitive Latency",259,[[],["w",6]]],[11,"high","","Critical Latency",259,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",259,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["fqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd11c::dmac::qosctrl","Get enumerated values variant",260,[[],["fqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",260,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",260,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",260,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",260,[[]]],[11,"variant","","Writes `variant` to the field",261,[[["fqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",261,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",261,[[],["w",6]]],[11,"medium","","Sensitive Latency",261,[[],["w",6]]],[11,"high","","Critical Latency",261,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",261,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd11c::dmac::qosctrl","Get enumerated values variant",262,[[],["dqos_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",262,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",262,[[]]],[11,"is_medium","","Checks if the value of the field is `MEDIUM`",262,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",262,[[]]],[11,"variant","","Writes `variant` to the field",263,[[["dqos_a",4]],["w",6]]],[11,"disable","","Background (no sensitive operation)",263,[[],["w",6]]],[11,"low","","Sensitive Bandwidth",263,[[],["w",6]]],[11,"medium","","Sensitive Latency",263,[[],["w",6]]],[11,"high","","Critical Latency",263,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",263,[[],["w",6]]],[11,"wrbqos","atsamd11c::generic","Bits 0:1 - Write-Back Quality of Service",6,[[],["wrbqos_r",6]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",6,[[],["fqos_r",6]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",6,[[],["dqos_r",6]]],[11,"wrbqos","atsamd11c::dmac::qosctrl","Bits 0:1 - Write-Back Quality of Service",264,[[],["wrbqos_r",6]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",264,[[],["fqos_r",6]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",264,[[],["dqos_r",6]]],[11,"wrbqos","atsamd11c::generic","Bits 0:1 - Write-Back Quality of Service",7,[[],["wrbqos_w",3]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",7,[[],["fqos_w",3]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",7,[[],["dqos_w",3]]],[11,"wrbqos","atsamd11c::dmac::qosctrl","Bits 0:1 - Write-Back Quality of Service",265,[[],["wrbqos_w",3]]],[11,"fqos","","Bits 2:3 - Fetch Quality of Service",265,[[],["fqos_w",3]]],[11,"dqos","","Bits 4:5 - Data Transfer Quality of Service",265,[[],["dqos_w",3]]],[0,"swtrigctrl","atsamd11c::dmac","Software Trigger Control",null,null],[3,"SWTRIG0_W","atsamd11c::dmac::swtrigctrl","Write proxy for field `SWTRIG0`",null,null],[3,"SWTRIG1_W","","Write proxy for field `SWTRIG1`",null,null],[3,"SWTRIG2_W","","Write proxy for field `SWTRIG2`",null,null],[3,"SWTRIG3_W","","Write proxy for field `SWTRIG3`",null,null],[3,"SWTRIG4_W","","Write proxy for field `SWTRIG4`",null,null],[3,"SWTRIG5_W","","Write proxy for field `SWTRIG5`",null,null],[6,"R","","Reader of register SWTRIGCTRL",null,null],[6,"W","","Writer for register SWTRIGCTRL",null,null],[6,"SWTRIG0_R","","Reader of field `SWTRIG0`",null,null],[6,"SWTRIG1_R","","Reader of field `SWTRIG1`",null,null],[6,"SWTRIG2_R","","Reader of field `SWTRIG2`",null,null],[6,"SWTRIG3_R","","Reader of field `SWTRIG3`",null,null],[6,"SWTRIG4_R","","Reader of field `SWTRIG4`",null,null],[6,"SWTRIG5_R","","Reader of field `SWTRIG5`",null,null],[11,"set_bit","","Sets the field bit",266,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",266,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",266,[[],["w",6]]],[11,"set_bit","","Sets the field bit",267,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",267,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",267,[[],["w",6]]],[11,"set_bit","","Sets the field bit",268,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",268,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",268,[[],["w",6]]],[11,"set_bit","","Sets the field bit",269,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",269,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",269,[[],["w",6]]],[11,"set_bit","","Sets the field bit",270,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",270,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",270,[[],["w",6]]],[11,"set_bit","","Sets the field bit",271,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",271,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",271,[[],["w",6]]],[11,"swtrig0","atsamd11c::generic","Bit 0 - Channel 0 Software Trigger",6,[[],["swtrig0_r",6]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",6,[[],["swtrig1_r",6]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",6,[[],["swtrig2_r",6]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",6,[[],["swtrig3_r",6]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",6,[[],["swtrig4_r",6]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",6,[[],["swtrig5_r",6]]],[11,"swtrig0","atsamd11c::dmac::swtrigctrl","Bit 0 - Channel 0 Software Trigger",272,[[],["swtrig0_r",6]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",272,[[],["swtrig1_r",6]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",272,[[],["swtrig2_r",6]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",272,[[],["swtrig3_r",6]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",272,[[],["swtrig4_r",6]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",272,[[],["swtrig5_r",6]]],[11,"swtrig0","atsamd11c::generic","Bit 0 - Channel 0 Software Trigger",7,[[],["swtrig0_w",3]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",7,[[],["swtrig1_w",3]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",7,[[],["swtrig2_w",3]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",7,[[],["swtrig3_w",3]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",7,[[],["swtrig4_w",3]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",7,[[],["swtrig5_w",3]]],[11,"swtrig0","atsamd11c::dmac::swtrigctrl","Bit 0 - Channel 0 Software Trigger",273,[[],["swtrig0_w",3]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",273,[[],["swtrig1_w",3]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",273,[[],["swtrig2_w",3]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",273,[[],["swtrig3_w",3]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",273,[[],["swtrig4_w",3]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",273,[[],["swtrig5_w",3]]],[0,"prictrl0","atsamd11c::dmac","Priority Control 0",null,null],[3,"LVLPRI0_W","atsamd11c::dmac::prictrl0","Write proxy for field `LVLPRI0`",null,null],[3,"RRLVLEN0_W","","Write proxy for field `RRLVLEN0`",null,null],[3,"LVLPRI1_W","","Write proxy for field `LVLPRI1`",null,null],[3,"RRLVLEN1_W","","Write proxy for field `RRLVLEN1`",null,null],[3,"LVLPRI2_W","","Write proxy for field `LVLPRI2`",null,null],[3,"RRLVLEN2_W","","Write proxy for field `RRLVLEN2`",null,null],[3,"LVLPRI3_W","","Write proxy for field `LVLPRI3`",null,null],[3,"RRLVLEN3_W","","Write proxy for field `RRLVLEN3`",null,null],[6,"R","","Reader of register PRICTRL0",null,null],[6,"W","","Writer for register PRICTRL0",null,null],[6,"LVLPRI0_R","","Reader of field `LVLPRI0`",null,null],[6,"RRLVLEN0_R","","Reader of field `RRLVLEN0`",null,null],[6,"LVLPRI1_R","","Reader of field `LVLPRI1`",null,null],[6,"RRLVLEN1_R","","Reader of field `RRLVLEN1`",null,null],[6,"LVLPRI2_R","","Reader of field `LVLPRI2`",null,null],[6,"RRLVLEN2_R","","Reader of field `RRLVLEN2`",null,null],[6,"LVLPRI3_R","","Reader of field `LVLPRI3`",null,null],[6,"RRLVLEN3_R","","Reader of field `RRLVLEN3`",null,null],[11,"bits","","Writes raw bits to the field",274,[[],["w",6]]],[11,"set_bit","","Sets the field bit",275,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",275,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",275,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",276,[[],["w",6]]],[11,"set_bit","","Sets the field bit",277,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",277,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",277,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",278,[[],["w",6]]],[11,"set_bit","","Sets the field bit",279,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",279,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",279,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",280,[[],["w",6]]],[11,"set_bit","","Sets the field bit",281,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",281,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",281,[[],["w",6]]],[11,"lvlpri0","atsamd11c::generic","Bits 0:2 - Level 0 Channel Priority Number",6,[[],["lvlpri0_r",6]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",6,[[],["rrlvlen0_r",6]]],[11,"lvlpri1","","Bits 8:10 - Level 1 Channel Priority Number",6,[[],["lvlpri1_r",6]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",6,[[],["rrlvlen1_r",6]]],[11,"lvlpri2","","Bits 16:18 - Level 2 Channel Priority Number",6,[[],["lvlpri2_r",6]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",6,[[],["rrlvlen2_r",6]]],[11,"lvlpri3","","Bits 24:26 - Level 3 Channel Priority Number",6,[[],["lvlpri3_r",6]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",6,[[],["rrlvlen3_r",6]]],[11,"lvlpri0","atsamd11c::dmac::prictrl0","Bits 0:2 - Level 0 Channel Priority Number",282,[[],["lvlpri0_r",6]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",282,[[],["rrlvlen0_r",6]]],[11,"lvlpri1","","Bits 8:10 - Level 1 Channel Priority Number",282,[[],["lvlpri1_r",6]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",282,[[],["rrlvlen1_r",6]]],[11,"lvlpri2","","Bits 16:18 - Level 2 Channel Priority Number",282,[[],["lvlpri2_r",6]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",282,[[],["rrlvlen2_r",6]]],[11,"lvlpri3","","Bits 24:26 - Level 3 Channel Priority Number",282,[[],["lvlpri3_r",6]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",282,[[],["rrlvlen3_r",6]]],[11,"lvlpri0","atsamd11c::generic","Bits 0:2 - Level 0 Channel Priority Number",7,[[],["lvlpri0_w",3]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",7,[[],["rrlvlen0_w",3]]],[11,"lvlpri1","","Bits 8:10 - Level 1 Channel Priority Number",7,[[],["lvlpri1_w",3]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",7,[[],["rrlvlen1_w",3]]],[11,"lvlpri2","","Bits 16:18 - Level 2 Channel Priority Number",7,[[],["lvlpri2_w",3]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",7,[[],["rrlvlen2_w",3]]],[11,"lvlpri3","","Bits 24:26 - Level 3 Channel Priority Number",7,[[],["lvlpri3_w",3]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",7,[[],["rrlvlen3_w",3]]],[11,"lvlpri0","atsamd11c::dmac::prictrl0","Bits 0:2 - Level 0 Channel Priority Number",283,[[],["lvlpri0_w",3]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",283,[[],["rrlvlen0_w",3]]],[11,"lvlpri1","","Bits 8:10 - Level 1 Channel Priority Number",283,[[],["lvlpri1_w",3]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",283,[[],["rrlvlen1_w",3]]],[11,"lvlpri2","","Bits 16:18 - Level 2 Channel Priority Number",283,[[],["lvlpri2_w",3]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",283,[[],["rrlvlen2_w",3]]],[11,"lvlpri3","","Bits 24:26 - Level 3 Channel Priority Number",283,[[],["lvlpri3_w",3]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",283,[[],["rrlvlen3_w",3]]],[0,"intpend","atsamd11c::dmac","Interrupt Pending",null,null],[3,"ID_W","atsamd11c::dmac::intpend","Write proxy for field `ID`",null,null],[3,"TERR_W","","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register INTPEND",null,null],[6,"W","","Writer for register INTPEND",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"PEND_R","","Reader of field `PEND`",null,null],[11,"bits","","Writes raw bits to the field",284,[[],["w",6]]],[11,"set_bit","","Sets the field bit",285,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",285,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",285,[[],["w",6]]],[11,"set_bit","","Sets the field bit",286,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",286,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",286,[[],["w",6]]],[11,"set_bit","","Sets the field bit",287,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",287,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",287,[[],["w",6]]],[11,"id","atsamd11c::generic","Bits 0:2 - Channel ID",6,[[],["id_r",6]]],[11,"terr","","Bit 8 - Transfer Error",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 9 - Transfer Complete",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 10 - Channel Suspend",6,[[],["susp_r",6]]],[11,"ferr","","Bit 13 - Fetch Error",6,[[],["ferr_r",6]]],[11,"busy","","Bit 14 - Busy",6,[[],["busy_r",6]]],[11,"pend","","Bit 15 - Pending",6,[[],["pend_r",6]]],[11,"id","atsamd11c::dmac::intpend","Bits 0:2 - Channel ID",288,[[],["id_r",6]]],[11,"terr","","Bit 8 - Transfer Error",288,[[],["terr_r",6]]],[11,"tcmpl","","Bit 9 - Transfer Complete",288,[[],["tcmpl_r",6]]],[11,"susp","","Bit 10 - Channel Suspend",288,[[],["susp_r",6]]],[11,"ferr","","Bit 13 - Fetch Error",288,[[],["ferr_r",6]]],[11,"busy","","Bit 14 - Busy",288,[[],["busy_r",6]]],[11,"pend","","Bit 15 - Pending",288,[[],["pend_r",6]]],[11,"id","atsamd11c::generic","Bits 0:2 - Channel ID",7,[[],["id_w",3]]],[11,"terr","","Bit 8 - Transfer Error",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 9 - Transfer Complete",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 10 - Channel Suspend",7,[[],["susp_w",3]]],[11,"id","atsamd11c::dmac::intpend","Bits 0:2 - Channel ID",289,[[],["id_w",3]]],[11,"terr","","Bit 8 - Transfer Error",289,[[],["terr_w",3]]],[11,"tcmpl","","Bit 9 - Transfer Complete",289,[[],["tcmpl_w",3]]],[11,"susp","","Bit 10 - Channel Suspend",289,[[],["susp_w",3]]],[0,"intstatus","atsamd11c::dmac","Interrupt Status",null,null],[6,"R","atsamd11c::dmac::intstatus","Reader of register INTSTATUS",null,null],[6,"CHINT0_R","","Reader of field `CHINT0`",null,null],[6,"CHINT1_R","","Reader of field `CHINT1`",null,null],[6,"CHINT2_R","","Reader of field `CHINT2`",null,null],[6,"CHINT3_R","","Reader of field `CHINT3`",null,null],[6,"CHINT4_R","","Reader of field `CHINT4`",null,null],[6,"CHINT5_R","","Reader of field `CHINT5`",null,null],[11,"chint0","atsamd11c::generic","Bit 0 - Channel 0 Pending Interrupt",6,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",6,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",6,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",6,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",6,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",6,[[],["chint5_r",6]]],[11,"chint0","atsamd11c::dmac::intstatus","Bit 0 - Channel 0 Pending Interrupt",290,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",290,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",290,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",290,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",290,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",290,[[],["chint5_r",6]]],[0,"busych","atsamd11c::dmac","Busy Channels",null,null],[6,"R","atsamd11c::dmac::busych","Reader of register BUSYCH",null,null],[6,"BUSYCH0_R","","Reader of field `BUSYCH0`",null,null],[6,"BUSYCH1_R","","Reader of field `BUSYCH1`",null,null],[6,"BUSYCH2_R","","Reader of field `BUSYCH2`",null,null],[6,"BUSYCH3_R","","Reader of field `BUSYCH3`",null,null],[6,"BUSYCH4_R","","Reader of field `BUSYCH4`",null,null],[6,"BUSYCH5_R","","Reader of field `BUSYCH5`",null,null],[11,"busych0","atsamd11c::generic","Bit 0 - Busy Channel 0",6,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",6,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",6,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",6,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",6,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",6,[[],["busych5_r",6]]],[11,"busych0","atsamd11c::dmac::busych","Bit 0 - Busy Channel 0",291,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",291,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",291,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",291,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",291,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",291,[[],["busych5_r",6]]],[0,"pendch","atsamd11c::dmac","Pending Channels",null,null],[6,"R","atsamd11c::dmac::pendch","Reader of register PENDCH",null,null],[6,"PENDCH0_R","","Reader of field `PENDCH0`",null,null],[6,"PENDCH1_R","","Reader of field `PENDCH1`",null,null],[6,"PENDCH2_R","","Reader of field `PENDCH2`",null,null],[6,"PENDCH3_R","","Reader of field `PENDCH3`",null,null],[6,"PENDCH4_R","","Reader of field `PENDCH4`",null,null],[6,"PENDCH5_R","","Reader of field `PENDCH5`",null,null],[11,"pendch0","atsamd11c::generic","Bit 0 - Pending Channel 0",6,[[],["pendch0_r",6]]],[11,"pendch1","","Bit 1 - Pending Channel 1",6,[[],["pendch1_r",6]]],[11,"pendch2","","Bit 2 - Pending Channel 2",6,[[],["pendch2_r",6]]],[11,"pendch3","","Bit 3 - Pending Channel 3",6,[[],["pendch3_r",6]]],[11,"pendch4","","Bit 4 - Pending Channel 4",6,[[],["pendch4_r",6]]],[11,"pendch5","","Bit 5 - Pending Channel 5",6,[[],["pendch5_r",6]]],[11,"pendch0","atsamd11c::dmac::pendch","Bit 0 - Pending Channel 0",292,[[],["pendch0_r",6]]],[11,"pendch1","","Bit 1 - Pending Channel 1",292,[[],["pendch1_r",6]]],[11,"pendch2","","Bit 2 - Pending Channel 2",292,[[],["pendch2_r",6]]],[11,"pendch3","","Bit 3 - Pending Channel 3",292,[[],["pendch3_r",6]]],[11,"pendch4","","Bit 4 - Pending Channel 4",292,[[],["pendch4_r",6]]],[11,"pendch5","","Bit 5 - Pending Channel 5",292,[[],["pendch5_r",6]]],[0,"active","atsamd11c::dmac","Active Channel and Levels",null,null],[6,"R","atsamd11c::dmac::active","Reader of register ACTIVE",null,null],[6,"LVLEX0_R","","Reader of field `LVLEX0`",null,null],[6,"LVLEX1_R","","Reader of field `LVLEX1`",null,null],[6,"LVLEX2_R","","Reader of field `LVLEX2`",null,null],[6,"LVLEX3_R","","Reader of field `LVLEX3`",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"ABUSY_R","","Reader of field `ABUSY`",null,null],[6,"BTCNT_R","","Reader of field `BTCNT`",null,null],[11,"lvlex0","atsamd11c::generic","Bit 0 - Level 0 Channel Trigger Request Executing",6,[[],["lvlex0_r",6]]],[11,"lvlex1","","Bit 1 - Level 1 Channel Trigger Request Executing",6,[[],["lvlex1_r",6]]],[11,"lvlex2","","Bit 2 - Level 2 Channel Trigger Request Executing",6,[[],["lvlex2_r",6]]],[11,"lvlex3","","Bit 3 - Level 3 Channel Trigger Request Executing",6,[[],["lvlex3_r",6]]],[11,"id","","Bits 8:12 - Active Channel ID",6,[[],["id_r",6]]],[11,"abusy","","Bit 15 - Active Channel Busy",6,[[],["abusy_r",6]]],[11,"btcnt","","Bits 16:31 - Active Channel Block Transfer Count",6,[[],["btcnt_r",6]]],[11,"lvlex0","atsamd11c::dmac::active","Bit 0 - Level 0 Channel Trigger Request Executing",293,[[],["lvlex0_r",6]]],[11,"lvlex1","","Bit 1 - Level 1 Channel Trigger Request Executing",293,[[],["lvlex1_r",6]]],[11,"lvlex2","","Bit 2 - Level 2 Channel Trigger Request Executing",293,[[],["lvlex2_r",6]]],[11,"lvlex3","","Bit 3 - Level 3 Channel Trigger Request Executing",293,[[],["lvlex3_r",6]]],[11,"id","","Bits 8:12 - Active Channel ID",293,[[],["id_r",6]]],[11,"abusy","","Bit 15 - Active Channel Busy",293,[[],["abusy_r",6]]],[11,"btcnt","","Bits 16:31 - Active Channel Block Transfer Count",293,[[],["btcnt_r",6]]],[0,"baseaddr","atsamd11c::dmac","Descriptor Memory Section Base Address",null,null],[3,"BASEADDR_W","atsamd11c::dmac::baseaddr","Write proxy for field `BASEADDR`",null,null],[6,"R","","Reader of register BASEADDR",null,null],[6,"W","","Writer for register BASEADDR",null,null],[6,"BASEADDR_R","","Reader of field `BASEADDR`",null,null],[11,"bits","","Writes raw bits to the field",294,[[],["w",6]]],[11,"baseaddr","atsamd11c::generic","Bits 0:31 - Descriptor Memory Base Address",6,[[],["baseaddr_r",6]]],[11,"baseaddr","atsamd11c::dmac::baseaddr","Bits 0:31 - Descriptor Memory Base Address",295,[[],["baseaddr_r",6]]],[11,"baseaddr","atsamd11c::generic","Bits 0:31 - Descriptor Memory Base Address",7,[[],["baseaddr_w",3]]],[11,"baseaddr","atsamd11c::dmac::baseaddr","Bits 0:31 - Descriptor Memory Base Address",296,[[],["baseaddr_w",3]]],[0,"wrbaddr","atsamd11c::dmac","Write-Back Memory Section Base Address",null,null],[3,"WRBADDR_W","atsamd11c::dmac::wrbaddr","Write proxy for field `WRBADDR`",null,null],[6,"R","","Reader of register WRBADDR",null,null],[6,"W","","Writer for register WRBADDR",null,null],[6,"WRBADDR_R","","Reader of field `WRBADDR`",null,null],[11,"bits","","Writes raw bits to the field",297,[[],["w",6]]],[11,"wrbaddr","atsamd11c::generic","Bits 0:31 - Write-Back Memory Base Address",6,[[],["wrbaddr_r",6]]],[11,"wrbaddr","atsamd11c::dmac::wrbaddr","Bits 0:31 - Write-Back Memory Base Address",298,[[],["wrbaddr_r",6]]],[11,"wrbaddr","atsamd11c::generic","Bits 0:31 - Write-Back Memory Base Address",7,[[],["wrbaddr_w",3]]],[11,"wrbaddr","atsamd11c::dmac::wrbaddr","Bits 0:31 - Write-Back Memory Base Address",299,[[],["wrbaddr_w",3]]],[0,"chid","atsamd11c::dmac","Channel ID",null,null],[3,"ID_W","atsamd11c::dmac::chid","Write proxy for field `ID`",null,null],[6,"R","","Reader of register CHID",null,null],[6,"W","","Writer for register CHID",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[11,"bits","","Writes raw bits to the field",300,[[],["w",6]]],[11,"id","atsamd11c::generic","Bits 0:2 - Channel ID",6,[[],["id_r",6]]],[11,"id","atsamd11c::dmac::chid","Bits 0:2 - Channel ID",301,[[],["id_r",6]]],[11,"id","atsamd11c::generic","Bits 0:2 - Channel ID",7,[[],["id_w",3]]],[11,"id","atsamd11c::dmac::chid","Bits 0:2 - Channel ID",302,[[],["id_w",3]]],[0,"chctrla","atsamd11c::dmac","Channel Control A",null,null],[3,"SWRST_W","atsamd11c::dmac::chctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CHCTRLA",null,null],[6,"W","","Writer for register CHCTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",303,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",303,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",303,[[],["w",6]]],[11,"set_bit","","Sets the field bit",304,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",304,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",304,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Channel Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Channel Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd11c::dmac::chctrla","Bit 0 - Channel Software Reset",305,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Channel Enable",305,[[],["enable_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Channel Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Channel Enable",7,[[],["enable_w",3]]],[11,"swrst","atsamd11c::dmac::chctrla","Bit 0 - Channel Software Reset",306,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Channel Enable",306,[[],["enable_w",3]]],[0,"chctrlb","atsamd11c::dmac","Channel Control B",null,null],[3,"EVACT_W","atsamd11c::dmac::chctrlb","Write proxy for field `EVACT`",null,null],[3,"EVIE_W","","Write proxy for field `EVIE`",null,null],[3,"EVOE_W","","Write proxy for field `EVOE`",null,null],[3,"LVL_W","","Write proxy for field `LVL`",null,null],[3,"TRIGSRC_W","","Write proxy for field `TRIGSRC`",null,null],[3,"TRIGACT_W","","Write proxy for field `TRIGACT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"EVACT_A","","Event Input Action",null,null],[13,"NOACT","","0: No action",307,null],[13,"TRIG","","1: Transfer and periodic transfer trigger",307,null],[13,"CTRIG","","2: Conditional transfer trigger",307,null],[13,"CBLOCK","","3: Conditional block transfer",307,null],[13,"SUSPEND","","4: Channel suspend operation",307,null],[13,"RESUME","","5: Channel resume operation",307,null],[13,"SSKIP","","6: Skip next block suspend action",307,null],[4,"LVL_A","","Channel Arbitration Level",null,null],[13,"LVL0","","0: Channel Priority Level 0",308,null],[13,"LVL1","","1: Channel Priority Level 1",308,null],[13,"LVL2","","2: Channel Priority Level 2",308,null],[13,"LVL3","","3: Channel Priority Level 3",308,null],[4,"TRIGSRC_A","","Trigger Source",null,null],[13,"DISABLE","","0: Only software/event triggers",309,null],[13,"SERCOM0_RX","","1: SERCOM0 RX Trigger",309,null],[13,"SERCOM0_TX","","2: SERCOM0 TX Trigger",309,null],[13,"SERCOM1_RX","","3: SERCOM1 RX Trigger",309,null],[13,"SERCOM1_TX","","4: SERCOM1 TX Trigger",309,null],[13,"SERCOM2_RX","","5: SERCOM2 RX Trigger",309,null],[13,"SERCOM2_TX","","6: SERCOM2 TX Trigger",309,null],[13,"TCC0_OVF","","7: TCC0 Overflow Trigger",309,null],[13,"TCC0_MC0","","8: TCC0 Match/Compare 0 Trigger",309,null],[13,"TCC0_MC1","","9: TCC0 Match/Compare 1 Trigger",309,null],[13,"TCC0_MC2","","10: TCC0 Match/Compare 2 Trigger",309,null],[13,"TCC0_MC3","","11: TCC0 Match/Compare 3 Trigger",309,null],[13,"TC1_OVF","","12: TC1 Overflow Trigger",309,null],[13,"TC1_MC0","","13: TC1 Match/Compare 0 Trigger",309,null],[13,"TC1_MC1","","14: TC1 Match/Compare 1 Trigger",309,null],[13,"TC2_OVF","","15: TC2 Overflow Trigger",309,null],[13,"TC2_MC0","","16: TC2 Match/Compare 0 Trigger",309,null],[13,"TC2_MC1","","17: TC2 Match/Compare 1 Trigger",309,null],[13,"ADC_RESRDY","","18: ADC Result Ready Trigger",309,null],[13,"DAC_EMPTY","","19: DAC Empty Trigger",309,null],[4,"TRIGACT_A","","Trigger Action",null,null],[13,"BLOCK","","0: One trigger required for each block transfer",310,null],[13,"BEAT","","2: One trigger required for each beat transfer",310,null],[13,"TRANSACTION","","3: One trigger required for each transaction",310,null],[4,"CMD_A","","Software Command",null,null],[13,"NOACT","","0: No action",311,null],[13,"SUSPEND","","1: Channel suspend operation",311,null],[13,"RESUME","","2: Channel resume operation",311,null],[6,"R","","Reader of register CHCTRLB",null,null],[6,"W","","Writer for register CHCTRLB",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"EVIE_R","","Reader of field `EVIE`",null,null],[6,"EVOE_R","","Reader of field `EVOE`",null,null],[6,"LVL_R","","Reader of field `LVL`",null,null],[6,"TRIGSRC_R","","Reader of field `TRIGSRC`",null,null],[6,"TRIGACT_R","","Reader of field `TRIGACT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["evact_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_trig","","Checks if the value of the field is `TRIG`",6,[[]]],[11,"is_ctrig","","Checks if the value of the field is `CTRIG`",6,[[]]],[11,"is_cblock","","Checks if the value of the field is `CBLOCK`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"is_sskip","","Checks if the value of the field is `SSKIP`",6,[[]]],[11,"variant","atsamd11c::dmac::chctrlb","Get enumerated values variant",312,[[],[["variant",4],["evact_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",312,[[]]],[11,"is_trig","","Checks if the value of the field is `TRIG`",312,[[]]],[11,"is_ctrig","","Checks if the value of the field is `CTRIG`",312,[[]]],[11,"is_cblock","","Checks if the value of the field is `CBLOCK`",312,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",312,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",312,[[]]],[11,"is_sskip","","Checks if the value of the field is `SSKIP`",312,[[]]],[11,"variant","","Writes `variant` to the field",313,[[["evact_a",4]],["w",6]]],[11,"noact","","No action",313,[[],["w",6]]],[11,"trig","","Transfer and periodic transfer trigger",313,[[],["w",6]]],[11,"ctrig","","Conditional transfer trigger",313,[[],["w",6]]],[11,"cblock","","Conditional block transfer",313,[[],["w",6]]],[11,"suspend","","Channel suspend operation",313,[[],["w",6]]],[11,"resume","","Channel resume operation",313,[[],["w",6]]],[11,"sskip","","Skip next block suspend action",313,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",313,[[],["w",6]]],[11,"set_bit","","Sets the field bit",314,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",314,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",314,[[],["w",6]]],[11,"set_bit","","Sets the field bit",315,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",315,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",315,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["lvl_a",4]]],[11,"is_lvl0","","Checks if the value of the field is `LVL0`",6,[[]]],[11,"is_lvl1","","Checks if the value of the field is `LVL1`",6,[[]]],[11,"is_lvl2","","Checks if the value of the field is `LVL2`",6,[[]]],[11,"is_lvl3","","Checks if the value of the field is `LVL3`",6,[[]]],[11,"variant","atsamd11c::dmac::chctrlb","Get enumerated values variant",316,[[],["lvl_a",4]]],[11,"is_lvl0","","Checks if the value of the field is `LVL0`",316,[[]]],[11,"is_lvl1","","Checks if the value of the field is `LVL1`",316,[[]]],[11,"is_lvl2","","Checks if the value of the field is `LVL2`",316,[[]]],[11,"is_lvl3","","Checks if the value of the field is `LVL3`",316,[[]]],[11,"variant","","Writes `variant` to the field",317,[[["lvl_a",4]],["w",6]]],[11,"lvl0","","Channel Priority Level 0",317,[[],["w",6]]],[11,"lvl1","","Channel Priority Level 1",317,[[],["w",6]]],[11,"lvl2","","Channel Priority Level 2",317,[[],["w",6]]],[11,"lvl3","","Channel Priority Level 3",317,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",317,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["trigsrc_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_sercom0_rx","","Checks if the value of the field is `SERCOM0_RX`",6,[[]]],[11,"is_sercom0_tx","","Checks if the value of the field is `SERCOM0_TX`",6,[[]]],[11,"is_sercom1_rx","","Checks if the value of the field is `SERCOM1_RX`",6,[[]]],[11,"is_sercom1_tx","","Checks if the value of the field is `SERCOM1_TX`",6,[[]]],[11,"is_sercom2_rx","","Checks if the value of the field is `SERCOM2_RX`",6,[[]]],[11,"is_sercom2_tx","","Checks if the value of the field is `SERCOM2_TX`",6,[[]]],[11,"is_tcc0_ovf","","Checks if the value of the field is `TCC0_OVF`",6,[[]]],[11,"is_tcc0_mc0","","Checks if the value of the field is `TCC0_MC0`",6,[[]]],[11,"is_tcc0_mc1","","Checks if the value of the field is `TCC0_MC1`",6,[[]]],[11,"is_tcc0_mc2","","Checks if the value of the field is `TCC0_MC2`",6,[[]]],[11,"is_tcc0_mc3","","Checks if the value of the field is `TCC0_MC3`",6,[[]]],[11,"is_tc1_ovf","","Checks if the value of the field is `TC1_OVF`",6,[[]]],[11,"is_tc1_mc0","","Checks if the value of the field is `TC1_MC0`",6,[[]]],[11,"is_tc1_mc1","","Checks if the value of the field is `TC1_MC1`",6,[[]]],[11,"is_tc2_ovf","","Checks if the value of the field is `TC2_OVF`",6,[[]]],[11,"is_tc2_mc0","","Checks if the value of the field is `TC2_MC0`",6,[[]]],[11,"is_tc2_mc1","","Checks if the value of the field is `TC2_MC1`",6,[[]]],[11,"is_adc_resrdy","","Checks if the value of the field is `ADC_RESRDY`",6,[[]]],[11,"is_dac_empty","","Checks if the value of the field is `DAC_EMPTY`",6,[[]]],[11,"variant","atsamd11c::dmac::chctrlb","Get enumerated values variant",318,[[],[["trigsrc_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",318,[[]]],[11,"is_sercom0_rx","","Checks if the value of the field is `SERCOM0_RX`",318,[[]]],[11,"is_sercom0_tx","","Checks if the value of the field is `SERCOM0_TX`",318,[[]]],[11,"is_sercom1_rx","","Checks if the value of the field is `SERCOM1_RX`",318,[[]]],[11,"is_sercom1_tx","","Checks if the value of the field is `SERCOM1_TX`",318,[[]]],[11,"is_sercom2_rx","","Checks if the value of the field is `SERCOM2_RX`",318,[[]]],[11,"is_sercom2_tx","","Checks if the value of the field is `SERCOM2_TX`",318,[[]]],[11,"is_tcc0_ovf","","Checks if the value of the field is `TCC0_OVF`",318,[[]]],[11,"is_tcc0_mc0","","Checks if the value of the field is `TCC0_MC0`",318,[[]]],[11,"is_tcc0_mc1","","Checks if the value of the field is `TCC0_MC1`",318,[[]]],[11,"is_tcc0_mc2","","Checks if the value of the field is `TCC0_MC2`",318,[[]]],[11,"is_tcc0_mc3","","Checks if the value of the field is `TCC0_MC3`",318,[[]]],[11,"is_tc1_ovf","","Checks if the value of the field is `TC1_OVF`",318,[[]]],[11,"is_tc1_mc0","","Checks if the value of the field is `TC1_MC0`",318,[[]]],[11,"is_tc1_mc1","","Checks if the value of the field is `TC1_MC1`",318,[[]]],[11,"is_tc2_ovf","","Checks if the value of the field is `TC2_OVF`",318,[[]]],[11,"is_tc2_mc0","","Checks if the value of the field is `TC2_MC0`",318,[[]]],[11,"is_tc2_mc1","","Checks if the value of the field is `TC2_MC1`",318,[[]]],[11,"is_adc_resrdy","","Checks if the value of the field is `ADC_RESRDY`",318,[[]]],[11,"is_dac_empty","","Checks if the value of the field is `DAC_EMPTY`",318,[[]]],[11,"variant","","Writes `variant` to the field",319,[[["trigsrc_a",4]],["w",6]]],[11,"disable","","Only software/event triggers",319,[[],["w",6]]],[11,"sercom0_rx","","SERCOM0 RX Trigger",319,[[],["w",6]]],[11,"sercom0_tx","","SERCOM0 TX Trigger",319,[[],["w",6]]],[11,"sercom1_rx","","SERCOM1 RX Trigger",319,[[],["w",6]]],[11,"sercom1_tx","","SERCOM1 TX Trigger",319,[[],["w",6]]],[11,"sercom2_rx","","SERCOM2 RX Trigger",319,[[],["w",6]]],[11,"sercom2_tx","","SERCOM2 TX Trigger",319,[[],["w",6]]],[11,"tcc0_ovf","","TCC0 Overflow Trigger",319,[[],["w",6]]],[11,"tcc0_mc0","","TCC0 Match/Compare 0 Trigger",319,[[],["w",6]]],[11,"tcc0_mc1","","TCC0 Match/Compare 1 Trigger",319,[[],["w",6]]],[11,"tcc0_mc2","","TCC0 Match/Compare 2 Trigger",319,[[],["w",6]]],[11,"tcc0_mc3","","TCC0 Match/Compare 3 Trigger",319,[[],["w",6]]],[11,"tc1_ovf","","TC1 Overflow Trigger",319,[[],["w",6]]],[11,"tc1_mc0","","TC1 Match/Compare 0 Trigger",319,[[],["w",6]]],[11,"tc1_mc1","","TC1 Match/Compare 1 Trigger",319,[[],["w",6]]],[11,"tc2_ovf","","TC2 Overflow Trigger",319,[[],["w",6]]],[11,"tc2_mc0","","TC2 Match/Compare 0 Trigger",319,[[],["w",6]]],[11,"tc2_mc1","","TC2 Match/Compare 1 Trigger",319,[[],["w",6]]],[11,"adc_resrdy","","ADC Result Ready Trigger",319,[[],["w",6]]],[11,"dac_empty","","DAC Empty Trigger",319,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",319,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["trigact_a",4],["variant",4]]]],[11,"is_block","","Checks if the value of the field is `BLOCK`",6,[[]]],[11,"is_beat","","Checks if the value of the field is `BEAT`",6,[[]]],[11,"is_transaction","","Checks if the value of the field is `TRANSACTION`",6,[[]]],[11,"variant","atsamd11c::dmac::chctrlb","Get enumerated values variant",320,[[],[["trigact_a",4],["variant",4]]]],[11,"is_block","","Checks if the value of the field is `BLOCK`",320,[[]]],[11,"is_beat","","Checks if the value of the field is `BEAT`",320,[[]]],[11,"is_transaction","","Checks if the value of the field is `TRANSACTION`",320,[[]]],[11,"variant","","Writes `variant` to the field",321,[[["trigact_a",4]],["w",6]]],[11,"block","","One trigger required for each block transfer",321,[[],["w",6]]],[11,"beat","","One trigger required for each beat transfer",321,[[],["w",6]]],[11,"transaction","","One trigger required for each transaction",321,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",321,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"variant","atsamd11c::dmac::chctrlb","Get enumerated values variant",322,[[],[["variant",4],["cmd_a",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",322,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",322,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",322,[[]]],[11,"variant","","Writes `variant` to the field",323,[[["cmd_a",4]],["w",6]]],[11,"noact","","No action",323,[[],["w",6]]],[11,"suspend","","Channel suspend operation",323,[[],["w",6]]],[11,"resume","","Channel resume operation",323,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",323,[[],["w",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Input Action",6,[[],["evact_r",6]]],[11,"evie","","Bit 3 - Channel Event Input Enable",6,[[],["evie_r",6]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",6,[[],["evoe_r",6]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",6,[[],["lvl_r",6]]],[11,"trigsrc","","Bits 8:12 - Trigger Source",6,[[],["trigsrc_r",6]]],[11,"trigact","","Bits 22:23 - Trigger Action",6,[[],["trigact_r",6]]],[11,"cmd","","Bits 24:25 - Software Command",6,[[],["cmd_r",6]]],[11,"evact","atsamd11c::dmac::chctrlb","Bits 0:2 - Event Input Action",324,[[],["evact_r",6]]],[11,"evie","","Bit 3 - Channel Event Input Enable",324,[[],["evie_r",6]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",324,[[],["evoe_r",6]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",324,[[],["lvl_r",6]]],[11,"trigsrc","","Bits 8:12 - Trigger Source",324,[[],["trigsrc_r",6]]],[11,"trigact","","Bits 22:23 - Trigger Action",324,[[],["trigact_r",6]]],[11,"cmd","","Bits 24:25 - Software Command",324,[[],["cmd_r",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Input Action",7,[[],["evact_w",3]]],[11,"evie","","Bit 3 - Channel Event Input Enable",7,[[],["evie_w",3]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",7,[[],["evoe_w",3]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",7,[[],["lvl_w",3]]],[11,"trigsrc","","Bits 8:12 - Trigger Source",7,[[],["trigsrc_w",3]]],[11,"trigact","","Bits 22:23 - Trigger Action",7,[[],["trigact_w",3]]],[11,"cmd","","Bits 24:25 - Software Command",7,[[],["cmd_w",3]]],[11,"evact","atsamd11c::dmac::chctrlb","Bits 0:2 - Event Input Action",325,[[],["evact_w",3]]],[11,"evie","","Bit 3 - Channel Event Input Enable",325,[[],["evie_w",3]]],[11,"evoe","","Bit 4 - Channel Event Output Enable",325,[[],["evoe_w",3]]],[11,"lvl","","Bits 5:6 - Channel Arbitration Level",325,[[],["lvl_w",3]]],[11,"trigsrc","","Bits 8:12 - Trigger Source",325,[[],["trigsrc_w",3]]],[11,"trigact","","Bits 22:23 - Trigger Action",325,[[],["trigact_w",3]]],[11,"cmd","","Bits 24:25 - Software Command",325,[[],["cmd_w",3]]],[0,"chintenclr","atsamd11c::dmac","Channel Interrupt Enable Clear",null,null],[3,"TERR_W","atsamd11c::dmac::chintenclr","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTENCLR",null,null],[6,"W","","Writer for register CHINTENCLR",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",326,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",326,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",326,[[],["w",6]]],[11,"set_bit","","Sets the field bit",327,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",327,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",327,[[],["w",6]]],[11,"set_bit","","Sets the field bit",328,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",328,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",328,[[],["w",6]]],[11,"terr","atsamd11c::generic","Bit 0 - Channel Transfer Error Interrupt Enable",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",6,[[],["susp_r",6]]],[11,"terr","atsamd11c::dmac::chintenclr","Bit 0 - Channel Transfer Error Interrupt Enable",329,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",329,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",329,[[],["susp_r",6]]],[11,"terr","atsamd11c::generic","Bit 0 - Channel Transfer Error Interrupt Enable",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",7,[[],["susp_w",3]]],[11,"terr","atsamd11c::dmac::chintenclr","Bit 0 - Channel Transfer Error Interrupt Enable",330,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",330,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",330,[[],["susp_w",3]]],[0,"chintenset","atsamd11c::dmac","Channel Interrupt Enable Set",null,null],[3,"TERR_W","atsamd11c::dmac::chintenset","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTENSET",null,null],[6,"W","","Writer for register CHINTENSET",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",331,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",331,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",331,[[],["w",6]]],[11,"set_bit","","Sets the field bit",332,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",332,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",332,[[],["w",6]]],[11,"set_bit","","Sets the field bit",333,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",333,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",333,[[],["w",6]]],[11,"terr","atsamd11c::generic","Bit 0 - Channel Transfer Error Interrupt Enable",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",6,[[],["susp_r",6]]],[11,"terr","atsamd11c::dmac::chintenset","Bit 0 - Channel Transfer Error Interrupt Enable",334,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",334,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",334,[[],["susp_r",6]]],[11,"terr","atsamd11c::generic","Bit 0 - Channel Transfer Error Interrupt Enable",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",7,[[],["susp_w",3]]],[11,"terr","atsamd11c::dmac::chintenset","Bit 0 - Channel Transfer Error Interrupt Enable",335,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",335,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",335,[[],["susp_w",3]]],[0,"chintflag","atsamd11c::dmac","Channel Interrupt Flag Status and Clear",null,null],[3,"TERR_W","atsamd11c::dmac::chintflag","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTFLAG",null,null],[6,"W","","Writer for register CHINTFLAG",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",336,[[],["w",6]]],[11,"set_bit","","Sets the field bit",337,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",337,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",337,[[],["w",6]]],[11,"set_bit","","Sets the field bit",338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",338,[[],["w",6]]],[11,"terr","atsamd11c::generic","Bit 0 - Channel Transfer Error",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend",6,[[],["susp_r",6]]],[11,"terr","atsamd11c::dmac::chintflag","Bit 0 - Channel Transfer Error",339,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",339,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend",339,[[],["susp_r",6]]],[11,"terr","atsamd11c::generic","Bit 0 - Channel Transfer Error",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend",7,[[],["susp_w",3]]],[11,"terr","atsamd11c::dmac::chintflag","Bit 0 - Channel Transfer Error",340,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",340,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend",340,[[],["susp_w",3]]],[0,"chstatus","atsamd11c::dmac","Channel Status",null,null],[6,"R","atsamd11c::dmac::chstatus","Reader of register CHSTATUS",null,null],[6,"PEND_R","","Reader of field `PEND`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[11,"pend","atsamd11c::generic","Bit 0 - Channel Pending",6,[[],["pend_r",6]]],[11,"busy","","Bit 1 - Channel Busy",6,[[],["busy_r",6]]],[11,"ferr","","Bit 2 - Channel Fetch Error",6,[[],["ferr_r",6]]],[11,"pend","atsamd11c::dmac::chstatus","Bit 0 - Channel Pending",341,[[],["pend_r",6]]],[11,"busy","","Bit 1 - Channel Busy",341,[[],["busy_r",6]]],[11,"ferr","","Bit 2 - Channel Fetch Error",341,[[],["ferr_r",6]]],[6,"CTRL","atsamd11c::dmac","Control",null,null],[6,"CRCCTRL","","CRC Control",null,null],[6,"CRCDATAIN","","CRC Data Input",null,null],[6,"CRCCHKSUM","","CRC Checksum",null,null],[6,"CRCSTATUS","","CRC Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"QOSCTRL","","QOS Control",null,null],[6,"SWTRIGCTRL","","Software Trigger Control",null,null],[6,"PRICTRL0","","Priority Control 0",null,null],[6,"INTPEND","","Interrupt Pending",null,null],[6,"INTSTATUS","","Interrupt Status",null,null],[6,"BUSYCH","","Busy Channels",null,null],[6,"PENDCH","","Pending Channels",null,null],[6,"ACTIVE","","Active Channel and Levels",null,null],[6,"BASEADDR","","Descriptor Memory Section Base Address",null,null],[6,"WRBADDR","","Write-Back Memory Section Base Address",null,null],[6,"CHID","","Channel ID",null,null],[6,"CHCTRLA","","Channel Control A",null,null],[6,"CHCTRLB","","Channel Control B",null,null],[6,"CHINTENCLR","","Channel Interrupt Enable Clear",null,null],[6,"CHINTENSET","","Channel Interrupt Enable Set",null,null],[6,"CHINTFLAG","","Channel Interrupt Flag Status and Clear",null,null],[6,"CHSTATUS","","Channel Status",null,null],[0,"dsu","atsamd11c","Device Service Unit",null,null],[3,"RegisterBlock","atsamd11c::dsu","Register block",null,null],[12,"ctrl","","0x00 - Control",342,null],[12,"statusa","","0x01 - Status A",342,null],[12,"statusb","","0x02 - Status B",342,null],[12,"addr","","0x04 - Address",342,null],[12,"length","","0x08 - Length",342,null],[12,"data","","0x0c - Data",342,null],[12,"dcc","","0x10 - Debug Communication Channel n",342,null],[12,"did","","0x18 - Device Identification",342,null],[12,"dcfg","","0xf0 - Device Configuration",342,null],[12,"entry0","","0x1000 - CoreSight ROM Table Entry 0",342,null],[12,"entry1","","0x1004 - CoreSight ROM Table Entry 1",342,null],[12,"end","","0x1008 - CoreSight ROM Table End",342,null],[12,"memtype","","0x1fcc - CoreSight ROM Table Memory Type",342,null],[12,"pid4","","0x1fd0 - Peripheral Identification 4",342,null],[12,"pid5","","0x1fd4 - Peripheral Identification 5",342,null],[12,"pid6","","0x1fd8 - Peripheral Identification 6",342,null],[12,"pid7","","0x1fdc - Peripheral Identification 7",342,null],[12,"pid0","","0x1fe0 - Peripheral Identification 0",342,null],[12,"pid1","","0x1fe4 - Peripheral Identification 1",342,null],[12,"pid2","","0x1fe8 - Peripheral Identification 2",342,null],[12,"pid3","","0x1fec - Peripheral Identification 3",342,null],[12,"cid0","","0x1ff0 - Component Identification 0",342,null],[12,"cid1","","0x1ff4 - Component Identification 1",342,null],[12,"cid2","","0x1ff8 - Component Identification 2",342,null],[12,"cid3","","0x1ffc - Component Identification 3",342,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd11c::dsu::ctrl","Write proxy for field `SWRST`",null,null],[3,"CRC_W","","Write proxy for field `CRC`",null,null],[3,"MBIST_W","","Write proxy for field `MBIST`",null,null],[3,"CE_W","","Write proxy for field `CE`",null,null],[3,"ARR_W","","Write proxy for field `ARR`",null,null],[3,"SMSA_W","","Write proxy for field `SMSA`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",343,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",343,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",343,[[],["w",6]]],[11,"set_bit","","Sets the field bit",344,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",344,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",344,[[],["w",6]]],[11,"set_bit","","Sets the field bit",345,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",345,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",345,[[],["w",6]]],[11,"set_bit","","Sets the field bit",346,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",346,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",346,[[],["w",6]]],[11,"set_bit","","Sets the field bit",347,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",347,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",347,[[],["w",6]]],[11,"set_bit","","Sets the field bit",348,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",348,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",348,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"crc","","Bit 2 - 32-bit Cyclic Redundancy Code",7,[[],["crc_w",3]]],[11,"mbist","","Bit 3 - Memory built-in self-test",7,[[],["mbist_w",3]]],[11,"ce","","Bit 4 - Chip-Erase",7,[[],["ce_w",3]]],[11,"arr","","Bit 6 - Auxiliary Row Read",7,[[],["arr_w",3]]],[11,"smsa","","Bit 7 - Start Memory Stream Access",7,[[],["smsa_w",3]]],[11,"swrst","atsamd11c::dsu::ctrl","Bit 0 - Software Reset",349,[[],["swrst_w",3]]],[11,"crc","","Bit 2 - 32-bit Cyclic Redundancy Code",349,[[],["crc_w",3]]],[11,"mbist","","Bit 3 - Memory built-in self-test",349,[[],["mbist_w",3]]],[11,"ce","","Bit 4 - Chip-Erase",349,[[],["ce_w",3]]],[11,"arr","","Bit 6 - Auxiliary Row Read",349,[[],["arr_w",3]]],[11,"smsa","","Bit 7 - Start Memory Stream Access",349,[[],["smsa_w",3]]],[0,"statusa","atsamd11c::dsu","Status A",null,null],[3,"DONE_W","atsamd11c::dsu::statusa","Write proxy for field `DONE`",null,null],[3,"CRSTEXT_W","","Write proxy for field `CRSTEXT`",null,null],[3,"BERR_W","","Write proxy for field `BERR`",null,null],[3,"FAIL_W","","Write proxy for field `FAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[6,"R","","Reader of register STATUSA",null,null],[6,"W","","Writer for register STATUSA",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[6,"CRSTEXT_R","","Reader of field `CRSTEXT`",null,null],[6,"BERR_R","","Reader of field `BERR`",null,null],[6,"FAIL_R","","Reader of field `FAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[11,"set_bit","","Sets the field bit",350,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",350,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",350,[[],["w",6]]],[11,"set_bit","","Sets the field bit",351,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",351,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",351,[[],["w",6]]],[11,"set_bit","","Sets the field bit",352,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",352,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",352,[[],["w",6]]],[11,"set_bit","","Sets the field bit",353,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",353,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",353,[[],["w",6]]],[11,"set_bit","","Sets the field bit",354,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",354,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",354,[[],["w",6]]],[11,"done","atsamd11c::generic","Bit 0 - Done",6,[[],["done_r",6]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",6,[[],["crstext_r",6]]],[11,"berr","","Bit 2 - Bus Error",6,[[],["berr_r",6]]],[11,"fail","","Bit 3 - Failure",6,[[],["fail_r",6]]],[11,"perr","","Bit 4 - Protection Error",6,[[],["perr_r",6]]],[11,"done","atsamd11c::dsu::statusa","Bit 0 - Done",355,[[],["done_r",6]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",355,[[],["crstext_r",6]]],[11,"berr","","Bit 2 - Bus Error",355,[[],["berr_r",6]]],[11,"fail","","Bit 3 - Failure",355,[[],["fail_r",6]]],[11,"perr","","Bit 4 - Protection Error",355,[[],["perr_r",6]]],[11,"done","atsamd11c::generic","Bit 0 - Done",7,[[],["done_w",3]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",7,[[],["crstext_w",3]]],[11,"berr","","Bit 2 - Bus Error",7,[[],["berr_w",3]]],[11,"fail","","Bit 3 - Failure",7,[[],["fail_w",3]]],[11,"perr","","Bit 4 - Protection Error",7,[[],["perr_w",3]]],[11,"done","atsamd11c::dsu::statusa","Bit 0 - Done",356,[[],["done_w",3]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",356,[[],["crstext_w",3]]],[11,"berr","","Bit 2 - Bus Error",356,[[],["berr_w",3]]],[11,"fail","","Bit 3 - Failure",356,[[],["fail_w",3]]],[11,"perr","","Bit 4 - Protection Error",356,[[],["perr_w",3]]],[0,"statusb","atsamd11c::dsu","Status B",null,null],[6,"R","atsamd11c::dsu::statusb","Reader of register STATUSB",null,null],[6,"PROT_R","","Reader of field `PROT`",null,null],[6,"DBGPRES_R","","Reader of field `DBGPRES`",null,null],[6,"DCCD0_R","","Reader of field `DCCD0`",null,null],[6,"DCCD1_R","","Reader of field `DCCD1`",null,null],[6,"HPE_R","","Reader of field `HPE`",null,null],[11,"prot","atsamd11c::generic","Bit 0 - Protected",6,[[],["prot_r",6]]],[11,"dbgpres","","Bit 1 - Debugger Present",6,[[],["dbgpres_r",6]]],[11,"dccd0","","Bit 2 - Debug Communication Channel 0 Dirty",6,[[],["dccd0_r",6]]],[11,"dccd1","","Bit 3 - Debug Communication Channel 1 Dirty",6,[[],["dccd1_r",6]]],[11,"hpe","","Bit 4 - Hot-Plugging Enable",6,[[],["hpe_r",6]]],[11,"prot","atsamd11c::dsu::statusb","Bit 0 - Protected",357,[[],["prot_r",6]]],[11,"dbgpres","","Bit 1 - Debugger Present",357,[[],["dbgpres_r",6]]],[11,"dccd0","","Bit 2 - Debug Communication Channel 0 Dirty",357,[[],["dccd0_r",6]]],[11,"dccd1","","Bit 3 - Debug Communication Channel 1 Dirty",357,[[],["dccd1_r",6]]],[11,"hpe","","Bit 4 - Hot-Plugging Enable",357,[[],["hpe_r",6]]],[0,"addr","atsamd11c::dsu","Address",null,null],[3,"AMOD_W","atsamd11c::dsu::addr","Write proxy for field `AMOD`",null,null],[3,"ADDR_W","","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"AMOD_R","","Reader of field `AMOD`",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",358,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",359,[[],["w",6]]],[11,"amod","atsamd11c::generic","Bits 0:1 - Access Mode",6,[[],["amod_r",6]]],[11,"addr","","Bits 2:31 - Address",6,[[],["addr_r",6]]],[11,"amod","atsamd11c::dsu::addr","Bits 0:1 - Access Mode",360,[[],["amod_r",6]]],[11,"addr","","Bits 2:31 - Address",360,[[],["addr_r",6]]],[11,"amod","atsamd11c::generic","Bits 0:1 - Access Mode",7,[[],["amod_w",3]]],[11,"addr","","Bits 2:31 - Address",7,[[],["addr_w",3]]],[11,"amod","atsamd11c::dsu::addr","Bits 0:1 - Access Mode",361,[[],["amod_w",3]]],[11,"addr","","Bits 2:31 - Address",361,[[],["addr_w",3]]],[0,"length","atsamd11c::dsu","Length",null,null],[3,"LENGTH_W","atsamd11c::dsu::length","Write proxy for field `LENGTH`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"bits","","Writes raw bits to the field",362,[[],["w",6]]],[11,"length","atsamd11c::generic","Bits 2:31 - Length",6,[[],["length_r",6]]],[11,"length","atsamd11c::dsu::length","Bits 2:31 - Length",363,[[],["length_r",6]]],[11,"length","atsamd11c::generic","Bits 2:31 - Length",7,[[],["length_w",3]]],[11,"length","atsamd11c::dsu::length","Bits 2:31 - Length",364,[[],["length_w",3]]],[0,"data","atsamd11c::dsu","Data",null,null],[3,"DATA_W","atsamd11c::dsu::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",365,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:31 - Data",6,[[],["data_r",6]]],[11,"data","atsamd11c::dsu::data","Bits 0:31 - Data",366,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:31 - Data",7,[[],["data_w",3]]],[11,"data","atsamd11c::dsu::data","Bits 0:31 - Data",367,[[],["data_w",3]]],[0,"dcc","atsamd11c::dsu","Debug Communication Channel n",null,null],[3,"DATA_W","atsamd11c::dsu::dcc","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DCC%s",null,null],[6,"W","","Writer for register DCC%s",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",368,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:31 - Data",6,[[],["data_r",6]]],[11,"data","atsamd11c::dsu::dcc","Bits 0:31 - Data",369,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:31 - Data",7,[[],["data_w",3]]],[11,"data","atsamd11c::dsu::dcc","Bits 0:31 - Data",370,[[],["data_w",3]]],[0,"did","atsamd11c::dsu","Device Identification",null,null],[4,"SERIES_A","atsamd11c::dsu::did","Series",null,null],[13,"_0","","0: Cortex-M0+ processor, basic feature set",371,null],[13,"_1","","1: Cortex-M0+ processor, USB",371,null],[4,"FAMILY_A","","Family",null,null],[13,"_0","","0: General purpose microcontroller",372,null],[13,"_1","","1: PicoPower",372,null],[4,"PROCESSOR_A","","Processor",null,null],[13,"_0","","0: Cortex-M0",373,null],[13,"_1","","1: Cortex-M0+",373,null],[13,"_2","","2: Cortex-M3",373,null],[13,"_3","","3: Cortex-M4",373,null],[6,"R","","Reader of register DID",null,null],[6,"DEVSEL_R","","Reader of field `DEVSEL`",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[6,"DIE_R","","Reader of field `DIE`",null,null],[6,"SERIES_R","","Reader of field `SERIES`",null,null],[6,"FAMILY_R","","Reader of field `FAMILY`",null,null],[6,"PROCESSOR_R","","Reader of field `PROCESSOR`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["series_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"variant","atsamd11c::dsu::did","Get enumerated values variant",374,[[],[["variant",4],["series_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",374,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",374,[[]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["family_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"variant","atsamd11c::dsu::did","Get enumerated values variant",375,[[],[["variant",4],["family_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",375,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",375,[[]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["processor_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"variant","atsamd11c::dsu::did","Get enumerated values variant",376,[[],[["variant",4],["processor_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",376,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",376,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",376,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",376,[[]]],[11,"devsel","atsamd11c::generic","Bits 0:7 - Device Select",6,[[],["devsel_r",6]]],[11,"revision","","Bits 8:11 - Revision Number",6,[[],["revision_r",6]]],[11,"die","","Bits 12:15 - Die Number",6,[[],["die_r",6]]],[11,"series","","Bits 16:21 - Series",6,[[],["series_r",6]]],[11,"family","","Bits 23:27 - Family",6,[[],["family_r",6]]],[11,"processor","","Bits 28:31 - Processor",6,[[],["processor_r",6]]],[11,"devsel","atsamd11c::dsu::did","Bits 0:7 - Device Select",377,[[],["devsel_r",6]]],[11,"revision","","Bits 8:11 - Revision Number",377,[[],["revision_r",6]]],[11,"die","","Bits 12:15 - Die Number",377,[[],["die_r",6]]],[11,"series","","Bits 16:21 - Series",377,[[],["series_r",6]]],[11,"family","","Bits 23:27 - Family",377,[[],["family_r",6]]],[11,"processor","","Bits 28:31 - Processor",377,[[],["processor_r",6]]],[0,"dcfg","atsamd11c::dsu","Device Configuration",null,null],[3,"DCFG_W","atsamd11c::dsu::dcfg","Write proxy for field `DCFG`",null,null],[6,"R","","Reader of register DCFG%s",null,null],[6,"W","","Writer for register DCFG%s",null,null],[6,"DCFG_R","","Reader of field `DCFG`",null,null],[11,"bits","","Writes raw bits to the field",378,[[],["w",6]]],[11,"dcfg","atsamd11c::generic","Bits 0:31 - Device Configuration",6,[[],["dcfg_r",6]]],[11,"dcfg","atsamd11c::dsu::dcfg","Bits 0:31 - Device Configuration",379,[[],["dcfg_r",6]]],[11,"dcfg","atsamd11c::generic","Bits 0:31 - Device Configuration",7,[[],["dcfg_w",3]]],[11,"dcfg","atsamd11c::dsu::dcfg","Bits 0:31 - Device Configuration",380,[[],["dcfg_w",3]]],[0,"entry0","atsamd11c::dsu","CoreSight ROM Table Entry 0",null,null],[6,"R","atsamd11c::dsu::entry0","Reader of register ENTRY0",null,null],[6,"EPRES_R","","Reader of field `EPRES`",null,null],[6,"FMT_R","","Reader of field `FMT`",null,null],[6,"ADDOFF_R","","Reader of field `ADDOFF`",null,null],[11,"epres","atsamd11c::generic","Bit 0 - Entry Present",6,[[],["epres_r",6]]],[11,"fmt","","Bit 1 - Format",6,[[],["fmt_r",6]]],[11,"addoff","","Bits 12:31 - Address Offset",6,[[],["addoff_r",6]]],[11,"epres","atsamd11c::dsu::entry0","Bit 0 - Entry Present",381,[[],["epres_r",6]]],[11,"fmt","","Bit 1 - Format",381,[[],["fmt_r",6]]],[11,"addoff","","Bits 12:31 - Address Offset",381,[[],["addoff_r",6]]],[0,"entry1","atsamd11c::dsu","CoreSight ROM Table Entry 1",null,null],[6,"R","atsamd11c::dsu::entry1","Reader of register ENTRY1",null,null],[0,"end","atsamd11c::dsu","CoreSight ROM Table End",null,null],[6,"R","atsamd11c::dsu::end","Reader of register END",null,null],[6,"END_R","","Reader of field `END`",null,null],[11,"end","atsamd11c::generic","Bits 0:31 - End Marker",6,[[],["end_r",6]]],[11,"end","atsamd11c::dsu::end","Bits 0:31 - End Marker",382,[[],["end_r",6]]],[0,"memtype","atsamd11c::dsu","CoreSight ROM Table Memory Type",null,null],[6,"R","atsamd11c::dsu::memtype","Reader of register MEMTYPE",null,null],[6,"SMEMP_R","","Reader of field `SMEMP`",null,null],[11,"smemp","atsamd11c::generic","Bit 0 - System Memory Present",6,[[],["smemp_r",6]]],[11,"smemp","atsamd11c::dsu::memtype","Bit 0 - System Memory Present",383,[[],["smemp_r",6]]],[0,"pid4","atsamd11c::dsu","Peripheral Identification 4",null,null],[6,"R","atsamd11c::dsu::pid4","Reader of register PID4",null,null],[6,"JEPCC_R","","Reader of field `JEPCC`",null,null],[6,"FKBC_R","","Reader of field `FKBC`",null,null],[11,"jepcc","atsamd11c::generic","Bits 0:3 - JEP-106 Continuation Code",6,[[],["jepcc_r",6]]],[11,"fkbc","","Bits 4:7 - 4KB count",6,[[],["fkbc_r",6]]],[11,"jepcc","atsamd11c::dsu::pid4","Bits 0:3 - JEP-106 Continuation Code",384,[[],["jepcc_r",6]]],[11,"fkbc","","Bits 4:7 - 4KB count",384,[[],["fkbc_r",6]]],[0,"pid5","atsamd11c::dsu","Peripheral Identification 5",null,null],[6,"R","atsamd11c::dsu::pid5","Reader of register PID5",null,null],[0,"pid6","atsamd11c::dsu","Peripheral Identification 6",null,null],[6,"R","atsamd11c::dsu::pid6","Reader of register PID6",null,null],[0,"pid7","atsamd11c::dsu","Peripheral Identification 7",null,null],[6,"R","atsamd11c::dsu::pid7","Reader of register PID7",null,null],[0,"pid0","atsamd11c::dsu","Peripheral Identification 0",null,null],[6,"R","atsamd11c::dsu::pid0","Reader of register PID0",null,null],[6,"PARTNBL_R","","Reader of field `PARTNBL`",null,null],[11,"partnbl","atsamd11c::generic","Bits 0:7 - Part Number Low",6,[[],["partnbl_r",6]]],[11,"partnbl","atsamd11c::dsu::pid0","Bits 0:7 - Part Number Low",385,[[],["partnbl_r",6]]],[0,"pid1","atsamd11c::dsu","Peripheral Identification 1",null,null],[6,"R","atsamd11c::dsu::pid1","Reader of register PID1",null,null],[6,"PARTNBH_R","","Reader of field `PARTNBH`",null,null],[6,"JEPIDCL_R","","Reader of field `JEPIDCL`",null,null],[11,"partnbh","atsamd11c::generic","Bits 0:3 - Part Number High",6,[[],["partnbh_r",6]]],[11,"jepidcl","","Bits 4:7 - Low part of the JEP-106 Identity Code",6,[[],["jepidcl_r",6]]],[11,"partnbh","atsamd11c::dsu::pid1","Bits 0:3 - Part Number High",386,[[],["partnbh_r",6]]],[11,"jepidcl","","Bits 4:7 - Low part of the JEP-106 Identity Code",386,[[],["jepidcl_r",6]]],[0,"pid2","atsamd11c::dsu","Peripheral Identification 2",null,null],[6,"R","atsamd11c::dsu::pid2","Reader of register PID2",null,null],[6,"JEPIDCH_R","","Reader of field `JEPIDCH`",null,null],[6,"JEPU_R","","Reader of field `JEPU`",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[11,"jepidch","atsamd11c::generic","Bits 0:2 - JEP-106 Identity Code High",6,[[],["jepidch_r",6]]],[11,"jepu","","Bit 3 - JEP-106 Identity Code is used",6,[[],["jepu_r",6]]],[11,"revision","","Bits 4:7 - Revision Number",6,[[],["revision_r",6]]],[11,"jepidch","atsamd11c::dsu::pid2","Bits 0:2 - JEP-106 Identity Code High",387,[[],["jepidch_r",6]]],[11,"jepu","","Bit 3 - JEP-106 Identity Code is used",387,[[],["jepu_r",6]]],[11,"revision","","Bits 4:7 - Revision Number",387,[[],["revision_r",6]]],[0,"pid3","atsamd11c::dsu","Peripheral Identification 3",null,null],[6,"R","atsamd11c::dsu::pid3","Reader of register PID3",null,null],[6,"CUSMOD_R","","Reader of field `CUSMOD`",null,null],[6,"REVAND_R","","Reader of field `REVAND`",null,null],[11,"cusmod","atsamd11c::generic","Bits 0:3 - ARM CUSMOD",6,[[],["cusmod_r",6]]],[11,"revand","","Bits 4:7 - Revision Number",6,[[],["revand_r",6]]],[11,"cusmod","atsamd11c::dsu::pid3","Bits 0:3 - ARM CUSMOD",388,[[],["cusmod_r",6]]],[11,"revand","","Bits 4:7 - Revision Number",388,[[],["revand_r",6]]],[0,"cid0","atsamd11c::dsu","Component Identification 0",null,null],[6,"R","atsamd11c::dsu::cid0","Reader of register CID0",null,null],[6,"PREAMBLEB0_R","","Reader of field `PREAMBLEB0`",null,null],[11,"preambleb0","atsamd11c::generic","Bits 0:7 - Preamble Byte 0",6,[[],["preambleb0_r",6]]],[11,"preambleb0","atsamd11c::dsu::cid0","Bits 0:7 - Preamble Byte 0",389,[[],["preambleb0_r",6]]],[0,"cid1","atsamd11c::dsu","Component Identification 1",null,null],[6,"R","atsamd11c::dsu::cid1","Reader of register CID1",null,null],[6,"PREAMBLE_R","","Reader of field `PREAMBLE`",null,null],[6,"CCLASS_R","","Reader of field `CCLASS`",null,null],[11,"preamble","atsamd11c::generic","Bits 0:3 - Preamble",6,[[],["preamble_r",6]]],[11,"cclass","","Bits 4:7 - Component Class",6,[[],["cclass_r",6]]],[11,"preamble","atsamd11c::dsu::cid1","Bits 0:3 - Preamble",390,[[],["preamble_r",6]]],[11,"cclass","","Bits 4:7 - Component Class",390,[[],["cclass_r",6]]],[0,"cid2","atsamd11c::dsu","Component Identification 2",null,null],[6,"R","atsamd11c::dsu::cid2","Reader of register CID2",null,null],[6,"PREAMBLEB2_R","","Reader of field `PREAMBLEB2`",null,null],[11,"preambleb2","atsamd11c::generic","Bits 0:7 - Preamble Byte 2",6,[[],["preambleb2_r",6]]],[11,"preambleb2","atsamd11c::dsu::cid2","Bits 0:7 - Preamble Byte 2",391,[[],["preambleb2_r",6]]],[0,"cid3","atsamd11c::dsu","Component Identification 3",null,null],[6,"R","atsamd11c::dsu::cid3","Reader of register CID3",null,null],[6,"PREAMBLEB3_R","","Reader of field `PREAMBLEB3`",null,null],[11,"preambleb3","atsamd11c::generic","Bits 0:7 - Preamble Byte 3",6,[[],["preambleb3_r",6]]],[11,"preambleb3","atsamd11c::dsu::cid3","Bits 0:7 - Preamble Byte 3",392,[[],["preambleb3_r",6]]],[6,"CTRL","atsamd11c::dsu","Control",null,null],[6,"STATUSA","","Status A",null,null],[6,"STATUSB","","Status B",null,null],[6,"ADDR","","Address",null,null],[6,"LENGTH","","Length",null,null],[6,"DATA","","Data",null,null],[6,"DCC","","Debug Communication Channel n",null,null],[6,"DID","","Device Identification",null,null],[6,"DCFG","","Device Configuration",null,null],[6,"ENTRY0","","CoreSight ROM Table Entry 0",null,null],[6,"ENTRY1","","CoreSight ROM Table Entry 1",null,null],[6,"END","","CoreSight ROM Table End",null,null],[6,"MEMTYPE","","CoreSight ROM Table Memory Type",null,null],[6,"PID4","","Peripheral Identification 4",null,null],[6,"PID5","","Peripheral Identification 5",null,null],[6,"PID6","","Peripheral Identification 6",null,null],[6,"PID7","","Peripheral Identification 7",null,null],[6,"PID0","","Peripheral Identification 0",null,null],[6,"PID1","","Peripheral Identification 1",null,null],[6,"PID2","","Peripheral Identification 2",null,null],[6,"PID3","","Peripheral Identification 3",null,null],[6,"CID0","","Component Identification 0",null,null],[6,"CID1","","Component Identification 1",null,null],[6,"CID2","","Component Identification 2",null,null],[6,"CID3","","Component Identification 3",null,null],[0,"eic","atsamd11c","External Interrupt Controller",null,null],[3,"RegisterBlock","atsamd11c::eic","Register block",null,null],[12,"ctrl","","0x00 - Control",393,null],[12,"status","","0x01 - Status",393,null],[12,"nmictrl","","0x02 - Non-Maskable Interrupt Control",393,null],[12,"nmiflag","","0x03 - Non-Maskable Interrupt Flag Status and Clear",393,null],[12,"evctrl","","0x04 - Event Control",393,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",393,null],[12,"intenset","","0x0c - Interrupt Enable Set",393,null],[12,"intflag","","0x10 - Interrupt Flag Status and Clear",393,null],[12,"wakeup","","0x14 - Wake-Up Enable",393,null],[12,"config","","0x18 - Configuration n",393,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd11c::eic::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",394,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",394,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",394,[[],["w",6]]],[11,"set_bit","","Sets the field bit",395,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",395,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",395,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd11c::eic::ctrl","Bit 0 - Software Reset",396,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",396,[[],["enable_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"swrst","atsamd11c::eic::ctrl","Bit 0 - Software Reset",397,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",397,[[],["enable_w",3]]],[0,"status","atsamd11c::eic","Status",null,null],[6,"R","atsamd11c::eic::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::eic::status","Bit 7 - Synchronization Busy",398,[[],["syncbusy_r",6]]],[0,"nmictrl","atsamd11c::eic","Non-Maskable Interrupt Control",null,null],[3,"NMISENSE_W","atsamd11c::eic::nmictrl","Write proxy for field `NMISENSE`",null,null],[3,"NMIFILTEN_W","","Write proxy for field `NMIFILTEN`",null,null],[4,"NMISENSE_A","","Non-Maskable Interrupt Sense",null,null],[13,"NONE","","0: No detection",399,null],[13,"RISE","","1: Rising-edge detection",399,null],[13,"FALL","","2: Falling-edge detection",399,null],[13,"BOTH","","3: Both-edges detection",399,null],[13,"HIGH","","4: High-level detection",399,null],[13,"LOW","","5: Low-level detection",399,null],[6,"R","","Reader of register NMICTRL",null,null],[6,"W","","Writer for register NMICTRL",null,null],[6,"NMISENSE_R","","Reader of field `NMISENSE`",null,null],[6,"NMIFILTEN_R","","Reader of field `NMIFILTEN`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["nmisense_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::nmictrl","Get enumerated values variant",400,[[],[["nmisense_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",400,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",400,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",400,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",400,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",400,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",400,[[]]],[11,"variant","","Writes `variant` to the field",401,[[["nmisense_a",4]],["w",6]]],[11,"none","","No detection",401,[[],["w",6]]],[11,"rise","","Rising-edge detection",401,[[],["w",6]]],[11,"fall","","Falling-edge detection",401,[[],["w",6]]],[11,"both","","Both-edges detection",401,[[],["w",6]]],[11,"high","","High-level detection",401,[[],["w",6]]],[11,"low","","Low-level detection",401,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",401,[[],["w",6]]],[11,"set_bit","","Sets the field bit",402,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",402,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",402,[[],["w",6]]],[11,"nmisense","atsamd11c::generic","Bits 0:2 - Non-Maskable Interrupt Sense",6,[[],["nmisense_r",6]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",6,[[],["nmifilten_r",6]]],[11,"nmisense","atsamd11c::eic::nmictrl","Bits 0:2 - Non-Maskable Interrupt Sense",403,[[],["nmisense_r",6]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",403,[[],["nmifilten_r",6]]],[11,"nmisense","atsamd11c::generic","Bits 0:2 - Non-Maskable Interrupt Sense",7,[[],["nmisense_w",3]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",7,[[],["nmifilten_w",3]]],[11,"nmisense","atsamd11c::eic::nmictrl","Bits 0:2 - Non-Maskable Interrupt Sense",404,[[],["nmisense_w",3]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",404,[[],["nmifilten_w",3]]],[0,"nmiflag","atsamd11c::eic","Non-Maskable Interrupt Flag Status and Clear",null,null],[3,"NMI_W","atsamd11c::eic::nmiflag","Write proxy for field `NMI`",null,null],[6,"R","","Reader of register NMIFLAG",null,null],[6,"W","","Writer for register NMIFLAG",null,null],[6,"NMI_R","","Reader of field `NMI`",null,null],[11,"set_bit","","Sets the field bit",405,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",405,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",405,[[],["w",6]]],[11,"nmi","atsamd11c::generic","Bit 0 - Non-Maskable Interrupt",6,[[],["nmi_r",6]]],[11,"nmi","atsamd11c::eic::nmiflag","Bit 0 - Non-Maskable Interrupt",406,[[],["nmi_r",6]]],[11,"nmi","atsamd11c::generic","Bit 0 - Non-Maskable Interrupt",7,[[],["nmi_w",3]]],[11,"nmi","atsamd11c::eic::nmiflag","Bit 0 - Non-Maskable Interrupt",407,[[],["nmi_w",3]]],[0,"evctrl","atsamd11c::eic","Event Control",null,null],[3,"EXTINTEO0_W","atsamd11c::eic::evctrl","Write proxy for field `EXTINTEO0`",null,null],[3,"EXTINTEO1_W","","Write proxy for field `EXTINTEO1`",null,null],[3,"EXTINTEO2_W","","Write proxy for field `EXTINTEO2`",null,null],[3,"EXTINTEO3_W","","Write proxy for field `EXTINTEO3`",null,null],[3,"EXTINTEO4_W","","Write proxy for field `EXTINTEO4`",null,null],[3,"EXTINTEO5_W","","Write proxy for field `EXTINTEO5`",null,null],[3,"EXTINTEO6_W","","Write proxy for field `EXTINTEO6`",null,null],[3,"EXTINTEO7_W","","Write proxy for field `EXTINTEO7`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EXTINTEO0_R","","Reader of field `EXTINTEO0`",null,null],[6,"EXTINTEO1_R","","Reader of field `EXTINTEO1`",null,null],[6,"EXTINTEO2_R","","Reader of field `EXTINTEO2`",null,null],[6,"EXTINTEO3_R","","Reader of field `EXTINTEO3`",null,null],[6,"EXTINTEO4_R","","Reader of field `EXTINTEO4`",null,null],[6,"EXTINTEO5_R","","Reader of field `EXTINTEO5`",null,null],[6,"EXTINTEO6_R","","Reader of field `EXTINTEO6`",null,null],[6,"EXTINTEO7_R","","Reader of field `EXTINTEO7`",null,null],[11,"set_bit","","Sets the field bit",408,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",408,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",408,[[],["w",6]]],[11,"set_bit","","Sets the field bit",409,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",409,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",409,[[],["w",6]]],[11,"set_bit","","Sets the field bit",410,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",410,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",410,[[],["w",6]]],[11,"set_bit","","Sets the field bit",411,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",411,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",411,[[],["w",6]]],[11,"set_bit","","Sets the field bit",412,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",412,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",412,[[],["w",6]]],[11,"set_bit","","Sets the field bit",413,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",413,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",413,[[],["w",6]]],[11,"set_bit","","Sets the field bit",414,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",414,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",414,[[],["w",6]]],[11,"set_bit","","Sets the field bit",415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",415,[[],["w",6]]],[11,"extinteo0","atsamd11c::generic","Bit 0 - External Interrupt 0 Event Output Enable",6,[[],["extinteo0_r",6]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",6,[[],["extinteo1_r",6]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",6,[[],["extinteo2_r",6]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",6,[[],["extinteo3_r",6]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",6,[[],["extinteo4_r",6]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",6,[[],["extinteo5_r",6]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",6,[[],["extinteo6_r",6]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",6,[[],["extinteo7_r",6]]],[11,"extinteo0","atsamd11c::eic::evctrl","Bit 0 - External Interrupt 0 Event Output Enable",416,[[],["extinteo0_r",6]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",416,[[],["extinteo1_r",6]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",416,[[],["extinteo2_r",6]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",416,[[],["extinteo3_r",6]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",416,[[],["extinteo4_r",6]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",416,[[],["extinteo5_r",6]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",416,[[],["extinteo6_r",6]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",416,[[],["extinteo7_r",6]]],[11,"extinteo0","atsamd11c::generic","Bit 0 - External Interrupt 0 Event Output Enable",7,[[],["extinteo0_w",3]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",7,[[],["extinteo1_w",3]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",7,[[],["extinteo2_w",3]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",7,[[],["extinteo3_w",3]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",7,[[],["extinteo4_w",3]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",7,[[],["extinteo5_w",3]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",7,[[],["extinteo6_w",3]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",7,[[],["extinteo7_w",3]]],[11,"extinteo0","atsamd11c::eic::evctrl","Bit 0 - External Interrupt 0 Event Output Enable",417,[[],["extinteo0_w",3]]],[11,"extinteo1","","Bit 1 - External Interrupt 1 Event Output Enable",417,[[],["extinteo1_w",3]]],[11,"extinteo2","","Bit 2 - External Interrupt 2 Event Output Enable",417,[[],["extinteo2_w",3]]],[11,"extinteo3","","Bit 3 - External Interrupt 3 Event Output Enable",417,[[],["extinteo3_w",3]]],[11,"extinteo4","","Bit 4 - External Interrupt 4 Event Output Enable",417,[[],["extinteo4_w",3]]],[11,"extinteo5","","Bit 5 - External Interrupt 5 Event Output Enable",417,[[],["extinteo5_w",3]]],[11,"extinteo6","","Bit 6 - External Interrupt 6 Event Output Enable",417,[[],["extinteo6_w",3]]],[11,"extinteo7","","Bit 7 - External Interrupt 7 Event Output Enable",417,[[],["extinteo7_w",3]]],[0,"intenclr","atsamd11c::eic","Interrupt Enable Clear",null,null],[3,"EXTINT0_W","atsamd11c::eic::intenclr","Write proxy for field `EXTINT0`",null,null],[3,"EXTINT1_W","","Write proxy for field `EXTINT1`",null,null],[3,"EXTINT2_W","","Write proxy for field `EXTINT2`",null,null],[3,"EXTINT3_W","","Write proxy for field `EXTINT3`",null,null],[3,"EXTINT4_W","","Write proxy for field `EXTINT4`",null,null],[3,"EXTINT5_W","","Write proxy for field `EXTINT5`",null,null],[3,"EXTINT6_W","","Write proxy for field `EXTINT6`",null,null],[3,"EXTINT7_W","","Write proxy for field `EXTINT7`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"EXTINT0_R","","Reader of field `EXTINT0`",null,null],[6,"EXTINT1_R","","Reader of field `EXTINT1`",null,null],[6,"EXTINT2_R","","Reader of field `EXTINT2`",null,null],[6,"EXTINT3_R","","Reader of field `EXTINT3`",null,null],[6,"EXTINT4_R","","Reader of field `EXTINT4`",null,null],[6,"EXTINT5_R","","Reader of field `EXTINT5`",null,null],[6,"EXTINT6_R","","Reader of field `EXTINT6`",null,null],[6,"EXTINT7_R","","Reader of field `EXTINT7`",null,null],[11,"set_bit","","Sets the field bit",418,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",418,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",418,[[],["w",6]]],[11,"set_bit","","Sets the field bit",419,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",419,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",419,[[],["w",6]]],[11,"set_bit","","Sets the field bit",420,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",420,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",420,[[],["w",6]]],[11,"set_bit","","Sets the field bit",421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",422,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",422,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",422,[[],["w",6]]],[11,"set_bit","","Sets the field bit",423,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",423,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",423,[[],["w",6]]],[11,"set_bit","","Sets the field bit",424,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",424,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",424,[[],["w",6]]],[11,"set_bit","","Sets the field bit",425,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",425,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",425,[[],["w",6]]],[11,"extint0","atsamd11c::generic","Bit 0 - External Interrupt 0 Enable",6,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",6,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",6,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",6,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",6,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",6,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",6,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",6,[[],["extint7_r",6]]],[11,"extint0","atsamd11c::eic::intenclr","Bit 0 - External Interrupt 0 Enable",426,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",426,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",426,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",426,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",426,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",426,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",426,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",426,[[],["extint7_r",6]]],[11,"extint0","atsamd11c::generic","Bit 0 - External Interrupt 0 Enable",7,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",7,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",7,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",7,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",7,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",7,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",7,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",7,[[],["extint7_w",3]]],[11,"extint0","atsamd11c::eic::intenclr","Bit 0 - External Interrupt 0 Enable",427,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",427,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",427,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",427,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",427,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",427,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",427,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",427,[[],["extint7_w",3]]],[0,"intenset","atsamd11c::eic","Interrupt Enable Set",null,null],[3,"EXTINT0_W","atsamd11c::eic::intenset","Write proxy for field `EXTINT0`",null,null],[3,"EXTINT1_W","","Write proxy for field `EXTINT1`",null,null],[3,"EXTINT2_W","","Write proxy for field `EXTINT2`",null,null],[3,"EXTINT3_W","","Write proxy for field `EXTINT3`",null,null],[3,"EXTINT4_W","","Write proxy for field `EXTINT4`",null,null],[3,"EXTINT5_W","","Write proxy for field `EXTINT5`",null,null],[3,"EXTINT6_W","","Write proxy for field `EXTINT6`",null,null],[3,"EXTINT7_W","","Write proxy for field `EXTINT7`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"EXTINT0_R","","Reader of field `EXTINT0`",null,null],[6,"EXTINT1_R","","Reader of field `EXTINT1`",null,null],[6,"EXTINT2_R","","Reader of field `EXTINT2`",null,null],[6,"EXTINT3_R","","Reader of field `EXTINT3`",null,null],[6,"EXTINT4_R","","Reader of field `EXTINT4`",null,null],[6,"EXTINT5_R","","Reader of field `EXTINT5`",null,null],[6,"EXTINT6_R","","Reader of field `EXTINT6`",null,null],[6,"EXTINT7_R","","Reader of field `EXTINT7`",null,null],[11,"set_bit","","Sets the field bit",428,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",428,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",428,[[],["w",6]]],[11,"set_bit","","Sets the field bit",429,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",429,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",429,[[],["w",6]]],[11,"set_bit","","Sets the field bit",430,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",430,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",430,[[],["w",6]]],[11,"set_bit","","Sets the field bit",431,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",431,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",431,[[],["w",6]]],[11,"set_bit","","Sets the field bit",432,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",432,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",432,[[],["w",6]]],[11,"set_bit","","Sets the field bit",433,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",433,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",433,[[],["w",6]]],[11,"set_bit","","Sets the field bit",434,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",434,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",434,[[],["w",6]]],[11,"set_bit","","Sets the field bit",435,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",435,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",435,[[],["w",6]]],[11,"extint0","atsamd11c::generic","Bit 0 - External Interrupt 0 Enable",6,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",6,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",6,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",6,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",6,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",6,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",6,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",6,[[],["extint7_r",6]]],[11,"extint0","atsamd11c::eic::intenset","Bit 0 - External Interrupt 0 Enable",436,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",436,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",436,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",436,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",436,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",436,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",436,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",436,[[],["extint7_r",6]]],[11,"extint0","atsamd11c::generic","Bit 0 - External Interrupt 0 Enable",7,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",7,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",7,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",7,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",7,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",7,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",7,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",7,[[],["extint7_w",3]]],[11,"extint0","atsamd11c::eic::intenset","Bit 0 - External Interrupt 0 Enable",437,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1 Enable",437,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2 Enable",437,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3 Enable",437,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4 Enable",437,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5 Enable",437,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6 Enable",437,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7 Enable",437,[[],["extint7_w",3]]],[0,"intflag","atsamd11c::eic","Interrupt Flag Status and Clear",null,null],[3,"EXTINT0_W","atsamd11c::eic::intflag","Write proxy for field `EXTINT0`",null,null],[3,"EXTINT1_W","","Write proxy for field `EXTINT1`",null,null],[3,"EXTINT2_W","","Write proxy for field `EXTINT2`",null,null],[3,"EXTINT3_W","","Write proxy for field `EXTINT3`",null,null],[3,"EXTINT4_W","","Write proxy for field `EXTINT4`",null,null],[3,"EXTINT5_W","","Write proxy for field `EXTINT5`",null,null],[3,"EXTINT6_W","","Write proxy for field `EXTINT6`",null,null],[3,"EXTINT7_W","","Write proxy for field `EXTINT7`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"EXTINT0_R","","Reader of field `EXTINT0`",null,null],[6,"EXTINT1_R","","Reader of field `EXTINT1`",null,null],[6,"EXTINT2_R","","Reader of field `EXTINT2`",null,null],[6,"EXTINT3_R","","Reader of field `EXTINT3`",null,null],[6,"EXTINT4_R","","Reader of field `EXTINT4`",null,null],[6,"EXTINT5_R","","Reader of field `EXTINT5`",null,null],[6,"EXTINT6_R","","Reader of field `EXTINT6`",null,null],[6,"EXTINT7_R","","Reader of field `EXTINT7`",null,null],[11,"set_bit","","Sets the field bit",438,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",438,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",438,[[],["w",6]]],[11,"set_bit","","Sets the field bit",439,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",439,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",439,[[],["w",6]]],[11,"set_bit","","Sets the field bit",440,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",440,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",440,[[],["w",6]]],[11,"set_bit","","Sets the field bit",441,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",441,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",441,[[],["w",6]]],[11,"set_bit","","Sets the field bit",442,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",442,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",442,[[],["w",6]]],[11,"set_bit","","Sets the field bit",443,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",443,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",443,[[],["w",6]]],[11,"set_bit","","Sets the field bit",444,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",444,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",445,[[],["w",6]]],[11,"extint0","atsamd11c::generic","Bit 0 - External Interrupt 0",6,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1",6,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2",6,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3",6,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4",6,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5",6,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6",6,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7",6,[[],["extint7_r",6]]],[11,"extint0","atsamd11c::eic::intflag","Bit 0 - External Interrupt 0",446,[[],["extint0_r",6]]],[11,"extint1","","Bit 1 - External Interrupt 1",446,[[],["extint1_r",6]]],[11,"extint2","","Bit 2 - External Interrupt 2",446,[[],["extint2_r",6]]],[11,"extint3","","Bit 3 - External Interrupt 3",446,[[],["extint3_r",6]]],[11,"extint4","","Bit 4 - External Interrupt 4",446,[[],["extint4_r",6]]],[11,"extint5","","Bit 5 - External Interrupt 5",446,[[],["extint5_r",6]]],[11,"extint6","","Bit 6 - External Interrupt 6",446,[[],["extint6_r",6]]],[11,"extint7","","Bit 7 - External Interrupt 7",446,[[],["extint7_r",6]]],[11,"extint0","atsamd11c::generic","Bit 0 - External Interrupt 0",7,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1",7,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2",7,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3",7,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4",7,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5",7,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6",7,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7",7,[[],["extint7_w",3]]],[11,"extint0","atsamd11c::eic::intflag","Bit 0 - External Interrupt 0",447,[[],["extint0_w",3]]],[11,"extint1","","Bit 1 - External Interrupt 1",447,[[],["extint1_w",3]]],[11,"extint2","","Bit 2 - External Interrupt 2",447,[[],["extint2_w",3]]],[11,"extint3","","Bit 3 - External Interrupt 3",447,[[],["extint3_w",3]]],[11,"extint4","","Bit 4 - External Interrupt 4",447,[[],["extint4_w",3]]],[11,"extint5","","Bit 5 - External Interrupt 5",447,[[],["extint5_w",3]]],[11,"extint6","","Bit 6 - External Interrupt 6",447,[[],["extint6_w",3]]],[11,"extint7","","Bit 7 - External Interrupt 7",447,[[],["extint7_w",3]]],[0,"wakeup","atsamd11c::eic","Wake-Up Enable",null,null],[3,"WAKEUPEN0_W","atsamd11c::eic::wakeup","Write proxy for field `WAKEUPEN0`",null,null],[3,"WAKEUPEN1_W","","Write proxy for field `WAKEUPEN1`",null,null],[3,"WAKEUPEN2_W","","Write proxy for field `WAKEUPEN2`",null,null],[3,"WAKEUPEN3_W","","Write proxy for field `WAKEUPEN3`",null,null],[3,"WAKEUPEN4_W","","Write proxy for field `WAKEUPEN4`",null,null],[3,"WAKEUPEN5_W","","Write proxy for field `WAKEUPEN5`",null,null],[3,"WAKEUPEN6_W","","Write proxy for field `WAKEUPEN6`",null,null],[3,"WAKEUPEN7_W","","Write proxy for field `WAKEUPEN7`",null,null],[6,"R","","Reader of register WAKEUP",null,null],[6,"W","","Writer for register WAKEUP",null,null],[6,"WAKEUPEN0_R","","Reader of field `WAKEUPEN0`",null,null],[6,"WAKEUPEN1_R","","Reader of field `WAKEUPEN1`",null,null],[6,"WAKEUPEN2_R","","Reader of field `WAKEUPEN2`",null,null],[6,"WAKEUPEN3_R","","Reader of field `WAKEUPEN3`",null,null],[6,"WAKEUPEN4_R","","Reader of field `WAKEUPEN4`",null,null],[6,"WAKEUPEN5_R","","Reader of field `WAKEUPEN5`",null,null],[6,"WAKEUPEN6_R","","Reader of field `WAKEUPEN6`",null,null],[6,"WAKEUPEN7_R","","Reader of field `WAKEUPEN7`",null,null],[11,"set_bit","","Sets the field bit",448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",448,[[],["w",6]]],[11,"set_bit","","Sets the field bit",449,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",449,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",449,[[],["w",6]]],[11,"set_bit","","Sets the field bit",450,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",450,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",450,[[],["w",6]]],[11,"set_bit","","Sets the field bit",451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",452,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",452,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",453,[[],["w",6]]],[11,"set_bit","","Sets the field bit",454,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",454,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",454,[[],["w",6]]],[11,"set_bit","","Sets the field bit",455,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",455,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",455,[[],["w",6]]],[11,"wakeupen0","atsamd11c::generic","Bit 0 - External Interrupt 0 Wake-up Enable",6,[[],["wakeupen0_r",6]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",6,[[],["wakeupen1_r",6]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",6,[[],["wakeupen2_r",6]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",6,[[],["wakeupen3_r",6]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",6,[[],["wakeupen4_r",6]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",6,[[],["wakeupen5_r",6]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",6,[[],["wakeupen6_r",6]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",6,[[],["wakeupen7_r",6]]],[11,"wakeupen0","atsamd11c::eic::wakeup","Bit 0 - External Interrupt 0 Wake-up Enable",456,[[],["wakeupen0_r",6]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",456,[[],["wakeupen1_r",6]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",456,[[],["wakeupen2_r",6]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",456,[[],["wakeupen3_r",6]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",456,[[],["wakeupen4_r",6]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",456,[[],["wakeupen5_r",6]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",456,[[],["wakeupen6_r",6]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",456,[[],["wakeupen7_r",6]]],[11,"wakeupen0","atsamd11c::generic","Bit 0 - External Interrupt 0 Wake-up Enable",7,[[],["wakeupen0_w",3]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",7,[[],["wakeupen1_w",3]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",7,[[],["wakeupen2_w",3]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",7,[[],["wakeupen3_w",3]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",7,[[],["wakeupen4_w",3]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",7,[[],["wakeupen5_w",3]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",7,[[],["wakeupen6_w",3]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",7,[[],["wakeupen7_w",3]]],[11,"wakeupen0","atsamd11c::eic::wakeup","Bit 0 - External Interrupt 0 Wake-up Enable",457,[[],["wakeupen0_w",3]]],[11,"wakeupen1","","Bit 1 - External Interrupt 1 Wake-up Enable",457,[[],["wakeupen1_w",3]]],[11,"wakeupen2","","Bit 2 - External Interrupt 2 Wake-up Enable",457,[[],["wakeupen2_w",3]]],[11,"wakeupen3","","Bit 3 - External Interrupt 3 Wake-up Enable",457,[[],["wakeupen3_w",3]]],[11,"wakeupen4","","Bit 4 - External Interrupt 4 Wake-up Enable",457,[[],["wakeupen4_w",3]]],[11,"wakeupen5","","Bit 5 - External Interrupt 5 Wake-up Enable",457,[[],["wakeupen5_w",3]]],[11,"wakeupen6","","Bit 6 - External Interrupt 6 Wake-up Enable",457,[[],["wakeupen6_w",3]]],[11,"wakeupen7","","Bit 7 - External Interrupt 7 Wake-up Enable",457,[[],["wakeupen7_w",3]]],[0,"config","atsamd11c::eic","Configuration n",null,null],[3,"SENSE0_W","atsamd11c::eic::config","Write proxy for field `SENSE0`",null,null],[3,"FILTEN0_W","","Write proxy for field `FILTEN0`",null,null],[3,"SENSE1_W","","Write proxy for field `SENSE1`",null,null],[3,"FILTEN1_W","","Write proxy for field `FILTEN1`",null,null],[3,"SENSE2_W","","Write proxy for field `SENSE2`",null,null],[3,"FILTEN2_W","","Write proxy for field `FILTEN2`",null,null],[3,"SENSE3_W","","Write proxy for field `SENSE3`",null,null],[3,"FILTEN3_W","","Write proxy for field `FILTEN3`",null,null],[3,"SENSE4_W","","Write proxy for field `SENSE4`",null,null],[3,"FILTEN4_W","","Write proxy for field `FILTEN4`",null,null],[3,"SENSE5_W","","Write proxy for field `SENSE5`",null,null],[3,"FILTEN5_W","","Write proxy for field `FILTEN5`",null,null],[3,"SENSE6_W","","Write proxy for field `SENSE6`",null,null],[3,"FILTEN6_W","","Write proxy for field `FILTEN6`",null,null],[3,"SENSE7_W","","Write proxy for field `SENSE7`",null,null],[3,"FILTEN7_W","","Write proxy for field `FILTEN7`",null,null],[4,"SENSE0_A","","Input Sense 0 Configuration",null,null],[13,"NONE","","0: No detection",458,null],[13,"RISE","","1: Rising-edge detection",458,null],[13,"FALL","","2: Falling-edge detection",458,null],[13,"BOTH","","3: Both-edges detection",458,null],[13,"HIGH","","4: High-level detection",458,null],[13,"LOW","","5: Low-level detection",458,null],[4,"SENSE1_A","","Input Sense 1 Configuration",null,null],[13,"NONE","","0: No detection",459,null],[13,"RISE","","1: Rising edge detection",459,null],[13,"FALL","","2: Falling edge detection",459,null],[13,"BOTH","","3: Both edges detection",459,null],[13,"HIGH","","4: High level detection",459,null],[13,"LOW","","5: Low level detection",459,null],[4,"SENSE2_A","","Input Sense 2 Configuration",null,null],[13,"NONE","","0: No detection",460,null],[13,"RISE","","1: Rising edge detection",460,null],[13,"FALL","","2: Falling edge detection",460,null],[13,"BOTH","","3: Both edges detection",460,null],[13,"HIGH","","4: High level detection",460,null],[13,"LOW","","5: Low level detection",460,null],[4,"SENSE3_A","","Input Sense 3 Configuration",null,null],[13,"NONE","","0: No detection",461,null],[13,"RISE","","1: Rising edge detection",461,null],[13,"FALL","","2: Falling edge detection",461,null],[13,"BOTH","","3: Both edges detection",461,null],[13,"HIGH","","4: High level detection",461,null],[13,"LOW","","5: Low level detection",461,null],[4,"SENSE4_A","","Input Sense 4 Configuration",null,null],[13,"NONE","","0: No detection",462,null],[13,"RISE","","1: Rising edge detection",462,null],[13,"FALL","","2: Falling edge detection",462,null],[13,"BOTH","","3: Both edges detection",462,null],[13,"HIGH","","4: High level detection",462,null],[13,"LOW","","5: Low level detection",462,null],[4,"SENSE5_A","","Input Sense 5 Configuration",null,null],[13,"NONE","","0: No detection",463,null],[13,"RISE","","1: Rising edge detection",463,null],[13,"FALL","","2: Falling edge detection",463,null],[13,"BOTH","","3: Both edges detection",463,null],[13,"HIGH","","4: High level detection",463,null],[13,"LOW","","5: Low level detection",463,null],[4,"SENSE6_A","","Input Sense 6 Configuration",null,null],[13,"NONE","","0: No detection",464,null],[13,"RISE","","1: Rising edge detection",464,null],[13,"FALL","","2: Falling edge detection",464,null],[13,"BOTH","","3: Both edges detection",464,null],[13,"HIGH","","4: High level detection",464,null],[13,"LOW","","5: Low level detection",464,null],[4,"SENSE7_A","","Input Sense 7 Configuration",null,null],[13,"NONE","","0: No detection",465,null],[13,"RISE","","1: Rising edge detection",465,null],[13,"FALL","","2: Falling edge detection",465,null],[13,"BOTH","","3: Both edges detection",465,null],[13,"HIGH","","4: High level detection",465,null],[13,"LOW","","5: Low level detection",465,null],[6,"R","","Reader of register CONFIG%s",null,null],[6,"W","","Writer for register CONFIG%s",null,null],[6,"SENSE0_R","","Reader of field `SENSE0`",null,null],[6,"FILTEN0_R","","Reader of field `FILTEN0`",null,null],[6,"SENSE1_R","","Reader of field `SENSE1`",null,null],[6,"FILTEN1_R","","Reader of field `FILTEN1`",null,null],[6,"SENSE2_R","","Reader of field `SENSE2`",null,null],[6,"FILTEN2_R","","Reader of field `FILTEN2`",null,null],[6,"SENSE3_R","","Reader of field `SENSE3`",null,null],[6,"FILTEN3_R","","Reader of field `FILTEN3`",null,null],[6,"SENSE4_R","","Reader of field `SENSE4`",null,null],[6,"FILTEN4_R","","Reader of field `FILTEN4`",null,null],[6,"SENSE5_R","","Reader of field `SENSE5`",null,null],[6,"FILTEN5_R","","Reader of field `FILTEN5`",null,null],[6,"SENSE6_R","","Reader of field `SENSE6`",null,null],[6,"FILTEN6_R","","Reader of field `FILTEN6`",null,null],[6,"SENSE7_R","","Reader of field `SENSE7`",null,null],[6,"FILTEN7_R","","Reader of field `FILTEN7`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["sense0_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",466,[[],[["variant",4],["sense0_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",466,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",466,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",466,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",466,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",466,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",466,[[]]],[11,"variant","","Writes `variant` to the field",467,[[["sense0_a",4]],["w",6]]],[11,"none","","No detection",467,[[],["w",6]]],[11,"rise","","Rising-edge detection",467,[[],["w",6]]],[11,"fall","","Falling-edge detection",467,[[],["w",6]]],[11,"both","","Both-edges detection",467,[[],["w",6]]],[11,"high","","High-level detection",467,[[],["w",6]]],[11,"low","","Low-level detection",467,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",468,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",468,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",468,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["sense1_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",469,[[],[["variant",4],["sense1_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",469,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",469,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",469,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",469,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",469,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",469,[[]]],[11,"variant","","Writes `variant` to the field",470,[[["sense1_a",4]],["w",6]]],[11,"none","","No detection",470,[[],["w",6]]],[11,"rise","","Rising edge detection",470,[[],["w",6]]],[11,"fall","","Falling edge detection",470,[[],["w",6]]],[11,"both","","Both edges detection",470,[[],["w",6]]],[11,"high","","High level detection",470,[[],["w",6]]],[11,"low","","Low level detection",470,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",470,[[],["w",6]]],[11,"set_bit","","Sets the field bit",471,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",471,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",471,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["sense2_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",472,[[],[["variant",4],["sense2_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",472,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",472,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",472,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",472,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",472,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",472,[[]]],[11,"variant","","Writes `variant` to the field",473,[[["sense2_a",4]],["w",6]]],[11,"none","","No detection",473,[[],["w",6]]],[11,"rise","","Rising edge detection",473,[[],["w",6]]],[11,"fall","","Falling edge detection",473,[[],["w",6]]],[11,"both","","Both edges detection",473,[[],["w",6]]],[11,"high","","High level detection",473,[[],["w",6]]],[11,"low","","Low level detection",473,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",473,[[],["w",6]]],[11,"set_bit","","Sets the field bit",474,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",474,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",474,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["sense3_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",475,[[],[["sense3_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",475,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",475,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",475,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",475,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",475,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",475,[[]]],[11,"variant","","Writes `variant` to the field",476,[[["sense3_a",4]],["w",6]]],[11,"none","","No detection",476,[[],["w",6]]],[11,"rise","","Rising edge detection",476,[[],["w",6]]],[11,"fall","","Falling edge detection",476,[[],["w",6]]],[11,"both","","Both edges detection",476,[[],["w",6]]],[11,"high","","High level detection",476,[[],["w",6]]],[11,"low","","Low level detection",476,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",476,[[],["w",6]]],[11,"set_bit","","Sets the field bit",477,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",477,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",477,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["sense4_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",478,[[],[["variant",4],["sense4_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",478,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",478,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",478,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",478,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",478,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",478,[[]]],[11,"variant","","Writes `variant` to the field",479,[[["sense4_a",4]],["w",6]]],[11,"none","","No detection",479,[[],["w",6]]],[11,"rise","","Rising edge detection",479,[[],["w",6]]],[11,"fall","","Falling edge detection",479,[[],["w",6]]],[11,"both","","Both edges detection",479,[[],["w",6]]],[11,"high","","High level detection",479,[[],["w",6]]],[11,"low","","Low level detection",479,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",479,[[],["w",6]]],[11,"set_bit","","Sets the field bit",480,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",480,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",480,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["sense5_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",481,[[],[["sense5_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",481,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",481,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",481,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",481,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",481,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",481,[[]]],[11,"variant","","Writes `variant` to the field",482,[[["sense5_a",4]],["w",6]]],[11,"none","","No detection",482,[[],["w",6]]],[11,"rise","","Rising edge detection",482,[[],["w",6]]],[11,"fall","","Falling edge detection",482,[[],["w",6]]],[11,"both","","Both edges detection",482,[[],["w",6]]],[11,"high","","High level detection",482,[[],["w",6]]],[11,"low","","Low level detection",482,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",482,[[],["w",6]]],[11,"set_bit","","Sets the field bit",483,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",483,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",483,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["sense6_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",484,[[],[["sense6_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",484,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",484,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",484,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",484,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",484,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",484,[[]]],[11,"variant","","Writes `variant` to the field",485,[[["sense6_a",4]],["w",6]]],[11,"none","","No detection",485,[[],["w",6]]],[11,"rise","","Rising edge detection",485,[[],["w",6]]],[11,"fall","","Falling edge detection",485,[[],["w",6]]],[11,"both","","Both edges detection",485,[[],["w",6]]],[11,"high","","High level detection",485,[[],["w",6]]],[11,"low","","Low level detection",485,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",485,[[],["w",6]]],[11,"set_bit","","Sets the field bit",486,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",486,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",486,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["sense7_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd11c::eic::config","Get enumerated values variant",487,[[],[["variant",4],["sense7_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",487,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",487,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",487,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",487,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",487,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",487,[[]]],[11,"variant","","Writes `variant` to the field",488,[[["sense7_a",4]],["w",6]]],[11,"none","","No detection",488,[[],["w",6]]],[11,"rise","","Rising edge detection",488,[[],["w",6]]],[11,"fall","","Falling edge detection",488,[[],["w",6]]],[11,"both","","Both edges detection",488,[[],["w",6]]],[11,"high","","High level detection",488,[[],["w",6]]],[11,"low","","Low level detection",488,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",488,[[],["w",6]]],[11,"set_bit","","Sets the field bit",489,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",489,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",489,[[],["w",6]]],[11,"sense0","atsamd11c::generic","Bits 0:2 - Input Sense 0 Configuration",6,[[],["sense0_r",6]]],[11,"filten0","","Bit 3 - Filter 0 Enable",6,[[],["filten0_r",6]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",6,[[],["sense1_r",6]]],[11,"filten1","","Bit 7 - Filter 1 Enable",6,[[],["filten1_r",6]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",6,[[],["sense2_r",6]]],[11,"filten2","","Bit 11 - Filter 2 Enable",6,[[],["filten2_r",6]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",6,[[],["sense3_r",6]]],[11,"filten3","","Bit 15 - Filter 3 Enable",6,[[],["filten3_r",6]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",6,[[],["sense4_r",6]]],[11,"filten4","","Bit 19 - Filter 4 Enable",6,[[],["filten4_r",6]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",6,[[],["sense5_r",6]]],[11,"filten5","","Bit 23 - Filter 5 Enable",6,[[],["filten5_r",6]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",6,[[],["sense6_r",6]]],[11,"filten6","","Bit 27 - Filter 6 Enable",6,[[],["filten6_r",6]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",6,[[],["sense7_r",6]]],[11,"filten7","","Bit 31 - Filter 7 Enable",6,[[],["filten7_r",6]]],[11,"sense0","atsamd11c::eic::config","Bits 0:2 - Input Sense 0 Configuration",490,[[],["sense0_r",6]]],[11,"filten0","","Bit 3 - Filter 0 Enable",490,[[],["filten0_r",6]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",490,[[],["sense1_r",6]]],[11,"filten1","","Bit 7 - Filter 1 Enable",490,[[],["filten1_r",6]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",490,[[],["sense2_r",6]]],[11,"filten2","","Bit 11 - Filter 2 Enable",490,[[],["filten2_r",6]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",490,[[],["sense3_r",6]]],[11,"filten3","","Bit 15 - Filter 3 Enable",490,[[],["filten3_r",6]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",490,[[],["sense4_r",6]]],[11,"filten4","","Bit 19 - Filter 4 Enable",490,[[],["filten4_r",6]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",490,[[],["sense5_r",6]]],[11,"filten5","","Bit 23 - Filter 5 Enable",490,[[],["filten5_r",6]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",490,[[],["sense6_r",6]]],[11,"filten6","","Bit 27 - Filter 6 Enable",490,[[],["filten6_r",6]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",490,[[],["sense7_r",6]]],[11,"filten7","","Bit 31 - Filter 7 Enable",490,[[],["filten7_r",6]]],[11,"sense0","atsamd11c::generic","Bits 0:2 - Input Sense 0 Configuration",7,[[],["sense0_w",3]]],[11,"filten0","","Bit 3 - Filter 0 Enable",7,[[],["filten0_w",3]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",7,[[],["sense1_w",3]]],[11,"filten1","","Bit 7 - Filter 1 Enable",7,[[],["filten1_w",3]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",7,[[],["sense2_w",3]]],[11,"filten2","","Bit 11 - Filter 2 Enable",7,[[],["filten2_w",3]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",7,[[],["sense3_w",3]]],[11,"filten3","","Bit 15 - Filter 3 Enable",7,[[],["filten3_w",3]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",7,[[],["sense4_w",3]]],[11,"filten4","","Bit 19 - Filter 4 Enable",7,[[],["filten4_w",3]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",7,[[],["sense5_w",3]]],[11,"filten5","","Bit 23 - Filter 5 Enable",7,[[],["filten5_w",3]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",7,[[],["sense6_w",3]]],[11,"filten6","","Bit 27 - Filter 6 Enable",7,[[],["filten6_w",3]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",7,[[],["sense7_w",3]]],[11,"filten7","","Bit 31 - Filter 7 Enable",7,[[],["filten7_w",3]]],[11,"sense0","atsamd11c::eic::config","Bits 0:2 - Input Sense 0 Configuration",491,[[],["sense0_w",3]]],[11,"filten0","","Bit 3 - Filter 0 Enable",491,[[],["filten0_w",3]]],[11,"sense1","","Bits 4:6 - Input Sense 1 Configuration",491,[[],["sense1_w",3]]],[11,"filten1","","Bit 7 - Filter 1 Enable",491,[[],["filten1_w",3]]],[11,"sense2","","Bits 8:10 - Input Sense 2 Configuration",491,[[],["sense2_w",3]]],[11,"filten2","","Bit 11 - Filter 2 Enable",491,[[],["filten2_w",3]]],[11,"sense3","","Bits 12:14 - Input Sense 3 Configuration",491,[[],["sense3_w",3]]],[11,"filten3","","Bit 15 - Filter 3 Enable",491,[[],["filten3_w",3]]],[11,"sense4","","Bits 16:18 - Input Sense 4 Configuration",491,[[],["sense4_w",3]]],[11,"filten4","","Bit 19 - Filter 4 Enable",491,[[],["filten4_w",3]]],[11,"sense5","","Bits 20:22 - Input Sense 5 Configuration",491,[[],["sense5_w",3]]],[11,"filten5","","Bit 23 - Filter 5 Enable",491,[[],["filten5_w",3]]],[11,"sense6","","Bits 24:26 - Input Sense 6 Configuration",491,[[],["sense6_w",3]]],[11,"filten6","","Bit 27 - Filter 6 Enable",491,[[],["filten6_w",3]]],[11,"sense7","","Bits 28:30 - Input Sense 7 Configuration",491,[[],["sense7_w",3]]],[11,"filten7","","Bit 31 - Filter 7 Enable",491,[[],["filten7_w",3]]],[6,"CTRL","atsamd11c::eic","Control",null,null],[6,"STATUS","","Status",null,null],[6,"NMICTRL","","Non-Maskable Interrupt Control",null,null],[6,"NMIFLAG","","Non-Maskable Interrupt Flag Status and Clear",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"WAKEUP","","Wake-Up Enable",null,null],[6,"CONFIG","","Configuration n",null,null],[0,"evsys","atsamd11c","Event System Interface",null,null],[3,"RegisterBlock","atsamd11c::evsys","Register block",null,null],[12,"ctrl","","0x00 - Control",492,null],[12,"channel","","0x04 - Channel",492,null],[12,"user","","0x08 - User Multiplexer",492,null],[12,"chstatus","","0x0c - Channel Status",492,null],[12,"intenclr","","0x10 - Interrupt Enable Clear",492,null],[12,"intenset","","0x14 - Interrupt Enable Set",492,null],[12,"intflag","","0x18 - Interrupt Flag Status and Clear",492,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd11c::evsys::ctrl","Write proxy for field `SWRST`",null,null],[3,"GCLKREQ_W","","Write proxy for field `GCLKREQ`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",493,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",493,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",493,[[],["w",6]]],[11,"set_bit","","Sets the field bit",494,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",494,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",494,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"gclkreq","","Bit 4 - Generic Clock Requests",7,[[],["gclkreq_w",3]]],[11,"swrst","atsamd11c::evsys::ctrl","Bit 0 - Software Reset",495,[[],["swrst_w",3]]],[11,"gclkreq","","Bit 4 - Generic Clock Requests",495,[[],["gclkreq_w",3]]],[0,"channel","atsamd11c::evsys","Channel",null,null],[3,"CHANNEL_W","atsamd11c::evsys::channel","Write proxy for field `CHANNEL`",null,null],[3,"SWEVT_W","","Write proxy for field `SWEVT`",null,null],[3,"EVGEN_W","","Write proxy for field `EVGEN`",null,null],[3,"PATH_W","","Write proxy for field `PATH`",null,null],[3,"EDGSEL_W","","Write proxy for field `EDGSEL`",null,null],[4,"PATH_A","","Path Selection",null,null],[13,"SYNCHRONOUS","","0: Synchronous path",496,null],[13,"RESYNCHRONIZED","","1: Resynchronized path",496,null],[13,"ASYNCHRONOUS","","2: Asynchronous path",496,null],[4,"EDGSEL_A","","Edge Detection Selection",null,null],[13,"NO_EVT_OUTPUT","","0: No event output when using the resynchronized or…",497,null],[13,"RISING_EDGE","","1: Event detection only on the rising edge of the signal…",497,null],[13,"FALLING_EDGE","","2: Event detection only on the falling edge of the signal…",497,null],[13,"BOTH_EDGES","","3: Event detection on rising and falling edges of the…",497,null],[6,"R","","Reader of register CHANNEL",null,null],[6,"W","","Writer for register CHANNEL",null,null],[6,"CHANNEL_R","","Reader of field `CHANNEL`",null,null],[6,"SWEVT_R","","Reader of field `SWEVT`",null,null],[6,"EVGEN_R","","Reader of field `EVGEN`",null,null],[6,"PATH_R","","Reader of field `PATH`",null,null],[6,"EDGSEL_R","","Reader of field `EDGSEL`",null,null],[11,"bits","","Writes raw bits to the field",498,[[],["w",6]]],[11,"set_bit","","Sets the field bit",499,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",499,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",499,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",500,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["path_a",4],["variant",4]]]],[11,"is_synchronous","","Checks if the value of the field is `SYNCHRONOUS`",6,[[]]],[11,"is_resynchronized","","Checks if the value of the field is `RESYNCHRONIZED`",6,[[]]],[11,"is_asynchronous","","Checks if the value of the field is `ASYNCHRONOUS`",6,[[]]],[11,"variant","atsamd11c::evsys::channel","Get enumerated values variant",501,[[],[["path_a",4],["variant",4]]]],[11,"is_synchronous","","Checks if the value of the field is `SYNCHRONOUS`",501,[[]]],[11,"is_resynchronized","","Checks if the value of the field is `RESYNCHRONIZED`",501,[[]]],[11,"is_asynchronous","","Checks if the value of the field is `ASYNCHRONOUS`",501,[[]]],[11,"variant","","Writes `variant` to the field",502,[[["path_a",4]],["w",6]]],[11,"synchronous","","Synchronous path",502,[[],["w",6]]],[11,"resynchronized","","Resynchronized path",502,[[],["w",6]]],[11,"asynchronous","","Asynchronous path",502,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",502,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["edgsel_a",4]]],[11,"is_no_evt_output","","Checks if the value of the field is `NO_EVT_OUTPUT`",6,[[]]],[11,"is_rising_edge","","Checks if the value of the field is `RISING_EDGE`",6,[[]]],[11,"is_falling_edge","","Checks if the value of the field is `FALLING_EDGE`",6,[[]]],[11,"is_both_edges","","Checks if the value of the field is `BOTH_EDGES`",6,[[]]],[11,"variant","atsamd11c::evsys::channel","Get enumerated values variant",503,[[],["edgsel_a",4]]],[11,"is_no_evt_output","","Checks if the value of the field is `NO_EVT_OUTPUT`",503,[[]]],[11,"is_rising_edge","","Checks if the value of the field is `RISING_EDGE`",503,[[]]],[11,"is_falling_edge","","Checks if the value of the field is `FALLING_EDGE`",503,[[]]],[11,"is_both_edges","","Checks if the value of the field is `BOTH_EDGES`",503,[[]]],[11,"variant","","Writes `variant` to the field",504,[[["edgsel_a",4]],["w",6]]],[11,"no_evt_output","","No event output when using the resynchronized or…",504,[[],["w",6]]],[11,"rising_edge","","Event detection only on the rising edge of the signal from…",504,[[],["w",6]]],[11,"falling_edge","","Event detection only on the falling edge of the signal…",504,[[],["w",6]]],[11,"both_edges","","Event detection on rising and falling edges of the signal…",504,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",504,[[],["w",6]]],[11,"channel","atsamd11c::generic","Bits 0:2 - Channel Selection",6,[[],["channel_r",6]]],[11,"swevt","","Bit 8 - Software Event",6,[[],["swevt_r",6]]],[11,"evgen","","Bits 16:21 - Event Generator Selection",6,[[],["evgen_r",6]]],[11,"path","","Bits 24:25 - Path Selection",6,[[],["path_r",6]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",6,[[],["edgsel_r",6]]],[11,"channel","atsamd11c::evsys::channel","Bits 0:2 - Channel Selection",505,[[],["channel_r",6]]],[11,"swevt","","Bit 8 - Software Event",505,[[],["swevt_r",6]]],[11,"evgen","","Bits 16:21 - Event Generator Selection",505,[[],["evgen_r",6]]],[11,"path","","Bits 24:25 - Path Selection",505,[[],["path_r",6]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",505,[[],["edgsel_r",6]]],[11,"channel","atsamd11c::generic","Bits 0:2 - Channel Selection",7,[[],["channel_w",3]]],[11,"swevt","","Bit 8 - Software Event",7,[[],["swevt_w",3]]],[11,"evgen","","Bits 16:21 - Event Generator Selection",7,[[],["evgen_w",3]]],[11,"path","","Bits 24:25 - Path Selection",7,[[],["path_w",3]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",7,[[],["edgsel_w",3]]],[11,"channel","atsamd11c::evsys::channel","Bits 0:2 - Channel Selection",506,[[],["channel_w",3]]],[11,"swevt","","Bit 8 - Software Event",506,[[],["swevt_w",3]]],[11,"evgen","","Bits 16:21 - Event Generator Selection",506,[[],["evgen_w",3]]],[11,"path","","Bits 24:25 - Path Selection",506,[[],["path_w",3]]],[11,"edgsel","","Bits 26:27 - Edge Detection Selection",506,[[],["edgsel_w",3]]],[0,"user","atsamd11c::evsys","User Multiplexer",null,null],[3,"USER_W","atsamd11c::evsys::user","Write proxy for field `USER`",null,null],[3,"CHANNEL_W","","Write proxy for field `CHANNEL`",null,null],[4,"CHANNEL_A","","Channel Event Selection",null,null],[13,"_0","","0: No Channel Output Selected",507,null],[6,"R","","Reader of register USER",null,null],[6,"W","","Writer for register USER",null,null],[6,"USER_R","","Reader of field `USER`",null,null],[6,"CHANNEL_R","","Reader of field `CHANNEL`",null,null],[11,"bits","","Writes raw bits to the field",508,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["channel_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"variant","atsamd11c::evsys::user","Get enumerated values variant",509,[[],[["variant",4],["channel_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",509,[[]]],[11,"variant","","Writes `variant` to the field",510,[[["channel_a",4]],["w",6]]],[11,"_0","","No Channel Output Selected",510,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",510,[[],["w",6]]],[11,"user","atsamd11c::generic","Bits 0:4 - User Multiplexer Selection",6,[[],["user_r",6]]],[11,"channel","","Bits 8:11 - Channel Event Selection",6,[[],["channel_r",6]]],[11,"user","atsamd11c::evsys::user","Bits 0:4 - User Multiplexer Selection",511,[[],["user_r",6]]],[11,"channel","","Bits 8:11 - Channel Event Selection",511,[[],["channel_r",6]]],[11,"user","atsamd11c::generic","Bits 0:4 - User Multiplexer Selection",7,[[],["user_w",3]]],[11,"channel","","Bits 8:11 - Channel Event Selection",7,[[],["channel_w",3]]],[11,"user","atsamd11c::evsys::user","Bits 0:4 - User Multiplexer Selection",512,[[],["user_w",3]]],[11,"channel","","Bits 8:11 - Channel Event Selection",512,[[],["channel_w",3]]],[0,"chstatus","atsamd11c::evsys","Channel Status",null,null],[6,"R","atsamd11c::evsys::chstatus","Reader of register CHSTATUS",null,null],[6,"USRRDY0_R","","Reader of field `USRRDY0`",null,null],[6,"USRRDY1_R","","Reader of field `USRRDY1`",null,null],[6,"USRRDY2_R","","Reader of field `USRRDY2`",null,null],[6,"USRRDY3_R","","Reader of field `USRRDY3`",null,null],[6,"USRRDY4_R","","Reader of field `USRRDY4`",null,null],[6,"USRRDY5_R","","Reader of field `USRRDY5`",null,null],[6,"CHBUSY0_R","","Reader of field `CHBUSY0`",null,null],[6,"CHBUSY1_R","","Reader of field `CHBUSY1`",null,null],[6,"CHBUSY2_R","","Reader of field `CHBUSY2`",null,null],[6,"CHBUSY3_R","","Reader of field `CHBUSY3`",null,null],[6,"CHBUSY4_R","","Reader of field `CHBUSY4`",null,null],[6,"CHBUSY5_R","","Reader of field `CHBUSY5`",null,null],[11,"usrrdy0","atsamd11c::generic","Bit 0 - Channel 0 User Ready",6,[[],["usrrdy0_r",6]]],[11,"usrrdy1","","Bit 1 - Channel 1 User Ready",6,[[],["usrrdy1_r",6]]],[11,"usrrdy2","","Bit 2 - Channel 2 User Ready",6,[[],["usrrdy2_r",6]]],[11,"usrrdy3","","Bit 3 - Channel 3 User Ready",6,[[],["usrrdy3_r",6]]],[11,"usrrdy4","","Bit 4 - Channel 4 User Ready",6,[[],["usrrdy4_r",6]]],[11,"usrrdy5","","Bit 5 - Channel 5 User Ready",6,[[],["usrrdy5_r",6]]],[11,"chbusy0","","Bit 8 - Channel 0 Busy",6,[[],["chbusy0_r",6]]],[11,"chbusy1","","Bit 9 - Channel 1 Busy",6,[[],["chbusy1_r",6]]],[11,"chbusy2","","Bit 10 - Channel 2 Busy",6,[[],["chbusy2_r",6]]],[11,"chbusy3","","Bit 11 - Channel 3 Busy",6,[[],["chbusy3_r",6]]],[11,"chbusy4","","Bit 12 - Channel 4 Busy",6,[[],["chbusy4_r",6]]],[11,"chbusy5","","Bit 13 - Channel 5 Busy",6,[[],["chbusy5_r",6]]],[11,"usrrdy0","atsamd11c::evsys::chstatus","Bit 0 - Channel 0 User Ready",513,[[],["usrrdy0_r",6]]],[11,"usrrdy1","","Bit 1 - Channel 1 User Ready",513,[[],["usrrdy1_r",6]]],[11,"usrrdy2","","Bit 2 - Channel 2 User Ready",513,[[],["usrrdy2_r",6]]],[11,"usrrdy3","","Bit 3 - Channel 3 User Ready",513,[[],["usrrdy3_r",6]]],[11,"usrrdy4","","Bit 4 - Channel 4 User Ready",513,[[],["usrrdy4_r",6]]],[11,"usrrdy5","","Bit 5 - Channel 5 User Ready",513,[[],["usrrdy5_r",6]]],[11,"chbusy0","","Bit 8 - Channel 0 Busy",513,[[],["chbusy0_r",6]]],[11,"chbusy1","","Bit 9 - Channel 1 Busy",513,[[],["chbusy1_r",6]]],[11,"chbusy2","","Bit 10 - Channel 2 Busy",513,[[],["chbusy2_r",6]]],[11,"chbusy3","","Bit 11 - Channel 3 Busy",513,[[],["chbusy3_r",6]]],[11,"chbusy4","","Bit 12 - Channel 4 Busy",513,[[],["chbusy4_r",6]]],[11,"chbusy5","","Bit 13 - Channel 5 Busy",513,[[],["chbusy5_r",6]]],[0,"intenclr","atsamd11c::evsys","Interrupt Enable Clear",null,null],[3,"OVR0_W","atsamd11c::evsys::intenclr","Write proxy for field `OVR0`",null,null],[3,"OVR1_W","","Write proxy for field `OVR1`",null,null],[3,"OVR2_W","","Write proxy for field `OVR2`",null,null],[3,"OVR3_W","","Write proxy for field `OVR3`",null,null],[3,"OVR4_W","","Write proxy for field `OVR4`",null,null],[3,"OVR5_W","","Write proxy for field `OVR5`",null,null],[3,"EVD0_W","","Write proxy for field `EVD0`",null,null],[3,"EVD1_W","","Write proxy for field `EVD1`",null,null],[3,"EVD2_W","","Write proxy for field `EVD2`",null,null],[3,"EVD3_W","","Write proxy for field `EVD3`",null,null],[3,"EVD4_W","","Write proxy for field `EVD4`",null,null],[3,"EVD5_W","","Write proxy for field `EVD5`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVR0_R","","Reader of field `OVR0`",null,null],[6,"OVR1_R","","Reader of field `OVR1`",null,null],[6,"OVR2_R","","Reader of field `OVR2`",null,null],[6,"OVR3_R","","Reader of field `OVR3`",null,null],[6,"OVR4_R","","Reader of field `OVR4`",null,null],[6,"OVR5_R","","Reader of field `OVR5`",null,null],[6,"EVD0_R","","Reader of field `EVD0`",null,null],[6,"EVD1_R","","Reader of field `EVD1`",null,null],[6,"EVD2_R","","Reader of field `EVD2`",null,null],[6,"EVD3_R","","Reader of field `EVD3`",null,null],[6,"EVD4_R","","Reader of field `EVD4`",null,null],[6,"EVD5_R","","Reader of field `EVD5`",null,null],[11,"set_bit","","Sets the field bit",514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",514,[[],["w",6]]],[11,"set_bit","","Sets the field bit",515,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",515,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",515,[[],["w",6]]],[11,"set_bit","","Sets the field bit",516,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",516,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",516,[[],["w",6]]],[11,"set_bit","","Sets the field bit",517,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",517,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",517,[[],["w",6]]],[11,"set_bit","","Sets the field bit",518,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",518,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",518,[[],["w",6]]],[11,"set_bit","","Sets the field bit",519,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",519,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",519,[[],["w",6]]],[11,"set_bit","","Sets the field bit",520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",520,[[],["w",6]]],[11,"set_bit","","Sets the field bit",521,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",521,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",521,[[],["w",6]]],[11,"set_bit","","Sets the field bit",522,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",522,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",522,[[],["w",6]]],[11,"set_bit","","Sets the field bit",523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",523,[[],["w",6]]],[11,"set_bit","","Sets the field bit",524,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",524,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",524,[[],["w",6]]],[11,"set_bit","","Sets the field bit",525,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",525,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",525,[[],["w",6]]],[11,"ovr0","atsamd11c::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",6,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",6,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",6,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",6,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",6,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",6,[[],["ovr5_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",6,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",6,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",6,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",6,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",6,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",6,[[],["evd5_r",6]]],[11,"ovr0","atsamd11c::evsys::intenclr","Bit 0 - Channel 0 Overrun Interrupt Enable",526,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",526,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",526,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",526,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",526,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",526,[[],["ovr5_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",526,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",526,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",526,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",526,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",526,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",526,[[],["evd5_r",6]]],[11,"ovr0","atsamd11c::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",7,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",7,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",7,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",7,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",7,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",7,[[],["ovr5_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",7,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",7,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",7,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",7,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",7,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",7,[[],["evd5_w",3]]],[11,"ovr0","atsamd11c::evsys::intenclr","Bit 0 - Channel 0 Overrun Interrupt Enable",527,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",527,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",527,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",527,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",527,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",527,[[],["ovr5_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",527,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",527,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",527,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",527,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",527,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",527,[[],["evd5_w",3]]],[0,"intenset","atsamd11c::evsys","Interrupt Enable Set",null,null],[3,"OVR0_W","atsamd11c::evsys::intenset","Write proxy for field `OVR0`",null,null],[3,"OVR1_W","","Write proxy for field `OVR1`",null,null],[3,"OVR2_W","","Write proxy for field `OVR2`",null,null],[3,"OVR3_W","","Write proxy for field `OVR3`",null,null],[3,"OVR4_W","","Write proxy for field `OVR4`",null,null],[3,"OVR5_W","","Write proxy for field `OVR5`",null,null],[3,"EVD0_W","","Write proxy for field `EVD0`",null,null],[3,"EVD1_W","","Write proxy for field `EVD1`",null,null],[3,"EVD2_W","","Write proxy for field `EVD2`",null,null],[3,"EVD3_W","","Write proxy for field `EVD3`",null,null],[3,"EVD4_W","","Write proxy for field `EVD4`",null,null],[3,"EVD5_W","","Write proxy for field `EVD5`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVR0_R","","Reader of field `OVR0`",null,null],[6,"OVR1_R","","Reader of field `OVR1`",null,null],[6,"OVR2_R","","Reader of field `OVR2`",null,null],[6,"OVR3_R","","Reader of field `OVR3`",null,null],[6,"OVR4_R","","Reader of field `OVR4`",null,null],[6,"OVR5_R","","Reader of field `OVR5`",null,null],[6,"EVD0_R","","Reader of field `EVD0`",null,null],[6,"EVD1_R","","Reader of field `EVD1`",null,null],[6,"EVD2_R","","Reader of field `EVD2`",null,null],[6,"EVD3_R","","Reader of field `EVD3`",null,null],[6,"EVD4_R","","Reader of field `EVD4`",null,null],[6,"EVD5_R","","Reader of field `EVD5`",null,null],[11,"set_bit","","Sets the field bit",528,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",528,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",528,[[],["w",6]]],[11,"set_bit","","Sets the field bit",529,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",529,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",529,[[],["w",6]]],[11,"set_bit","","Sets the field bit",530,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",530,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",530,[[],["w",6]]],[11,"set_bit","","Sets the field bit",531,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",531,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",531,[[],["w",6]]],[11,"set_bit","","Sets the field bit",532,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",532,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",532,[[],["w",6]]],[11,"set_bit","","Sets the field bit",533,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",533,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",533,[[],["w",6]]],[11,"set_bit","","Sets the field bit",534,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",534,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",534,[[],["w",6]]],[11,"set_bit","","Sets the field bit",535,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",535,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",535,[[],["w",6]]],[11,"set_bit","","Sets the field bit",536,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",536,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",536,[[],["w",6]]],[11,"set_bit","","Sets the field bit",537,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",537,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",537,[[],["w",6]]],[11,"set_bit","","Sets the field bit",538,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",538,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",538,[[],["w",6]]],[11,"set_bit","","Sets the field bit",539,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",539,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",539,[[],["w",6]]],[11,"ovr0","atsamd11c::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",6,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",6,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",6,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",6,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",6,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",6,[[],["ovr5_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",6,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",6,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",6,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",6,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",6,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",6,[[],["evd5_r",6]]],[11,"ovr0","atsamd11c::evsys::intenset","Bit 0 - Channel 0 Overrun Interrupt Enable",540,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",540,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",540,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",540,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",540,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",540,[[],["ovr5_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",540,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",540,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",540,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",540,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",540,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",540,[[],["evd5_r",6]]],[11,"ovr0","atsamd11c::generic","Bit 0 - Channel 0 Overrun Interrupt Enable",7,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",7,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",7,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",7,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",7,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",7,[[],["ovr5_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",7,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",7,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",7,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",7,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",7,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",7,[[],["evd5_w",3]]],[11,"ovr0","atsamd11c::evsys::intenset","Bit 0 - Channel 0 Overrun Interrupt Enable",541,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun Interrupt Enable",541,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun Interrupt Enable",541,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun Interrupt Enable",541,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun Interrupt Enable",541,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun Interrupt Enable",541,[[],["ovr5_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection Interrupt Enable",541,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection Interrupt Enable",541,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection Interrupt Enable",541,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection Interrupt Enable",541,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection Interrupt Enable",541,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection Interrupt Enable",541,[[],["evd5_w",3]]],[0,"intflag","atsamd11c::evsys","Interrupt Flag Status and Clear",null,null],[3,"OVR0_W","atsamd11c::evsys::intflag","Write proxy for field `OVR0`",null,null],[3,"OVR1_W","","Write proxy for field `OVR1`",null,null],[3,"OVR2_W","","Write proxy for field `OVR2`",null,null],[3,"OVR3_W","","Write proxy for field `OVR3`",null,null],[3,"OVR4_W","","Write proxy for field `OVR4`",null,null],[3,"OVR5_W","","Write proxy for field `OVR5`",null,null],[3,"EVD0_W","","Write proxy for field `EVD0`",null,null],[3,"EVD1_W","","Write proxy for field `EVD1`",null,null],[3,"EVD2_W","","Write proxy for field `EVD2`",null,null],[3,"EVD3_W","","Write proxy for field `EVD3`",null,null],[3,"EVD4_W","","Write proxy for field `EVD4`",null,null],[3,"EVD5_W","","Write proxy for field `EVD5`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVR0_R","","Reader of field `OVR0`",null,null],[6,"OVR1_R","","Reader of field `OVR1`",null,null],[6,"OVR2_R","","Reader of field `OVR2`",null,null],[6,"OVR3_R","","Reader of field `OVR3`",null,null],[6,"OVR4_R","","Reader of field `OVR4`",null,null],[6,"OVR5_R","","Reader of field `OVR5`",null,null],[6,"EVD0_R","","Reader of field `EVD0`",null,null],[6,"EVD1_R","","Reader of field `EVD1`",null,null],[6,"EVD2_R","","Reader of field `EVD2`",null,null],[6,"EVD3_R","","Reader of field `EVD3`",null,null],[6,"EVD4_R","","Reader of field `EVD4`",null,null],[6,"EVD5_R","","Reader of field `EVD5`",null,null],[11,"set_bit","","Sets the field bit",542,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",542,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",542,[[],["w",6]]],[11,"set_bit","","Sets the field bit",543,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",543,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",543,[[],["w",6]]],[11,"set_bit","","Sets the field bit",544,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",544,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",544,[[],["w",6]]],[11,"set_bit","","Sets the field bit",545,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",545,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",545,[[],["w",6]]],[11,"set_bit","","Sets the field bit",546,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",546,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",546,[[],["w",6]]],[11,"set_bit","","Sets the field bit",547,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",547,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",547,[[],["w",6]]],[11,"set_bit","","Sets the field bit",548,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",548,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",548,[[],["w",6]]],[11,"set_bit","","Sets the field bit",549,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",549,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",549,[[],["w",6]]],[11,"set_bit","","Sets the field bit",550,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",550,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",550,[[],["w",6]]],[11,"set_bit","","Sets the field bit",551,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",551,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",552,[[],["w",6]]],[11,"set_bit","","Sets the field bit",553,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",553,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",553,[[],["w",6]]],[11,"ovr0","atsamd11c::generic","Bit 0 - Channel 0 Overrun",6,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",6,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",6,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",6,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",6,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",6,[[],["ovr5_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",6,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",6,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",6,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",6,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",6,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",6,[[],["evd5_r",6]]],[11,"ovr0","atsamd11c::evsys::intflag","Bit 0 - Channel 0 Overrun",554,[[],["ovr0_r",6]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",554,[[],["ovr1_r",6]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",554,[[],["ovr2_r",6]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",554,[[],["ovr3_r",6]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",554,[[],["ovr4_r",6]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",554,[[],["ovr5_r",6]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",554,[[],["evd0_r",6]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",554,[[],["evd1_r",6]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",554,[[],["evd2_r",6]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",554,[[],["evd3_r",6]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",554,[[],["evd4_r",6]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",554,[[],["evd5_r",6]]],[11,"ovr0","atsamd11c::generic","Bit 0 - Channel 0 Overrun",7,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",7,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",7,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",7,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",7,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",7,[[],["ovr5_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",7,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",7,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",7,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",7,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",7,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",7,[[],["evd5_w",3]]],[11,"ovr0","atsamd11c::evsys::intflag","Bit 0 - Channel 0 Overrun",555,[[],["ovr0_w",3]]],[11,"ovr1","","Bit 1 - Channel 1 Overrun",555,[[],["ovr1_w",3]]],[11,"ovr2","","Bit 2 - Channel 2 Overrun",555,[[],["ovr2_w",3]]],[11,"ovr3","","Bit 3 - Channel 3 Overrun",555,[[],["ovr3_w",3]]],[11,"ovr4","","Bit 4 - Channel 4 Overrun",555,[[],["ovr4_w",3]]],[11,"ovr5","","Bit 5 - Channel 5 Overrun",555,[[],["ovr5_w",3]]],[11,"evd0","","Bit 8 - Channel 0 Event Detection",555,[[],["evd0_w",3]]],[11,"evd1","","Bit 9 - Channel 1 Event Detection",555,[[],["evd1_w",3]]],[11,"evd2","","Bit 10 - Channel 2 Event Detection",555,[[],["evd2_w",3]]],[11,"evd3","","Bit 11 - Channel 3 Event Detection",555,[[],["evd3_w",3]]],[11,"evd4","","Bit 12 - Channel 4 Event Detection",555,[[],["evd4_w",3]]],[11,"evd5","","Bit 13 - Channel 5 Event Detection",555,[[],["evd5_w",3]]],[6,"CTRL","atsamd11c::evsys","Control",null,null],[6,"CHANNEL","","Channel",null,null],[6,"USER","","User Multiplexer",null,null],[6,"CHSTATUS","","Channel Status",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[0,"gclk","atsamd11c","Generic Clock Generator",null,null],[3,"RegisterBlock","atsamd11c::gclk","Register block",null,null],[12,"ctrl","","0x00 - Control",556,null],[12,"status","","0x01 - Status",556,null],[12,"clkctrl","","0x02 - Generic Clock Control",556,null],[12,"genctrl","","0x04 - Generic Clock Generator Control",556,null],[12,"gendiv","","0x08 - Generic Clock Generator Division",556,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd11c::gclk::ctrl","Write proxy for field `SWRST`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[11,"set_bit","","Sets the field bit",557,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",557,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",557,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"swrst","atsamd11c::gclk::ctrl","Bit 0 - Software Reset",558,[[],["swrst_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"swrst","atsamd11c::gclk::ctrl","Bit 0 - Software Reset",559,[[],["swrst_w",3]]],[0,"status","atsamd11c::gclk","Status",null,null],[6,"R","atsamd11c::gclk::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy Status",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::gclk::status","Bit 7 - Synchronization Busy Status",560,[[],["syncbusy_r",6]]],[0,"clkctrl","atsamd11c::gclk","Generic Clock Control",null,null],[3,"ID_W","atsamd11c::gclk::clkctrl","Write proxy for field `ID`",null,null],[3,"GEN_W","","Write proxy for field `GEN`",null,null],[3,"CLKEN_W","","Write proxy for field `CLKEN`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[4,"ID_A","","Generic Clock Selection ID",null,null],[13,"DFLL48","","0: DFLL48",561,null],[13,"FDPLL","","1: FDPLL",561,null],[13,"FDPLL32K","","2: FDPLL32K",561,null],[13,"WDT","","3: WDT",561,null],[13,"RTC","","4: RTC",561,null],[13,"EIC","","5: EIC",561,null],[13,"USB","","6: USB",561,null],[13,"EVSYS_0","","7: EVSYS_0",561,null],[13,"EVSYS_1","","8: EVSYS_1",561,null],[13,"EVSYS_2","","9: EVSYS_2",561,null],[13,"EVSYS_3","","10: EVSYS_3",561,null],[13,"EVSYS_4","","11: EVSYS_4",561,null],[13,"EVSYS_5","","12: EVSYS_5",561,null],[13,"SERCOMX_SLOW","","13: SERCOMX_SLOW",561,null],[13,"SERCOM0_CORE","","14: SERCOM0_CORE",561,null],[13,"SERCOM1_CORE","","15: SERCOM1_CORE",561,null],[13,"SERCOM2_CORE","","16: SERCOM2_CORE",561,null],[13,"TCC0","","17: TCC0",561,null],[13,"TC1_TC2","","18: TC1_TC2",561,null],[13,"ADC","","19: ADC",561,null],[13,"AC_DIG","","20: AC_DIG",561,null],[13,"AC_ANA","","21: AC_ANA",561,null],[13,"DAC","","22: DAC",561,null],[4,"GEN_A","","Generic Clock Generator",null,null],[13,"GCLK0","","0: Generic clock generator 0",562,null],[13,"GCLK1","","1: Generic clock generator 1",562,null],[13,"GCLK2","","2: Generic clock generator 2",562,null],[13,"GCLK3","","3: Generic clock generator 3",562,null],[13,"GCLK4","","4: Generic clock generator 4",562,null],[13,"GCLK5","","5: Generic clock generator 5",562,null],[6,"R","","Reader of register CLKCTRL",null,null],[6,"W","","Writer for register CLKCTRL",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"GEN_R","","Reader of field `GEN`",null,null],[6,"CLKEN_R","","Reader of field `CLKEN`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["id_a",4],["variant",4]]]],[11,"is_dfll48","","Checks if the value of the field is `DFLL48`",6,[[]]],[11,"is_fdpll","","Checks if the value of the field is `FDPLL`",6,[[]]],[11,"is_fdpll32k","","Checks if the value of the field is `FDPLL32K`",6,[[]]],[11,"is_wdt","","Checks if the value of the field is `WDT`",6,[[]]],[11,"is_rtc","","Checks if the value of the field is `RTC`",6,[[]]],[11,"is_eic","","Checks if the value of the field is `EIC`",6,[[]]],[11,"is_usb","","Checks if the value of the field is `USB`",6,[[]]],[11,"is_evsys_0","","Checks if the value of the field is `EVSYS_0`",6,[[]]],[11,"is_evsys_1","","Checks if the value of the field is `EVSYS_1`",6,[[]]],[11,"is_evsys_2","","Checks if the value of the field is `EVSYS_2`",6,[[]]],[11,"is_evsys_3","","Checks if the value of the field is `EVSYS_3`",6,[[]]],[11,"is_evsys_4","","Checks if the value of the field is `EVSYS_4`",6,[[]]],[11,"is_evsys_5","","Checks if the value of the field is `EVSYS_5`",6,[[]]],[11,"is_sercomx_slow","","Checks if the value of the field is `SERCOMX_SLOW`",6,[[]]],[11,"is_sercom0_core","","Checks if the value of the field is `SERCOM0_CORE`",6,[[]]],[11,"is_sercom1_core","","Checks if the value of the field is `SERCOM1_CORE`",6,[[]]],[11,"is_sercom2_core","","Checks if the value of the field is `SERCOM2_CORE`",6,[[]]],[11,"is_tcc0","","Checks if the value of the field is `TCC0`",6,[[]]],[11,"is_tc1_tc2","","Checks if the value of the field is `TC1_TC2`",6,[[]]],[11,"is_adc","","Checks if the value of the field is `ADC`",6,[[]]],[11,"is_ac_dig","","Checks if the value of the field is `AC_DIG`",6,[[]]],[11,"is_ac_ana","","Checks if the value of the field is `AC_ANA`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"variant","atsamd11c::gclk::clkctrl","Get enumerated values variant",563,[[],[["id_a",4],["variant",4]]]],[11,"is_dfll48","","Checks if the value of the field is `DFLL48`",563,[[]]],[11,"is_fdpll","","Checks if the value of the field is `FDPLL`",563,[[]]],[11,"is_fdpll32k","","Checks if the value of the field is `FDPLL32K`",563,[[]]],[11,"is_wdt","","Checks if the value of the field is `WDT`",563,[[]]],[11,"is_rtc","","Checks if the value of the field is `RTC`",563,[[]]],[11,"is_eic","","Checks if the value of the field is `EIC`",563,[[]]],[11,"is_usb","","Checks if the value of the field is `USB`",563,[[]]],[11,"is_evsys_0","","Checks if the value of the field is `EVSYS_0`",563,[[]]],[11,"is_evsys_1","","Checks if the value of the field is `EVSYS_1`",563,[[]]],[11,"is_evsys_2","","Checks if the value of the field is `EVSYS_2`",563,[[]]],[11,"is_evsys_3","","Checks if the value of the field is `EVSYS_3`",563,[[]]],[11,"is_evsys_4","","Checks if the value of the field is `EVSYS_4`",563,[[]]],[11,"is_evsys_5","","Checks if the value of the field is `EVSYS_5`",563,[[]]],[11,"is_sercomx_slow","","Checks if the value of the field is `SERCOMX_SLOW`",563,[[]]],[11,"is_sercom0_core","","Checks if the value of the field is `SERCOM0_CORE`",563,[[]]],[11,"is_sercom1_core","","Checks if the value of the field is `SERCOM1_CORE`",563,[[]]],[11,"is_sercom2_core","","Checks if the value of the field is `SERCOM2_CORE`",563,[[]]],[11,"is_tcc0","","Checks if the value of the field is `TCC0`",563,[[]]],[11,"is_tc1_tc2","","Checks if the value of the field is `TC1_TC2`",563,[[]]],[11,"is_adc","","Checks if the value of the field is `ADC`",563,[[]]],[11,"is_ac_dig","","Checks if the value of the field is `AC_DIG`",563,[[]]],[11,"is_ac_ana","","Checks if the value of the field is `AC_ANA`",563,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",563,[[]]],[11,"variant","","Writes `variant` to the field",564,[[["id_a",4]],["w",6]]],[11,"dfll48","","DFLL48",564,[[],["w",6]]],[11,"fdpll","","FDPLL",564,[[],["w",6]]],[11,"fdpll32k","","FDPLL32K",564,[[],["w",6]]],[11,"wdt","","WDT",564,[[],["w",6]]],[11,"rtc","","RTC",564,[[],["w",6]]],[11,"eic","","EIC",564,[[],["w",6]]],[11,"usb","","USB",564,[[],["w",6]]],[11,"evsys_0","","EVSYS_0",564,[[],["w",6]]],[11,"evsys_1","","EVSYS_1",564,[[],["w",6]]],[11,"evsys_2","","EVSYS_2",564,[[],["w",6]]],[11,"evsys_3","","EVSYS_3",564,[[],["w",6]]],[11,"evsys_4","","EVSYS_4",564,[[],["w",6]]],[11,"evsys_5","","EVSYS_5",564,[[],["w",6]]],[11,"sercomx_slow","","SERCOMX_SLOW",564,[[],["w",6]]],[11,"sercom0_core","","SERCOM0_CORE",564,[[],["w",6]]],[11,"sercom1_core","","SERCOM1_CORE",564,[[],["w",6]]],[11,"sercom2_core","","SERCOM2_CORE",564,[[],["w",6]]],[11,"tcc0","","TCC0",564,[[],["w",6]]],[11,"tc1_tc2","","TC1_TC2",564,[[],["w",6]]],[11,"adc","","ADC",564,[[],["w",6]]],[11,"ac_dig","","AC_DIG",564,[[],["w",6]]],[11,"ac_ana","","AC_ANA",564,[[],["w",6]]],[11,"dac","","DAC",564,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",564,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["gen_a",4],["variant",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",6,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",6,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",6,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",6,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",6,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",6,[[]]],[11,"variant","atsamd11c::gclk::clkctrl","Get enumerated values variant",565,[[],[["gen_a",4],["variant",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",565,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",565,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",565,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",565,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",565,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",565,[[]]],[11,"variant","","Writes `variant` to the field",566,[[["gen_a",4]],["w",6]]],[11,"gclk0","","Generic clock generator 0",566,[[],["w",6]]],[11,"gclk1","","Generic clock generator 1",566,[[],["w",6]]],[11,"gclk2","","Generic clock generator 2",566,[[],["w",6]]],[11,"gclk3","","Generic clock generator 3",566,[[],["w",6]]],[11,"gclk4","","Generic clock generator 4",566,[[],["w",6]]],[11,"gclk5","","Generic clock generator 5",566,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",566,[[],["w",6]]],[11,"set_bit","","Sets the field bit",567,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",567,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",567,[[],["w",6]]],[11,"set_bit","","Sets the field bit",568,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",568,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",568,[[],["w",6]]],[11,"id","atsamd11c::generic","Bits 0:5 - Generic Clock Selection ID",6,[[],["id_r",6]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",6,[[],["gen_r",6]]],[11,"clken","","Bit 14 - Clock Enable",6,[[],["clken_r",6]]],[11,"wrtlock","","Bit 15 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"id","atsamd11c::gclk::clkctrl","Bits 0:5 - Generic Clock Selection ID",569,[[],["id_r",6]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",569,[[],["gen_r",6]]],[11,"clken","","Bit 14 - Clock Enable",569,[[],["clken_r",6]]],[11,"wrtlock","","Bit 15 - Write Lock",569,[[],["wrtlock_r",6]]],[11,"id","atsamd11c::generic","Bits 0:5 - Generic Clock Selection ID",7,[[],["id_w",3]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",7,[[],["gen_w",3]]],[11,"clken","","Bit 14 - Clock Enable",7,[[],["clken_w",3]]],[11,"wrtlock","","Bit 15 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"id","atsamd11c::gclk::clkctrl","Bits 0:5 - Generic Clock Selection ID",570,[[],["id_w",3]]],[11,"gen","","Bits 8:11 - Generic Clock Generator",570,[[],["gen_w",3]]],[11,"clken","","Bit 14 - Clock Enable",570,[[],["clken_w",3]]],[11,"wrtlock","","Bit 15 - Write Lock",570,[[],["wrtlock_w",3]]],[0,"genctrl","atsamd11c::gclk","Generic Clock Generator Control",null,null],[3,"ID_W","atsamd11c::gclk::genctrl","Write proxy for field `ID`",null,null],[3,"SRC_W","","Write proxy for field `SRC`",null,null],[3,"GENEN_W","","Write proxy for field `GENEN`",null,null],[3,"IDC_W","","Write proxy for field `IDC`",null,null],[3,"OOV_W","","Write proxy for field `OOV`",null,null],[3,"OE_W","","Write proxy for field `OE`",null,null],[3,"DIVSEL_W","","Write proxy for field `DIVSEL`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[4,"SRC_A","","Source Select",null,null],[13,"XOSC","","0: XOSC oscillator output",571,null],[13,"GCLKIN","","1: Generator input pad",571,null],[13,"GCLKGEN1","","2: Generic clock generator 1 output",571,null],[13,"OSCULP32K","","3: OSCULP32K oscillator output",571,null],[13,"OSC32K","","4: OSC32K oscillator output",571,null],[13,"XOSC32K","","5: XOSC32K oscillator output",571,null],[13,"OSC8M","","6: OSC8M oscillator output",571,null],[13,"DFLL48M","","7: DFLL48M output",571,null],[13,"DPLL96M","","8: DPLL96M output",571,null],[6,"R","","Reader of register GENCTRL",null,null],[6,"W","","Writer for register GENCTRL",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"GENEN_R","","Reader of field `GENEN`",null,null],[6,"IDC_R","","Reader of field `IDC`",null,null],[6,"OOV_R","","Reader of field `OOV`",null,null],[6,"OE_R","","Reader of field `OE`",null,null],[6,"DIVSEL_R","","Reader of field `DIVSEL`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"bits","","Writes raw bits to the field",572,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["src_a",4],["variant",4]]]],[11,"is_xosc","","Checks if the value of the field is `XOSC`",6,[[]]],[11,"is_gclkin","","Checks if the value of the field is `GCLKIN`",6,[[]]],[11,"is_gclkgen1","","Checks if the value of the field is `GCLKGEN1`",6,[[]]],[11,"is_osculp32k","","Checks if the value of the field is `OSCULP32K`",6,[[]]],[11,"is_osc32k","","Checks if the value of the field is `OSC32K`",6,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",6,[[]]],[11,"is_osc8m","","Checks if the value of the field is `OSC8M`",6,[[]]],[11,"is_dfll48m","","Checks if the value of the field is `DFLL48M`",6,[[]]],[11,"is_dpll96m","","Checks if the value of the field is `DPLL96M`",6,[[]]],[11,"variant","atsamd11c::gclk::genctrl","Get enumerated values variant",573,[[],[["src_a",4],["variant",4]]]],[11,"is_xosc","","Checks if the value of the field is `XOSC`",573,[[]]],[11,"is_gclkin","","Checks if the value of the field is `GCLKIN`",573,[[]]],[11,"is_gclkgen1","","Checks if the value of the field is `GCLKGEN1`",573,[[]]],[11,"is_osculp32k","","Checks if the value of the field is `OSCULP32K`",573,[[]]],[11,"is_osc32k","","Checks if the value of the field is `OSC32K`",573,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",573,[[]]],[11,"is_osc8m","","Checks if the value of the field is `OSC8M`",573,[[]]],[11,"is_dfll48m","","Checks if the value of the field is `DFLL48M`",573,[[]]],[11,"is_dpll96m","","Checks if the value of the field is `DPLL96M`",573,[[]]],[11,"variant","","Writes `variant` to the field",574,[[["src_a",4]],["w",6]]],[11,"xosc","","XOSC oscillator output",574,[[],["w",6]]],[11,"gclkin","","Generator input pad",574,[[],["w",6]]],[11,"gclkgen1","","Generic clock generator 1 output",574,[[],["w",6]]],[11,"osculp32k","","OSCULP32K oscillator output",574,[[],["w",6]]],[11,"osc32k","","OSC32K oscillator output",574,[[],["w",6]]],[11,"xosc32k","","XOSC32K oscillator output",574,[[],["w",6]]],[11,"osc8m","","OSC8M oscillator output",574,[[],["w",6]]],[11,"dfll48m","","DFLL48M output",574,[[],["w",6]]],[11,"dpll96m","","DPLL96M output",574,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",574,[[],["w",6]]],[11,"set_bit","","Sets the field bit",575,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",575,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",575,[[],["w",6]]],[11,"set_bit","","Sets the field bit",576,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",576,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",576,[[],["w",6]]],[11,"set_bit","","Sets the field bit",577,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",577,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",577,[[],["w",6]]],[11,"set_bit","","Sets the field bit",578,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",578,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",578,[[],["w",6]]],[11,"set_bit","","Sets the field bit",579,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",579,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",579,[[],["w",6]]],[11,"set_bit","","Sets the field bit",580,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",580,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",580,[[],["w",6]]],[11,"id","atsamd11c::generic","Bits 0:3 - Generic Clock Generator Selection",6,[[],["id_r",6]]],[11,"src","","Bits 8:12 - Source Select",6,[[],["src_r",6]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",6,[[],["genen_r",6]]],[11,"idc","","Bit 17 - Improve Duty Cycle",6,[[],["idc_r",6]]],[11,"oov","","Bit 18 - Output Off Value",6,[[],["oov_r",6]]],[11,"oe","","Bit 19 - Output Enable",6,[[],["oe_r",6]]],[11,"divsel","","Bit 20 - Divide Selection",6,[[],["divsel_r",6]]],[11,"runstdby","","Bit 21 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"id","atsamd11c::gclk::genctrl","Bits 0:3 - Generic Clock Generator Selection",581,[[],["id_r",6]]],[11,"src","","Bits 8:12 - Source Select",581,[[],["src_r",6]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",581,[[],["genen_r",6]]],[11,"idc","","Bit 17 - Improve Duty Cycle",581,[[],["idc_r",6]]],[11,"oov","","Bit 18 - Output Off Value",581,[[],["oov_r",6]]],[11,"oe","","Bit 19 - Output Enable",581,[[],["oe_r",6]]],[11,"divsel","","Bit 20 - Divide Selection",581,[[],["divsel_r",6]]],[11,"runstdby","","Bit 21 - Run in Standby",581,[[],["runstdby_r",6]]],[11,"id","atsamd11c::generic","Bits 0:3 - Generic Clock Generator Selection",7,[[],["id_w",3]]],[11,"src","","Bits 8:12 - Source Select",7,[[],["src_w",3]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",7,[[],["genen_w",3]]],[11,"idc","","Bit 17 - Improve Duty Cycle",7,[[],["idc_w",3]]],[11,"oov","","Bit 18 - Output Off Value",7,[[],["oov_w",3]]],[11,"oe","","Bit 19 - Output Enable",7,[[],["oe_w",3]]],[11,"divsel","","Bit 20 - Divide Selection",7,[[],["divsel_w",3]]],[11,"runstdby","","Bit 21 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"id","atsamd11c::gclk::genctrl","Bits 0:3 - Generic Clock Generator Selection",582,[[],["id_w",3]]],[11,"src","","Bits 8:12 - Source Select",582,[[],["src_w",3]]],[11,"genen","","Bit 16 - Generic Clock Generator Enable",582,[[],["genen_w",3]]],[11,"idc","","Bit 17 - Improve Duty Cycle",582,[[],["idc_w",3]]],[11,"oov","","Bit 18 - Output Off Value",582,[[],["oov_w",3]]],[11,"oe","","Bit 19 - Output Enable",582,[[],["oe_w",3]]],[11,"divsel","","Bit 20 - Divide Selection",582,[[],["divsel_w",3]]],[11,"runstdby","","Bit 21 - Run in Standby",582,[[],["runstdby_w",3]]],[0,"gendiv","atsamd11c::gclk","Generic Clock Generator Division",null,null],[3,"ID_W","atsamd11c::gclk::gendiv","Write proxy for field `ID`",null,null],[3,"DIV_W","","Write proxy for field `DIV`",null,null],[6,"R","","Reader of register GENDIV",null,null],[6,"W","","Writer for register GENDIV",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"bits","","Writes raw bits to the field",583,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",584,[[],["w",6]]],[11,"id","atsamd11c::generic","Bits 0:3 - Generic Clock Generator Selection",6,[[],["id_r",6]]],[11,"div","","Bits 8:23 - Division Factor",6,[[],["div_r",6]]],[11,"id","atsamd11c::gclk::gendiv","Bits 0:3 - Generic Clock Generator Selection",585,[[],["id_r",6]]],[11,"div","","Bits 8:23 - Division Factor",585,[[],["div_r",6]]],[11,"id","atsamd11c::generic","Bits 0:3 - Generic Clock Generator Selection",7,[[],["id_w",3]]],[11,"div","","Bits 8:23 - Division Factor",7,[[],["div_w",3]]],[11,"id","atsamd11c::gclk::gendiv","Bits 0:3 - Generic Clock Generator Selection",586,[[],["id_w",3]]],[11,"div","","Bits 8:23 - Division Factor",586,[[],["div_w",3]]],[6,"CTRL","atsamd11c::gclk","Control",null,null],[6,"STATUS","","Status",null,null],[6,"CLKCTRL","","Generic Clock Control",null,null],[6,"GENCTRL","","Generic Clock Generator Control",null,null],[6,"GENDIV","","Generic Clock Generator Division",null,null],[0,"hmatrix","atsamd11c","HSB Matrix",null,null],[3,"RegisterBlock","atsamd11c::hmatrix","Register block",null,null],[12,"pras0","","0x80 - Priority A for Slave",587,null],[12,"prbs0","","0x84 - Priority B for Slave",587,null],[12,"pras1","","0x88 - Priority A for Slave",587,null],[12,"prbs1","","0x8c - Priority B for Slave",587,null],[12,"pras2","","0x90 - Priority A for Slave",587,null],[12,"prbs2","","0x94 - Priority B for Slave",587,null],[12,"pras3","","0x98 - Priority A for Slave",587,null],[12,"prbs3","","0x9c - Priority B for Slave",587,null],[12,"pras4","","0xa0 - Priority A for Slave",587,null],[12,"prbs4","","0xa4 - Priority B for Slave",587,null],[12,"pras5","","0xa8 - Priority A for Slave",587,null],[12,"prbs5","","0xac - Priority B for Slave",587,null],[12,"pras6","","0xb0 - Priority A for Slave",587,null],[12,"prbs6","","0xb4 - Priority B for Slave",587,null],[12,"pras7","","0xb8 - Priority A for Slave",587,null],[12,"prbs7","","0xbc - Priority B for Slave",587,null],[12,"pras8","","0xc0 - Priority A for Slave",587,null],[12,"prbs8","","0xc4 - Priority B for Slave",587,null],[12,"pras9","","0xc8 - Priority A for Slave",587,null],[12,"prbs9","","0xcc - Priority B for Slave",587,null],[12,"pras10","","0xd0 - Priority A for Slave",587,null],[12,"prbs10","","0xd4 - Priority B for Slave",587,null],[12,"pras11","","0xd8 - Priority A for Slave",587,null],[12,"prbs11","","0xdc - Priority B for Slave",587,null],[12,"pras12","","0xe0 - Priority A for Slave",587,null],[12,"prbs12","","0xe4 - Priority B for Slave",587,null],[12,"pras13","","0xe8 - Priority A for Slave",587,null],[12,"prbs13","","0xec - Priority B for Slave",587,null],[12,"pras14","","0xf0 - Priority A for Slave",587,null],[12,"prbs14","","0xf4 - Priority B for Slave",587,null],[12,"pras15","","0xf8 - Priority A for Slave",587,null],[12,"prbs15","","0xfc - Priority B for Slave",587,null],[12,"sfr","","0x110 - Special Function",587,null],[0,"pras","","Priority A for Slave",null,null],[3,"M0PR_W","atsamd11c::hmatrix::pras","Write proxy for field `M0PR`",null,null],[3,"M1PR_W","","Write proxy for field `M1PR`",null,null],[3,"M2PR_W","","Write proxy for field `M2PR`",null,null],[3,"M3PR_W","","Write proxy for field `M3PR`",null,null],[3,"M4PR_W","","Write proxy for field `M4PR`",null,null],[3,"M5PR_W","","Write proxy for field `M5PR`",null,null],[3,"M6PR_W","","Write proxy for field `M6PR`",null,null],[3,"M7PR_W","","Write proxy for field `M7PR`",null,null],[6,"R","","Reader of register PRAS%s",null,null],[6,"W","","Writer for register PRAS%s",null,null],[6,"M0PR_R","","Reader of field `M0PR`",null,null],[6,"M1PR_R","","Reader of field `M1PR`",null,null],[6,"M2PR_R","","Reader of field `M2PR`",null,null],[6,"M3PR_R","","Reader of field `M3PR`",null,null],[6,"M4PR_R","","Reader of field `M4PR`",null,null],[6,"M5PR_R","","Reader of field `M5PR`",null,null],[6,"M6PR_R","","Reader of field `M6PR`",null,null],[6,"M7PR_R","","Reader of field `M7PR`",null,null],[11,"bits","","Writes raw bits to the field",588,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",589,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",590,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",591,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",592,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",593,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",594,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",595,[[],["w",6]]],[11,"m0pr","atsamd11c::generic","Bits 0:3 - Master 0 Priority",6,[[],["m0pr_r",6]]],[11,"m1pr","","Bits 4:7 - Master 1 Priority",6,[[],["m1pr_r",6]]],[11,"m2pr","","Bits 8:11 - Master 2 Priority",6,[[],["m2pr_r",6]]],[11,"m3pr","","Bits 12:15 - Master 3 Priority",6,[[],["m3pr_r",6]]],[11,"m4pr","","Bits 16:19 - Master 4 Priority",6,[[],["m4pr_r",6]]],[11,"m5pr","","Bits 20:23 - Master 5 Priority",6,[[],["m5pr_r",6]]],[11,"m6pr","","Bits 24:27 - Master 6 Priority",6,[[],["m6pr_r",6]]],[11,"m7pr","","Bits 28:31 - Master 7 Priority",6,[[],["m7pr_r",6]]],[11,"m0pr","atsamd11c::hmatrix::pras","Bits 0:3 - Master 0 Priority",596,[[],["m0pr_r",6]]],[11,"m1pr","","Bits 4:7 - Master 1 Priority",596,[[],["m1pr_r",6]]],[11,"m2pr","","Bits 8:11 - Master 2 Priority",596,[[],["m2pr_r",6]]],[11,"m3pr","","Bits 12:15 - Master 3 Priority",596,[[],["m3pr_r",6]]],[11,"m4pr","","Bits 16:19 - Master 4 Priority",596,[[],["m4pr_r",6]]],[11,"m5pr","","Bits 20:23 - Master 5 Priority",596,[[],["m5pr_r",6]]],[11,"m6pr","","Bits 24:27 - Master 6 Priority",596,[[],["m6pr_r",6]]],[11,"m7pr","","Bits 28:31 - Master 7 Priority",596,[[],["m7pr_r",6]]],[11,"m0pr","atsamd11c::generic","Bits 0:3 - Master 0 Priority",7,[[],["m0pr_w",3]]],[11,"m1pr","","Bits 4:7 - Master 1 Priority",7,[[],["m1pr_w",3]]],[11,"m2pr","","Bits 8:11 - Master 2 Priority",7,[[],["m2pr_w",3]]],[11,"m3pr","","Bits 12:15 - Master 3 Priority",7,[[],["m3pr_w",3]]],[11,"m4pr","","Bits 16:19 - Master 4 Priority",7,[[],["m4pr_w",3]]],[11,"m5pr","","Bits 20:23 - Master 5 Priority",7,[[],["m5pr_w",3]]],[11,"m6pr","","Bits 24:27 - Master 6 Priority",7,[[],["m6pr_w",3]]],[11,"m7pr","","Bits 28:31 - Master 7 Priority",7,[[],["m7pr_w",3]]],[11,"m0pr","atsamd11c::hmatrix::pras","Bits 0:3 - Master 0 Priority",597,[[],["m0pr_w",3]]],[11,"m1pr","","Bits 4:7 - Master 1 Priority",597,[[],["m1pr_w",3]]],[11,"m2pr","","Bits 8:11 - Master 2 Priority",597,[[],["m2pr_w",3]]],[11,"m3pr","","Bits 12:15 - Master 3 Priority",597,[[],["m3pr_w",3]]],[11,"m4pr","","Bits 16:19 - Master 4 Priority",597,[[],["m4pr_w",3]]],[11,"m5pr","","Bits 20:23 - Master 5 Priority",597,[[],["m5pr_w",3]]],[11,"m6pr","","Bits 24:27 - Master 6 Priority",597,[[],["m6pr_w",3]]],[11,"m7pr","","Bits 28:31 - Master 7 Priority",597,[[],["m7pr_w",3]]],[0,"prbs","atsamd11c::hmatrix","Priority B for Slave",null,null],[3,"M8PR_W","atsamd11c::hmatrix::prbs","Write proxy for field `M8PR`",null,null],[3,"M9PR_W","","Write proxy for field `M9PR`",null,null],[3,"M10PR_W","","Write proxy for field `M10PR`",null,null],[3,"M11PR_W","","Write proxy for field `M11PR`",null,null],[3,"M12PR_W","","Write proxy for field `M12PR`",null,null],[3,"M13PR_W","","Write proxy for field `M13PR`",null,null],[3,"M14PR_W","","Write proxy for field `M14PR`",null,null],[3,"M15PR_W","","Write proxy for field `M15PR`",null,null],[6,"R","","Reader of register PRBS%s",null,null],[6,"W","","Writer for register PRBS%s",null,null],[6,"M8PR_R","","Reader of field `M8PR`",null,null],[6,"M9PR_R","","Reader of field `M9PR`",null,null],[6,"M10PR_R","","Reader of field `M10PR`",null,null],[6,"M11PR_R","","Reader of field `M11PR`",null,null],[6,"M12PR_R","","Reader of field `M12PR`",null,null],[6,"M13PR_R","","Reader of field `M13PR`",null,null],[6,"M14PR_R","","Reader of field `M14PR`",null,null],[6,"M15PR_R","","Reader of field `M15PR`",null,null],[11,"bits","","Writes raw bits to the field",598,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",599,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",600,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",601,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",602,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",603,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",604,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",605,[[],["w",6]]],[11,"m8pr","atsamd11c::generic","Bits 0:3 - Master 8 Priority",6,[[],["m8pr_r",6]]],[11,"m9pr","","Bits 4:7 - Master 9 Priority",6,[[],["m9pr_r",6]]],[11,"m10pr","","Bits 8:11 - Master 10 Priority",6,[[],["m10pr_r",6]]],[11,"m11pr","","Bits 12:15 - Master 11 Priority",6,[[],["m11pr_r",6]]],[11,"m12pr","","Bits 16:19 - Master 12 Priority",6,[[],["m12pr_r",6]]],[11,"m13pr","","Bits 20:23 - Master 13 Priority",6,[[],["m13pr_r",6]]],[11,"m14pr","","Bits 24:27 - Master 14 Priority",6,[[],["m14pr_r",6]]],[11,"m15pr","","Bits 28:31 - Master 15 Priority",6,[[],["m15pr_r",6]]],[11,"m8pr","atsamd11c::hmatrix::prbs","Bits 0:3 - Master 8 Priority",606,[[],["m8pr_r",6]]],[11,"m9pr","","Bits 4:7 - Master 9 Priority",606,[[],["m9pr_r",6]]],[11,"m10pr","","Bits 8:11 - Master 10 Priority",606,[[],["m10pr_r",6]]],[11,"m11pr","","Bits 12:15 - Master 11 Priority",606,[[],["m11pr_r",6]]],[11,"m12pr","","Bits 16:19 - Master 12 Priority",606,[[],["m12pr_r",6]]],[11,"m13pr","","Bits 20:23 - Master 13 Priority",606,[[],["m13pr_r",6]]],[11,"m14pr","","Bits 24:27 - Master 14 Priority",606,[[],["m14pr_r",6]]],[11,"m15pr","","Bits 28:31 - Master 15 Priority",606,[[],["m15pr_r",6]]],[11,"m8pr","atsamd11c::generic","Bits 0:3 - Master 8 Priority",7,[[],["m8pr_w",3]]],[11,"m9pr","","Bits 4:7 - Master 9 Priority",7,[[],["m9pr_w",3]]],[11,"m10pr","","Bits 8:11 - Master 10 Priority",7,[[],["m10pr_w",3]]],[11,"m11pr","","Bits 12:15 - Master 11 Priority",7,[[],["m11pr_w",3]]],[11,"m12pr","","Bits 16:19 - Master 12 Priority",7,[[],["m12pr_w",3]]],[11,"m13pr","","Bits 20:23 - Master 13 Priority",7,[[],["m13pr_w",3]]],[11,"m14pr","","Bits 24:27 - Master 14 Priority",7,[[],["m14pr_w",3]]],[11,"m15pr","","Bits 28:31 - Master 15 Priority",7,[[],["m15pr_w",3]]],[11,"m8pr","atsamd11c::hmatrix::prbs","Bits 0:3 - Master 8 Priority",607,[[],["m8pr_w",3]]],[11,"m9pr","","Bits 4:7 - Master 9 Priority",607,[[],["m9pr_w",3]]],[11,"m10pr","","Bits 8:11 - Master 10 Priority",607,[[],["m10pr_w",3]]],[11,"m11pr","","Bits 12:15 - Master 11 Priority",607,[[],["m11pr_w",3]]],[11,"m12pr","","Bits 16:19 - Master 12 Priority",607,[[],["m12pr_w",3]]],[11,"m13pr","","Bits 20:23 - Master 13 Priority",607,[[],["m13pr_w",3]]],[11,"m14pr","","Bits 24:27 - Master 14 Priority",607,[[],["m14pr_w",3]]],[11,"m15pr","","Bits 28:31 - Master 15 Priority",607,[[],["m15pr_w",3]]],[0,"sfr","atsamd11c::hmatrix","Special Function",null,null],[3,"SFR_W","atsamd11c::hmatrix::sfr","Write proxy for field `SFR`",null,null],[6,"R","","Reader of register SFR%s",null,null],[6,"W","","Writer for register SFR%s",null,null],[6,"SFR_R","","Reader of field `SFR`",null,null],[11,"bits","","Writes raw bits to the field",608,[[],["w",6]]],[11,"sfr","atsamd11c::generic","Bits 0:31 - Special Function Register",6,[[],["sfr_r",6]]],[11,"sfr","atsamd11c::hmatrix::sfr","Bits 0:31 - Special Function Register",609,[[],["sfr_r",6]]],[11,"sfr","atsamd11c::generic","Bits 0:31 - Special Function Register",7,[[],["sfr_w",3]]],[11,"sfr","atsamd11c::hmatrix::sfr","Bits 0:31 - Special Function Register",610,[[],["sfr_w",3]]],[6,"PRAS","atsamd11c::hmatrix","Priority A for Slave",null,null],[6,"PRBS","","Priority B for Slave",null,null],[6,"SFR","","Special Function",null,null],[0,"mtb","atsamd11c","Cortex-M0+ Micro-Trace Buffer",null,null],[3,"RegisterBlock","atsamd11c::mtb","Register block",null,null],[12,"position","","0x00 - MTB Position",611,null],[12,"master","","0x04 - MTB Master",611,null],[12,"flow","","0x08 - MTB Flow",611,null],[12,"base","","0x0c - MTB Base",611,null],[12,"itctrl","","0xf00 - MTB Integration Mode Control",611,null],[12,"claimset","","0xfa0 - MTB Claim Set",611,null],[12,"claimclr","","0xfa4 - MTB Claim Clear",611,null],[12,"lockaccess","","0xfb0 - MTB Lock Access",611,null],[12,"lockstatus","","0xfb4 - MTB Lock Status",611,null],[12,"authstatus","","0xfb8 - MTB Authentication Status",611,null],[12,"devarch","","0xfbc - MTB Device Architecture",611,null],[12,"devid","","0xfc8 - MTB Device Configuration",611,null],[12,"devtype","","0xfcc - MTB Device Type",611,null],[12,"pid4","","0xfd0 - CoreSight",611,null],[12,"pid5","","0xfd4 - CoreSight",611,null],[12,"pid6","","0xfd8 - CoreSight",611,null],[12,"pid7","","0xfdc - CoreSight",611,null],[12,"pid0","","0xfe0 - CoreSight",611,null],[12,"pid1","","0xfe4 - CoreSight",611,null],[12,"pid2","","0xfe8 - CoreSight",611,null],[12,"pid3","","0xfec - CoreSight",611,null],[12,"cid0","","0xff0 - CoreSight",611,null],[12,"cid1","","0xff4 - CoreSight",611,null],[12,"cid2","","0xff8 - CoreSight",611,null],[12,"cid3","","0xffc - CoreSight",611,null],[0,"position","","MTB Position",null,null],[3,"WRAP_W","atsamd11c::mtb::position","Write proxy for field `WRAP`",null,null],[3,"POINTER_W","","Write proxy for field `POINTER`",null,null],[6,"R","","Reader of register POSITION",null,null],[6,"W","","Writer for register POSITION",null,null],[6,"WRAP_R","","Reader of field `WRAP`",null,null],[6,"POINTER_R","","Reader of field `POINTER`",null,null],[11,"set_bit","","Sets the field bit",612,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",612,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",612,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",613,[[],["w",6]]],[11,"wrap","atsamd11c::generic","Bit 2 - Pointer Value Wraps",6,[[],["wrap_r",6]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",6,[[],["pointer_r",6]]],[11,"wrap","atsamd11c::mtb::position","Bit 2 - Pointer Value Wraps",614,[[],["wrap_r",6]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",614,[[],["pointer_r",6]]],[11,"wrap","atsamd11c::generic","Bit 2 - Pointer Value Wraps",7,[[],["wrap_w",3]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",7,[[],["pointer_w",3]]],[11,"wrap","atsamd11c::mtb::position","Bit 2 - Pointer Value Wraps",615,[[],["wrap_w",3]]],[11,"pointer","","Bits 3:31 - Trace Packet Location Pointer",615,[[],["pointer_w",3]]],[0,"master","atsamd11c::mtb","MTB Master",null,null],[3,"MASK_W","atsamd11c::mtb::master","Write proxy for field `MASK`",null,null],[3,"TSTARTEN_W","","Write proxy for field `TSTARTEN`",null,null],[3,"TSTOPEN_W","","Write proxy for field `TSTOPEN`",null,null],[3,"SFRWPRIV_W","","Write proxy for field `SFRWPRIV`",null,null],[3,"RAMPRIV_W","","Write proxy for field `RAMPRIV`",null,null],[3,"HALTREQ_W","","Write proxy for field `HALTREQ`",null,null],[3,"EN_W","","Write proxy for field `EN`",null,null],[6,"R","","Reader of register MASTER",null,null],[6,"W","","Writer for register MASTER",null,null],[6,"MASK_R","","Reader of field `MASK`",null,null],[6,"TSTARTEN_R","","Reader of field `TSTARTEN`",null,null],[6,"TSTOPEN_R","","Reader of field `TSTOPEN`",null,null],[6,"SFRWPRIV_R","","Reader of field `SFRWPRIV`",null,null],[6,"RAMPRIV_R","","Reader of field `RAMPRIV`",null,null],[6,"HALTREQ_R","","Reader of field `HALTREQ`",null,null],[6,"EN_R","","Reader of field `EN`",null,null],[11,"bits","","Writes raw bits to the field",616,[[],["w",6]]],[11,"set_bit","","Sets the field bit",617,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",617,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",617,[[],["w",6]]],[11,"set_bit","","Sets the field bit",618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",619,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",619,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",619,[[],["w",6]]],[11,"set_bit","","Sets the field bit",620,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",620,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",620,[[],["w",6]]],[11,"set_bit","","Sets the field bit",621,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",621,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",621,[[],["w",6]]],[11,"set_bit","","Sets the field bit",622,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",622,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",622,[[],["w",6]]],[11,"mask","atsamd11c::generic","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",6,[[],["mask_r",6]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",6,[[],["tstarten_r",6]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",6,[[],["tstopen_r",6]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",6,[[],["sfrwpriv_r",6]]],[11,"rampriv","","Bit 8 - SRAM Privilege",6,[[],["rampriv_r",6]]],[11,"haltreq","","Bit 9 - Halt Request",6,[[],["haltreq_r",6]]],[11,"en","","Bit 31 - Main Trace Enable",6,[[],["en_r",6]]],[11,"mask","atsamd11c::mtb::master","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",623,[[],["mask_r",6]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",623,[[],["tstarten_r",6]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",623,[[],["tstopen_r",6]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",623,[[],["sfrwpriv_r",6]]],[11,"rampriv","","Bit 8 - SRAM Privilege",623,[[],["rampriv_r",6]]],[11,"haltreq","","Bit 9 - Halt Request",623,[[],["haltreq_r",6]]],[11,"en","","Bit 31 - Main Trace Enable",623,[[],["en_r",6]]],[11,"mask","atsamd11c::generic","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",7,[[],["mask_w",3]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",7,[[],["tstarten_w",3]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",7,[[],["tstopen_w",3]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",7,[[],["sfrwpriv_w",3]]],[11,"rampriv","","Bit 8 - SRAM Privilege",7,[[],["rampriv_w",3]]],[11,"haltreq","","Bit 9 - Halt Request",7,[[],["haltreq_w",3]]],[11,"en","","Bit 31 - Main Trace Enable",7,[[],["en_w",3]]],[11,"mask","atsamd11c::mtb::master","Bits 0:4 - Maximum Value of the Trace Buffer in SRAM",624,[[],["mask_w",3]]],[11,"tstarten","","Bit 5 - Trace Start Input Enable",624,[[],["tstarten_w",3]]],[11,"tstopen","","Bit 6 - Trace Stop Input Enable",624,[[],["tstopen_w",3]]],[11,"sfrwpriv","","Bit 7 - Special Function Register Write Privilege",624,[[],["sfrwpriv_w",3]]],[11,"rampriv","","Bit 8 - SRAM Privilege",624,[[],["rampriv_w",3]]],[11,"haltreq","","Bit 9 - Halt Request",624,[[],["haltreq_w",3]]],[11,"en","","Bit 31 - Main Trace Enable",624,[[],["en_w",3]]],[0,"flow","atsamd11c::mtb","MTB Flow",null,null],[3,"AUTOSTOP_W","atsamd11c::mtb::flow","Write proxy for field `AUTOSTOP`",null,null],[3,"AUTOHALT_W","","Write proxy for field `AUTOHALT`",null,null],[3,"WATERMARK_W","","Write proxy for field `WATERMARK`",null,null],[6,"R","","Reader of register FLOW",null,null],[6,"W","","Writer for register FLOW",null,null],[6,"AUTOSTOP_R","","Reader of field `AUTOSTOP`",null,null],[6,"AUTOHALT_R","","Reader of field `AUTOHALT`",null,null],[6,"WATERMARK_R","","Reader of field `WATERMARK`",null,null],[11,"set_bit","","Sets the field bit",625,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",625,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",625,[[],["w",6]]],[11,"set_bit","","Sets the field bit",626,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",626,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",626,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",627,[[],["w",6]]],[11,"autostop","atsamd11c::generic","Bit 0 - Auto Stop Tracing",6,[[],["autostop_r",6]]],[11,"autohalt","","Bit 1 - Auto Halt Request",6,[[],["autohalt_r",6]]],[11,"watermark","","Bits 3:31 - Watermark value",6,[[],["watermark_r",6]]],[11,"autostop","atsamd11c::mtb::flow","Bit 0 - Auto Stop Tracing",628,[[],["autostop_r",6]]],[11,"autohalt","","Bit 1 - Auto Halt Request",628,[[],["autohalt_r",6]]],[11,"watermark","","Bits 3:31 - Watermark value",628,[[],["watermark_r",6]]],[11,"autostop","atsamd11c::generic","Bit 0 - Auto Stop Tracing",7,[[],["autostop_w",3]]],[11,"autohalt","","Bit 1 - Auto Halt Request",7,[[],["autohalt_w",3]]],[11,"watermark","","Bits 3:31 - Watermark value",7,[[],["watermark_w",3]]],[11,"autostop","atsamd11c::mtb::flow","Bit 0 - Auto Stop Tracing",629,[[],["autostop_w",3]]],[11,"autohalt","","Bit 1 - Auto Halt Request",629,[[],["autohalt_w",3]]],[11,"watermark","","Bits 3:31 - Watermark value",629,[[],["watermark_w",3]]],[0,"base","atsamd11c::mtb","MTB Base",null,null],[6,"R","atsamd11c::mtb::base","Reader of register BASE",null,null],[0,"itctrl","atsamd11c::mtb","MTB Integration Mode Control",null,null],[6,"R","atsamd11c::mtb::itctrl","Reader of register ITCTRL",null,null],[6,"W","","Writer for register ITCTRL",null,null],[0,"claimset","atsamd11c::mtb","MTB Claim Set",null,null],[6,"R","atsamd11c::mtb::claimset","Reader of register CLAIMSET",null,null],[6,"W","","Writer for register CLAIMSET",null,null],[0,"claimclr","atsamd11c::mtb","MTB Claim Clear",null,null],[6,"R","atsamd11c::mtb::claimclr","Reader of register CLAIMCLR",null,null],[6,"W","","Writer for register CLAIMCLR",null,null],[0,"lockaccess","atsamd11c::mtb","MTB Lock Access",null,null],[6,"R","atsamd11c::mtb::lockaccess","Reader of register LOCKACCESS",null,null],[6,"W","","Writer for register LOCKACCESS",null,null],[0,"lockstatus","atsamd11c::mtb","MTB Lock Status",null,null],[6,"R","atsamd11c::mtb::lockstatus","Reader of register LOCKSTATUS",null,null],[0,"authstatus","atsamd11c::mtb","MTB Authentication Status",null,null],[6,"R","atsamd11c::mtb::authstatus","Reader of register AUTHSTATUS",null,null],[0,"devarch","atsamd11c::mtb","MTB Device Architecture",null,null],[6,"R","atsamd11c::mtb::devarch","Reader of register DEVARCH",null,null],[0,"devid","atsamd11c::mtb","MTB Device Configuration",null,null],[6,"R","atsamd11c::mtb::devid","Reader of register DEVID",null,null],[0,"devtype","atsamd11c::mtb","MTB Device Type",null,null],[6,"R","atsamd11c::mtb::devtype","Reader of register DEVTYPE",null,null],[0,"pid4","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid4","Reader of register PID4",null,null],[0,"pid5","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid5","Reader of register PID5",null,null],[0,"pid6","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid6","Reader of register PID6",null,null],[0,"pid7","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid7","Reader of register PID7",null,null],[0,"pid0","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid0","Reader of register PID0",null,null],[0,"pid1","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid1","Reader of register PID1",null,null],[0,"pid2","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid2","Reader of register PID2",null,null],[0,"pid3","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::pid3","Reader of register PID3",null,null],[0,"cid0","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::cid0","Reader of register CID0",null,null],[0,"cid1","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::cid1","Reader of register CID1",null,null],[0,"cid2","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::cid2","Reader of register CID2",null,null],[0,"cid3","atsamd11c::mtb","CoreSight",null,null],[6,"R","atsamd11c::mtb::cid3","Reader of register CID3",null,null],[6,"POSITION","atsamd11c::mtb","MTB Position",null,null],[6,"MASTER","","MTB Master",null,null],[6,"FLOW","","MTB Flow",null,null],[6,"BASE","","MTB Base",null,null],[6,"ITCTRL","","MTB Integration Mode Control",null,null],[6,"CLAIMSET","","MTB Claim Set",null,null],[6,"CLAIMCLR","","MTB Claim Clear",null,null],[6,"LOCKACCESS","","MTB Lock Access",null,null],[6,"LOCKSTATUS","","MTB Lock Status",null,null],[6,"AUTHSTATUS","","MTB Authentication Status",null,null],[6,"DEVARCH","","MTB Device Architecture",null,null],[6,"DEVID","","MTB Device Configuration",null,null],[6,"DEVTYPE","","MTB Device Type",null,null],[6,"PID4","","CoreSight",null,null],[6,"PID5","","CoreSight",null,null],[6,"PID6","","CoreSight",null,null],[6,"PID7","","CoreSight",null,null],[6,"PID0","","CoreSight",null,null],[6,"PID1","","CoreSight",null,null],[6,"PID2","","CoreSight",null,null],[6,"PID3","","CoreSight",null,null],[6,"CID0","","CoreSight",null,null],[6,"CID1","","CoreSight",null,null],[6,"CID2","","CoreSight",null,null],[6,"CID3","","CoreSight",null,null],[0,"nvmctrl","atsamd11c","Non-Volatile Memory Controller",null,null],[3,"RegisterBlock","atsamd11c::nvmctrl","Register block",null,null],[12,"ctrla","","0x00 - Control A",630,null],[12,"ctrlb","","0x04 - Control B",630,null],[12,"param","","0x08 - NVM Parameter",630,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",630,null],[12,"intenset","","0x10 - Interrupt Enable Set",630,null],[12,"intflag","","0x14 - Interrupt Flag Status and Clear",630,null],[12,"status","","0x18 - Status",630,null],[12,"addr","","0x1c - Address",630,null],[12,"lock","","0x20 - Lock Section",630,null],[0,"ctrla","","Control A",null,null],[3,"CMD_W","atsamd11c::nvmctrl::ctrla","Write proxy for field `CMD`",null,null],[3,"CMDEX_W","","Write proxy for field `CMDEX`",null,null],[4,"CMD_A","","Command",null,null],[13,"ER","","2: Erase Row - Erases the row addressed by the ADDR…",631,null],[13,"WP","","4: Write Page - Writes the contents of the page buffer to…",631,null],[13,"EAR","","5: Erase Auxiliary Row - Erases the auxiliary row…",631,null],[13,"WAP","","6: Write Auxiliary Page - Writes the contents of the page…",631,null],[13,"SF","","10: Security Flow Command",631,null],[13,"WL","","15: Write lockbits",631,null],[13,"LR","","64: Lock Region - Locks the region containing the address…",631,null],[13,"UR","","65: Unlock Region - Unlocks the region containing the…",631,null],[13,"SPRM","","66: Sets the power reduction mode.",631,null],[13,"CPRM","","67: Clears the power reduction mode.",631,null],[13,"PBC","","68: Page Buffer Clear - Clears the page buffer.",631,null],[13,"SSB","","69: Set Security Bit - Sets the security bit by writing…",631,null],[13,"INVALL","","70: Invalidates all cache lines.",631,null],[4,"CMDEX_A","","Command Execution",null,null],[13,"KEY","","165: Execution Key",632,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[6,"CMDEX_R","","Reader of field `CMDEX`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_er","","Checks if the value of the field is `ER`",6,[[]]],[11,"is_wp","","Checks if the value of the field is `WP`",6,[[]]],[11,"is_ear","","Checks if the value of the field is `EAR`",6,[[]]],[11,"is_wap","","Checks if the value of the field is `WAP`",6,[[]]],[11,"is_sf","","Checks if the value of the field is `SF`",6,[[]]],[11,"is_wl","","Checks if the value of the field is `WL`",6,[[]]],[11,"is_lr","","Checks if the value of the field is `LR`",6,[[]]],[11,"is_ur","","Checks if the value of the field is `UR`",6,[[]]],[11,"is_sprm","","Checks if the value of the field is `SPRM`",6,[[]]],[11,"is_cprm","","Checks if the value of the field is `CPRM`",6,[[]]],[11,"is_pbc","","Checks if the value of the field is `PBC`",6,[[]]],[11,"is_ssb","","Checks if the value of the field is `SSB`",6,[[]]],[11,"is_invall","","Checks if the value of the field is `INVALL`",6,[[]]],[11,"variant","atsamd11c::nvmctrl::ctrla","Get enumerated values variant",633,[[],[["cmd_a",4],["variant",4]]]],[11,"is_er","","Checks if the value of the field is `ER`",633,[[]]],[11,"is_wp","","Checks if the value of the field is `WP`",633,[[]]],[11,"is_ear","","Checks if the value of the field is `EAR`",633,[[]]],[11,"is_wap","","Checks if the value of the field is `WAP`",633,[[]]],[11,"is_sf","","Checks if the value of the field is `SF`",633,[[]]],[11,"is_wl","","Checks if the value of the field is `WL`",633,[[]]],[11,"is_lr","","Checks if the value of the field is `LR`",633,[[]]],[11,"is_ur","","Checks if the value of the field is `UR`",633,[[]]],[11,"is_sprm","","Checks if the value of the field is `SPRM`",633,[[]]],[11,"is_cprm","","Checks if the value of the field is `CPRM`",633,[[]]],[11,"is_pbc","","Checks if the value of the field is `PBC`",633,[[]]],[11,"is_ssb","","Checks if the value of the field is `SSB`",633,[[]]],[11,"is_invall","","Checks if the value of the field is `INVALL`",633,[[]]],[11,"variant","","Writes `variant` to the field",634,[[["cmd_a",4]],["w",6]]],[11,"er","","Erase Row - Erases the row addressed by the ADDR register.",634,[[],["w",6]]],[11,"wp","","Write Page - Writes the contents of the page buffer to the…",634,[[],["w",6]]],[11,"ear","","Erase Auxiliary Row - Erases the auxiliary row addressed…",634,[[],["w",6]]],[11,"wap","","Write Auxiliary Page - Writes the contents of the page…",634,[[],["w",6]]],[11,"sf","","Security Flow Command",634,[[],["w",6]]],[11,"wl","","Write lockbits",634,[[],["w",6]]],[11,"lr","","Lock Region - Locks the region containing the address…",634,[[],["w",6]]],[11,"ur","","Unlock Region - Unlocks the region containing the address…",634,[[],["w",6]]],[11,"sprm","","Sets the power reduction mode.",634,[[],["w",6]]],[11,"cprm","","Clears the power reduction mode.",634,[[],["w",6]]],[11,"pbc","","Page Buffer Clear - Clears the page buffer.",634,[[],["w",6]]],[11,"ssb","","Set Security Bit - Sets the security bit by writing 0x00…",634,[[],["w",6]]],[11,"invall","","Invalidates all cache lines.",634,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",634,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["cmdex_a",4],["variant",4]]]],[11,"is_key","","Checks if the value of the field is `KEY`",6,[[]]],[11,"variant","atsamd11c::nvmctrl::ctrla","Get enumerated values variant",635,[[],[["cmdex_a",4],["variant",4]]]],[11,"is_key","","Checks if the value of the field is `KEY`",635,[[]]],[11,"variant","","Writes `variant` to the field",636,[[["cmdex_a",4]],["w",6]]],[11,"key","","Execution Key",636,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",636,[[],["w",6]]],[11,"cmd","atsamd11c::generic","Bits 0:6 - Command",6,[[],["cmd_r",6]]],[11,"cmdex","","Bits 8:15 - Command Execution",6,[[],["cmdex_r",6]]],[11,"cmd","atsamd11c::nvmctrl::ctrla","Bits 0:6 - Command",637,[[],["cmd_r",6]]],[11,"cmdex","","Bits 8:15 - Command Execution",637,[[],["cmdex_r",6]]],[11,"cmd","atsamd11c::generic","Bits 0:6 - Command",7,[[],["cmd_w",3]]],[11,"cmdex","","Bits 8:15 - Command Execution",7,[[],["cmdex_w",3]]],[11,"cmd","atsamd11c::nvmctrl::ctrla","Bits 0:6 - Command",638,[[],["cmd_w",3]]],[11,"cmdex","","Bits 8:15 - Command Execution",638,[[],["cmdex_w",3]]],[0,"ctrlb","atsamd11c::nvmctrl","Control B",null,null],[3,"RWS_W","atsamd11c::nvmctrl::ctrlb","Write proxy for field `RWS`",null,null],[3,"MANW_W","","Write proxy for field `MANW`",null,null],[3,"SLEEPPRM_W","","Write proxy for field `SLEEPPRM`",null,null],[3,"READMODE_W","","Write proxy for field `READMODE`",null,null],[3,"CACHEDIS_W","","Write proxy for field `CACHEDIS`",null,null],[4,"RWS_A","","NVM Read Wait States",null,null],[13,"SINGLE","","0: Single Auto Wait State",639,null],[13,"HALF","","1: Half Auto Wait State",639,null],[13,"DUAL","","2: Dual Auto Wait State",639,null],[4,"SLEEPPRM_A","","Power Reduction Mode during Sleep",null,null],[13,"WAKEONACCESS","","0: NVM block enters low-power mode when entering sleep.NVM…",640,null],[13,"WAKEUPINSTANT","","1: NVM block enters low-power mode when entering sleep.NVM…",640,null],[13,"DISABLED","","3: Auto power reduction disabled.",640,null],[4,"READMODE_A","","NVMCTRL Read Mode",null,null],[13,"NO_MISS_PENALTY","","0: The NVM Controller (cache system) does not insert wait…",641,null],[13,"LOW_POWER","","1: Reduces power consumption of the cache system, but…",641,null],[13,"DETERMINISTIC","","2: The cache system ensures that a cache hit or miss takes…",641,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"RWS_R","","Reader of field `RWS`",null,null],[6,"MANW_R","","Reader of field `MANW`",null,null],[6,"SLEEPPRM_R","","Reader of field `SLEEPPRM`",null,null],[6,"READMODE_R","","Reader of field `READMODE`",null,null],[6,"CACHEDIS_R","","Reader of field `CACHEDIS`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["rws_a",4],["variant",4]]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_half","","Checks if the value of the field is `HALF`",6,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",6,[[]]],[11,"variant","atsamd11c::nvmctrl::ctrlb","Get enumerated values variant",642,[[],[["rws_a",4],["variant",4]]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",642,[[]]],[11,"is_half","","Checks if the value of the field is `HALF`",642,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",642,[[]]],[11,"variant","","Writes `variant` to the field",643,[[["rws_a",4]],["w",6]]],[11,"single","","Single Auto Wait State",643,[[],["w",6]]],[11,"half","","Half Auto Wait State",643,[[],["w",6]]],[11,"dual","","Dual Auto Wait State",643,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",643,[[],["w",6]]],[11,"set_bit","","Sets the field bit",644,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",644,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",644,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["sleepprm_a",4]]]],[11,"is_wakeonaccess","","Checks if the value of the field is `WAKEONACCESS`",6,[[]]],[11,"is_wakeupinstant","","Checks if the value of the field is `WAKEUPINSTANT`",6,[[]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",6,[[]]],[11,"variant","atsamd11c::nvmctrl::ctrlb","Get enumerated values variant",645,[[],[["variant",4],["sleepprm_a",4]]]],[11,"is_wakeonaccess","","Checks if the value of the field is `WAKEONACCESS`",645,[[]]],[11,"is_wakeupinstant","","Checks if the value of the field is `WAKEUPINSTANT`",645,[[]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",645,[[]]],[11,"variant","","Writes `variant` to the field",646,[[["sleepprm_a",4]],["w",6]]],[11,"wakeonaccess","","NVM block enters low-power mode when entering sleep.NVM…",646,[[],["w",6]]],[11,"wakeupinstant","","NVM block enters low-power mode when entering sleep.NVM…",646,[[],["w",6]]],[11,"disabled","","Auto power reduction disabled.",646,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",646,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["readmode_a",4]]]],[11,"is_no_miss_penalty","","Checks if the value of the field is `NO_MISS_PENALTY`",6,[[]]],[11,"is_low_power","","Checks if the value of the field is `LOW_POWER`",6,[[]]],[11,"is_deterministic","","Checks if the value of the field is `DETERMINISTIC`",6,[[]]],[11,"variant","atsamd11c::nvmctrl::ctrlb","Get enumerated values variant",647,[[],[["variant",4],["readmode_a",4]]]],[11,"is_no_miss_penalty","","Checks if the value of the field is `NO_MISS_PENALTY`",647,[[]]],[11,"is_low_power","","Checks if the value of the field is `LOW_POWER`",647,[[]]],[11,"is_deterministic","","Checks if the value of the field is `DETERMINISTIC`",647,[[]]],[11,"variant","","Writes `variant` to the field",648,[[["readmode_a",4]],["w",6]]],[11,"no_miss_penalty","","The NVM Controller (cache system) does not insert wait…",648,[[],["w",6]]],[11,"low_power","","Reduces power consumption of the cache system, but inserts…",648,[[],["w",6]]],[11,"deterministic","","The cache system ensures that a cache hit or miss takes…",648,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",649,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",649,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",649,[[],["w",6]]],[11,"rws","atsamd11c::generic","Bits 1:4 - NVM Read Wait States",6,[[],["rws_r",6]]],[11,"manw","","Bit 7 - Manual Write",6,[[],["manw_r",6]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",6,[[],["sleepprm_r",6]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",6,[[],["readmode_r",6]]],[11,"cachedis","","Bit 18 - Cache Disable",6,[[],["cachedis_r",6]]],[11,"rws","atsamd11c::nvmctrl::ctrlb","Bits 1:4 - NVM Read Wait States",650,[[],["rws_r",6]]],[11,"manw","","Bit 7 - Manual Write",650,[[],["manw_r",6]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",650,[[],["sleepprm_r",6]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",650,[[],["readmode_r",6]]],[11,"cachedis","","Bit 18 - Cache Disable",650,[[],["cachedis_r",6]]],[11,"rws","atsamd11c::generic","Bits 1:4 - NVM Read Wait States",7,[[],["rws_w",3]]],[11,"manw","","Bit 7 - Manual Write",7,[[],["manw_w",3]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",7,[[],["sleepprm_w",3]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",7,[[],["readmode_w",3]]],[11,"cachedis","","Bit 18 - Cache Disable",7,[[],["cachedis_w",3]]],[11,"rws","atsamd11c::nvmctrl::ctrlb","Bits 1:4 - NVM Read Wait States",651,[[],["rws_w",3]]],[11,"manw","","Bit 7 - Manual Write",651,[[],["manw_w",3]]],[11,"sleepprm","","Bits 8:9 - Power Reduction Mode during Sleep",651,[[],["sleepprm_w",3]]],[11,"readmode","","Bits 16:17 - NVMCTRL Read Mode",651,[[],["readmode_w",3]]],[11,"cachedis","","Bit 18 - Cache Disable",651,[[],["cachedis_w",3]]],[0,"param","atsamd11c::nvmctrl","NVM Parameter",null,null],[4,"PSZ_A","atsamd11c::nvmctrl::param","Page Size",null,null],[13,"_8","","0: 8 bytes",652,null],[13,"_16","","1: 16 bytes",652,null],[13,"_32","","2: 32 bytes",652,null],[13,"_64","","3: 64 bytes",652,null],[13,"_128","","4: 128 bytes",652,null],[13,"_256","","5: 256 bytes",652,null],[13,"_512","","6: 512 bytes",652,null],[13,"_1024","","7: 1024 bytes",652,null],[6,"R","","Reader of register PARAM",null,null],[6,"NVMP_R","","Reader of field `NVMP`",null,null],[6,"PSZ_R","","Reader of field `PSZ`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["psz_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"variant","atsamd11c::nvmctrl::param","Get enumerated values variant",653,[[],["psz_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",653,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",653,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",653,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",653,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",653,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",653,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",653,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",653,[[]]],[11,"nvmp","atsamd11c::generic","Bits 0:15 - NVM Pages",6,[[],["nvmp_r",6]]],[11,"psz","","Bits 16:18 - Page Size",6,[[],["psz_r",6]]],[11,"nvmp","atsamd11c::nvmctrl::param","Bits 0:15 - NVM Pages",654,[[],["nvmp_r",6]]],[11,"psz","","Bits 16:18 - Page Size",654,[[],["psz_r",6]]],[0,"intenclr","atsamd11c::nvmctrl","Interrupt Enable Clear",null,null],[3,"READY_W","atsamd11c::nvmctrl::intenclr","Write proxy for field `READY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",655,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",655,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",655,[[],["w",6]]],[11,"set_bit","","Sets the field bit",656,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",656,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",656,[[],["w",6]]],[11,"ready","atsamd11c::generic","Bit 0 - NVM Ready Interrupt Enable",6,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",6,[[],["error_r",6]]],[11,"ready","atsamd11c::nvmctrl::intenclr","Bit 0 - NVM Ready Interrupt Enable",657,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",657,[[],["error_r",6]]],[11,"ready","atsamd11c::generic","Bit 0 - NVM Ready Interrupt Enable",7,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",7,[[],["error_w",3]]],[11,"ready","atsamd11c::nvmctrl::intenclr","Bit 0 - NVM Ready Interrupt Enable",658,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",658,[[],["error_w",3]]],[0,"intenset","atsamd11c::nvmctrl","Interrupt Enable Set",null,null],[3,"READY_W","atsamd11c::nvmctrl::intenset","Write proxy for field `READY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",659,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",659,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",659,[[],["w",6]]],[11,"set_bit","","Sets the field bit",660,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",660,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",660,[[],["w",6]]],[11,"ready","atsamd11c::generic","Bit 0 - NVM Ready Interrupt Enable",6,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",6,[[],["error_r",6]]],[11,"ready","atsamd11c::nvmctrl::intenset","Bit 0 - NVM Ready Interrupt Enable",661,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error Interrupt Enable",661,[[],["error_r",6]]],[11,"ready","atsamd11c::generic","Bit 0 - NVM Ready Interrupt Enable",7,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",7,[[],["error_w",3]]],[11,"ready","atsamd11c::nvmctrl::intenset","Bit 0 - NVM Ready Interrupt Enable",662,[[],["ready_w",3]]],[11,"error","","Bit 1 - Error Interrupt Enable",662,[[],["error_w",3]]],[0,"intflag","atsamd11c::nvmctrl","Interrupt Flag Status and Clear",null,null],[3,"ERROR_W","atsamd11c::nvmctrl::intflag","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",663,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",663,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",663,[[],["w",6]]],[11,"ready","atsamd11c::generic","Bit 0 - NVM Ready",6,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error",6,[[],["error_r",6]]],[11,"ready","atsamd11c::nvmctrl::intflag","Bit 0 - NVM Ready",664,[[],["ready_r",6]]],[11,"error","","Bit 1 - Error",664,[[],["error_r",6]]],[11,"error","atsamd11c::generic","Bit 1 - Error",7,[[],["error_w",3]]],[11,"error","atsamd11c::nvmctrl::intflag","Bit 1 - Error",665,[[],["error_w",3]]],[0,"status","atsamd11c::nvmctrl","Status",null,null],[3,"LOAD_W","atsamd11c::nvmctrl::status","Write proxy for field `LOAD`",null,null],[3,"PROGE_W","","Write proxy for field `PROGE`",null,null],[3,"LOCKE_W","","Write proxy for field `LOCKE`",null,null],[3,"NVME_W","","Write proxy for field `NVME`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"PRM_R","","Reader of field `PRM`",null,null],[6,"LOAD_R","","Reader of field `LOAD`",null,null],[6,"PROGE_R","","Reader of field `PROGE`",null,null],[6,"LOCKE_R","","Reader of field `LOCKE`",null,null],[6,"NVME_R","","Reader of field `NVME`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[11,"set_bit","","Sets the field bit",666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",666,[[],["w",6]]],[11,"set_bit","","Sets the field bit",667,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",667,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",667,[[],["w",6]]],[11,"set_bit","","Sets the field bit",668,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",668,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",668,[[],["w",6]]],[11,"set_bit","","Sets the field bit",669,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",669,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",669,[[],["w",6]]],[11,"prm","atsamd11c::generic","Bit 0 - Power Reduction Mode",6,[[],["prm_r",6]]],[11,"load","","Bit 1 - NVM Page Buffer Active Loading",6,[[],["load_r",6]]],[11,"proge","","Bit 2 - Programming Error Status",6,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Status",6,[[],["locke_r",6]]],[11,"nvme","","Bit 4 - NVM Error",6,[[],["nvme_r",6]]],[11,"sb","","Bit 8 - Security Bit Status",6,[[],["sb_r",6]]],[11,"prm","atsamd11c::nvmctrl::status","Bit 0 - Power Reduction Mode",670,[[],["prm_r",6]]],[11,"load","","Bit 1 - NVM Page Buffer Active Loading",670,[[],["load_r",6]]],[11,"proge","","Bit 2 - Programming Error Status",670,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Status",670,[[],["locke_r",6]]],[11,"nvme","","Bit 4 - NVM Error",670,[[],["nvme_r",6]]],[11,"sb","","Bit 8 - Security Bit Status",670,[[],["sb_r",6]]],[11,"load","atsamd11c::generic","Bit 1 - NVM Page Buffer Active Loading",7,[[],["load_w",3]]],[11,"proge","","Bit 2 - Programming Error Status",7,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Status",7,[[],["locke_w",3]]],[11,"nvme","","Bit 4 - NVM Error",7,[[],["nvme_w",3]]],[11,"load","atsamd11c::nvmctrl::status","Bit 1 - NVM Page Buffer Active Loading",671,[[],["load_w",3]]],[11,"proge","","Bit 2 - Programming Error Status",671,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Status",671,[[],["locke_w",3]]],[11,"nvme","","Bit 4 - NVM Error",671,[[],["nvme_w",3]]],[0,"addr","atsamd11c::nvmctrl","Address",null,null],[3,"ADDR_W","atsamd11c::nvmctrl::addr","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",672,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:21 - NVM Address",6,[[],["addr_r",6]]],[11,"addr","atsamd11c::nvmctrl::addr","Bits 0:21 - NVM Address",673,[[],["addr_r",6]]],[11,"addr","atsamd11c::generic","Bits 0:21 - NVM Address",7,[[],["addr_w",3]]],[11,"addr","atsamd11c::nvmctrl::addr","Bits 0:21 - NVM Address",674,[[],["addr_w",3]]],[0,"lock","atsamd11c::nvmctrl","Lock Section",null,null],[6,"R","atsamd11c::nvmctrl::lock","Reader of register LOCK",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[11,"lock","atsamd11c::generic","Bits 0:15 - Region Lock Bits",6,[[],["lock_r",6]]],[11,"lock","atsamd11c::nvmctrl::lock","Bits 0:15 - Region Lock Bits",675,[[],["lock_r",6]]],[6,"CTRLA","atsamd11c::nvmctrl","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"PARAM","","NVM Parameter",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"ADDR","","Address",null,null],[6,"LOCK","","Lock Section",null,null],[0,"pac0","atsamd11c","Peripheral Access Controller 0",null,null],[3,"RegisterBlock","atsamd11c::pac0","Register block",null,null],[12,"wpclr","","0x00 - Write Protection Clear",676,null],[12,"wpset","","0x04 - Write Protection Set",676,null],[0,"wpclr","","Write Protection Clear",null,null],[3,"WP_W","atsamd11c::pac0::wpclr","Write proxy for field `WP`",null,null],[6,"R","","Reader of register WPCLR",null,null],[6,"W","","Writer for register WPCLR",null,null],[6,"WP_R","","Reader of field `WP`",null,null],[11,"bits","","Writes raw bits to the field",677,[[],["w",6]]],[11,"wp","atsamd11c::generic","Bits 1:31 - Write Protection Clear",6,[[],["wp_r",6]]],[11,"wp","atsamd11c::pac0::wpclr","Bits 1:31 - Write Protection Clear",678,[[],["wp_r",6]]],[11,"wp","atsamd11c::generic","Bits 1:31 - Write Protection Clear",7,[[],["wp_w",3]]],[11,"wp","atsamd11c::pac0::wpclr","Bits 1:31 - Write Protection Clear",679,[[],["wp_w",3]]],[0,"wpset","atsamd11c::pac0","Write Protection Set",null,null],[3,"WP_W","atsamd11c::pac0::wpset","Write proxy for field `WP`",null,null],[6,"R","","Reader of register WPSET",null,null],[6,"W","","Writer for register WPSET",null,null],[6,"WP_R","","Reader of field `WP`",null,null],[11,"bits","","Writes raw bits to the field",680,[[],["w",6]]],[11,"wp","atsamd11c::generic","Bits 1:31 - Write Protection Set",6,[[],["wp_r",6]]],[11,"wp","atsamd11c::pac0::wpset","Bits 1:31 - Write Protection Set",681,[[],["wp_r",6]]],[11,"wp","atsamd11c::generic","Bits 1:31 - Write Protection Set",7,[[],["wp_w",3]]],[11,"wp","atsamd11c::pac0::wpset","Bits 1:31 - Write Protection Set",682,[[],["wp_w",3]]],[6,"WPCLR","atsamd11c::pac0","Write Protection Clear",null,null],[6,"WPSET","","Write Protection Set",null,null],[0,"pm","atsamd11c","Power Manager",null,null],[3,"RegisterBlock","atsamd11c::pm","Register block",null,null],[12,"ctrl","","0x00 - Control",683,null],[12,"sleep","","0x01 - Sleep Mode",683,null],[12,"extctrl","","0x02 - External Reset Controller",683,null],[12,"cpusel","","0x08 - CPU Clock Select",683,null],[12,"apbasel","","0x09 - APBA Clock Select",683,null],[12,"apbbsel","","0x0a - APBB Clock Select",683,null],[12,"apbcsel","","0x0b - APBC Clock Select",683,null],[12,"ahbmask","","0x14 - AHB Mask",683,null],[12,"apbamask","","0x18 - APBA Mask",683,null],[12,"apbbmask","","0x1c - APBB Mask",683,null],[12,"apbcmask","","0x20 - APBC Mask",683,null],[12,"intenclr","","0x34 - Interrupt Enable Clear",683,null],[12,"intenset","","0x35 - Interrupt Enable Set",683,null],[12,"intflag","","0x36 - Interrupt Flag Status and Clear",683,null],[12,"rcause","","0x38 - Reset Cause",683,null],[0,"ctrl","","Control",null,null],[3,"CFDEN_W","atsamd11c::pm::ctrl","Write proxy for field `CFDEN`",null,null],[3,"BKUPCLK_W","","Write proxy for field `BKUPCLK`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"CFDEN_R","","Reader of field `CFDEN`",null,null],[6,"BKUPCLK_R","","Reader of field `BKUPCLK`",null,null],[11,"set_bit","","Sets the field bit",684,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",684,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",684,[[],["w",6]]],[11,"set_bit","","Sets the field bit",685,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",685,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",685,[[],["w",6]]],[11,"cfden","atsamd11c::generic","Bit 2 - Clock Failure Detector Enable",6,[[],["cfden_r",6]]],[11,"bkupclk","","Bit 4 - Backup Clock Select",6,[[],["bkupclk_r",6]]],[11,"cfden","atsamd11c::pm::ctrl","Bit 2 - Clock Failure Detector Enable",686,[[],["cfden_r",6]]],[11,"bkupclk","","Bit 4 - Backup Clock Select",686,[[],["bkupclk_r",6]]],[11,"cfden","atsamd11c::generic","Bit 2 - Clock Failure Detector Enable",7,[[],["cfden_w",3]]],[11,"bkupclk","","Bit 4 - Backup Clock Select",7,[[],["bkupclk_w",3]]],[11,"cfden","atsamd11c::pm::ctrl","Bit 2 - Clock Failure Detector Enable",687,[[],["cfden_w",3]]],[11,"bkupclk","","Bit 4 - Backup Clock Select",687,[[],["bkupclk_w",3]]],[0,"sleep","atsamd11c::pm","Sleep Mode",null,null],[3,"IDLE_W","atsamd11c::pm::sleep","Write proxy for field `IDLE`",null,null],[4,"IDLE_A","","Idle Mode Configuration",null,null],[13,"CPU","","0: The CPU clock domain is stopped",688,null],[13,"AHB","","1: The CPU and AHB clock domains are stopped",688,null],[13,"APB","","2: The CPU, AHB and APB clock domains are stopped",688,null],[6,"R","","Reader of register SLEEP",null,null],[6,"W","","Writer for register SLEEP",null,null],[6,"IDLE_R","","Reader of field `IDLE`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["idle_a",4]]]],[11,"is_cpu","","Checks if the value of the field is `CPU`",6,[[]]],[11,"is_ahb","","Checks if the value of the field is `AHB`",6,[[]]],[11,"is_apb","","Checks if the value of the field is `APB`",6,[[]]],[11,"variant","atsamd11c::pm::sleep","Get enumerated values variant",689,[[],[["variant",4],["idle_a",4]]]],[11,"is_cpu","","Checks if the value of the field is `CPU`",689,[[]]],[11,"is_ahb","","Checks if the value of the field is `AHB`",689,[[]]],[11,"is_apb","","Checks if the value of the field is `APB`",689,[[]]],[11,"variant","","Writes `variant` to the field",690,[[["idle_a",4]],["w",6]]],[11,"cpu","","The CPU clock domain is stopped",690,[[],["w",6]]],[11,"ahb","","The CPU and AHB clock domains are stopped",690,[[],["w",6]]],[11,"apb","","The CPU, AHB and APB clock domains are stopped",690,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",690,[[],["w",6]]],[11,"idle","atsamd11c::generic","Bits 0:1 - Idle Mode Configuration",6,[[],["idle_r",6]]],[11,"idle","atsamd11c::pm::sleep","Bits 0:1 - Idle Mode Configuration",691,[[],["idle_r",6]]],[11,"idle","atsamd11c::generic","Bits 0:1 - Idle Mode Configuration",7,[[],["idle_w",3]]],[11,"idle","atsamd11c::pm::sleep","Bits 0:1 - Idle Mode Configuration",692,[[],["idle_w",3]]],[0,"extctrl","atsamd11c::pm","External Reset Controller",null,null],[3,"SETDIS_W","atsamd11c::pm::extctrl","Write proxy for field `SETDIS`",null,null],[6,"R","","Reader of register EXTCTRL",null,null],[6,"W","","Writer for register EXTCTRL",null,null],[6,"SETDIS_R","","Reader of field `SETDIS`",null,null],[11,"set_bit","","Sets the field bit",693,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",693,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",693,[[],["w",6]]],[11,"setdis","atsamd11c::generic","Bit 0 - External Reset Disable",6,[[],["setdis_r",6]]],[11,"setdis","atsamd11c::pm::extctrl","Bit 0 - External Reset Disable",694,[[],["setdis_r",6]]],[11,"setdis","atsamd11c::generic","Bit 0 - External Reset Disable",7,[[],["setdis_w",3]]],[11,"setdis","atsamd11c::pm::extctrl","Bit 0 - External Reset Disable",695,[[],["setdis_w",3]]],[0,"cpusel","atsamd11c::pm","CPU Clock Select",null,null],[3,"CPUDIV_W","atsamd11c::pm::cpusel","Write proxy for field `CPUDIV`",null,null],[4,"CPUDIV_A","","CPU Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",696,null],[13,"DIV2","","1: Divide by 2",696,null],[13,"DIV4","","2: Divide by 4",696,null],[13,"DIV8","","3: Divide by 8",696,null],[13,"DIV16","","4: Divide by 16",696,null],[13,"DIV32","","5: Divide by 32",696,null],[13,"DIV64","","6: Divide by 64",696,null],[13,"DIV128","","7: Divide by 128",696,null],[6,"R","","Reader of register CPUSEL",null,null],[6,"W","","Writer for register CPUSEL",null,null],[6,"CPUDIV_R","","Reader of field `CPUDIV`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["cpudiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd11c::pm::cpusel","Get enumerated values variant",697,[[],["cpudiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",697,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",697,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",697,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",697,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",697,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",697,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",697,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",697,[[]]],[11,"variant","","Writes `variant` to the field",698,[[["cpudiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",698,[[],["w",6]]],[11,"div2","","Divide by 2",698,[[],["w",6]]],[11,"div4","","Divide by 4",698,[[],["w",6]]],[11,"div8","","Divide by 8",698,[[],["w",6]]],[11,"div16","","Divide by 16",698,[[],["w",6]]],[11,"div32","","Divide by 32",698,[[],["w",6]]],[11,"div64","","Divide by 64",698,[[],["w",6]]],[11,"div128","","Divide by 128",698,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",698,[[],["w",6]]],[11,"cpudiv","atsamd11c::generic","Bits 0:2 - CPU Prescaler Selection",6,[[],["cpudiv_r",6]]],[11,"cpudiv","atsamd11c::pm::cpusel","Bits 0:2 - CPU Prescaler Selection",699,[[],["cpudiv_r",6]]],[11,"cpudiv","atsamd11c::generic","Bits 0:2 - CPU Prescaler Selection",7,[[],["cpudiv_w",3]]],[11,"cpudiv","atsamd11c::pm::cpusel","Bits 0:2 - CPU Prescaler Selection",700,[[],["cpudiv_w",3]]],[0,"apbasel","atsamd11c::pm","APBA Clock Select",null,null],[3,"APBADIV_W","atsamd11c::pm::apbasel","Write proxy for field `APBADIV`",null,null],[4,"APBADIV_A","","APBA Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",701,null],[13,"DIV2","","1: Divide by 2",701,null],[13,"DIV4","","2: Divide by 4",701,null],[13,"DIV8","","3: Divide by 8",701,null],[13,"DIV16","","4: Divide by 16",701,null],[13,"DIV32","","5: Divide by 32",701,null],[13,"DIV64","","6: Divide by 64",701,null],[13,"DIV128","","7: Divide by 128",701,null],[6,"R","","Reader of register APBASEL",null,null],[6,"W","","Writer for register APBASEL",null,null],[6,"APBADIV_R","","Reader of field `APBADIV`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["apbadiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd11c::pm::apbasel","Get enumerated values variant",702,[[],["apbadiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",702,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",702,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",702,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",702,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",702,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",702,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",702,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",702,[[]]],[11,"variant","","Writes `variant` to the field",703,[[["apbadiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",703,[[],["w",6]]],[11,"div2","","Divide by 2",703,[[],["w",6]]],[11,"div4","","Divide by 4",703,[[],["w",6]]],[11,"div8","","Divide by 8",703,[[],["w",6]]],[11,"div16","","Divide by 16",703,[[],["w",6]]],[11,"div32","","Divide by 32",703,[[],["w",6]]],[11,"div64","","Divide by 64",703,[[],["w",6]]],[11,"div128","","Divide by 128",703,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",703,[[],["w",6]]],[11,"apbadiv","atsamd11c::generic","Bits 0:2 - APBA Prescaler Selection",6,[[],["apbadiv_r",6]]],[11,"apbadiv","atsamd11c::pm::apbasel","Bits 0:2 - APBA Prescaler Selection",704,[[],["apbadiv_r",6]]],[11,"apbadiv","atsamd11c::generic","Bits 0:2 - APBA Prescaler Selection",7,[[],["apbadiv_w",3]]],[11,"apbadiv","atsamd11c::pm::apbasel","Bits 0:2 - APBA Prescaler Selection",705,[[],["apbadiv_w",3]]],[0,"apbbsel","atsamd11c::pm","APBB Clock Select",null,null],[3,"APBBDIV_W","atsamd11c::pm::apbbsel","Write proxy for field `APBBDIV`",null,null],[4,"APBBDIV_A","","APBB Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",706,null],[13,"DIV2","","1: Divide by 2",706,null],[13,"DIV4","","2: Divide by 4",706,null],[13,"DIV8","","3: Divide by 8",706,null],[13,"DIV16","","4: Divide by 16",706,null],[13,"DIV32","","5: Divide by 32",706,null],[13,"DIV64","","6: Divide by 64",706,null],[13,"DIV128","","7: Divide by 128",706,null],[6,"R","","Reader of register APBBSEL",null,null],[6,"W","","Writer for register APBBSEL",null,null],[6,"APBBDIV_R","","Reader of field `APBBDIV`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["apbbdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd11c::pm::apbbsel","Get enumerated values variant",707,[[],["apbbdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",707,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",707,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",707,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",707,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",707,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",707,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",707,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",707,[[]]],[11,"variant","","Writes `variant` to the field",708,[[["apbbdiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",708,[[],["w",6]]],[11,"div2","","Divide by 2",708,[[],["w",6]]],[11,"div4","","Divide by 4",708,[[],["w",6]]],[11,"div8","","Divide by 8",708,[[],["w",6]]],[11,"div16","","Divide by 16",708,[[],["w",6]]],[11,"div32","","Divide by 32",708,[[],["w",6]]],[11,"div64","","Divide by 64",708,[[],["w",6]]],[11,"div128","","Divide by 128",708,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",708,[[],["w",6]]],[11,"apbbdiv","atsamd11c::generic","Bits 0:2 - APBB Prescaler Selection",6,[[],["apbbdiv_r",6]]],[11,"apbbdiv","atsamd11c::pm::apbbsel","Bits 0:2 - APBB Prescaler Selection",709,[[],["apbbdiv_r",6]]],[11,"apbbdiv","atsamd11c::generic","Bits 0:2 - APBB Prescaler Selection",7,[[],["apbbdiv_w",3]]],[11,"apbbdiv","atsamd11c::pm::apbbsel","Bits 0:2 - APBB Prescaler Selection",710,[[],["apbbdiv_w",3]]],[0,"apbcsel","atsamd11c::pm","APBC Clock Select",null,null],[3,"APBCDIV_W","atsamd11c::pm::apbcsel","Write proxy for field `APBCDIV`",null,null],[4,"APBCDIV_A","","APBC Prescaler Selection",null,null],[13,"DIV1","","0: Divide by 1",711,null],[13,"DIV2","","1: Divide by 2",711,null],[13,"DIV4","","2: Divide by 4",711,null],[13,"DIV8","","3: Divide by 8",711,null],[13,"DIV16","","4: Divide by 16",711,null],[13,"DIV32","","5: Divide by 32",711,null],[13,"DIV64","","6: Divide by 64",711,null],[13,"DIV128","","7: Divide by 128",711,null],[6,"R","","Reader of register APBCSEL",null,null],[6,"W","","Writer for register APBCSEL",null,null],[6,"APBCDIV_R","","Reader of field `APBCDIV`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["apbcdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd11c::pm::apbcsel","Get enumerated values variant",712,[[],["apbcdiv_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",712,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",712,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",712,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",712,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",712,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",712,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",712,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",712,[[]]],[11,"variant","","Writes `variant` to the field",713,[[["apbcdiv_a",4]],["w",6]]],[11,"div1","","Divide by 1",713,[[],["w",6]]],[11,"div2","","Divide by 2",713,[[],["w",6]]],[11,"div4","","Divide by 4",713,[[],["w",6]]],[11,"div8","","Divide by 8",713,[[],["w",6]]],[11,"div16","","Divide by 16",713,[[],["w",6]]],[11,"div32","","Divide by 32",713,[[],["w",6]]],[11,"div64","","Divide by 64",713,[[],["w",6]]],[11,"div128","","Divide by 128",713,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",713,[[],["w",6]]],[11,"apbcdiv","atsamd11c::generic","Bits 0:2 - APBC Prescaler Selection",6,[[],["apbcdiv_r",6]]],[11,"apbcdiv","atsamd11c::pm::apbcsel","Bits 0:2 - APBC Prescaler Selection",714,[[],["apbcdiv_r",6]]],[11,"apbcdiv","atsamd11c::generic","Bits 0:2 - APBC Prescaler Selection",7,[[],["apbcdiv_w",3]]],[11,"apbcdiv","atsamd11c::pm::apbcsel","Bits 0:2 - APBC Prescaler Selection",715,[[],["apbcdiv_w",3]]],[0,"ahbmask","atsamd11c::pm","AHB Mask",null,null],[3,"HPB0__W","atsamd11c::pm::ahbmask","Write proxy for field `HPB0_`",null,null],[3,"HPB1__W","","Write proxy for field `HPB1_`",null,null],[3,"HPB2__W","","Write proxy for field `HPB2_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"DMAC__W","","Write proxy for field `DMAC_`",null,null],[3,"USB__W","","Write proxy for field `USB_`",null,null],[6,"R","","Reader of register AHBMASK",null,null],[6,"W","","Writer for register AHBMASK",null,null],[6,"HPB0__R","","Reader of field `HPB0_`",null,null],[6,"HPB1__R","","Reader of field `HPB1_`",null,null],[6,"HPB2__R","","Reader of field `HPB2_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[11,"set_bit","","Sets the field bit",716,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",716,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",716,[[],["w",6]]],[11,"set_bit","","Sets the field bit",717,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",717,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",717,[[],["w",6]]],[11,"set_bit","","Sets the field bit",718,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",718,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",718,[[],["w",6]]],[11,"set_bit","","Sets the field bit",719,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",719,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",719,[[],["w",6]]],[11,"set_bit","","Sets the field bit",720,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",720,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",720,[[],["w",6]]],[11,"set_bit","","Sets the field bit",721,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",721,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",721,[[],["w",6]]],[11,"set_bit","","Sets the field bit",722,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",722,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",722,[[],["w",6]]],[11,"hpb0_","atsamd11c::generic","Bit 0 - HPB0 AHB Clock Mask",6,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",6,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",6,[[],["hpb2__r",6]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",6,[[],["nvmctrl__r",6]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",6,[[],["dmac__r",6]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",6,[[],["usb__r",6]]],[11,"hpb0_","atsamd11c::pm::ahbmask","Bit 0 - HPB0 AHB Clock Mask",723,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",723,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",723,[[],["hpb2__r",6]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",723,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",723,[[],["nvmctrl__r",6]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",723,[[],["dmac__r",6]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",723,[[],["usb__r",6]]],[11,"hpb0_","atsamd11c::generic","Bit 0 - HPB0 AHB Clock Mask",7,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",7,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",7,[[],["hpb2__w",3]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",7,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",7,[[],["nvmctrl__w",3]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",7,[[],["dmac__w",3]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",7,[[],["usb__w",3]]],[11,"hpb0_","atsamd11c::pm::ahbmask","Bit 0 - HPB0 AHB Clock Mask",724,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",724,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",724,[[],["hpb2__w",3]]],[11,"dsu_","","Bit 3 - DSU AHB Clock Mask",724,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 4 - NVMCTRL AHB Clock Mask",724,[[],["nvmctrl__w",3]]],[11,"dmac_","","Bit 5 - DMAC AHB Clock Mask",724,[[],["dmac__w",3]]],[11,"usb_","","Bit 6 - USB AHB Clock Mask",724,[[],["usb__w",3]]],[0,"apbamask","atsamd11c::pm","APBA Mask",null,null],[3,"PAC0__W","atsamd11c::pm::apbamask","Write proxy for field `PAC0_`",null,null],[3,"PM__W","","Write proxy for field `PM_`",null,null],[3,"SYSCTRL__W","","Write proxy for field `SYSCTRL_`",null,null],[3,"GCLK__W","","Write proxy for field `GCLK_`",null,null],[3,"WDT__W","","Write proxy for field `WDT_`",null,null],[3,"RTC__W","","Write proxy for field `RTC_`",null,null],[3,"EIC__W","","Write proxy for field `EIC_`",null,null],[6,"R","","Reader of register APBAMASK",null,null],[6,"W","","Writer for register APBAMASK",null,null],[6,"PAC0__R","","Reader of field `PAC0_`",null,null],[6,"PM__R","","Reader of field `PM_`",null,null],[6,"SYSCTRL__R","","Reader of field `SYSCTRL_`",null,null],[6,"GCLK__R","","Reader of field `GCLK_`",null,null],[6,"WDT__R","","Reader of field `WDT_`",null,null],[6,"RTC__R","","Reader of field `RTC_`",null,null],[6,"EIC__R","","Reader of field `EIC_`",null,null],[11,"set_bit","","Sets the field bit",725,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",725,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",725,[[],["w",6]]],[11,"set_bit","","Sets the field bit",726,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",726,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",726,[[],["w",6]]],[11,"set_bit","","Sets the field bit",727,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",727,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",727,[[],["w",6]]],[11,"set_bit","","Sets the field bit",728,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",728,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",728,[[],["w",6]]],[11,"set_bit","","Sets the field bit",729,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",729,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",729,[[],["w",6]]],[11,"set_bit","","Sets the field bit",730,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",730,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",730,[[],["w",6]]],[11,"set_bit","","Sets the field bit",731,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",731,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",731,[[],["w",6]]],[11,"pac0_","atsamd11c::generic","Bit 0 - PAC0 APB Clock Enable",6,[[],["pac0__r",6]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",6,[[],["pm__r",6]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",6,[[],["sysctrl__r",6]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",6,[[],["gclk__r",6]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",6,[[],["wdt__r",6]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",6,[[],["rtc__r",6]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",6,[[],["eic__r",6]]],[11,"pac0_","atsamd11c::pm::apbamask","Bit 0 - PAC0 APB Clock Enable",732,[[],["pac0__r",6]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",732,[[],["pm__r",6]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",732,[[],["sysctrl__r",6]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",732,[[],["gclk__r",6]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",732,[[],["wdt__r",6]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",732,[[],["rtc__r",6]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",732,[[],["eic__r",6]]],[11,"pac0_","atsamd11c::generic","Bit 0 - PAC0 APB Clock Enable",7,[[],["pac0__w",3]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",7,[[],["pm__w",3]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",7,[[],["sysctrl__w",3]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",7,[[],["gclk__w",3]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",7,[[],["wdt__w",3]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",7,[[],["rtc__w",3]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",7,[[],["eic__w",3]]],[11,"pac0_","atsamd11c::pm::apbamask","Bit 0 - PAC0 APB Clock Enable",733,[[],["pac0__w",3]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",733,[[],["pm__w",3]]],[11,"sysctrl_","","Bit 2 - SYSCTRL APB Clock Enable",733,[[],["sysctrl__w",3]]],[11,"gclk_","","Bit 3 - GCLK APB Clock Enable",733,[[],["gclk__w",3]]],[11,"wdt_","","Bit 4 - WDT APB Clock Enable",733,[[],["wdt__w",3]]],[11,"rtc_","","Bit 5 - RTC APB Clock Enable",733,[[],["rtc__w",3]]],[11,"eic_","","Bit 6 - EIC APB Clock Enable",733,[[],["eic__w",3]]],[0,"apbbmask","atsamd11c::pm","APBB Mask",null,null],[3,"PAC1__W","atsamd11c::pm::apbbmask","Write proxy for field `PAC1_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"PORT__W","","Write proxy for field `PORT_`",null,null],[3,"DMAC__W","","Write proxy for field `DMAC_`",null,null],[3,"USB__W","","Write proxy for field `USB_`",null,null],[3,"HMATRIX__W","","Write proxy for field `HMATRIX_`",null,null],[6,"R","","Reader of register APBBMASK",null,null],[6,"W","","Writer for register APBBMASK",null,null],[6,"PAC1__R","","Reader of field `PAC1_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"PORT__R","","Reader of field `PORT_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[6,"HMATRIX__R","","Reader of field `HMATRIX_`",null,null],[11,"set_bit","","Sets the field bit",734,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",734,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",734,[[],["w",6]]],[11,"set_bit","","Sets the field bit",735,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",735,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",735,[[],["w",6]]],[11,"set_bit","","Sets the field bit",736,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",736,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",736,[[],["w",6]]],[11,"set_bit","","Sets the field bit",737,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",737,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",737,[[],["w",6]]],[11,"set_bit","","Sets the field bit",738,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",738,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",738,[[],["w",6]]],[11,"set_bit","","Sets the field bit",739,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",739,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",739,[[],["w",6]]],[11,"set_bit","","Sets the field bit",740,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",740,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",740,[[],["w",6]]],[11,"pac1_","atsamd11c::generic","Bit 0 - PAC1 APB Clock Enable",6,[[],["pac1__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",6,[[],["nvmctrl__r",6]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",6,[[],["port__r",6]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",6,[[],["dmac__r",6]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",6,[[],["usb__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",6,[[],["hmatrix__r",6]]],[11,"pac1_","atsamd11c::pm::apbbmask","Bit 0 - PAC1 APB Clock Enable",741,[[],["pac1__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",741,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",741,[[],["nvmctrl__r",6]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",741,[[],["port__r",6]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",741,[[],["dmac__r",6]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",741,[[],["usb__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",741,[[],["hmatrix__r",6]]],[11,"pac1_","atsamd11c::generic","Bit 0 - PAC1 APB Clock Enable",7,[[],["pac1__w",3]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",7,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",7,[[],["nvmctrl__w",3]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",7,[[],["port__w",3]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",7,[[],["dmac__w",3]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",7,[[],["usb__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",7,[[],["hmatrix__w",3]]],[11,"pac1_","atsamd11c::pm::apbbmask","Bit 0 - PAC1 APB Clock Enable",742,[[],["pac1__w",3]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",742,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",742,[[],["nvmctrl__w",3]]],[11,"port_","","Bit 3 - PORT APB Clock Enable",742,[[],["port__w",3]]],[11,"dmac_","","Bit 4 - DMAC APB Clock Enable",742,[[],["dmac__w",3]]],[11,"usb_","","Bit 5 - USB APB Clock Enable",742,[[],["usb__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",742,[[],["hmatrix__w",3]]],[0,"apbcmask","atsamd11c::pm","APBC Mask",null,null],[3,"PAC2__W","atsamd11c::pm::apbcmask","Write proxy for field `PAC2_`",null,null],[3,"EVSYS__W","","Write proxy for field `EVSYS_`",null,null],[3,"SERCOM0__W","","Write proxy for field `SERCOM0_`",null,null],[3,"SERCOM1__W","","Write proxy for field `SERCOM1_`",null,null],[3,"TCC0__W","","Write proxy for field `TCC0_`",null,null],[3,"TC1__W","","Write proxy for field `TC1_`",null,null],[3,"TC2__W","","Write proxy for field `TC2_`",null,null],[3,"ADC__W","","Write proxy for field `ADC_`",null,null],[3,"AC__W","","Write proxy for field `AC_`",null,null],[3,"DAC__W","","Write proxy for field `DAC_`",null,null],[3,"PTC__W","","Write proxy for field `PTC_`",null,null],[6,"R","","Reader of register APBCMASK",null,null],[6,"W","","Writer for register APBCMASK",null,null],[6,"PAC2__R","","Reader of field `PAC2_`",null,null],[6,"EVSYS__R","","Reader of field `EVSYS_`",null,null],[6,"SERCOM0__R","","Reader of field `SERCOM0_`",null,null],[6,"SERCOM1__R","","Reader of field `SERCOM1_`",null,null],[6,"TCC0__R","","Reader of field `TCC0_`",null,null],[6,"TC1__R","","Reader of field `TC1_`",null,null],[6,"TC2__R","","Reader of field `TC2_`",null,null],[6,"ADC__R","","Reader of field `ADC_`",null,null],[6,"AC__R","","Reader of field `AC_`",null,null],[6,"DAC__R","","Reader of field `DAC_`",null,null],[6,"PTC__R","","Reader of field `PTC_`",null,null],[11,"set_bit","","Sets the field bit",743,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",743,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",743,[[],["w",6]]],[11,"set_bit","","Sets the field bit",744,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",744,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",744,[[],["w",6]]],[11,"set_bit","","Sets the field bit",745,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",745,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",745,[[],["w",6]]],[11,"set_bit","","Sets the field bit",746,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",746,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",746,[[],["w",6]]],[11,"set_bit","","Sets the field bit",747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",748,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",748,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",748,[[],["w",6]]],[11,"set_bit","","Sets the field bit",749,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",749,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",749,[[],["w",6]]],[11,"set_bit","","Sets the field bit",750,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",750,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",750,[[],["w",6]]],[11,"set_bit","","Sets the field bit",751,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",751,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",751,[[],["w",6]]],[11,"set_bit","","Sets the field bit",752,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",752,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",752,[[],["w",6]]],[11,"set_bit","","Sets the field bit",753,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",753,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",753,[[],["w",6]]],[11,"pac2_","atsamd11c::generic","Bit 0 - PAC2 APB Clock Enable",6,[[],["pac2__r",6]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",6,[[],["evsys__r",6]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",6,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",6,[[],["sercom1__r",6]]],[11,"tcc0_","","Bit 5 - TCC0 APB Clock Enable",6,[[],["tcc0__r",6]]],[11,"tc1_","","Bit 6 - TC1 APB Clock Enable",6,[[],["tc1__r",6]]],[11,"tc2_","","Bit 7 - TC2 APB Clock Enable",6,[[],["tc2__r",6]]],[11,"adc_","","Bit 8 - ADC APB Clock Enable",6,[[],["adc__r",6]]],[11,"ac_","","Bit 9 - AC APB Clock Enable",6,[[],["ac__r",6]]],[11,"dac_","","Bit 10 - DAC APB Clock Enable",6,[[],["dac__r",6]]],[11,"ptc_","","Bit 11 - PTC APB Clock Enable",6,[[],["ptc__r",6]]],[11,"pac2_","atsamd11c::pm::apbcmask","Bit 0 - PAC2 APB Clock Enable",754,[[],["pac2__r",6]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",754,[[],["evsys__r",6]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",754,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",754,[[],["sercom1__r",6]]],[11,"tcc0_","","Bit 5 - TCC0 APB Clock Enable",754,[[],["tcc0__r",6]]],[11,"tc1_","","Bit 6 - TC1 APB Clock Enable",754,[[],["tc1__r",6]]],[11,"tc2_","","Bit 7 - TC2 APB Clock Enable",754,[[],["tc2__r",6]]],[11,"adc_","","Bit 8 - ADC APB Clock Enable",754,[[],["adc__r",6]]],[11,"ac_","","Bit 9 - AC APB Clock Enable",754,[[],["ac__r",6]]],[11,"dac_","","Bit 10 - DAC APB Clock Enable",754,[[],["dac__r",6]]],[11,"ptc_","","Bit 11 - PTC APB Clock Enable",754,[[],["ptc__r",6]]],[11,"pac2_","atsamd11c::generic","Bit 0 - PAC2 APB Clock Enable",7,[[],["pac2__w",3]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",7,[[],["evsys__w",3]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",7,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",7,[[],["sercom1__w",3]]],[11,"tcc0_","","Bit 5 - TCC0 APB Clock Enable",7,[[],["tcc0__w",3]]],[11,"tc1_","","Bit 6 - TC1 APB Clock Enable",7,[[],["tc1__w",3]]],[11,"tc2_","","Bit 7 - TC2 APB Clock Enable",7,[[],["tc2__w",3]]],[11,"adc_","","Bit 8 - ADC APB Clock Enable",7,[[],["adc__w",3]]],[11,"ac_","","Bit 9 - AC APB Clock Enable",7,[[],["ac__w",3]]],[11,"dac_","","Bit 10 - DAC APB Clock Enable",7,[[],["dac__w",3]]],[11,"ptc_","","Bit 11 - PTC APB Clock Enable",7,[[],["ptc__w",3]]],[11,"pac2_","atsamd11c::pm::apbcmask","Bit 0 - PAC2 APB Clock Enable",755,[[],["pac2__w",3]]],[11,"evsys_","","Bit 1 - EVSYS APB Clock Enable",755,[[],["evsys__w",3]]],[11,"sercom0_","","Bit 2 - SERCOM0 APB Clock Enable",755,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 3 - SERCOM1 APB Clock Enable",755,[[],["sercom1__w",3]]],[11,"tcc0_","","Bit 5 - TCC0 APB Clock Enable",755,[[],["tcc0__w",3]]],[11,"tc1_","","Bit 6 - TC1 APB Clock Enable",755,[[],["tc1__w",3]]],[11,"tc2_","","Bit 7 - TC2 APB Clock Enable",755,[[],["tc2__w",3]]],[11,"adc_","","Bit 8 - ADC APB Clock Enable",755,[[],["adc__w",3]]],[11,"ac_","","Bit 9 - AC APB Clock Enable",755,[[],["ac__w",3]]],[11,"dac_","","Bit 10 - DAC APB Clock Enable",755,[[],["dac__w",3]]],[11,"ptc_","","Bit 11 - PTC APB Clock Enable",755,[[],["ptc__w",3]]],[0,"intenclr","atsamd11c::pm","Interrupt Enable Clear",null,null],[3,"CKRDY_W","atsamd11c::pm::intenclr","Write proxy for field `CKRDY`",null,null],[3,"CFD_W","","Write proxy for field `CFD`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[6,"CFD_R","","Reader of field `CFD`",null,null],[11,"set_bit","","Sets the field bit",756,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",756,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",756,[[],["w",6]]],[11,"set_bit","","Sets the field bit",757,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",757,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",757,[[],["w",6]]],[11,"ckrdy","atsamd11c::generic","Bit 0 - Clock Ready Interrupt Enable",6,[[],["ckrdy_r",6]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",6,[[],["cfd_r",6]]],[11,"ckrdy","atsamd11c::pm::intenclr","Bit 0 - Clock Ready Interrupt Enable",758,[[],["ckrdy_r",6]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",758,[[],["cfd_r",6]]],[11,"ckrdy","atsamd11c::generic","Bit 0 - Clock Ready Interrupt Enable",7,[[],["ckrdy_w",3]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",7,[[],["cfd_w",3]]],[11,"ckrdy","atsamd11c::pm::intenclr","Bit 0 - Clock Ready Interrupt Enable",759,[[],["ckrdy_w",3]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",759,[[],["cfd_w",3]]],[0,"intenset","atsamd11c::pm","Interrupt Enable Set",null,null],[3,"CKRDY_W","atsamd11c::pm::intenset","Write proxy for field `CKRDY`",null,null],[3,"CFD_W","","Write proxy for field `CFD`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[6,"CFD_R","","Reader of field `CFD`",null,null],[11,"set_bit","","Sets the field bit",760,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",760,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",760,[[],["w",6]]],[11,"set_bit","","Sets the field bit",761,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",761,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",761,[[],["w",6]]],[11,"ckrdy","atsamd11c::generic","Bit 0 - Clock Ready Interrupt Enable",6,[[],["ckrdy_r",6]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",6,[[],["cfd_r",6]]],[11,"ckrdy","atsamd11c::pm::intenset","Bit 0 - Clock Ready Interrupt Enable",762,[[],["ckrdy_r",6]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",762,[[],["cfd_r",6]]],[11,"ckrdy","atsamd11c::generic","Bit 0 - Clock Ready Interrupt Enable",7,[[],["ckrdy_w",3]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",7,[[],["cfd_w",3]]],[11,"ckrdy","atsamd11c::pm::intenset","Bit 0 - Clock Ready Interrupt Enable",763,[[],["ckrdy_w",3]]],[11,"cfd","","Bit 1 - Clock Failure Detector Interrupt Enable",763,[[],["cfd_w",3]]],[0,"intflag","atsamd11c::pm","Interrupt Flag Status and Clear",null,null],[3,"CKRDY_W","atsamd11c::pm::intflag","Write proxy for field `CKRDY`",null,null],[3,"CFD_W","","Write proxy for field `CFD`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[6,"CFD_R","","Reader of field `CFD`",null,null],[11,"set_bit","","Sets the field bit",764,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",764,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",764,[[],["w",6]]],[11,"set_bit","","Sets the field bit",765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",765,[[],["w",6]]],[11,"ckrdy","atsamd11c::generic","Bit 0 - Clock Ready",6,[[],["ckrdy_r",6]]],[11,"cfd","","Bit 1 - Clock Failure Detector",6,[[],["cfd_r",6]]],[11,"ckrdy","atsamd11c::pm::intflag","Bit 0 - Clock Ready",766,[[],["ckrdy_r",6]]],[11,"cfd","","Bit 1 - Clock Failure Detector",766,[[],["cfd_r",6]]],[11,"ckrdy","atsamd11c::generic","Bit 0 - Clock Ready",7,[[],["ckrdy_w",3]]],[11,"cfd","","Bit 1 - Clock Failure Detector",7,[[],["cfd_w",3]]],[11,"ckrdy","atsamd11c::pm::intflag","Bit 0 - Clock Ready",767,[[],["ckrdy_w",3]]],[11,"cfd","","Bit 1 - Clock Failure Detector",767,[[],["cfd_w",3]]],[0,"rcause","atsamd11c::pm","Reset Cause",null,null],[6,"R","atsamd11c::pm::rcause","Reader of register RCAUSE",null,null],[6,"POR_R","","Reader of field `POR`",null,null],[6,"BOD12_R","","Reader of field `BOD12`",null,null],[6,"BOD33_R","","Reader of field `BOD33`",null,null],[6,"EXT_R","","Reader of field `EXT`",null,null],[6,"WDT_R","","Reader of field `WDT`",null,null],[6,"SYST_R","","Reader of field `SYST`",null,null],[11,"por","atsamd11c::generic","Bit 0 - Power On Reset",6,[[],["por_r",6]]],[11,"bod12","","Bit 1 - Brown Out 12 Detector Reset",6,[[],["bod12_r",6]]],[11,"bod33","","Bit 2 - Brown Out 33 Detector Reset",6,[[],["bod33_r",6]]],[11,"ext","","Bit 4 - External Reset",6,[[],["ext_r",6]]],[11,"wdt","","Bit 5 - Watchdog Reset",6,[[],["wdt_r",6]]],[11,"syst","","Bit 6 - System Reset Request",6,[[],["syst_r",6]]],[11,"por","atsamd11c::pm::rcause","Bit 0 - Power On Reset",768,[[],["por_r",6]]],[11,"bod12","","Bit 1 - Brown Out 12 Detector Reset",768,[[],["bod12_r",6]]],[11,"bod33","","Bit 2 - Brown Out 33 Detector Reset",768,[[],["bod33_r",6]]],[11,"ext","","Bit 4 - External Reset",768,[[],["ext_r",6]]],[11,"wdt","","Bit 5 - Watchdog Reset",768,[[],["wdt_r",6]]],[11,"syst","","Bit 6 - System Reset Request",768,[[],["syst_r",6]]],[6,"CTRL","atsamd11c::pm","Control",null,null],[6,"SLEEP","","Sleep Mode",null,null],[6,"EXTCTRL","","External Reset Controller",null,null],[6,"CPUSEL","","CPU Clock Select",null,null],[6,"APBASEL","","APBA Clock Select",null,null],[6,"APBBSEL","","APBB Clock Select",null,null],[6,"APBCSEL","","APBC Clock Select",null,null],[6,"AHBMASK","","AHB Mask",null,null],[6,"APBAMASK","","APBA Mask",null,null],[6,"APBBMASK","","APBB Mask",null,null],[6,"APBCMASK","","APBC Mask",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"RCAUSE","","Reset Cause",null,null],[0,"port","atsamd11c","Port Module",null,null],[3,"RegisterBlock","atsamd11c::port","Register block",null,null],[12,"dir0","","0x00 - Data Direction",769,null],[12,"dirclr0","","0x04 - Data Direction Clear",769,null],[12,"dirset0","","0x08 - Data Direction Set",769,null],[12,"dirtgl0","","0x0c - Data Direction Toggle",769,null],[12,"out0","","0x10 - Data Output Value",769,null],[12,"outclr0","","0x14 - Data Output Value Clear",769,null],[12,"outset0","","0x18 - Data Output Value Set",769,null],[12,"outtgl0","","0x1c - Data Output Value Toggle",769,null],[12,"in0","","0x20 - Data Input Value",769,null],[12,"ctrl0","","0x24 - Control",769,null],[12,"wrconfig0","","0x28 - Write Configuration",769,null],[12,"pmux0_","","0x30 - Peripheral Multiplexing n - Group 0",769,null],[12,"pincfg0_","","0x40 - Pin Configuration n - Group 0",769,null],[0,"dir","","Data Direction",null,null],[3,"DIR_W","atsamd11c::port::dir","Write proxy for field `DIR`",null,null],[6,"R","","Reader of register DIR%s",null,null],[6,"W","","Writer for register DIR%s",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[11,"bits","","Writes raw bits to the field",770,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bits 0:31 - Port Data Direction",6,[[],["dir_r",6]]],[11,"dir","atsamd11c::port::dir","Bits 0:31 - Port Data Direction",771,[[],["dir_r",6]]],[11,"dir","atsamd11c::generic","Bits 0:31 - Port Data Direction",7,[[],["dir_w",3]]],[11,"dir","atsamd11c::port::dir","Bits 0:31 - Port Data Direction",772,[[],["dir_w",3]]],[0,"dirclr","atsamd11c::port","Data Direction Clear",null,null],[3,"DIRCLR_W","atsamd11c::port::dirclr","Write proxy for field `DIRCLR`",null,null],[6,"R","","Reader of register DIRCLR%s",null,null],[6,"W","","Writer for register DIRCLR%s",null,null],[6,"DIRCLR_R","","Reader of field `DIRCLR`",null,null],[11,"bits","","Writes raw bits to the field",773,[[],["w",6]]],[11,"dirclr","atsamd11c::generic","Bits 0:31 - Port Data Direction Clear",6,[[],["dirclr_r",6]]],[11,"dirclr","atsamd11c::port::dirclr","Bits 0:31 - Port Data Direction Clear",774,[[],["dirclr_r",6]]],[11,"dirclr","atsamd11c::generic","Bits 0:31 - Port Data Direction Clear",7,[[],["dirclr_w",3]]],[11,"dirclr","atsamd11c::port::dirclr","Bits 0:31 - Port Data Direction Clear",775,[[],["dirclr_w",3]]],[0,"dirset","atsamd11c::port","Data Direction Set",null,null],[3,"DIRSET_W","atsamd11c::port::dirset","Write proxy for field `DIRSET`",null,null],[6,"R","","Reader of register DIRSET%s",null,null],[6,"W","","Writer for register DIRSET%s",null,null],[6,"DIRSET_R","","Reader of field `DIRSET`",null,null],[11,"bits","","Writes raw bits to the field",776,[[],["w",6]]],[11,"dirset","atsamd11c::generic","Bits 0:31 - Port Data Direction Set",6,[[],["dirset_r",6]]],[11,"dirset","atsamd11c::port::dirset","Bits 0:31 - Port Data Direction Set",777,[[],["dirset_r",6]]],[11,"dirset","atsamd11c::generic","Bits 0:31 - Port Data Direction Set",7,[[],["dirset_w",3]]],[11,"dirset","atsamd11c::port::dirset","Bits 0:31 - Port Data Direction Set",778,[[],["dirset_w",3]]],[0,"dirtgl","atsamd11c::port","Data Direction Toggle",null,null],[3,"DIRTGL_W","atsamd11c::port::dirtgl","Write proxy for field `DIRTGL`",null,null],[6,"R","","Reader of register DIRTGL%s",null,null],[6,"W","","Writer for register DIRTGL%s",null,null],[6,"DIRTGL_R","","Reader of field `DIRTGL`",null,null],[11,"bits","","Writes raw bits to the field",779,[[],["w",6]]],[11,"dirtgl","atsamd11c::generic","Bits 0:31 - Port Data Direction Toggle",6,[[],["dirtgl_r",6]]],[11,"dirtgl","atsamd11c::port::dirtgl","Bits 0:31 - Port Data Direction Toggle",780,[[],["dirtgl_r",6]]],[11,"dirtgl","atsamd11c::generic","Bits 0:31 - Port Data Direction Toggle",7,[[],["dirtgl_w",3]]],[11,"dirtgl","atsamd11c::port::dirtgl","Bits 0:31 - Port Data Direction Toggle",781,[[],["dirtgl_w",3]]],[0,"out","atsamd11c::port","Data Output Value",null,null],[3,"OUT_W","atsamd11c::port::out","Write proxy for field `OUT`",null,null],[6,"R","","Reader of register OUT%s",null,null],[6,"W","","Writer for register OUT%s",null,null],[6,"OUT_R","","Reader of field `OUT`",null,null],[11,"bits","","Writes raw bits to the field",782,[[],["w",6]]],[11,"out","atsamd11c::generic","Bits 0:31 - Port Data Output Value",6,[[],["out_r",6]]],[11,"out","atsamd11c::port::out","Bits 0:31 - Port Data Output Value",783,[[],["out_r",6]]],[11,"out","atsamd11c::generic","Bits 0:31 - Port Data Output Value",7,[[],["out_w",3]]],[11,"out","atsamd11c::port::out","Bits 0:31 - Port Data Output Value",784,[[],["out_w",3]]],[0,"outclr","atsamd11c::port","Data Output Value Clear",null,null],[3,"OUTCLR_W","atsamd11c::port::outclr","Write proxy for field `OUTCLR`",null,null],[6,"R","","Reader of register OUTCLR%s",null,null],[6,"W","","Writer for register OUTCLR%s",null,null],[6,"OUTCLR_R","","Reader of field `OUTCLR`",null,null],[11,"bits","","Writes raw bits to the field",785,[[],["w",6]]],[11,"outclr","atsamd11c::generic","Bits 0:31 - Port Data Output Value Clear",6,[[],["outclr_r",6]]],[11,"outclr","atsamd11c::port::outclr","Bits 0:31 - Port Data Output Value Clear",786,[[],["outclr_r",6]]],[11,"outclr","atsamd11c::generic","Bits 0:31 - Port Data Output Value Clear",7,[[],["outclr_w",3]]],[11,"outclr","atsamd11c::port::outclr","Bits 0:31 - Port Data Output Value Clear",787,[[],["outclr_w",3]]],[0,"outset","atsamd11c::port","Data Output Value Set",null,null],[3,"OUTSET_W","atsamd11c::port::outset","Write proxy for field `OUTSET`",null,null],[6,"R","","Reader of register OUTSET%s",null,null],[6,"W","","Writer for register OUTSET%s",null,null],[6,"OUTSET_R","","Reader of field `OUTSET`",null,null],[11,"bits","","Writes raw bits to the field",788,[[],["w",6]]],[11,"outset","atsamd11c::generic","Bits 0:31 - Port Data Output Value Set",6,[[],["outset_r",6]]],[11,"outset","atsamd11c::port::outset","Bits 0:31 - Port Data Output Value Set",789,[[],["outset_r",6]]],[11,"outset","atsamd11c::generic","Bits 0:31 - Port Data Output Value Set",7,[[],["outset_w",3]]],[11,"outset","atsamd11c::port::outset","Bits 0:31 - Port Data Output Value Set",790,[[],["outset_w",3]]],[0,"outtgl","atsamd11c::port","Data Output Value Toggle",null,null],[3,"OUTTGL_W","atsamd11c::port::outtgl","Write proxy for field `OUTTGL`",null,null],[6,"R","","Reader of register OUTTGL%s",null,null],[6,"W","","Writer for register OUTTGL%s",null,null],[6,"OUTTGL_R","","Reader of field `OUTTGL`",null,null],[11,"bits","","Writes raw bits to the field",791,[[],["w",6]]],[11,"outtgl","atsamd11c::generic","Bits 0:31 - Port Data Output Value Toggle",6,[[],["outtgl_r",6]]],[11,"outtgl","atsamd11c::port::outtgl","Bits 0:31 - Port Data Output Value Toggle",792,[[],["outtgl_r",6]]],[11,"outtgl","atsamd11c::generic","Bits 0:31 - Port Data Output Value Toggle",7,[[],["outtgl_w",3]]],[11,"outtgl","atsamd11c::port::outtgl","Bits 0:31 - Port Data Output Value Toggle",793,[[],["outtgl_w",3]]],[0,"in_","atsamd11c::port","Data Input Value",null,null],[6,"R","atsamd11c::port::in_","Reader of register IN%s",null,null],[6,"IN_R","","Reader of field `IN`",null,null],[11,"in_","atsamd11c::generic","Bits 0:31 - Port Data Input Value",6,[[],["in_r",6]]],[11,"in_","atsamd11c::port::in_","Bits 0:31 - Port Data Input Value",794,[[],["in_r",6]]],[0,"ctrl","atsamd11c::port","Control",null,null],[3,"SAMPLING_W","atsamd11c::port::ctrl","Write proxy for field `SAMPLING`",null,null],[6,"W","","Writer for register CTRL%s",null,null],[11,"bits","","Writes raw bits to the field",795,[[],["w",6]]],[11,"sampling","atsamd11c::generic","Bits 0:31 - Input Sampling Mode",7,[[],["sampling_w",3]]],[11,"sampling","atsamd11c::port::ctrl","Bits 0:31 - Input Sampling Mode",796,[[],["sampling_w",3]]],[0,"wrconfig","atsamd11c::port","Write Configuration",null,null],[3,"PINMASK_W","atsamd11c::port::wrconfig","Write proxy for field `PINMASK`",null,null],[3,"PMUXEN_W","","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[3,"PMUX_W","","Write proxy for field `PMUX`",null,null],[3,"WRPMUX_W","","Write proxy for field `WRPMUX`",null,null],[3,"WRPINCFG_W","","Write proxy for field `WRPINCFG`",null,null],[3,"HWSEL_W","","Write proxy for field `HWSEL`",null,null],[6,"W","","Writer for register WRCONFIG%s",null,null],[11,"bits","","Writes raw bits to the field",797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",798,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",798,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",798,[[],["w",6]]],[11,"set_bit","","Sets the field bit",799,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",799,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",799,[[],["w",6]]],[11,"set_bit","","Sets the field bit",800,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",800,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",800,[[],["w",6]]],[11,"set_bit","","Sets the field bit",801,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",801,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",801,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",802,[[],["w",6]]],[11,"set_bit","","Sets the field bit",803,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",803,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",803,[[],["w",6]]],[11,"set_bit","","Sets the field bit",804,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",804,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",804,[[],["w",6]]],[11,"set_bit","","Sets the field bit",805,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",805,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",805,[[],["w",6]]],[11,"pinmask","atsamd11c::generic","Bits 0:15 - Pin Mask for Multiple Pin Configuration",7,[[],["pinmask_w",3]]],[11,"pmuxen","","Bit 16 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 17 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 18 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 22 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmux","","Bits 24:27 - Peripheral Multiplexing",7,[[],["pmux_w",3]]],[11,"wrpmux","","Bit 28 - Write PMUX",7,[[],["wrpmux_w",3]]],[11,"wrpincfg","","Bit 30 - Write PINCFG",7,[[],["wrpincfg_w",3]]],[11,"hwsel","","Bit 31 - Half-Word Select",7,[[],["hwsel_w",3]]],[11,"pinmask","atsamd11c::port::wrconfig","Bits 0:15 - Pin Mask for Multiple Pin Configuration",806,[[],["pinmask_w",3]]],[11,"pmuxen","","Bit 16 - Peripheral Multiplexer Enable",806,[[],["pmuxen_w",3]]],[11,"inen","","Bit 17 - Input Enable",806,[[],["inen_w",3]]],[11,"pullen","","Bit 18 - Pull Enable",806,[[],["pullen_w",3]]],[11,"drvstr","","Bit 22 - Output Driver Strength Selection",806,[[],["drvstr_w",3]]],[11,"pmux","","Bits 24:27 - Peripheral Multiplexing",806,[[],["pmux_w",3]]],[11,"wrpmux","","Bit 28 - Write PMUX",806,[[],["wrpmux_w",3]]],[11,"wrpincfg","","Bit 30 - Write PINCFG",806,[[],["wrpincfg_w",3]]],[11,"hwsel","","Bit 31 - Half-Word Select",806,[[],["hwsel_w",3]]],[0,"pmux0_","atsamd11c::port","Peripheral Multiplexing n - Group 0",null,null],[3,"PMUXE_W","atsamd11c::port::pmux0_","Write proxy for field `PMUXE`",null,null],[3,"PMUXO_W","","Write proxy for field `PMUXO`",null,null],[4,"PMUXE_A","","Peripheral Multiplexing Even",null,null],[13,"A","","0: Peripheral function A selected",807,null],[13,"B","","1: Peripheral function B selected",807,null],[13,"C","","2: Peripheral function C selected",807,null],[13,"D","","3: Peripheral function D selected",807,null],[13,"E","","4: Peripheral function E selected",807,null],[13,"F","","5: Peripheral function F selected",807,null],[13,"G","","6: Peripheral function G selected",807,null],[13,"H","","7: Peripheral function H selected",807,null],[4,"PMUXO_A","","Peripheral Multiplexing Odd",null,null],[13,"A","","0: Peripheral function A selected",808,null],[13,"B","","1: Peripheral function B selected",808,null],[13,"C","","2: Peripheral function C selected",808,null],[13,"D","","3: Peripheral function D selected",808,null],[13,"E","","4: Peripheral function E selected",808,null],[13,"F","","5: Peripheral function F selected",808,null],[13,"G","","6: Peripheral function G selected",808,null],[13,"H","","7: Peripheral function H selected",808,null],[6,"R","","Reader of register PMUX0_%s",null,null],[6,"W","","Writer for register PMUX0_%s",null,null],[6,"PMUXE_R","","Reader of field `PMUXE`",null,null],[6,"PMUXO_R","","Reader of field `PMUXO`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["pmuxe_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"is_e","","Checks if the value of the field is `E`",6,[[]]],[11,"is_f","","Checks if the value of the field is `F`",6,[[]]],[11,"is_g","","Checks if the value of the field is `G`",6,[[]]],[11,"is_h","","Checks if the value of the field is `H`",6,[[]]],[11,"variant","atsamd11c::port::pmux0_","Get enumerated values variant",809,[[],[["variant",4],["pmuxe_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",809,[[]]],[11,"is_b","","Checks if the value of the field is `B`",809,[[]]],[11,"is_c","","Checks if the value of the field is `C`",809,[[]]],[11,"is_d","","Checks if the value of the field is `D`",809,[[]]],[11,"is_e","","Checks if the value of the field is `E`",809,[[]]],[11,"is_f","","Checks if the value of the field is `F`",809,[[]]],[11,"is_g","","Checks if the value of the field is `G`",809,[[]]],[11,"is_h","","Checks if the value of the field is `H`",809,[[]]],[11,"variant","","Writes `variant` to the field",810,[[["pmuxe_a",4]],["w",6]]],[11,"a","","Peripheral function A selected",810,[[],["w",6]]],[11,"b","","Peripheral function B selected",810,[[],["w",6]]],[11,"c","","Peripheral function C selected",810,[[],["w",6]]],[11,"d","","Peripheral function D selected",810,[[],["w",6]]],[11,"e","","Peripheral function E selected",810,[[],["w",6]]],[11,"f","","Peripheral function F selected",810,[[],["w",6]]],[11,"g","","Peripheral function G selected",810,[[],["w",6]]],[11,"h","","Peripheral function H selected",810,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",810,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["pmuxo_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"is_e","","Checks if the value of the field is `E`",6,[[]]],[11,"is_f","","Checks if the value of the field is `F`",6,[[]]],[11,"is_g","","Checks if the value of the field is `G`",6,[[]]],[11,"is_h","","Checks if the value of the field is `H`",6,[[]]],[11,"variant","atsamd11c::port::pmux0_","Get enumerated values variant",811,[[],[["variant",4],["pmuxo_a",4]]]],[11,"is_a","","Checks if the value of the field is `A`",811,[[]]],[11,"is_b","","Checks if the value of the field is `B`",811,[[]]],[11,"is_c","","Checks if the value of the field is `C`",811,[[]]],[11,"is_d","","Checks if the value of the field is `D`",811,[[]]],[11,"is_e","","Checks if the value of the field is `E`",811,[[]]],[11,"is_f","","Checks if the value of the field is `F`",811,[[]]],[11,"is_g","","Checks if the value of the field is `G`",811,[[]]],[11,"is_h","","Checks if the value of the field is `H`",811,[[]]],[11,"variant","","Writes `variant` to the field",812,[[["pmuxo_a",4]],["w",6]]],[11,"a","","Peripheral function A selected",812,[[],["w",6]]],[11,"b","","Peripheral function B selected",812,[[],["w",6]]],[11,"c","","Peripheral function C selected",812,[[],["w",6]]],[11,"d","","Peripheral function D selected",812,[[],["w",6]]],[11,"e","","Peripheral function E selected",812,[[],["w",6]]],[11,"f","","Peripheral function F selected",812,[[],["w",6]]],[11,"g","","Peripheral function G selected",812,[[],["w",6]]],[11,"h","","Peripheral function H selected",812,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",812,[[],["w",6]]],[11,"pmuxe","atsamd11c::generic","Bits 0:3 - Peripheral Multiplexing Even",6,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",6,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd11c::port::pmux0_","Bits 0:3 - Peripheral Multiplexing Even",813,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",813,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd11c::generic","Bits 0:3 - Peripheral Multiplexing Even",7,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",7,[[],["pmuxo_w",3]]],[11,"pmuxe","atsamd11c::port::pmux0_","Bits 0:3 - Peripheral Multiplexing Even",814,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing Odd",814,[[],["pmuxo_w",3]]],[0,"pincfg0_","atsamd11c::port","Pin Configuration n - Group 0",null,null],[3,"PMUXEN_W","atsamd11c::port::pincfg0_","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[6,"R","","Reader of register PINCFG0_%s",null,null],[6,"W","","Writer for register PINCFG0_%s",null,null],[6,"PMUXEN_R","","Reader of field `PMUXEN`",null,null],[6,"INEN_R","","Reader of field `INEN`",null,null],[6,"PULLEN_R","","Reader of field `PULLEN`",null,null],[6,"DRVSTR_R","","Reader of field `DRVSTR`",null,null],[11,"set_bit","","Sets the field bit",815,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",815,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",815,[[],["w",6]]],[11,"set_bit","","Sets the field bit",816,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",816,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",816,[[],["w",6]]],[11,"set_bit","","Sets the field bit",817,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",817,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",817,[[],["w",6]]],[11,"set_bit","","Sets the field bit",818,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",818,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",818,[[],["w",6]]],[11,"pmuxen","atsamd11c::generic","Bit 0 - Peripheral Multiplexer Enable",6,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",6,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",6,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",6,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd11c::port::pincfg0_","Bit 0 - Peripheral Multiplexer Enable",819,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",819,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",819,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",819,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd11c::generic","Bit 0 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmuxen","atsamd11c::port::pincfg0_","Bit 0 - Peripheral Multiplexer Enable",820,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",820,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",820,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",820,[[],["drvstr_w",3]]],[6,"DIR","atsamd11c::port","Data Direction",null,null],[6,"DIRCLR","","Data Direction Clear",null,null],[6,"DIRSET","","Data Direction Set",null,null],[6,"DIRTGL","","Data Direction Toggle",null,null],[6,"OUT","","Data Output Value",null,null],[6,"OUTCLR","","Data Output Value Clear",null,null],[6,"OUTSET","","Data Output Value Set",null,null],[6,"OUTTGL","","Data Output Value Toggle",null,null],[6,"IN","","Data Input Value",null,null],[6,"CTRL","","Control",null,null],[6,"WRCONFIG","","Write Configuration",null,null],[6,"PMUX0_","","Peripheral Multiplexing n - Group 0",null,null],[6,"PINCFG0_","","Pin Configuration n - Group 0",null,null],[0,"rtc","atsamd11c","Real-Time Counter",null,null],[3,"RegisterBlock","atsamd11c::rtc","Register block",null,null],[3,"MODE0","","Register block",null,null],[12,"ctrl","","0x00 - MODE0 Control",821,null],[12,"readreq","","0x02 - Read Request",821,null],[12,"evctrl","","0x04 - MODE0 Event Control",821,null],[12,"intenclr","","0x06 - MODE0 Interrupt Enable Clear",821,null],[12,"intenset","","0x07 - MODE0 Interrupt Enable Set",821,null],[12,"intflag","","0x08 - MODE0 Interrupt Flag Status and Clear",821,null],[12,"status","","0x0a - Status",821,null],[12,"dbgctrl","","0x0b - Debug Control",821,null],[12,"freqcorr","","0x0c - Frequency Correction",821,null],[12,"count","","0x10 - MODE0 Counter Value",821,null],[12,"comp","","0x18 - MODE0 Compare n Value",821,null],[3,"MODE1","","Register block",null,null],[12,"ctrl","","0x00 - MODE1 Control",822,null],[12,"readreq","","0x02 - Read Request",822,null],[12,"evctrl","","0x04 - MODE1 Event Control",822,null],[12,"intenclr","","0x06 - MODE1 Interrupt Enable Clear",822,null],[12,"intenset","","0x07 - MODE1 Interrupt Enable Set",822,null],[12,"intflag","","0x08 - MODE1 Interrupt Flag Status and Clear",822,null],[12,"status","","0x0a - Status",822,null],[12,"dbgctrl","","0x0b - Debug Control",822,null],[12,"freqcorr","","0x0c - Frequency Correction",822,null],[12,"count","","0x10 - MODE1 Counter Value",822,null],[12,"per","","0x14 - MODE1 Counter Period",822,null],[12,"comp","","0x18 - MODE1 Compare n Value",822,null],[3,"MODE2","","Register block",null,null],[12,"ctrl","","0x00 - MODE2 Control",823,null],[12,"readreq","","0x02 - Read Request",823,null],[12,"evctrl","","0x04 - MODE2 Event Control",823,null],[12,"intenclr","","0x06 - MODE2 Interrupt Enable Clear",823,null],[12,"intenset","","0x07 - MODE2 Interrupt Enable Set",823,null],[12,"intflag","","0x08 - MODE2 Interrupt Flag Status and Clear",823,null],[12,"status","","0x0a - Status",823,null],[12,"dbgctrl","","0x0b - Debug Control",823,null],[12,"freqcorr","","0x0c - Frequency Correction",823,null],[12,"clock","","0x10 - MODE2 Clock Value",823,null],[12,"alarm0","","0x18 - MODE2 Alarm n Value",823,null],[12,"mask0","","0x1c - MODE2 Alarm n Mask",823,null],[0,"mode0","","Register block 32-bit Counter with Single 32-bit Compare",null,null],[0,"ctrl","atsamd11c::rtc::mode0","MODE0 Control",null,null],[3,"SWRST_W","atsamd11c::rtc::mode0::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"MATCHCLR_W","","Write proxy for field `MATCHCLR`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",824,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",824,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",824,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: CLK_RTC_CNT = GCLK_RTC/1",825,null],[13,"DIV2","","1: CLK_RTC_CNT = GCLK_RTC/2",825,null],[13,"DIV4","","2: CLK_RTC_CNT = GCLK_RTC/4",825,null],[13,"DIV8","","3: CLK_RTC_CNT = GCLK_RTC/8",825,null],[13,"DIV16","","4: CLK_RTC_CNT = GCLK_RTC/16",825,null],[13,"DIV32","","5: CLK_RTC_CNT = GCLK_RTC/32",825,null],[13,"DIV64","","6: CLK_RTC_CNT = GCLK_RTC/64",825,null],[13,"DIV128","","7: CLK_RTC_CNT = GCLK_RTC/128",825,null],[13,"DIV256","","8: CLK_RTC_CNT = GCLK_RTC/256",825,null],[13,"DIV512","","9: CLK_RTC_CNT = GCLK_RTC/512",825,null],[13,"DIV1024","","10: CLK_RTC_CNT = GCLK_RTC/1024",825,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"MATCHCLR_R","","Reader of field `MATCHCLR`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",826,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",826,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",826,[[],["w",6]]],[11,"set_bit","","Sets the field bit",827,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",827,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",827,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd11c::rtc::mode0::ctrl","Get enumerated values variant",828,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",828,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",828,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",828,[[]]],[11,"variant","","Writes `variant` to the field",829,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",829,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",829,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",829,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",829,[[],["w",6]]],[11,"set_bit","","Sets the field bit",830,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",830,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",830,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::rtc::mode0::ctrl","Get enumerated values variant",831,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",831,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",831,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",831,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",831,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",831,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",831,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",831,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",831,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",831,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",831,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",831,[[]]],[11,"variant","","Writes `variant` to the field",832,[[["prescaler_a",4]],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",832,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",832,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",832,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",832,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",832,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",832,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",832,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",832,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",832,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",832,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",832,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",832,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",6,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"enable","atsamd11c::rtc::mode0::ctrl","Bit 1 - Enable",833,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",833,[[],["mode_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",833,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",833,[[],["prescaler_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",7,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"swrst","atsamd11c::rtc::mode0::ctrl","Bit 0 - Software Reset",834,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",834,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",834,[[],["mode_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",834,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",834,[[],["prescaler_w",3]]],[0,"readreq","atsamd11c::rtc::mode0","Read Request",null,null],[3,"RCONT_W","atsamd11c::rtc::mode0::readreq","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[11,"set_bit","","Sets the field bit",835,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",835,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",835,[[],["w",6]]],[11,"set_bit","","Sets the field bit",836,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",836,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",836,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:5 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"addr","atsamd11c::rtc::mode0::readreq","Bits 0:5 - Address",837,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",837,[[],["rcont_r",6]]],[11,"rcont","atsamd11c::generic","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"rcont","atsamd11c::rtc::mode0::readreq","Bit 14 - Read Continuously",838,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",838,[[],["rreq_w",3]]],[0,"evctrl","atsamd11c::rtc::mode0","MODE0 Event Control",null,null],[3,"PEREO0_W","atsamd11c::rtc::mode0::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"CMPEO0_W","","Write proxy for field `CMPEO0`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"CMPEO0_R","","Reader of field `CMPEO0`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[11,"set_bit","","Sets the field bit",839,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",839,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",839,[[],["w",6]]],[11,"set_bit","","Sets the field bit",840,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",840,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",840,[[],["w",6]]],[11,"set_bit","","Sets the field bit",841,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",841,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",841,[[],["w",6]]],[11,"set_bit","","Sets the field bit",842,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",842,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",842,[[],["w",6]]],[11,"set_bit","","Sets the field bit",843,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",843,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",843,[[],["w",6]]],[11,"set_bit","","Sets the field bit",844,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",844,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",844,[[],["w",6]]],[11,"set_bit","","Sets the field bit",845,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",845,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",845,[[],["w",6]]],[11,"set_bit","","Sets the field bit",846,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",846,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",846,[[],["w",6]]],[11,"set_bit","","Sets the field bit",847,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",847,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",847,[[],["w",6]]],[11,"set_bit","","Sets the field bit",848,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",848,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",848,[[],["w",6]]],[11,"pereo0","atsamd11c::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",6,[[],["cmpeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd11c::rtc::mode0::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",849,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",849,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",849,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",849,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",849,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",849,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",849,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",849,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",849,[[],["cmpeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",849,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd11c::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",7,[[],["cmpeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"pereo0","atsamd11c::rtc::mode0::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",850,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",850,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",850,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",850,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",850,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",850,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",850,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",850,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",850,[[],["cmpeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",850,[[],["ovfeo_w",3]]],[0,"intenclr","atsamd11c::rtc::mode0","MODE0 Interrupt Enable Clear",null,null],[3,"CMP0_W","atsamd11c::rtc::mode0::intenclr","Write proxy for field `CMP0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",851,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",851,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",851,[[],["w",6]]],[11,"set_bit","","Sets the field bit",852,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",852,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",852,[[],["w",6]]],[11,"set_bit","","Sets the field bit",853,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",853,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",853,[[],["w",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::rtc::mode0::intenclr","Bit 0 - Compare 0 Interrupt Enable",854,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",854,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",854,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd11c::rtc::mode0::intenclr","Bit 0 - Compare 0 Interrupt Enable",855,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",855,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",855,[[],["ovf_w",3]]],[0,"intenset","atsamd11c::rtc::mode0","MODE0 Interrupt Enable Set",null,null],[3,"CMP0_W","atsamd11c::rtc::mode0::intenset","Write proxy for field `CMP0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",856,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",856,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",856,[[],["w",6]]],[11,"set_bit","","Sets the field bit",857,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",857,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",857,[[],["w",6]]],[11,"set_bit","","Sets the field bit",858,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",858,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",858,[[],["w",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::rtc::mode0::intenset","Bit 0 - Compare 0 Interrupt Enable",859,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",859,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",859,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd11c::rtc::mode0::intenset","Bit 0 - Compare 0 Interrupt Enable",860,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",860,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",860,[[],["ovf_w",3]]],[0,"intflag","atsamd11c::rtc::mode0","MODE0 Interrupt Flag Status and Clear",null,null],[3,"CMP0_W","atsamd11c::rtc::mode0::intflag","Write proxy for field `CMP0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",861,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",861,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",861,[[],["w",6]]],[11,"set_bit","","Sets the field bit",862,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",862,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",862,[[],["w",6]]],[11,"set_bit","","Sets the field bit",863,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",863,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",863,[[],["w",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0",6,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::rtc::mode0::intflag","Bit 0 - Compare 0",864,[[],["cmp0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",864,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",864,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0",7,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd11c::rtc::mode0::intflag","Bit 0 - Compare 0",865,[[],["cmp0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",865,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",865,[[],["ovf_w",3]]],[0,"status","atsamd11c::rtc::mode0","Status",null,null],[6,"R","atsamd11c::rtc::mode0::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::rtc::mode0::status","Bit 7 - Synchronization Busy",866,[[],["syncbusy_r",6]]],[0,"dbgctrl","atsamd11c::rtc::mode0","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::rtc::mode0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",867,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",867,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",867,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::rtc::mode0::dbgctrl","Bit 0 - Run During Debug",868,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::rtc::mode0::dbgctrl","Bit 0 - Run During Debug",869,[[],["dbgrun_w",3]]],[0,"freqcorr","atsamd11c::rtc::mode0","Frequency Correction",null,null],[3,"VALUE_W","atsamd11c::rtc::mode0::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",870,[[],["w",6]]],[11,"set_bit","","Sets the field bit",871,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",871,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",871,[[],["w",6]]],[11,"value","atsamd11c::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd11c::rtc::mode0::freqcorr","Bits 0:6 - Correction Value",872,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",872,[[],["sign_r",6]]],[11,"value","atsamd11c::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd11c::rtc::mode0::freqcorr","Bits 0:6 - Correction Value",873,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",873,[[],["sign_w",3]]],[0,"count","atsamd11c::rtc::mode0","MODE0 Counter Value",null,null],[3,"COUNT_W","atsamd11c::rtc::mode0::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",874,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 0:31 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::rtc::mode0::count","Bits 0:31 - Counter Value",875,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 0:31 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::rtc::mode0::count","Bits 0:31 - Counter Value",876,[[],["count_w",3]]],[0,"comp","atsamd11c::rtc::mode0","MODE0 Compare n Value",null,null],[3,"COMP_W","atsamd11c::rtc::mode0::comp","Write proxy for field `COMP`",null,null],[6,"R","","Reader of register COMP%s",null,null],[6,"W","","Writer for register COMP%s",null,null],[6,"COMP_R","","Reader of field `COMP`",null,null],[11,"bits","","Writes raw bits to the field",877,[[],["w",6]]],[11,"comp","atsamd11c::generic","Bits 0:31 - Compare Value",6,[[],["comp_r",6]]],[11,"comp","atsamd11c::rtc::mode0::comp","Bits 0:31 - Compare Value",878,[[],["comp_r",6]]],[11,"comp","atsamd11c::generic","Bits 0:31 - Compare Value",7,[[],["comp_w",3]]],[11,"comp","atsamd11c::rtc::mode0::comp","Bits 0:31 - Compare Value",879,[[],["comp_w",3]]],[6,"CTRL","atsamd11c::rtc::mode0","MODE0 Control",null,null],[6,"READREQ","","Read Request",null,null],[6,"EVCTRL","","MODE0 Event Control",null,null],[6,"INTENCLR","","MODE0 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE0 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE0 Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"COUNT","","MODE0 Counter Value",null,null],[6,"COMP","","MODE0 Compare n Value",null,null],[0,"mode1","atsamd11c::rtc","Register block 16-bit Counter with Two 16-bit Compares",null,null],[0,"ctrl","atsamd11c::rtc::mode1","MODE1 Control",null,null],[3,"SWRST_W","atsamd11c::rtc::mode1::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",880,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",880,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",880,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: CLK_RTC_CNT = GCLK_RTC/1",881,null],[13,"DIV2","","1: CLK_RTC_CNT = GCLK_RTC/2",881,null],[13,"DIV4","","2: CLK_RTC_CNT = GCLK_RTC/4",881,null],[13,"DIV8","","3: CLK_RTC_CNT = GCLK_RTC/8",881,null],[13,"DIV16","","4: CLK_RTC_CNT = GCLK_RTC/16",881,null],[13,"DIV32","","5: CLK_RTC_CNT = GCLK_RTC/32",881,null],[13,"DIV64","","6: CLK_RTC_CNT = GCLK_RTC/64",881,null],[13,"DIV128","","7: CLK_RTC_CNT = GCLK_RTC/128",881,null],[13,"DIV256","","8: CLK_RTC_CNT = GCLK_RTC/256",881,null],[13,"DIV512","","9: CLK_RTC_CNT = GCLK_RTC/512",881,null],[13,"DIV1024","","10: CLK_RTC_CNT = GCLK_RTC/1024",881,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",882,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",882,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",882,[[],["w",6]]],[11,"set_bit","","Sets the field bit",883,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",883,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",883,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd11c::rtc::mode1::ctrl","Get enumerated values variant",884,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",884,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",884,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",884,[[]]],[11,"variant","","Writes `variant` to the field",885,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",885,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",885,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",885,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",885,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::rtc::mode1::ctrl","Get enumerated values variant",886,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",886,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",886,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",886,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",886,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",886,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",886,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",886,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",886,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",886,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",886,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",886,[[]]],[11,"variant","","Writes `variant` to the field",887,[[["prescaler_a",4]],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",887,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",887,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",887,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",887,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",887,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",887,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",887,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",887,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",887,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",887,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",887,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",887,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"enable","atsamd11c::rtc::mode1::ctrl","Bit 1 - Enable",888,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",888,[[],["mode_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",888,[[],["prescaler_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"swrst","atsamd11c::rtc::mode1::ctrl","Bit 0 - Software Reset",889,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",889,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",889,[[],["mode_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",889,[[],["prescaler_w",3]]],[0,"readreq","atsamd11c::rtc::mode1","Read Request",null,null],[3,"RCONT_W","atsamd11c::rtc::mode1::readreq","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[11,"set_bit","","Sets the field bit",890,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",890,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",890,[[],["w",6]]],[11,"set_bit","","Sets the field bit",891,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",891,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",891,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:5 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"addr","atsamd11c::rtc::mode1::readreq","Bits 0:5 - Address",892,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",892,[[],["rcont_r",6]]],[11,"rcont","atsamd11c::generic","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"rcont","atsamd11c::rtc::mode1::readreq","Bit 14 - Read Continuously",893,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",893,[[],["rreq_w",3]]],[0,"evctrl","atsamd11c::rtc::mode1","MODE1 Event Control",null,null],[3,"PEREO0_W","atsamd11c::rtc::mode1::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"CMPEO0_W","","Write proxy for field `CMPEO0`",null,null],[3,"CMPEO1_W","","Write proxy for field `CMPEO1`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"CMPEO0_R","","Reader of field `CMPEO0`",null,null],[6,"CMPEO1_R","","Reader of field `CMPEO1`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[11,"set_bit","","Sets the field bit",894,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",894,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",894,[[],["w",6]]],[11,"set_bit","","Sets the field bit",895,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",895,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",895,[[],["w",6]]],[11,"set_bit","","Sets the field bit",896,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",896,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",896,[[],["w",6]]],[11,"set_bit","","Sets the field bit",897,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",897,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",897,[[],["w",6]]],[11,"set_bit","","Sets the field bit",898,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",898,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",898,[[],["w",6]]],[11,"set_bit","","Sets the field bit",899,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",899,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",899,[[],["w",6]]],[11,"set_bit","","Sets the field bit",900,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",900,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",900,[[],["w",6]]],[11,"set_bit","","Sets the field bit",901,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",901,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",901,[[],["w",6]]],[11,"set_bit","","Sets the field bit",902,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",902,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",902,[[],["w",6]]],[11,"set_bit","","Sets the field bit",903,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",903,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",903,[[],["w",6]]],[11,"set_bit","","Sets the field bit",904,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",904,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",904,[[],["w",6]]],[11,"pereo0","atsamd11c::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",6,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",6,[[],["cmpeo1_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd11c::rtc::mode1::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",905,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",905,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",905,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",905,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",905,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",905,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",905,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",905,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",905,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",905,[[],["cmpeo1_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",905,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd11c::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",7,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",7,[[],["cmpeo1_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"pereo0","atsamd11c::rtc::mode1::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",906,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",906,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",906,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",906,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",906,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",906,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",906,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",906,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",906,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",906,[[],["cmpeo1_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",906,[[],["ovfeo_w",3]]],[0,"intenclr","atsamd11c::rtc::mode1","MODE1 Interrupt Enable Clear",null,null],[3,"CMP0_W","atsamd11c::rtc::mode1::intenclr","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",907,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",907,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",907,[[],["w",6]]],[11,"set_bit","","Sets the field bit",908,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",908,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",908,[[],["w",6]]],[11,"set_bit","","Sets the field bit",909,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",909,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",909,[[],["w",6]]],[11,"set_bit","","Sets the field bit",910,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",910,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",910,[[],["w",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::rtc::mode1::intenclr","Bit 0 - Compare 0 Interrupt Enable",911,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",911,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",911,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",911,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd11c::rtc::mode1::intenclr","Bit 0 - Compare 0 Interrupt Enable",912,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",912,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",912,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",912,[[],["ovf_w",3]]],[0,"intenset","atsamd11c::rtc::mode1","MODE1 Interrupt Enable Set",null,null],[3,"CMP0_W","atsamd11c::rtc::mode1::intenset","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",913,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",913,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",913,[[],["w",6]]],[11,"set_bit","","Sets the field bit",914,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",914,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",914,[[],["w",6]]],[11,"set_bit","","Sets the field bit",915,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",915,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",915,[[],["w",6]]],[11,"set_bit","","Sets the field bit",916,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",916,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",916,[[],["w",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::rtc::mode1::intenset","Bit 0 - Compare 0 Interrupt Enable",917,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",917,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",917,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",917,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd11c::rtc::mode1::intenset","Bit 0 - Compare 0 Interrupt Enable",918,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1 Interrupt Enable",918,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",918,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",918,[[],["ovf_w",3]]],[0,"intflag","atsamd11c::rtc::mode1","MODE1 Interrupt Flag Status and Clear",null,null],[3,"CMP0_W","atsamd11c::rtc::mode1::intflag","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",919,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",919,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",919,[[],["w",6]]],[11,"set_bit","","Sets the field bit",920,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",920,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",920,[[],["w",6]]],[11,"set_bit","","Sets the field bit",921,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",921,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",921,[[],["w",6]]],[11,"set_bit","","Sets the field bit",922,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",922,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",922,[[],["w",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1",6,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",6,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::rtc::mode1::intflag","Bit 0 - Compare 0",923,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 1 - Compare 1",923,[[],["cmp1_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",923,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",923,[[],["ovf_r",6]]],[11,"cmp0","atsamd11c::generic","Bit 0 - Compare 0",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1",7,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",7,[[],["ovf_w",3]]],[11,"cmp0","atsamd11c::rtc::mode1::intflag","Bit 0 - Compare 0",924,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 1 - Compare 1",924,[[],["cmp1_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",924,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",924,[[],["ovf_w",3]]],[0,"status","atsamd11c::rtc::mode1","Status",null,null],[6,"R","atsamd11c::rtc::mode1::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::rtc::mode1::status","Bit 7 - Synchronization Busy",925,[[],["syncbusy_r",6]]],[0,"dbgctrl","atsamd11c::rtc::mode1","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::rtc::mode1::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",926,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",926,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",926,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::rtc::mode1::dbgctrl","Bit 0 - Run During Debug",927,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::rtc::mode1::dbgctrl","Bit 0 - Run During Debug",928,[[],["dbgrun_w",3]]],[0,"freqcorr","atsamd11c::rtc::mode1","Frequency Correction",null,null],[3,"VALUE_W","atsamd11c::rtc::mode1::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",929,[[],["w",6]]],[11,"set_bit","","Sets the field bit",930,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",930,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",930,[[],["w",6]]],[11,"value","atsamd11c::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd11c::rtc::mode1::freqcorr","Bits 0:6 - Correction Value",931,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",931,[[],["sign_r",6]]],[11,"value","atsamd11c::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd11c::rtc::mode1::freqcorr","Bits 0:6 - Correction Value",932,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",932,[[],["sign_w",3]]],[0,"count","atsamd11c::rtc::mode1","MODE1 Counter Value",null,null],[3,"COUNT_W","atsamd11c::rtc::mode1::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",933,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 0:15 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::rtc::mode1::count","Bits 0:15 - Counter Value",934,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 0:15 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::rtc::mode1::count","Bits 0:15 - Counter Value",935,[[],["count_w",3]]],[0,"per","atsamd11c::rtc::mode1","MODE1 Counter Period",null,null],[3,"PER_W","atsamd11c::rtc::mode1::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",936,[[],["w",6]]],[11,"per","atsamd11c::generic","Bits 0:15 - Counter Period",6,[[],["per_r",6]]],[11,"per","atsamd11c::rtc::mode1::per","Bits 0:15 - Counter Period",937,[[],["per_r",6]]],[11,"per","atsamd11c::generic","Bits 0:15 - Counter Period",7,[[],["per_w",3]]],[11,"per","atsamd11c::rtc::mode1::per","Bits 0:15 - Counter Period",938,[[],["per_w",3]]],[0,"comp","atsamd11c::rtc::mode1","MODE1 Compare n Value",null,null],[3,"COMP_W","atsamd11c::rtc::mode1::comp","Write proxy for field `COMP`",null,null],[6,"R","","Reader of register COMP%s",null,null],[6,"W","","Writer for register COMP%s",null,null],[6,"COMP_R","","Reader of field `COMP`",null,null],[11,"bits","","Writes raw bits to the field",939,[[],["w",6]]],[11,"comp","atsamd11c::generic","Bits 0:15 - Compare Value",6,[[],["comp_r",6]]],[11,"comp","atsamd11c::rtc::mode1::comp","Bits 0:15 - Compare Value",940,[[],["comp_r",6]]],[11,"comp","atsamd11c::generic","Bits 0:15 - Compare Value",7,[[],["comp_w",3]]],[11,"comp","atsamd11c::rtc::mode1::comp","Bits 0:15 - Compare Value",941,[[],["comp_w",3]]],[6,"CTRL","atsamd11c::rtc::mode1","MODE1 Control",null,null],[6,"READREQ","","Read Request",null,null],[6,"EVCTRL","","MODE1 Event Control",null,null],[6,"INTENCLR","","MODE1 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE1 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE1 Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"COUNT","","MODE1 Counter Value",null,null],[6,"PER","","MODE1 Counter Period",null,null],[6,"COMP","","MODE1 Compare n Value",null,null],[0,"mode2","atsamd11c::rtc","Register block Clock/Calendar with Alarm",null,null],[0,"ctrl","atsamd11c::rtc::mode2","MODE2 Control",null,null],[3,"SWRST_W","atsamd11c::rtc::mode2::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"CLKREP_W","","Write proxy for field `CLKREP`",null,null],[3,"MATCHCLR_W","","Write proxy for field `MATCHCLR`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",942,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",942,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",942,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: CLK_RTC_CNT = GCLK_RTC/1",943,null],[13,"DIV2","","1: CLK_RTC_CNT = GCLK_RTC/2",943,null],[13,"DIV4","","2: CLK_RTC_CNT = GCLK_RTC/4",943,null],[13,"DIV8","","3: CLK_RTC_CNT = GCLK_RTC/8",943,null],[13,"DIV16","","4: CLK_RTC_CNT = GCLK_RTC/16",943,null],[13,"DIV32","","5: CLK_RTC_CNT = GCLK_RTC/32",943,null],[13,"DIV64","","6: CLK_RTC_CNT = GCLK_RTC/64",943,null],[13,"DIV128","","7: CLK_RTC_CNT = GCLK_RTC/128",943,null],[13,"DIV256","","8: CLK_RTC_CNT = GCLK_RTC/256",943,null],[13,"DIV512","","9: CLK_RTC_CNT = GCLK_RTC/512",943,null],[13,"DIV1024","","10: CLK_RTC_CNT = GCLK_RTC/1024",943,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"CLKREP_R","","Reader of field `CLKREP`",null,null],[6,"MATCHCLR_R","","Reader of field `MATCHCLR`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"set_bit","","Sets the field bit",944,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",944,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",944,[[],["w",6]]],[11,"set_bit","","Sets the field bit",945,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",945,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",945,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd11c::rtc::mode2::ctrl","Get enumerated values variant",946,[[],[["mode_a",4],["variant",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",946,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",946,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",946,[[]]],[11,"variant","","Writes `variant` to the field",947,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",947,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",947,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",947,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",947,[[],["w",6]]],[11,"set_bit","","Sets the field bit",948,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",948,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",948,[[],["w",6]]],[11,"set_bit","","Sets the field bit",949,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",949,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",949,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::rtc::mode2::ctrl","Get enumerated values variant",950,[[],[["prescaler_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",950,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",950,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",950,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",950,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",950,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",950,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",950,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",950,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",950,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",950,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",950,[[]]],[11,"variant","","Writes `variant` to the field",951,[[["prescaler_a",4]],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",951,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",951,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",951,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",951,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",951,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",951,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",951,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",951,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",951,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",951,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",951,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",951,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"clkrep","","Bit 6 - Clock Representation",6,[[],["clkrep_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",6,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"enable","atsamd11c::rtc::mode2::ctrl","Bit 1 - Enable",952,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",952,[[],["mode_r",6]]],[11,"clkrep","","Bit 6 - Clock Representation",952,[[],["clkrep_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",952,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",952,[[],["prescaler_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"clkrep","","Bit 6 - Clock Representation",7,[[],["clkrep_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",7,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"swrst","atsamd11c::rtc::mode2::ctrl","Bit 0 - Software Reset",953,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",953,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",953,[[],["mode_w",3]]],[11,"clkrep","","Bit 6 - Clock Representation",953,[[],["clkrep_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",953,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",953,[[],["prescaler_w",3]]],[0,"readreq","atsamd11c::rtc::mode2","Read Request",null,null],[3,"RCONT_W","atsamd11c::rtc::mode2::readreq","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[11,"set_bit","","Sets the field bit",954,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",954,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",954,[[],["w",6]]],[11,"set_bit","","Sets the field bit",955,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",955,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",955,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:5 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"addr","atsamd11c::rtc::mode2::readreq","Bits 0:5 - Address",956,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",956,[[],["rcont_r",6]]],[11,"rcont","atsamd11c::generic","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"rcont","atsamd11c::rtc::mode2::readreq","Bit 14 - Read Continuously",957,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",957,[[],["rreq_w",3]]],[0,"evctrl","atsamd11c::rtc::mode2","MODE2 Event Control",null,null],[3,"PEREO0_W","atsamd11c::rtc::mode2::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"ALARMEO0_W","","Write proxy for field `ALARMEO0`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"ALARMEO0_R","","Reader of field `ALARMEO0`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[11,"set_bit","","Sets the field bit",958,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",958,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",958,[[],["w",6]]],[11,"set_bit","","Sets the field bit",959,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",959,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",959,[[],["w",6]]],[11,"set_bit","","Sets the field bit",960,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",960,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",960,[[],["w",6]]],[11,"set_bit","","Sets the field bit",961,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",961,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",961,[[],["w",6]]],[11,"set_bit","","Sets the field bit",962,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",962,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",962,[[],["w",6]]],[11,"set_bit","","Sets the field bit",963,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",963,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",963,[[],["w",6]]],[11,"set_bit","","Sets the field bit",964,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",964,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",964,[[],["w",6]]],[11,"set_bit","","Sets the field bit",965,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",965,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",965,[[],["w",6]]],[11,"set_bit","","Sets the field bit",966,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",966,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",966,[[],["w",6]]],[11,"set_bit","","Sets the field bit",967,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",967,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",967,[[],["w",6]]],[11,"pereo0","atsamd11c::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",6,[[],["alarmeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd11c::rtc::mode2::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",968,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",968,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",968,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",968,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",968,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",968,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",968,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",968,[[],["pereo7_r",6]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",968,[[],["alarmeo0_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",968,[[],["ovfeo_r",6]]],[11,"pereo0","atsamd11c::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",7,[[],["alarmeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"pereo0","atsamd11c::rtc::mode2::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",969,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",969,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",969,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",969,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",969,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",969,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",969,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",969,[[],["pereo7_w",3]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",969,[[],["alarmeo0_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",969,[[],["ovfeo_w",3]]],[0,"intenclr","atsamd11c::rtc::mode2","MODE2 Interrupt Enable Clear",null,null],[3,"ALARM0_W","atsamd11c::rtc::mode2::intenclr","Write proxy for field `ALARM0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",970,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",970,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",970,[[],["w",6]]],[11,"set_bit","","Sets the field bit",971,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",971,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",971,[[],["w",6]]],[11,"set_bit","","Sets the field bit",972,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",972,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",972,[[],["w",6]]],[11,"alarm0","atsamd11c::generic","Bit 0 - Alarm 0 Interrupt Enable",6,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"alarm0","atsamd11c::rtc::mode2::intenclr","Bit 0 - Alarm 0 Interrupt Enable",973,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",973,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",973,[[],["ovf_r",6]]],[11,"alarm0","atsamd11c::generic","Bit 0 - Alarm 0 Interrupt Enable",7,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"alarm0","atsamd11c::rtc::mode2::intenclr","Bit 0 - Alarm 0 Interrupt Enable",974,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",974,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",974,[[],["ovf_w",3]]],[0,"intenset","atsamd11c::rtc::mode2","MODE2 Interrupt Enable Set",null,null],[3,"ALARM0_W","atsamd11c::rtc::mode2::intenset","Write proxy for field `ALARM0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",975,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",975,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",975,[[],["w",6]]],[11,"set_bit","","Sets the field bit",976,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",976,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",976,[[],["w",6]]],[11,"set_bit","","Sets the field bit",977,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",977,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",977,[[],["w",6]]],[11,"alarm0","atsamd11c::generic","Bit 0 - Alarm 0 Interrupt Enable",6,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"alarm0","atsamd11c::rtc::mode2::intenset","Bit 0 - Alarm 0 Interrupt Enable",978,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",978,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",978,[[],["ovf_r",6]]],[11,"alarm0","atsamd11c::generic","Bit 0 - Alarm 0 Interrupt Enable",7,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"alarm0","atsamd11c::rtc::mode2::intenset","Bit 0 - Alarm 0 Interrupt Enable",979,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready Interrupt Enable",979,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow Interrupt Enable",979,[[],["ovf_w",3]]],[0,"intflag","atsamd11c::rtc::mode2","MODE2 Interrupt Flag Status and Clear",null,null],[3,"ALARM0_W","atsamd11c::rtc::mode2::intflag","Write proxy for field `ALARM0`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",980,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",980,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",980,[[],["w",6]]],[11,"set_bit","","Sets the field bit",981,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",981,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",981,[[],["w",6]]],[11,"set_bit","","Sets the field bit",982,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",982,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",982,[[],["w",6]]],[11,"alarm0","atsamd11c::generic","Bit 0 - Alarm 0",6,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",6,[[],["ovf_r",6]]],[11,"alarm0","atsamd11c::rtc::mode2::intflag","Bit 0 - Alarm 0",983,[[],["alarm0_r",6]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",983,[[],["syncrdy_r",6]]],[11,"ovf","","Bit 7 - Overflow",983,[[],["ovf_r",6]]],[11,"alarm0","atsamd11c::generic","Bit 0 - Alarm 0",7,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",7,[[],["ovf_w",3]]],[11,"alarm0","atsamd11c::rtc::mode2::intflag","Bit 0 - Alarm 0",984,[[],["alarm0_w",3]]],[11,"syncrdy","","Bit 6 - Synchronization Ready",984,[[],["syncrdy_w",3]]],[11,"ovf","","Bit 7 - Overflow",984,[[],["ovf_w",3]]],[0,"status","atsamd11c::rtc::mode2","Status",null,null],[6,"R","atsamd11c::rtc::mode2::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::rtc::mode2::status","Bit 7 - Synchronization Busy",985,[[],["syncbusy_r",6]]],[0,"dbgctrl","atsamd11c::rtc::mode2","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::rtc::mode2::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",986,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",986,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",986,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::rtc::mode2::dbgctrl","Bit 0 - Run During Debug",987,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::rtc::mode2::dbgctrl","Bit 0 - Run During Debug",988,[[],["dbgrun_w",3]]],[0,"freqcorr","atsamd11c::rtc::mode2","Frequency Correction",null,null],[3,"VALUE_W","atsamd11c::rtc::mode2::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",989,[[],["w",6]]],[11,"set_bit","","Sets the field bit",990,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",990,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",990,[[],["w",6]]],[11,"value","atsamd11c::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd11c::rtc::mode2::freqcorr","Bits 0:6 - Correction Value",991,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",991,[[],["sign_r",6]]],[11,"value","atsamd11c::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd11c::rtc::mode2::freqcorr","Bits 0:6 - Correction Value",992,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",992,[[],["sign_w",3]]],[0,"clock","atsamd11c::rtc::mode2","MODE2 Clock Value",null,null],[3,"SECOND_W","atsamd11c::rtc::mode2::clock","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: AM when CLKREP in 12-hour",993,null],[13,"PM","","16: PM when CLKREP in 12-hour",993,null],[6,"R","","Reader of register CLOCK",null,null],[6,"W","","Writer for register CLOCK",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",994,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",995,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd11c::rtc::mode2::clock","Get enumerated values variant",996,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",996,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",996,[[]]],[11,"variant","","Writes `variant` to the field",997,[[["hour_a",4]],["w",6]]],[11,"am","","AM when CLKREP in 12-hour",997,[[],["w",6]]],[11,"pm","","PM when CLKREP in 12-hour",997,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",997,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",998,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",999,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1000,[[],["w",6]]],[11,"second","atsamd11c::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd11c::rtc::mode2::clock","Bits 0:5 - Second",1001,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",1001,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",1001,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",1001,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",1001,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",1001,[[],["year_r",6]]],[11,"second","atsamd11c::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd11c::rtc::mode2::clock","Bits 0:5 - Second",1002,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",1002,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",1002,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",1002,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",1002,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",1002,[[],["year_w",3]]],[0,"alarm","atsamd11c::rtc::mode2","MODE2 Alarm n Value",null,null],[3,"SECOND_W","atsamd11c::rtc::mode2::alarm","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: Morning hour",1003,null],[13,"PM","","16: Afternoon hour",1003,null],[6,"R","","Reader of register ALARM%s",null,null],[6,"W","","Writer for register ALARM%s",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",1004,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1005,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["hour_a",4],["variant",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd11c::rtc::mode2::alarm","Get enumerated values variant",1006,[[],[["hour_a",4],["variant",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",1006,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",1006,[[]]],[11,"variant","","Writes `variant` to the field",1007,[[["hour_a",4]],["w",6]]],[11,"am","","Morning hour",1007,[[],["w",6]]],[11,"pm","","Afternoon hour",1007,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1007,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1008,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1009,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1010,[[],["w",6]]],[11,"second","atsamd11c::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd11c::rtc::mode2::alarm","Bits 0:5 - Second",1011,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",1011,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",1011,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",1011,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",1011,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",1011,[[],["year_r",6]]],[11,"second","atsamd11c::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd11c::rtc::mode2::alarm","Bits 0:5 - Second",1012,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",1012,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",1012,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",1012,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",1012,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",1012,[[],["year_w",3]]],[0,"mask","atsamd11c::rtc::mode2","MODE2 Alarm n Mask",null,null],[3,"SEL_W","atsamd11c::rtc::mode2::mask","Write proxy for field `SEL`",null,null],[4,"SEL_A","","Alarm Mask Selection",null,null],[13,"OFF","","0: Alarm Disabled",1013,null],[13,"SS","","1: Match seconds only",1013,null],[13,"MMSS","","2: Match seconds and minutes only",1013,null],[13,"HHMMSS","","3: Match seconds, minutes, and hours only",1013,null],[13,"DDHHMMSS","","4: Match seconds, minutes, hours, and days only",1013,null],[13,"MMDDHHMMSS","","5: Match seconds, minutes, hours, days, and months only",1013,null],[13,"YYMMDDHHMMSS","","6: Match seconds, minutes, hours, days, months, and years",1013,null],[6,"R","","Reader of register MASK%s",null,null],[6,"W","","Writer for register MASK%s",null,null],[6,"SEL_R","","Reader of field `SEL`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",6,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",6,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",6,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",6,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",6,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",6,[[]]],[11,"variant","atsamd11c::rtc::mode2::mask","Get enumerated values variant",1014,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1014,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",1014,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",1014,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",1014,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",1014,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",1014,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",1014,[[]]],[11,"variant","","Writes `variant` to the field",1015,[[["sel_a",4]],["w",6]]],[11,"off","","Alarm Disabled",1015,[[],["w",6]]],[11,"ss","","Match seconds only",1015,[[],["w",6]]],[11,"mmss","","Match seconds and minutes only",1015,[[],["w",6]]],[11,"hhmmss","","Match seconds, minutes, and hours only",1015,[[],["w",6]]],[11,"ddhhmmss","","Match seconds, minutes, hours, and days only",1015,[[],["w",6]]],[11,"mmddhhmmss","","Match seconds, minutes, hours, days, and months only",1015,[[],["w",6]]],[11,"yymmddhhmmss","","Match seconds, minutes, hours, days, months, and years",1015,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1015,[[],["w",6]]],[11,"sel","atsamd11c::generic","Bits 0:2 - Alarm Mask Selection",6,[[],["sel_r",6]]],[11,"sel","atsamd11c::rtc::mode2::mask","Bits 0:2 - Alarm Mask Selection",1016,[[],["sel_r",6]]],[11,"sel","atsamd11c::generic","Bits 0:2 - Alarm Mask Selection",7,[[],["sel_w",3]]],[11,"sel","atsamd11c::rtc::mode2::mask","Bits 0:2 - Alarm Mask Selection",1017,[[],["sel_w",3]]],[6,"CTRL","atsamd11c::rtc::mode2","MODE2 Control",null,null],[6,"READREQ","","Read Request",null,null],[6,"EVCTRL","","MODE2 Event Control",null,null],[6,"INTENCLR","","MODE2 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE2 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE2 Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"CLOCK","","MODE2 Clock Value",null,null],[6,"ALARM","","MODE2 Alarm n Value",null,null],[6,"MASK","","MODE2 Alarm n Mask",null,null],[11,"mode2","atsamd11c::rtc","0x00 - Clock/Calendar with Alarm",1018,[[],["mode2",3]]],[11,"mode2_mut","","0x00 - Clock/Calendar with Alarm",1018,[[],["mode2",3]]],[11,"mode1","","0x00 - 16-bit Counter with Two 16-bit Compares",1018,[[],["mode1",3]]],[11,"mode1_mut","","0x00 - 16-bit Counter with Two 16-bit Compares",1018,[[],["mode1",3]]],[11,"mode0","","0x00 - 32-bit Counter with Single 32-bit Compare",1018,[[],["mode0",3]]],[11,"mode0_mut","","0x00 - 32-bit Counter with Single 32-bit Compare",1018,[[],["mode0",3]]],[0,"sercom0","atsamd11c","Serial Communication Interface 0",null,null],[3,"RegisterBlock","atsamd11c::sercom0","Register block",null,null],[3,"I2CM","","Register block",null,null],[12,"ctrla","","0x00 - I2CM Control A",1019,null],[12,"ctrlb","","0x04 - I2CM Control B",1019,null],[12,"baud","","0x0c - I2CM Baud Rate",1019,null],[12,"intenclr","","0x14 - I2CM Interrupt Enable Clear",1019,null],[12,"intenset","","0x16 - I2CM Interrupt Enable Set",1019,null],[12,"intflag","","0x18 - I2CM Interrupt Flag Status and Clear",1019,null],[12,"status","","0x1a - I2CM Status",1019,null],[12,"syncbusy","","0x1c - I2CM Syncbusy",1019,null],[12,"addr","","0x24 - I2CM Address",1019,null],[12,"data","","0x28 - I2CM Data",1019,null],[12,"dbgctrl","","0x30 - I2CM Debug Control",1019,null],[3,"I2CS","","Register block",null,null],[12,"ctrla","","0x00 - I2CS Control A",1020,null],[12,"ctrlb","","0x04 - I2CS Control B",1020,null],[12,"intenclr","","0x14 - I2CS Interrupt Enable Clear",1020,null],[12,"intenset","","0x16 - I2CS Interrupt Enable Set",1020,null],[12,"intflag","","0x18 - I2CS Interrupt Flag Status and Clear",1020,null],[12,"status","","0x1a - I2CS Status",1020,null],[12,"syncbusy","","0x1c - I2CS Syncbusy",1020,null],[12,"addr","","0x24 - I2CS Address",1020,null],[12,"data","","0x28 - I2CS Data",1020,null],[3,"SPI","","Register block",null,null],[12,"ctrla","","0x00 - SPI Control A",1021,null],[12,"ctrlb","","0x04 - SPI Control B",1021,null],[12,"baud","","0x0c - SPI Baud Rate",1021,null],[12,"intenclr","","0x14 - SPI Interrupt Enable Clear",1021,null],[12,"intenset","","0x16 - SPI Interrupt Enable Set",1021,null],[12,"intflag","","0x18 - SPI Interrupt Flag Status and Clear",1021,null],[12,"status","","0x1a - SPI Status",1021,null],[12,"syncbusy","","0x1c - SPI Syncbusy",1021,null],[12,"addr","","0x24 - SPI Address",1021,null],[12,"data","","0x28 - SPI Data",1021,null],[12,"dbgctrl","","0x30 - SPI Debug Control",1021,null],[3,"USART","","Register block",null,null],[12,"ctrla","","0x00 - USART Control A",1022,null],[12,"ctrlb","","0x04 - USART Control B",1022,null],[12,"rxpl","","0x0e - USART Receive Pulse Length",1022,null],[12,"intenclr","","0x14 - USART Interrupt Enable Clear",1022,null],[12,"intenset","","0x16 - USART Interrupt Enable Set",1022,null],[12,"intflag","","0x18 - USART Interrupt Flag Status and Clear",1022,null],[12,"status","","0x1a - USART Status",1022,null],[12,"syncbusy","","0x1c - USART Syncbusy",1022,null],[12,"data","","0x28 - USART Data",1022,null],[12,"dbgctrl","","0x30 - USART Debug Control",1022,null],[0,"i2cm","","Register block I2C Master Mode",null,null],[0,"ctrla","atsamd11c::sercom0::i2cm","I2CM Control A",null,null],[3,"SWRST_W","atsamd11c::sercom0::i2cm::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PINOUT_W","","Write proxy for field `PINOUT`",null,null],[3,"SDAHOLD_W","","Write proxy for field `SDAHOLD`",null,null],[3,"MEXTTOEN_W","","Write proxy for field `MEXTTOEN`",null,null],[3,"SEXTTOEN_W","","Write proxy for field `SEXTTOEN`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"SCLSM_W","","Write proxy for field `SCLSM`",null,null],[3,"INACTOUT_W","","Write proxy for field `INACTOUT`",null,null],[3,"LOWTOUTEN_W","","Write proxy for field `LOWTOUTEN`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1023,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1023,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1023,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1023,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1023,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1023,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PINOUT_R","","Reader of field `PINOUT`",null,null],[6,"SDAHOLD_R","","Reader of field `SDAHOLD`",null,null],[6,"MEXTTOEN_R","","Reader of field `MEXTTOEN`",null,null],[6,"SEXTTOEN_R","","Reader of field `SEXTTOEN`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"SCLSM_R","","Reader of field `SCLSM`",null,null],[6,"INACTOUT_R","","Reader of field `INACTOUT`",null,null],[6,"LOWTOUTEN_R","","Reader of field `LOWTOUTEN`",null,null],[11,"set_bit","","Sets the field bit",1024,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1024,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1024,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1025,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1025,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1025,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd11c::sercom0::i2cm::ctrla","Get enumerated values variant",1026,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1026,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1026,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1026,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1026,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1026,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1026,[[]]],[11,"variant","","Writes `variant` to the field",1027,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1027,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1027,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1027,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1027,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1027,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1027,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1027,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1028,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1028,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1028,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1029,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1029,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1029,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1030,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1031,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1031,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1031,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1032,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1032,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1032,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1033,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1034,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1034,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1034,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1036,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",6,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",6,[[],["sdahold_r",6]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",6,[[],["mexttoen_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",6,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",6,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",6,[[],["sclsm_r",6]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",6,[[],["inactout_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",6,[[],["lowtouten_r",6]]],[11,"swrst","atsamd11c::sercom0::i2cm::ctrla","Bit 0 - Software Reset",1037,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1037,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1037,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run in Standby",1037,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",1037,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1037,[[],["sdahold_r",6]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",1037,[[],["mexttoen_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1037,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",1037,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1037,[[],["sclsm_r",6]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",1037,[[],["inactout_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1037,[[],["lowtouten_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",7,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",7,[[],["sdahold_w",3]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",7,[[],["mexttoen_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",7,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",7,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",7,[[],["sclsm_w",3]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",7,[[],["inactout_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",7,[[],["lowtouten_w",3]]],[11,"swrst","atsamd11c::sercom0::i2cm::ctrla","Bit 0 - Software Reset",1038,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1038,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1038,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run in Standby",1038,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",1038,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1038,[[],["sdahold_w",3]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",1038,[[],["mexttoen_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1038,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",1038,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1038,[[],["sclsm_w",3]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",1038,[[],["inactout_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1038,[[],["lowtouten_w",3]]],[0,"ctrlb","atsamd11c::sercom0::i2cm","I2CM Control B",null,null],[3,"SMEN_W","atsamd11c::sercom0::i2cm::ctrlb","Write proxy for field `SMEN`",null,null],[3,"QCEN_W","","Write proxy for field `QCEN`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[3,"ACKACT_W","","Write proxy for field `ACKACT`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"SMEN_R","","Reader of field `SMEN`",null,null],[6,"QCEN_R","","Reader of field `QCEN`",null,null],[6,"ACKACT_R","","Reader of field `ACKACT`",null,null],[11,"set_bit","","Sets the field bit",1039,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1039,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1040,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1041,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1042,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1042,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1042,[[],["w",6]]],[11,"smen","atsamd11c::generic","Bit 8 - Smart Mode Enable",6,[[],["smen_r",6]]],[11,"qcen","","Bit 9 - Quick Command Enable",6,[[],["qcen_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",6,[[],["ackact_r",6]]],[11,"smen","atsamd11c::sercom0::i2cm::ctrlb","Bit 8 - Smart Mode Enable",1043,[[],["smen_r",6]]],[11,"qcen","","Bit 9 - Quick Command Enable",1043,[[],["qcen_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",1043,[[],["ackact_r",6]]],[11,"smen","atsamd11c::generic","Bit 8 - Smart Mode Enable",7,[[],["smen_w",3]]],[11,"qcen","","Bit 9 - Quick Command Enable",7,[[],["qcen_w",3]]],[11,"cmd","","Bits 16:17 - Command",7,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",7,[[],["ackact_w",3]]],[11,"smen","atsamd11c::sercom0::i2cm::ctrlb","Bit 8 - Smart Mode Enable",1044,[[],["smen_w",3]]],[11,"qcen","","Bit 9 - Quick Command Enable",1044,[[],["qcen_w",3]]],[11,"cmd","","Bits 16:17 - Command",1044,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",1044,[[],["ackact_w",3]]],[0,"baud","atsamd11c::sercom0::i2cm","I2CM Baud Rate",null,null],[3,"BAUD_W","atsamd11c::sercom0::i2cm::baud","Write proxy for field `BAUD`",null,null],[3,"BAUDLOW_W","","Write proxy for field `BAUDLOW`",null,null],[3,"HSBAUD_W","","Write proxy for field `HSBAUD`",null,null],[3,"HSBAUDLOW_W","","Write proxy for field `HSBAUDLOW`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"BAUDLOW_R","","Reader of field `BAUDLOW`",null,null],[6,"HSBAUD_R","","Reader of field `HSBAUD`",null,null],[6,"HSBAUDLOW_R","","Reader of field `HSBAUDLOW`",null,null],[11,"bits","","Writes raw bits to the field",1045,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1046,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1047,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1048,[[],["w",6]]],[11,"baud","atsamd11c::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",6,[[],["baudlow_r",6]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",6,[[],["hsbaud_r",6]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",6,[[],["hsbaudlow_r",6]]],[11,"baud","atsamd11c::sercom0::i2cm::baud","Bits 0:7 - Baud Rate Value",1049,[[],["baud_r",6]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",1049,[[],["baudlow_r",6]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",1049,[[],["hsbaud_r",6]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",1049,[[],["hsbaudlow_r",6]]],[11,"baud","atsamd11c::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",7,[[],["baudlow_w",3]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",7,[[],["hsbaud_w",3]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",7,[[],["hsbaudlow_w",3]]],[11,"baud","atsamd11c::sercom0::i2cm::baud","Bits 0:7 - Baud Rate Value",1050,[[],["baud_w",3]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",1050,[[],["baudlow_w",3]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",1050,[[],["hsbaud_w",3]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",1050,[[],["hsbaudlow_w",3]]],[0,"intenclr","atsamd11c::sercom0::i2cm","I2CM Interrupt Enable Clear",null,null],[3,"MB_W","atsamd11c::sercom0::i2cm::intenclr","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1051,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1051,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1051,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1052,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1052,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1052,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1053,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1053,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1053,[[],["w",6]]],[11,"mb","atsamd11c::generic","Bit 0 - Master On Bus Interrupt Disable",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"mb","atsamd11c::sercom0::i2cm::intenclr","Bit 0 - Master On Bus Interrupt Disable",1054,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",1054,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1054,[[],["error_r",6]]],[11,"mb","atsamd11c::generic","Bit 0 - Master On Bus Interrupt Disable",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"mb","atsamd11c::sercom0::i2cm::intenclr","Bit 0 - Master On Bus Interrupt Disable",1055,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",1055,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1055,[[],["error_w",3]]],[0,"intenset","atsamd11c::sercom0::i2cm","I2CM Interrupt Enable Set",null,null],[3,"MB_W","atsamd11c::sercom0::i2cm::intenset","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1056,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1056,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1056,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1057,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1057,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1057,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1058,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1058,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1058,[[],["w",6]]],[11,"mb","atsamd11c::generic","Bit 0 - Master On Bus Interrupt Enable",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"mb","atsamd11c::sercom0::i2cm::intenset","Bit 0 - Master On Bus Interrupt Enable",1059,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",1059,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1059,[[],["error_r",6]]],[11,"mb","atsamd11c::generic","Bit 0 - Master On Bus Interrupt Enable",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"mb","atsamd11c::sercom0::i2cm::intenset","Bit 0 - Master On Bus Interrupt Enable",1060,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",1060,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1060,[[],["error_w",3]]],[0,"intflag","atsamd11c::sercom0::i2cm","I2CM Interrupt Flag Status and Clear",null,null],[3,"MB_W","atsamd11c::sercom0::i2cm::intflag","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1061,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1061,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1061,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1062,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1062,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1062,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1063,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1063,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1063,[[],["w",6]]],[11,"mb","atsamd11c::generic","Bit 0 - Master On Bus Interrupt",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"mb","atsamd11c::sercom0::i2cm::intflag","Bit 0 - Master On Bus Interrupt",1064,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",1064,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1064,[[],["error_r",6]]],[11,"mb","atsamd11c::generic","Bit 0 - Master On Bus Interrupt",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"mb","atsamd11c::sercom0::i2cm::intflag","Bit 0 - Master On Bus Interrupt",1065,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",1065,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1065,[[],["error_w",3]]],[0,"status","atsamd11c::sercom0::i2cm","I2CM Status",null,null],[3,"BUSERR_W","atsamd11c::sercom0::i2cm::status","Write proxy for field `BUSERR`",null,null],[3,"ARBLOST_W","","Write proxy for field `ARBLOST`",null,null],[3,"BUSSTATE_W","","Write proxy for field `BUSSTATE`",null,null],[3,"LOWTOUT_W","","Write proxy for field `LOWTOUT`",null,null],[3,"MEXTTOUT_W","","Write proxy for field `MEXTTOUT`",null,null],[3,"SEXTTOUT_W","","Write proxy for field `SEXTTOUT`",null,null],[3,"LENERR_W","","Write proxy for field `LENERR`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSERR_R","","Reader of field `BUSERR`",null,null],[6,"ARBLOST_R","","Reader of field `ARBLOST`",null,null],[6,"RXNACK_R","","Reader of field `RXNACK`",null,null],[6,"BUSSTATE_R","","Reader of field `BUSSTATE`",null,null],[6,"LOWTOUT_R","","Reader of field `LOWTOUT`",null,null],[6,"CLKHOLD_R","","Reader of field `CLKHOLD`",null,null],[6,"MEXTTOUT_R","","Reader of field `MEXTTOUT`",null,null],[6,"SEXTTOUT_R","","Reader of field `SEXTTOUT`",null,null],[6,"LENERR_R","","Reader of field `LENERR`",null,null],[11,"set_bit","","Sets the field bit",1066,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1066,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1066,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1067,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1068,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1069,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1069,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1069,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1070,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1070,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1070,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1071,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1071,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1071,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1072,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1072,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1072,[[],["w",6]]],[11,"buserr","atsamd11c::generic","Bit 0 - Bus Error",6,[[],["buserr_r",6]]],[11,"arblost","","Bit 1 - Arbitration Lost",6,[[],["arblost_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",6,[[],["rxnack_r",6]]],[11,"busstate","","Bits 4:5 - Bus State",6,[[],["busstate_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",6,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",6,[[],["clkhold_r",6]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",6,[[],["mexttout_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",6,[[],["sexttout_r",6]]],[11,"lenerr","","Bit 10 - Length Error",6,[[],["lenerr_r",6]]],[11,"buserr","atsamd11c::sercom0::i2cm::status","Bit 0 - Bus Error",1073,[[],["buserr_r",6]]],[11,"arblost","","Bit 1 - Arbitration Lost",1073,[[],["arblost_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",1073,[[],["rxnack_r",6]]],[11,"busstate","","Bits 4:5 - Bus State",1073,[[],["busstate_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1073,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",1073,[[],["clkhold_r",6]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",1073,[[],["mexttout_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1073,[[],["sexttout_r",6]]],[11,"lenerr","","Bit 10 - Length Error",1073,[[],["lenerr_r",6]]],[11,"buserr","atsamd11c::generic","Bit 0 - Bus Error",7,[[],["buserr_w",3]]],[11,"arblost","","Bit 1 - Arbitration Lost",7,[[],["arblost_w",3]]],[11,"busstate","","Bits 4:5 - Bus State",7,[[],["busstate_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",7,[[],["lowtout_w",3]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",7,[[],["mexttout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",7,[[],["sexttout_w",3]]],[11,"lenerr","","Bit 10 - Length Error",7,[[],["lenerr_w",3]]],[11,"buserr","atsamd11c::sercom0::i2cm::status","Bit 0 - Bus Error",1074,[[],["buserr_w",3]]],[11,"arblost","","Bit 1 - Arbitration Lost",1074,[[],["arblost_w",3]]],[11,"busstate","","Bits 4:5 - Bus State",1074,[[],["busstate_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1074,[[],["lowtout_w",3]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",1074,[[],["mexttout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1074,[[],["sexttout_w",3]]],[11,"lenerr","","Bit 10 - Length Error",1074,[[],["lenerr_w",3]]],[0,"syncbusy","atsamd11c::sercom0::i2cm","I2CM Syncbusy",null,null],[6,"R","atsamd11c::sercom0::i2cm::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SYSOP_R","","Reader of field `SYSOP`",null,null],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"sysop","","Bit 2 - System Operation Synchronization Busy",6,[[],["sysop_r",6]]],[11,"swrst","atsamd11c::sercom0::i2cm::syncbusy","Bit 0 - Software Reset Synchronization Busy",1075,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1075,[[],["enable_r",6]]],[11,"sysop","","Bit 2 - System Operation Synchronization Busy",1075,[[],["sysop_r",6]]],[0,"addr","atsamd11c::sercom0::i2cm","I2CM Address",null,null],[3,"ADDR_W","atsamd11c::sercom0::i2cm::addr","Write proxy for field `ADDR`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[3,"HS_W","","Write proxy for field `HS`",null,null],[3,"TENBITEN_W","","Write proxy for field `TENBITEN`",null,null],[3,"LEN_W","","Write proxy for field `LEN`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[6,"HS_R","","Reader of field `HS`",null,null],[6,"TENBITEN_R","","Reader of field `TENBITEN`",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[11,"bits","","Writes raw bits to the field",1076,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1077,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1077,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1077,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1078,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1078,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1078,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1079,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1079,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1079,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1080,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:10 - Address Value",6,[[],["addr_r",6]]],[11,"lenen","","Bit 13 - Length Enable",6,[[],["lenen_r",6]]],[11,"hs","","Bit 14 - High Speed Mode",6,[[],["hs_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",6,[[],["tenbiten_r",6]]],[11,"len","","Bits 16:23 - Length",6,[[],["len_r",6]]],[11,"addr","atsamd11c::sercom0::i2cm::addr","Bits 0:10 - Address Value",1081,[[],["addr_r",6]]],[11,"lenen","","Bit 13 - Length Enable",1081,[[],["lenen_r",6]]],[11,"hs","","Bit 14 - High Speed Mode",1081,[[],["hs_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1081,[[],["tenbiten_r",6]]],[11,"len","","Bits 16:23 - Length",1081,[[],["len_r",6]]],[11,"addr","atsamd11c::generic","Bits 0:10 - Address Value",7,[[],["addr_w",3]]],[11,"lenen","","Bit 13 - Length Enable",7,[[],["lenen_w",3]]],[11,"hs","","Bit 14 - High Speed Mode",7,[[],["hs_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",7,[[],["tenbiten_w",3]]],[11,"len","","Bits 16:23 - Length",7,[[],["len_w",3]]],[11,"addr","atsamd11c::sercom0::i2cm::addr","Bits 0:10 - Address Value",1082,[[],["addr_w",3]]],[11,"lenen","","Bit 13 - Length Enable",1082,[[],["lenen_w",3]]],[11,"hs","","Bit 14 - High Speed Mode",1082,[[],["hs_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1082,[[],["tenbiten_w",3]]],[11,"len","","Bits 16:23 - Length",1082,[[],["len_w",3]]],[0,"data","atsamd11c::sercom0::i2cm","I2CM Data",null,null],[3,"DATA_W","atsamd11c::sercom0::i2cm::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1083,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:7 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd11c::sercom0::i2cm::data","Bits 0:7 - Data Value",1084,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:7 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd11c::sercom0::i2cm::data","Bits 0:7 - Data Value",1085,[[],["data_w",3]]],[0,"dbgctrl","atsamd11c::sercom0::i2cm","I2CM Debug Control",null,null],[3,"DBGSTOP_W","atsamd11c::sercom0::i2cm::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",1086,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1086,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1086,[[],["w",6]]],[11,"dbgstop","atsamd11c::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd11c::sercom0::i2cm::dbgctrl","Bit 0 - Debug Mode",1087,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd11c::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd11c::sercom0::i2cm::dbgctrl","Bit 0 - Debug Mode",1088,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd11c::sercom0::i2cm","I2CM Control A",null,null],[6,"CTRLB","","I2CM Control B",null,null],[6,"BAUD","","I2CM Baud Rate",null,null],[6,"INTENCLR","","I2CM Interrupt Enable Clear",null,null],[6,"INTENSET","","I2CM Interrupt Enable Set",null,null],[6,"INTFLAG","","I2CM Interrupt Flag Status and Clear",null,null],[6,"STATUS","","I2CM Status",null,null],[6,"SYNCBUSY","","I2CM Syncbusy",null,null],[6,"ADDR","","I2CM Address",null,null],[6,"DATA","","I2CM Data",null,null],[6,"DBGCTRL","","I2CM Debug Control",null,null],[0,"i2cs","atsamd11c::sercom0","Register block I2C Slave Mode",null,null],[0,"ctrla","atsamd11c::sercom0::i2cs","I2CS Control A",null,null],[3,"SWRST_W","atsamd11c::sercom0::i2cs::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PINOUT_W","","Write proxy for field `PINOUT`",null,null],[3,"SDAHOLD_W","","Write proxy for field `SDAHOLD`",null,null],[3,"SEXTTOEN_W","","Write proxy for field `SEXTTOEN`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"SCLSM_W","","Write proxy for field `SCLSM`",null,null],[3,"LOWTOUTEN_W","","Write proxy for field `LOWTOUTEN`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1089,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1089,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1089,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1089,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1089,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1089,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PINOUT_R","","Reader of field `PINOUT`",null,null],[6,"SDAHOLD_R","","Reader of field `SDAHOLD`",null,null],[6,"SEXTTOEN_R","","Reader of field `SEXTTOEN`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"SCLSM_R","","Reader of field `SCLSM`",null,null],[6,"LOWTOUTEN_R","","Reader of field `LOWTOUTEN`",null,null],[11,"set_bit","","Sets the field bit",1090,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1090,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1090,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1091,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1091,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1091,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd11c::sercom0::i2cs::ctrla","Get enumerated values variant",1092,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1092,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1092,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1092,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1092,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1092,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1092,[[]]],[11,"variant","","Writes `variant` to the field",1093,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1093,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1093,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1093,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1093,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1093,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1093,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1093,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1094,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1094,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1094,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1095,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1095,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1095,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1097,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1098,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1099,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1099,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1099,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1100,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1100,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1100,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",6,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",6,[[],["sdahold_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",6,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",6,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",6,[[],["sclsm_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",6,[[],["lowtouten_r",6]]],[11,"swrst","atsamd11c::sercom0::i2cs::ctrla","Bit 0 - Software Reset",1101,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1101,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1101,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",1101,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",1101,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1101,[[],["sdahold_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1101,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",1101,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1101,[[],["sclsm_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1101,[[],["lowtouten_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",7,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",7,[[],["sdahold_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",7,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",7,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",7,[[],["sclsm_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",7,[[],["lowtouten_w",3]]],[11,"swrst","atsamd11c::sercom0::i2cs::ctrla","Bit 0 - Software Reset",1102,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1102,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1102,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",1102,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",1102,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",1102,[[],["sdahold_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",1102,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",1102,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",1102,[[],["sclsm_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",1102,[[],["lowtouten_w",3]]],[0,"ctrlb","atsamd11c::sercom0::i2cs","I2CS Control B",null,null],[3,"SMEN_W","atsamd11c::sercom0::i2cs::ctrlb","Write proxy for field `SMEN`",null,null],[3,"GCMD_W","","Write proxy for field `GCMD`",null,null],[3,"AACKEN_W","","Write proxy for field `AACKEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[3,"ACKACT_W","","Write proxy for field `ACKACT`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"SMEN_R","","Reader of field `SMEN`",null,null],[6,"GCMD_R","","Reader of field `GCMD`",null,null],[6,"AACKEN_R","","Reader of field `AACKEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"ACKACT_R","","Reader of field `ACKACT`",null,null],[11,"set_bit","","Sets the field bit",1103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1105,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1106,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1107,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1108,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1108,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1108,[[],["w",6]]],[11,"smen","atsamd11c::generic","Bit 8 - Smart Mode Enable",6,[[],["smen_r",6]]],[11,"gcmd","","Bit 9 - PMBus Group Command",6,[[],["gcmd_r",6]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",6,[[],["aacken_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",6,[[],["ackact_r",6]]],[11,"smen","atsamd11c::sercom0::i2cs::ctrlb","Bit 8 - Smart Mode Enable",1109,[[],["smen_r",6]]],[11,"gcmd","","Bit 9 - PMBus Group Command",1109,[[],["gcmd_r",6]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",1109,[[],["aacken_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",1109,[[],["amode_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",1109,[[],["ackact_r",6]]],[11,"smen","atsamd11c::generic","Bit 8 - Smart Mode Enable",7,[[],["smen_w",3]]],[11,"gcmd","","Bit 9 - PMBus Group Command",7,[[],["gcmd_w",3]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",7,[[],["aacken_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"cmd","","Bits 16:17 - Command",7,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",7,[[],["ackact_w",3]]],[11,"smen","atsamd11c::sercom0::i2cs::ctrlb","Bit 8 - Smart Mode Enable",1110,[[],["smen_w",3]]],[11,"gcmd","","Bit 9 - PMBus Group Command",1110,[[],["gcmd_w",3]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",1110,[[],["aacken_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",1110,[[],["amode_w",3]]],[11,"cmd","","Bits 16:17 - Command",1110,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",1110,[[],["ackact_w",3]]],[0,"intenclr","atsamd11c::sercom0::i2cs","I2CS Interrupt Enable Clear",null,null],[3,"PREC_W","atsamd11c::sercom0::i2cs::intenclr","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1111,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1111,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1111,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1112,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1112,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1112,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1113,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1113,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1113,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1114,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1114,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1114,[[],["w",6]]],[11,"prec","atsamd11c::generic","Bit 0 - Stop Received Interrupt Disable",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"prec","atsamd11c::sercom0::i2cs::intenclr","Bit 0 - Stop Received Interrupt Disable",1115,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",1115,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",1115,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1115,[[],["error_r",6]]],[11,"prec","atsamd11c::generic","Bit 0 - Stop Received Interrupt Disable",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"prec","atsamd11c::sercom0::i2cs::intenclr","Bit 0 - Stop Received Interrupt Disable",1116,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",1116,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",1116,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1116,[[],["error_w",3]]],[0,"intenset","atsamd11c::sercom0::i2cs","I2CS Interrupt Enable Set",null,null],[3,"PREC_W","atsamd11c::sercom0::i2cs::intenset","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1117,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1117,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1117,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1118,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1118,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1118,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1119,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1119,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1119,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1120,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1120,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1120,[[],["w",6]]],[11,"prec","atsamd11c::generic","Bit 0 - Stop Received Interrupt Enable",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"prec","atsamd11c::sercom0::i2cs::intenset","Bit 0 - Stop Received Interrupt Enable",1121,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",1121,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",1121,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1121,[[],["error_r",6]]],[11,"prec","atsamd11c::generic","Bit 0 - Stop Received Interrupt Enable",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"prec","atsamd11c::sercom0::i2cs::intenset","Bit 0 - Stop Received Interrupt Enable",1122,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",1122,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",1122,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1122,[[],["error_w",3]]],[0,"intflag","atsamd11c::sercom0::i2cs","I2CS Interrupt Flag Status and Clear",null,null],[3,"PREC_W","atsamd11c::sercom0::i2cs::intflag","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1123,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1123,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1123,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1124,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1124,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1124,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1126,[[],["w",6]]],[11,"prec","atsamd11c::generic","Bit 0 - Stop Received Interrupt",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"prec","atsamd11c::sercom0::i2cs::intflag","Bit 0 - Stop Received Interrupt",1127,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt",1127,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt",1127,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1127,[[],["error_r",6]]],[11,"prec","atsamd11c::generic","Bit 0 - Stop Received Interrupt",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"prec","atsamd11c::sercom0::i2cs::intflag","Bit 0 - Stop Received Interrupt",1128,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt",1128,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt",1128,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1128,[[],["error_w",3]]],[0,"status","atsamd11c::sercom0::i2cs","I2CS Status",null,null],[3,"BUSERR_W","atsamd11c::sercom0::i2cs::status","Write proxy for field `BUSERR`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[3,"LOWTOUT_W","","Write proxy for field `LOWTOUT`",null,null],[3,"SEXTTOUT_W","","Write proxy for field `SEXTTOUT`",null,null],[3,"HS_W","","Write proxy for field `HS`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSERR_R","","Reader of field `BUSERR`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[6,"RXNACK_R","","Reader of field `RXNACK`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"SR_R","","Reader of field `SR`",null,null],[6,"LOWTOUT_R","","Reader of field `LOWTOUT`",null,null],[6,"CLKHOLD_R","","Reader of field `CLKHOLD`",null,null],[6,"SEXTTOUT_R","","Reader of field `SEXTTOUT`",null,null],[6,"HS_R","","Reader of field `HS`",null,null],[11,"set_bit","","Sets the field bit",1129,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1129,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1129,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1130,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1130,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1130,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1131,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1131,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1131,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1132,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1132,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1132,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1133,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1133,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1133,[[],["w",6]]],[11,"buserr","atsamd11c::generic","Bit 0 - Bus Error",6,[[],["buserr_r",6]]],[11,"coll","","Bit 1 - Transmit Collision",6,[[],["coll_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",6,[[],["rxnack_r",6]]],[11,"dir","","Bit 3 - Read/Write Direction",6,[[],["dir_r",6]]],[11,"sr","","Bit 4 - Repeated Start",6,[[],["sr_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",6,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",6,[[],["clkhold_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",6,[[],["sexttout_r",6]]],[11,"hs","","Bit 10 - High Speed",6,[[],["hs_r",6]]],[11,"buserr","atsamd11c::sercom0::i2cs::status","Bit 0 - Bus Error",1134,[[],["buserr_r",6]]],[11,"coll","","Bit 1 - Transmit Collision",1134,[[],["coll_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",1134,[[],["rxnack_r",6]]],[11,"dir","","Bit 3 - Read/Write Direction",1134,[[],["dir_r",6]]],[11,"sr","","Bit 4 - Repeated Start",1134,[[],["sr_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1134,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",1134,[[],["clkhold_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1134,[[],["sexttout_r",6]]],[11,"hs","","Bit 10 - High Speed",1134,[[],["hs_r",6]]],[11,"buserr","atsamd11c::generic","Bit 0 - Bus Error",7,[[],["buserr_w",3]]],[11,"coll","","Bit 1 - Transmit Collision",7,[[],["coll_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",7,[[],["lowtout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",7,[[],["sexttout_w",3]]],[11,"hs","","Bit 10 - High Speed",7,[[],["hs_w",3]]],[11,"buserr","atsamd11c::sercom0::i2cs::status","Bit 0 - Bus Error",1135,[[],["buserr_w",3]]],[11,"coll","","Bit 1 - Transmit Collision",1135,[[],["coll_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",1135,[[],["lowtout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",1135,[[],["sexttout_w",3]]],[11,"hs","","Bit 10 - High Speed",1135,[[],["hs_w",3]]],[0,"syncbusy","atsamd11c::sercom0::i2cs","I2CS Syncbusy",null,null],[6,"R","atsamd11c::sercom0::i2cs::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd11c::sercom0::i2cs::syncbusy","Bit 0 - Software Reset Synchronization Busy",1136,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1136,[[],["enable_r",6]]],[0,"addr","atsamd11c::sercom0::i2cs","I2CS Address",null,null],[3,"GENCEN_W","atsamd11c::sercom0::i2cs::addr","Write proxy for field `GENCEN`",null,null],[3,"ADDR_W","","Write proxy for field `ADDR`",null,null],[3,"TENBITEN_W","","Write proxy for field `TENBITEN`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"GENCEN_R","","Reader of field `GENCEN`",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"TENBITEN_R","","Reader of field `TENBITEN`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"set_bit","","Sets the field bit",1137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1137,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1138,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1139,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1139,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1139,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1140,[[],["w",6]]],[11,"gencen","atsamd11c::generic","Bit 0 - General Call Address Enable",6,[[],["gencen_r",6]]],[11,"addr","","Bits 1:10 - Address Value",6,[[],["addr_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",6,[[],["tenbiten_r",6]]],[11,"addrmask","","Bits 17:26 - Address Mask",6,[[],["addrmask_r",6]]],[11,"gencen","atsamd11c::sercom0::i2cs::addr","Bit 0 - General Call Address Enable",1141,[[],["gencen_r",6]]],[11,"addr","","Bits 1:10 - Address Value",1141,[[],["addr_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1141,[[],["tenbiten_r",6]]],[11,"addrmask","","Bits 17:26 - Address Mask",1141,[[],["addrmask_r",6]]],[11,"gencen","atsamd11c::generic","Bit 0 - General Call Address Enable",7,[[],["gencen_w",3]]],[11,"addr","","Bits 1:10 - Address Value",7,[[],["addr_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",7,[[],["tenbiten_w",3]]],[11,"addrmask","","Bits 17:26 - Address Mask",7,[[],["addrmask_w",3]]],[11,"gencen","atsamd11c::sercom0::i2cs::addr","Bit 0 - General Call Address Enable",1142,[[],["gencen_w",3]]],[11,"addr","","Bits 1:10 - Address Value",1142,[[],["addr_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",1142,[[],["tenbiten_w",3]]],[11,"addrmask","","Bits 17:26 - Address Mask",1142,[[],["addrmask_w",3]]],[0,"data","atsamd11c::sercom0::i2cs","I2CS Data",null,null],[3,"DATA_W","atsamd11c::sercom0::i2cs::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1143,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:7 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd11c::sercom0::i2cs::data","Bits 0:7 - Data Value",1144,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:7 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd11c::sercom0::i2cs::data","Bits 0:7 - Data Value",1145,[[],["data_w",3]]],[6,"CTRLA","atsamd11c::sercom0::i2cs","I2CS Control A",null,null],[6,"CTRLB","","I2CS Control B",null,null],[6,"INTENCLR","","I2CS Interrupt Enable Clear",null,null],[6,"INTENSET","","I2CS Interrupt Enable Set",null,null],[6,"INTFLAG","","I2CS Interrupt Flag Status and Clear",null,null],[6,"STATUS","","I2CS Status",null,null],[6,"SYNCBUSY","","I2CS Syncbusy",null,null],[6,"ADDR","","I2CS Address",null,null],[6,"DATA","","I2CS Data",null,null],[0,"spi","atsamd11c::sercom0","Register block SPI Mode",null,null],[0,"ctrla","atsamd11c::sercom0::spi","SPI Control A",null,null],[3,"SWRST_W","atsamd11c::sercom0::spi::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"DOPO_W","","Write proxy for field `DOPO`",null,null],[3,"DIPO_W","","Write proxy for field `DIPO`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CPHA_W","","Write proxy for field `CPHA`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1146,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1146,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1146,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1146,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1146,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1146,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"DOPO_R","","Reader of field `DOPO`",null,null],[6,"DIPO_R","","Reader of field `DIPO`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CPHA_R","","Reader of field `CPHA`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",1147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1148,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd11c::sercom0::spi::ctrla","Get enumerated values variant",1149,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1149,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1149,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1149,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1149,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1149,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1149,[[]]],[11,"variant","","Writes `variant` to the field",1150,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1150,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1150,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1150,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1150,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1150,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1150,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1150,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1151,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1151,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1151,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1152,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1152,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1152,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1153,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1154,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1156,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1157,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1157,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1157,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1158,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1158,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1158,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",6,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",6,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",6,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd11c::sercom0::spi::ctrla","Bit 0 - Software Reset",1159,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1159,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1159,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",1159,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1159,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",1159,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",1159,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",1159,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",1159,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",1159,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",1159,[[],["dord_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",7,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",7,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",7,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd11c::sercom0::spi::ctrla","Bit 0 - Software Reset",1160,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1160,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1160,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",1160,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1160,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",1160,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",1160,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",1160,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",1160,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",1160,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",1160,[[],["dord_w",3]]],[0,"ctrlb","atsamd11c::sercom0::spi","SPI Control B",null,null],[3,"CHSIZE_W","atsamd11c::sercom0::spi::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"PLOADEN_W","","Write proxy for field `PLOADEN`",null,null],[3,"SSDE_W","","Write proxy for field `SSDE`",null,null],[3,"MSSEN_W","","Write proxy for field `MSSEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"PLOADEN_R","","Reader of field `PLOADEN`",null,null],[6,"SSDE_R","","Reader of field `SSDE`",null,null],[6,"MSSEN_R","","Reader of field `MSSEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[11,"bits","","Writes raw bits to the field",1161,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1162,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1162,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1162,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1163,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1163,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1163,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1164,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1164,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1164,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1165,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1166,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1166,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1166,[[],["w",6]]],[11,"chsize","atsamd11c::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",6,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",6,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",6,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"chsize","atsamd11c::sercom0::spi::ctrlb","Bits 0:2 - Character Size",1167,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",1167,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",1167,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",1167,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",1167,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",1167,[[],["rxen_r",6]]],[11,"chsize","atsamd11c::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",7,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",7,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",7,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"chsize","atsamd11c::sercom0::spi::ctrlb","Bits 0:2 - Character Size",1168,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",1168,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",1168,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",1168,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",1168,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",1168,[[],["rxen_w",3]]],[0,"baud","atsamd11c::sercom0::spi","SPI Baud Rate",null,null],[3,"BAUD_W","atsamd11c::sercom0::spi::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",1169,[[],["w",6]]],[11,"baud","atsamd11c::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd11c::sercom0::spi::baud","Bits 0:7 - Baud Rate Value",1170,[[],["baud_r",6]]],[11,"baud","atsamd11c::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd11c::sercom0::spi::baud","Bits 0:7 - Baud Rate Value",1171,[[],["baud_w",3]]],[0,"intenclr","atsamd11c::sercom0::spi","SPI Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd11c::sercom0::spi::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1172,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1172,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1172,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1173,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1173,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1173,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1174,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1174,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1174,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1175,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1175,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1175,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1176,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1176,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1176,[[],["w",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd11c::sercom0::spi::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1177,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1177,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1177,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",1177,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1177,[[],["error_r",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd11c::sercom0::spi::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1178,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1178,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1178,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",1178,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1178,[[],["error_w",3]]],[0,"intenset","atsamd11c::sercom0::spi","SPI Interrupt Enable Set",null,null],[3,"DRE_W","atsamd11c::sercom0::spi::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1179,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1179,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1179,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1180,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1180,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1180,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1181,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1181,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1183,[[],["w",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd11c::sercom0::spi::intenset","Bit 0 - Data Register Empty Interrupt Enable",1184,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1184,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1184,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",1184,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1184,[[],["error_r",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd11c::sercom0::spi::intenset","Bit 0 - Data Register Empty Interrupt Enable",1185,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1185,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1185,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",1185,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1185,[[],["error_w",3]]],[0,"intflag","atsamd11c::sercom0::spi","SPI Interrupt Flag Status and Clear",null,null],[3,"TXC_W","atsamd11c::sercom0::spi::intflag","Write proxy for field `TXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1186,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1186,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1186,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1187,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1188,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1188,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1188,[[],["w",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd11c::sercom0::spi::intflag","Bit 0 - Data Register Empty Interrupt",1189,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",1189,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",1189,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",1189,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1189,[[],["error_r",6]]],[11,"txc","atsamd11c::generic","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"txc","atsamd11c::sercom0::spi::intflag","Bit 1 - Transmit Complete Interrupt",1190,[[],["txc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",1190,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1190,[[],["error_w",3]]],[0,"status","atsamd11c::sercom0::spi","SPI Status",null,null],[3,"BUFOVF_W","atsamd11c::sercom0::spi::status","Write proxy for field `BUFOVF`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[11,"set_bit","","Sets the field bit",1191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1191,[[],["w",6]]],[11,"bufovf","atsamd11c::generic","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"bufovf","atsamd11c::sercom0::spi::status","Bit 2 - Buffer Overflow",1192,[[],["bufovf_r",6]]],[11,"bufovf","atsamd11c::generic","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"bufovf","atsamd11c::sercom0::spi::status","Bit 2 - Buffer Overflow",1193,[[],["bufovf_w",3]]],[0,"syncbusy","atsamd11c::sercom0::spi","SPI Syncbusy",null,null],[6,"R","atsamd11c::sercom0::spi::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"swrst","atsamd11c::sercom0::spi::syncbusy","Bit 0 - Software Reset Synchronization Busy",1194,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1194,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",1194,[[],["ctrlb_r",6]]],[0,"addr","atsamd11c::sercom0::spi","SPI Address",null,null],[3,"ADDR_W","atsamd11c::sercom0::spi::addr","Write proxy for field `ADDR`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"bits","","Writes raw bits to the field",1195,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1196,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:7 - Address Value",6,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",6,[[],["addrmask_r",6]]],[11,"addr","atsamd11c::sercom0::spi::addr","Bits 0:7 - Address Value",1197,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",1197,[[],["addrmask_r",6]]],[11,"addr","atsamd11c::generic","Bits 0:7 - Address Value",7,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",7,[[],["addrmask_w",3]]],[11,"addr","atsamd11c::sercom0::spi::addr","Bits 0:7 - Address Value",1198,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",1198,[[],["addrmask_w",3]]],[0,"data","atsamd11c::sercom0::spi","SPI Data",null,null],[3,"DATA_W","atsamd11c::sercom0::spi::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1199,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:8 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd11c::sercom0::spi::data","Bits 0:8 - Data Value",1200,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:8 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd11c::sercom0::spi::data","Bits 0:8 - Data Value",1201,[[],["data_w",3]]],[0,"dbgctrl","atsamd11c::sercom0::spi","SPI Debug Control",null,null],[3,"DBGSTOP_W","atsamd11c::sercom0::spi::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",1202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1202,[[],["w",6]]],[11,"dbgstop","atsamd11c::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd11c::sercom0::spi::dbgctrl","Bit 0 - Debug Mode",1203,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd11c::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd11c::sercom0::spi::dbgctrl","Bit 0 - Debug Mode",1204,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd11c::sercom0::spi","SPI Control A",null,null],[6,"CTRLB","","SPI Control B",null,null],[6,"BAUD","","SPI Baud Rate",null,null],[6,"INTENCLR","","SPI Interrupt Enable Clear",null,null],[6,"INTENSET","","SPI Interrupt Enable Set",null,null],[6,"INTFLAG","","SPI Interrupt Flag Status and Clear",null,null],[6,"STATUS","","SPI Status",null,null],[6,"SYNCBUSY","","SPI Syncbusy",null,null],[6,"ADDR","","SPI Address",null,null],[6,"DATA","","SPI Data",null,null],[6,"DBGCTRL","","SPI Debug Control",null,null],[0,"usart","atsamd11c::sercom0","Register block USART Mode",null,null],[0,"ctrla","atsamd11c::sercom0::usart","USART Control A",null,null],[3,"SWRST_W","atsamd11c::sercom0::usart::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"SAMPR_W","","Write proxy for field `SAMPR`",null,null],[3,"TXPO_W","","Write proxy for field `TXPO`",null,null],[3,"RXPO_W","","Write proxy for field `RXPO`",null,null],[3,"SAMPA_W","","Write proxy for field `SAMPA`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CMODE_W","","Write proxy for field `CMODE`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART mode with external clock",1205,null],[13,"USART_INT_CLK","","1: USART mode with internal clock",1205,null],[13,"SPI_SLAVE","","2: SPI mode with external clock",1205,null],[13,"SPI_MASTER","","3: SPI mode with internal clock",1205,null],[13,"I2C_SLAVE","","4: I2C mode with external clock",1205,null],[13,"I2C_MASTER","","5: I2C mode with internal clock",1205,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"SAMPR_R","","Reader of field `SAMPR`",null,null],[6,"TXPO_R","","Reader of field `TXPO`",null,null],[6,"RXPO_R","","Reader of field `RXPO`",null,null],[6,"SAMPA_R","","Reader of field `SAMPA`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CMODE_R","","Reader of field `CMODE`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",1206,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1206,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1206,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1207,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1207,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1207,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd11c::sercom0::usart::ctrla","Get enumerated values variant",1208,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",1208,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",1208,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",1208,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",1208,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",1208,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",1208,[[]]],[11,"variant","","Writes `variant` to the field",1209,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART mode with external clock",1209,[[],["w",6]]],[11,"usart_int_clk","","USART mode with internal clock",1209,[[],["w",6]]],[11,"spi_slave","","SPI mode with external clock",1209,[[],["w",6]]],[11,"spi_master","","SPI mode with internal clock",1209,[[],["w",6]]],[11,"i2c_slave","","I2C mode with external clock",1209,[[],["w",6]]],[11,"i2c_master","","I2C mode with internal clock",1209,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1209,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1210,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1210,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1211,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1212,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1213,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1214,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1215,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1216,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1217,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1217,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1217,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1218,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1218,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1218,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1219,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1219,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1219,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"sampr","","Bits 13:15 - Sample",6,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",6,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",6,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",6,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",6,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd11c::sercom0::usart::ctrla","Bit 0 - Software Reset",1220,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1220,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",1220,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",1220,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1220,[[],["ibon_r",6]]],[11,"sampr","","Bits 13:15 - Sample",1220,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",1220,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",1220,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",1220,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",1220,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",1220,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",1220,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",1220,[[],["dord_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"sampr","","Bits 13:15 - Sample",7,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",7,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",7,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",7,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",7,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd11c::sercom0::usart::ctrla","Bit 0 - Software Reset",1221,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1221,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",1221,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",1221,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",1221,[[],["ibon_w",3]]],[11,"sampr","","Bits 13:15 - Sample",1221,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",1221,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",1221,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",1221,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",1221,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",1221,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",1221,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",1221,[[],["dord_w",3]]],[0,"ctrlb","atsamd11c::sercom0::usart","USART Control B",null,null],[3,"CHSIZE_W","atsamd11c::sercom0::usart::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"SBMODE_W","","Write proxy for field `SBMODE`",null,null],[3,"COLDEN_W","","Write proxy for field `COLDEN`",null,null],[3,"SFDE_W","","Write proxy for field `SFDE`",null,null],[3,"ENC_W","","Write proxy for field `ENC`",null,null],[3,"PMODE_W","","Write proxy for field `PMODE`",null,null],[3,"TXEN_W","","Write proxy for field `TXEN`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"SBMODE_R","","Reader of field `SBMODE`",null,null],[6,"COLDEN_R","","Reader of field `COLDEN`",null,null],[6,"SFDE_R","","Reader of field `SFDE`",null,null],[6,"ENC_R","","Reader of field `ENC`",null,null],[6,"PMODE_R","","Reader of field `PMODE`",null,null],[6,"TXEN_R","","Reader of field `TXEN`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[11,"bits","","Writes raw bits to the field",1222,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1223,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1223,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1223,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1224,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1224,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1224,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1225,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1225,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1225,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1226,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1226,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1226,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1227,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1227,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1227,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1228,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1228,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1228,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1229,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1229,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1229,[[],["w",6]]],[11,"chsize","atsamd11c::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",6,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",6,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",6,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",6,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",6,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",6,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"chsize","atsamd11c::sercom0::usart::ctrlb","Bits 0:2 - Character Size",1230,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",1230,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",1230,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",1230,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",1230,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",1230,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",1230,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",1230,[[],["rxen_r",6]]],[11,"chsize","atsamd11c::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",7,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",7,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",7,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",7,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",7,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",7,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"chsize","atsamd11c::sercom0::usart::ctrlb","Bits 0:2 - Character Size",1231,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",1231,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",1231,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",1231,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",1231,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",1231,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",1231,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",1231,[[],["rxen_w",3]]],[0,"baud","atsamd11c::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd11c::sercom0::usart::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",1232,[[],["w",6]]],[11,"baud","atsamd11c::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd11c::sercom0::usart::baud","Bits 0:15 - Baud Rate Value",1233,[[],["baud_r",6]]],[11,"baud","atsamd11c::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd11c::sercom0::usart::baud","Bits 0:15 - Baud Rate Value",1234,[[],["baud_w",3]]],[0,"baud_frac_mode","atsamd11c::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd11c::sercom0::usart::baud_frac_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRAC_MODE",null,null],[6,"W","","Writer for register BAUD_FRAC_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",1235,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1236,[[],["w",6]]],[11,"baud","atsamd11c::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd11c::sercom0::usart::baud_frac_mode","Bits 0:12 - Baud Rate Value",1237,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",1237,[[],["fp_r",6]]],[11,"baud","atsamd11c::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd11c::sercom0::usart::baud_frac_mode","Bits 0:12 - Baud Rate Value",1238,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",1238,[[],["fp_w",3]]],[0,"baud_fracfp_mode","atsamd11c::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd11c::sercom0::usart::baud_fracfp_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRACFP_MODE",null,null],[6,"W","","Writer for register BAUD_FRACFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",1239,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1240,[[],["w",6]]],[11,"baud","atsamd11c::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd11c::sercom0::usart::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",1241,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",1241,[[],["fp_r",6]]],[11,"baud","atsamd11c::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd11c::sercom0::usart::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",1242,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",1242,[[],["fp_w",3]]],[0,"baud_usartfp_mode","atsamd11c::sercom0::usart","USART Baud Rate",null,null],[3,"BAUD_W","atsamd11c::sercom0::usart::baud_usartfp_mode","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD_USARTFP_MODE",null,null],[6,"W","","Writer for register BAUD_USARTFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",1243,[[],["w",6]]],[11,"baud","atsamd11c::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd11c::sercom0::usart::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",1244,[[],["baud_r",6]]],[11,"baud","atsamd11c::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd11c::sercom0::usart::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",1245,[[],["baud_w",3]]],[0,"rxpl","atsamd11c::sercom0::usart","USART Receive Pulse Length",null,null],[3,"RXPL_W","atsamd11c::sercom0::usart::rxpl","Write proxy for field `RXPL`",null,null],[6,"R","","Reader of register RXPL",null,null],[6,"W","","Writer for register RXPL",null,null],[6,"RXPL_R","","Reader of field `RXPL`",null,null],[11,"bits","","Writes raw bits to the field",1246,[[],["w",6]]],[11,"rxpl","atsamd11c::generic","Bits 0:7 - Receive Pulse Length",6,[[],["rxpl_r",6]]],[11,"rxpl","atsamd11c::sercom0::usart::rxpl","Bits 0:7 - Receive Pulse Length",1247,[[],["rxpl_r",6]]],[11,"rxpl","atsamd11c::generic","Bits 0:7 - Receive Pulse Length",7,[[],["rxpl_w",3]]],[11,"rxpl","atsamd11c::sercom0::usart::rxpl","Bits 0:7 - Receive Pulse Length",1248,[[],["rxpl_w",3]]],[0,"intenclr","atsamd11c::sercom0::usart","USART Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd11c::sercom0::usart::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1249,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1249,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1249,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1250,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1250,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1250,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1251,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1251,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1251,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1252,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1252,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1252,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1253,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1253,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1253,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1254,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1254,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1254,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1255,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1255,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1255,[[],["w",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd11c::sercom0::usart::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1256,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1256,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1256,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",1256,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",1256,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",1256,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1256,[[],["error_r",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd11c::sercom0::usart::intenclr","Bit 0 - Data Register Empty Interrupt Disable",1257,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",1257,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",1257,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",1257,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",1257,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",1257,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",1257,[[],["error_w",3]]],[0,"intenset","atsamd11c::sercom0::usart","USART Interrupt Enable Set",null,null],[3,"DRE_W","atsamd11c::sercom0::usart::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1258,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1258,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1258,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1259,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1259,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1259,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1260,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1260,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1260,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1261,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1261,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1261,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1262,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1262,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1262,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1263,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1263,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1263,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1264,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1264,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1264,[[],["w",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd11c::sercom0::usart::intenset","Bit 0 - Data Register Empty Interrupt Enable",1265,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1265,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1265,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",1265,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",1265,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",1265,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1265,[[],["error_r",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd11c::sercom0::usart::intenset","Bit 0 - Data Register Empty Interrupt Enable",1266,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",1266,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",1266,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",1266,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",1266,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",1266,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",1266,[[],["error_w",3]]],[0,"intflag","atsamd11c::sercom0::usart","USART Interrupt Flag Status and Clear",null,null],[3,"TXC_W","atsamd11c::sercom0::usart::intflag","Write proxy for field `TXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",1267,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1267,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1267,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1268,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1268,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1268,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1269,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1269,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1269,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1270,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1270,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1270,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1271,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1271,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1271,[[],["w",6]]],[11,"dre","atsamd11c::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd11c::sercom0::usart::intflag","Bit 0 - Data Register Empty Interrupt",1272,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",1272,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",1272,[[],["rxc_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",1272,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",1272,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",1272,[[],["error_r",6]]],[11,"txc","atsamd11c::generic","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"txc","atsamd11c::sercom0::usart::intflag","Bit 1 - Transmit Complete Interrupt",1273,[[],["txc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",1273,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",1273,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",1273,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",1273,[[],["error_w",3]]],[0,"status","atsamd11c::sercom0::usart","USART Status",null,null],[3,"PERR_W","atsamd11c::sercom0::usart::status","Write proxy for field `PERR`",null,null],[3,"FERR_W","","Write proxy for field `FERR`",null,null],[3,"BUFOVF_W","","Write proxy for field `BUFOVF`",null,null],[3,"ISF_W","","Write proxy for field `ISF`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[6,"CTS_R","","Reader of field `CTS`",null,null],[6,"ISF_R","","Reader of field `ISF`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[11,"set_bit","","Sets the field bit",1274,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1274,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1274,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1275,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1275,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1275,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1276,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1276,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1276,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1277,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1277,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1277,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1278,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1278,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1278,[[],["w",6]]],[11,"perr","atsamd11c::generic","Bit 0 - Parity Error",6,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",6,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",6,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",6,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",6,[[],["coll_r",6]]],[11,"perr","atsamd11c::sercom0::usart::status","Bit 0 - Parity Error",1279,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",1279,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",1279,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",1279,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",1279,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",1279,[[],["coll_r",6]]],[11,"perr","atsamd11c::generic","Bit 0 - Parity Error",7,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",7,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",7,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",7,[[],["coll_w",3]]],[11,"perr","atsamd11c::sercom0::usart::status","Bit 0 - Parity Error",1280,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",1280,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",1280,[[],["bufovf_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",1280,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",1280,[[],["coll_w",3]]],[0,"syncbusy","atsamd11c::sercom0::usart","USART Syncbusy",null,null],[6,"R","atsamd11c::sercom0::usart::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"swrst","atsamd11c::sercom0::usart::syncbusy","Bit 0 - Software Reset Synchronization Busy",1281,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",1281,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",1281,[[],["ctrlb_r",6]]],[0,"data","atsamd11c::sercom0::usart","USART Data",null,null],[3,"DATA_W","atsamd11c::sercom0::usart::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",1282,[[],["w",6]]],[11,"data","atsamd11c::generic","Bits 0:8 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd11c::sercom0::usart::data","Bits 0:8 - Data Value",1283,[[],["data_r",6]]],[11,"data","atsamd11c::generic","Bits 0:8 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd11c::sercom0::usart::data","Bits 0:8 - Data Value",1284,[[],["data_w",3]]],[0,"dbgctrl","atsamd11c::sercom0::usart","USART Debug Control",null,null],[3,"DBGSTOP_W","atsamd11c::sercom0::usart::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",1285,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1285,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1285,[[],["w",6]]],[11,"dbgstop","atsamd11c::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd11c::sercom0::usart::dbgctrl","Bit 0 - Debug Mode",1286,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd11c::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd11c::sercom0::usart::dbgctrl","Bit 0 - Debug Mode",1287,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd11c::sercom0::usart","USART Control A",null,null],[6,"CTRLB","","USART Control B",null,null],[6,"BAUD","","USART Baud Rate",null,null],[6,"BAUD_FRAC_MODE","","USART Baud Rate",null,null],[6,"BAUD_FRACFP_MODE","","USART Baud Rate",null,null],[6,"BAUD_USARTFP_MODE","","USART Baud Rate",null,null],[6,"RXPL","","USART Receive Pulse Length",null,null],[6,"INTENCLR","","USART Interrupt Enable Clear",null,null],[6,"INTENSET","","USART Interrupt Enable Set",null,null],[6,"INTFLAG","","USART Interrupt Flag Status and Clear",null,null],[6,"STATUS","","USART Status",null,null],[6,"SYNCBUSY","","USART Syncbusy",null,null],[6,"DATA","","USART Data",null,null],[6,"DBGCTRL","","USART Debug Control",null,null],[11,"usart","atsamd11c::sercom0","0x00 - USART Mode",1288,[[],["usart",3]]],[11,"usart_mut","","0x00 - USART Mode",1288,[[],["usart",3]]],[11,"spi","","0x00 - SPI Mode",1288,[[],["spi",3]]],[11,"spi_mut","","0x00 - SPI Mode",1288,[[],["spi",3]]],[11,"i2cs","","0x00 - I2C Slave Mode",1288,[[],["i2cs",3]]],[11,"i2cs_mut","","0x00 - I2C Slave Mode",1288,[[],["i2cs",3]]],[11,"i2cm","","0x00 - I2C Master Mode",1288,[[],["i2cm",3]]],[11,"i2cm_mut","","0x00 - I2C Master Mode",1288,[[],["i2cm",3]]],[11,"baud_usartfp_mode","","0x0c - USART Baud Rate",1022,[[],["baud_usartfp_mode",6]]],[11,"baud_usartfp_mode_mut","","0x0c - USART Baud Rate",1022,[[],["baud_usartfp_mode",6]]],[11,"baud_fracfp_mode","","0x0c - USART Baud Rate",1022,[[],["baud_fracfp_mode",6]]],[11,"baud_fracfp_mode_mut","","0x0c - USART Baud Rate",1022,[[],["baud_fracfp_mode",6]]],[11,"baud_frac_mode","","0x0c - USART Baud Rate",1022,[[],["baud_frac_mode",6]]],[11,"baud_frac_mode_mut","","0x0c - USART Baud Rate",1022,[[],["baud_frac_mode",6]]],[11,"baud","","0x0c - USART Baud Rate",1022,[[],["baud",6]]],[11,"baud_mut","","0x0c - USART Baud Rate",1022,[[],["baud",6]]],[0,"sysctrl","atsamd11c","System Control",null,null],[3,"RegisterBlock","atsamd11c::sysctrl","Register block",null,null],[12,"intenclr","","0x00 - Interrupt Enable Clear",1289,null],[12,"intenset","","0x04 - Interrupt Enable Set",1289,null],[12,"intflag","","0x08 - Interrupt Flag Status and Clear",1289,null],[12,"pclksr","","0x0c - Power and Clocks Status",1289,null],[12,"xosc","","0x10 - External Multipurpose Crystal Oscillator (XOSC)…",1289,null],[12,"xosc32k","","0x14 - 32kHz External Crystal Oscillator (XOSC32K) Control",1289,null],[12,"osc32k","","0x18 - 32kHz Internal Oscillator (OSC32K) Control",1289,null],[12,"osculp32k","","0x1c - 32kHz Ultra Low Power Internal Oscillator…",1289,null],[12,"osc8m","","0x20 - 8MHz Internal Oscillator (OSC8M) Control",1289,null],[12,"dfllctrl","","0x24 - DFLL48M Control",1289,null],[12,"dfllval","","0x28 - DFLL48M Value",1289,null],[12,"dfllmul","","0x2c - DFLL48M Multiplier",1289,null],[12,"dfllsync","","0x30 - DFLL48M Synchronization",1289,null],[12,"bod33","","0x34 - 3.3V Brown-Out Detector (BOD33) Control",1289,null],[12,"vref","","0x40 - Voltage References System (VREF) Control",1289,null],[12,"dpllctrla","","0x44 - DPLL Control A",1289,null],[12,"dpllratio","","0x48 - DPLL Ratio Control",1289,null],[12,"dpllctrlb","","0x4c - DPLL Control B",1289,null],[12,"dpllstatus","","0x50 - DPLL Status",1289,null],[0,"intenclr","","Interrupt Enable Clear",null,null],[3,"XOSCRDY_W","atsamd11c::sysctrl::intenclr","Write proxy for field `XOSCRDY`",null,null],[3,"XOSC32KRDY_W","","Write proxy for field `XOSC32KRDY`",null,null],[3,"OSC32KRDY_W","","Write proxy for field `OSC32KRDY`",null,null],[3,"OSC8MRDY_W","","Write proxy for field `OSC8MRDY`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"BOD33RDY_W","","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"DPLLLCKR_W","","Write proxy for field `DPLLLCKR`",null,null],[3,"DPLLLCKF_W","","Write proxy for field `DPLLLCKF`",null,null],[3,"DPLLLTO_W","","Write proxy for field `DPLLLTO`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"set_bit","","Sets the field bit",1290,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1290,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1290,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1291,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1291,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1291,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1292,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1292,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1292,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1293,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1293,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1293,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1294,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1294,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1294,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1295,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1295,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1295,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1296,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1296,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1296,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1297,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1297,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1297,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1298,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1298,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1298,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1299,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1299,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1299,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1300,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1300,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1300,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1301,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1301,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1301,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1302,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1302,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1302,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1303,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1303,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1303,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1304,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1304,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1304,[[],["w",6]]],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready Interrupt Enable",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::sysctrl::intenclr","Bit 0 - XOSC Ready Interrupt Enable",1305,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1305,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1305,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1305,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1305,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1305,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1305,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1305,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1305,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1305,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1305,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1305,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1305,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1305,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1305,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready Interrupt Enable",7,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",7,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",7,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",7,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",7,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",7,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",7,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",7,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",7,[[],["dplllto_w",3]]],[11,"xoscrdy","atsamd11c::sysctrl::intenclr","Bit 0 - XOSC Ready Interrupt Enable",1306,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1306,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1306,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1306,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1306,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1306,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1306,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1306,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1306,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1306,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1306,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1306,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1306,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1306,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1306,[[],["dplllto_w",3]]],[0,"intenset","atsamd11c::sysctrl","Interrupt Enable Set",null,null],[3,"XOSCRDY_W","atsamd11c::sysctrl::intenset","Write proxy for field `XOSCRDY`",null,null],[3,"XOSC32KRDY_W","","Write proxy for field `XOSC32KRDY`",null,null],[3,"OSC32KRDY_W","","Write proxy for field `OSC32KRDY`",null,null],[3,"OSC8MRDY_W","","Write proxy for field `OSC8MRDY`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"BOD33RDY_W","","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"DPLLLCKR_W","","Write proxy for field `DPLLLCKR`",null,null],[3,"DPLLLCKF_W","","Write proxy for field `DPLLLCKF`",null,null],[3,"DPLLLTO_W","","Write proxy for field `DPLLLTO`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"set_bit","","Sets the field bit",1307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1307,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1308,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1308,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1308,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1310,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1310,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1310,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1311,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1311,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1311,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1312,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1312,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1312,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1313,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1313,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1313,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1314,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1314,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1314,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1315,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1315,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1315,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1316,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1316,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1316,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1317,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1317,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1317,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1318,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1318,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1318,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1319,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1319,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1319,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1320,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1320,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1321,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1321,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1321,[[],["w",6]]],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready Interrupt Enable",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::sysctrl::intenset","Bit 0 - XOSC Ready Interrupt Enable",1322,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1322,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1322,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1322,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1322,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1322,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1322,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1322,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1322,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1322,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1322,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1322,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1322,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1322,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1322,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready Interrupt Enable",7,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",7,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",7,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",7,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",7,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",7,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",7,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",7,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",7,[[],["dplllto_w",3]]],[11,"xoscrdy","atsamd11c::sysctrl::intenset","Bit 0 - XOSC Ready Interrupt Enable",1323,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready Interrupt Enable",1323,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready Interrupt Enable",1323,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready Interrupt Enable",1323,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready Interrupt Enable",1323,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds Interrupt Enable",1323,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine Interrupt Enable",1323,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse Interrupt Enable",1323,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped Interrupt Enable",1323,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready Interrupt Enable",1323,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection Interrupt Enable",1323,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready Interrupt Enable",1323,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise Interrupt Enable",1323,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall Interrupt Enable",1323,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout Interrupt Enable",1323,[[],["dplllto_w",3]]],[0,"intflag","atsamd11c::sysctrl","Interrupt Flag Status and Clear",null,null],[3,"XOSCRDY_W","atsamd11c::sysctrl::intflag","Write proxy for field `XOSCRDY`",null,null],[3,"XOSC32KRDY_W","","Write proxy for field `XOSC32KRDY`",null,null],[3,"OSC32KRDY_W","","Write proxy for field `OSC32KRDY`",null,null],[3,"OSC8MRDY_W","","Write proxy for field `OSC8MRDY`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"BOD33RDY_W","","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"DPLLLCKR_W","","Write proxy for field `DPLLLCKR`",null,null],[3,"DPLLLCKF_W","","Write proxy for field `DPLLLCKF`",null,null],[3,"DPLLLTO_W","","Write proxy for field `DPLLLTO`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"set_bit","","Sets the field bit",1324,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1324,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1324,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1325,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1325,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1325,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1326,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1326,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1326,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1327,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1327,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1327,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1328,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1328,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1328,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1329,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1329,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1329,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1330,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1330,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1330,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1331,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1331,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1331,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1332,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1332,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1332,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1333,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1333,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1333,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1334,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1334,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1334,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1335,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1335,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1335,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1336,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1337,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1337,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1337,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1338,[[],["w",6]]],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::sysctrl::intflag","Bit 0 - XOSC Ready",1339,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",1339,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",1339,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",1339,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",1339,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",1339,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",1339,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",1339,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",1339,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",1339,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",1339,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",1339,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",1339,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",1339,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",1339,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready",7,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",7,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",7,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",7,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",7,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",7,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",7,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",7,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",7,[[],["dplllto_w",3]]],[11,"xoscrdy","atsamd11c::sysctrl::intflag","Bit 0 - XOSC Ready",1340,[[],["xoscrdy_w",3]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",1340,[[],["xosc32krdy_w",3]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",1340,[[],["osc32krdy_w",3]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",1340,[[],["osc8mrdy_w",3]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",1340,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",1340,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",1340,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",1340,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",1340,[[],["dfllrcs_w",3]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",1340,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 10 - BOD33 Detection",1340,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",1340,[[],["b33srdy_w",3]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",1340,[[],["dplllckr_w",3]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",1340,[[],["dplllckf_w",3]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",1340,[[],["dplllto_w",3]]],[0,"pclksr","atsamd11c::sysctrl","Power and Clocks Status",null,null],[6,"R","atsamd11c::sysctrl::pclksr","Reader of register PCLKSR",null,null],[6,"XOSCRDY_R","","Reader of field `XOSCRDY`",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"OSC32KRDY_R","","Reader of field `OSC32KRDY`",null,null],[6,"OSC8MRDY_R","","Reader of field `OSC8MRDY`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"DPLLLCKR_R","","Reader of field `DPLLLCKR`",null,null],[6,"DPLLLCKF_R","","Reader of field `DPLLLCKF`",null,null],[6,"DPLLLTO_R","","Reader of field `DPLLLTO`",null,null],[11,"xoscrdy","atsamd11c::generic","Bit 0 - XOSC Ready",6,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",6,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",6,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",6,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",6,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",6,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",6,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",6,[[],["dplllto_r",6]]],[11,"xoscrdy","atsamd11c::sysctrl::pclksr","Bit 0 - XOSC Ready",1341,[[],["xoscrdy_r",6]]],[11,"xosc32krdy","","Bit 1 - XOSC32K Ready",1341,[[],["xosc32krdy_r",6]]],[11,"osc32krdy","","Bit 2 - OSC32K Ready",1341,[[],["osc32krdy_r",6]]],[11,"osc8mrdy","","Bit 3 - OSC8M Ready",1341,[[],["osc8mrdy_r",6]]],[11,"dfllrdy","","Bit 4 - DFLL Ready",1341,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 5 - DFLL Out Of Bounds",1341,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 6 - DFLL Lock Fine",1341,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 7 - DFLL Lock Coarse",1341,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 8 - DFLL Reference Clock Stopped",1341,[[],["dfllrcs_r",6]]],[11,"bod33rdy","","Bit 9 - BOD33 Ready",1341,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 10 - BOD33 Detection",1341,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 11 - BOD33 Synchronization Ready",1341,[[],["b33srdy_r",6]]],[11,"dplllckr","","Bit 15 - DPLL Lock Rise",1341,[[],["dplllckr_r",6]]],[11,"dplllckf","","Bit 16 - DPLL Lock Fall",1341,[[],["dplllckf_r",6]]],[11,"dplllto","","Bit 17 - DPLL Lock Timeout",1341,[[],["dplllto_r",6]]],[0,"xosc","atsamd11c::sysctrl","External Multipurpose Crystal Oscillator (XOSC) Control",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::xosc","Write proxy for field `ENABLE`",null,null],[3,"XTALEN_W","","Write proxy for field `XTALEN`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"GAIN_W","","Write proxy for field `GAIN`",null,null],[3,"AMPGC_W","","Write proxy for field `AMPGC`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[4,"GAIN_A","","Oscillator Gain",null,null],[13,"_0","","0: 2MHz",1342,null],[13,"_1","","1: 4MHz",1342,null],[13,"_2","","2: 8MHz",1342,null],[13,"_3","","3: 16MHz",1342,null],[13,"_4","","4: 30MHz",1342,null],[6,"R","","Reader of register XOSC",null,null],[6,"W","","Writer for register XOSC",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"XTALEN_R","","Reader of field `XTALEN`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"GAIN_R","","Reader of field `GAIN`",null,null],[6,"AMPGC_R","","Reader of field `AMPGC`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[11,"set_bit","","Sets the field bit",1343,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1343,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1343,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1344,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1344,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1344,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1345,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1345,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1345,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1346,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1346,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1346,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["gain_a",4],["variant",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",6,[[]]],[11,"variant","atsamd11c::sysctrl::xosc","Get enumerated values variant",1347,[[],[["gain_a",4],["variant",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",1347,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",1347,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",1347,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",1347,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",1347,[[]]],[11,"variant","","Writes `variant` to the field",1348,[[["gain_a",4]],["w",6]]],[11,"_0","","2MHz",1348,[[],["w",6]]],[11,"_1","","4MHz",1348,[[],["w",6]]],[11,"_2","","8MHz",1348,[[],["w",6]]],[11,"_3","","16MHz",1348,[[],["w",6]]],[11,"_4","","30MHz",1348,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1348,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1349,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1349,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1349,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1350,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",6,[[],["xtalen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"gain","","Bits 8:10 - Oscillator Gain",6,[[],["gain_r",6]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",6,[[],["ampgc_r",6]]],[11,"startup","","Bits 12:15 - Start-Up Time",6,[[],["startup_r",6]]],[11,"enable","atsamd11c::sysctrl::xosc","Bit 1 - Oscillator Enable",1351,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1351,[[],["xtalen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1351,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1351,[[],["ondemand_r",6]]],[11,"gain","","Bits 8:10 - Oscillator Gain",1351,[[],["gain_r",6]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",1351,[[],["ampgc_r",6]]],[11,"startup","","Bits 12:15 - Start-Up Time",1351,[[],["startup_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",7,[[],["xtalen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"gain","","Bits 8:10 - Oscillator Gain",7,[[],["gain_w",3]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",7,[[],["ampgc_w",3]]],[11,"startup","","Bits 12:15 - Start-Up Time",7,[[],["startup_w",3]]],[11,"enable","atsamd11c::sysctrl::xosc","Bit 1 - Oscillator Enable",1352,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1352,[[],["xtalen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1352,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1352,[[],["ondemand_w",3]]],[11,"gain","","Bits 8:10 - Oscillator Gain",1352,[[],["gain_w",3]]],[11,"ampgc","","Bit 11 - Automatic Amplitude Gain Control",1352,[[],["ampgc_w",3]]],[11,"startup","","Bits 12:15 - Start-Up Time",1352,[[],["startup_w",3]]],[0,"xosc32k","atsamd11c::sysctrl","32kHz External Crystal Oscillator (XOSC32K) Control",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::xosc32k","Write proxy for field `ENABLE`",null,null],[3,"XTALEN_W","","Write proxy for field `XTALEN`",null,null],[3,"EN32K_W","","Write proxy for field `EN32K`",null,null],[3,"EN1K_W","","Write proxy for field `EN1K`",null,null],[3,"AAMPEN_W","","Write proxy for field `AAMPEN`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[6,"R","","Reader of register XOSC32K",null,null],[6,"W","","Writer for register XOSC32K",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"XTALEN_R","","Reader of field `XTALEN`",null,null],[6,"EN32K_R","","Reader of field `EN32K`",null,null],[6,"EN1K_R","","Reader of field `EN1K`",null,null],[6,"AAMPEN_R","","Reader of field `AAMPEN`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"set_bit","","Sets the field bit",1353,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1353,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1353,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1354,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1354,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1354,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1355,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1355,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1355,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1356,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1356,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1356,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1358,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1358,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1358,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1359,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1359,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1359,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1360,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1361,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1361,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1361,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",6,[[],["xtalen_r",6]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",6,[[],["en32k_r",6]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",6,[[],["en1k_r",6]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",6,[[],["aampen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",6,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"enable","atsamd11c::sysctrl::xosc32k","Bit 1 - Oscillator Enable",1362,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1362,[[],["xtalen_r",6]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",1362,[[],["en32k_r",6]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",1362,[[],["en1k_r",6]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",1362,[[],["aampen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1362,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1362,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1362,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",1362,[[],["wrtlock_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",7,[[],["xtalen_w",3]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",7,[[],["en32k_w",3]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",7,[[],["en1k_w",3]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",7,[[],["aampen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",7,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"enable","atsamd11c::sysctrl::xosc32k","Bit 1 - Oscillator Enable",1363,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1363,[[],["xtalen_w",3]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",1363,[[],["en32k_w",3]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",1363,[[],["en1k_w",3]]],[11,"aampen","","Bit 5 - Automatic Amplitude Control Enable",1363,[[],["aampen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1363,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1363,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1363,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",1363,[[],["wrtlock_w",3]]],[0,"osc32k","atsamd11c::sysctrl","32kHz Internal Oscillator (OSC32K) Control",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::osc32k","Write proxy for field `ENABLE`",null,null],[3,"EN32K_W","","Write proxy for field `EN32K`",null,null],[3,"EN1K_W","","Write proxy for field `EN1K`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[6,"R","","Reader of register OSC32K",null,null],[6,"W","","Writer for register OSC32K",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"EN32K_R","","Reader of field `EN32K`",null,null],[6,"EN1K_R","","Reader of field `EN1K`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[11,"set_bit","","Sets the field bit",1364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1365,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1366,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1366,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1366,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1367,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1367,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1367,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1368,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1369,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1370,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1370,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1370,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1371,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",6,[[],["en32k_r",6]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",6,[[],["en1k_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",6,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"enable","atsamd11c::sysctrl::osc32k","Bit 1 - Oscillator Enable",1372,[[],["enable_r",6]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",1372,[[],["en32k_r",6]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",1372,[[],["en1k_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1372,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1372,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1372,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",1372,[[],["wrtlock_r",6]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",1372,[[],["calib_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",7,[[],["en32k_w",3]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",7,[[],["en1k_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",7,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"enable","atsamd11c::sysctrl::osc32k","Bit 1 - Oscillator Enable",1373,[[],["enable_w",3]]],[11,"en32k","","Bit 2 - 32kHz Output Enable",1373,[[],["en32k_w",3]]],[11,"en1k","","Bit 3 - 1kHz Output Enable",1373,[[],["en1k_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1373,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1373,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1373,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",1373,[[],["wrtlock_w",3]]],[11,"calib","","Bits 16:22 - Oscillator Calibration",1373,[[],["calib_w",3]]],[0,"osculp32k","atsamd11c::sysctrl","32kHz Ultra Low Power Internal Oscillator (OSCULP32K)…",null,null],[3,"CALIB_W","atsamd11c::sysctrl::osculp32k","Write proxy for field `CALIB`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[6,"R","","Reader of register OSCULP32K",null,null],[6,"W","","Writer for register OSCULP32K",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"bits","","Writes raw bits to the field",1374,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1375,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1375,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1375,[[],["w",6]]],[11,"calib","atsamd11c::generic","Bits 0:4 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"wrtlock","","Bit 7 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"calib","atsamd11c::sysctrl::osculp32k","Bits 0:4 - Oscillator Calibration",1376,[[],["calib_r",6]]],[11,"wrtlock","","Bit 7 - Write Lock",1376,[[],["wrtlock_r",6]]],[11,"calib","atsamd11c::generic","Bits 0:4 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"wrtlock","","Bit 7 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"calib","atsamd11c::sysctrl::osculp32k","Bits 0:4 - Oscillator Calibration",1377,[[],["calib_w",3]]],[11,"wrtlock","","Bit 7 - Write Lock",1377,[[],["wrtlock_w",3]]],[0,"osc8m","atsamd11c::sysctrl","8MHz Internal Oscillator (OSC8M) Control",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::osc8m","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"PRESC_W","","Write proxy for field `PRESC`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[3,"FRANGE_W","","Write proxy for field `FRANGE`",null,null],[4,"PRESC_A","","Oscillator Prescaler",null,null],[13,"_0","","0: 1",1378,null],[13,"_1","","1: 2",1378,null],[13,"_2","","2: 4",1378,null],[13,"_3","","3: 8",1378,null],[4,"FRANGE_A","","Oscillator Frequency Range",null,null],[13,"_0","","0: 4 to 6MHz",1379,null],[13,"_1","","1: 6 to 8MHz",1379,null],[13,"_2","","2: 8 to 11MHz",1379,null],[13,"_3","","3: 11 to 15MHz",1379,null],[6,"R","","Reader of register OSC8M",null,null],[6,"W","","Writer for register OSC8M",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"PRESC_R","","Reader of field `PRESC`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[6,"FRANGE_R","","Reader of field `FRANGE`",null,null],[11,"set_bit","","Sets the field bit",1380,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1380,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1380,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1381,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1381,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1381,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1382,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1382,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1382,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["presc_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"variant","atsamd11c::sysctrl::osc8m","Get enumerated values variant",1383,[[],["presc_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",1383,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",1383,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",1383,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",1383,[[]]],[11,"variant","","Writes `variant` to the field",1384,[[["presc_a",4]],["w",6]]],[11,"_0","","1",1384,[[],["w",6]]],[11,"_1","","2",1384,[[],["w",6]]],[11,"_2","","4",1384,[[],["w",6]]],[11,"_3","","8",1384,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1384,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1385,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["frange_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",6,[[]]],[11,"variant","atsamd11c::sysctrl::osc8m","Get enumerated values variant",1386,[[],["frange_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",1386,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",1386,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",1386,[[]]],[11,"is_3","","Checks if the value of the field is `_3`",1386,[[]]],[11,"variant","","Writes `variant` to the field",1387,[[["frange_a",4]],["w",6]]],[11,"_0","","4 to 6MHz",1387,[[],["w",6]]],[11,"_1","","6 to 8MHz",1387,[[],["w",6]]],[11,"_2","","8 to 11MHz",1387,[[],["w",6]]],[11,"_3","","11 to 15MHz",1387,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1387,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",6,[[],["presc_r",6]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",6,[[],["frange_r",6]]],[11,"enable","atsamd11c::sysctrl::osc8m","Bit 1 - Oscillator Enable",1388,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1388,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1388,[[],["ondemand_r",6]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",1388,[[],["presc_r",6]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",1388,[[],["calib_r",6]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",1388,[[],["frange_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",7,[[],["presc_w",3]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",7,[[],["frange_w",3]]],[11,"enable","atsamd11c::sysctrl::osc8m","Bit 1 - Oscillator Enable",1389,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1389,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1389,[[],["ondemand_w",3]]],[11,"presc","","Bits 8:9 - Oscillator Prescaler",1389,[[],["presc_w",3]]],[11,"calib","","Bits 16:27 - Oscillator Calibration",1389,[[],["calib_w",3]]],[11,"frange","","Bits 30:31 - Oscillator Frequency Range",1389,[[],["frange_w",3]]],[0,"dfllctrl","atsamd11c::sysctrl","DFLL48M Control",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::dfllctrl","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"STABLE_W","","Write proxy for field `STABLE`",null,null],[3,"LLAW_W","","Write proxy for field `LLAW`",null,null],[3,"USBCRM_W","","Write proxy for field `USBCRM`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"CCDIS_W","","Write proxy for field `CCDIS`",null,null],[3,"QLDIS_W","","Write proxy for field `QLDIS`",null,null],[3,"BPLCKC_W","","Write proxy for field `BPLCKC`",null,null],[3,"WAITLOCK_W","","Write proxy for field `WAITLOCK`",null,null],[6,"R","","Reader of register DFLLCTRL",null,null],[6,"W","","Writer for register DFLLCTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"STABLE_R","","Reader of field `STABLE`",null,null],[6,"LLAW_R","","Reader of field `LLAW`",null,null],[6,"USBCRM_R","","Reader of field `USBCRM`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"CCDIS_R","","Reader of field `CCDIS`",null,null],[6,"QLDIS_R","","Reader of field `QLDIS`",null,null],[6,"BPLCKC_R","","Reader of field `BPLCKC`",null,null],[6,"WAITLOCK_R","","Reader of field `WAITLOCK`",null,null],[11,"set_bit","","Sets the field bit",1390,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1390,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1390,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1391,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1391,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1391,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1392,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1392,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1392,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1393,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1393,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1393,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1394,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1394,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1394,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1395,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1395,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1395,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1396,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1396,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1396,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1397,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1397,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1397,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1398,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1398,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1398,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1399,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1399,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1399,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1400,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1400,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1400,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - DFLL Enable",6,[[],["enable_r",6]]],[11,"mode","","Bit 2 - Operating Mode Selection",6,[[],["mode_r",6]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",6,[[],["stable_r",6]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",6,[[],["llaw_r",6]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",6,[[],["usbcrm_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",6,[[],["ccdis_r",6]]],[11,"qldis","","Bit 9 - Quick Lock Disable",6,[[],["qldis_r",6]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",6,[[],["bplckc_r",6]]],[11,"waitlock","","Bit 11 - Wait Lock",6,[[],["waitlock_r",6]]],[11,"enable","atsamd11c::sysctrl::dfllctrl","Bit 1 - DFLL Enable",1401,[[],["enable_r",6]]],[11,"mode","","Bit 2 - Operating Mode Selection",1401,[[],["mode_r",6]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",1401,[[],["stable_r",6]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",1401,[[],["llaw_r",6]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",1401,[[],["usbcrm_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1401,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1401,[[],["ondemand_r",6]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",1401,[[],["ccdis_r",6]]],[11,"qldis","","Bit 9 - Quick Lock Disable",1401,[[],["qldis_r",6]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",1401,[[],["bplckc_r",6]]],[11,"waitlock","","Bit 11 - Wait Lock",1401,[[],["waitlock_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - DFLL Enable",7,[[],["enable_w",3]]],[11,"mode","","Bit 2 - Operating Mode Selection",7,[[],["mode_w",3]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",7,[[],["stable_w",3]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",7,[[],["llaw_w",3]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",7,[[],["usbcrm_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",7,[[],["ccdis_w",3]]],[11,"qldis","","Bit 9 - Quick Lock Disable",7,[[],["qldis_w",3]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",7,[[],["bplckc_w",3]]],[11,"waitlock","","Bit 11 - Wait Lock",7,[[],["waitlock_w",3]]],[11,"enable","atsamd11c::sysctrl::dfllctrl","Bit 1 - DFLL Enable",1402,[[],["enable_w",3]]],[11,"mode","","Bit 2 - Operating Mode Selection",1402,[[],["mode_w",3]]],[11,"stable","","Bit 3 - Stable DFLL Frequency",1402,[[],["stable_w",3]]],[11,"llaw","","Bit 4 - Lose Lock After Wake",1402,[[],["llaw_w",3]]],[11,"usbcrm","","Bit 5 - USB Clock Recovery Mode",1402,[[],["usbcrm_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1402,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1402,[[],["ondemand_w",3]]],[11,"ccdis","","Bit 8 - Chill Cycle Disable",1402,[[],["ccdis_w",3]]],[11,"qldis","","Bit 9 - Quick Lock Disable",1402,[[],["qldis_w",3]]],[11,"bplckc","","Bit 10 - Bypass Coarse Lock",1402,[[],["bplckc_w",3]]],[11,"waitlock","","Bit 11 - Wait Lock",1402,[[],["waitlock_w",3]]],[0,"dfllval","atsamd11c::sysctrl","DFLL48M Value",null,null],[3,"FINE_W","atsamd11c::sysctrl::dfllval","Write proxy for field `FINE`",null,null],[3,"COARSE_W","","Write proxy for field `COARSE`",null,null],[6,"R","","Reader of register DFLLVAL",null,null],[6,"W","","Writer for register DFLLVAL",null,null],[6,"FINE_R","","Reader of field `FINE`",null,null],[6,"COARSE_R","","Reader of field `COARSE`",null,null],[6,"DIFF_R","","Reader of field `DIFF`",null,null],[11,"bits","","Writes raw bits to the field",1403,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1404,[[],["w",6]]],[11,"fine","atsamd11c::generic","Bits 0:9 - Fine Value",6,[[],["fine_r",6]]],[11,"coarse","","Bits 10:15 - Coarse Value",6,[[],["coarse_r",6]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",6,[[],["diff_r",6]]],[11,"fine","atsamd11c::sysctrl::dfllval","Bits 0:9 - Fine Value",1405,[[],["fine_r",6]]],[11,"coarse","","Bits 10:15 - Coarse Value",1405,[[],["coarse_r",6]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",1405,[[],["diff_r",6]]],[11,"fine","atsamd11c::generic","Bits 0:9 - Fine Value",7,[[],["fine_w",3]]],[11,"coarse","","Bits 10:15 - Coarse Value",7,[[],["coarse_w",3]]],[11,"fine","atsamd11c::sysctrl::dfllval","Bits 0:9 - Fine Value",1406,[[],["fine_w",3]]],[11,"coarse","","Bits 10:15 - Coarse Value",1406,[[],["coarse_w",3]]],[0,"dfllmul","atsamd11c::sysctrl","DFLL48M Multiplier",null,null],[3,"MUL_W","atsamd11c::sysctrl::dfllmul","Write proxy for field `MUL`",null,null],[3,"FSTEP_W","","Write proxy for field `FSTEP`",null,null],[3,"CSTEP_W","","Write proxy for field `CSTEP`",null,null],[6,"R","","Reader of register DFLLMUL",null,null],[6,"W","","Writer for register DFLLMUL",null,null],[6,"MUL_R","","Reader of field `MUL`",null,null],[6,"FSTEP_R","","Reader of field `FSTEP`",null,null],[6,"CSTEP_R","","Reader of field `CSTEP`",null,null],[11,"bits","","Writes raw bits to the field",1407,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1408,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1409,[[],["w",6]]],[11,"mul","atsamd11c::generic","Bits 0:15 - DFLL Multiply Factor",6,[[],["mul_r",6]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",6,[[],["fstep_r",6]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",6,[[],["cstep_r",6]]],[11,"mul","atsamd11c::sysctrl::dfllmul","Bits 0:15 - DFLL Multiply Factor",1410,[[],["mul_r",6]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",1410,[[],["fstep_r",6]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",1410,[[],["cstep_r",6]]],[11,"mul","atsamd11c::generic","Bits 0:15 - DFLL Multiply Factor",7,[[],["mul_w",3]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",7,[[],["fstep_w",3]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",7,[[],["cstep_w",3]]],[11,"mul","atsamd11c::sysctrl::dfllmul","Bits 0:15 - DFLL Multiply Factor",1411,[[],["mul_w",3]]],[11,"fstep","","Bits 16:25 - Fine Maximum Step",1411,[[],["fstep_w",3]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",1411,[[],["cstep_w",3]]],[0,"dfllsync","atsamd11c::sysctrl","DFLL48M Synchronization",null,null],[3,"READREQ_W","atsamd11c::sysctrl::dfllsync","Write proxy for field `READREQ`",null,null],[6,"W","","Writer for register DFLLSYNC",null,null],[11,"set_bit","","Sets the field bit",1412,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1412,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1412,[[],["w",6]]],[11,"readreq","atsamd11c::generic","Bit 7 - Read Request",7,[[],["readreq_w",3]]],[11,"readreq","atsamd11c::sysctrl::dfllsync","Bit 7 - Read Request",1413,[[],["readreq_w",3]]],[0,"bod33","atsamd11c::sysctrl","3.3V Brown-Out Detector (BOD33) Control",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::bod33","Write proxy for field `ENABLE`",null,null],[3,"HYST_W","","Write proxy for field `HYST`",null,null],[3,"ACTION_W","","Write proxy for field `ACTION`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"CEN_W","","Write proxy for field `CEN`",null,null],[3,"PSEL_W","","Write proxy for field `PSEL`",null,null],[3,"LEVEL_W","","Write proxy for field `LEVEL`",null,null],[4,"ACTION_A","","BOD33 Action",null,null],[13,"NONE","","0: No action",1414,null],[13,"RESET","","1: The BOD33 generates a reset",1414,null],[13,"INTERRUPT","","2: The BOD33 generates an interrupt",1414,null],[4,"PSEL_A","","Prescaler Select",null,null],[13,"DIV2","","0: Divide clock by 2",1415,null],[13,"DIV4","","1: Divide clock by 4",1415,null],[13,"DIV8","","2: Divide clock by 8",1415,null],[13,"DIV16","","3: Divide clock by 16",1415,null],[13,"DIV32","","4: Divide clock by 32",1415,null],[13,"DIV64","","5: Divide clock by 64",1415,null],[13,"DIV128","","6: Divide clock by 128",1415,null],[13,"DIV256","","7: Divide clock by 256",1415,null],[13,"DIV512","","8: Divide clock by 512",1415,null],[13,"DIV1K","","9: Divide clock by 1024",1415,null],[13,"DIV2K","","10: Divide clock by 2048",1415,null],[13,"DIV4K","","11: Divide clock by 4096",1415,null],[13,"DIV8K","","12: Divide clock by 8192",1415,null],[13,"DIV16K","","13: Divide clock by 16384",1415,null],[13,"DIV32K","","14: Divide clock by 32768",1415,null],[13,"DIV64K","","15: Divide clock by 65536",1415,null],[6,"R","","Reader of register BOD33",null,null],[6,"W","","Writer for register BOD33",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"HYST_R","","Reader of field `HYST`",null,null],[6,"ACTION_R","","Reader of field `ACTION`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"CEN_R","","Reader of field `CEN`",null,null],[6,"PSEL_R","","Reader of field `PSEL`",null,null],[6,"LEVEL_R","","Reader of field `LEVEL`",null,null],[11,"set_bit","","Sets the field bit",1416,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1416,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1416,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1417,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1417,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1417,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["action_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"is_interrupt","","Checks if the value of the field is `INTERRUPT`",6,[[]]],[11,"variant","atsamd11c::sysctrl::bod33","Get enumerated values variant",1418,[[],[["action_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1418,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",1418,[[]]],[11,"is_interrupt","","Checks if the value of the field is `INTERRUPT`",1418,[[]]],[11,"variant","","Writes `variant` to the field",1419,[[["action_a",4]],["w",6]]],[11,"none","","No action",1419,[[],["w",6]]],[11,"reset","","The BOD33 generates a reset",1419,[[],["w",6]]],[11,"interrupt","","The BOD33 generates an interrupt",1419,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1419,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1420,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1420,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1420,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1422,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1422,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1422,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["psel_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1k","","Checks if the value of the field is `DIV1K`",6,[[]]],[11,"is_div2k","","Checks if the value of the field is `DIV2K`",6,[[]]],[11,"is_div4k","","Checks if the value of the field is `DIV4K`",6,[[]]],[11,"is_div8k","","Checks if the value of the field is `DIV8K`",6,[[]]],[11,"is_div16k","","Checks if the value of the field is `DIV16K`",6,[[]]],[11,"is_div32k","","Checks if the value of the field is `DIV32K`",6,[[]]],[11,"is_div64k","","Checks if the value of the field is `DIV64K`",6,[[]]],[11,"variant","atsamd11c::sysctrl::bod33","Get enumerated values variant",1423,[[],["psel_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1423,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1423,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1423,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1423,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1423,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1423,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1423,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1423,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1423,[[]]],[11,"is_div1k","","Checks if the value of the field is `DIV1K`",1423,[[]]],[11,"is_div2k","","Checks if the value of the field is `DIV2K`",1423,[[]]],[11,"is_div4k","","Checks if the value of the field is `DIV4K`",1423,[[]]],[11,"is_div8k","","Checks if the value of the field is `DIV8K`",1423,[[]]],[11,"is_div16k","","Checks if the value of the field is `DIV16K`",1423,[[]]],[11,"is_div32k","","Checks if the value of the field is `DIV32K`",1423,[[]]],[11,"is_div64k","","Checks if the value of the field is `DIV64K`",1423,[[]]],[11,"variant","","Writes `variant` to the field",1424,[[["psel_a",4]],["w",6]]],[11,"div2","","Divide clock by 2",1424,[[],["w",6]]],[11,"div4","","Divide clock by 4",1424,[[],["w",6]]],[11,"div8","","Divide clock by 8",1424,[[],["w",6]]],[11,"div16","","Divide clock by 16",1424,[[],["w",6]]],[11,"div32","","Divide clock by 32",1424,[[],["w",6]]],[11,"div64","","Divide clock by 64",1424,[[],["w",6]]],[11,"div128","","Divide clock by 128",1424,[[],["w",6]]],[11,"div256","","Divide clock by 256",1424,[[],["w",6]]],[11,"div512","","Divide clock by 512",1424,[[],["w",6]]],[11,"div1k","","Divide clock by 1024",1424,[[],["w",6]]],[11,"div2k","","Divide clock by 2048",1424,[[],["w",6]]],[11,"div4k","","Divide clock by 4096",1424,[[],["w",6]]],[11,"div8k","","Divide clock by 8192",1424,[[],["w",6]]],[11,"div16k","","Divide clock by 16384",1424,[[],["w",6]]],[11,"div32k","","Divide clock by 32768",1424,[[],["w",6]]],[11,"div64k","","Divide clock by 65536",1424,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1424,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1425,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"hyst","","Bit 2 - Hysteresis",6,[[],["hyst_r",6]]],[11,"action","","Bits 3:4 - BOD33 Action",6,[[],["action_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 8 - Operation Mode",6,[[],["mode_r",6]]],[11,"cen","","Bit 9 - Clock Enable",6,[[],["cen_r",6]]],[11,"psel","","Bits 12:15 - Prescaler Select",6,[[],["psel_r",6]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",6,[[],["level_r",6]]],[11,"enable","atsamd11c::sysctrl::bod33","Bit 1 - Enable",1426,[[],["enable_r",6]]],[11,"hyst","","Bit 2 - Hysteresis",1426,[[],["hyst_r",6]]],[11,"action","","Bits 3:4 - BOD33 Action",1426,[[],["action_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1426,[[],["runstdby_r",6]]],[11,"mode","","Bit 8 - Operation Mode",1426,[[],["mode_r",6]]],[11,"cen","","Bit 9 - Clock Enable",1426,[[],["cen_r",6]]],[11,"psel","","Bits 12:15 - Prescaler Select",1426,[[],["psel_r",6]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",1426,[[],["level_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"hyst","","Bit 2 - Hysteresis",7,[[],["hyst_w",3]]],[11,"action","","Bits 3:4 - BOD33 Action",7,[[],["action_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 8 - Operation Mode",7,[[],["mode_w",3]]],[11,"cen","","Bit 9 - Clock Enable",7,[[],["cen_w",3]]],[11,"psel","","Bits 12:15 - Prescaler Select",7,[[],["psel_w",3]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",7,[[],["level_w",3]]],[11,"enable","atsamd11c::sysctrl::bod33","Bit 1 - Enable",1427,[[],["enable_w",3]]],[11,"hyst","","Bit 2 - Hysteresis",1427,[[],["hyst_w",3]]],[11,"action","","Bits 3:4 - BOD33 Action",1427,[[],["action_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1427,[[],["runstdby_w",3]]],[11,"mode","","Bit 8 - Operation Mode",1427,[[],["mode_w",3]]],[11,"cen","","Bit 9 - Clock Enable",1427,[[],["cen_w",3]]],[11,"psel","","Bits 12:15 - Prescaler Select",1427,[[],["psel_w",3]]],[11,"level","","Bits 16:21 - BOD33 Threshold Level",1427,[[],["level_w",3]]],[0,"vref","atsamd11c::sysctrl","Voltage References System (VREF) Control",null,null],[3,"TSEN_W","atsamd11c::sysctrl::vref","Write proxy for field `TSEN`",null,null],[3,"BGOUTEN_W","","Write proxy for field `BGOUTEN`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[6,"R","","Reader of register VREF",null,null],[6,"W","","Writer for register VREF",null,null],[6,"TSEN_R","","Reader of field `TSEN`",null,null],[6,"BGOUTEN_R","","Reader of field `BGOUTEN`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[11,"set_bit","","Sets the field bit",1428,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1428,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1428,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1429,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1429,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1429,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1430,[[],["w",6]]],[11,"tsen","atsamd11c::generic","Bit 1 - Temperature Sensor Enable",6,[[],["tsen_r",6]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",6,[[],["bgouten_r",6]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",6,[[],["calib_r",6]]],[11,"tsen","atsamd11c::sysctrl::vref","Bit 1 - Temperature Sensor Enable",1431,[[],["tsen_r",6]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",1431,[[],["bgouten_r",6]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",1431,[[],["calib_r",6]]],[11,"tsen","atsamd11c::generic","Bit 1 - Temperature Sensor Enable",7,[[],["tsen_w",3]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",7,[[],["bgouten_w",3]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",7,[[],["calib_w",3]]],[11,"tsen","atsamd11c::sysctrl::vref","Bit 1 - Temperature Sensor Enable",1432,[[],["tsen_w",3]]],[11,"bgouten","","Bit 2 - Bandgap Output Enable",1432,[[],["bgouten_w",3]]],[11,"calib","","Bits 16:26 - Bandgap Voltage Generator Calibration",1432,[[],["calib_w",3]]],[0,"dpllctrla","atsamd11c::sysctrl","DPLL Control A",null,null],[3,"ENABLE_W","atsamd11c::sysctrl::dpllctrla","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[6,"R","","Reader of register DPLLCTRLA",null,null],[6,"W","","Writer for register DPLLCTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[11,"set_bit","","Sets the field bit",1433,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1433,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1433,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1434,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1434,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1434,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1435,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1435,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1435,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - DPLL Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",6,[[],["ondemand_r",6]]],[11,"enable","atsamd11c::sysctrl::dpllctrla","Bit 1 - DPLL Enable",1436,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1436,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",1436,[[],["ondemand_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - DPLL Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",7,[[],["ondemand_w",3]]],[11,"enable","atsamd11c::sysctrl::dpllctrla","Bit 1 - DPLL Enable",1437,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1437,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Clock Activation",1437,[[],["ondemand_w",3]]],[0,"dpllratio","atsamd11c::sysctrl","DPLL Ratio Control",null,null],[3,"LDR_W","atsamd11c::sysctrl::dpllratio","Write proxy for field `LDR`",null,null],[3,"LDRFRAC_W","","Write proxy for field `LDRFRAC`",null,null],[6,"R","","Reader of register DPLLRATIO",null,null],[6,"W","","Writer for register DPLLRATIO",null,null],[6,"LDR_R","","Reader of field `LDR`",null,null],[6,"LDRFRAC_R","","Reader of field `LDRFRAC`",null,null],[11,"bits","","Writes raw bits to the field",1438,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1439,[[],["w",6]]],[11,"ldr","atsamd11c::generic","Bits 0:11 - Loop Divider Ratio",6,[[],["ldr_r",6]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",6,[[],["ldrfrac_r",6]]],[11,"ldr","atsamd11c::sysctrl::dpllratio","Bits 0:11 - Loop Divider Ratio",1440,[[],["ldr_r",6]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",1440,[[],["ldrfrac_r",6]]],[11,"ldr","atsamd11c::generic","Bits 0:11 - Loop Divider Ratio",7,[[],["ldr_w",3]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",7,[[],["ldrfrac_w",3]]],[11,"ldr","atsamd11c::sysctrl::dpllratio","Bits 0:11 - Loop Divider Ratio",1441,[[],["ldr_w",3]]],[11,"ldrfrac","","Bits 16:19 - Loop Divider Ratio Fractional Part",1441,[[],["ldrfrac_w",3]]],[0,"dpllctrlb","atsamd11c::sysctrl","DPLL Control B",null,null],[3,"FILTER_W","atsamd11c::sysctrl::dpllctrlb","Write proxy for field `FILTER`",null,null],[3,"LPEN_W","","Write proxy for field `LPEN`",null,null],[3,"WUF_W","","Write proxy for field `WUF`",null,null],[3,"REFCLK_W","","Write proxy for field `REFCLK`",null,null],[3,"LTIME_W","","Write proxy for field `LTIME`",null,null],[3,"LBYPASS_W","","Write proxy for field `LBYPASS`",null,null],[3,"DIV_W","","Write proxy for field `DIV`",null,null],[4,"FILTER_A","","Proportional Integral Filter Selection",null,null],[13,"DEFAULT","","0: Default filter mode",1442,null],[13,"LBFILT","","1: Low bandwidth filter",1442,null],[13,"HBFILT","","2: High bandwidth filter",1442,null],[13,"HDFILT","","3: High damping filter",1442,null],[4,"REFCLK_A","","Reference Clock Selection",null,null],[13,"REF0","","0: CLK_DPLL_REF0 clock reference",1443,null],[13,"REF1","","1: CLK_DPLL_REF1 clock reference",1443,null],[13,"GCLK","","2: GCLK_DPLL clock reference",1443,null],[4,"LTIME_A","","Lock Time",null,null],[13,"NONE","","0: Default\\tNo time-out",1444,null],[13,"_8MS","","4: 8MS\\tTime-out if no lock within 8 ms",1444,null],[13,"_9MS","","5: 9MS\\tTime-out if no lock within 9 ms",1444,null],[13,"_10MS","","6: 10MS\\tTime-out if no lock within 10 ms",1444,null],[13,"_11MS","","7: 11MS\\tTime-out if no lock within 11 ms",1444,null],[6,"R","","Reader of register DPLLCTRLB",null,null],[6,"W","","Writer for register DPLLCTRLB",null,null],[6,"FILTER_R","","Reader of field `FILTER`",null,null],[6,"LPEN_R","","Reader of field `LPEN`",null,null],[6,"WUF_R","","Reader of field `WUF`",null,null],[6,"REFCLK_R","","Reader of field `REFCLK`",null,null],[6,"LTIME_R","","Reader of field `LTIME`",null,null],[6,"LBYPASS_R","","Reader of field `LBYPASS`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["filter_a",4]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_lbfilt","","Checks if the value of the field is `LBFILT`",6,[[]]],[11,"is_hbfilt","","Checks if the value of the field is `HBFILT`",6,[[]]],[11,"is_hdfilt","","Checks if the value of the field is `HDFILT`",6,[[]]],[11,"variant","atsamd11c::sysctrl::dpllctrlb","Get enumerated values variant",1445,[[],["filter_a",4]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",1445,[[]]],[11,"is_lbfilt","","Checks if the value of the field is `LBFILT`",1445,[[]]],[11,"is_hbfilt","","Checks if the value of the field is `HBFILT`",1445,[[]]],[11,"is_hdfilt","","Checks if the value of the field is `HDFILT`",1445,[[]]],[11,"variant","","Writes `variant` to the field",1446,[[["filter_a",4]],["w",6]]],[11,"default","","Default filter mode",1446,[[],["w",6]]],[11,"lbfilt","","Low bandwidth filter",1446,[[],["w",6]]],[11,"hbfilt","","High bandwidth filter",1446,[[],["w",6]]],[11,"hdfilt","","High damping filter",1446,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1448,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["refclk_a",4]]]],[11,"is_ref0","","Checks if the value of the field is `REF0`",6,[[]]],[11,"is_ref1","","Checks if the value of the field is `REF1`",6,[[]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"variant","atsamd11c::sysctrl::dpllctrlb","Get enumerated values variant",1449,[[],[["variant",4],["refclk_a",4]]]],[11,"is_ref0","","Checks if the value of the field is `REF0`",1449,[[]]],[11,"is_ref1","","Checks if the value of the field is `REF1`",1449,[[]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1449,[[]]],[11,"variant","","Writes `variant` to the field",1450,[[["refclk_a",4]],["w",6]]],[11,"ref0","","CLK_DPLL_REF0 clock reference",1450,[[],["w",6]]],[11,"ref1","","CLK_DPLL_REF1 clock reference",1450,[[],["w",6]]],[11,"gclk","","GCLK_DPLL clock reference",1450,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1450,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["ltime_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_8ms","","Checks if the value of the field is `_8MS`",6,[[]]],[11,"is_9ms","","Checks if the value of the field is `_9MS`",6,[[]]],[11,"is_10ms","","Checks if the value of the field is `_10MS`",6,[[]]],[11,"is_11ms","","Checks if the value of the field is `_11MS`",6,[[]]],[11,"variant","atsamd11c::sysctrl::dpllctrlb","Get enumerated values variant",1451,[[],[["variant",4],["ltime_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1451,[[]]],[11,"is_8ms","","Checks if the value of the field is `_8MS`",1451,[[]]],[11,"is_9ms","","Checks if the value of the field is `_9MS`",1451,[[]]],[11,"is_10ms","","Checks if the value of the field is `_10MS`",1451,[[]]],[11,"is_11ms","","Checks if the value of the field is `_11MS`",1451,[[]]],[11,"variant","","Writes `variant` to the field",1452,[[["ltime_a",4]],["w",6]]],[11,"none","","Default No time-out",1452,[[],["w",6]]],[11,"_8ms","","8MS Time-out if no lock within 8 ms",1452,[[],["w",6]]],[11,"_9ms","","9MS Time-out if no lock within 9 ms",1452,[[],["w",6]]],[11,"_10ms","","10MS Time-out if no lock within 10 ms",1452,[[],["w",6]]],[11,"_11ms","","11MS Time-out if no lock within 11 ms",1452,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1453,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1454,[[],["w",6]]],[11,"filter","atsamd11c::generic","Bits 0:1 - Proportional Integral Filter Selection",6,[[],["filter_r",6]]],[11,"lpen","","Bit 2 - Low-Power Enable",6,[[],["lpen_r",6]]],[11,"wuf","","Bit 3 - Wake Up Fast",6,[[],["wuf_r",6]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",6,[[],["refclk_r",6]]],[11,"ltime","","Bits 8:10 - Lock Time",6,[[],["ltime_r",6]]],[11,"lbypass","","Bit 12 - Lock Bypass",6,[[],["lbypass_r",6]]],[11,"div","","Bits 16:26 - Clock Divider",6,[[],["div_r",6]]],[11,"filter","atsamd11c::sysctrl::dpllctrlb","Bits 0:1 - Proportional Integral Filter Selection",1455,[[],["filter_r",6]]],[11,"lpen","","Bit 2 - Low-Power Enable",1455,[[],["lpen_r",6]]],[11,"wuf","","Bit 3 - Wake Up Fast",1455,[[],["wuf_r",6]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",1455,[[],["refclk_r",6]]],[11,"ltime","","Bits 8:10 - Lock Time",1455,[[],["ltime_r",6]]],[11,"lbypass","","Bit 12 - Lock Bypass",1455,[[],["lbypass_r",6]]],[11,"div","","Bits 16:26 - Clock Divider",1455,[[],["div_r",6]]],[11,"filter","atsamd11c::generic","Bits 0:1 - Proportional Integral Filter Selection",7,[[],["filter_w",3]]],[11,"lpen","","Bit 2 - Low-Power Enable",7,[[],["lpen_w",3]]],[11,"wuf","","Bit 3 - Wake Up Fast",7,[[],["wuf_w",3]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",7,[[],["refclk_w",3]]],[11,"ltime","","Bits 8:10 - Lock Time",7,[[],["ltime_w",3]]],[11,"lbypass","","Bit 12 - Lock Bypass",7,[[],["lbypass_w",3]]],[11,"div","","Bits 16:26 - Clock Divider",7,[[],["div_w",3]]],[11,"filter","atsamd11c::sysctrl::dpllctrlb","Bits 0:1 - Proportional Integral Filter Selection",1456,[[],["filter_w",3]]],[11,"lpen","","Bit 2 - Low-Power Enable",1456,[[],["lpen_w",3]]],[11,"wuf","","Bit 3 - Wake Up Fast",1456,[[],["wuf_w",3]]],[11,"refclk","","Bits 4:5 - Reference Clock Selection",1456,[[],["refclk_w",3]]],[11,"ltime","","Bits 8:10 - Lock Time",1456,[[],["ltime_w",3]]],[11,"lbypass","","Bit 12 - Lock Bypass",1456,[[],["lbypass_w",3]]],[11,"div","","Bits 16:26 - Clock Divider",1456,[[],["div_w",3]]],[0,"dpllstatus","atsamd11c::sysctrl","DPLL Status",null,null],[6,"R","atsamd11c::sysctrl::dpllstatus","Reader of register DPLLSTATUS",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"CLKRDY_R","","Reader of field `CLKRDY`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"lock","atsamd11c::generic","Bit 0 - DPLL Lock Status",6,[[],["lock_r",6]]],[11,"clkrdy","","Bit 1 - Output Clock Ready",6,[[],["clkrdy_r",6]]],[11,"enable","","Bit 2 - DPLL Enable",6,[[],["enable_r",6]]],[11,"div","","Bit 3 - Divider Enable",6,[[],["div_r",6]]],[11,"lock","atsamd11c::sysctrl::dpllstatus","Bit 0 - DPLL Lock Status",1457,[[],["lock_r",6]]],[11,"clkrdy","","Bit 1 - Output Clock Ready",1457,[[],["clkrdy_r",6]]],[11,"enable","","Bit 2 - DPLL Enable",1457,[[],["enable_r",6]]],[11,"div","","Bit 3 - Divider Enable",1457,[[],["div_r",6]]],[6,"INTENCLR","atsamd11c::sysctrl","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"PCLKSR","","Power and Clocks Status",null,null],[6,"XOSC","","External Multipurpose Crystal Oscillator (XOSC) Control",null,null],[6,"XOSC32K","","32kHz External Crystal Oscillator (XOSC32K) Control",null,null],[6,"OSC32K","","32kHz Internal Oscillator (OSC32K) Control",null,null],[6,"OSCULP32K","","32kHz Ultra Low Power Internal Oscillator (OSCULP32K)…",null,null],[6,"OSC8M","","8MHz Internal Oscillator (OSC8M) Control",null,null],[6,"DFLLCTRL","","DFLL48M Control",null,null],[6,"DFLLVAL","","DFLL48M Value",null,null],[6,"DFLLMUL","","DFLL48M Multiplier",null,null],[6,"DFLLSYNC","","DFLL48M Synchronization",null,null],[6,"BOD33","","3.3V Brown-Out Detector (BOD33) Control",null,null],[6,"VREF","","Voltage References System (VREF) Control",null,null],[6,"DPLLCTRLA","","DPLL Control A",null,null],[6,"DPLLRATIO","","DPLL Ratio Control",null,null],[6,"DPLLCTRLB","","DPLL Control B",null,null],[6,"DPLLSTATUS","","DPLL Status",null,null],[0,"tc1","atsamd11c","Basic Timer Counter 1",null,null],[3,"RegisterBlock","atsamd11c::tc1","Register block",null,null],[3,"COUNT8","","Register block",null,null],[12,"ctrla","","0x00 - Control A",1458,null],[12,"readreq","","0x02 - Read Request",1458,null],[12,"ctrlbclr","","0x04 - Control B Clear",1458,null],[12,"ctrlbset","","0x05 - Control B Set",1458,null],[12,"ctrlc","","0x06 - Control C",1458,null],[12,"dbgctrl","","0x08 - Debug Control",1458,null],[12,"evctrl","","0x0a - Event Control",1458,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1458,null],[12,"intenset","","0x0d - Interrupt Enable Set",1458,null],[12,"intflag","","0x0e - Interrupt Flag Status and Clear",1458,null],[12,"status","","0x0f - Status",1458,null],[12,"count","","0x10 - COUNT8 Counter Value",1458,null],[12,"per","","0x14 - COUNT8 Period Value",1458,null],[12,"cc","","0x18 - COUNT8 Compare/Capture",1458,null],[3,"COUNT16","","Register block",null,null],[12,"ctrla","","0x00 - Control A",1459,null],[12,"readreq","","0x02 - Read Request",1459,null],[12,"ctrlbclr","","0x04 - Control B Clear",1459,null],[12,"ctrlbset","","0x05 - Control B Set",1459,null],[12,"ctrlc","","0x06 - Control C",1459,null],[12,"dbgctrl","","0x08 - Debug Control",1459,null],[12,"evctrl","","0x0a - Event Control",1459,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1459,null],[12,"intenset","","0x0d - Interrupt Enable Set",1459,null],[12,"intflag","","0x0e - Interrupt Flag Status and Clear",1459,null],[12,"status","","0x0f - Status",1459,null],[12,"count","","0x10 - COUNT16 Counter Value",1459,null],[12,"cc","","0x18 - COUNT16 Compare/Capture",1459,null],[3,"COUNT32","","Register block",null,null],[12,"ctrla","","0x00 - Control A",1460,null],[12,"readreq","","0x02 - Read Request",1460,null],[12,"ctrlbclr","","0x04 - Control B Clear",1460,null],[12,"ctrlbset","","0x05 - Control B Set",1460,null],[12,"ctrlc","","0x06 - Control C",1460,null],[12,"dbgctrl","","0x08 - Debug Control",1460,null],[12,"evctrl","","0x0a - Event Control",1460,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1460,null],[12,"intenset","","0x0d - Interrupt Enable Set",1460,null],[12,"intflag","","0x0e - Interrupt Flag Status and Clear",1460,null],[12,"status","","0x0f - Status",1460,null],[12,"count","","0x10 - COUNT32 Counter Value",1460,null],[12,"cc","","0x18 - COUNT32 Compare/Capture",1460,null],[0,"count8","","Register block 8-bit Counter Mode",null,null],[0,"ctrla","atsamd11c::tc1::count8","Control A",null,null],[3,"SWRST_W","atsamd11c::tc1::count8::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"WAVEGEN_W","","Write proxy for field `WAVEGEN`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[4,"MODE_A","","TC Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",1461,null],[13,"COUNT8","","1: Counter in 8-bit mode",1461,null],[13,"COUNT32","","2: Counter in 32-bit mode",1461,null],[4,"WAVEGEN_A","","Waveform Generation Operation",null,null],[13,"NFRQ","","0: `0`",1462,null],[13,"MFRQ","","1: `1`",1462,null],[13,"NPWM","","2: `10`",1462,null],[13,"MPWM","","3: `11`",1462,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",1463,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",1463,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",1463,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",1463,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",1463,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",1463,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",1463,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",1463,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",1464,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",1464,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock.…",1464,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[11,"set_bit","","Sets the field bit",1465,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1465,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1465,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1466,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1466,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1466,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::ctrla","Get enumerated values variant",1467,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1467,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",1467,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1467,[[]]],[11,"variant","","Writes `variant` to the field",1468,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",1468,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",1468,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",1468,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1468,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::ctrla","Get enumerated values variant",1469,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1469,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1469,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1469,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",1469,[[]]],[11,"variant","","Writes `variant` to the field",1470,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","`0`",1470,[[],["w",6]]],[11,"mfrq","","`1`",1470,[[],["w",6]]],[11,"npwm","","`10`",1470,[[],["w",6]]],[11,"mpwm","","`11`",1470,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1470,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::ctrla","Get enumerated values variant",1471,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1471,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1471,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1471,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1471,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1471,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1471,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1471,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1471,[[]]],[11,"variant","","Writes `variant` to the field",1472,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",1472,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",1472,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",1472,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",1472,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",1472,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",1472,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",1472,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",1472,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1472,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1473,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1473,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1473,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::ctrla","Get enumerated values variant",1474,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1474,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1474,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1474,[[]]],[11,"variant","","Writes `variant` to the field",1475,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",1475,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",1475,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock. Reset…",1475,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1475,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",6,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",6,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"enable","atsamd11c::tc1::count8::ctrla","Bit 1 - Enable",1476,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",1476,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1476,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1476,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1476,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1476,[[],["prescsync_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",7,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",7,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"swrst","atsamd11c::tc1::count8::ctrla","Bit 0 - Software Reset",1477,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1477,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",1477,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1477,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1477,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1477,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1477,[[],["prescsync_w",3]]],[0,"readreq","atsamd11c::tc1::count8","Read Request",null,null],[3,"ADDR_W","atsamd11c::tc1::count8::readreq","Write proxy for field `ADDR`",null,null],[3,"RCONT_W","","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[6,"RREQ_R","","Reader of field `RREQ`",null,null],[11,"bits","","Writes raw bits to the field",1478,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1479,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1479,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1479,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1480,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1480,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1480,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:4 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",6,[[],["rreq_r",6]]],[11,"addr","atsamd11c::tc1::count8::readreq","Bits 0:4 - Address",1481,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1481,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",1481,[[],["rreq_r",6]]],[11,"addr","atsamd11c::generic","Bits 0:4 - Address",7,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"addr","atsamd11c::tc1::count8::readreq","Bits 0:4 - Address",1482,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",1482,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1482,[[],["rreq_w",3]]],[0,"ctrlbclr","atsamd11c::tc1::count8","Control B Clear",null,null],[3,"DIR_W","atsamd11c::tc1::count8::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1483,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1483,null],[13,"STOP","","2: Force a stop",1483,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1484,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1484,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1484,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1485,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1485,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1485,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::ctrlbclr","Get enumerated values variant",1486,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1486,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1486,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1486,[[]]],[11,"variant","","Writes `variant` to the field",1487,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1487,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1487,[[],["w",6]]],[11,"stop","","Force a stop",1487,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1487,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tc1::count8::ctrlbclr","Bit 0 - Counter Direction",1488,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1488,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1488,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tc1::count8::ctrlbclr","Bit 0 - Counter Direction",1489,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1489,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1489,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd11c::tc1::count8","Control B Set",null,null],[3,"DIR_W","atsamd11c::tc1::count8::ctrlbset","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1490,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1490,null],[13,"STOP","","2: Force a stop",1490,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1491,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1491,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1491,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1492,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1492,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1492,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::ctrlbset","Get enumerated values variant",1493,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1493,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1493,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1493,[[]]],[11,"variant","","Writes `variant` to the field",1494,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1494,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1494,[[],["w",6]]],[11,"stop","","Force a stop",1494,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1494,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tc1::count8::ctrlbset","Bit 0 - Counter Direction",1495,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1495,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1495,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tc1::count8::ctrlbset","Bit 0 - Counter Direction",1496,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1496,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1496,[[],["cmd_w",3]]],[0,"ctrlc","atsamd11c::tc1::count8","Control C",null,null],[3,"INVEN0_W","atsamd11c::tc1::count8::ctrlc","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[11,"set_bit","","Sets the field bit",1497,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1497,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1497,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1498,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1498,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1498,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1499,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1499,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1499,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1500,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1500,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1500,[[],["w",6]]],[11,"inven0","atsamd11c::generic","Bit 0 - Output Waveform 0 Invert Enable",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",6,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"inven0","atsamd11c::tc1::count8::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1501,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1501,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1501,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1501,[[],["cpten1_r",6]]],[11,"inven0","atsamd11c::generic","Bit 0 - Output Waveform 0 Invert Enable",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",7,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"inven0","atsamd11c::tc1::count8::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1502,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1502,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1502,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1502,[[],["cpten1_w",3]]],[0,"dbgctrl","atsamd11c::tc1::count8","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::tc1::count8::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1503,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1503,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1503,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::tc1::count8::dbgctrl","Bit 0 - Debug Run Mode",1504,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::tc1::count8::dbgctrl","Bit 0 - Debug Run Mode",1505,[[],["dbgrun_w",3]]],[0,"evctrl","atsamd11c::tc1::count8","Event Control",null,null],[3,"EVACT_W","atsamd11c::tc1::count8::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1506,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",1506,null],[13,"COUNT","","2: Count on event",1506,null],[13,"START","","3: Start TC on event",1506,null],[13,"PPW","","5: Period captured in CC0, pulse width in CC1",1506,null],[13,"PWP","","6: Period captured in CC1, pulse width in CC0",1506,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"variant","atsamd11c::tc1::count8::evctrl","Get enumerated values variant",1507,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1507,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1507,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1507,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1507,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1507,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1507,[[]]],[11,"variant","","Writes `variant` to the field",1508,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1508,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",1508,[[],["w",6]]],[11,"count","","Count on event",1508,[[],["w",6]]],[11,"start","","Start TC on event",1508,[[],["w",6]]],[11,"ppw","","Period captured in CC0, pulse width in CC1",1508,[[],["w",6]]],[11,"pwp","","Period captured in CC1, pulse width in CC0",1508,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1508,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1509,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1509,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1509,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1510,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1510,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1510,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1511,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1511,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1511,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1513,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1513,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1513,[[],["w",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd11c::tc1::count8::evctrl","Bits 0:2 - Event Action",1514,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1514,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",1514,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1514,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1514,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1514,[[],["mceo1_r",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd11c::tc1::count8::evctrl","Bits 0:2 - Event Action",1515,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1515,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",1515,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1515,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1515,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1515,[[],["mceo1_w",3]]],[0,"intenclr","atsamd11c::tc1::count8","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd11c::tc1::count8::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1516,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1516,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1516,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1517,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1517,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1517,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1518,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1518,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1518,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1519,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1519,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1519,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1520,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count8::intenclr","Bit 0 - Overflow Interrupt Enable",1521,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1521,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1521,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1521,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1521,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count8::intenclr","Bit 0 - Overflow Interrupt Enable",1522,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1522,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1522,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1522,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1522,[[],["mc1_w",3]]],[0,"intenset","atsamd11c::tc1::count8","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd11c::tc1::count8::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1523,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1524,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1524,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1524,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1525,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1525,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1525,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1526,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1526,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1526,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1527,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1527,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1527,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count8::intenset","Bit 0 - Overflow Interrupt Enable",1528,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1528,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1528,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1528,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1528,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count8::intenset","Bit 0 - Overflow Interrupt Enable",1529,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1529,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1529,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1529,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1529,[[],["mc1_w",3]]],[0,"intflag","atsamd11c::tc1::count8","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd11c::tc1::count8::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1530,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1530,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1530,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1531,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1531,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1531,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1532,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1532,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1532,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1533,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1533,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1533,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1534,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1534,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1534,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count8::intflag","Bit 0 - Overflow",1535,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1535,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1535,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1535,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1535,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count8::intflag","Bit 0 - Overflow",1536,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1536,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1536,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1536,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1536,[[],["mc1_w",3]]],[0,"status","atsamd11c::tc1::count8","Status",null,null],[6,"R","atsamd11c::tc1::count8::status","Reader of register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"stop","atsamd11c::generic","Bit 3 - Stop",6,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"stop","atsamd11c::tc1::count8::status","Bit 3 - Stop",1537,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",1537,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",1537,[[],["syncbusy_r",6]]],[0,"count","atsamd11c::tc1::count8","COUNT8 Counter Value",null,null],[3,"COUNT_W","atsamd11c::tc1::count8::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1538,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 0:7 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tc1::count8::count","Bits 0:7 - Counter Value",1539,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 0:7 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tc1::count8::count","Bits 0:7 - Counter Value",1540,[[],["count_w",3]]],[0,"per","atsamd11c::tc1::count8","COUNT8 Period Value",null,null],[3,"PER_W","atsamd11c::tc1::count8::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1541,[[],["w",6]]],[11,"per","atsamd11c::generic","Bits 0:7 - Period Value",6,[[],["per_r",6]]],[11,"per","atsamd11c::tc1::count8::per","Bits 0:7 - Period Value",1542,[[],["per_r",6]]],[11,"per","atsamd11c::generic","Bits 0:7 - Period Value",7,[[],["per_w",3]]],[11,"per","atsamd11c::tc1::count8::per","Bits 0:7 - Period Value",1543,[[],["per_w",3]]],[0,"cc","atsamd11c::tc1::count8","COUNT8 Compare/Capture",null,null],[3,"CC_W","atsamd11c::tc1::count8::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1544,[[],["w",6]]],[11,"cc","atsamd11c::generic","Bits 0:7 - Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd11c::tc1::count8::cc","Bits 0:7 - Compare/Capture Value",1545,[[],["cc_r",6]]],[11,"cc","atsamd11c::generic","Bits 0:7 - Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd11c::tc1::count8::cc","Bits 0:7 - Compare/Capture Value",1546,[[],["cc_w",3]]],[6,"CTRLA","atsamd11c::tc1::count8","Control A",null,null],[6,"READREQ","","Read Request",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"CTRLC","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","COUNT8 Counter Value",null,null],[6,"PER","","COUNT8 Period Value",null,null],[6,"CC","","COUNT8 Compare/Capture",null,null],[0,"count16","atsamd11c::tc1","Register block 16-bit Counter Mode",null,null],[0,"ctrla","atsamd11c::tc1::count16","Control A",null,null],[3,"SWRST_W","atsamd11c::tc1::count16::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"WAVEGEN_W","","Write proxy for field `WAVEGEN`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[4,"MODE_A","","TC Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",1547,null],[13,"COUNT8","","1: Counter in 8-bit mode",1547,null],[13,"COUNT32","","2: Counter in 32-bit mode",1547,null],[4,"WAVEGEN_A","","Waveform Generation Operation",null,null],[13,"NFRQ","","0: `0`",1548,null],[13,"MFRQ","","1: `1`",1548,null],[13,"NPWM","","2: `10`",1548,null],[13,"MPWM","","3: `11`",1548,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",1549,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",1549,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",1549,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",1549,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",1549,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",1549,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",1549,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",1549,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",1550,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",1550,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock.…",1550,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[11,"set_bit","","Sets the field bit",1551,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1551,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1552,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::ctrla","Get enumerated values variant",1553,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1553,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",1553,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1553,[[]]],[11,"variant","","Writes `variant` to the field",1554,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",1554,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",1554,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",1554,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1554,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::ctrla","Get enumerated values variant",1555,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1555,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1555,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1555,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",1555,[[]]],[11,"variant","","Writes `variant` to the field",1556,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","`0`",1556,[[],["w",6]]],[11,"mfrq","","`1`",1556,[[],["w",6]]],[11,"npwm","","`10`",1556,[[],["w",6]]],[11,"mpwm","","`11`",1556,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1556,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::ctrla","Get enumerated values variant",1557,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1557,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1557,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1557,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1557,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1557,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1557,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1557,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1557,[[]]],[11,"variant","","Writes `variant` to the field",1558,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",1558,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",1558,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",1558,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",1558,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",1558,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",1558,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",1558,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",1558,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1558,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1559,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1559,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1559,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::ctrla","Get enumerated values variant",1560,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1560,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1560,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1560,[[]]],[11,"variant","","Writes `variant` to the field",1561,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",1561,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",1561,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock. Reset…",1561,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1561,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",6,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",6,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"enable","atsamd11c::tc1::count16::ctrla","Bit 1 - Enable",1562,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",1562,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1562,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1562,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1562,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1562,[[],["prescsync_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",7,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",7,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"swrst","atsamd11c::tc1::count16::ctrla","Bit 0 - Software Reset",1563,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1563,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",1563,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1563,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1563,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1563,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1563,[[],["prescsync_w",3]]],[0,"readreq","atsamd11c::tc1::count16","Read Request",null,null],[3,"ADDR_W","atsamd11c::tc1::count16::readreq","Write proxy for field `ADDR`",null,null],[3,"RCONT_W","","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[6,"RREQ_R","","Reader of field `RREQ`",null,null],[11,"bits","","Writes raw bits to the field",1564,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1565,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1565,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1565,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1566,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1566,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1566,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:4 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",6,[[],["rreq_r",6]]],[11,"addr","atsamd11c::tc1::count16::readreq","Bits 0:4 - Address",1567,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1567,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",1567,[[],["rreq_r",6]]],[11,"addr","atsamd11c::generic","Bits 0:4 - Address",7,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"addr","atsamd11c::tc1::count16::readreq","Bits 0:4 - Address",1568,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",1568,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1568,[[],["rreq_w",3]]],[0,"ctrlbclr","atsamd11c::tc1::count16","Control B Clear",null,null],[3,"DIR_W","atsamd11c::tc1::count16::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1569,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1569,null],[13,"STOP","","2: Force a stop",1569,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1570,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1570,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1570,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1571,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1571,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1571,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::ctrlbclr","Get enumerated values variant",1572,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1572,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1572,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1572,[[]]],[11,"variant","","Writes `variant` to the field",1573,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1573,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1573,[[],["w",6]]],[11,"stop","","Force a stop",1573,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1573,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tc1::count16::ctrlbclr","Bit 0 - Counter Direction",1574,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1574,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1574,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tc1::count16::ctrlbclr","Bit 0 - Counter Direction",1575,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1575,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1575,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd11c::tc1::count16","Control B Set",null,null],[3,"DIR_W","atsamd11c::tc1::count16::ctrlbset","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1576,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1576,null],[13,"STOP","","2: Force a stop",1576,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1577,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1577,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1577,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1578,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1578,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1578,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::ctrlbset","Get enumerated values variant",1579,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1579,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1579,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1579,[[]]],[11,"variant","","Writes `variant` to the field",1580,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1580,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1580,[[],["w",6]]],[11,"stop","","Force a stop",1580,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1580,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tc1::count16::ctrlbset","Bit 0 - Counter Direction",1581,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1581,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1581,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tc1::count16::ctrlbset","Bit 0 - Counter Direction",1582,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1582,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1582,[[],["cmd_w",3]]],[0,"ctrlc","atsamd11c::tc1::count16","Control C",null,null],[3,"INVEN0_W","atsamd11c::tc1::count16::ctrlc","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[11,"set_bit","","Sets the field bit",1583,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1583,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1583,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1584,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1584,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1584,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1585,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1585,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1585,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1586,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1586,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1586,[[],["w",6]]],[11,"inven0","atsamd11c::generic","Bit 0 - Output Waveform 0 Invert Enable",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",6,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"inven0","atsamd11c::tc1::count16::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1587,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1587,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1587,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1587,[[],["cpten1_r",6]]],[11,"inven0","atsamd11c::generic","Bit 0 - Output Waveform 0 Invert Enable",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",7,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"inven0","atsamd11c::tc1::count16::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1588,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1588,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1588,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1588,[[],["cpten1_w",3]]],[0,"dbgctrl","atsamd11c::tc1::count16","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::tc1::count16::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1589,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1589,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1589,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::tc1::count16::dbgctrl","Bit 0 - Debug Run Mode",1590,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::tc1::count16::dbgctrl","Bit 0 - Debug Run Mode",1591,[[],["dbgrun_w",3]]],[0,"evctrl","atsamd11c::tc1::count16","Event Control",null,null],[3,"EVACT_W","atsamd11c::tc1::count16::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1592,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",1592,null],[13,"COUNT","","2: Count on event",1592,null],[13,"START","","3: Start TC on event",1592,null],[13,"PPW","","5: Period captured in CC0, pulse width in CC1",1592,null],[13,"PWP","","6: Period captured in CC1, pulse width in CC0",1592,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["evact_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"variant","atsamd11c::tc1::count16::evctrl","Get enumerated values variant",1593,[[],[["variant",4],["evact_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1593,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1593,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1593,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1593,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1593,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1593,[[]]],[11,"variant","","Writes `variant` to the field",1594,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1594,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",1594,[[],["w",6]]],[11,"count","","Count on event",1594,[[],["w",6]]],[11,"start","","Start TC on event",1594,[[],["w",6]]],[11,"ppw","","Period captured in CC0, pulse width in CC1",1594,[[],["w",6]]],[11,"pwp","","Period captured in CC1, pulse width in CC0",1594,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1594,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1595,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1595,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1595,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1596,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1596,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1596,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1597,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1597,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1597,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1598,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1598,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1598,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1599,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1599,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1599,[[],["w",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd11c::tc1::count16::evctrl","Bits 0:2 - Event Action",1600,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1600,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",1600,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1600,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1600,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1600,[[],["mceo1_r",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd11c::tc1::count16::evctrl","Bits 0:2 - Event Action",1601,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1601,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",1601,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1601,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1601,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1601,[[],["mceo1_w",3]]],[0,"intenclr","atsamd11c::tc1::count16","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd11c::tc1::count16::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1602,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1602,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1602,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1603,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1603,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1603,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1604,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1604,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1604,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1605,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1605,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1605,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1606,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1606,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1606,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count16::intenclr","Bit 0 - Overflow Interrupt Enable",1607,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1607,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1607,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1607,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1607,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count16::intenclr","Bit 0 - Overflow Interrupt Enable",1608,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1608,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1608,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1608,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1608,[[],["mc1_w",3]]],[0,"intenset","atsamd11c::tc1::count16","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd11c::tc1::count16::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1609,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1609,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1609,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1610,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1610,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1610,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1611,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1611,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1611,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1612,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1612,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1612,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1613,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1613,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1613,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count16::intenset","Bit 0 - Overflow Interrupt Enable",1614,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1614,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1614,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1614,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1614,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count16::intenset","Bit 0 - Overflow Interrupt Enable",1615,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1615,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1615,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1615,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1615,[[],["mc1_w",3]]],[0,"intflag","atsamd11c::tc1::count16","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd11c::tc1::count16::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1616,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1616,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1616,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1617,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1617,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1617,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1619,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1619,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1619,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1620,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1620,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1620,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count16::intflag","Bit 0 - Overflow",1621,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1621,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1621,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1621,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1621,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count16::intflag","Bit 0 - Overflow",1622,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1622,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1622,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1622,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1622,[[],["mc1_w",3]]],[0,"status","atsamd11c::tc1::count16","Status",null,null],[6,"R","atsamd11c::tc1::count16::status","Reader of register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"stop","atsamd11c::generic","Bit 3 - Stop",6,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"stop","atsamd11c::tc1::count16::status","Bit 3 - Stop",1623,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",1623,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",1623,[[],["syncbusy_r",6]]],[0,"count","atsamd11c::tc1::count16","COUNT16 Counter Value",null,null],[3,"COUNT_W","atsamd11c::tc1::count16::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1624,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 0:15 - Count Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tc1::count16::count","Bits 0:15 - Count Value",1625,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 0:15 - Count Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tc1::count16::count","Bits 0:15 - Count Value",1626,[[],["count_w",3]]],[0,"cc","atsamd11c::tc1::count16","COUNT16 Compare/Capture",null,null],[3,"CC_W","atsamd11c::tc1::count16::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1627,[[],["w",6]]],[11,"cc","atsamd11c::generic","Bits 0:15 - Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd11c::tc1::count16::cc","Bits 0:15 - Compare/Capture Value",1628,[[],["cc_r",6]]],[11,"cc","atsamd11c::generic","Bits 0:15 - Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd11c::tc1::count16::cc","Bits 0:15 - Compare/Capture Value",1629,[[],["cc_w",3]]],[6,"CTRLA","atsamd11c::tc1::count16","Control A",null,null],[6,"READREQ","","Read Request",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"CTRLC","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","COUNT16 Counter Value",null,null],[6,"CC","","COUNT16 Compare/Capture",null,null],[0,"count32","atsamd11c::tc1","Register block 32-bit Counter Mode",null,null],[0,"ctrla","atsamd11c::tc1::count32","Control A",null,null],[3,"SWRST_W","atsamd11c::tc1::count32::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"WAVEGEN_W","","Write proxy for field `WAVEGEN`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[4,"MODE_A","","TC Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",1630,null],[13,"COUNT8","","1: Counter in 8-bit mode",1630,null],[13,"COUNT32","","2: Counter in 32-bit mode",1630,null],[4,"WAVEGEN_A","","Waveform Generation Operation",null,null],[13,"NFRQ","","0: `0`",1631,null],[13,"MFRQ","","1: `1`",1631,null],[13,"NPWM","","2: `10`",1631,null],[13,"MPWM","","3: `11`",1631,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",1632,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",1632,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",1632,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",1632,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",1632,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",1632,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",1632,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",1632,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",1633,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",1633,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock.…",1633,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[11,"set_bit","","Sets the field bit",1634,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1634,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1634,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1635,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1635,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1635,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::ctrla","Get enumerated values variant",1636,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1636,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",1636,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1636,[[]]],[11,"variant","","Writes `variant` to the field",1637,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",1637,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",1637,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",1637,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1637,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::ctrla","Get enumerated values variant",1638,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1638,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1638,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1638,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",1638,[[]]],[11,"variant","","Writes `variant` to the field",1639,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","`0`",1639,[[],["w",6]]],[11,"mfrq","","`1`",1639,[[],["w",6]]],[11,"npwm","","`10`",1639,[[],["w",6]]],[11,"mpwm","","`11`",1639,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1639,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::ctrla","Get enumerated values variant",1640,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1640,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1640,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1640,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1640,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1640,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1640,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1640,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1640,[[]]],[11,"variant","","Writes `variant` to the field",1641,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",1641,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",1641,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",1641,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",1641,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",1641,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",1641,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",1641,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",1641,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1641,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1642,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1642,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1642,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::ctrla","Get enumerated values variant",1643,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1643,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1643,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1643,[[]]],[11,"variant","","Writes `variant` to the field",1644,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",1644,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",1644,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock. Reset…",1644,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1644,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",6,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",6,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"enable","atsamd11c::tc1::count32::ctrla","Bit 1 - Enable",1645,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - TC Mode",1645,[[],["mode_r",6]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1645,[[],["wavegen_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1645,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1645,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1645,[[],["prescsync_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",7,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",7,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"swrst","atsamd11c::tc1::count32::ctrla","Bit 0 - Software Reset",1646,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1646,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - TC Mode",1646,[[],["mode_w",3]]],[11,"wavegen","","Bits 5:6 - Waveform Generation Operation",1646,[[],["wavegen_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1646,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1646,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization",1646,[[],["prescsync_w",3]]],[0,"readreq","atsamd11c::tc1::count32","Read Request",null,null],[3,"ADDR_W","atsamd11c::tc1::count32::readreq","Write proxy for field `ADDR`",null,null],[3,"RCONT_W","","Write proxy for field `RCONT`",null,null],[3,"RREQ_W","","Write proxy for field `RREQ`",null,null],[6,"R","","Reader of register READREQ",null,null],[6,"W","","Writer for register READREQ",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"RCONT_R","","Reader of field `RCONT`",null,null],[6,"RREQ_R","","Reader of field `RREQ`",null,null],[11,"bits","","Writes raw bits to the field",1647,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1648,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1648,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1649,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1649,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1649,[[],["w",6]]],[11,"addr","atsamd11c::generic","Bits 0:4 - Address",6,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",6,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",6,[[],["rreq_r",6]]],[11,"addr","atsamd11c::tc1::count32::readreq","Bits 0:4 - Address",1650,[[],["addr_r",6]]],[11,"rcont","","Bit 14 - Read Continuously",1650,[[],["rcont_r",6]]],[11,"rreq","","Bit 15 - Read Request",1650,[[],["rreq_r",6]]],[11,"addr","atsamd11c::generic","Bits 0:4 - Address",7,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",7,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",7,[[],["rreq_w",3]]],[11,"addr","atsamd11c::tc1::count32::readreq","Bits 0:4 - Address",1651,[[],["addr_w",3]]],[11,"rcont","","Bit 14 - Read Continuously",1651,[[],["rcont_w",3]]],[11,"rreq","","Bit 15 - Read Request",1651,[[],["rreq_w",3]]],[0,"ctrlbclr","atsamd11c::tc1::count32","Control B Clear",null,null],[3,"DIR_W","atsamd11c::tc1::count32::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1652,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1652,null],[13,"STOP","","2: Force a stop",1652,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1653,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1653,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1653,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1654,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1654,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1654,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::ctrlbclr","Get enumerated values variant",1655,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1655,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1655,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1655,[[]]],[11,"variant","","Writes `variant` to the field",1656,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1656,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1656,[[],["w",6]]],[11,"stop","","Force a stop",1656,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1656,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tc1::count32::ctrlbclr","Bit 0 - Counter Direction",1657,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1657,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1657,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tc1::count32::ctrlbclr","Bit 0 - Counter Direction",1658,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1658,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1658,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd11c::tc1::count32","Control B Set",null,null],[3,"DIR_W","atsamd11c::tc1::count32::ctrlbset","Write proxy for field `DIR`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1659,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",1659,null],[13,"STOP","","2: Force a stop",1659,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1660,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1660,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1660,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1661,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1661,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1661,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::ctrlbset","Get enumerated values variant",1662,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1662,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1662,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1662,[[]]],[11,"variant","","Writes `variant` to the field",1663,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1663,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",1663,[[],["w",6]]],[11,"stop","","Force a stop",1663,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1663,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tc1::count32::ctrlbset","Bit 0 - Counter Direction",1664,[[],["dir_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1664,[[],["oneshot_r",6]]],[11,"cmd","","Bits 6:7 - Command",1664,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tc1::count32::ctrlbset","Bit 0 - Counter Direction",1665,[[],["dir_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1665,[[],["oneshot_w",3]]],[11,"cmd","","Bits 6:7 - Command",1665,[[],["cmd_w",3]]],[0,"ctrlc","atsamd11c::tc1::count32","Control C",null,null],[3,"INVEN0_W","atsamd11c::tc1::count32::ctrlc","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[11,"set_bit","","Sets the field bit",1666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1666,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1667,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1667,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1667,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1668,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1668,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1668,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1669,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1669,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1669,[[],["w",6]]],[11,"inven0","atsamd11c::generic","Bit 0 - Output Waveform 0 Invert Enable",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",6,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"inven0","atsamd11c::tc1::count32::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1670,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1670,[[],["inven1_r",6]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1670,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1670,[[],["cpten1_r",6]]],[11,"inven0","atsamd11c::generic","Bit 0 - Output Waveform 0 Invert Enable",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",7,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"inven0","atsamd11c::tc1::count32::ctrlc","Bit 0 - Output Waveform 0 Invert Enable",1671,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform 1 Invert Enable",1671,[[],["inven1_w",3]]],[11,"cpten0","","Bit 4 - Capture Channel 0 Enable",1671,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 5 - Capture Channel 1 Enable",1671,[[],["cpten1_w",3]]],[0,"dbgctrl","atsamd11c::tc1::count32","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::tc1::count32::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1672,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1672,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1672,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::tc1::count32::dbgctrl","Bit 0 - Debug Run Mode",1673,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd11c::tc1::count32::dbgctrl","Bit 0 - Debug Run Mode",1674,[[],["dbgrun_w",3]]],[0,"evctrl","atsamd11c::tc1::count32","Event Control",null,null],[3,"EVACT_W","atsamd11c::tc1::count32::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1675,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",1675,null],[13,"COUNT","","2: Count on event",1675,null],[13,"START","","3: Start TC on event",1675,null],[13,"PPW","","5: Period captured in CC0, pulse width in CC1",1675,null],[13,"PWP","","6: Period captured in CC1, pulse width in CC0",1675,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"variant","atsamd11c::tc1::count32::evctrl","Get enumerated values variant",1676,[[],[["evact_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1676,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1676,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1676,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1676,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1676,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1676,[[]]],[11,"variant","","Writes `variant` to the field",1677,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1677,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",1677,[[],["w",6]]],[11,"count","","Count on event",1677,[[],["w",6]]],[11,"start","","Start TC on event",1677,[[],["w",6]]],[11,"ppw","","Period captured in CC0, pulse width in CC1",1677,[[],["w",6]]],[11,"pwp","","Period captured in CC1, pulse width in CC0",1677,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1677,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1678,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1678,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1678,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1679,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1679,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1679,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1680,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1680,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1680,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1681,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1681,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1681,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1682,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1682,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1682,[[],["w",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd11c::tc1::count32::evctrl","Bits 0:2 - Event Action",1683,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1683,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Input",1683,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1683,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1683,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1683,[[],["mceo1_r",6]]],[11,"evact","atsamd11c::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd11c::tc1::count32::evctrl","Bits 0:2 - Event Action",1684,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Inverted Event Input",1684,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Input",1684,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Event Output Enable",1684,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - Match or Capture Channel 0 Event Output Enable",1684,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match or Capture Channel 1 Event Output Enable",1684,[[],["mceo1_w",3]]],[0,"intenclr","atsamd11c::tc1::count32","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd11c::tc1::count32::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1685,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1685,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1685,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1686,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1686,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1686,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1687,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1687,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1687,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1688,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1688,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1688,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1689,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1689,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1689,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count32::intenclr","Bit 0 - Overflow Interrupt Enable",1690,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1690,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1690,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1690,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1690,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count32::intenclr","Bit 0 - Overflow Interrupt Enable",1691,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1691,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1691,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1691,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1691,[[],["mc1_w",3]]],[0,"intenset","atsamd11c::tc1::count32","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd11c::tc1::count32::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1692,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1692,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1692,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1693,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1693,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1693,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1694,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1694,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1694,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1695,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1695,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1695,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1696,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1696,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1696,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count32::intenset","Bit 0 - Overflow Interrupt Enable",1697,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1697,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1697,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1697,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1697,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count32::intenset","Bit 0 - Overflow Interrupt Enable",1698,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1698,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready Interrupt Enable",1698,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0 Interrupt Enable",1698,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1 Interrupt Enable",1698,[[],["mc1_w",3]]],[0,"intflag","atsamd11c::tc1::count32","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd11c::tc1::count32::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"SYNCRDY_W","","Write proxy for field `SYNCRDY`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"SYNCRDY_R","","Reader of field `SYNCRDY`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1699,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1700,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1700,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1700,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1701,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1701,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1701,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1702,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1702,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1702,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1703,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1703,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1703,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",6,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::tc1::count32::intflag","Bit 0 - Overflow",1704,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1704,[[],["err_r",6]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1704,[[],["syncrdy_r",6]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1704,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1704,[[],["mc1_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",7,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd11c::tc1::count32::intflag","Bit 0 - Overflow",1705,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1705,[[],["err_w",3]]],[11,"syncrdy","","Bit 3 - Synchronization Ready",1705,[[],["syncrdy_w",3]]],[11,"mc0","","Bit 4 - Match or Capture Channel 0",1705,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Match or Capture Channel 1",1705,[[],["mc1_w",3]]],[0,"status","atsamd11c::tc1::count32","Status",null,null],[6,"R","atsamd11c::tc1::count32::status","Reader of register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"stop","atsamd11c::generic","Bit 3 - Stop",6,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"stop","atsamd11c::tc1::count32::status","Bit 3 - Stop",1706,[[],["stop_r",6]]],[11,"slave","","Bit 4 - Slave",1706,[[],["slave_r",6]]],[11,"syncbusy","","Bit 7 - Synchronization Busy",1706,[[],["syncbusy_r",6]]],[0,"count","atsamd11c::tc1::count32","COUNT32 Counter Value",null,null],[3,"COUNT_W","atsamd11c::tc1::count32::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1707,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 0:31 - Count Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tc1::count32::count","Bits 0:31 - Count Value",1708,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 0:31 - Count Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tc1::count32::count","Bits 0:31 - Count Value",1709,[[],["count_w",3]]],[0,"cc","atsamd11c::tc1::count32","COUNT32 Compare/Capture",null,null],[3,"CC_W","atsamd11c::tc1::count32::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1710,[[],["w",6]]],[11,"cc","atsamd11c::generic","Bits 0:31 - Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd11c::tc1::count32::cc","Bits 0:31 - Compare/Capture Value",1711,[[],["cc_r",6]]],[11,"cc","atsamd11c::generic","Bits 0:31 - Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd11c::tc1::count32::cc","Bits 0:31 - Compare/Capture Value",1712,[[],["cc_w",3]]],[6,"CTRLA","atsamd11c::tc1::count32","Control A",null,null],[6,"READREQ","","Read Request",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"CTRLC","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","COUNT32 Counter Value",null,null],[6,"CC","","COUNT32 Compare/Capture",null,null],[11,"count32","atsamd11c::tc1","0x00 - 32-bit Counter Mode",1713,[[],["count32",3]]],[11,"count32_mut","","0x00 - 32-bit Counter Mode",1713,[[],["count32",3]]],[11,"count16","","0x00 - 16-bit Counter Mode",1713,[[],["count16",3]]],[11,"count16_mut","","0x00 - 16-bit Counter Mode",1713,[[],["count16",3]]],[11,"count8","","0x00 - 8-bit Counter Mode",1713,[[],["count8",3]]],[11,"count8_mut","","0x00 - 8-bit Counter Mode",1713,[[],["count8",3]]],[0,"tcc0","atsamd11c","Timer Counter Control",null,null],[3,"RegisterBlock","atsamd11c::tcc0","Register block",null,null],[12,"ctrla","","0x00 - Control A",1714,null],[12,"ctrlbclr","","0x04 - Control B Clear",1714,null],[12,"ctrlbset","","0x05 - Control B Set",1714,null],[12,"syncbusy","","0x08 - Synchronization Busy",1714,null],[12,"fctrla","","0x0c - Recoverable Fault A Configuration",1714,null],[12,"fctrlb","","0x10 - Recoverable Fault B Configuration",1714,null],[12,"wexctrl","","0x14 - Waveform Extension Configuration",1714,null],[12,"drvctrl","","0x18 - Driver Control",1714,null],[12,"dbgctrl","","0x1e - Debug Control",1714,null],[12,"evctrl","","0x20 - Event Control",1714,null],[12,"intenclr","","0x24 - Interrupt Enable Clear",1714,null],[12,"intenset","","0x28 - Interrupt Enable Set",1714,null],[12,"intflag","","0x2c - Interrupt Flag Status and Clear",1714,null],[12,"status","","0x30 - Status",1714,null],[12,"patt","","0x38 - Pattern",1714,null],[12,"wave","","0x3c - Waveform Control",1714,null],[12,"pattb","","0x64 - Pattern Buffer",1714,null],[12,"waveb","","0x68 - Waveform Control Buffer",1714,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd11c::tcc0::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RESOLUTION_W","","Write proxy for field `RESOLUTION`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[3,"CPTEN2_W","","Write proxy for field `CPTEN2`",null,null],[3,"CPTEN3_W","","Write proxy for field `CPTEN3`",null,null],[4,"RESOLUTION_A","","Enhanced Resolution",null,null],[13,"NONE","","0: Dithering is disabled",1715,null],[13,"DITH4","","1: Dithering is done every 16 PWM frames",1715,null],[13,"DITH5","","2: Dithering is done every 32 PWM frames",1715,null],[13,"DITH6","","3: Dithering is done every 64 PWM frames",1715,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: No division",1716,null],[13,"DIV2","","1: Divide by 2",1716,null],[13,"DIV4","","2: Divide by 4",1716,null],[13,"DIV8","","3: Divide by 8",1716,null],[13,"DIV16","","4: Divide by 16",1716,null],[13,"DIV64","","5: Divide by 64",1716,null],[13,"DIV256","","6: Divide by 256",1716,null],[13,"DIV1024","","7: Divide by 1024",1716,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization Selection",null,null],[13,"GCLK","","0: Reload or reset counter on next GCLK",1717,null],[13,"PRESC","","1: Reload or reset counter on next prescaler clock",1717,null],[13,"RESYNC","","2: Reload or reset counter on next GCLK and reset…",1717,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RESOLUTION_R","","Reader of field `RESOLUTION`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[6,"CPTEN2_R","","Reader of field `CPTEN2`",null,null],[6,"CPTEN3_R","","Reader of field `CPTEN3`",null,null],[11,"set_bit","","Sets the field bit",1718,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1718,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1718,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1719,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1719,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1719,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["resolution_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_dith4","","Checks if the value of the field is `DITH4`",6,[[]]],[11,"is_dith5","","Checks if the value of the field is `DITH5`",6,[[]]],[11,"is_dith6","","Checks if the value of the field is `DITH6`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrla","Get enumerated values variant",1720,[[],["resolution_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",1720,[[]]],[11,"is_dith4","","Checks if the value of the field is `DITH4`",1720,[[]]],[11,"is_dith5","","Checks if the value of the field is `DITH5`",1720,[[]]],[11,"is_dith6","","Checks if the value of the field is `DITH6`",1720,[[]]],[11,"variant","","Writes `variant` to the field",1721,[[["resolution_a",4]],["w",6]]],[11,"none","","Dithering is disabled",1721,[[],["w",6]]],[11,"dith4","","Dithering is done every 16 PWM frames",1721,[[],["w",6]]],[11,"dith5","","Dithering is done every 32 PWM frames",1721,[[],["w",6]]],[11,"dith6","","Dithering is done every 64 PWM frames",1721,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1721,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrla","Get enumerated values variant",1722,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1722,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1722,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1722,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1722,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1722,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1722,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1722,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1722,[[]]],[11,"variant","","Writes `variant` to the field",1723,[[["prescaler_a",4]],["w",6]]],[11,"div1","","No division",1723,[[],["w",6]]],[11,"div2","","Divide by 2",1723,[[],["w",6]]],[11,"div4","","Divide by 4",1723,[[],["w",6]]],[11,"div8","","Divide by 8",1723,[[],["w",6]]],[11,"div16","","Divide by 16",1723,[[],["w",6]]],[11,"div64","","Divide by 64",1723,[[],["w",6]]],[11,"div256","","Divide by 256",1723,[[],["w",6]]],[11,"div1024","","Divide by 1024",1723,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1723,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1724,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1724,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1724,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrla","Get enumerated values variant",1725,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1725,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",1725,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",1725,[[]]],[11,"variant","","Writes `variant` to the field",1726,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset counter on next GCLK",1726,[[],["w",6]]],[11,"presc","","Reload or reset counter on next prescaler clock",1726,[[],["w",6]]],[11,"resync","","Reload or reset counter on next GCLK and reset prescaler…",1726,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1726,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1727,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1727,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1727,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1728,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1728,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1728,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1729,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1729,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1729,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1730,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1730,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1730,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1731,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1731,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1731,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",6,[[],["resolution_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",6,[[],["prescsync_r",6]]],[11,"alock","","Bit 14 - Auto Lock",6,[[],["alock_r",6]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",6,[[],["cpten2_r",6]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",6,[[],["cpten3_r",6]]],[11,"swrst","atsamd11c::tcc0::ctrla","Bit 0 - Software Reset",1732,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1732,[[],["enable_r",6]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",1732,[[],["resolution_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",1732,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",1732,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",1732,[[],["prescsync_r",6]]],[11,"alock","","Bit 14 - Auto Lock",1732,[[],["alock_r",6]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",1732,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",1732,[[],["cpten1_r",6]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",1732,[[],["cpten2_r",6]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",1732,[[],["cpten3_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",7,[[],["resolution_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",7,[[],["prescsync_w",3]]],[11,"alock","","Bit 14 - Auto Lock",7,[[],["alock_w",3]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",7,[[],["cpten2_w",3]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",7,[[],["cpten3_w",3]]],[11,"swrst","atsamd11c::tcc0::ctrla","Bit 0 - Software Reset",1733,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1733,[[],["enable_w",3]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",1733,[[],["resolution_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",1733,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",1733,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",1733,[[],["prescsync_w",3]]],[11,"alock","","Bit 14 - Auto Lock",1733,[[],["alock_w",3]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",1733,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",1733,[[],["cpten1_w",3]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",1733,[[],["cpten2_w",3]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",1733,[[],["cpten3_w",3]]],[0,"ctrlbclr","atsamd11c::tcc0","Control B Clear",null,null],[3,"DIR_W","atsamd11c::tcc0::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"IDXCMD_W","","Write proxy for field `IDXCMD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"IDXCMD_A","","Ramp Index Command",null,null],[13,"DISABLE","","0: Command disabled: Index toggles between cycles A and B",1734,null],[13,"SET","","1: Set index: cycle B will be forced in the next cycle",1734,null],[13,"CLEAR","","2: Clear index: cycle A will be forced in the next cycle",1734,null],[13,"HOLD","","3: Hold index: the next cycle will be the same as the…",1734,null],[4,"CMD_A","","TCC Command",null,null],[13,"NONE","","0: No action",1735,null],[13,"RETRIGGER","","1: Clear start, restart or retrigger",1735,null],[13,"STOP","","2: Force stop",1735,null],[13,"UPDATE","","3: Force update or double buffered registers",1735,null],[13,"READSYNC","","4: Force COUNT read synchronization",1735,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"IDXCMD_R","","Reader of field `IDXCMD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1736,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1736,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1736,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1737,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1737,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1737,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1738,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1738,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1738,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",6,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrlbclr","Get enumerated values variant",1739,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1739,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",1739,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",1739,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",1739,[[]]],[11,"variant","","Writes `variant` to the field",1740,[[["idxcmd_a",4]],["w",6]]],[11,"disable","","Command disabled: Index toggles between cycles A and B",1740,[[],["w",6]]],[11,"set","","Set index: cycle B will be forced in the next cycle",1740,[[],["w",6]]],[11,"clear","","Clear index: cycle A will be forced in the next cycle",1740,[[],["w",6]]],[11,"hold","","Hold index: the next cycle will be the same as the current…",1740,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1740,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrlbclr","Get enumerated values variant",1741,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1741,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1741,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1741,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",1741,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",1741,[[]]],[11,"variant","","Writes `variant` to the field",1742,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1742,[[],["w",6]]],[11,"retrigger","","Clear start, restart or retrigger",1742,[[],["w",6]]],[11,"stop","","Force stop",1742,[[],["w",6]]],[11,"update","","Force update or double buffered registers",1742,[[],["w",6]]],[11,"readsync","","Force COUNT read synchronization",1742,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1742,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",6,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tcc0::ctrlbclr","Bit 0 - Counter Direction",1743,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",1743,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1743,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1743,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",1743,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",7,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tcc0::ctrlbclr","Bit 0 - Counter Direction",1744,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",1744,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1744,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1744,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",1744,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd11c::tcc0","Control B Set",null,null],[3,"DIR_W","atsamd11c::tcc0::ctrlbset","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"IDXCMD_W","","Write proxy for field `IDXCMD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"IDXCMD_A","","Ramp Index Command",null,null],[13,"DISABLE","","0: Command disabled: Index toggles between cycles A and B",1745,null],[13,"SET","","1: Set index: cycle B will be forced in the next cycle",1745,null],[13,"CLEAR","","2: Clear index: cycle A will be forced in the next cycle",1745,null],[13,"HOLD","","3: Hold index: the next cycle will be the same as the…",1745,null],[4,"CMD_A","","TCC Command",null,null],[13,"NONE","","0: No action",1746,null],[13,"RETRIGGER","","1: Clear start, restart or retrigger",1746,null],[13,"STOP","","2: Force stop",1746,null],[13,"UPDATE","","3: Force update or double buffered registers",1746,null],[13,"READSYNC","","4: Force COUNT read synchronization",1746,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"IDXCMD_R","","Reader of field `IDXCMD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1748,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1748,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1748,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1749,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1749,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1749,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",6,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrlbset","Get enumerated values variant",1750,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1750,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",1750,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",1750,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",1750,[[]]],[11,"variant","","Writes `variant` to the field",1751,[[["idxcmd_a",4]],["w",6]]],[11,"disable","","Command disabled: Index toggles between cycles A and B",1751,[[],["w",6]]],[11,"set","","Set index: cycle B will be forced in the next cycle",1751,[[],["w",6]]],[11,"clear","","Clear index: cycle A will be forced in the next cycle",1751,[[],["w",6]]],[11,"hold","","Hold index: the next cycle will be the same as the current…",1751,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1751,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"variant","atsamd11c::tcc0::ctrlbset","Get enumerated values variant",1752,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1752,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1752,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1752,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",1752,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",1752,[[]]],[11,"variant","","Writes `variant` to the field",1753,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1753,[[],["w",6]]],[11,"retrigger","","Clear start, restart or retrigger",1753,[[],["w",6]]],[11,"stop","","Force stop",1753,[[],["w",6]]],[11,"update","","Force update or double buffered registers",1753,[[],["w",6]]],[11,"readsync","","Force COUNT read synchronization",1753,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1753,[[],["w",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",6,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd11c::tcc0::ctrlbset","Bit 0 - Counter Direction",1754,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",1754,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",1754,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1754,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",1754,[[],["cmd_r",6]]],[11,"dir","atsamd11c::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",7,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd11c::tcc0::ctrlbset","Bit 0 - Counter Direction",1755,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",1755,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",1755,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",1755,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",1755,[[],["cmd_w",3]]],[0,"syncbusy","atsamd11c::tcc0","Synchronization Busy",null,null],[6,"R","atsamd11c::tcc0::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PATT_R","","Reader of field `PATT`",null,null],[6,"WAVE_R","","Reader of field `WAVE`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[6,"CC2_R","","Reader of field `CC2`",null,null],[6,"CC3_R","","Reader of field `CC3`",null,null],[6,"PATTB_R","","Reader of field `PATTB`",null,null],[6,"WAVEB_R","","Reader of field `WAVEB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[6,"CCB0_R","","Reader of field `CCB0`",null,null],[6,"CCB1_R","","Reader of field `CCB1`",null,null],[6,"CCB2_R","","Reader of field `CCB2`",null,null],[6,"CCB3_R","","Reader of field `CCB3`",null,null],[11,"swrst","atsamd11c::generic","Bit 0 - Swrst Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Ctrlb Busy",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Busy",6,[[],["status_r",6]]],[11,"count","","Bit 4 - Count Busy",6,[[],["count_r",6]]],[11,"patt","","Bit 5 - Pattern Busy",6,[[],["patt_r",6]]],[11,"wave","","Bit 6 - Wave Busy",6,[[],["wave_r",6]]],[11,"per","","Bit 7 - Period busy",6,[[],["per_r",6]]],[11,"cc0","","Bit 8 - Compare Channel 0 Busy",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 9 - Compare Channel 1 Busy",6,[[],["cc1_r",6]]],[11,"cc2","","Bit 10 - Compare Channel 2 Busy",6,[[],["cc2_r",6]]],[11,"cc3","","Bit 11 - Compare Channel 3 Busy",6,[[],["cc3_r",6]]],[11,"pattb","","Bit 16 - Pattern Buffer Busy",6,[[],["pattb_r",6]]],[11,"waveb","","Bit 17 - Wave Buffer Busy",6,[[],["waveb_r",6]]],[11,"perb","","Bit 18 - Period Buffer Busy",6,[[],["perb_r",6]]],[11,"ccb0","","Bit 19 - Compare Channel Buffer 0 Busy",6,[[],["ccb0_r",6]]],[11,"ccb1","","Bit 20 - Compare Channel Buffer 1 Busy",6,[[],["ccb1_r",6]]],[11,"ccb2","","Bit 21 - Compare Channel Buffer 2 Busy",6,[[],["ccb2_r",6]]],[11,"ccb3","","Bit 22 - Compare Channel Buffer 3 Busy",6,[[],["ccb3_r",6]]],[11,"swrst","atsamd11c::tcc0::syncbusy","Bit 0 - Swrst Busy",1756,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Busy",1756,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Ctrlb Busy",1756,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Busy",1756,[[],["status_r",6]]],[11,"count","","Bit 4 - Count Busy",1756,[[],["count_r",6]]],[11,"patt","","Bit 5 - Pattern Busy",1756,[[],["patt_r",6]]],[11,"wave","","Bit 6 - Wave Busy",1756,[[],["wave_r",6]]],[11,"per","","Bit 7 - Period busy",1756,[[],["per_r",6]]],[11,"cc0","","Bit 8 - Compare Channel 0 Busy",1756,[[],["cc0_r",6]]],[11,"cc1","","Bit 9 - Compare Channel 1 Busy",1756,[[],["cc1_r",6]]],[11,"cc2","","Bit 10 - Compare Channel 2 Busy",1756,[[],["cc2_r",6]]],[11,"cc3","","Bit 11 - Compare Channel 3 Busy",1756,[[],["cc3_r",6]]],[11,"pattb","","Bit 16 - Pattern Buffer Busy",1756,[[],["pattb_r",6]]],[11,"waveb","","Bit 17 - Wave Buffer Busy",1756,[[],["waveb_r",6]]],[11,"perb","","Bit 18 - Period Buffer Busy",1756,[[],["perb_r",6]]],[11,"ccb0","","Bit 19 - Compare Channel Buffer 0 Busy",1756,[[],["ccb0_r",6]]],[11,"ccb1","","Bit 20 - Compare Channel Buffer 1 Busy",1756,[[],["ccb1_r",6]]],[11,"ccb2","","Bit 21 - Compare Channel Buffer 2 Busy",1756,[[],["ccb2_r",6]]],[11,"ccb3","","Bit 22 - Compare Channel Buffer 3 Busy",1756,[[],["ccb3_r",6]]],[0,"fctrla","atsamd11c::tcc0","Recoverable Fault A Configuration",null,null],[3,"SRC_W","atsamd11c::tcc0::fctrla","Write proxy for field `SRC`",null,null],[3,"KEEP_W","","Write proxy for field `KEEP`",null,null],[3,"QUAL_W","","Write proxy for field `QUAL`",null,null],[3,"BLANK_W","","Write proxy for field `BLANK`",null,null],[3,"RESTART_W","","Write proxy for field `RESTART`",null,null],[3,"HALT_W","","Write proxy for field `HALT`",null,null],[3,"CHSEL_W","","Write proxy for field `CHSEL`",null,null],[3,"CAPTURE_W","","Write proxy for field `CAPTURE`",null,null],[3,"BLANKPRESC_W","","Write proxy for field `BLANKPRESC`",null,null],[3,"BLANKVAL_W","","Write proxy for field `BLANKVAL`",null,null],[3,"FILTERVAL_W","","Write proxy for field `FILTERVAL`",null,null],[4,"SRC_A","","Fault A Source",null,null],[13,"DISABLE","","0: Fault input disabled",1757,null],[13,"ENABLE","","1: MCEx (x=0,1) event input",1757,null],[13,"INVERT","","2: Inverted MCEx (x=0,1) event input",1757,null],[13,"ALTFAULT","","3: Alternate fault (A or B) state at the end of the…",1757,null],[4,"BLANK_A","","Fault A Blanking Mode",null,null],[13,"START","","0: Blanking applied from start of ramp",1758,null],[13,"RISE","","1: Blanking applied from rising edge of the output waveform",1758,null],[13,"FALL","","2: Blanking applied from falling edge of the output waveform",1758,null],[13,"BOTH","","3: Blanking applied from each toggle of the output waveform",1758,null],[4,"HALT_A","","Fault A Halt Mode",null,null],[13,"DISABLE","","0: Halt action disabled",1759,null],[13,"HW","","1: Hardware halt action",1759,null],[13,"SW","","2: Software halt action",1759,null],[13,"NR","","3: Non-recoverable fault",1759,null],[4,"CHSEL_A","","Fault A Capture Channel",null,null],[13,"CC0","","0: Capture value stored in channel 0",1760,null],[13,"CC1","","1: Capture value stored in channel 1",1760,null],[13,"CC2","","2: Capture value stored in channel 2",1760,null],[13,"CC3","","3: Capture value stored in channel 3",1760,null],[4,"CAPTURE_A","","Fault A Capture Action",null,null],[13,"DISABLE","","0: No capture",1761,null],[13,"CAPT","","1: Capture on fault",1761,null],[13,"CAPTMIN","","2: Minimum capture",1761,null],[13,"CAPTMAX","","3: Maximum capture",1761,null],[13,"LOCMIN","","4: Minimum local detection",1761,null],[13,"LOCMAX","","5: Maximum local detection",1761,null],[13,"DERIV0","","6: Minimum and maximum local detection",1761,null],[13,"CAPTMARK","","7: Capture with ramp index as MSB value",1761,null],[6,"R","","Reader of register FCTRLA",null,null],[6,"W","","Writer for register FCTRLA",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"KEEP_R","","Reader of field `KEEP`",null,null],[6,"QUAL_R","","Reader of field `QUAL`",null,null],[6,"BLANK_R","","Reader of field `BLANK`",null,null],[6,"RESTART_R","","Reader of field `RESTART`",null,null],[6,"HALT_R","","Reader of field `HALT`",null,null],[6,"CHSEL_R","","Reader of field `CHSEL`",null,null],[6,"CAPTURE_R","","Reader of field `CAPTURE`",null,null],[6,"BLANKPRESC_R","","Reader of field `BLANKPRESC`",null,null],[6,"BLANKVAL_R","","Reader of field `BLANKVAL`",null,null],[6,"FILTERVAL_R","","Reader of field `FILTERVAL`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",6,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrla","Get enumerated values variant",1762,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1762,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",1762,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",1762,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",1762,[[]]],[11,"variant","","Writes `variant` to the field",1763,[[["src_a",4]],["w",6]]],[11,"disable","","Fault input disabled",1763,[[],["w",6]]],[11,"enable","","MCEx (x=0,1) event input",1763,[[],["w",6]]],[11,"invert","","Inverted MCEx (x=0,1) event input",1763,[[],["w",6]]],[11,"altfault","","Alternate fault (A or B) state at the end of the previous…",1763,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1763,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1764,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1764,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1764,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1765,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrla","Get enumerated values variant",1766,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",1766,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",1766,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",1766,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",1766,[[]]],[11,"variant","","Writes `variant` to the field",1767,[[["blank_a",4]],["w",6]]],[11,"start","","Blanking applied from start of ramp",1767,[[],["w",6]]],[11,"rise","","Blanking applied from rising edge of the output waveform",1767,[[],["w",6]]],[11,"fall","","Blanking applied from falling edge of the output waveform",1767,[[],["w",6]]],[11,"both","","Blanking applied from each toggle of the output waveform",1767,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1767,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1768,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1768,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1768,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",6,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",6,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrla","Get enumerated values variant",1769,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1769,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",1769,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",1769,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",1769,[[]]],[11,"variant","","Writes `variant` to the field",1770,[[["halt_a",4]],["w",6]]],[11,"disable","","Halt action disabled",1770,[[],["w",6]]],[11,"hw","","Hardware halt action",1770,[[],["w",6]]],[11,"sw","","Software halt action",1770,[[],["w",6]]],[11,"nr","","Non-recoverable fault",1770,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1770,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",6,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",6,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",6,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrla","Get enumerated values variant",1771,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",1771,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",1771,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",1771,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",1771,[[]]],[11,"variant","","Writes `variant` to the field",1772,[[["chsel_a",4]],["w",6]]],[11,"cc0","","Capture value stored in channel 0",1772,[[],["w",6]]],[11,"cc1","","Capture value stored in channel 1",1772,[[],["w",6]]],[11,"cc2","","Capture value stored in channel 2",1772,[[],["w",6]]],[11,"cc3","","Capture value stored in channel 3",1772,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1772,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",6,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",6,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",6,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrla","Get enumerated values variant",1773,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1773,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",1773,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",1773,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",1773,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",1773,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",1773,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",1773,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",1773,[[]]],[11,"variant","","Writes `variant` to the field",1774,[[["capture_a",4]],["w",6]]],[11,"disable","","No capture",1774,[[],["w",6]]],[11,"capt","","Capture on fault",1774,[[],["w",6]]],[11,"captmin","","Minimum capture",1774,[[],["w",6]]],[11,"captmax","","Maximum capture",1774,[[],["w",6]]],[11,"locmin","","Minimum local detection",1774,[[],["w",6]]],[11,"locmax","","Maximum local detection",1774,[[],["w",6]]],[11,"deriv0","","Minimum and maximum local detection",1774,[[],["w",6]]],[11,"captmark","","Capture with ramp index as MSB value",1774,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1774,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1775,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1775,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1775,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1776,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1777,[[],["w",6]]],[11,"src","atsamd11c::generic","Bits 0:1 - Fault A Source",6,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault A Keeper",6,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault A Qualification",6,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",6,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault A Restart",6,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",6,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",6,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",6,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",6,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",6,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",6,[[],["filterval_r",6]]],[11,"src","atsamd11c::tcc0::fctrla","Bits 0:1 - Fault A Source",1778,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault A Keeper",1778,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault A Qualification",1778,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",1778,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault A Restart",1778,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",1778,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",1778,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",1778,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",1778,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",1778,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",1778,[[],["filterval_r",6]]],[11,"src","atsamd11c::generic","Bits 0:1 - Fault A Source",7,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault A Keeper",7,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault A Qualification",7,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",7,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault A Restart",7,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",7,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",7,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",7,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",7,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",7,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",7,[[],["filterval_w",3]]],[11,"src","atsamd11c::tcc0::fctrla","Bits 0:1 - Fault A Source",1779,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault A Keeper",1779,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault A Qualification",1779,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",1779,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault A Restart",1779,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",1779,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",1779,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",1779,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",1779,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",1779,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",1779,[[],["filterval_w",3]]],[0,"fctrlb","atsamd11c::tcc0","Recoverable Fault B Configuration",null,null],[3,"SRC_W","atsamd11c::tcc0::fctrlb","Write proxy for field `SRC`",null,null],[3,"KEEP_W","","Write proxy for field `KEEP`",null,null],[3,"QUAL_W","","Write proxy for field `QUAL`",null,null],[3,"BLANK_W","","Write proxy for field `BLANK`",null,null],[3,"RESTART_W","","Write proxy for field `RESTART`",null,null],[3,"HALT_W","","Write proxy for field `HALT`",null,null],[3,"CHSEL_W","","Write proxy for field `CHSEL`",null,null],[3,"CAPTURE_W","","Write proxy for field `CAPTURE`",null,null],[3,"BLANKPRESC_W","","Write proxy for field `BLANKPRESC`",null,null],[3,"BLANKVAL_W","","Write proxy for field `BLANKVAL`",null,null],[3,"FILTERVAL_W","","Write proxy for field `FILTERVAL`",null,null],[4,"SRC_A","","Fault B Source",null,null],[13,"DISABLE","","0: Fault input disabled",1780,null],[13,"ENABLE","","1: MCEx (x=0,1) event input",1780,null],[13,"INVERT","","2: Inverted MCEx (x=0,1) event input",1780,null],[13,"ALTFAULT","","3: Alternate fault (A or B) state at the end of the…",1780,null],[4,"BLANK_A","","Fault B Blanking Mode",null,null],[13,"START","","0: Blanking applied from start of ramp",1781,null],[13,"RISE","","1: Blanking applied from rising edge of the output waveform",1781,null],[13,"FALL","","2: Blanking applied from falling edge of the output waveform",1781,null],[13,"BOTH","","3: Blanking applied from each toggle of the output waveform",1781,null],[4,"HALT_A","","Fault B Halt Mode",null,null],[13,"DISABLE","","0: Halt action disabled",1782,null],[13,"HW","","1: Hardware halt action",1782,null],[13,"SW","","2: Software halt action",1782,null],[13,"NR","","3: Non-recoverable fault",1782,null],[4,"CHSEL_A","","Fault B Capture Channel",null,null],[13,"CC0","","0: Capture value stored in channel 0",1783,null],[13,"CC1","","1: Capture value stored in channel 1",1783,null],[13,"CC2","","2: Capture value stored in channel 2",1783,null],[13,"CC3","","3: Capture value stored in channel 3",1783,null],[4,"CAPTURE_A","","Fault B Capture Action",null,null],[13,"DISABLE","","0: No capture",1784,null],[13,"CAPT","","1: Capture on fault",1784,null],[13,"CAPTMIN","","2: Minimum capture",1784,null],[13,"CAPTMAX","","3: Maximum capture",1784,null],[13,"LOCMIN","","4: Minimum local detection",1784,null],[13,"LOCMAX","","5: Maximum local detection",1784,null],[13,"DERIV0","","6: Minimum and maximum local detection",1784,null],[13,"CAPTMARK","","7: Capture with ramp index as MSB value",1784,null],[6,"R","","Reader of register FCTRLB",null,null],[6,"W","","Writer for register FCTRLB",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"KEEP_R","","Reader of field `KEEP`",null,null],[6,"QUAL_R","","Reader of field `QUAL`",null,null],[6,"BLANK_R","","Reader of field `BLANK`",null,null],[6,"RESTART_R","","Reader of field `RESTART`",null,null],[6,"HALT_R","","Reader of field `HALT`",null,null],[6,"CHSEL_R","","Reader of field `CHSEL`",null,null],[6,"CAPTURE_R","","Reader of field `CAPTURE`",null,null],[6,"BLANKPRESC_R","","Reader of field `BLANKPRESC`",null,null],[6,"BLANKVAL_R","","Reader of field `BLANKVAL`",null,null],[6,"FILTERVAL_R","","Reader of field `FILTERVAL`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",6,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrlb","Get enumerated values variant",1785,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1785,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",1785,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",1785,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",1785,[[]]],[11,"variant","","Writes `variant` to the field",1786,[[["src_a",4]],["w",6]]],[11,"disable","","Fault input disabled",1786,[[],["w",6]]],[11,"enable","","MCEx (x=0,1) event input",1786,[[],["w",6]]],[11,"invert","","Inverted MCEx (x=0,1) event input",1786,[[],["w",6]]],[11,"altfault","","Alternate fault (A or B) state at the end of the previous…",1786,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1786,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1787,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1787,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1787,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1788,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1788,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1788,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrlb","Get enumerated values variant",1789,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",1789,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",1789,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",1789,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",1789,[[]]],[11,"variant","","Writes `variant` to the field",1790,[[["blank_a",4]],["w",6]]],[11,"start","","Blanking applied from start of ramp",1790,[[],["w",6]]],[11,"rise","","Blanking applied from rising edge of the output waveform",1790,[[],["w",6]]],[11,"fall","","Blanking applied from falling edge of the output waveform",1790,[[],["w",6]]],[11,"both","","Blanking applied from each toggle of the output waveform",1790,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1790,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1791,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1791,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1791,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",6,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",6,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrlb","Get enumerated values variant",1792,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1792,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",1792,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",1792,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",1792,[[]]],[11,"variant","","Writes `variant` to the field",1793,[[["halt_a",4]],["w",6]]],[11,"disable","","Halt action disabled",1793,[[],["w",6]]],[11,"hw","","Hardware halt action",1793,[[],["w",6]]],[11,"sw","","Software halt action",1793,[[],["w",6]]],[11,"nr","","Non-recoverable fault",1793,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1793,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",6,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",6,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",6,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrlb","Get enumerated values variant",1794,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",1794,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",1794,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",1794,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",1794,[[]]],[11,"variant","","Writes `variant` to the field",1795,[[["chsel_a",4]],["w",6]]],[11,"cc0","","Capture value stored in channel 0",1795,[[],["w",6]]],[11,"cc1","","Capture value stored in channel 1",1795,[[],["w",6]]],[11,"cc2","","Capture value stored in channel 2",1795,[[],["w",6]]],[11,"cc3","","Capture value stored in channel 3",1795,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1795,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",6,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",6,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",6,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",6,[[]]],[11,"variant","atsamd11c::tcc0::fctrlb","Get enumerated values variant",1796,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",1796,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",1796,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",1796,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",1796,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",1796,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",1796,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",1796,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",1796,[[]]],[11,"variant","","Writes `variant` to the field",1797,[[["capture_a",4]],["w",6]]],[11,"disable","","No capture",1797,[[],["w",6]]],[11,"capt","","Capture on fault",1797,[[],["w",6]]],[11,"captmin","","Minimum capture",1797,[[],["w",6]]],[11,"captmax","","Maximum capture",1797,[[],["w",6]]],[11,"locmin","","Minimum local detection",1797,[[],["w",6]]],[11,"locmax","","Maximum local detection",1797,[[],["w",6]]],[11,"deriv0","","Minimum and maximum local detection",1797,[[],["w",6]]],[11,"captmark","","Capture with ramp index as MSB value",1797,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1798,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1798,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1798,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1799,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1800,[[],["w",6]]],[11,"src","atsamd11c::generic","Bits 0:1 - Fault B Source",6,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault B Keeper",6,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault B Qualification",6,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",6,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault B Restart",6,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",6,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",6,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",6,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",6,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",6,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",6,[[],["filterval_r",6]]],[11,"src","atsamd11c::tcc0::fctrlb","Bits 0:1 - Fault B Source",1801,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault B Keeper",1801,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault B Qualification",1801,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",1801,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault B Restart",1801,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",1801,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",1801,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",1801,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",1801,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",1801,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",1801,[[],["filterval_r",6]]],[11,"src","atsamd11c::generic","Bits 0:1 - Fault B Source",7,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault B Keeper",7,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault B Qualification",7,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",7,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault B Restart",7,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",7,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",7,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",7,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",7,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",7,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",7,[[],["filterval_w",3]]],[11,"src","atsamd11c::tcc0::fctrlb","Bits 0:1 - Fault B Source",1802,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault B Keeper",1802,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault B Qualification",1802,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",1802,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault B Restart",1802,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",1802,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",1802,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",1802,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",1802,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",1802,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",1802,[[],["filterval_w",3]]],[0,"wexctrl","atsamd11c::tcc0","Waveform Extension Configuration",null,null],[3,"OTMX_W","atsamd11c::tcc0::wexctrl","Write proxy for field `OTMX`",null,null],[3,"DTIEN0_W","","Write proxy for field `DTIEN0`",null,null],[3,"DTIEN1_W","","Write proxy for field `DTIEN1`",null,null],[3,"DTIEN2_W","","Write proxy for field `DTIEN2`",null,null],[3,"DTIEN3_W","","Write proxy for field `DTIEN3`",null,null],[3,"DTLS_W","","Write proxy for field `DTLS`",null,null],[3,"DTHS_W","","Write proxy for field `DTHS`",null,null],[6,"R","","Reader of register WEXCTRL",null,null],[6,"W","","Writer for register WEXCTRL",null,null],[6,"OTMX_R","","Reader of field `OTMX`",null,null],[6,"DTIEN0_R","","Reader of field `DTIEN0`",null,null],[6,"DTIEN1_R","","Reader of field `DTIEN1`",null,null],[6,"DTIEN2_R","","Reader of field `DTIEN2`",null,null],[6,"DTIEN3_R","","Reader of field `DTIEN3`",null,null],[6,"DTLS_R","","Reader of field `DTLS`",null,null],[6,"DTHS_R","","Reader of field `DTHS`",null,null],[11,"bits","","Writes raw bits to the field",1803,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1804,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1804,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1804,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1805,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1805,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1805,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1806,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1806,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1806,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1807,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1807,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1807,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1808,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1809,[[],["w",6]]],[11,"otmx","atsamd11c::generic","Bits 0:1 - Output Matrix",6,[[],["otmx_r",6]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",6,[[],["dtien0_r",6]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",6,[[],["dtien1_r",6]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",6,[[],["dtien2_r",6]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",6,[[],["dtien3_r",6]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",6,[[],["dtls_r",6]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",6,[[],["dths_r",6]]],[11,"otmx","atsamd11c::tcc0::wexctrl","Bits 0:1 - Output Matrix",1810,[[],["otmx_r",6]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",1810,[[],["dtien0_r",6]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",1810,[[],["dtien1_r",6]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",1810,[[],["dtien2_r",6]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",1810,[[],["dtien3_r",6]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",1810,[[],["dtls_r",6]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",1810,[[],["dths_r",6]]],[11,"otmx","atsamd11c::generic","Bits 0:1 - Output Matrix",7,[[],["otmx_w",3]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",7,[[],["dtien0_w",3]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",7,[[],["dtien1_w",3]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",7,[[],["dtien2_w",3]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",7,[[],["dtien3_w",3]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",7,[[],["dtls_w",3]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",7,[[],["dths_w",3]]],[11,"otmx","atsamd11c::tcc0::wexctrl","Bits 0:1 - Output Matrix",1811,[[],["otmx_w",3]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",1811,[[],["dtien0_w",3]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",1811,[[],["dtien1_w",3]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",1811,[[],["dtien2_w",3]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",1811,[[],["dtien3_w",3]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",1811,[[],["dtls_w",3]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",1811,[[],["dths_w",3]]],[0,"drvctrl","atsamd11c::tcc0","Driver Control",null,null],[3,"NRE0_W","atsamd11c::tcc0::drvctrl","Write proxy for field `NRE0`",null,null],[3,"NRE1_W","","Write proxy for field `NRE1`",null,null],[3,"NRE2_W","","Write proxy for field `NRE2`",null,null],[3,"NRE3_W","","Write proxy for field `NRE3`",null,null],[3,"NRE4_W","","Write proxy for field `NRE4`",null,null],[3,"NRE5_W","","Write proxy for field `NRE5`",null,null],[3,"NRE6_W","","Write proxy for field `NRE6`",null,null],[3,"NRE7_W","","Write proxy for field `NRE7`",null,null],[3,"NRV0_W","","Write proxy for field `NRV0`",null,null],[3,"NRV1_W","","Write proxy for field `NRV1`",null,null],[3,"NRV2_W","","Write proxy for field `NRV2`",null,null],[3,"NRV3_W","","Write proxy for field `NRV3`",null,null],[3,"NRV4_W","","Write proxy for field `NRV4`",null,null],[3,"NRV5_W","","Write proxy for field `NRV5`",null,null],[3,"NRV6_W","","Write proxy for field `NRV6`",null,null],[3,"NRV7_W","","Write proxy for field `NRV7`",null,null],[3,"INVEN0_W","","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"INVEN2_W","","Write proxy for field `INVEN2`",null,null],[3,"INVEN3_W","","Write proxy for field `INVEN3`",null,null],[3,"INVEN4_W","","Write proxy for field `INVEN4`",null,null],[3,"INVEN5_W","","Write proxy for field `INVEN5`",null,null],[3,"INVEN6_W","","Write proxy for field `INVEN6`",null,null],[3,"INVEN7_W","","Write proxy for field `INVEN7`",null,null],[3,"FILTERVAL0_W","","Write proxy for field `FILTERVAL0`",null,null],[3,"FILTERVAL1_W","","Write proxy for field `FILTERVAL1`",null,null],[6,"R","","Reader of register DRVCTRL",null,null],[6,"W","","Writer for register DRVCTRL",null,null],[6,"NRE0_R","","Reader of field `NRE0`",null,null],[6,"NRE1_R","","Reader of field `NRE1`",null,null],[6,"NRE2_R","","Reader of field `NRE2`",null,null],[6,"NRE3_R","","Reader of field `NRE3`",null,null],[6,"NRE4_R","","Reader of field `NRE4`",null,null],[6,"NRE5_R","","Reader of field `NRE5`",null,null],[6,"NRE6_R","","Reader of field `NRE6`",null,null],[6,"NRE7_R","","Reader of field `NRE7`",null,null],[6,"NRV0_R","","Reader of field `NRV0`",null,null],[6,"NRV1_R","","Reader of field `NRV1`",null,null],[6,"NRV2_R","","Reader of field `NRV2`",null,null],[6,"NRV3_R","","Reader of field `NRV3`",null,null],[6,"NRV4_R","","Reader of field `NRV4`",null,null],[6,"NRV5_R","","Reader of field `NRV5`",null,null],[6,"NRV6_R","","Reader of field `NRV6`",null,null],[6,"NRV7_R","","Reader of field `NRV7`",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"INVEN2_R","","Reader of field `INVEN2`",null,null],[6,"INVEN3_R","","Reader of field `INVEN3`",null,null],[6,"INVEN4_R","","Reader of field `INVEN4`",null,null],[6,"INVEN5_R","","Reader of field `INVEN5`",null,null],[6,"INVEN6_R","","Reader of field `INVEN6`",null,null],[6,"INVEN7_R","","Reader of field `INVEN7`",null,null],[6,"FILTERVAL0_R","","Reader of field `FILTERVAL0`",null,null],[6,"FILTERVAL1_R","","Reader of field `FILTERVAL1`",null,null],[11,"set_bit","","Sets the field bit",1812,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1812,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1812,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1813,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1813,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1813,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1814,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1814,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1814,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1815,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1815,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1815,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1816,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1816,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1816,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1817,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1817,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1817,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1818,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1818,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1818,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1819,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1819,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1819,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1820,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1820,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1820,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1821,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1821,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1821,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1822,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1822,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1822,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1823,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1823,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1823,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1824,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1824,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1824,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1825,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1825,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1825,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1826,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1826,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1826,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1827,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1827,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1827,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1828,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1828,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1828,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1829,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1829,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1829,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1830,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1830,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1830,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1831,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1831,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1831,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1832,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1832,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1832,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1833,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1833,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1833,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1834,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1834,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1834,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1835,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1835,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1835,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1836,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1837,[[],["w",6]]],[11,"nre0","atsamd11c::generic","Bit 0 - Non-Recoverable State 0 Output Enable",6,[[],["nre0_r",6]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",6,[[],["nre1_r",6]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",6,[[],["nre2_r",6]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",6,[[],["nre3_r",6]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",6,[[],["nre4_r",6]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",6,[[],["nre5_r",6]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",6,[[],["nre6_r",6]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",6,[[],["nre7_r",6]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",6,[[],["nrv0_r",6]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",6,[[],["nrv1_r",6]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",6,[[],["nrv2_r",6]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",6,[[],["nrv3_r",6]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",6,[[],["nrv4_r",6]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",6,[[],["nrv5_r",6]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",6,[[],["nrv6_r",6]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",6,[[],["nrv7_r",6]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",6,[[],["inven1_r",6]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",6,[[],["inven2_r",6]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",6,[[],["inven3_r",6]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",6,[[],["inven4_r",6]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",6,[[],["inven5_r",6]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",6,[[],["inven6_r",6]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",6,[[],["inven7_r",6]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",6,[[],["filterval0_r",6]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",6,[[],["filterval1_r",6]]],[11,"nre0","atsamd11c::tcc0::drvctrl","Bit 0 - Non-Recoverable State 0 Output Enable",1838,[[],["nre0_r",6]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",1838,[[],["nre1_r",6]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",1838,[[],["nre2_r",6]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",1838,[[],["nre3_r",6]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",1838,[[],["nre4_r",6]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",1838,[[],["nre5_r",6]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",1838,[[],["nre6_r",6]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",1838,[[],["nre7_r",6]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",1838,[[],["nrv0_r",6]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",1838,[[],["nrv1_r",6]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",1838,[[],["nrv2_r",6]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",1838,[[],["nrv3_r",6]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",1838,[[],["nrv4_r",6]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",1838,[[],["nrv5_r",6]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",1838,[[],["nrv6_r",6]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",1838,[[],["nrv7_r",6]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",1838,[[],["inven0_r",6]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",1838,[[],["inven1_r",6]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",1838,[[],["inven2_r",6]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",1838,[[],["inven3_r",6]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",1838,[[],["inven4_r",6]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",1838,[[],["inven5_r",6]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",1838,[[],["inven6_r",6]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",1838,[[],["inven7_r",6]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",1838,[[],["filterval0_r",6]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",1838,[[],["filterval1_r",6]]],[11,"nre0","atsamd11c::generic","Bit 0 - Non-Recoverable State 0 Output Enable",7,[[],["nre0_w",3]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",7,[[],["nre1_w",3]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",7,[[],["nre2_w",3]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",7,[[],["nre3_w",3]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",7,[[],["nre4_w",3]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",7,[[],["nre5_w",3]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",7,[[],["nre6_w",3]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",7,[[],["nre7_w",3]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",7,[[],["nrv0_w",3]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",7,[[],["nrv1_w",3]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",7,[[],["nrv2_w",3]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",7,[[],["nrv3_w",3]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",7,[[],["nrv4_w",3]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",7,[[],["nrv5_w",3]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",7,[[],["nrv6_w",3]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",7,[[],["nrv7_w",3]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",7,[[],["inven1_w",3]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",7,[[],["inven2_w",3]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",7,[[],["inven3_w",3]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",7,[[],["inven4_w",3]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",7,[[],["inven5_w",3]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",7,[[],["inven6_w",3]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",7,[[],["inven7_w",3]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",7,[[],["filterval0_w",3]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",7,[[],["filterval1_w",3]]],[11,"nre0","atsamd11c::tcc0::drvctrl","Bit 0 - Non-Recoverable State 0 Output Enable",1839,[[],["nre0_w",3]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",1839,[[],["nre1_w",3]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",1839,[[],["nre2_w",3]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",1839,[[],["nre3_w",3]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",1839,[[],["nre4_w",3]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",1839,[[],["nre5_w",3]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",1839,[[],["nre6_w",3]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",1839,[[],["nre7_w",3]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",1839,[[],["nrv0_w",3]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",1839,[[],["nrv1_w",3]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",1839,[[],["nrv2_w",3]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",1839,[[],["nrv3_w",3]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",1839,[[],["nrv4_w",3]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",1839,[[],["nrv5_w",3]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",1839,[[],["nrv6_w",3]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",1839,[[],["nrv7_w",3]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",1839,[[],["inven0_w",3]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",1839,[[],["inven1_w",3]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",1839,[[],["inven2_w",3]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",1839,[[],["inven3_w",3]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",1839,[[],["inven4_w",3]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",1839,[[],["inven5_w",3]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",1839,[[],["inven6_w",3]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",1839,[[],["inven7_w",3]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",1839,[[],["filterval0_w",3]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",1839,[[],["filterval1_w",3]]],[0,"dbgctrl","atsamd11c::tcc0","Debug Control",null,null],[3,"DBGRUN_W","atsamd11c::tcc0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[3,"FDDBD_W","","Write proxy for field `FDDBD`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[6,"FDDBD_R","","Reader of field `FDDBD`",null,null],[11,"set_bit","","Sets the field bit",1840,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1840,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1840,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1841,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1841,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1841,[[],["w",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Running Mode",6,[[],["dbgrun_r",6]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",6,[[],["fddbd_r",6]]],[11,"dbgrun","atsamd11c::tcc0::dbgctrl","Bit 0 - Debug Running Mode",1842,[[],["dbgrun_r",6]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",1842,[[],["fddbd_r",6]]],[11,"dbgrun","atsamd11c::generic","Bit 0 - Debug Running Mode",7,[[],["dbgrun_w",3]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",7,[[],["fddbd_w",3]]],[11,"dbgrun","atsamd11c::tcc0::dbgctrl","Bit 0 - Debug Running Mode",1843,[[],["dbgrun_w",3]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",1843,[[],["fddbd_w",3]]],[0,"evctrl","atsamd11c::tcc0","Event Control",null,null],[3,"EVACT0_W","atsamd11c::tcc0::evctrl","Write proxy for field `EVACT0`",null,null],[3,"EVACT1_W","","Write proxy for field `EVACT1`",null,null],[3,"CNTSEL_W","","Write proxy for field `CNTSEL`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"TRGEO_W","","Write proxy for field `TRGEO`",null,null],[3,"CNTEO_W","","Write proxy for field `CNTEO`",null,null],[3,"TCINV0_W","","Write proxy for field `TCINV0`",null,null],[3,"TCINV1_W","","Write proxy for field `TCINV1`",null,null],[3,"TCEI0_W","","Write proxy for field `TCEI0`",null,null],[3,"TCEI1_W","","Write proxy for field `TCEI1`",null,null],[3,"MCEI0_W","","Write proxy for field `MCEI0`",null,null],[3,"MCEI1_W","","Write proxy for field `MCEI1`",null,null],[3,"MCEI2_W","","Write proxy for field `MCEI2`",null,null],[3,"MCEI3_W","","Write proxy for field `MCEI3`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[3,"MCEO2_W","","Write proxy for field `MCEO2`",null,null],[3,"MCEO3_W","","Write proxy for field `MCEO3`",null,null],[4,"EVACT0_A","","Timer/counter Input Event0 Action",null,null],[13,"OFF","","0: Event action disabled",1844,null],[13,"RETRIGGER","","1: Start, restart or re-trigger counter on event",1844,null],[13,"COUNTEV","","2: Count on event",1844,null],[13,"START","","3: Start counter on event",1844,null],[13,"INC","","4: Increment counter on event",1844,null],[13,"COUNT","","5: Count on active state of asynchronous event",1844,null],[13,"FAULT","","7: Non-recoverable fault",1844,null],[4,"EVACT1_A","","Timer/counter Input Event1 Action",null,null],[13,"OFF","","0: Event action disabled",1845,null],[13,"RETRIGGER","","1: Re-trigger counter on event",1845,null],[13,"DIR","","2: Direction control",1845,null],[13,"STOP","","3: Stop counter on event",1845,null],[13,"DEC","","4: Decrement counter on event",1845,null],[13,"PPW","","5: Period capture value in CC0 register, pulse width…",1845,null],[13,"PWP","","6: Period capture value in CC1 register, pulse width…",1845,null],[13,"FAULT","","7: Non-recoverable fault",1845,null],[4,"CNTSEL_A","","Timer/counter Output Event Mode",null,null],[13,"START","","0: An interrupt/event is generated when a new counter…",1846,null],[13,"END","","1: An interrupt/event is generated when a counter cycle ends",1846,null],[13,"BETWEEN","","2: An interrupt/event is generated when a counter cycle…",1846,null],[13,"BOUNDARY","","3: An interrupt/event is generated when a new counter…",1846,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT0_R","","Reader of field `EVACT0`",null,null],[6,"EVACT1_R","","Reader of field `EVACT1`",null,null],[6,"CNTSEL_R","","Reader of field `CNTSEL`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"TRGEO_R","","Reader of field `TRGEO`",null,null],[6,"CNTEO_R","","Reader of field `CNTEO`",null,null],[6,"TCINV0_R","","Reader of field `TCINV0`",null,null],[6,"TCINV1_R","","Reader of field `TCINV1`",null,null],[6,"TCEI0_R","","Reader of field `TCEI0`",null,null],[6,"TCEI1_R","","Reader of field `TCEI1`",null,null],[6,"MCEI0_R","","Reader of field `MCEI0`",null,null],[6,"MCEI1_R","","Reader of field `MCEI1`",null,null],[6,"MCEI2_R","","Reader of field `MCEI2`",null,null],[6,"MCEI3_R","","Reader of field `MCEI3`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[6,"MCEO2_R","","Reader of field `MCEO2`",null,null],[6,"MCEO3_R","","Reader of field `MCEO3`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["evact0_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_countev","","Checks if the value of the field is `COUNTEV`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_inc","","Checks if the value of the field is `INC`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",6,[[]]],[11,"variant","atsamd11c::tcc0::evctrl","Get enumerated values variant",1847,[[],[["variant",4],["evact0_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1847,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1847,[[]]],[11,"is_countev","","Checks if the value of the field is `COUNTEV`",1847,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1847,[[]]],[11,"is_inc","","Checks if the value of the field is `INC`",1847,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1847,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",1847,[[]]],[11,"variant","","Writes `variant` to the field",1848,[[["evact0_a",4]],["w",6]]],[11,"off","","Event action disabled",1848,[[],["w",6]]],[11,"retrigger","","Start, restart or re-trigger counter on event",1848,[[],["w",6]]],[11,"countev","","Count on event",1848,[[],["w",6]]],[11,"start","","Start counter on event",1848,[[],["w",6]]],[11,"inc","","Increment counter on event",1848,[[],["w",6]]],[11,"count","","Count on active state of asynchronous event",1848,[[],["w",6]]],[11,"fault","","Non-recoverable fault",1848,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1848,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["evact1_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_dir","","Checks if the value of the field is `DIR`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_dec","","Checks if the value of the field is `DEC`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",6,[[]]],[11,"variant","atsamd11c::tcc0::evctrl","Get enumerated values variant",1849,[[],["evact1_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1849,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1849,[[]]],[11,"is_dir","","Checks if the value of the field is `DIR`",1849,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1849,[[]]],[11,"is_dec","","Checks if the value of the field is `DEC`",1849,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",1849,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",1849,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",1849,[[]]],[11,"variant","","Writes `variant` to the field",1850,[[["evact1_a",4]],["w",6]]],[11,"off","","Event action disabled",1850,[[],["w",6]]],[11,"retrigger","","Re-trigger counter on event",1850,[[],["w",6]]],[11,"dir","","Direction control",1850,[[],["w",6]]],[11,"stop","","Stop counter on event",1850,[[],["w",6]]],[11,"dec","","Decrement counter on event",1850,[[],["w",6]]],[11,"ppw","","Period capture value in CC0 register, pulse width capture…",1850,[[],["w",6]]],[11,"pwp","","Period capture value in CC1 register, pulse width capture…",1850,[[],["w",6]]],[11,"fault","","Non-recoverable fault",1850,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1850,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["cntsel_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_end","","Checks if the value of the field is `END`",6,[[]]],[11,"is_between","","Checks if the value of the field is `BETWEEN`",6,[[]]],[11,"is_boundary","","Checks if the value of the field is `BOUNDARY`",6,[[]]],[11,"variant","atsamd11c::tcc0::evctrl","Get enumerated values variant",1851,[[],["cntsel_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",1851,[[]]],[11,"is_end","","Checks if the value of the field is `END`",1851,[[]]],[11,"is_between","","Checks if the value of the field is `BETWEEN`",1851,[[]]],[11,"is_boundary","","Checks if the value of the field is `BOUNDARY`",1851,[[]]],[11,"variant","","Writes `variant` to the field",1852,[[["cntsel_a",4]],["w",6]]],[11,"start","","An interrupt/event is generated when a new counter cycle…",1852,[[],["w",6]]],[11,"end","","An interrupt/event is generated when a counter cycle ends",1852,[[],["w",6]]],[11,"between","","An interrupt/event is generated when a counter cycle ends,…",1852,[[],["w",6]]],[11,"boundary","","An interrupt/event is generated when a new counter cycle…",1852,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1852,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1853,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1853,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1853,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1854,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1854,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1854,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1855,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1855,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1855,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1856,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1856,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1856,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1857,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1857,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1857,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1858,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1858,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1858,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1859,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1859,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1859,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1860,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1860,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1860,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1861,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1861,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1861,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1862,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1862,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1862,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1863,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1863,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1863,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1864,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1864,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1864,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1865,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1865,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1865,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1866,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1866,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1866,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1867,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1867,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1867,[[],["w",6]]],[11,"evact0","atsamd11c::generic","Bits 0:2 - Timer/counter Input Event0 Action",6,[[],["evact0_r",6]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",6,[[],["evact1_r",6]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",6,[[],["cntsel_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",6,[[],["ovfeo_r",6]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",6,[[],["trgeo_r",6]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",6,[[],["cnteo_r",6]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",6,[[],["tcinv0_r",6]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",6,[[],["tcinv1_r",6]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",6,[[],["tcei0_r",6]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",6,[[],["tcei1_r",6]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",6,[[],["mcei0_r",6]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",6,[[],["mcei1_r",6]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",6,[[],["mcei2_r",6]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",6,[[],["mcei3_r",6]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",6,[[],["mceo2_r",6]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",6,[[],["mceo3_r",6]]],[11,"evact0","atsamd11c::tcc0::evctrl","Bits 0:2 - Timer/counter Input Event0 Action",1868,[[],["evact0_r",6]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",1868,[[],["evact1_r",6]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",1868,[[],["cntsel_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",1868,[[],["ovfeo_r",6]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",1868,[[],["trgeo_r",6]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",1868,[[],["cnteo_r",6]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",1868,[[],["tcinv0_r",6]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",1868,[[],["tcinv1_r",6]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",1868,[[],["tcei0_r",6]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",1868,[[],["tcei1_r",6]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",1868,[[],["mcei0_r",6]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",1868,[[],["mcei1_r",6]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",1868,[[],["mcei2_r",6]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",1868,[[],["mcei3_r",6]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",1868,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",1868,[[],["mceo1_r",6]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",1868,[[],["mceo2_r",6]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",1868,[[],["mceo3_r",6]]],[11,"evact0","atsamd11c::generic","Bits 0:2 - Timer/counter Input Event0 Action",7,[[],["evact0_w",3]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",7,[[],["evact1_w",3]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",7,[[],["cntsel_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",7,[[],["ovfeo_w",3]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",7,[[],["trgeo_w",3]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",7,[[],["cnteo_w",3]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",7,[[],["tcinv0_w",3]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",7,[[],["tcinv1_w",3]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",7,[[],["tcei0_w",3]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",7,[[],["tcei1_w",3]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",7,[[],["mcei0_w",3]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",7,[[],["mcei1_w",3]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",7,[[],["mcei2_w",3]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",7,[[],["mcei3_w",3]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",7,[[],["mceo2_w",3]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",7,[[],["mceo3_w",3]]],[11,"evact0","atsamd11c::tcc0::evctrl","Bits 0:2 - Timer/counter Input Event0 Action",1869,[[],["evact0_w",3]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",1869,[[],["evact1_w",3]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",1869,[[],["cntsel_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",1869,[[],["ovfeo_w",3]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",1869,[[],["trgeo_w",3]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",1869,[[],["cnteo_w",3]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",1869,[[],["tcinv0_w",3]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",1869,[[],["tcinv1_w",3]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",1869,[[],["tcei0_w",3]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",1869,[[],["tcei1_w",3]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",1869,[[],["mcei0_w",3]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",1869,[[],["mcei1_w",3]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",1869,[[],["mcei2_w",3]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",1869,[[],["mcei3_w",3]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",1869,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",1869,[[],["mceo1_w",3]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",1869,[[],["mceo2_w",3]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",1869,[[],["mceo3_w",3]]],[0,"intenclr","atsamd11c::tcc0","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd11c::tcc0::intenclr","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[11,"set_bit","","Sets the field bit",1870,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1870,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1870,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1871,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1871,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1871,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1872,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1872,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1872,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1873,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1873,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1873,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1874,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1874,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1874,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1875,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1875,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1875,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1876,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1876,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1876,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1877,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1877,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1877,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1878,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1878,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1878,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1879,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1879,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1879,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1880,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1880,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1880,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1881,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1881,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1881,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1882,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1882,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1882,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",6,[[],["mc3_r",6]]],[11,"ovf","atsamd11c::tcc0::intenclr","Bit 0 - Overflow Interrupt Enable",1883,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",1883,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",1883,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",1883,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",1883,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",1883,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",1883,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",1883,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",1883,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",1883,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",1883,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",1883,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",1883,[[],["mc3_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",7,[[],["mc3_w",3]]],[11,"ovf","atsamd11c::tcc0::intenclr","Bit 0 - Overflow Interrupt Enable",1884,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",1884,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",1884,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",1884,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",1884,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",1884,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",1884,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",1884,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",1884,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",1884,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",1884,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",1884,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",1884,[[],["mc3_w",3]]],[0,"intenset","atsamd11c::tcc0","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd11c::tcc0::intenset","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[11,"set_bit","","Sets the field bit",1885,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1885,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1885,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1886,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1886,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1886,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1887,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1887,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1887,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1888,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1888,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1888,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1889,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1889,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1889,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1890,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1890,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1890,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1891,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1891,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1891,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1892,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1892,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1892,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1893,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1893,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1893,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1894,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1894,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1894,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1895,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1895,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1895,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1896,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1896,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1896,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1897,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1897,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1897,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",6,[[],["mc3_r",6]]],[11,"ovf","atsamd11c::tcc0::intenset","Bit 0 - Overflow Interrupt Enable",1898,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",1898,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",1898,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",1898,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",1898,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",1898,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",1898,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",1898,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",1898,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",1898,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",1898,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",1898,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",1898,[[],["mc3_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",7,[[],["mc3_w",3]]],[11,"ovf","atsamd11c::tcc0::intenset","Bit 0 - Overflow Interrupt Enable",1899,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",1899,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",1899,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",1899,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",1899,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",1899,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",1899,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",1899,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",1899,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",1899,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",1899,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",1899,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",1899,[[],["mc3_w",3]]],[0,"intflag","atsamd11c::tcc0","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd11c::tcc0::intflag","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[11,"set_bit","","Sets the field bit",1900,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1900,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1900,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1901,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1901,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1901,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1902,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1902,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1902,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1903,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1903,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1903,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1904,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1904,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1904,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1905,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1905,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1905,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1906,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1906,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1906,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1907,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1907,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1907,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1908,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1908,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1908,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1909,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1909,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1909,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1910,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1910,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1910,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1911,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1911,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1911,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1912,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1912,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1912,[[],["w",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error",6,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture 1",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture 2",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture 3",6,[[],["mc3_r",6]]],[11,"ovf","atsamd11c::tcc0::intflag","Bit 0 - Overflow",1913,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger",1913,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter",1913,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error",1913,[[],["err_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",1913,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A",1913,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B",1913,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",1913,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",1913,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture 0",1913,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture 1",1913,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture 2",1913,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture 3",1913,[[],["mc3_r",6]]],[11,"ovf","atsamd11c::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error",7,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture 1",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture 2",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture 3",7,[[],["mc3_w",3]]],[11,"ovf","atsamd11c::tcc0::intflag","Bit 0 - Overflow",1914,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger",1914,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter",1914,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error",1914,[[],["err_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",1914,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A",1914,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B",1914,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",1914,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",1914,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture 0",1914,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture 1",1914,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture 2",1914,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture 3",1914,[[],["mc3_w",3]]],[0,"status","atsamd11c::tcc0","Status",null,null],[3,"DFS_W","atsamd11c::tcc0::status","Write proxy for field `DFS`",null,null],[3,"PATTBV_W","","Write proxy for field `PATTBV`",null,null],[3,"WAVEBV_W","","Write proxy for field `WAVEBV`",null,null],[3,"PERBV_W","","Write proxy for field `PERBV`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"CCBV0_W","","Write proxy for field `CCBV0`",null,null],[3,"CCBV1_W","","Write proxy for field `CCBV1`",null,null],[3,"CCBV2_W","","Write proxy for field `CCBV2`",null,null],[3,"CCBV3_W","","Write proxy for field `CCBV3`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"IDX_R","","Reader of field `IDX`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"PATTBV_R","","Reader of field `PATTBV`",null,null],[6,"WAVEBV_R","","Reader of field `WAVEBV`",null,null],[6,"PERBV_R","","Reader of field `PERBV`",null,null],[6,"FAULTAIN_R","","Reader of field `FAULTAIN`",null,null],[6,"FAULTBIN_R","","Reader of field `FAULTBIN`",null,null],[6,"FAULT0IN_R","","Reader of field `FAULT0IN`",null,null],[6,"FAULT1IN_R","","Reader of field `FAULT1IN`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"CCBV0_R","","Reader of field `CCBV0`",null,null],[6,"CCBV1_R","","Reader of field `CCBV1`",null,null],[6,"CCBV2_R","","Reader of field `CCBV2`",null,null],[6,"CCBV3_R","","Reader of field `CCBV3`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"CMP2_R","","Reader of field `CMP2`",null,null],[6,"CMP3_R","","Reader of field `CMP3`",null,null],[11,"set_bit","","Sets the field bit",1915,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1915,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1915,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1916,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1916,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1916,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1917,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1917,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1917,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1918,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1918,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1918,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1919,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1919,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1919,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1920,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1920,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1920,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1921,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1921,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1921,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1922,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1922,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1922,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1923,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1923,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1923,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1924,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1924,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1924,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1925,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1925,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1925,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1926,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1926,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1926,[[],["w",6]]],[11,"stop","atsamd11c::generic","Bit 0 - Stop",6,[[],["stop_r",6]]],[11,"idx","","Bit 1 - Ramp",6,[[],["idx_r",6]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",6,[[],["dfs_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",6,[[],["pattbv_r",6]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",6,[[],["wavebv_r",6]]],[11,"perbv","","Bit 7 - Period Buffer Valid",6,[[],["perbv_r",6]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",6,[[],["faultain_r",6]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",6,[[],["faultbin_r",6]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",6,[[],["fault0in_r",6]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",6,[[],["fault1in_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",6,[[],["fault1_r",6]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",6,[[],["ccbv0_r",6]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",6,[[],["ccbv1_r",6]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",6,[[],["ccbv2_r",6]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",6,[[],["ccbv3_r",6]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",6,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",6,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",6,[[],["cmp3_r",6]]],[11,"stop","atsamd11c::tcc0::status","Bit 0 - Stop",1927,[[],["stop_r",6]]],[11,"idx","","Bit 1 - Ramp",1927,[[],["idx_r",6]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",1927,[[],["dfs_r",6]]],[11,"slave","","Bit 4 - Slave",1927,[[],["slave_r",6]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",1927,[[],["pattbv_r",6]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",1927,[[],["wavebv_r",6]]],[11,"perbv","","Bit 7 - Period Buffer Valid",1927,[[],["perbv_r",6]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",1927,[[],["faultain_r",6]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",1927,[[],["faultbin_r",6]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",1927,[[],["fault0in_r",6]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",1927,[[],["fault1in_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",1927,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",1927,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",1927,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",1927,[[],["fault1_r",6]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",1927,[[],["ccbv0_r",6]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",1927,[[],["ccbv1_r",6]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",1927,[[],["ccbv2_r",6]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",1927,[[],["ccbv3_r",6]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",1927,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",1927,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",1927,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",1927,[[],["cmp3_r",6]]],[11,"dfs","atsamd11c::generic","Bit 3 - Non-Recoverable Debug Fault State",7,[[],["dfs_w",3]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",7,[[],["pattbv_w",3]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",7,[[],["wavebv_w",3]]],[11,"perbv","","Bit 7 - Period Buffer Valid",7,[[],["perbv_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",7,[[],["fault1_w",3]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",7,[[],["ccbv0_w",3]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",7,[[],["ccbv1_w",3]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",7,[[],["ccbv2_w",3]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",7,[[],["ccbv3_w",3]]],[11,"dfs","atsamd11c::tcc0::status","Bit 3 - Non-Recoverable Debug Fault State",1928,[[],["dfs_w",3]]],[11,"pattbv","","Bit 5 - Pattern Buffer Valid",1928,[[],["pattbv_w",3]]],[11,"wavebv","","Bit 6 - Wave Buffer Valid",1928,[[],["wavebv_w",3]]],[11,"perbv","","Bit 7 - Period Buffer Valid",1928,[[],["perbv_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",1928,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",1928,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",1928,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",1928,[[],["fault1_w",3]]],[11,"ccbv0","","Bit 16 - Compare Channel 0 Buffer Valid",1928,[[],["ccbv0_w",3]]],[11,"ccbv1","","Bit 17 - Compare Channel 1 Buffer Valid",1928,[[],["ccbv1_w",3]]],[11,"ccbv2","","Bit 18 - Compare Channel 2 Buffer Valid",1928,[[],["ccbv2_w",3]]],[11,"ccbv3","","Bit 19 - Compare Channel 3 Buffer Valid",1928,[[],["ccbv3_w",3]]],[0,"count","atsamd11c::tcc0","Count",null,null],[3,"COUNT_W","atsamd11c::tcc0::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1929,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 0:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tcc0::count","Bits 0:23 - Counter Value",1930,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 0:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tcc0::count","Bits 0:23 - Counter Value",1931,[[],["count_w",3]]],[0,"count_dith4","atsamd11c::tcc0","Count",null,null],[3,"COUNT_W","atsamd11c::tcc0::count_dith4","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH4",null,null],[6,"W","","Writer for register COUNT_DITH4",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1932,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 4:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tcc0::count_dith4","Bits 4:23 - Counter Value",1933,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 4:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tcc0::count_dith4","Bits 4:23 - Counter Value",1934,[[],["count_w",3]]],[0,"count_dith5","atsamd11c::tcc0","Count",null,null],[3,"COUNT_W","atsamd11c::tcc0::count_dith5","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH5",null,null],[6,"W","","Writer for register COUNT_DITH5",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1935,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 5:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tcc0::count_dith5","Bits 5:23 - Counter Value",1936,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 5:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tcc0::count_dith5","Bits 5:23 - Counter Value",1937,[[],["count_w",3]]],[0,"count_dith6","atsamd11c::tcc0","Count",null,null],[3,"COUNT_W","atsamd11c::tcc0::count_dith6","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH6",null,null],[6,"W","","Writer for register COUNT_DITH6",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1938,[[],["w",6]]],[11,"count","atsamd11c::generic","Bits 6:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd11c::tcc0::count_dith6","Bits 6:23 - Counter Value",1939,[[],["count_r",6]]],[11,"count","atsamd11c::generic","Bits 6:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd11c::tcc0::count_dith6","Bits 6:23 - Counter Value",1940,[[],["count_w",3]]],[0,"patt","atsamd11c::tcc0","Pattern",null,null],[3,"PGE0_W","atsamd11c::tcc0::patt","Write proxy for field `PGE0`",null,null],[3,"PGE1_W","","Write proxy for field `PGE1`",null,null],[3,"PGE2_W","","Write proxy for field `PGE2`",null,null],[3,"PGE3_W","","Write proxy for field `PGE3`",null,null],[3,"PGE4_W","","Write proxy for field `PGE4`",null,null],[3,"PGE5_W","","Write proxy for field `PGE5`",null,null],[3,"PGE6_W","","Write proxy for field `PGE6`",null,null],[3,"PGE7_W","","Write proxy for field `PGE7`",null,null],[3,"PGV0_W","","Write proxy for field `PGV0`",null,null],[3,"PGV1_W","","Write proxy for field `PGV1`",null,null],[3,"PGV2_W","","Write proxy for field `PGV2`",null,null],[3,"PGV3_W","","Write proxy for field `PGV3`",null,null],[3,"PGV4_W","","Write proxy for field `PGV4`",null,null],[3,"PGV5_W","","Write proxy for field `PGV5`",null,null],[3,"PGV6_W","","Write proxy for field `PGV6`",null,null],[3,"PGV7_W","","Write proxy for field `PGV7`",null,null],[6,"R","","Reader of register PATT",null,null],[6,"W","","Writer for register PATT",null,null],[6,"PGE0_R","","Reader of field `PGE0`",null,null],[6,"PGE1_R","","Reader of field `PGE1`",null,null],[6,"PGE2_R","","Reader of field `PGE2`",null,null],[6,"PGE3_R","","Reader of field `PGE3`",null,null],[6,"PGE4_R","","Reader of field `PGE4`",null,null],[6,"PGE5_R","","Reader of field `PGE5`",null,null],[6,"PGE6_R","","Reader of field `PGE6`",null,null],[6,"PGE7_R","","Reader of field `PGE7`",null,null],[6,"PGV0_R","","Reader of field `PGV0`",null,null],[6,"PGV1_R","","Reader of field `PGV1`",null,null],[6,"PGV2_R","","Reader of field `PGV2`",null,null],[6,"PGV3_R","","Reader of field `PGV3`",null,null],[6,"PGV4_R","","Reader of field `PGV4`",null,null],[6,"PGV5_R","","Reader of field `PGV5`",null,null],[6,"PGV6_R","","Reader of field `PGV6`",null,null],[6,"PGV7_R","","Reader of field `PGV7`",null,null],[11,"set_bit","","Sets the field bit",1941,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1941,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1941,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1942,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1942,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1942,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1943,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1943,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1943,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1944,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1944,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1944,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1945,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1945,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1945,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1946,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1946,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1946,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1947,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1947,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1947,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1948,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1948,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1948,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1949,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1949,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1949,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1950,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1950,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1950,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1951,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1951,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1951,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1952,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1952,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1952,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1953,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1953,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1953,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1954,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1954,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1954,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1955,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1955,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1955,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1956,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1956,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1956,[[],["w",6]]],[11,"pge0","atsamd11c::generic","Bit 0 - Pattern Generator 0 Output Enable",6,[[],["pge0_r",6]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",6,[[],["pge1_r",6]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",6,[[],["pge2_r",6]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",6,[[],["pge3_r",6]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",6,[[],["pge4_r",6]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",6,[[],["pge5_r",6]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",6,[[],["pge6_r",6]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",6,[[],["pge7_r",6]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",6,[[],["pgv0_r",6]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",6,[[],["pgv1_r",6]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",6,[[],["pgv2_r",6]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",6,[[],["pgv3_r",6]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",6,[[],["pgv4_r",6]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",6,[[],["pgv5_r",6]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",6,[[],["pgv6_r",6]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",6,[[],["pgv7_r",6]]],[11,"pge0","atsamd11c::tcc0::patt","Bit 0 - Pattern Generator 0 Output Enable",1957,[[],["pge0_r",6]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",1957,[[],["pge1_r",6]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",1957,[[],["pge2_r",6]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",1957,[[],["pge3_r",6]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",1957,[[],["pge4_r",6]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",1957,[[],["pge5_r",6]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",1957,[[],["pge6_r",6]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",1957,[[],["pge7_r",6]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",1957,[[],["pgv0_r",6]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",1957,[[],["pgv1_r",6]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",1957,[[],["pgv2_r",6]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",1957,[[],["pgv3_r",6]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",1957,[[],["pgv4_r",6]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",1957,[[],["pgv5_r",6]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",1957,[[],["pgv6_r",6]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",1957,[[],["pgv7_r",6]]],[11,"pge0","atsamd11c::generic","Bit 0 - Pattern Generator 0 Output Enable",7,[[],["pge0_w",3]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",7,[[],["pge1_w",3]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",7,[[],["pge2_w",3]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",7,[[],["pge3_w",3]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",7,[[],["pge4_w",3]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",7,[[],["pge5_w",3]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",7,[[],["pge6_w",3]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",7,[[],["pge7_w",3]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",7,[[],["pgv0_w",3]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",7,[[],["pgv1_w",3]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",7,[[],["pgv2_w",3]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",7,[[],["pgv3_w",3]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",7,[[],["pgv4_w",3]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",7,[[],["pgv5_w",3]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",7,[[],["pgv6_w",3]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",7,[[],["pgv7_w",3]]],[11,"pge0","atsamd11c::tcc0::patt","Bit 0 - Pattern Generator 0 Output Enable",1958,[[],["pge0_w",3]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",1958,[[],["pge1_w",3]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",1958,[[],["pge2_w",3]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",1958,[[],["pge3_w",3]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",1958,[[],["pge4_w",3]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",1958,[[],["pge5_w",3]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",1958,[[],["pge6_w",3]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",1958,[[],["pge7_w",3]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",1958,[[],["pgv0_w",3]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",1958,[[],["pgv1_w",3]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",1958,[[],["pgv2_w",3]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",1958,[[],["pgv3_w",3]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",1958,[[],["pgv4_w",3]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",1958,[[],["pgv5_w",3]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",1958,[[],["pgv6_w",3]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",1958,[[],["pgv7_w",3]]],[0,"wave","atsamd11c::tcc0","Waveform Control",null,null],[3,"WAVEGEN_W","atsamd11c::tcc0::wave","Write proxy for field `WAVEGEN`",null,null],[3,"RAMP_W","","Write proxy for field `RAMP`",null,null],[3,"CIPEREN_W","","Write proxy for field `CIPEREN`",null,null],[3,"CICCEN0_W","","Write proxy for field `CICCEN0`",null,null],[3,"CICCEN1_W","","Write proxy for field `CICCEN1`",null,null],[3,"CICCEN2_W","","Write proxy for field `CICCEN2`",null,null],[3,"CICCEN3_W","","Write proxy for field `CICCEN3`",null,null],[3,"POL0_W","","Write proxy for field `POL0`",null,null],[3,"POL1_W","","Write proxy for field `POL1`",null,null],[3,"POL2_W","","Write proxy for field `POL2`",null,null],[3,"POL3_W","","Write proxy for field `POL3`",null,null],[3,"SWAP0_W","","Write proxy for field `SWAP0`",null,null],[3,"SWAP1_W","","Write proxy for field `SWAP1`",null,null],[3,"SWAP2_W","","Write proxy for field `SWAP2`",null,null],[3,"SWAP3_W","","Write proxy for field `SWAP3`",null,null],[4,"WAVEGEN_A","","Waveform Generation",null,null],[13,"NFRQ","","0: Normal frequency",1959,null],[13,"MFRQ","","1: Match frequency",1959,null],[13,"NPWM","","2: Normal PWM",1959,null],[13,"DSCRITICAL","","4: Dual-slope critical",1959,null],[13,"DSBOTTOM","","5: Dual-slope with interrupt/event condition when COUNT…",1959,null],[13,"DSBOTH","","6: Dual-slope with interrupt/event condition when COUNT…",1959,null],[13,"DSTOP","","7: Dual-slope with interrupt/event condition when COUNT…",1959,null],[4,"RAMP_A","","Ramp Mode",null,null],[13,"RAMP1","","0: RAMP1 operation",1960,null],[13,"RAMP2A","","1: Alternative RAMP2 operation",1960,null],[13,"RAMP2","","2: RAMP2 operation",1960,null],[13,"RAMP2C","","3: Critical RAMP2 operation",1960,null],[6,"R","","Reader of register WAVE",null,null],[6,"W","","Writer for register WAVE",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"RAMP_R","","Reader of field `RAMP`",null,null],[6,"CIPEREN_R","","Reader of field `CIPEREN`",null,null],[6,"CICCEN0_R","","Reader of field `CICCEN0`",null,null],[6,"CICCEN1_R","","Reader of field `CICCEN1`",null,null],[6,"CICCEN2_R","","Reader of field `CICCEN2`",null,null],[6,"CICCEN3_R","","Reader of field `CICCEN3`",null,null],[6,"POL0_R","","Reader of field `POL0`",null,null],[6,"POL1_R","","Reader of field `POL1`",null,null],[6,"POL2_R","","Reader of field `POL2`",null,null],[6,"POL3_R","","Reader of field `POL3`",null,null],[6,"SWAP0_R","","Reader of field `SWAP0`",null,null],[6,"SWAP1_R","","Reader of field `SWAP1`",null,null],[6,"SWAP2_R","","Reader of field `SWAP2`",null,null],[6,"SWAP3_R","","Reader of field `SWAP3`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["wavegen_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",6,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",6,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",6,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",6,[[]]],[11,"variant","atsamd11c::tcc0::wave","Get enumerated values variant",1961,[[],[["variant",4],["wavegen_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",1961,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",1961,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",1961,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",1961,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",1961,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",1961,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",1961,[[]]],[11,"variant","","Writes `variant` to the field",1962,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",1962,[[],["w",6]]],[11,"mfrq","","Match frequency",1962,[[],["w",6]]],[11,"npwm","","Normal PWM",1962,[[],["w",6]]],[11,"dscritical","","Dual-slope critical",1962,[[],["w",6]]],[11,"dsbottom","","Dual-slope with interrupt/event condition when COUNT…",1962,[[],["w",6]]],[11,"dsboth","","Dual-slope with interrupt/event condition when COUNT…",1962,[[],["w",6]]],[11,"dstop","","Dual-slope with interrupt/event condition when COUNT…",1962,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1962,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["ramp_a",4]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",6,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",6,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",6,[[]]],[11,"is_ramp2c","","Checks if the value of the field is `RAMP2C`",6,[[]]],[11,"variant","atsamd11c::tcc0::wave","Get enumerated values variant",1963,[[],["ramp_a",4]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",1963,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",1963,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",1963,[[]]],[11,"is_ramp2c","","Checks if the value of the field is `RAMP2C`",1963,[[]]],[11,"variant","","Writes `variant` to the field",1964,[[["ramp_a",4]],["w",6]]],[11,"ramp1","","RAMP1 operation",1964,[[],["w",6]]],[11,"ramp2a","","Alternative RAMP2 operation",1964,[[],["w",6]]],[11,"ramp2","","RAMP2 operation",1964,[[],["w",6]]],[11,"ramp2c","","Critical RAMP2 operation",1964,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1964,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1965,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1965,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1965,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1966,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1966,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1966,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1967,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1967,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1967,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1968,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1968,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1968,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1969,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1969,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1969,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1970,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1970,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1970,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1971,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1971,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1971,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1972,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1972,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1972,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1973,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1973,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1973,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1974,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1974,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1974,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1975,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1975,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1975,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1976,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1976,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1976,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1977,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1977,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1977,[[],["w",6]]],[11,"wavegen","atsamd11c::generic","Bits 0:2 - Waveform Generation",6,[[],["wavegen_r",6]]],[11,"ramp","","Bits 4:5 - Ramp Mode",6,[[],["ramp_r",6]]],[11,"ciperen","","Bit 7 - Circular period Enable",6,[[],["ciperen_r",6]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",6,[[],["ciccen0_r",6]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",6,[[],["ciccen1_r",6]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",6,[[],["ciccen2_r",6]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",6,[[],["ciccen3_r",6]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",6,[[],["pol0_r",6]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",6,[[],["pol1_r",6]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",6,[[],["pol2_r",6]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",6,[[],["pol3_r",6]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",6,[[],["swap0_r",6]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",6,[[],["swap1_r",6]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",6,[[],["swap2_r",6]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",6,[[],["swap3_r",6]]],[11,"wavegen","atsamd11c::tcc0::wave","Bits 0:2 - Waveform Generation",1978,[[],["wavegen_r",6]]],[11,"ramp","","Bits 4:5 - Ramp Mode",1978,[[],["ramp_r",6]]],[11,"ciperen","","Bit 7 - Circular period Enable",1978,[[],["ciperen_r",6]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",1978,[[],["ciccen0_r",6]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",1978,[[],["ciccen1_r",6]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",1978,[[],["ciccen2_r",6]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",1978,[[],["ciccen3_r",6]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",1978,[[],["pol0_r",6]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",1978,[[],["pol1_r",6]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",1978,[[],["pol2_r",6]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",1978,[[],["pol3_r",6]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",1978,[[],["swap0_r",6]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",1978,[[],["swap1_r",6]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",1978,[[],["swap2_r",6]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",1978,[[],["swap3_r",6]]],[11,"wavegen","atsamd11c::generic","Bits 0:2 - Waveform Generation",7,[[],["wavegen_w",3]]],[11,"ramp","","Bits 4:5 - Ramp Mode",7,[[],["ramp_w",3]]],[11,"ciperen","","Bit 7 - Circular period Enable",7,[[],["ciperen_w",3]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",7,[[],["ciccen0_w",3]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",7,[[],["ciccen1_w",3]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",7,[[],["ciccen2_w",3]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",7,[[],["ciccen3_w",3]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",7,[[],["pol0_w",3]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",7,[[],["pol1_w",3]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",7,[[],["pol2_w",3]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",7,[[],["pol3_w",3]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",7,[[],["swap0_w",3]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",7,[[],["swap1_w",3]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",7,[[],["swap2_w",3]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",7,[[],["swap3_w",3]]],[11,"wavegen","atsamd11c::tcc0::wave","Bits 0:2 - Waveform Generation",1979,[[],["wavegen_w",3]]],[11,"ramp","","Bits 4:5 - Ramp Mode",1979,[[],["ramp_w",3]]],[11,"ciperen","","Bit 7 - Circular period Enable",1979,[[],["ciperen_w",3]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",1979,[[],["ciccen0_w",3]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",1979,[[],["ciccen1_w",3]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",1979,[[],["ciccen2_w",3]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",1979,[[],["ciccen3_w",3]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",1979,[[],["pol0_w",3]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",1979,[[],["pol1_w",3]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",1979,[[],["pol2_w",3]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",1979,[[],["pol3_w",3]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",1979,[[],["swap0_w",3]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",1979,[[],["swap1_w",3]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",1979,[[],["swap2_w",3]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",1979,[[],["swap3_w",3]]],[0,"per","atsamd11c::tcc0","Period",null,null],[3,"PER_W","atsamd11c::tcc0::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1980,[[],["w",6]]],[11,"per","atsamd11c::generic","Bits 0:23 - Period Value",6,[[],["per_r",6]]],[11,"per","atsamd11c::tcc0::per","Bits 0:23 - Period Value",1981,[[],["per_r",6]]],[11,"per","atsamd11c::generic","Bits 0:23 - Period Value",7,[[],["per_w",3]]],[11,"per","atsamd11c::tcc0::per","Bits 0:23 - Period Value",1982,[[],["per_w",3]]],[0,"per_dith4","atsamd11c::tcc0","Period",null,null],[3,"DITHERCY_W","atsamd11c::tcc0::per_dith4","Write proxy for field `DITHERCY`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH4",null,null],[6,"W","","Writer for register PER_DITH4",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1983,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1984,[[],["w",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:3 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"per","","Bits 4:23 - Period Value",6,[[],["per_r",6]]],[11,"dithercy","atsamd11c::tcc0::per_dith4","Bits 0:3 - Dithering Cycle Number",1985,[[],["dithercy_r",6]]],[11,"per","","Bits 4:23 - Period Value",1985,[[],["per_r",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:3 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"per","","Bits 4:23 - Period Value",7,[[],["per_w",3]]],[11,"dithercy","atsamd11c::tcc0::per_dith4","Bits 0:3 - Dithering Cycle Number",1986,[[],["dithercy_w",3]]],[11,"per","","Bits 4:23 - Period Value",1986,[[],["per_w",3]]],[0,"per_dith5","atsamd11c::tcc0","Period",null,null],[3,"DITHERCY_W","atsamd11c::tcc0::per_dith5","Write proxy for field `DITHERCY`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH5",null,null],[6,"W","","Writer for register PER_DITH5",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1987,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1988,[[],["w",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:4 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"per","","Bits 5:23 - Period Value",6,[[],["per_r",6]]],[11,"dithercy","atsamd11c::tcc0::per_dith5","Bits 0:4 - Dithering Cycle Number",1989,[[],["dithercy_r",6]]],[11,"per","","Bits 5:23 - Period Value",1989,[[],["per_r",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:4 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"per","","Bits 5:23 - Period Value",7,[[],["per_w",3]]],[11,"dithercy","atsamd11c::tcc0::per_dith5","Bits 0:4 - Dithering Cycle Number",1990,[[],["dithercy_w",3]]],[11,"per","","Bits 5:23 - Period Value",1990,[[],["per_w",3]]],[0,"per_dith6","atsamd11c::tcc0","Period",null,null],[3,"DITHERCY_W","atsamd11c::tcc0::per_dith6","Write proxy for field `DITHERCY`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH6",null,null],[6,"W","","Writer for register PER_DITH6",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1991,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1992,[[],["w",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:5 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"per","","Bits 6:23 - Period Value",6,[[],["per_r",6]]],[11,"dithercy","atsamd11c::tcc0::per_dith6","Bits 0:5 - Dithering Cycle Number",1993,[[],["dithercy_r",6]]],[11,"per","","Bits 6:23 - Period Value",1993,[[],["per_r",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:5 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"per","","Bits 6:23 - Period Value",7,[[],["per_w",3]]],[11,"dithercy","atsamd11c::tcc0::per_dith6","Bits 0:5 - Dithering Cycle Number",1994,[[],["dithercy_w",3]]],[11,"per","","Bits 6:23 - Period Value",1994,[[],["per_w",3]]],[0,"cc","atsamd11c::tcc0","Compare and Capture",null,null],[3,"CC_W","atsamd11c::tcc0::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s",null,null],[6,"W","","Writer for register CC%s",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1995,[[],["w",6]]],[11,"cc","atsamd11c::generic","Bits 0:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd11c::tcc0::cc","Bits 0:23 - Channel Compare/Capture Value",1996,[[],["cc_r",6]]],[11,"cc","atsamd11c::generic","Bits 0:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd11c::tcc0::cc","Bits 0:23 - Channel Compare/Capture Value",1997,[[],["cc_w",3]]],[0,"cc_dith4","atsamd11c::tcc0","Compare and Capture",null,null],[3,"DITHERCY_W","atsamd11c::tcc0::cc_dith4","Write proxy for field `DITHERCY`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s_DITH4",null,null],[6,"W","","Writer for register CC%s_DITH4",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1998,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1999,[[],["w",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:3 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dithercy","atsamd11c::tcc0::cc_dith4","Bits 0:3 - Dithering Cycle Number",2000,[[],["dithercy_r",6]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",2000,[[],["cc_r",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:3 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dithercy","atsamd11c::tcc0::cc_dith4","Bits 0:3 - Dithering Cycle Number",2001,[[],["dithercy_w",3]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",2001,[[],["cc_w",3]]],[0,"cc_dith5","atsamd11c::tcc0","Compare and Capture",null,null],[3,"DITHERCY_W","atsamd11c::tcc0::cc_dith5","Write proxy for field `DITHERCY`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s_DITH5",null,null],[6,"W","","Writer for register CC%s_DITH5",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",2002,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2003,[[],["w",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:4 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dithercy","atsamd11c::tcc0::cc_dith5","Bits 0:4 - Dithering Cycle Number",2004,[[],["dithercy_r",6]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",2004,[[],["cc_r",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:4 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dithercy","atsamd11c::tcc0::cc_dith5","Bits 0:4 - Dithering Cycle Number",2005,[[],["dithercy_w",3]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",2005,[[],["cc_w",3]]],[0,"cc_dith6","atsamd11c::tcc0","Compare and Capture",null,null],[3,"DITHERCY_W","atsamd11c::tcc0::cc_dith6","Write proxy for field `DITHERCY`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC%s_DITH6",null,null],[6,"W","","Writer for register CC%s_DITH6",null,null],[6,"DITHERCY_R","","Reader of field `DITHERCY`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",2006,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2007,[[],["w",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:5 - Dithering Cycle Number",6,[[],["dithercy_r",6]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dithercy","atsamd11c::tcc0::cc_dith6","Bits 0:5 - Dithering Cycle Number",2008,[[],["dithercy_r",6]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",2008,[[],["cc_r",6]]],[11,"dithercy","atsamd11c::generic","Bits 0:5 - Dithering Cycle Number",7,[[],["dithercy_w",3]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dithercy","atsamd11c::tcc0::cc_dith6","Bits 0:5 - Dithering Cycle Number",2009,[[],["dithercy_w",3]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",2009,[[],["cc_w",3]]],[0,"pattb","atsamd11c::tcc0","Pattern Buffer",null,null],[3,"PGEB0_W","atsamd11c::tcc0::pattb","Write proxy for field `PGEB0`",null,null],[3,"PGEB1_W","","Write proxy for field `PGEB1`",null,null],[3,"PGEB2_W","","Write proxy for field `PGEB2`",null,null],[3,"PGEB3_W","","Write proxy for field `PGEB3`",null,null],[3,"PGEB4_W","","Write proxy for field `PGEB4`",null,null],[3,"PGEB5_W","","Write proxy for field `PGEB5`",null,null],[3,"PGEB6_W","","Write proxy for field `PGEB6`",null,null],[3,"PGEB7_W","","Write proxy for field `PGEB7`",null,null],[3,"PGVB0_W","","Write proxy for field `PGVB0`",null,null],[3,"PGVB1_W","","Write proxy for field `PGVB1`",null,null],[3,"PGVB2_W","","Write proxy for field `PGVB2`",null,null],[3,"PGVB3_W","","Write proxy for field `PGVB3`",null,null],[3,"PGVB4_W","","Write proxy for field `PGVB4`",null,null],[3,"PGVB5_W","","Write proxy for field `PGVB5`",null,null],[3,"PGVB6_W","","Write proxy for field `PGVB6`",null,null],[3,"PGVB7_W","","Write proxy for field `PGVB7`",null,null],[6,"R","","Reader of register PATTB",null,null],[6,"W","","Writer for register PATTB",null,null],[6,"PGEB0_R","","Reader of field `PGEB0`",null,null],[6,"PGEB1_R","","Reader of field `PGEB1`",null,null],[6,"PGEB2_R","","Reader of field `PGEB2`",null,null],[6,"PGEB3_R","","Reader of field `PGEB3`",null,null],[6,"PGEB4_R","","Reader of field `PGEB4`",null,null],[6,"PGEB5_R","","Reader of field `PGEB5`",null,null],[6,"PGEB6_R","","Reader of field `PGEB6`",null,null],[6,"PGEB7_R","","Reader of field `PGEB7`",null,null],[6,"PGVB0_R","","Reader of field `PGVB0`",null,null],[6,"PGVB1_R","","Reader of field `PGVB1`",null,null],[6,"PGVB2_R","","Reader of field `PGVB2`",null,null],[6,"PGVB3_R","","Reader of field `PGVB3`",null,null],[6,"PGVB4_R","","Reader of field `PGVB4`",null,null],[6,"PGVB5_R","","Reader of field `PGVB5`",null,null],[6,"PGVB6_R","","Reader of field `PGVB6`",null,null],[6,"PGVB7_R","","Reader of field `PGVB7`",null,null],[11,"set_bit","","Sets the field bit",2010,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2010,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2010,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2011,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2011,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2011,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2012,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2012,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2012,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2013,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2013,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2013,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2014,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2014,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2014,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2015,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2015,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2015,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2016,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2016,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2016,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2017,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2017,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2017,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2018,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2018,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2018,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2019,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2019,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2019,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2020,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2020,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2020,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2021,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2021,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2021,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2022,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2022,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2022,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2023,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2023,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2023,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2024,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2024,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2024,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2025,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2025,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2025,[[],["w",6]]],[11,"pgeb0","atsamd11c::generic","Bit 0 - Pattern Generator 0 Output Enable Buffer",6,[[],["pgeb0_r",6]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",6,[[],["pgeb1_r",6]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",6,[[],["pgeb2_r",6]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",6,[[],["pgeb3_r",6]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",6,[[],["pgeb4_r",6]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",6,[[],["pgeb5_r",6]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",6,[[],["pgeb6_r",6]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",6,[[],["pgeb7_r",6]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",6,[[],["pgvb0_r",6]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",6,[[],["pgvb1_r",6]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",6,[[],["pgvb2_r",6]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",6,[[],["pgvb3_r",6]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",6,[[],["pgvb4_r",6]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",6,[[],["pgvb5_r",6]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",6,[[],["pgvb6_r",6]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",6,[[],["pgvb7_r",6]]],[11,"pgeb0","atsamd11c::tcc0::pattb","Bit 0 - Pattern Generator 0 Output Enable Buffer",2026,[[],["pgeb0_r",6]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",2026,[[],["pgeb1_r",6]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",2026,[[],["pgeb2_r",6]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",2026,[[],["pgeb3_r",6]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",2026,[[],["pgeb4_r",6]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",2026,[[],["pgeb5_r",6]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",2026,[[],["pgeb6_r",6]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",2026,[[],["pgeb7_r",6]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",2026,[[],["pgvb0_r",6]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",2026,[[],["pgvb1_r",6]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",2026,[[],["pgvb2_r",6]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",2026,[[],["pgvb3_r",6]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",2026,[[],["pgvb4_r",6]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",2026,[[],["pgvb5_r",6]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",2026,[[],["pgvb6_r",6]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",2026,[[],["pgvb7_r",6]]],[11,"pgeb0","atsamd11c::generic","Bit 0 - Pattern Generator 0 Output Enable Buffer",7,[[],["pgeb0_w",3]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",7,[[],["pgeb1_w",3]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",7,[[],["pgeb2_w",3]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",7,[[],["pgeb3_w",3]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",7,[[],["pgeb4_w",3]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",7,[[],["pgeb5_w",3]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",7,[[],["pgeb6_w",3]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",7,[[],["pgeb7_w",3]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",7,[[],["pgvb0_w",3]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",7,[[],["pgvb1_w",3]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",7,[[],["pgvb2_w",3]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",7,[[],["pgvb3_w",3]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",7,[[],["pgvb4_w",3]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",7,[[],["pgvb5_w",3]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",7,[[],["pgvb6_w",3]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",7,[[],["pgvb7_w",3]]],[11,"pgeb0","atsamd11c::tcc0::pattb","Bit 0 - Pattern Generator 0 Output Enable Buffer",2027,[[],["pgeb0_w",3]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",2027,[[],["pgeb1_w",3]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",2027,[[],["pgeb2_w",3]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",2027,[[],["pgeb3_w",3]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",2027,[[],["pgeb4_w",3]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",2027,[[],["pgeb5_w",3]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",2027,[[],["pgeb6_w",3]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",2027,[[],["pgeb7_w",3]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",2027,[[],["pgvb0_w",3]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",2027,[[],["pgvb1_w",3]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",2027,[[],["pgvb2_w",3]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",2027,[[],["pgvb3_w",3]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",2027,[[],["pgvb4_w",3]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",2027,[[],["pgvb5_w",3]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",2027,[[],["pgvb6_w",3]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",2027,[[],["pgvb7_w",3]]],[0,"waveb","atsamd11c::tcc0","Waveform Control Buffer",null,null],[3,"WAVEGENB_W","atsamd11c::tcc0::waveb","Write proxy for field `WAVEGENB`",null,null],[3,"RAMPB_W","","Write proxy for field `RAMPB`",null,null],[3,"CIPERENB_W","","Write proxy for field `CIPERENB`",null,null],[3,"CICCENB0_W","","Write proxy for field `CICCENB0`",null,null],[3,"CICCENB1_W","","Write proxy for field `CICCENB1`",null,null],[3,"CICCENB2_W","","Write proxy for field `CICCENB2`",null,null],[3,"CICCENB3_W","","Write proxy for field `CICCENB3`",null,null],[3,"POLB0_W","","Write proxy for field `POLB0`",null,null],[3,"POLB1_W","","Write proxy for field `POLB1`",null,null],[3,"POLB2_W","","Write proxy for field `POLB2`",null,null],[3,"POLB3_W","","Write proxy for field `POLB3`",null,null],[3,"SWAPB0_W","","Write proxy for field `SWAPB0`",null,null],[3,"SWAPB1_W","","Write proxy for field `SWAPB1`",null,null],[3,"SWAPB2_W","","Write proxy for field `SWAPB2`",null,null],[3,"SWAPB3_W","","Write proxy for field `SWAPB3`",null,null],[4,"WAVEGENB_A","","Waveform Generation Buffer",null,null],[13,"NFRQ","","0: Normal frequency",2028,null],[13,"MFRQ","","1: Match frequency",2028,null],[13,"NPWM","","2: Normal PWM",2028,null],[13,"DSCRITICAL","","4: Dual-slope critical",2028,null],[13,"DSBOTTOM","","5: Dual-slope with interrupt/event condition when COUNT…",2028,null],[13,"DSBOTH","","6: Dual-slope with interrupt/event condition when COUNT…",2028,null],[13,"DSTOP","","7: Dual-slope with interrupt/event condition when COUNT…",2028,null],[4,"RAMPB_A","","Ramp Mode Buffer",null,null],[13,"RAMP1","","0: RAMP1 operation",2029,null],[13,"RAMP2A","","1: Alternative RAMP2 operation",2029,null],[13,"RAMP2","","2: RAMP2 operation",2029,null],[6,"R","","Reader of register WAVEB",null,null],[6,"W","","Writer for register WAVEB",null,null],[6,"WAVEGENB_R","","Reader of field `WAVEGENB`",null,null],[6,"RAMPB_R","","Reader of field `RAMPB`",null,null],[6,"CIPERENB_R","","Reader of field `CIPERENB`",null,null],[6,"CICCENB0_R","","Reader of field `CICCENB0`",null,null],[6,"CICCENB1_R","","Reader of field `CICCENB1`",null,null],[6,"CICCENB2_R","","Reader of field `CICCENB2`",null,null],[6,"CICCENB3_R","","Reader of field `CICCENB3`",null,null],[6,"POLB0_R","","Reader of field `POLB0`",null,null],[6,"POLB1_R","","Reader of field `POLB1`",null,null],[6,"POLB2_R","","Reader of field `POLB2`",null,null],[6,"POLB3_R","","Reader of field `POLB3`",null,null],[6,"SWAPB0_R","","Reader of field `SWAPB0`",null,null],[6,"SWAPB1_R","","Reader of field `SWAPB1`",null,null],[6,"SWAPB2_R","","Reader of field `SWAPB2`",null,null],[6,"SWAPB3_R","","Reader of field `SWAPB3`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["wavegenb_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",6,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",6,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",6,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",6,[[]]],[11,"variant","atsamd11c::tcc0::waveb","Get enumerated values variant",2030,[[],[["variant",4],["wavegenb_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",2030,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",2030,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",2030,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",2030,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",2030,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",2030,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",2030,[[]]],[11,"variant","","Writes `variant` to the field",2031,[[["wavegenb_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",2031,[[],["w",6]]],[11,"mfrq","","Match frequency",2031,[[],["w",6]]],[11,"npwm","","Normal PWM",2031,[[],["w",6]]],[11,"dscritical","","Dual-slope critical",2031,[[],["w",6]]],[11,"dsbottom","","Dual-slope with interrupt/event condition when COUNT…",2031,[[],["w",6]]],[11,"dsboth","","Dual-slope with interrupt/event condition when COUNT…",2031,[[],["w",6]]],[11,"dstop","","Dual-slope with interrupt/event condition when COUNT…",2031,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2031,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["rampb_a",4]]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",6,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",6,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",6,[[]]],[11,"variant","atsamd11c::tcc0::waveb","Get enumerated values variant",2032,[[],[["variant",4],["rampb_a",4]]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",2032,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",2032,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",2032,[[]]],[11,"variant","","Writes `variant` to the field",2033,[[["rampb_a",4]],["w",6]]],[11,"ramp1","","RAMP1 operation",2033,[[],["w",6]]],[11,"ramp2a","","Alternative RAMP2 operation",2033,[[],["w",6]]],[11,"ramp2","","RAMP2 operation",2033,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2033,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2034,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2034,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2034,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2035,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2035,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2036,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2037,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2037,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2037,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2038,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2038,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2038,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2039,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2039,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2040,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2041,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2041,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2041,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2042,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2042,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2042,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2043,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2043,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2043,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2044,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2044,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2044,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2045,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2045,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2045,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2046,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2046,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2046,[[],["w",6]]],[11,"wavegenb","atsamd11c::generic","Bits 0:2 - Waveform Generation Buffer",6,[[],["wavegenb_r",6]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",6,[[],["rampb_r",6]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",6,[[],["ciperenb_r",6]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",6,[[],["ciccenb0_r",6]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",6,[[],["ciccenb1_r",6]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",6,[[],["ciccenb2_r",6]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",6,[[],["ciccenb3_r",6]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",6,[[],["polb0_r",6]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",6,[[],["polb1_r",6]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",6,[[],["polb2_r",6]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",6,[[],["polb3_r",6]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",6,[[],["swapb0_r",6]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",6,[[],["swapb1_r",6]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",6,[[],["swapb2_r",6]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",6,[[],["swapb3_r",6]]],[11,"wavegenb","atsamd11c::tcc0::waveb","Bits 0:2 - Waveform Generation Buffer",2047,[[],["wavegenb_r",6]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",2047,[[],["rampb_r",6]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",2047,[[],["ciperenb_r",6]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",2047,[[],["ciccenb0_r",6]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",2047,[[],["ciccenb1_r",6]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",2047,[[],["ciccenb2_r",6]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",2047,[[],["ciccenb3_r",6]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",2047,[[],["polb0_r",6]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",2047,[[],["polb1_r",6]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",2047,[[],["polb2_r",6]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",2047,[[],["polb3_r",6]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",2047,[[],["swapb0_r",6]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",2047,[[],["swapb1_r",6]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",2047,[[],["swapb2_r",6]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",2047,[[],["swapb3_r",6]]],[11,"wavegenb","atsamd11c::generic","Bits 0:2 - Waveform Generation Buffer",7,[[],["wavegenb_w",3]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",7,[[],["rampb_w",3]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",7,[[],["ciperenb_w",3]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",7,[[],["ciccenb0_w",3]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",7,[[],["ciccenb1_w",3]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",7,[[],["ciccenb2_w",3]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",7,[[],["ciccenb3_w",3]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",7,[[],["polb0_w",3]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",7,[[],["polb1_w",3]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",7,[[],["polb2_w",3]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",7,[[],["polb3_w",3]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",7,[[],["swapb0_w",3]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",7,[[],["swapb1_w",3]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",7,[[],["swapb2_w",3]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",7,[[],["swapb3_w",3]]],[11,"wavegenb","atsamd11c::tcc0::waveb","Bits 0:2 - Waveform Generation Buffer",2048,[[],["wavegenb_w",3]]],[11,"rampb","","Bits 4:5 - Ramp Mode Buffer",2048,[[],["rampb_w",3]]],[11,"ciperenb","","Bit 7 - Circular Period Enable Buffer",2048,[[],["ciperenb_w",3]]],[11,"ciccenb0","","Bit 8 - Circular Channel 0 Enable Buffer",2048,[[],["ciccenb0_w",3]]],[11,"ciccenb1","","Bit 9 - Circular Channel 1 Enable Buffer",2048,[[],["ciccenb1_w",3]]],[11,"ciccenb2","","Bit 10 - Circular Channel 2 Enable Buffer",2048,[[],["ciccenb2_w",3]]],[11,"ciccenb3","","Bit 11 - Circular Channel 3 Enable Buffer",2048,[[],["ciccenb3_w",3]]],[11,"polb0","","Bit 16 - Channel 0 Polarity Buffer",2048,[[],["polb0_w",3]]],[11,"polb1","","Bit 17 - Channel 1 Polarity Buffer",2048,[[],["polb1_w",3]]],[11,"polb2","","Bit 18 - Channel 2 Polarity Buffer",2048,[[],["polb2_w",3]]],[11,"polb3","","Bit 19 - Channel 3 Polarity Buffer",2048,[[],["polb3_w",3]]],[11,"swapb0","","Bit 24 - Swap DTI Output Pair 0 Buffer",2048,[[],["swapb0_w",3]]],[11,"swapb1","","Bit 25 - Swap DTI Output Pair 1 Buffer",2048,[[],["swapb1_w",3]]],[11,"swapb2","","Bit 26 - Swap DTI Output Pair 2 Buffer",2048,[[],["swapb2_w",3]]],[11,"swapb3","","Bit 27 - Swap DTI Output Pair 3 Buffer",2048,[[],["swapb3_w",3]]],[0,"perb","atsamd11c::tcc0","Period Buffer",null,null],[3,"PERB_W","atsamd11c::tcc0::perb","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB",null,null],[6,"W","","Writer for register PERB",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2049,[[],["w",6]]],[11,"perb","atsamd11c::generic","Bits 0:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"perb","atsamd11c::tcc0::perb","Bits 0:23 - Period Buffer Value",2050,[[],["perb_r",6]]],[11,"perb","atsamd11c::generic","Bits 0:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"perb","atsamd11c::tcc0::perb","Bits 0:23 - Period Buffer Value",2051,[[],["perb_w",3]]],[0,"perb_dith4","atsamd11c::tcc0","Period Buffer",null,null],[3,"DITHERCYB_W","atsamd11c::tcc0::perb_dith4","Write proxy for field `DITHERCYB`",null,null],[3,"PERB_W","","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB_DITH4",null,null],[6,"W","","Writer for register PERB_DITH4",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2052,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2053,[[],["w",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:3 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"perb","","Bits 4:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"dithercyb","atsamd11c::tcc0::perb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2054,[[],["dithercyb_r",6]]],[11,"perb","","Bits 4:23 - Period Buffer Value",2054,[[],["perb_r",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:3 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"perb","","Bits 4:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"dithercyb","atsamd11c::tcc0::perb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2055,[[],["dithercyb_w",3]]],[11,"perb","","Bits 4:23 - Period Buffer Value",2055,[[],["perb_w",3]]],[0,"perb_dith5","atsamd11c::tcc0","Period Buffer",null,null],[3,"DITHERCYB_W","atsamd11c::tcc0::perb_dith5","Write proxy for field `DITHERCYB`",null,null],[3,"PERB_W","","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB_DITH5",null,null],[6,"W","","Writer for register PERB_DITH5",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2056,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2057,[[],["w",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:4 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"perb","","Bits 5:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"dithercyb","atsamd11c::tcc0::perb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2058,[[],["dithercyb_r",6]]],[11,"perb","","Bits 5:23 - Period Buffer Value",2058,[[],["perb_r",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:4 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"perb","","Bits 5:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"dithercyb","atsamd11c::tcc0::perb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2059,[[],["dithercyb_w",3]]],[11,"perb","","Bits 5:23 - Period Buffer Value",2059,[[],["perb_w",3]]],[0,"perb_dith6","atsamd11c::tcc0","Period Buffer",null,null],[3,"DITHERCYB_W","atsamd11c::tcc0::perb_dith6","Write proxy for field `DITHERCYB`",null,null],[3,"PERB_W","","Write proxy for field `PERB`",null,null],[6,"R","","Reader of register PERB_DITH6",null,null],[6,"W","","Writer for register PERB_DITH6",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"PERB_R","","Reader of field `PERB`",null,null],[11,"bits","","Writes raw bits to the field",2060,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2061,[[],["w",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:5 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"perb","","Bits 6:23 - Period Buffer Value",6,[[],["perb_r",6]]],[11,"dithercyb","atsamd11c::tcc0::perb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2062,[[],["dithercyb_r",6]]],[11,"perb","","Bits 6:23 - Period Buffer Value",2062,[[],["perb_r",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:5 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"perb","","Bits 6:23 - Period Buffer Value",7,[[],["perb_w",3]]],[11,"dithercyb","atsamd11c::tcc0::perb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2063,[[],["dithercyb_w",3]]],[11,"perb","","Bits 6:23 - Period Buffer Value",2063,[[],["perb_w",3]]],[0,"ccb","atsamd11c::tcc0","Compare and Capture Buffer",null,null],[3,"CCB_W","atsamd11c::tcc0::ccb","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s",null,null],[6,"W","","Writer for register CCB%s",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2064,[[],["w",6]]],[11,"ccb","atsamd11c::generic","Bits 0:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"ccb","atsamd11c::tcc0::ccb","Bits 0:23 - Channel Compare/Capture Buffer Value",2065,[[],["ccb_r",6]]],[11,"ccb","atsamd11c::generic","Bits 0:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"ccb","atsamd11c::tcc0::ccb","Bits 0:23 - Channel Compare/Capture Buffer Value",2066,[[],["ccb_w",3]]],[0,"ccb_dith4","atsamd11c::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERCYB_W","atsamd11c::tcc0::ccb_dith4","Write proxy for field `DITHERCYB`",null,null],[3,"CCB_W","","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s_DITH4",null,null],[6,"W","","Writer for register CCB%s_DITH4",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2067,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2068,[[],["w",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:3 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"dithercyb","atsamd11c::tcc0::ccb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2069,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",2069,[[],["ccb_r",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:3 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"dithercyb","atsamd11c::tcc0::ccb_dith4","Bits 0:3 - Dithering Buffer Cycle Number",2070,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 4:23 - Channel Compare/Capture Buffer Value",2070,[[],["ccb_w",3]]],[0,"ccb_dith5","atsamd11c::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERCYB_W","atsamd11c::tcc0::ccb_dith5","Write proxy for field `DITHERCYB`",null,null],[3,"CCB_W","","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s_DITH5",null,null],[6,"W","","Writer for register CCB%s_DITH5",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2071,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2072,[[],["w",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:4 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"dithercyb","atsamd11c::tcc0::ccb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2073,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",2073,[[],["ccb_r",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:4 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"dithercyb","atsamd11c::tcc0::ccb_dith5","Bits 0:4 - Dithering Buffer Cycle Number",2074,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 5:23 - Channel Compare/Capture Buffer Value",2074,[[],["ccb_w",3]]],[0,"ccb_dith6","atsamd11c::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERCYB_W","atsamd11c::tcc0::ccb_dith6","Write proxy for field `DITHERCYB`",null,null],[3,"CCB_W","","Write proxy for field `CCB`",null,null],[6,"R","","Reader of register CCB%s_DITH6",null,null],[6,"W","","Writer for register CCB%s_DITH6",null,null],[6,"DITHERCYB_R","","Reader of field `DITHERCYB`",null,null],[6,"CCB_R","","Reader of field `CCB`",null,null],[11,"bits","","Writes raw bits to the field",2075,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2076,[[],["w",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:5 - Dithering Buffer Cycle Number",6,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",6,[[],["ccb_r",6]]],[11,"dithercyb","atsamd11c::tcc0::ccb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2077,[[],["dithercyb_r",6]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",2077,[[],["ccb_r",6]]],[11,"dithercyb","atsamd11c::generic","Bits 0:5 - Dithering Buffer Cycle Number",7,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",7,[[],["ccb_w",3]]],[11,"dithercyb","atsamd11c::tcc0::ccb_dith6","Bits 0:5 - Dithering Buffer Cycle Number",2078,[[],["dithercyb_w",3]]],[11,"ccb","","Bits 6:23 - Channel Compare/Capture Buffer Value",2078,[[],["ccb_w",3]]],[6,"CTRLA","atsamd11c::tcc0","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"FCTRLA","","Recoverable Fault A Configuration",null,null],[6,"FCTRLB","","Recoverable Fault B Configuration",null,null],[6,"WEXCTRL","","Waveform Extension Configuration",null,null],[6,"DRVCTRL","","Driver Control",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","Count",null,null],[6,"COUNT_DITH4","","Count",null,null],[6,"COUNT_DITH5","","Count",null,null],[6,"COUNT_DITH6","","Count",null,null],[6,"PATT","","Pattern",null,null],[6,"WAVE","","Waveform Control",null,null],[6,"PER","","Period",null,null],[6,"PER_DITH4","","Period",null,null],[6,"PER_DITH5","","Period",null,null],[6,"PER_DITH6","","Period",null,null],[6,"CC","","Compare and Capture",null,null],[6,"CC_DITH4","","Compare and Capture",null,null],[6,"CC_DITH5","","Compare and Capture",null,null],[6,"CC_DITH6","","Compare and Capture",null,null],[6,"PATTB","","Pattern Buffer",null,null],[6,"WAVEB","","Waveform Control Buffer",null,null],[6,"PERB","","Period Buffer",null,null],[6,"PERB_DITH4","","Period Buffer",null,null],[6,"PERB_DITH5","","Period Buffer",null,null],[6,"PERB_DITH6","","Period Buffer",null,null],[6,"CCB","","Compare and Capture Buffer",null,null],[6,"CCB_DITH4","","Compare and Capture Buffer",null,null],[6,"CCB_DITH5","","Compare and Capture Buffer",null,null],[6,"CCB_DITH6","","Compare and Capture Buffer",null,null],[11,"count_dith6","","0x34 - Count",1714,[[],["count_dith6",6]]],[11,"count_dith6_mut","","0x34 - Count",1714,[[],["count_dith6",6]]],[11,"count_dith5","","0x34 - Count",1714,[[],["count_dith5",6]]],[11,"count_dith5_mut","","0x34 - Count",1714,[[],["count_dith5",6]]],[11,"count_dith4","","0x34 - Count",1714,[[],["count_dith4",6]]],[11,"count_dith4_mut","","0x34 - Count",1714,[[],["count_dith4",6]]],[11,"count","","0x34 - Count",1714,[[],["count",6]]],[11,"count_mut","","0x34 - Count",1714,[[],["count",6]]],[11,"per_dith6","","0x40 - Period",1714,[[],["per_dith6",6]]],[11,"per_dith6_mut","","0x40 - Period",1714,[[],["per_dith6",6]]],[11,"per_dith5","","0x40 - Period",1714,[[],["per_dith5",6]]],[11,"per_dith5_mut","","0x40 - Period",1714,[[],["per_dith5",6]]],[11,"per_dith4","","0x40 - Period",1714,[[],["per_dith4",6]]],[11,"per_dith4_mut","","0x40 - Period",1714,[[],["per_dith4",6]]],[11,"per","","0x40 - Period",1714,[[],["per",6]]],[11,"per_mut","","0x40 - Period",1714,[[],["per",6]]],[11,"cc_dith6","","0x44 - Compare and Capture",1714,[[]]],[11,"cc_dith6_mut","","0x44 - Compare and Capture",1714,[[]]],[11,"cc_dith5","","0x44 - Compare and Capture",1714,[[]]],[11,"cc_dith5_mut","","0x44 - Compare and Capture",1714,[[]]],[11,"cc_dith4","","0x44 - Compare and Capture",1714,[[]]],[11,"cc_dith4_mut","","0x44 - Compare and Capture",1714,[[]]],[11,"cc","","0x44 - Compare and Capture",1714,[[]]],[11,"cc_mut","","0x44 - Compare and Capture",1714,[[]]],[11,"perb_dith6","","0x6c - Period Buffer",1714,[[],["perb_dith6",6]]],[11,"perb_dith6_mut","","0x6c - Period Buffer",1714,[[],["perb_dith6",6]]],[11,"perb_dith5","","0x6c - Period Buffer",1714,[[],["perb_dith5",6]]],[11,"perb_dith5_mut","","0x6c - Period Buffer",1714,[[],["perb_dith5",6]]],[11,"perb_dith4","","0x6c - Period Buffer",1714,[[],["perb_dith4",6]]],[11,"perb_dith4_mut","","0x6c - Period Buffer",1714,[[],["perb_dith4",6]]],[11,"perb","","0x6c - Period Buffer",1714,[[],["perb",6]]],[11,"perb_mut","","0x6c - Period Buffer",1714,[[],["perb",6]]],[11,"ccb_dith6","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb_dith6_mut","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb_dith5","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb_dith5_mut","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb_dith4","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb_dith4_mut","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb","","0x70 - Compare and Capture Buffer",1714,[[]]],[11,"ccb_mut","","0x70 - Compare and Capture Buffer",1714,[[]]],[0,"usb","atsamd11c","Universal Serial Bus",null,null],[3,"RegisterBlock","atsamd11c::usb","Register block",null,null],[12,"device","","0x00 - USB is Device",2079,null],[3,"DEVICE","","Register block",null,null],[12,"ctrla","","0x00 - Control A",2080,null],[12,"syncbusy","","0x02 - Synchronization Busy",2080,null],[12,"qosctrl","","0x03 - USB Quality Of Service",2080,null],[12,"ctrlb","","0x08 - DEVICE Control B",2080,null],[12,"dadd","","0x0a - DEVICE Device Address",2080,null],[12,"status","","0x0c - DEVICE Status",2080,null],[12,"fsmstatus","","0x0d - Finite State Machine Status",2080,null],[12,"fnum","","0x10 - DEVICE Device Frame Number",2080,null],[12,"intenclr","","0x14 - DEVICE Device Interrupt Enable Clear",2080,null],[12,"intenset","","0x18 - DEVICE Device Interrupt Enable Set",2080,null],[12,"intflag","","0x1c - DEVICE Device Interrupt Flag",2080,null],[12,"epintsmry","","0x20 - DEVICE End Point Interrupt Summary",2080,null],[12,"descadd","","0x24 - Descriptor Address",2080,null],[12,"padcal","","0x28 - USB PAD Calibration",2080,null],[12,"epcfg0","","0x100 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr0","","0x104 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset0","","0x105 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus0","","0x106 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag0","","0x107 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr0","","0x108 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset0","","0x109 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg1","","0x120 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr1","","0x124 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset1","","0x125 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus1","","0x126 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag1","","0x127 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr1","","0x128 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset1","","0x129 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg2","","0x140 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr2","","0x144 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset2","","0x145 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus2","","0x146 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag2","","0x147 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr2","","0x148 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset2","","0x149 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg3","","0x160 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr3","","0x164 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset3","","0x165 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus3","","0x166 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag3","","0x167 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr3","","0x168 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset3","","0x169 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg4","","0x180 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr4","","0x184 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset4","","0x185 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus4","","0x186 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag4","","0x187 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr4","","0x188 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset4","","0x189 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg5","","0x1a0 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr5","","0x1a4 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset5","","0x1a5 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus5","","0x1a6 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag5","","0x1a7 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr5","","0x1a8 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset5","","0x1a9 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg6","","0x1c0 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr6","","0x1c4 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset6","","0x1c5 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus6","","0x1c6 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag6","","0x1c7 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr6","","0x1c8 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset6","","0x1c9 - DEVICE End Point Interrupt Set Flag",2080,null],[12,"epcfg7","","0x1e0 - DEVICE End Point Configuration",2080,null],[12,"epstatusclr7","","0x1e4 - DEVICE End Point Pipe Status Clear",2080,null],[12,"epstatusset7","","0x1e5 - DEVICE End Point Pipe Status Set",2080,null],[12,"epstatus7","","0x1e6 - DEVICE End Point Pipe Status",2080,null],[12,"epintflag7","","0x1e7 - DEVICE End Point Interrupt Flag",2080,null],[12,"epintenclr7","","0x1e8 - DEVICE End Point Interrupt Clear Flag",2080,null],[12,"epintenset7","","0x1e9 - DEVICE End Point Interrupt Set Flag",2080,null],[0,"device","","Register block USB is Device",null,null],[0,"ctrla","atsamd11c::usb::device","Control A",null,null],[3,"SWRST_W","atsamd11c::usb::device::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"DEVICE","","0: Device Mode",2081,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[11,"set_bit","","Sets the field bit",2082,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2082,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2082,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2083,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2083,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2083,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2084,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",6,[[]]],[11,"variant","atsamd11c::usb::device::ctrla","Get enumerated values variant",2085,[[],[["variant",4],["mode_a",4]]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",2085,[[]]],[11,"variant","","Writes `variant` to the field",2086,[[["mode_a",4]],["w",6]]],[11,"device","","Device Mode",2086,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2086,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2086,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2086,[[],["w",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",6,[[],["mode_r",6]]],[11,"swrst","atsamd11c::usb::device::ctrla","Bit 0 - Software Reset",2087,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",2087,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",2087,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",2087,[[],["mode_r",6]]],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",7,[[],["mode_w",3]]],[11,"swrst","atsamd11c::usb::device::ctrla","Bit 0 - Software Reset",2088,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",2088,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",2088,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",2088,[[],["mode_w",3]]],[0,"syncbusy","atsamd11c::usb::device","Synchronization Busy",null,null],[6,"R","atsamd11c::usb::device::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd11c::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd11c::usb::device::syncbusy","Bit 0 - Software Reset Synchronization Busy",2089,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",2089,[[],["enable_r",6]]],[0,"qosctrl","atsamd11c::usb::device","USB Quality Of Service",null,null],[3,"CQOS_W","atsamd11c::usb::device::qosctrl","Write proxy for field `CQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"CQOS_R","","Reader of field `CQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"bits","","Writes raw bits to the field",2090,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2091,[[],["w",6]]],[11,"cqos","atsamd11c::generic","Bits 0:1 - Configuration Quality of Service",6,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",6,[[],["dqos_r",6]]],[11,"cqos","atsamd11c::usb::device::qosctrl","Bits 0:1 - Configuration Quality of Service",2092,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",2092,[[],["dqos_r",6]]],[11,"cqos","atsamd11c::generic","Bits 0:1 - Configuration Quality of Service",7,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",7,[[],["dqos_w",3]]],[11,"cqos","atsamd11c::usb::device::qosctrl","Bits 0:1 - Configuration Quality of Service",2093,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",2093,[[],["dqos_w",3]]],[0,"ctrlb","atsamd11c::usb::device","DEVICE Control B",null,null],[3,"DETACH_W","atsamd11c::usb::device::ctrlb","Write proxy for field `DETACH`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"SPDCONF_W","","Write proxy for field `SPDCONF`",null,null],[3,"NREPLY_W","","Write proxy for field `NREPLY`",null,null],[3,"TSTJ_W","","Write proxy for field `TSTJ`",null,null],[3,"TSTK_W","","Write proxy for field `TSTK`",null,null],[3,"TSTPCKT_W","","Write proxy for field `TSTPCKT`",null,null],[3,"OPMODE2_W","","Write proxy for field `OPMODE2`",null,null],[3,"GNAK_W","","Write proxy for field `GNAK`",null,null],[3,"LPMHDSK_W","","Write proxy for field `LPMHDSK`",null,null],[4,"SPDCONF_A","","Speed Configuration",null,null],[13,"FS","","0: FS : Full Speed",2094,null],[13,"LS","","1: LS : Low Speed",2094,null],[13,"HS","","2: HS : High Speed capable",2094,null],[13,"HSTM","","3: HSTM: High Speed Test Mode (force high-speed mode for…",2094,null],[4,"LPMHDSK_A","","Link Power Management Handshake",null,null],[13,"NO","","0: No handshake. LPM is not supported",2095,null],[13,"ACK","","1: ACK",2095,null],[13,"NYET","","2: NYET",2095,null],[13,"STALL","","3: STALL",2095,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"DETACH_R","","Reader of field `DETACH`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"SPDCONF_R","","Reader of field `SPDCONF`",null,null],[6,"NREPLY_R","","Reader of field `NREPLY`",null,null],[6,"TSTJ_R","","Reader of field `TSTJ`",null,null],[6,"TSTK_R","","Reader of field `TSTK`",null,null],[6,"TSTPCKT_R","","Reader of field `TSTPCKT`",null,null],[6,"OPMODE2_R","","Reader of field `OPMODE2`",null,null],[6,"GNAK_R","","Reader of field `GNAK`",null,null],[6,"LPMHDSK_R","","Reader of field `LPMHDSK`",null,null],[11,"set_bit","","Sets the field bit",2096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2097,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["spdconf_a",4]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"is_hstm","","Checks if the value of the field is `HSTM`",6,[[]]],[11,"variant","atsamd11c::usb::device::ctrlb","Get enumerated values variant",2098,[[],["spdconf_a",4]]],[11,"is_fs","","Checks if the value of the field is `FS`",2098,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",2098,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",2098,[[]]],[11,"is_hstm","","Checks if the value of the field is `HSTM`",2098,[[]]],[11,"variant","","Writes `variant` to the field",2099,[[["spdconf_a",4]],["w",6]]],[11,"fs","","FS : Full Speed",2099,[[],["w",6]]],[11,"ls","","LS : Low Speed",2099,[[],["w",6]]],[11,"hs","","HS : High Speed capable",2099,[[],["w",6]]],[11,"hstm","","HSTM: High Speed Test Mode (force high-speed mode for test…",2099,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2099,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2100,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2100,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2100,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2101,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2101,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2101,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2102,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2102,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2102,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2105,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],["lpmhdsk_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_ack","","Checks if the value of the field is `ACK`",6,[[]]],[11,"is_nyet","","Checks if the value of the field is `NYET`",6,[[]]],[11,"is_stall","","Checks if the value of the field is `STALL`",6,[[]]],[11,"variant","atsamd11c::usb::device::ctrlb","Get enumerated values variant",2106,[[],["lpmhdsk_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2106,[[]]],[11,"is_ack","","Checks if the value of the field is `ACK`",2106,[[]]],[11,"is_nyet","","Checks if the value of the field is `NYET`",2106,[[]]],[11,"is_stall","","Checks if the value of the field is `STALL`",2106,[[]]],[11,"variant","","Writes `variant` to the field",2107,[[["lpmhdsk_a",4]],["w",6]]],[11,"no","","No handshake. LPM is not supported",2107,[[],["w",6]]],[11,"ack","","ACK",2107,[[],["w",6]]],[11,"nyet","","NYET",2107,[[],["w",6]]],[11,"stall","","STALL",2107,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2107,[[],["w",6]]],[11,"detach","atsamd11c::generic","Bit 0 - Detach",6,[[],["detach_r",6]]],[11,"uprsm","","Bit 1 - Upstream Resume",6,[[],["uprsm_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",6,[[],["spdconf_r",6]]],[11,"nreply","","Bit 4 - No Reply",6,[[],["nreply_r",6]]],[11,"tstj","","Bit 5 - Test mode J",6,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",6,[[],["tstk_r",6]]],[11,"tstpckt","","Bit 7 - Test packet mode",6,[[],["tstpckt_r",6]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",6,[[],["opmode2_r",6]]],[11,"gnak","","Bit 9 - Global NAK",6,[[],["gnak_r",6]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",6,[[],["lpmhdsk_r",6]]],[11,"detach","atsamd11c::usb::device::ctrlb","Bit 0 - Detach",2108,[[],["detach_r",6]]],[11,"uprsm","","Bit 1 - Upstream Resume",2108,[[],["uprsm_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",2108,[[],["spdconf_r",6]]],[11,"nreply","","Bit 4 - No Reply",2108,[[],["nreply_r",6]]],[11,"tstj","","Bit 5 - Test mode J",2108,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",2108,[[],["tstk_r",6]]],[11,"tstpckt","","Bit 7 - Test packet mode",2108,[[],["tstpckt_r",6]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",2108,[[],["opmode2_r",6]]],[11,"gnak","","Bit 9 - Global NAK",2108,[[],["gnak_r",6]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",2108,[[],["lpmhdsk_r",6]]],[11,"detach","atsamd11c::generic","Bit 0 - Detach",7,[[],["detach_w",3]]],[11,"uprsm","","Bit 1 - Upstream Resume",7,[[],["uprsm_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",7,[[],["spdconf_w",3]]],[11,"nreply","","Bit 4 - No Reply",7,[[],["nreply_w",3]]],[11,"tstj","","Bit 5 - Test mode J",7,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",7,[[],["tstk_w",3]]],[11,"tstpckt","","Bit 7 - Test packet mode",7,[[],["tstpckt_w",3]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",7,[[],["opmode2_w",3]]],[11,"gnak","","Bit 9 - Global NAK",7,[[],["gnak_w",3]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",7,[[],["lpmhdsk_w",3]]],[11,"detach","atsamd11c::usb::device::ctrlb","Bit 0 - Detach",2109,[[],["detach_w",3]]],[11,"uprsm","","Bit 1 - Upstream Resume",2109,[[],["uprsm_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",2109,[[],["spdconf_w",3]]],[11,"nreply","","Bit 4 - No Reply",2109,[[],["nreply_w",3]]],[11,"tstj","","Bit 5 - Test mode J",2109,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",2109,[[],["tstk_w",3]]],[11,"tstpckt","","Bit 7 - Test packet mode",2109,[[],["tstpckt_w",3]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",2109,[[],["opmode2_w",3]]],[11,"gnak","","Bit 9 - Global NAK",2109,[[],["gnak_w",3]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",2109,[[],["lpmhdsk_w",3]]],[0,"dadd","atsamd11c::usb::device","DEVICE Device Address",null,null],[3,"DADD_W","atsamd11c::usb::device::dadd","Write proxy for field `DADD`",null,null],[3,"ADDEN_W","","Write proxy for field `ADDEN`",null,null],[6,"R","","Reader of register DADD",null,null],[6,"W","","Writer for register DADD",null,null],[6,"DADD_R","","Reader of field `DADD`",null,null],[6,"ADDEN_R","","Reader of field `ADDEN`",null,null],[11,"bits","","Writes raw bits to the field",2110,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2111,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2111,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2111,[[],["w",6]]],[11,"dadd","atsamd11c::generic","Bits 0:6 - Device Address",6,[[],["dadd_r",6]]],[11,"adden","","Bit 7 - Device Address Enable",6,[[],["adden_r",6]]],[11,"dadd","atsamd11c::usb::device::dadd","Bits 0:6 - Device Address",2112,[[],["dadd_r",6]]],[11,"adden","","Bit 7 - Device Address Enable",2112,[[],["adden_r",6]]],[11,"dadd","atsamd11c::generic","Bits 0:6 - Device Address",7,[[],["dadd_w",3]]],[11,"adden","","Bit 7 - Device Address Enable",7,[[],["adden_w",3]]],[11,"dadd","atsamd11c::usb::device::dadd","Bits 0:6 - Device Address",2113,[[],["dadd_w",3]]],[11,"adden","","Bit 7 - Device Address Enable",2113,[[],["adden_w",3]]],[0,"status","atsamd11c::usb::device","DEVICE Status",null,null],[4,"SPEED_A","atsamd11c::usb::device::status","Speed Status",null,null],[13,"FS","","0: Full-speed mode",2114,null],[13,"HS","","1: High-speed mode",2114,null],[13,"LS","","2: Low-speed mode",2114,null],[4,"LINESTATE_A","","USB Line State Status",null,null],[13,"_0","","0: SE0/RESET",2115,null],[13,"_1","","1: FS-J or LS-K State",2115,null],[13,"_2","","2: FS-K or LS-J State",2115,null],[6,"R","","Reader of register STATUS",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"LINESTATE_R","","Reader of field `LINESTATE`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["speed_a",4],["variant",4]]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",6,[[]]],[11,"variant","atsamd11c::usb::device::status","Get enumerated values variant",2116,[[],[["speed_a",4],["variant",4]]]],[11,"is_fs","","Checks if the value of the field is `FS`",2116,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",2116,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",2116,[[]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["linestate_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"variant","atsamd11c::usb::device::status","Get enumerated values variant",2117,[[],[["variant",4],["linestate_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",2117,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",2117,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",2117,[[]]],[11,"speed","atsamd11c::generic","Bits 2:3 - Speed Status",6,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",6,[[],["linestate_r",6]]],[11,"speed","atsamd11c::usb::device::status","Bits 2:3 - Speed Status",2118,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",2118,[[],["linestate_r",6]]],[0,"fsmstatus","atsamd11c::usb::device","Finite State Machine Status",null,null],[4,"FSMSTATE_A","atsamd11c::usb::device::fsmstatus","Fine State Machine Status",null,null],[13,"OFF","","1: OFF (L3). It corresponds to the powered-off,…",2119,null],[13,"ON","","2: ON (L0). It corresponds to the Idle and Active states",2119,null],[13,"SUSPEND","","4: SUSPEND (L2)",2119,null],[13,"SLEEP","","8: SLEEP (L1)",2119,null],[13,"DNRESUME","","16: DNRESUME. Down Stream Resume.",2119,null],[13,"UPRESUME","","32: UPRESUME. Up Stream Resume.",2119,null],[13,"RESET","","64: RESET. USB lines Reset.",2119,null],[6,"R","","Reader of register FSMSTATUS",null,null],[6,"FSMSTATE_R","","Reader of field `FSMSTATE`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["variant",4],["fsmstate_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",6,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",6,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd11c::usb::device::fsmstatus","Get enumerated values variant",2120,[[],[["variant",4],["fsmstate_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2120,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",2120,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",2120,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",2120,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",2120,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",2120,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",2120,[[]]],[11,"fsmstate","atsamd11c::generic","Bits 0:6 - Fine State Machine Status",6,[[],["fsmstate_r",6]]],[11,"fsmstate","atsamd11c::usb::device::fsmstatus","Bits 0:6 - Fine State Machine Status",2121,[[],["fsmstate_r",6]]],[0,"fnum","atsamd11c::usb::device","DEVICE Device Frame Number",null,null],[6,"R","atsamd11c::usb::device::fnum","Reader of register FNUM",null,null],[6,"MFNUM_R","","Reader of field `MFNUM`",null,null],[6,"FNUM_R","","Reader of field `FNUM`",null,null],[6,"FNCERR_R","","Reader of field `FNCERR`",null,null],[11,"mfnum","atsamd11c::generic","Bits 0:2 - Micro Frame Number",6,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",6,[[],["fnum_r",6]]],[11,"fncerr","","Bit 15 - Frame Number CRC Error",6,[[],["fncerr_r",6]]],[11,"mfnum","atsamd11c::usb::device::fnum","Bits 0:2 - Micro Frame Number",2122,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",2122,[[],["fnum_r",6]]],[11,"fncerr","","Bit 15 - Frame Number CRC Error",2122,[[],["fncerr_r",6]]],[0,"intenclr","atsamd11c::usb::device","DEVICE Device Interrupt Enable Clear",null,null],[3,"SUSPEND_W","atsamd11c::usb::device::intenclr","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",2123,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2123,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2123,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2124,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2124,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2124,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2126,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2127,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2127,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2127,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2128,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2128,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2128,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2129,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2129,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2129,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2130,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2130,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2130,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2131,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2131,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2131,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2132,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2132,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2132,[[],["w",6]]],[11,"suspend","atsamd11c::generic","Bit 0 - Suspend Interrupt Enable",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd11c::usb::device::intenclr","Bit 0 - Suspend Interrupt Enable",2133,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2133,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2133,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2133,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2133,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2133,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2133,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2133,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2133,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2133,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd11c::generic","Bit 0 - Suspend Interrupt Enable",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd11c::usb::device::intenclr","Bit 0 - Suspend Interrupt Enable",2134,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2134,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2134,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2134,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2134,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2134,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2134,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2134,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2134,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2134,[[],["lpmsusp_w",3]]],[0,"intenset","atsamd11c::usb::device","DEVICE Device Interrupt Enable Set",null,null],[3,"SUSPEND_W","atsamd11c::usb::device::intenset","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",2135,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2135,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2135,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2136,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2136,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2136,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2138,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2139,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2139,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2139,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2140,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2140,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2140,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2141,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2142,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2142,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2142,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2143,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2143,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2144,[[],["w",6]]],[11,"suspend","atsamd11c::generic","Bit 0 - Suspend Interrupt Enable",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd11c::usb::device::intenset","Bit 0 - Suspend Interrupt Enable",2145,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2145,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2145,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2145,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2145,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2145,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2145,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2145,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2145,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2145,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd11c::generic","Bit 0 - Suspend Interrupt Enable",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd11c::usb::device::intenset","Bit 0 - Suspend Interrupt Enable",2146,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",2146,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",2146,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",2146,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",2146,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",2146,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",2146,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",2146,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",2146,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",2146,[[],["lpmsusp_w",3]]],[0,"intflag","atsamd11c::usb::device","DEVICE Device Interrupt Flag",null,null],[3,"SUSPEND_W","atsamd11c::usb::device::intflag","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",2147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2149,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2150,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2150,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2150,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2151,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2151,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2151,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2152,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2152,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2152,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2156,[[],["w",6]]],[11,"suspend","atsamd11c::generic","Bit 0 - Suspend",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd11c::usb::device::intflag","Bit 0 - Suspend",2157,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",2157,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame",2157,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset",2157,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",2157,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume",2157,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume",2157,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",2157,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",2157,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",2157,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd11c::generic","Bit 0 - Suspend",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd11c::usb::device::intflag","Bit 0 - Suspend",2158,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",2158,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame",2158,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset",2158,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",2158,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume",2158,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume",2158,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",2158,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",2158,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",2158,[[],["lpmsusp_w",3]]],[0,"epintsmry","atsamd11c::usb::device","DEVICE End Point Interrupt Summary",null,null],[6,"R","atsamd11c::usb::device::epintsmry","Reader of register EPINTSMRY",null,null],[6,"EPINT0_R","","Reader of field `EPINT0`",null,null],[6,"EPINT1_R","","Reader of field `EPINT1`",null,null],[6,"EPINT2_R","","Reader of field `EPINT2`",null,null],[6,"EPINT3_R","","Reader of field `EPINT3`",null,null],[6,"EPINT4_R","","Reader of field `EPINT4`",null,null],[6,"EPINT5_R","","Reader of field `EPINT5`",null,null],[6,"EPINT6_R","","Reader of field `EPINT6`",null,null],[6,"EPINT7_R","","Reader of field `EPINT7`",null,null],[11,"epint0","atsamd11c::generic","Bit 0 - End Point 0 Interrupt",6,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - End Point 1 Interrupt",6,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - End Point 2 Interrupt",6,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - End Point 3 Interrupt",6,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - End Point 4 Interrupt",6,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - End Point 5 Interrupt",6,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - End Point 6 Interrupt",6,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - End Point 7 Interrupt",6,[[],["epint7_r",6]]],[11,"epint0","atsamd11c::usb::device::epintsmry","Bit 0 - End Point 0 Interrupt",2159,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - End Point 1 Interrupt",2159,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - End Point 2 Interrupt",2159,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - End Point 3 Interrupt",2159,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - End Point 4 Interrupt",2159,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - End Point 5 Interrupt",2159,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - End Point 6 Interrupt",2159,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - End Point 7 Interrupt",2159,[[],["epint7_r",6]]],[0,"descadd","atsamd11c::usb::device","Descriptor Address",null,null],[3,"DESCADD_W","atsamd11c::usb::device::descadd","Write proxy for field `DESCADD`",null,null],[6,"R","","Reader of register DESCADD",null,null],[6,"W","","Writer for register DESCADD",null,null],[6,"DESCADD_R","","Reader of field `DESCADD`",null,null],[11,"bits","","Writes raw bits to the field",2160,[[],["w",6]]],[11,"descadd","atsamd11c::generic","Bits 0:31 - Descriptor Address Value",6,[[],["descadd_r",6]]],[11,"descadd","atsamd11c::usb::device::descadd","Bits 0:31 - Descriptor Address Value",2161,[[],["descadd_r",6]]],[11,"descadd","atsamd11c::generic","Bits 0:31 - Descriptor Address Value",7,[[],["descadd_w",3]]],[11,"descadd","atsamd11c::usb::device::descadd","Bits 0:31 - Descriptor Address Value",2162,[[],["descadd_w",3]]],[0,"padcal","atsamd11c::usb::device","USB PAD Calibration",null,null],[3,"TRANSP_W","atsamd11c::usb::device::padcal","Write proxy for field `TRANSP`",null,null],[3,"TRANSN_W","","Write proxy for field `TRANSN`",null,null],[3,"TRIM_W","","Write proxy for field `TRIM`",null,null],[6,"R","","Reader of register PADCAL",null,null],[6,"W","","Writer for register PADCAL",null,null],[6,"TRANSP_R","","Reader of field `TRANSP`",null,null],[6,"TRANSN_R","","Reader of field `TRANSN`",null,null],[6,"TRIM_R","","Reader of field `TRIM`",null,null],[11,"bits","","Writes raw bits to the field",2163,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2164,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2165,[[],["w",6]]],[11,"transp","atsamd11c::generic","Bits 0:4 - USB Pad Transp calibration",6,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",6,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",6,[[],["trim_r",6]]],[11,"transp","atsamd11c::usb::device::padcal","Bits 0:4 - USB Pad Transp calibration",2166,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",2166,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",2166,[[],["trim_r",6]]],[11,"transp","atsamd11c::generic","Bits 0:4 - USB Pad Transp calibration",7,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",7,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",7,[[],["trim_w",3]]],[11,"transp","atsamd11c::usb::device::padcal","Bits 0:4 - USB Pad Transp calibration",2167,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",2167,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",2167,[[],["trim_w",3]]],[0,"epcfg","atsamd11c::usb::device","DEVICE End Point Configuration",null,null],[3,"EPTYPE0_W","atsamd11c::usb::device::epcfg","Write proxy for field `EPTYPE0`",null,null],[3,"EPTYPE1_W","","Write proxy for field `EPTYPE1`",null,null],[3,"NYETDIS_W","","Write proxy for field `NYETDIS`",null,null],[6,"R","","Reader of register EPCFG%s",null,null],[6,"W","","Writer for register EPCFG%s",null,null],[6,"EPTYPE0_R","","Reader of field `EPTYPE0`",null,null],[6,"EPTYPE1_R","","Reader of field `EPTYPE1`",null,null],[6,"NYETDIS_R","","Reader of field `NYETDIS`",null,null],[11,"bits","","Writes raw bits to the field",2168,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2169,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2170,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2170,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2170,[[],["w",6]]],[11,"eptype0","atsamd11c::generic","Bits 0:2 - End Point Type0",6,[[],["eptype0_r",6]]],[11,"eptype1","","Bits 4:6 - End Point Type1",6,[[],["eptype1_r",6]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",6,[[],["nyetdis_r",6]]],[11,"eptype0","atsamd11c::usb::device::epcfg","Bits 0:2 - End Point Type0",2171,[[],["eptype0_r",6]]],[11,"eptype1","","Bits 4:6 - End Point Type1",2171,[[],["eptype1_r",6]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",2171,[[],["nyetdis_r",6]]],[11,"eptype0","atsamd11c::generic","Bits 0:2 - End Point Type0",7,[[],["eptype0_w",3]]],[11,"eptype1","","Bits 4:6 - End Point Type1",7,[[],["eptype1_w",3]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",7,[[],["nyetdis_w",3]]],[11,"eptype0","atsamd11c::usb::device::epcfg","Bits 0:2 - End Point Type0",2172,[[],["eptype0_w",3]]],[11,"eptype1","","Bits 4:6 - End Point Type1",2172,[[],["eptype1_w",3]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",2172,[[],["nyetdis_w",3]]],[0,"epstatusclr","atsamd11c::usb::device","DEVICE End Point Pipe Status Clear",null,null],[3,"DTGLOUT_W","atsamd11c::usb::device::epstatusclr","Write proxy for field `DTGLOUT`",null,null],[3,"DTGLIN_W","","Write proxy for field `DTGLIN`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"STALLRQ0_W","","Write proxy for field `STALLRQ0`",null,null],[3,"STALLRQ1_W","","Write proxy for field `STALLRQ1`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register EPSTATUSCLR%s",null,null],[11,"set_bit","","Sets the field bit",2173,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2173,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2173,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2174,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2174,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2174,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2175,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2175,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2175,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2176,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2176,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2176,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2177,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2177,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2177,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2178,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2178,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2178,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2179,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2179,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2179,[[],["w",6]]],[11,"dtglout","atsamd11c::generic","Bit 0 - Data Toggle OUT Clear",7,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Clear",7,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Clear",7,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Clear",7,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Clear",7,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",7,[[],["bk1rdy_w",3]]],[11,"dtglout","atsamd11c::usb::device::epstatusclr","Bit 0 - Data Toggle OUT Clear",2180,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Clear",2180,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Clear",2180,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Clear",2180,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Clear",2180,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",2180,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",2180,[[],["bk1rdy_w",3]]],[0,"epstatusset","atsamd11c::usb::device","DEVICE End Point Pipe Status Set",null,null],[3,"DTGLOUT_W","atsamd11c::usb::device::epstatusset","Write proxy for field `DTGLOUT`",null,null],[3,"DTGLIN_W","","Write proxy for field `DTGLIN`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"STALLRQ0_W","","Write proxy for field `STALLRQ0`",null,null],[3,"STALLRQ1_W","","Write proxy for field `STALLRQ1`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register EPSTATUSSET%s",null,null],[11,"set_bit","","Sets the field bit",2181,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2181,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2183,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2184,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2184,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2184,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2185,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2185,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2185,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2186,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2186,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2186,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2187,[[],["w",6]]],[11,"dtglout","atsamd11c::generic","Bit 0 - Data Toggle OUT Set",7,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Set",7,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",7,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Set",7,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Set",7,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",7,[[],["bk1rdy_w",3]]],[11,"dtglout","atsamd11c::usb::device::epstatusset","Bit 0 - Data Toggle OUT Set",2188,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Set",2188,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",2188,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Set",2188,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Set",2188,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",2188,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",2188,[[],["bk1rdy_w",3]]],[0,"epstatus","atsamd11c::usb::device","DEVICE End Point Pipe Status",null,null],[6,"R","atsamd11c::usb::device::epstatus","Reader of register EPSTATUS%s",null,null],[6,"DTGLOUT_R","","Reader of field `DTGLOUT`",null,null],[6,"DTGLIN_R","","Reader of field `DTGLIN`",null,null],[6,"CURBK_R","","Reader of field `CURBK`",null,null],[6,"STALLRQ0_R","","Reader of field `STALLRQ0`",null,null],[6,"STALLRQ1_R","","Reader of field `STALLRQ1`",null,null],[6,"BK0RDY_R","","Reader of field `BK0RDY`",null,null],[6,"BK1RDY_R","","Reader of field `BK1RDY`",null,null],[11,"dtglout","atsamd11c::generic","Bit 0 - Data Toggle Out",6,[[],["dtglout_r",6]]],[11,"dtglin","","Bit 1 - Data Toggle In",6,[[],["dtglin_r",6]]],[11,"curbk","","Bit 2 - Current Bank",6,[[],["curbk_r",6]]],[11,"stallrq0","","Bit 4 - Stall 0 Request",6,[[],["stallrq0_r",6]]],[11,"stallrq1","","Bit 5 - Stall 1 Request",6,[[],["stallrq1_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",6,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",6,[[],["bk1rdy_r",6]]],[11,"dtglout","atsamd11c::usb::device::epstatus","Bit 0 - Data Toggle Out",2189,[[],["dtglout_r",6]]],[11,"dtglin","","Bit 1 - Data Toggle In",2189,[[],["dtglin_r",6]]],[11,"curbk","","Bit 2 - Current Bank",2189,[[],["curbk_r",6]]],[11,"stallrq0","","Bit 4 - Stall 0 Request",2189,[[],["stallrq0_r",6]]],[11,"stallrq1","","Bit 5 - Stall 1 Request",2189,[[],["stallrq1_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",2189,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",2189,[[],["bk1rdy_r",6]]],[0,"epintflag","atsamd11c::usb::device","DEVICE End Point Interrupt Flag",null,null],[3,"TRCPT0_W","atsamd11c::usb::device::epintflag","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTFLAG%s",null,null],[6,"W","","Writer for register EPINTFLAG%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",2190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2191,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2192,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2192,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2192,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2193,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2193,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2193,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2194,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2194,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2194,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2195,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2195,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2195,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2196,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2196,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2196,[[],["w",6]]],[11,"trcpt0","atsamd11c::generic","Bit 0 - Transfer Complete 0",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd11c::usb::device::epintflag","Bit 0 - Transfer Complete 0",2197,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",2197,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0",2197,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1",2197,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup",2197,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out",2197,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out",2197,[[],["stall1_r",6]]],[11,"trcpt0","atsamd11c::generic","Bit 0 - Transfer Complete 0",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd11c::usb::device::epintflag","Bit 0 - Transfer Complete 0",2198,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",2198,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0",2198,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1",2198,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup",2198,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out",2198,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out",2198,[[],["stall1_w",3]]],[0,"epintenclr","atsamd11c::usb::device","DEVICE End Point Interrupt Clear Flag",null,null],[3,"TRCPT0_W","atsamd11c::usb::device::epintenclr","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTENCLR%s",null,null],[6,"W","","Writer for register EPINTENCLR%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",2199,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2199,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2199,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2200,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2200,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2200,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2202,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2203,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2203,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2203,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2204,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2204,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2204,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2205,[[],["w",6]]],[11,"trcpt0","atsamd11c::generic","Bit 0 - Transfer Complete 0 Interrupt Disable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd11c::usb::device::epintenclr","Bit 0 - Transfer Complete 0 Interrupt Disable",2206,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",2206,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",2206,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",2206,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",2206,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",2206,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",2206,[[],["stall1_r",6]]],[11,"trcpt0","atsamd11c::generic","Bit 0 - Transfer Complete 0 Interrupt Disable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd11c::usb::device::epintenclr","Bit 0 - Transfer Complete 0 Interrupt Disable",2207,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",2207,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",2207,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",2207,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",2207,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",2207,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",2207,[[],["stall1_w",3]]],[0,"epintenset","atsamd11c::usb::device","DEVICE End Point Interrupt Set Flag",null,null],[3,"TRCPT0_W","atsamd11c::usb::device::epintenset","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTENSET%s",null,null],[6,"W","","Writer for register EPINTENSET%s",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",2208,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2208,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2208,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2209,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2209,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2209,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2210,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2210,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2211,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2212,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2212,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2212,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2213,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2213,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2213,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2214,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2214,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2214,[[],["w",6]]],[11,"trcpt0","atsamd11c::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd11c::usb::device::epintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",2215,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",2215,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",2215,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",2215,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",2215,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",2215,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",2215,[[],["stall1_r",6]]],[11,"trcpt0","atsamd11c::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd11c::usb::device::epintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",2216,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",2216,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",2216,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",2216,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",2216,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",2216,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",2216,[[],["stall1_w",3]]],[6,"CTRLA","atsamd11c::usb::device","Control A",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"QOSCTRL","","USB Quality Of Service",null,null],[6,"CTRLB","","DEVICE Control B",null,null],[6,"DADD","","DEVICE Device Address",null,null],[6,"STATUS","","DEVICE Status",null,null],[6,"FSMSTATUS","","Finite State Machine Status",null,null],[6,"FNUM","","DEVICE Device Frame Number",null,null],[6,"INTENCLR","","DEVICE Device Interrupt Enable Clear",null,null],[6,"INTENSET","","DEVICE Device Interrupt Enable Set",null,null],[6,"INTFLAG","","DEVICE Device Interrupt Flag",null,null],[6,"EPINTSMRY","","DEVICE End Point Interrupt Summary",null,null],[6,"DESCADD","","Descriptor Address",null,null],[6,"PADCAL","","USB PAD Calibration",null,null],[6,"EPCFG","","DEVICE End Point Configuration",null,null],[6,"EPSTATUSCLR","","DEVICE End Point Pipe Status Clear",null,null],[6,"EPSTATUSSET","","DEVICE End Point Pipe Status Set",null,null],[6,"EPSTATUS","","DEVICE End Point Pipe Status",null,null],[6,"EPINTFLAG","","DEVICE End Point Interrupt Flag",null,null],[6,"EPINTENCLR","","DEVICE End Point Interrupt Clear Flag",null,null],[6,"EPINTENSET","","DEVICE End Point Interrupt Set Flag",null,null],[0,"wdt","atsamd11c","Watchdog Timer",null,null],[3,"RegisterBlock","atsamd11c::wdt","Register block",null,null],[12,"ctrl","","0x00 - Control",2217,null],[12,"config","","0x01 - Configuration",2217,null],[12,"ewctrl","","0x02 - Early Warning Interrupt Control",2217,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",2217,null],[12,"intenset","","0x05 - Interrupt Enable Set",2217,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",2217,null],[12,"status","","0x07 - Status",2217,null],[12,"clear","","0x08 - Clear",2217,null],[0,"ctrl","","Control",null,null],[3,"ENABLE_W","atsamd11c::wdt::ctrl","Write proxy for field `ENABLE`",null,null],[3,"WEN_W","","Write proxy for field `WEN`",null,null],[3,"ALWAYSON_W","","Write proxy for field `ALWAYSON`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"WEN_R","","Reader of field `WEN`",null,null],[6,"ALWAYSON_R","","Reader of field `ALWAYSON`",null,null],[11,"set_bit","","Sets the field bit",2218,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2218,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2218,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2219,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2219,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2219,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2220,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2220,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2220,[[],["w",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",6,[[],["wen_r",6]]],[11,"alwayson","","Bit 7 - Always-On",6,[[],["alwayson_r",6]]],[11,"enable","atsamd11c::wdt::ctrl","Bit 1 - Enable",2221,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",2221,[[],["wen_r",6]]],[11,"alwayson","","Bit 7 - Always-On",2221,[[],["alwayson_r",6]]],[11,"enable","atsamd11c::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",7,[[],["wen_w",3]]],[11,"alwayson","","Bit 7 - Always-On",7,[[],["alwayson_w",3]]],[11,"enable","atsamd11c::wdt::ctrl","Bit 1 - Enable",2222,[[],["enable_w",3]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",2222,[[],["wen_w",3]]],[11,"alwayson","","Bit 7 - Always-On",2222,[[],["alwayson_w",3]]],[0,"config","atsamd11c::wdt","Configuration",null,null],[3,"PER_W","atsamd11c::wdt::config","Write proxy for field `PER`",null,null],[3,"WINDOW_W","","Write proxy for field `WINDOW`",null,null],[4,"PER_A","","Time-Out Period",null,null],[13,"_8","","0: 8 clock cycles",2223,null],[13,"_16","","1: 16 clock cycles",2223,null],[13,"_32","","2: 32 clock cycles",2223,null],[13,"_64","","3: 64 clock cycles",2223,null],[13,"_128","","4: 128 clock cycles",2223,null],[13,"_256","","5: 256 clock cycles",2223,null],[13,"_512","","6: 512 clock cycles",2223,null],[13,"_1K","","7: 1024 clock cycles",2223,null],[13,"_2K","","8: 2048 clock cycles",2223,null],[13,"_4K","","9: 4096 clock cycles",2223,null],[13,"_8K","","10: 8192 clock cycles",2223,null],[13,"_16K","","11: 16384 clock cycles",2223,null],[4,"WINDOW_A","","Window Mode Time-Out Period",null,null],[13,"_8","","0: 8 clock cycles",2224,null],[13,"_16","","1: 16 clock cycles",2224,null],[13,"_32","","2: 32 clock cycles",2224,null],[13,"_64","","3: 64 clock cycles",2224,null],[13,"_128","","4: 128 clock cycles",2224,null],[13,"_256","","5: 256 clock cycles",2224,null],[13,"_512","","6: 512 clock cycles",2224,null],[13,"_1K","","7: 1024 clock cycles",2224,null],[13,"_2K","","8: 2048 clock cycles",2224,null],[13,"_4K","","9: 4096 clock cycles",2224,null],[13,"_8K","","10: 8192 clock cycles",2224,null],[13,"_16K","","11: 16384 clock cycles",2224,null],[6,"R","","Reader of register CONFIG",null,null],[6,"W","","Writer for register CONFIG",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"WINDOW_R","","Reader of field `WINDOW`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["per_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",6,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",6,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"variant","atsamd11c::wdt::config","Get enumerated values variant",2225,[[],[["per_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",2225,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",2225,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",2225,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",2225,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",2225,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",2225,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",2225,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",2225,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",2225,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2225,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2225,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2225,[[]]],[11,"variant","","Writes `variant` to the field",2226,[[["per_a",4]],["w",6]]],[11,"_8","","8 clock cycles",2226,[[],["w",6]]],[11,"_16","","16 clock cycles",2226,[[],["w",6]]],[11,"_32","","32 clock cycles",2226,[[],["w",6]]],[11,"_64","","64 clock cycles",2226,[[],["w",6]]],[11,"_128","","128 clock cycles",2226,[[],["w",6]]],[11,"_256","","256 clock cycles",2226,[[],["w",6]]],[11,"_512","","512 clock cycles",2226,[[],["w",6]]],[11,"_1k","","1024 clock cycles",2226,[[],["w",6]]],[11,"_2k","","2048 clock cycles",2226,[[],["w",6]]],[11,"_4k","","4096 clock cycles",2226,[[],["w",6]]],[11,"_8k","","8192 clock cycles",2226,[[],["w",6]]],[11,"_16k","","16384 clock cycles",2226,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2226,[[],["w",6]]],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["window_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",6,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",6,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"variant","atsamd11c::wdt::config","Get enumerated values variant",2227,[[],[["window_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",2227,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",2227,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",2227,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",2227,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",2227,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",2227,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",2227,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",2227,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",2227,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2227,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2227,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2227,[[]]],[11,"variant","","Writes `variant` to the field",2228,[[["window_a",4]],["w",6]]],[11,"_8","","8 clock cycles",2228,[[],["w",6]]],[11,"_16","","16 clock cycles",2228,[[],["w",6]]],[11,"_32","","32 clock cycles",2228,[[],["w",6]]],[11,"_64","","64 clock cycles",2228,[[],["w",6]]],[11,"_128","","128 clock cycles",2228,[[],["w",6]]],[11,"_256","","256 clock cycles",2228,[[],["w",6]]],[11,"_512","","512 clock cycles",2228,[[],["w",6]]],[11,"_1k","","1024 clock cycles",2228,[[],["w",6]]],[11,"_2k","","2048 clock cycles",2228,[[],["w",6]]],[11,"_4k","","4096 clock cycles",2228,[[],["w",6]]],[11,"_8k","","8192 clock cycles",2228,[[],["w",6]]],[11,"_16k","","16384 clock cycles",2228,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2228,[[],["w",6]]],[11,"per","atsamd11c::generic","Bits 0:3 - Time-Out Period",6,[[],["per_r",6]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",6,[[],["window_r",6]]],[11,"per","atsamd11c::wdt::config","Bits 0:3 - Time-Out Period",2229,[[],["per_r",6]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",2229,[[],["window_r",6]]],[11,"per","atsamd11c::generic","Bits 0:3 - Time-Out Period",7,[[],["per_w",3]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",7,[[],["window_w",3]]],[11,"per","atsamd11c::wdt::config","Bits 0:3 - Time-Out Period",2230,[[],["per_w",3]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",2230,[[],["window_w",3]]],[0,"ewctrl","atsamd11c::wdt","Early Warning Interrupt Control",null,null],[3,"EWOFFSET_W","atsamd11c::wdt::ewctrl","Write proxy for field `EWOFFSET`",null,null],[4,"EWOFFSET_A","","Early Warning Interrupt Time Offset",null,null],[13,"_8","","0: 8 clock cycles",2231,null],[13,"_16","","1: 16 clock cycles",2231,null],[13,"_32","","2: 32 clock cycles",2231,null],[13,"_64","","3: 64 clock cycles",2231,null],[13,"_128","","4: 128 clock cycles",2231,null],[13,"_256","","5: 256 clock cycles",2231,null],[13,"_512","","6: 512 clock cycles",2231,null],[13,"_1K","","7: 1024 clock cycles",2231,null],[13,"_2K","","8: 2048 clock cycles",2231,null],[13,"_4K","","9: 4096 clock cycles",2231,null],[13,"_8K","","10: 8192 clock cycles",2231,null],[13,"_16K","","11: 16384 clock cycles",2231,null],[6,"R","","Reader of register EWCTRL",null,null],[6,"W","","Writer for register EWCTRL",null,null],[6,"EWOFFSET_R","","Reader of field `EWOFFSET`",null,null],[11,"variant","atsamd11c::generic","Get enumerated values variant",6,[[],[["ewoffset_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",6,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",6,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"variant","atsamd11c::wdt::ewctrl","Get enumerated values variant",2232,[[],[["ewoffset_a",4],["variant",4]]]],[11,"is_8","","Checks if the value of the field is `_8`",2232,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",2232,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",2232,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",2232,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",2232,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",2232,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",2232,[[]]],[11,"is_1k","","Checks if the value of the field is `_1K`",2232,[[]]],[11,"is_2k","","Checks if the value of the field is `_2K`",2232,[[]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2232,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2232,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2232,[[]]],[11,"variant","","Writes `variant` to the field",2233,[[["ewoffset_a",4]],["w",6]]],[11,"_8","","8 clock cycles",2233,[[],["w",6]]],[11,"_16","","16 clock cycles",2233,[[],["w",6]]],[11,"_32","","32 clock cycles",2233,[[],["w",6]]],[11,"_64","","64 clock cycles",2233,[[],["w",6]]],[11,"_128","","128 clock cycles",2233,[[],["w",6]]],[11,"_256","","256 clock cycles",2233,[[],["w",6]]],[11,"_512","","512 clock cycles",2233,[[],["w",6]]],[11,"_1k","","1024 clock cycles",2233,[[],["w",6]]],[11,"_2k","","2048 clock cycles",2233,[[],["w",6]]],[11,"_4k","","4096 clock cycles",2233,[[],["w",6]]],[11,"_8k","","8192 clock cycles",2233,[[],["w",6]]],[11,"_16k","","16384 clock cycles",2233,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2233,[[],["w",6]]],[11,"ewoffset","atsamd11c::generic","Bits 0:3 - Early Warning Interrupt Time Offset",6,[[],["ewoffset_r",6]]],[11,"ewoffset","atsamd11c::wdt::ewctrl","Bits 0:3 - Early Warning Interrupt Time Offset",2234,[[],["ewoffset_r",6]]],[11,"ewoffset","atsamd11c::generic","Bits 0:3 - Early Warning Interrupt Time Offset",7,[[],["ewoffset_w",3]]],[11,"ewoffset","atsamd11c::wdt::ewctrl","Bits 0:3 - Early Warning Interrupt Time Offset",2235,[[],["ewoffset_w",3]]],[0,"intenclr","atsamd11c::wdt","Interrupt Enable Clear",null,null],[3,"EW_W","atsamd11c::wdt::intenclr","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",2236,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2236,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2236,[[],["w",6]]],[11,"ew","atsamd11c::generic","Bit 0 - Early Warning Interrupt Enable",6,[[],["ew_r",6]]],[11,"ew","atsamd11c::wdt::intenclr","Bit 0 - Early Warning Interrupt Enable",2237,[[],["ew_r",6]]],[11,"ew","atsamd11c::generic","Bit 0 - Early Warning Interrupt Enable",7,[[],["ew_w",3]]],[11,"ew","atsamd11c::wdt::intenclr","Bit 0 - Early Warning Interrupt Enable",2238,[[],["ew_w",3]]],[0,"intenset","atsamd11c::wdt","Interrupt Enable Set",null,null],[3,"EW_W","atsamd11c::wdt::intenset","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",2239,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2239,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2239,[[],["w",6]]],[11,"ew","atsamd11c::generic","Bit 0 - Early Warning Interrupt Enable",6,[[],["ew_r",6]]],[11,"ew","atsamd11c::wdt::intenset","Bit 0 - Early Warning Interrupt Enable",2240,[[],["ew_r",6]]],[11,"ew","atsamd11c::generic","Bit 0 - Early Warning Interrupt Enable",7,[[],["ew_w",3]]],[11,"ew","atsamd11c::wdt::intenset","Bit 0 - Early Warning Interrupt Enable",2241,[[],["ew_w",3]]],[0,"intflag","atsamd11c::wdt","Interrupt Flag Status and Clear",null,null],[3,"EW_W","atsamd11c::wdt::intflag","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",2242,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2242,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2242,[[],["w",6]]],[11,"ew","atsamd11c::generic","Bit 0 - Early Warning",6,[[],["ew_r",6]]],[11,"ew","atsamd11c::wdt::intflag","Bit 0 - Early Warning",2243,[[],["ew_r",6]]],[11,"ew","atsamd11c::generic","Bit 0 - Early Warning",7,[[],["ew_w",3]]],[11,"ew","atsamd11c::wdt::intflag","Bit 0 - Early Warning",2244,[[],["ew_w",3]]],[0,"status","atsamd11c::wdt","Status",null,null],[6,"R","atsamd11c::wdt::status","Reader of register STATUS",null,null],[6,"SYNCBUSY_R","","Reader of field `SYNCBUSY`",null,null],[11,"syncbusy","atsamd11c::generic","Bit 7 - Synchronization Busy",6,[[],["syncbusy_r",6]]],[11,"syncbusy","atsamd11c::wdt::status","Bit 7 - Synchronization Busy",2245,[[],["syncbusy_r",6]]],[0,"clear","atsamd11c::wdt","Clear",null,null],[3,"CLEAR_W","atsamd11c::wdt::clear","Write proxy for field `CLEAR`",null,null],[4,"CLEAR_AW","","Watchdog Clear",null,null],[13,"KEY","","165: Clear Key",2246,null],[6,"W","","Writer for register CLEAR",null,null],[11,"variant","","Writes `variant` to the field",2247,[[["clear_aw",4]],["w",6]]],[11,"key","","Clear Key",2247,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2247,[[],["w",6]]],[11,"clear","atsamd11c::generic","Bits 0:7 - Watchdog Clear",7,[[],["clear_w",3]]],[11,"clear","atsamd11c::wdt::clear","Bits 0:7 - Watchdog Clear",2248,[[],["clear_w",3]]],[6,"CTRL","atsamd11c::wdt","Control",null,null],[6,"CONFIG","","Configuration",null,null],[6,"EWCTRL","","Early Warning Interrupt Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"CLEAR","","Clear",null,null],[17,"NVIC_PRIO_BITS","atsamd11c","Number available in the NVIC for configuring priority",null,null],[11,"ptr","","Returns a pointer to the register block",2249,[[]]],[11,"ptr","","Returns a pointer to the register block",2250,[[]]],[11,"ptr","","Returns a pointer to the register block",2251,[[]]],[11,"ptr","","Returns a pointer to the register block",2252,[[]]],[11,"ptr","","Returns a pointer to the register block",2253,[[]]],[11,"ptr","","Returns a pointer to the register block",2254,[[]]],[11,"ptr","","Returns a pointer to the register block",2255,[[]]],[11,"ptr","","Returns a pointer to the register block",2256,[[]]],[11,"ptr","","Returns a pointer to the register block",2257,[[]]],[11,"ptr","","Returns a pointer to the register block",2258,[[]]],[11,"ptr","","Returns a pointer to the register block",2259,[[]]],[11,"ptr","","Returns a pointer to the register block",2260,[[]]],[11,"ptr","","Returns a pointer to the register block",2261,[[]]],[11,"ptr","","Returns a pointer to the register block",2262,[[]]],[11,"ptr","","Returns a pointer to the register block",2263,[[]]],[11,"ptr","","Returns a pointer to the register block",2264,[[]]],[11,"ptr","","Returns a pointer to the register block",2265,[[]]],[11,"ptr","","Returns a pointer to the register block",2266,[[]]],[11,"ptr","","Returns a pointer to the register block",2267,[[]]],[11,"ptr","","Returns a pointer to the register block",2268,[[]]],[11,"ptr","","Returns a pointer to the register block",2269,[[]]],[11,"ptr","","Returns a pointer to the register block",2270,[[]]],[11,"ptr","","Returns a pointer to the register block",2271,[[]]],[11,"ptr","","Returns a pointer to the register block",2272,[[]]],[11,"ptr","","Returns a pointer to the register block",2273,[[]]],[11,"ptr","","Returns a pointer to the register block",2274,[[]]],[11,"take","","Returns all the peripherals once",1,[[],["option",4]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2275,[[]]],[11,"borrow","","",2275,[[]]],[11,"borrow_mut","","",2275,[[]]],[11,"try_from","","",2275,[[],["result",4]]],[11,"into","","",2275,[[]]],[11,"try_into","","",2275,[[],["result",4]]],[11,"type_id","","",2275,[[],["typeid",3]]],[11,"from","","",2276,[[]]],[11,"borrow","","",2276,[[]]],[11,"borrow_mut","","",2276,[[]]],[11,"try_from","","",2276,[[],["result",4]]],[11,"into","","",2276,[[]]],[11,"try_into","","",2276,[[],["result",4]]],[11,"type_id","","",2276,[[],["typeid",3]]],[11,"from","","",2277,[[]]],[11,"borrow","","",2277,[[]]],[11,"borrow_mut","","",2277,[[]]],[11,"try_from","","",2277,[[],["result",4]]],[11,"into","","",2277,[[]]],[11,"try_into","","",2277,[[],["result",4]]],[11,"type_id","","",2277,[[],["typeid",3]]],[11,"from","","",2278,[[]]],[11,"borrow","","",2278,[[]]],[11,"borrow_mut","","",2278,[[]]],[11,"try_from","","",2278,[[],["result",4]]],[11,"into","","",2278,[[]]],[11,"try_into","","",2278,[[],["result",4]]],[11,"type_id","","",2278,[[],["typeid",3]]],[11,"from","","",2279,[[]]],[11,"borrow","","",2279,[[]]],[11,"borrow_mut","","",2279,[[]]],[11,"try_from","","",2279,[[],["result",4]]],[11,"into","","",2279,[[]]],[11,"try_into","","",2279,[[],["result",4]]],[11,"type_id","","",2279,[[],["typeid",3]]],[11,"from","","",2280,[[]]],[11,"borrow","","",2280,[[]]],[11,"borrow_mut","","",2280,[[]]],[11,"try_from","","",2280,[[],["result",4]]],[11,"into","","",2280,[[]]],[11,"try_into","","",2280,[[],["result",4]]],[11,"type_id","","",2280,[[],["typeid",3]]],[11,"from","","",2281,[[]]],[11,"borrow","","",2281,[[]]],[11,"borrow_mut","","",2281,[[]]],[11,"try_from","","",2281,[[],["result",4]]],[11,"into","","",2281,[[]]],[11,"try_into","","",2281,[[],["result",4]]],[11,"type_id","","",2281,[[],["typeid",3]]],[11,"from","","",2282,[[]]],[11,"borrow","","",2282,[[]]],[11,"borrow_mut","","",2282,[[]]],[11,"try_from","","",2282,[[],["result",4]]],[11,"into","","",2282,[[]]],[11,"try_into","","",2282,[[],["result",4]]],[11,"type_id","","",2282,[[],["typeid",3]]],[11,"from","","",2283,[[]]],[11,"borrow","","",2283,[[]]],[11,"borrow_mut","","",2283,[[]]],[11,"try_from","","",2283,[[],["result",4]]],[11,"into","","",2283,[[]]],[11,"try_into","","",2283,[[],["result",4]]],[11,"type_id","","",2283,[[],["typeid",3]]],[11,"from","","",2284,[[]]],[11,"borrow","","",2284,[[]]],[11,"borrow_mut","","",2284,[[]]],[11,"try_from","","",2284,[[],["result",4]]],[11,"into","","",2284,[[]]],[11,"try_into","","",2284,[[],["result",4]]],[11,"type_id","","",2284,[[],["typeid",3]]],[11,"from","","",2285,[[]]],[11,"borrow","","",2285,[[]]],[11,"borrow_mut","","",2285,[[]]],[11,"try_from","","",2285,[[],["result",4]]],[11,"into","","",2285,[[]]],[11,"try_into","","",2285,[[],["result",4]]],[11,"type_id","","",2285,[[],["typeid",3]]],[11,"from","","",2249,[[]]],[11,"borrow","","",2249,[[]]],[11,"borrow_mut","","",2249,[[]]],[11,"try_from","","",2249,[[],["result",4]]],[11,"into","","",2249,[[]]],[11,"try_into","","",2249,[[],["result",4]]],[11,"type_id","","",2249,[[],["typeid",3]]],[11,"from","","",2250,[[]]],[11,"borrow","","",2250,[[]]],[11,"borrow_mut","","",2250,[[]]],[11,"try_from","","",2250,[[],["result",4]]],[11,"into","","",2250,[[]]],[11,"try_into","","",2250,[[],["result",4]]],[11,"type_id","","",2250,[[],["typeid",3]]],[11,"from","","",2251,[[]]],[11,"borrow","","",2251,[[]]],[11,"borrow_mut","","",2251,[[]]],[11,"try_from","","",2251,[[],["result",4]]],[11,"into","","",2251,[[]]],[11,"try_into","","",2251,[[],["result",4]]],[11,"type_id","","",2251,[[],["typeid",3]]],[11,"from","","",2252,[[]]],[11,"borrow","","",2252,[[]]],[11,"borrow_mut","","",2252,[[]]],[11,"try_from","","",2252,[[],["result",4]]],[11,"into","","",2252,[[]]],[11,"try_into","","",2252,[[],["result",4]]],[11,"type_id","","",2252,[[],["typeid",3]]],[11,"from","","",2253,[[]]],[11,"borrow","","",2253,[[]]],[11,"borrow_mut","","",2253,[[]]],[11,"try_from","","",2253,[[],["result",4]]],[11,"into","","",2253,[[]]],[11,"try_into","","",2253,[[],["result",4]]],[11,"type_id","","",2253,[[],["typeid",3]]],[11,"from","","",2254,[[]]],[11,"borrow","","",2254,[[]]],[11,"borrow_mut","","",2254,[[]]],[11,"try_from","","",2254,[[],["result",4]]],[11,"into","","",2254,[[]]],[11,"try_into","","",2254,[[],["result",4]]],[11,"type_id","","",2254,[[],["typeid",3]]],[11,"from","","",2255,[[]]],[11,"borrow","","",2255,[[]]],[11,"borrow_mut","","",2255,[[]]],[11,"try_from","","",2255,[[],["result",4]]],[11,"into","","",2255,[[]]],[11,"try_into","","",2255,[[],["result",4]]],[11,"type_id","","",2255,[[],["typeid",3]]],[11,"from","","",2256,[[]]],[11,"borrow","","",2256,[[]]],[11,"borrow_mut","","",2256,[[]]],[11,"try_from","","",2256,[[],["result",4]]],[11,"into","","",2256,[[]]],[11,"try_into","","",2256,[[],["result",4]]],[11,"type_id","","",2256,[[],["typeid",3]]],[11,"from","","",2257,[[]]],[11,"borrow","","",2257,[[]]],[11,"borrow_mut","","",2257,[[]]],[11,"try_from","","",2257,[[],["result",4]]],[11,"into","","",2257,[[]]],[11,"try_into","","",2257,[[],["result",4]]],[11,"type_id","","",2257,[[],["typeid",3]]],[11,"from","","",2258,[[]]],[11,"borrow","","",2258,[[]]],[11,"borrow_mut","","",2258,[[]]],[11,"try_from","","",2258,[[],["result",4]]],[11,"into","","",2258,[[]]],[11,"try_into","","",2258,[[],["result",4]]],[11,"type_id","","",2258,[[],["typeid",3]]],[11,"from","","",2259,[[]]],[11,"borrow","","",2259,[[]]],[11,"borrow_mut","","",2259,[[]]],[11,"try_from","","",2259,[[],["result",4]]],[11,"into","","",2259,[[]]],[11,"try_into","","",2259,[[],["result",4]]],[11,"type_id","","",2259,[[],["typeid",3]]],[11,"from","","",2260,[[]]],[11,"borrow","","",2260,[[]]],[11,"borrow_mut","","",2260,[[]]],[11,"try_from","","",2260,[[],["result",4]]],[11,"into","","",2260,[[]]],[11,"try_into","","",2260,[[],["result",4]]],[11,"type_id","","",2260,[[],["typeid",3]]],[11,"from","","",2261,[[]]],[11,"borrow","","",2261,[[]]],[11,"borrow_mut","","",2261,[[]]],[11,"try_from","","",2261,[[],["result",4]]],[11,"into","","",2261,[[]]],[11,"try_into","","",2261,[[],["result",4]]],[11,"type_id","","",2261,[[],["typeid",3]]],[11,"from","","",2262,[[]]],[11,"borrow","","",2262,[[]]],[11,"borrow_mut","","",2262,[[]]],[11,"try_from","","",2262,[[],["result",4]]],[11,"into","","",2262,[[]]],[11,"try_into","","",2262,[[],["result",4]]],[11,"type_id","","",2262,[[],["typeid",3]]],[11,"from","","",2263,[[]]],[11,"borrow","","",2263,[[]]],[11,"borrow_mut","","",2263,[[]]],[11,"try_from","","",2263,[[],["result",4]]],[11,"into","","",2263,[[]]],[11,"try_into","","",2263,[[],["result",4]]],[11,"type_id","","",2263,[[],["typeid",3]]],[11,"from","","",2264,[[]]],[11,"borrow","","",2264,[[]]],[11,"borrow_mut","","",2264,[[]]],[11,"try_from","","",2264,[[],["result",4]]],[11,"into","","",2264,[[]]],[11,"try_into","","",2264,[[],["result",4]]],[11,"type_id","","",2264,[[],["typeid",3]]],[11,"from","","",2265,[[]]],[11,"borrow","","",2265,[[]]],[11,"borrow_mut","","",2265,[[]]],[11,"try_from","","",2265,[[],["result",4]]],[11,"into","","",2265,[[]]],[11,"try_into","","",2265,[[],["result",4]]],[11,"type_id","","",2265,[[],["typeid",3]]],[11,"from","","",2266,[[]]],[11,"borrow","","",2266,[[]]],[11,"borrow_mut","","",2266,[[]]],[11,"try_from","","",2266,[[],["result",4]]],[11,"into","","",2266,[[]]],[11,"try_into","","",2266,[[],["result",4]]],[11,"type_id","","",2266,[[],["typeid",3]]],[11,"from","","",2267,[[]]],[11,"borrow","","",2267,[[]]],[11,"borrow_mut","","",2267,[[]]],[11,"try_from","","",2267,[[],["result",4]]],[11,"into","","",2267,[[]]],[11,"try_into","","",2267,[[],["result",4]]],[11,"type_id","","",2267,[[],["typeid",3]]],[11,"from","","",2268,[[]]],[11,"borrow","","",2268,[[]]],[11,"borrow_mut","","",2268,[[]]],[11,"try_from","","",2268,[[],["result",4]]],[11,"into","","",2268,[[]]],[11,"try_into","","",2268,[[],["result",4]]],[11,"type_id","","",2268,[[],["typeid",3]]],[11,"from","","",2269,[[]]],[11,"borrow","","",2269,[[]]],[11,"borrow_mut","","",2269,[[]]],[11,"try_from","","",2269,[[],["result",4]]],[11,"into","","",2269,[[]]],[11,"try_into","","",2269,[[],["result",4]]],[11,"type_id","","",2269,[[],["typeid",3]]],[11,"from","","",2270,[[]]],[11,"borrow","","",2270,[[]]],[11,"borrow_mut","","",2270,[[]]],[11,"try_from","","",2270,[[],["result",4]]],[11,"into","","",2270,[[]]],[11,"try_into","","",2270,[[],["result",4]]],[11,"type_id","","",2270,[[],["typeid",3]]],[11,"from","","",2271,[[]]],[11,"borrow","","",2271,[[]]],[11,"borrow_mut","","",2271,[[]]],[11,"try_from","","",2271,[[],["result",4]]],[11,"into","","",2271,[[]]],[11,"try_into","","",2271,[[],["result",4]]],[11,"type_id","","",2271,[[],["typeid",3]]],[11,"from","","",2272,[[]]],[11,"borrow","","",2272,[[]]],[11,"borrow_mut","","",2272,[[]]],[11,"try_from","","",2272,[[],["result",4]]],[11,"into","","",2272,[[]]],[11,"try_into","","",2272,[[],["result",4]]],[11,"type_id","","",2272,[[],["typeid",3]]],[11,"from","","",2273,[[]]],[11,"borrow","","",2273,[[]]],[11,"borrow_mut","","",2273,[[]]],[11,"try_from","","",2273,[[],["result",4]]],[11,"into","","",2273,[[]]],[11,"try_into","","",2273,[[],["result",4]]],[11,"type_id","","",2273,[[],["typeid",3]]],[11,"from","","",2274,[[]]],[11,"borrow","","",2274,[[]]],[11,"borrow_mut","","",2274,[[]]],[11,"try_from","","",2274,[[],["result",4]]],[11,"into","","",2274,[[]]],[11,"try_into","","",2274,[[],["result",4]]],[11,"type_id","","",2274,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","atsamd11c::generic","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","atsamd11c::ac","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","atsamd11c::ac::ctrla","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","atsamd11c::ac::ctrlb","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","atsamd11c::ac::evctrl","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","atsamd11c::ac::intenclr","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","atsamd11c::ac::intenset","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","atsamd11c::ac::intflag","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","atsamd11c::ac::statusa","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","atsamd11c::ac::statusc","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","atsamd11c::ac::winctrl","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","atsamd11c::ac::compctrl","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","atsamd11c::ac::scaler","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","atsamd11c::adc","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","atsamd11c::adc::ctrla","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","atsamd11c::adc::refctrl","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","atsamd11c::adc::avgctrl","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","atsamd11c::adc::sampctrl","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","atsamd11c::adc::ctrlb","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","atsamd11c::adc::winctrl","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","atsamd11c::adc::swtrig","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","atsamd11c::adc::inputctrl","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","atsamd11c::adc::evctrl","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","atsamd11c::adc::intenclr","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","atsamd11c::adc::intenset","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","atsamd11c::adc::intflag","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","atsamd11c::adc::winlt","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","atsamd11c::adc::winut","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","atsamd11c::adc::gaincorr","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","atsamd11c::adc::offsetcorr","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","atsamd11c::adc::calib","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","atsamd11c::adc::dbgctrl","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","atsamd11c::dac","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","atsamd11c::dac::ctrla","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","atsamd11c::dac::ctrlb","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","atsamd11c::dac::evctrl","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","atsamd11c::dac::intenclr","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","atsamd11c::dac::intenset","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","atsamd11c::dac::intflag","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","atsamd11c::dac::data","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","atsamd11c::dac::databuf","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","atsamd11c::dmac","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::ctrl","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::crcctrl","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::crcdatain","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::crcchksum","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::crcstatus","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::dbgctrl","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::qosctrl","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::swtrigctrl","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::prictrl0","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::intpend","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::baseaddr","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::wrbaddr","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"into","","",297,[[]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::chid","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"into","","",300,[[]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::chctrla","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"into","","",303,[[]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"from","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"into","","",304,[[]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::chctrlb","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"into","","",313,[[]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"into","","",314,[[]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"from","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"into","","",315,[[]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"into","","",317,[[]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"from","","",319,[[]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"into","","",319,[[]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"from","","",321,[[]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"into","","",321,[[]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"from","","",323,[[]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"into","","",323,[[]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"into","","",307,[[]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"into","","",308,[[]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"into","","",309,[[]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"into","","",310,[[]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"into","","",311,[[]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::chintenclr","",326,[[]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"into","","",326,[[]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"from","","",327,[[]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"into","","",327,[[]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","","",328,[[]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"into","","",328,[[]]],[11,"try_into","","",328,[[],["result",4]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::chintenset","",331,[[]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"into","","",331,[[]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"from","","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"into","","",332,[[]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"from","","",333,[[]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"into","","",333,[[]]],[11,"try_into","","",333,[[],["result",4]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"from","atsamd11c::dmac::chintflag","",336,[[]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"into","","",336,[[]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"from","","",337,[[]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"into","","",337,[[]]],[11,"try_into","","",337,[[],["result",4]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"from","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"into","","",338,[[]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"from","atsamd11c::dsu","",342,[[]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"into","","",342,[[]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::ctrl","",343,[[]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"into","","",343,[[]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"from","","",344,[[]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"into","","",344,[[]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"from","","",345,[[]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"into","","",345,[[]]],[11,"try_into","","",345,[[],["result",4]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"from","","",346,[[]]],[11,"borrow","","",346,[[]]],[11,"borrow_mut","","",346,[[]]],[11,"try_from","","",346,[[],["result",4]]],[11,"into","","",346,[[]]],[11,"try_into","","",346,[[],["result",4]]],[11,"type_id","","",346,[[],["typeid",3]]],[11,"from","","",347,[[]]],[11,"borrow","","",347,[[]]],[11,"borrow_mut","","",347,[[]]],[11,"try_from","","",347,[[],["result",4]]],[11,"into","","",347,[[]]],[11,"try_into","","",347,[[],["result",4]]],[11,"type_id","","",347,[[],["typeid",3]]],[11,"from","","",348,[[]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"into","","",348,[[]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::statusa","",350,[[]]],[11,"borrow","","",350,[[]]],[11,"borrow_mut","","",350,[[]]],[11,"try_from","","",350,[[],["result",4]]],[11,"into","","",350,[[]]],[11,"try_into","","",350,[[],["result",4]]],[11,"type_id","","",350,[[],["typeid",3]]],[11,"from","","",351,[[]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"into","","",351,[[]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"from","","",352,[[]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"into","","",352,[[]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"from","","",353,[[]]],[11,"borrow","","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"into","","",353,[[]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"from","","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"into","","",354,[[]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::addr","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"into","","",358,[[]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"from","","",359,[[]]],[11,"borrow","","",359,[[]]],[11,"borrow_mut","","",359,[[]]],[11,"try_from","","",359,[[],["result",4]]],[11,"into","","",359,[[]]],[11,"try_into","","",359,[[],["result",4]]],[11,"type_id","","",359,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::length","",362,[[]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"into","","",362,[[]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::data","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"into","","",365,[[]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::dcc","",368,[[]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"into","","",368,[[]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::did","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"into","","",371,[[]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"from","","",372,[[]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"into","","",372,[[]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"from","","",373,[[]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"into","","",373,[[]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"from","atsamd11c::dsu::dcfg","",378,[[]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"into","","",378,[[]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"from","atsamd11c::eic","",393,[[]]],[11,"borrow","","",393,[[]]],[11,"borrow_mut","","",393,[[]]],[11,"try_from","","",393,[[],["result",4]]],[11,"into","","",393,[[]]],[11,"try_into","","",393,[[],["result",4]]],[11,"type_id","","",393,[[],["typeid",3]]],[11,"from","atsamd11c::eic::ctrl","",394,[[]]],[11,"borrow","","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"into","","",394,[[]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"from","","",395,[[]]],[11,"borrow","","",395,[[]]],[11,"borrow_mut","","",395,[[]]],[11,"try_from","","",395,[[],["result",4]]],[11,"into","","",395,[[]]],[11,"try_into","","",395,[[],["result",4]]],[11,"type_id","","",395,[[],["typeid",3]]],[11,"from","atsamd11c::eic::nmictrl","",401,[[]]],[11,"borrow","","",401,[[]]],[11,"borrow_mut","","",401,[[]]],[11,"try_from","","",401,[[],["result",4]]],[11,"into","","",401,[[]]],[11,"try_into","","",401,[[],["result",4]]],[11,"type_id","","",401,[[],["typeid",3]]],[11,"from","","",402,[[]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"into","","",402,[[]]],[11,"try_into","","",402,[[],["result",4]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"from","","",399,[[]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"into","","",399,[[]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"from","atsamd11c::eic::nmiflag","",405,[[]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"into","","",405,[[]]],[11,"try_into","","",405,[[],["result",4]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"from","atsamd11c::eic::evctrl","",408,[[]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"into","","",408,[[]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"from","","",409,[[]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"into","","",409,[[]]],[11,"try_into","","",409,[[],["result",4]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"from","","",410,[[]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"into","","",410,[[]]],[11,"try_into","","",410,[[],["result",4]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"from","","",411,[[]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"into","","",411,[[]]],[11,"try_into","","",411,[[],["result",4]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"from","","",412,[[]]],[11,"borrow","","",412,[[]]],[11,"borrow_mut","","",412,[[]]],[11,"try_from","","",412,[[],["result",4]]],[11,"into","","",412,[[]]],[11,"try_into","","",412,[[],["result",4]]],[11,"type_id","","",412,[[],["typeid",3]]],[11,"from","","",413,[[]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"into","","",413,[[]]],[11,"try_into","","",413,[[],["result",4]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"from","","",414,[[]]],[11,"borrow","","",414,[[]]],[11,"borrow_mut","","",414,[[]]],[11,"try_from","","",414,[[],["result",4]]],[11,"into","","",414,[[]]],[11,"try_into","","",414,[[],["result",4]]],[11,"type_id","","",414,[[],["typeid",3]]],[11,"from","","",415,[[]]],[11,"borrow","","",415,[[]]],[11,"borrow_mut","","",415,[[]]],[11,"try_from","","",415,[[],["result",4]]],[11,"into","","",415,[[]]],[11,"try_into","","",415,[[],["result",4]]],[11,"type_id","","",415,[[],["typeid",3]]],[11,"from","atsamd11c::eic::intenclr","",418,[[]]],[11,"borrow","","",418,[[]]],[11,"borrow_mut","","",418,[[]]],[11,"try_from","","",418,[[],["result",4]]],[11,"into","","",418,[[]]],[11,"try_into","","",418,[[],["result",4]]],[11,"type_id","","",418,[[],["typeid",3]]],[11,"from","","",419,[[]]],[11,"borrow","","",419,[[]]],[11,"borrow_mut","","",419,[[]]],[11,"try_from","","",419,[[],["result",4]]],[11,"into","","",419,[[]]],[11,"try_into","","",419,[[],["result",4]]],[11,"type_id","","",419,[[],["typeid",3]]],[11,"from","","",420,[[]]],[11,"borrow","","",420,[[]]],[11,"borrow_mut","","",420,[[]]],[11,"try_from","","",420,[[],["result",4]]],[11,"into","","",420,[[]]],[11,"try_into","","",420,[[],["result",4]]],[11,"type_id","","",420,[[],["typeid",3]]],[11,"from","","",421,[[]]],[11,"borrow","","",421,[[]]],[11,"borrow_mut","","",421,[[]]],[11,"try_from","","",421,[[],["result",4]]],[11,"into","","",421,[[]]],[11,"try_into","","",421,[[],["result",4]]],[11,"type_id","","",421,[[],["typeid",3]]],[11,"from","","",422,[[]]],[11,"borrow","","",422,[[]]],[11,"borrow_mut","","",422,[[]]],[11,"try_from","","",422,[[],["result",4]]],[11,"into","","",422,[[]]],[11,"try_into","","",422,[[],["result",4]]],[11,"type_id","","",422,[[],["typeid",3]]],[11,"from","","",423,[[]]],[11,"borrow","","",423,[[]]],[11,"borrow_mut","","",423,[[]]],[11,"try_from","","",423,[[],["result",4]]],[11,"into","","",423,[[]]],[11,"try_into","","",423,[[],["result",4]]],[11,"type_id","","",423,[[],["typeid",3]]],[11,"from","","",424,[[]]],[11,"borrow","","",424,[[]]],[11,"borrow_mut","","",424,[[]]],[11,"try_from","","",424,[[],["result",4]]],[11,"into","","",424,[[]]],[11,"try_into","","",424,[[],["result",4]]],[11,"type_id","","",424,[[],["typeid",3]]],[11,"from","","",425,[[]]],[11,"borrow","","",425,[[]]],[11,"borrow_mut","","",425,[[]]],[11,"try_from","","",425,[[],["result",4]]],[11,"into","","",425,[[]]],[11,"try_into","","",425,[[],["result",4]]],[11,"type_id","","",425,[[],["typeid",3]]],[11,"from","atsamd11c::eic::intenset","",428,[[]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"into","","",428,[[]]],[11,"try_into","","",428,[[],["result",4]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"from","","",429,[[]]],[11,"borrow","","",429,[[]]],[11,"borrow_mut","","",429,[[]]],[11,"try_from","","",429,[[],["result",4]]],[11,"into","","",429,[[]]],[11,"try_into","","",429,[[],["result",4]]],[11,"type_id","","",429,[[],["typeid",3]]],[11,"from","","",430,[[]]],[11,"borrow","","",430,[[]]],[11,"borrow_mut","","",430,[[]]],[11,"try_from","","",430,[[],["result",4]]],[11,"into","","",430,[[]]],[11,"try_into","","",430,[[],["result",4]]],[11,"type_id","","",430,[[],["typeid",3]]],[11,"from","","",431,[[]]],[11,"borrow","","",431,[[]]],[11,"borrow_mut","","",431,[[]]],[11,"try_from","","",431,[[],["result",4]]],[11,"into","","",431,[[]]],[11,"try_into","","",431,[[],["result",4]]],[11,"type_id","","",431,[[],["typeid",3]]],[11,"from","","",432,[[]]],[11,"borrow","","",432,[[]]],[11,"borrow_mut","","",432,[[]]],[11,"try_from","","",432,[[],["result",4]]],[11,"into","","",432,[[]]],[11,"try_into","","",432,[[],["result",4]]],[11,"type_id","","",432,[[],["typeid",3]]],[11,"from","","",433,[[]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"into","","",433,[[]]],[11,"try_into","","",433,[[],["result",4]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"from","","",434,[[]]],[11,"borrow","","",434,[[]]],[11,"borrow_mut","","",434,[[]]],[11,"try_from","","",434,[[],["result",4]]],[11,"into","","",434,[[]]],[11,"try_into","","",434,[[],["result",4]]],[11,"type_id","","",434,[[],["typeid",3]]],[11,"from","","",435,[[]]],[11,"borrow","","",435,[[]]],[11,"borrow_mut","","",435,[[]]],[11,"try_from","","",435,[[],["result",4]]],[11,"into","","",435,[[]]],[11,"try_into","","",435,[[],["result",4]]],[11,"type_id","","",435,[[],["typeid",3]]],[11,"from","atsamd11c::eic::intflag","",438,[[]]],[11,"borrow","","",438,[[]]],[11,"borrow_mut","","",438,[[]]],[11,"try_from","","",438,[[],["result",4]]],[11,"into","","",438,[[]]],[11,"try_into","","",438,[[],["result",4]]],[11,"type_id","","",438,[[],["typeid",3]]],[11,"from","","",439,[[]]],[11,"borrow","","",439,[[]]],[11,"borrow_mut","","",439,[[]]],[11,"try_from","","",439,[[],["result",4]]],[11,"into","","",439,[[]]],[11,"try_into","","",439,[[],["result",4]]],[11,"type_id","","",439,[[],["typeid",3]]],[11,"from","","",440,[[]]],[11,"borrow","","",440,[[]]],[11,"borrow_mut","","",440,[[]]],[11,"try_from","","",440,[[],["result",4]]],[11,"into","","",440,[[]]],[11,"try_into","","",440,[[],["result",4]]],[11,"type_id","","",440,[[],["typeid",3]]],[11,"from","","",441,[[]]],[11,"borrow","","",441,[[]]],[11,"borrow_mut","","",441,[[]]],[11,"try_from","","",441,[[],["result",4]]],[11,"into","","",441,[[]]],[11,"try_into","","",441,[[],["result",4]]],[11,"type_id","","",441,[[],["typeid",3]]],[11,"from","","",442,[[]]],[11,"borrow","","",442,[[]]],[11,"borrow_mut","","",442,[[]]],[11,"try_from","","",442,[[],["result",4]]],[11,"into","","",442,[[]]],[11,"try_into","","",442,[[],["result",4]]],[11,"type_id","","",442,[[],["typeid",3]]],[11,"from","","",443,[[]]],[11,"borrow","","",443,[[]]],[11,"borrow_mut","","",443,[[]]],[11,"try_from","","",443,[[],["result",4]]],[11,"into","","",443,[[]]],[11,"try_into","","",443,[[],["result",4]]],[11,"type_id","","",443,[[],["typeid",3]]],[11,"from","","",444,[[]]],[11,"borrow","","",444,[[]]],[11,"borrow_mut","","",444,[[]]],[11,"try_from","","",444,[[],["result",4]]],[11,"into","","",444,[[]]],[11,"try_into","","",444,[[],["result",4]]],[11,"type_id","","",444,[[],["typeid",3]]],[11,"from","","",445,[[]]],[11,"borrow","","",445,[[]]],[11,"borrow_mut","","",445,[[]]],[11,"try_from","","",445,[[],["result",4]]],[11,"into","","",445,[[]]],[11,"try_into","","",445,[[],["result",4]]],[11,"type_id","","",445,[[],["typeid",3]]],[11,"from","atsamd11c::eic::wakeup","",448,[[]]],[11,"borrow","","",448,[[]]],[11,"borrow_mut","","",448,[[]]],[11,"try_from","","",448,[[],["result",4]]],[11,"into","","",448,[[]]],[11,"try_into","","",448,[[],["result",4]]],[11,"type_id","","",448,[[],["typeid",3]]],[11,"from","","",449,[[]]],[11,"borrow","","",449,[[]]],[11,"borrow_mut","","",449,[[]]],[11,"try_from","","",449,[[],["result",4]]],[11,"into","","",449,[[]]],[11,"try_into","","",449,[[],["result",4]]],[11,"type_id","","",449,[[],["typeid",3]]],[11,"from","","",450,[[]]],[11,"borrow","","",450,[[]]],[11,"borrow_mut","","",450,[[]]],[11,"try_from","","",450,[[],["result",4]]],[11,"into","","",450,[[]]],[11,"try_into","","",450,[[],["result",4]]],[11,"type_id","","",450,[[],["typeid",3]]],[11,"from","","",451,[[]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"into","","",451,[[]]],[11,"try_into","","",451,[[],["result",4]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"from","","",452,[[]]],[11,"borrow","","",452,[[]]],[11,"borrow_mut","","",452,[[]]],[11,"try_from","","",452,[[],["result",4]]],[11,"into","","",452,[[]]],[11,"try_into","","",452,[[],["result",4]]],[11,"type_id","","",452,[[],["typeid",3]]],[11,"from","","",453,[[]]],[11,"borrow","","",453,[[]]],[11,"borrow_mut","","",453,[[]]],[11,"try_from","","",453,[[],["result",4]]],[11,"into","","",453,[[]]],[11,"try_into","","",453,[[],["result",4]]],[11,"type_id","","",453,[[],["typeid",3]]],[11,"from","","",454,[[]]],[11,"borrow","","",454,[[]]],[11,"borrow_mut","","",454,[[]]],[11,"try_from","","",454,[[],["result",4]]],[11,"into","","",454,[[]]],[11,"try_into","","",454,[[],["result",4]]],[11,"type_id","","",454,[[],["typeid",3]]],[11,"from","","",455,[[]]],[11,"borrow","","",455,[[]]],[11,"borrow_mut","","",455,[[]]],[11,"try_from","","",455,[[],["result",4]]],[11,"into","","",455,[[]]],[11,"try_into","","",455,[[],["result",4]]],[11,"type_id","","",455,[[],["typeid",3]]],[11,"from","atsamd11c::eic::config","",467,[[]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"into","","",467,[[]]],[11,"try_into","","",467,[[],["result",4]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"from","","",468,[[]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"into","","",468,[[]]],[11,"try_into","","",468,[[],["result",4]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"from","","",470,[[]]],[11,"borrow","","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"into","","",470,[[]]],[11,"try_into","","",470,[[],["result",4]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"from","","",471,[[]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"into","","",471,[[]]],[11,"try_into","","",471,[[],["result",4]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"from","","",473,[[]]],[11,"borrow","","",473,[[]]],[11,"borrow_mut","","",473,[[]]],[11,"try_from","","",473,[[],["result",4]]],[11,"into","","",473,[[]]],[11,"try_into","","",473,[[],["result",4]]],[11,"type_id","","",473,[[],["typeid",3]]],[11,"from","","",474,[[]]],[11,"borrow","","",474,[[]]],[11,"borrow_mut","","",474,[[]]],[11,"try_from","","",474,[[],["result",4]]],[11,"into","","",474,[[]]],[11,"try_into","","",474,[[],["result",4]]],[11,"type_id","","",474,[[],["typeid",3]]],[11,"from","","",476,[[]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"into","","",476,[[]]],[11,"try_into","","",476,[[],["result",4]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"from","","",477,[[]]],[11,"borrow","","",477,[[]]],[11,"borrow_mut","","",477,[[]]],[11,"try_from","","",477,[[],["result",4]]],[11,"into","","",477,[[]]],[11,"try_into","","",477,[[],["result",4]]],[11,"type_id","","",477,[[],["typeid",3]]],[11,"from","","",479,[[]]],[11,"borrow","","",479,[[]]],[11,"borrow_mut","","",479,[[]]],[11,"try_from","","",479,[[],["result",4]]],[11,"into","","",479,[[]]],[11,"try_into","","",479,[[],["result",4]]],[11,"type_id","","",479,[[],["typeid",3]]],[11,"from","","",480,[[]]],[11,"borrow","","",480,[[]]],[11,"borrow_mut","","",480,[[]]],[11,"try_from","","",480,[[],["result",4]]],[11,"into","","",480,[[]]],[11,"try_into","","",480,[[],["result",4]]],[11,"type_id","","",480,[[],["typeid",3]]],[11,"from","","",482,[[]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"into","","",482,[[]]],[11,"try_into","","",482,[[],["result",4]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"from","","",483,[[]]],[11,"borrow","","",483,[[]]],[11,"borrow_mut","","",483,[[]]],[11,"try_from","","",483,[[],["result",4]]],[11,"into","","",483,[[]]],[11,"try_into","","",483,[[],["result",4]]],[11,"type_id","","",483,[[],["typeid",3]]],[11,"from","","",485,[[]]],[11,"borrow","","",485,[[]]],[11,"borrow_mut","","",485,[[]]],[11,"try_from","","",485,[[],["result",4]]],[11,"into","","",485,[[]]],[11,"try_into","","",485,[[],["result",4]]],[11,"type_id","","",485,[[],["typeid",3]]],[11,"from","","",486,[[]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"into","","",486,[[]]],[11,"try_into","","",486,[[],["result",4]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"from","","",488,[[]]],[11,"borrow","","",488,[[]]],[11,"borrow_mut","","",488,[[]]],[11,"try_from","","",488,[[],["result",4]]],[11,"into","","",488,[[]]],[11,"try_into","","",488,[[],["result",4]]],[11,"type_id","","",488,[[],["typeid",3]]],[11,"from","","",489,[[]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"into","","",489,[[]]],[11,"try_into","","",489,[[],["result",4]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"from","","",458,[[]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"into","","",458,[[]]],[11,"try_into","","",458,[[],["result",4]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"from","","",459,[[]]],[11,"borrow","","",459,[[]]],[11,"borrow_mut","","",459,[[]]],[11,"try_from","","",459,[[],["result",4]]],[11,"into","","",459,[[]]],[11,"try_into","","",459,[[],["result",4]]],[11,"type_id","","",459,[[],["typeid",3]]],[11,"from","","",460,[[]]],[11,"borrow","","",460,[[]]],[11,"borrow_mut","","",460,[[]]],[11,"try_from","","",460,[[],["result",4]]],[11,"into","","",460,[[]]],[11,"try_into","","",460,[[],["result",4]]],[11,"type_id","","",460,[[],["typeid",3]]],[11,"from","","",461,[[]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"into","","",461,[[]]],[11,"try_into","","",461,[[],["result",4]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"from","","",462,[[]]],[11,"borrow","","",462,[[]]],[11,"borrow_mut","","",462,[[]]],[11,"try_from","","",462,[[],["result",4]]],[11,"into","","",462,[[]]],[11,"try_into","","",462,[[],["result",4]]],[11,"type_id","","",462,[[],["typeid",3]]],[11,"from","","",463,[[]]],[11,"borrow","","",463,[[]]],[11,"borrow_mut","","",463,[[]]],[11,"try_from","","",463,[[],["result",4]]],[11,"into","","",463,[[]]],[11,"try_into","","",463,[[],["result",4]]],[11,"type_id","","",463,[[],["typeid",3]]],[11,"from","","",464,[[]]],[11,"borrow","","",464,[[]]],[11,"borrow_mut","","",464,[[]]],[11,"try_from","","",464,[[],["result",4]]],[11,"into","","",464,[[]]],[11,"try_into","","",464,[[],["result",4]]],[11,"type_id","","",464,[[],["typeid",3]]],[11,"from","","",465,[[]]],[11,"borrow","","",465,[[]]],[11,"borrow_mut","","",465,[[]]],[11,"try_from","","",465,[[],["result",4]]],[11,"into","","",465,[[]]],[11,"try_into","","",465,[[],["result",4]]],[11,"type_id","","",465,[[],["typeid",3]]],[11,"from","atsamd11c::evsys","",492,[[]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"into","","",492,[[]]],[11,"try_into","","",492,[[],["result",4]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"from","atsamd11c::evsys::ctrl","",493,[[]]],[11,"borrow","","",493,[[]]],[11,"borrow_mut","","",493,[[]]],[11,"try_from","","",493,[[],["result",4]]],[11,"into","","",493,[[]]],[11,"try_into","","",493,[[],["result",4]]],[11,"type_id","","",493,[[],["typeid",3]]],[11,"from","","",494,[[]]],[11,"borrow","","",494,[[]]],[11,"borrow_mut","","",494,[[]]],[11,"try_from","","",494,[[],["result",4]]],[11,"into","","",494,[[]]],[11,"try_into","","",494,[[],["result",4]]],[11,"type_id","","",494,[[],["typeid",3]]],[11,"from","atsamd11c::evsys::channel","",498,[[]]],[11,"borrow","","",498,[[]]],[11,"borrow_mut","","",498,[[]]],[11,"try_from","","",498,[[],["result",4]]],[11,"into","","",498,[[]]],[11,"try_into","","",498,[[],["result",4]]],[11,"type_id","","",498,[[],["typeid",3]]],[11,"from","","",499,[[]]],[11,"borrow","","",499,[[]]],[11,"borrow_mut","","",499,[[]]],[11,"try_from","","",499,[[],["result",4]]],[11,"into","","",499,[[]]],[11,"try_into","","",499,[[],["result",4]]],[11,"type_id","","",499,[[],["typeid",3]]],[11,"from","","",500,[[]]],[11,"borrow","","",500,[[]]],[11,"borrow_mut","","",500,[[]]],[11,"try_from","","",500,[[],["result",4]]],[11,"into","","",500,[[]]],[11,"try_into","","",500,[[],["result",4]]],[11,"type_id","","",500,[[],["typeid",3]]],[11,"from","","",502,[[]]],[11,"borrow","","",502,[[]]],[11,"borrow_mut","","",502,[[]]],[11,"try_from","","",502,[[],["result",4]]],[11,"into","","",502,[[]]],[11,"try_into","","",502,[[],["result",4]]],[11,"type_id","","",502,[[],["typeid",3]]],[11,"from","","",504,[[]]],[11,"borrow","","",504,[[]]],[11,"borrow_mut","","",504,[[]]],[11,"try_from","","",504,[[],["result",4]]],[11,"into","","",504,[[]]],[11,"try_into","","",504,[[],["result",4]]],[11,"type_id","","",504,[[],["typeid",3]]],[11,"from","","",496,[[]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"into","","",496,[[]]],[11,"try_into","","",496,[[],["result",4]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"from","","",497,[[]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"into","","",497,[[]]],[11,"try_into","","",497,[[],["result",4]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"from","atsamd11c::evsys::user","",508,[[]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"into","","",508,[[]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"from","","",510,[[]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"into","","",510,[[]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"from","","",507,[[]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"into","","",507,[[]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"from","atsamd11c::evsys::intenclr","",514,[[]]],[11,"borrow","","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"into","","",514,[[]]],[11,"try_into","","",514,[[],["result",4]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"from","","",515,[[]]],[11,"borrow","","",515,[[]]],[11,"borrow_mut","","",515,[[]]],[11,"try_from","","",515,[[],["result",4]]],[11,"into","","",515,[[]]],[11,"try_into","","",515,[[],["result",4]]],[11,"type_id","","",515,[[],["typeid",3]]],[11,"from","","",516,[[]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"into","","",516,[[]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"from","","",517,[[]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"into","","",517,[[]]],[11,"try_into","","",517,[[],["result",4]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"from","","",518,[[]]],[11,"borrow","","",518,[[]]],[11,"borrow_mut","","",518,[[]]],[11,"try_from","","",518,[[],["result",4]]],[11,"into","","",518,[[]]],[11,"try_into","","",518,[[],["result",4]]],[11,"type_id","","",518,[[],["typeid",3]]],[11,"from","","",519,[[]]],[11,"borrow","","",519,[[]]],[11,"borrow_mut","","",519,[[]]],[11,"try_from","","",519,[[],["result",4]]],[11,"into","","",519,[[]]],[11,"try_into","","",519,[[],["result",4]]],[11,"type_id","","",519,[[],["typeid",3]]],[11,"from","","",520,[[]]],[11,"borrow","","",520,[[]]],[11,"borrow_mut","","",520,[[]]],[11,"try_from","","",520,[[],["result",4]]],[11,"into","","",520,[[]]],[11,"try_into","","",520,[[],["result",4]]],[11,"type_id","","",520,[[],["typeid",3]]],[11,"from","","",521,[[]]],[11,"borrow","","",521,[[]]],[11,"borrow_mut","","",521,[[]]],[11,"try_from","","",521,[[],["result",4]]],[11,"into","","",521,[[]]],[11,"try_into","","",521,[[],["result",4]]],[11,"type_id","","",521,[[],["typeid",3]]],[11,"from","","",522,[[]]],[11,"borrow","","",522,[[]]],[11,"borrow_mut","","",522,[[]]],[11,"try_from","","",522,[[],["result",4]]],[11,"into","","",522,[[]]],[11,"try_into","","",522,[[],["result",4]]],[11,"type_id","","",522,[[],["typeid",3]]],[11,"from","","",523,[[]]],[11,"borrow","","",523,[[]]],[11,"borrow_mut","","",523,[[]]],[11,"try_from","","",523,[[],["result",4]]],[11,"into","","",523,[[]]],[11,"try_into","","",523,[[],["result",4]]],[11,"type_id","","",523,[[],["typeid",3]]],[11,"from","","",524,[[]]],[11,"borrow","","",524,[[]]],[11,"borrow_mut","","",524,[[]]],[11,"try_from","","",524,[[],["result",4]]],[11,"into","","",524,[[]]],[11,"try_into","","",524,[[],["result",4]]],[11,"type_id","","",524,[[],["typeid",3]]],[11,"from","","",525,[[]]],[11,"borrow","","",525,[[]]],[11,"borrow_mut","","",525,[[]]],[11,"try_from","","",525,[[],["result",4]]],[11,"into","","",525,[[]]],[11,"try_into","","",525,[[],["result",4]]],[11,"type_id","","",525,[[],["typeid",3]]],[11,"from","atsamd11c::evsys::intenset","",528,[[]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"into","","",528,[[]]],[11,"try_into","","",528,[[],["result",4]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"from","","",529,[[]]],[11,"borrow","","",529,[[]]],[11,"borrow_mut","","",529,[[]]],[11,"try_from","","",529,[[],["result",4]]],[11,"into","","",529,[[]]],[11,"try_into","","",529,[[],["result",4]]],[11,"type_id","","",529,[[],["typeid",3]]],[11,"from","","",530,[[]]],[11,"borrow","","",530,[[]]],[11,"borrow_mut","","",530,[[]]],[11,"try_from","","",530,[[],["result",4]]],[11,"into","","",530,[[]]],[11,"try_into","","",530,[[],["result",4]]],[11,"type_id","","",530,[[],["typeid",3]]],[11,"from","","",531,[[]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"into","","",531,[[]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"from","","",532,[[]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"into","","",532,[[]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"from","","",533,[[]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"into","","",533,[[]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"from","","",534,[[]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"into","","",534,[[]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"from","","",535,[[]]],[11,"borrow","","",535,[[]]],[11,"borrow_mut","","",535,[[]]],[11,"try_from","","",535,[[],["result",4]]],[11,"into","","",535,[[]]],[11,"try_into","","",535,[[],["result",4]]],[11,"type_id","","",535,[[],["typeid",3]]],[11,"from","","",536,[[]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"into","","",536,[[]]],[11,"try_into","","",536,[[],["result",4]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"from","","",537,[[]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"into","","",537,[[]]],[11,"try_into","","",537,[[],["result",4]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"from","","",538,[[]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"into","","",538,[[]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"from","","",539,[[]]],[11,"borrow","","",539,[[]]],[11,"borrow_mut","","",539,[[]]],[11,"try_from","","",539,[[],["result",4]]],[11,"into","","",539,[[]]],[11,"try_into","","",539,[[],["result",4]]],[11,"type_id","","",539,[[],["typeid",3]]],[11,"from","atsamd11c::evsys::intflag","",542,[[]]],[11,"borrow","","",542,[[]]],[11,"borrow_mut","","",542,[[]]],[11,"try_from","","",542,[[],["result",4]]],[11,"into","","",542,[[]]],[11,"try_into","","",542,[[],["result",4]]],[11,"type_id","","",542,[[],["typeid",3]]],[11,"from","","",543,[[]]],[11,"borrow","","",543,[[]]],[11,"borrow_mut","","",543,[[]]],[11,"try_from","","",543,[[],["result",4]]],[11,"into","","",543,[[]]],[11,"try_into","","",543,[[],["result",4]]],[11,"type_id","","",543,[[],["typeid",3]]],[11,"from","","",544,[[]]],[11,"borrow","","",544,[[]]],[11,"borrow_mut","","",544,[[]]],[11,"try_from","","",544,[[],["result",4]]],[11,"into","","",544,[[]]],[11,"try_into","","",544,[[],["result",4]]],[11,"type_id","","",544,[[],["typeid",3]]],[11,"from","","",545,[[]]],[11,"borrow","","",545,[[]]],[11,"borrow_mut","","",545,[[]]],[11,"try_from","","",545,[[],["result",4]]],[11,"into","","",545,[[]]],[11,"try_into","","",545,[[],["result",4]]],[11,"type_id","","",545,[[],["typeid",3]]],[11,"from","","",546,[[]]],[11,"borrow","","",546,[[]]],[11,"borrow_mut","","",546,[[]]],[11,"try_from","","",546,[[],["result",4]]],[11,"into","","",546,[[]]],[11,"try_into","","",546,[[],["result",4]]],[11,"type_id","","",546,[[],["typeid",3]]],[11,"from","","",547,[[]]],[11,"borrow","","",547,[[]]],[11,"borrow_mut","","",547,[[]]],[11,"try_from","","",547,[[],["result",4]]],[11,"into","","",547,[[]]],[11,"try_into","","",547,[[],["result",4]]],[11,"type_id","","",547,[[],["typeid",3]]],[11,"from","","",548,[[]]],[11,"borrow","","",548,[[]]],[11,"borrow_mut","","",548,[[]]],[11,"try_from","","",548,[[],["result",4]]],[11,"into","","",548,[[]]],[11,"try_into","","",548,[[],["result",4]]],[11,"type_id","","",548,[[],["typeid",3]]],[11,"from","","",549,[[]]],[11,"borrow","","",549,[[]]],[11,"borrow_mut","","",549,[[]]],[11,"try_from","","",549,[[],["result",4]]],[11,"into","","",549,[[]]],[11,"try_into","","",549,[[],["result",4]]],[11,"type_id","","",549,[[],["typeid",3]]],[11,"from","","",550,[[]]],[11,"borrow","","",550,[[]]],[11,"borrow_mut","","",550,[[]]],[11,"try_from","","",550,[[],["result",4]]],[11,"into","","",550,[[]]],[11,"try_into","","",550,[[],["result",4]]],[11,"type_id","","",550,[[],["typeid",3]]],[11,"from","","",551,[[]]],[11,"borrow","","",551,[[]]],[11,"borrow_mut","","",551,[[]]],[11,"try_from","","",551,[[],["result",4]]],[11,"into","","",551,[[]]],[11,"try_into","","",551,[[],["result",4]]],[11,"type_id","","",551,[[],["typeid",3]]],[11,"from","","",552,[[]]],[11,"borrow","","",552,[[]]],[11,"borrow_mut","","",552,[[]]],[11,"try_from","","",552,[[],["result",4]]],[11,"into","","",552,[[]]],[11,"try_into","","",552,[[],["result",4]]],[11,"type_id","","",552,[[],["typeid",3]]],[11,"from","","",553,[[]]],[11,"borrow","","",553,[[]]],[11,"borrow_mut","","",553,[[]]],[11,"try_from","","",553,[[],["result",4]]],[11,"into","","",553,[[]]],[11,"try_into","","",553,[[],["result",4]]],[11,"type_id","","",553,[[],["typeid",3]]],[11,"from","atsamd11c::gclk","",556,[[]]],[11,"borrow","","",556,[[]]],[11,"borrow_mut","","",556,[[]]],[11,"try_from","","",556,[[],["result",4]]],[11,"into","","",556,[[]]],[11,"try_into","","",556,[[],["result",4]]],[11,"type_id","","",556,[[],["typeid",3]]],[11,"from","atsamd11c::gclk::ctrl","",557,[[]]],[11,"borrow","","",557,[[]]],[11,"borrow_mut","","",557,[[]]],[11,"try_from","","",557,[[],["result",4]]],[11,"into","","",557,[[]]],[11,"try_into","","",557,[[],["result",4]]],[11,"type_id","","",557,[[],["typeid",3]]],[11,"from","atsamd11c::gclk::clkctrl","",564,[[]]],[11,"borrow","","",564,[[]]],[11,"borrow_mut","","",564,[[]]],[11,"try_from","","",564,[[],["result",4]]],[11,"into","","",564,[[]]],[11,"try_into","","",564,[[],["result",4]]],[11,"type_id","","",564,[[],["typeid",3]]],[11,"from","","",566,[[]]],[11,"borrow","","",566,[[]]],[11,"borrow_mut","","",566,[[]]],[11,"try_from","","",566,[[],["result",4]]],[11,"into","","",566,[[]]],[11,"try_into","","",566,[[],["result",4]]],[11,"type_id","","",566,[[],["typeid",3]]],[11,"from","","",567,[[]]],[11,"borrow","","",567,[[]]],[11,"borrow_mut","","",567,[[]]],[11,"try_from","","",567,[[],["result",4]]],[11,"into","","",567,[[]]],[11,"try_into","","",567,[[],["result",4]]],[11,"type_id","","",567,[[],["typeid",3]]],[11,"from","","",568,[[]]],[11,"borrow","","",568,[[]]],[11,"borrow_mut","","",568,[[]]],[11,"try_from","","",568,[[],["result",4]]],[11,"into","","",568,[[]]],[11,"try_into","","",568,[[],["result",4]]],[11,"type_id","","",568,[[],["typeid",3]]],[11,"from","","",561,[[]]],[11,"borrow","","",561,[[]]],[11,"borrow_mut","","",561,[[]]],[11,"try_from","","",561,[[],["result",4]]],[11,"into","","",561,[[]]],[11,"try_into","","",561,[[],["result",4]]],[11,"type_id","","",561,[[],["typeid",3]]],[11,"from","","",562,[[]]],[11,"borrow","","",562,[[]]],[11,"borrow_mut","","",562,[[]]],[11,"try_from","","",562,[[],["result",4]]],[11,"into","","",562,[[]]],[11,"try_into","","",562,[[],["result",4]]],[11,"type_id","","",562,[[],["typeid",3]]],[11,"from","atsamd11c::gclk::genctrl","",572,[[]]],[11,"borrow","","",572,[[]]],[11,"borrow_mut","","",572,[[]]],[11,"try_from","","",572,[[],["result",4]]],[11,"into","","",572,[[]]],[11,"try_into","","",572,[[],["result",4]]],[11,"type_id","","",572,[[],["typeid",3]]],[11,"from","","",574,[[]]],[11,"borrow","","",574,[[]]],[11,"borrow_mut","","",574,[[]]],[11,"try_from","","",574,[[],["result",4]]],[11,"into","","",574,[[]]],[11,"try_into","","",574,[[],["result",4]]],[11,"type_id","","",574,[[],["typeid",3]]],[11,"from","","",575,[[]]],[11,"borrow","","",575,[[]]],[11,"borrow_mut","","",575,[[]]],[11,"try_from","","",575,[[],["result",4]]],[11,"into","","",575,[[]]],[11,"try_into","","",575,[[],["result",4]]],[11,"type_id","","",575,[[],["typeid",3]]],[11,"from","","",576,[[]]],[11,"borrow","","",576,[[]]],[11,"borrow_mut","","",576,[[]]],[11,"try_from","","",576,[[],["result",4]]],[11,"into","","",576,[[]]],[11,"try_into","","",576,[[],["result",4]]],[11,"type_id","","",576,[[],["typeid",3]]],[11,"from","","",577,[[]]],[11,"borrow","","",577,[[]]],[11,"borrow_mut","","",577,[[]]],[11,"try_from","","",577,[[],["result",4]]],[11,"into","","",577,[[]]],[11,"try_into","","",577,[[],["result",4]]],[11,"type_id","","",577,[[],["typeid",3]]],[11,"from","","",578,[[]]],[11,"borrow","","",578,[[]]],[11,"borrow_mut","","",578,[[]]],[11,"try_from","","",578,[[],["result",4]]],[11,"into","","",578,[[]]],[11,"try_into","","",578,[[],["result",4]]],[11,"type_id","","",578,[[],["typeid",3]]],[11,"from","","",579,[[]]],[11,"borrow","","",579,[[]]],[11,"borrow_mut","","",579,[[]]],[11,"try_from","","",579,[[],["result",4]]],[11,"into","","",579,[[]]],[11,"try_into","","",579,[[],["result",4]]],[11,"type_id","","",579,[[],["typeid",3]]],[11,"from","","",580,[[]]],[11,"borrow","","",580,[[]]],[11,"borrow_mut","","",580,[[]]],[11,"try_from","","",580,[[],["result",4]]],[11,"into","","",580,[[]]],[11,"try_into","","",580,[[],["result",4]]],[11,"type_id","","",580,[[],["typeid",3]]],[11,"from","","",571,[[]]],[11,"borrow","","",571,[[]]],[11,"borrow_mut","","",571,[[]]],[11,"try_from","","",571,[[],["result",4]]],[11,"into","","",571,[[]]],[11,"try_into","","",571,[[],["result",4]]],[11,"type_id","","",571,[[],["typeid",3]]],[11,"from","atsamd11c::gclk::gendiv","",583,[[]]],[11,"borrow","","",583,[[]]],[11,"borrow_mut","","",583,[[]]],[11,"try_from","","",583,[[],["result",4]]],[11,"into","","",583,[[]]],[11,"try_into","","",583,[[],["result",4]]],[11,"type_id","","",583,[[],["typeid",3]]],[11,"from","","",584,[[]]],[11,"borrow","","",584,[[]]],[11,"borrow_mut","","",584,[[]]],[11,"try_from","","",584,[[],["result",4]]],[11,"into","","",584,[[]]],[11,"try_into","","",584,[[],["result",4]]],[11,"type_id","","",584,[[],["typeid",3]]],[11,"from","atsamd11c::hmatrix","",587,[[]]],[11,"borrow","","",587,[[]]],[11,"borrow_mut","","",587,[[]]],[11,"try_from","","",587,[[],["result",4]]],[11,"into","","",587,[[]]],[11,"try_into","","",587,[[],["result",4]]],[11,"type_id","","",587,[[],["typeid",3]]],[11,"from","atsamd11c::hmatrix::pras","",588,[[]]],[11,"borrow","","",588,[[]]],[11,"borrow_mut","","",588,[[]]],[11,"try_from","","",588,[[],["result",4]]],[11,"into","","",588,[[]]],[11,"try_into","","",588,[[],["result",4]]],[11,"type_id","","",588,[[],["typeid",3]]],[11,"from","","",589,[[]]],[11,"borrow","","",589,[[]]],[11,"borrow_mut","","",589,[[]]],[11,"try_from","","",589,[[],["result",4]]],[11,"into","","",589,[[]]],[11,"try_into","","",589,[[],["result",4]]],[11,"type_id","","",589,[[],["typeid",3]]],[11,"from","","",590,[[]]],[11,"borrow","","",590,[[]]],[11,"borrow_mut","","",590,[[]]],[11,"try_from","","",590,[[],["result",4]]],[11,"into","","",590,[[]]],[11,"try_into","","",590,[[],["result",4]]],[11,"type_id","","",590,[[],["typeid",3]]],[11,"from","","",591,[[]]],[11,"borrow","","",591,[[]]],[11,"borrow_mut","","",591,[[]]],[11,"try_from","","",591,[[],["result",4]]],[11,"into","","",591,[[]]],[11,"try_into","","",591,[[],["result",4]]],[11,"type_id","","",591,[[],["typeid",3]]],[11,"from","","",592,[[]]],[11,"borrow","","",592,[[]]],[11,"borrow_mut","","",592,[[]]],[11,"try_from","","",592,[[],["result",4]]],[11,"into","","",592,[[]]],[11,"try_into","","",592,[[],["result",4]]],[11,"type_id","","",592,[[],["typeid",3]]],[11,"from","","",593,[[]]],[11,"borrow","","",593,[[]]],[11,"borrow_mut","","",593,[[]]],[11,"try_from","","",593,[[],["result",4]]],[11,"into","","",593,[[]]],[11,"try_into","","",593,[[],["result",4]]],[11,"type_id","","",593,[[],["typeid",3]]],[11,"from","","",594,[[]]],[11,"borrow","","",594,[[]]],[11,"borrow_mut","","",594,[[]]],[11,"try_from","","",594,[[],["result",4]]],[11,"into","","",594,[[]]],[11,"try_into","","",594,[[],["result",4]]],[11,"type_id","","",594,[[],["typeid",3]]],[11,"from","","",595,[[]]],[11,"borrow","","",595,[[]]],[11,"borrow_mut","","",595,[[]]],[11,"try_from","","",595,[[],["result",4]]],[11,"into","","",595,[[]]],[11,"try_into","","",595,[[],["result",4]]],[11,"type_id","","",595,[[],["typeid",3]]],[11,"from","atsamd11c::hmatrix::prbs","",598,[[]]],[11,"borrow","","",598,[[]]],[11,"borrow_mut","","",598,[[]]],[11,"try_from","","",598,[[],["result",4]]],[11,"into","","",598,[[]]],[11,"try_into","","",598,[[],["result",4]]],[11,"type_id","","",598,[[],["typeid",3]]],[11,"from","","",599,[[]]],[11,"borrow","","",599,[[]]],[11,"borrow_mut","","",599,[[]]],[11,"try_from","","",599,[[],["result",4]]],[11,"into","","",599,[[]]],[11,"try_into","","",599,[[],["result",4]]],[11,"type_id","","",599,[[],["typeid",3]]],[11,"from","","",600,[[]]],[11,"borrow","","",600,[[]]],[11,"borrow_mut","","",600,[[]]],[11,"try_from","","",600,[[],["result",4]]],[11,"into","","",600,[[]]],[11,"try_into","","",600,[[],["result",4]]],[11,"type_id","","",600,[[],["typeid",3]]],[11,"from","","",601,[[]]],[11,"borrow","","",601,[[]]],[11,"borrow_mut","","",601,[[]]],[11,"try_from","","",601,[[],["result",4]]],[11,"into","","",601,[[]]],[11,"try_into","","",601,[[],["result",4]]],[11,"type_id","","",601,[[],["typeid",3]]],[11,"from","","",602,[[]]],[11,"borrow","","",602,[[]]],[11,"borrow_mut","","",602,[[]]],[11,"try_from","","",602,[[],["result",4]]],[11,"into","","",602,[[]]],[11,"try_into","","",602,[[],["result",4]]],[11,"type_id","","",602,[[],["typeid",3]]],[11,"from","","",603,[[]]],[11,"borrow","","",603,[[]]],[11,"borrow_mut","","",603,[[]]],[11,"try_from","","",603,[[],["result",4]]],[11,"into","","",603,[[]]],[11,"try_into","","",603,[[],["result",4]]],[11,"type_id","","",603,[[],["typeid",3]]],[11,"from","","",604,[[]]],[11,"borrow","","",604,[[]]],[11,"borrow_mut","","",604,[[]]],[11,"try_from","","",604,[[],["result",4]]],[11,"into","","",604,[[]]],[11,"try_into","","",604,[[],["result",4]]],[11,"type_id","","",604,[[],["typeid",3]]],[11,"from","","",605,[[]]],[11,"borrow","","",605,[[]]],[11,"borrow_mut","","",605,[[]]],[11,"try_from","","",605,[[],["result",4]]],[11,"into","","",605,[[]]],[11,"try_into","","",605,[[],["result",4]]],[11,"type_id","","",605,[[],["typeid",3]]],[11,"from","atsamd11c::hmatrix::sfr","",608,[[]]],[11,"borrow","","",608,[[]]],[11,"borrow_mut","","",608,[[]]],[11,"try_from","","",608,[[],["result",4]]],[11,"into","","",608,[[]]],[11,"try_into","","",608,[[],["result",4]]],[11,"type_id","","",608,[[],["typeid",3]]],[11,"from","atsamd11c::mtb","",611,[[]]],[11,"borrow","","",611,[[]]],[11,"borrow_mut","","",611,[[]]],[11,"try_from","","",611,[[],["result",4]]],[11,"into","","",611,[[]]],[11,"try_into","","",611,[[],["result",4]]],[11,"type_id","","",611,[[],["typeid",3]]],[11,"from","atsamd11c::mtb::position","",612,[[]]],[11,"borrow","","",612,[[]]],[11,"borrow_mut","","",612,[[]]],[11,"try_from","","",612,[[],["result",4]]],[11,"into","","",612,[[]]],[11,"try_into","","",612,[[],["result",4]]],[11,"type_id","","",612,[[],["typeid",3]]],[11,"from","","",613,[[]]],[11,"borrow","","",613,[[]]],[11,"borrow_mut","","",613,[[]]],[11,"try_from","","",613,[[],["result",4]]],[11,"into","","",613,[[]]],[11,"try_into","","",613,[[],["result",4]]],[11,"type_id","","",613,[[],["typeid",3]]],[11,"from","atsamd11c::mtb::master","",616,[[]]],[11,"borrow","","",616,[[]]],[11,"borrow_mut","","",616,[[]]],[11,"try_from","","",616,[[],["result",4]]],[11,"into","","",616,[[]]],[11,"try_into","","",616,[[],["result",4]]],[11,"type_id","","",616,[[],["typeid",3]]],[11,"from","","",617,[[]]],[11,"borrow","","",617,[[]]],[11,"borrow_mut","","",617,[[]]],[11,"try_from","","",617,[[],["result",4]]],[11,"into","","",617,[[]]],[11,"try_into","","",617,[[],["result",4]]],[11,"type_id","","",617,[[],["typeid",3]]],[11,"from","","",618,[[]]],[11,"borrow","","",618,[[]]],[11,"borrow_mut","","",618,[[]]],[11,"try_from","","",618,[[],["result",4]]],[11,"into","","",618,[[]]],[11,"try_into","","",618,[[],["result",4]]],[11,"type_id","","",618,[[],["typeid",3]]],[11,"from","","",619,[[]]],[11,"borrow","","",619,[[]]],[11,"borrow_mut","","",619,[[]]],[11,"try_from","","",619,[[],["result",4]]],[11,"into","","",619,[[]]],[11,"try_into","","",619,[[],["result",4]]],[11,"type_id","","",619,[[],["typeid",3]]],[11,"from","","",620,[[]]],[11,"borrow","","",620,[[]]],[11,"borrow_mut","","",620,[[]]],[11,"try_from","","",620,[[],["result",4]]],[11,"into","","",620,[[]]],[11,"try_into","","",620,[[],["result",4]]],[11,"type_id","","",620,[[],["typeid",3]]],[11,"from","","",621,[[]]],[11,"borrow","","",621,[[]]],[11,"borrow_mut","","",621,[[]]],[11,"try_from","","",621,[[],["result",4]]],[11,"into","","",621,[[]]],[11,"try_into","","",621,[[],["result",4]]],[11,"type_id","","",621,[[],["typeid",3]]],[11,"from","","",622,[[]]],[11,"borrow","","",622,[[]]],[11,"borrow_mut","","",622,[[]]],[11,"try_from","","",622,[[],["result",4]]],[11,"into","","",622,[[]]],[11,"try_into","","",622,[[],["result",4]]],[11,"type_id","","",622,[[],["typeid",3]]],[11,"from","atsamd11c::mtb::flow","",625,[[]]],[11,"borrow","","",625,[[]]],[11,"borrow_mut","","",625,[[]]],[11,"try_from","","",625,[[],["result",4]]],[11,"into","","",625,[[]]],[11,"try_into","","",625,[[],["result",4]]],[11,"type_id","","",625,[[],["typeid",3]]],[11,"from","","",626,[[]]],[11,"borrow","","",626,[[]]],[11,"borrow_mut","","",626,[[]]],[11,"try_from","","",626,[[],["result",4]]],[11,"into","","",626,[[]]],[11,"try_into","","",626,[[],["result",4]]],[11,"type_id","","",626,[[],["typeid",3]]],[11,"from","","",627,[[]]],[11,"borrow","","",627,[[]]],[11,"borrow_mut","","",627,[[]]],[11,"try_from","","",627,[[],["result",4]]],[11,"into","","",627,[[]]],[11,"try_into","","",627,[[],["result",4]]],[11,"type_id","","",627,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl","",630,[[]]],[11,"borrow","","",630,[[]]],[11,"borrow_mut","","",630,[[]]],[11,"try_from","","",630,[[],["result",4]]],[11,"into","","",630,[[]]],[11,"try_into","","",630,[[],["result",4]]],[11,"type_id","","",630,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::ctrla","",634,[[]]],[11,"borrow","","",634,[[]]],[11,"borrow_mut","","",634,[[]]],[11,"try_from","","",634,[[],["result",4]]],[11,"into","","",634,[[]]],[11,"try_into","","",634,[[],["result",4]]],[11,"type_id","","",634,[[],["typeid",3]]],[11,"from","","",636,[[]]],[11,"borrow","","",636,[[]]],[11,"borrow_mut","","",636,[[]]],[11,"try_from","","",636,[[],["result",4]]],[11,"into","","",636,[[]]],[11,"try_into","","",636,[[],["result",4]]],[11,"type_id","","",636,[[],["typeid",3]]],[11,"from","","",631,[[]]],[11,"borrow","","",631,[[]]],[11,"borrow_mut","","",631,[[]]],[11,"try_from","","",631,[[],["result",4]]],[11,"into","","",631,[[]]],[11,"try_into","","",631,[[],["result",4]]],[11,"type_id","","",631,[[],["typeid",3]]],[11,"from","","",632,[[]]],[11,"borrow","","",632,[[]]],[11,"borrow_mut","","",632,[[]]],[11,"try_from","","",632,[[],["result",4]]],[11,"into","","",632,[[]]],[11,"try_into","","",632,[[],["result",4]]],[11,"type_id","","",632,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::ctrlb","",643,[[]]],[11,"borrow","","",643,[[]]],[11,"borrow_mut","","",643,[[]]],[11,"try_from","","",643,[[],["result",4]]],[11,"into","","",643,[[]]],[11,"try_into","","",643,[[],["result",4]]],[11,"type_id","","",643,[[],["typeid",3]]],[11,"from","","",644,[[]]],[11,"borrow","","",644,[[]]],[11,"borrow_mut","","",644,[[]]],[11,"try_from","","",644,[[],["result",4]]],[11,"into","","",644,[[]]],[11,"try_into","","",644,[[],["result",4]]],[11,"type_id","","",644,[[],["typeid",3]]],[11,"from","","",646,[[]]],[11,"borrow","","",646,[[]]],[11,"borrow_mut","","",646,[[]]],[11,"try_from","","",646,[[],["result",4]]],[11,"into","","",646,[[]]],[11,"try_into","","",646,[[],["result",4]]],[11,"type_id","","",646,[[],["typeid",3]]],[11,"from","","",648,[[]]],[11,"borrow","","",648,[[]]],[11,"borrow_mut","","",648,[[]]],[11,"try_from","","",648,[[],["result",4]]],[11,"into","","",648,[[]]],[11,"try_into","","",648,[[],["result",4]]],[11,"type_id","","",648,[[],["typeid",3]]],[11,"from","","",649,[[]]],[11,"borrow","","",649,[[]]],[11,"borrow_mut","","",649,[[]]],[11,"try_from","","",649,[[],["result",4]]],[11,"into","","",649,[[]]],[11,"try_into","","",649,[[],["result",4]]],[11,"type_id","","",649,[[],["typeid",3]]],[11,"from","","",639,[[]]],[11,"borrow","","",639,[[]]],[11,"borrow_mut","","",639,[[]]],[11,"try_from","","",639,[[],["result",4]]],[11,"into","","",639,[[]]],[11,"try_into","","",639,[[],["result",4]]],[11,"type_id","","",639,[[],["typeid",3]]],[11,"from","","",640,[[]]],[11,"borrow","","",640,[[]]],[11,"borrow_mut","","",640,[[]]],[11,"try_from","","",640,[[],["result",4]]],[11,"into","","",640,[[]]],[11,"try_into","","",640,[[],["result",4]]],[11,"type_id","","",640,[[],["typeid",3]]],[11,"from","","",641,[[]]],[11,"borrow","","",641,[[]]],[11,"borrow_mut","","",641,[[]]],[11,"try_from","","",641,[[],["result",4]]],[11,"into","","",641,[[]]],[11,"try_into","","",641,[[],["result",4]]],[11,"type_id","","",641,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::param","",652,[[]]],[11,"borrow","","",652,[[]]],[11,"borrow_mut","","",652,[[]]],[11,"try_from","","",652,[[],["result",4]]],[11,"into","","",652,[[]]],[11,"try_into","","",652,[[],["result",4]]],[11,"type_id","","",652,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::intenclr","",655,[[]]],[11,"borrow","","",655,[[]]],[11,"borrow_mut","","",655,[[]]],[11,"try_from","","",655,[[],["result",4]]],[11,"into","","",655,[[]]],[11,"try_into","","",655,[[],["result",4]]],[11,"type_id","","",655,[[],["typeid",3]]],[11,"from","","",656,[[]]],[11,"borrow","","",656,[[]]],[11,"borrow_mut","","",656,[[]]],[11,"try_from","","",656,[[],["result",4]]],[11,"into","","",656,[[]]],[11,"try_into","","",656,[[],["result",4]]],[11,"type_id","","",656,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::intenset","",659,[[]]],[11,"borrow","","",659,[[]]],[11,"borrow_mut","","",659,[[]]],[11,"try_from","","",659,[[],["result",4]]],[11,"into","","",659,[[]]],[11,"try_into","","",659,[[],["result",4]]],[11,"type_id","","",659,[[],["typeid",3]]],[11,"from","","",660,[[]]],[11,"borrow","","",660,[[]]],[11,"borrow_mut","","",660,[[]]],[11,"try_from","","",660,[[],["result",4]]],[11,"into","","",660,[[]]],[11,"try_into","","",660,[[],["result",4]]],[11,"type_id","","",660,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::intflag","",663,[[]]],[11,"borrow","","",663,[[]]],[11,"borrow_mut","","",663,[[]]],[11,"try_from","","",663,[[],["result",4]]],[11,"into","","",663,[[]]],[11,"try_into","","",663,[[],["result",4]]],[11,"type_id","","",663,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::status","",666,[[]]],[11,"borrow","","",666,[[]]],[11,"borrow_mut","","",666,[[]]],[11,"try_from","","",666,[[],["result",4]]],[11,"into","","",666,[[]]],[11,"try_into","","",666,[[],["result",4]]],[11,"type_id","","",666,[[],["typeid",3]]],[11,"from","","",667,[[]]],[11,"borrow","","",667,[[]]],[11,"borrow_mut","","",667,[[]]],[11,"try_from","","",667,[[],["result",4]]],[11,"into","","",667,[[]]],[11,"try_into","","",667,[[],["result",4]]],[11,"type_id","","",667,[[],["typeid",3]]],[11,"from","","",668,[[]]],[11,"borrow","","",668,[[]]],[11,"borrow_mut","","",668,[[]]],[11,"try_from","","",668,[[],["result",4]]],[11,"into","","",668,[[]]],[11,"try_into","","",668,[[],["result",4]]],[11,"type_id","","",668,[[],["typeid",3]]],[11,"from","","",669,[[]]],[11,"borrow","","",669,[[]]],[11,"borrow_mut","","",669,[[]]],[11,"try_from","","",669,[[],["result",4]]],[11,"into","","",669,[[]]],[11,"try_into","","",669,[[],["result",4]]],[11,"type_id","","",669,[[],["typeid",3]]],[11,"from","atsamd11c::nvmctrl::addr","",672,[[]]],[11,"borrow","","",672,[[]]],[11,"borrow_mut","","",672,[[]]],[11,"try_from","","",672,[[],["result",4]]],[11,"into","","",672,[[]]],[11,"try_into","","",672,[[],["result",4]]],[11,"type_id","","",672,[[],["typeid",3]]],[11,"from","atsamd11c::pac0","",676,[[]]],[11,"borrow","","",676,[[]]],[11,"borrow_mut","","",676,[[]]],[11,"try_from","","",676,[[],["result",4]]],[11,"into","","",676,[[]]],[11,"try_into","","",676,[[],["result",4]]],[11,"type_id","","",676,[[],["typeid",3]]],[11,"from","atsamd11c::pac0::wpclr","",677,[[]]],[11,"borrow","","",677,[[]]],[11,"borrow_mut","","",677,[[]]],[11,"try_from","","",677,[[],["result",4]]],[11,"into","","",677,[[]]],[11,"try_into","","",677,[[],["result",4]]],[11,"type_id","","",677,[[],["typeid",3]]],[11,"from","atsamd11c::pac0::wpset","",680,[[]]],[11,"borrow","","",680,[[]]],[11,"borrow_mut","","",680,[[]]],[11,"try_from","","",680,[[],["result",4]]],[11,"into","","",680,[[]]],[11,"try_into","","",680,[[],["result",4]]],[11,"type_id","","",680,[[],["typeid",3]]],[11,"from","atsamd11c::pm","",683,[[]]],[11,"borrow","","",683,[[]]],[11,"borrow_mut","","",683,[[]]],[11,"try_from","","",683,[[],["result",4]]],[11,"into","","",683,[[]]],[11,"try_into","","",683,[[],["result",4]]],[11,"type_id","","",683,[[],["typeid",3]]],[11,"from","atsamd11c::pm::ctrl","",684,[[]]],[11,"borrow","","",684,[[]]],[11,"borrow_mut","","",684,[[]]],[11,"try_from","","",684,[[],["result",4]]],[11,"into","","",684,[[]]],[11,"try_into","","",684,[[],["result",4]]],[11,"type_id","","",684,[[],["typeid",3]]],[11,"from","","",685,[[]]],[11,"borrow","","",685,[[]]],[11,"borrow_mut","","",685,[[]]],[11,"try_from","","",685,[[],["result",4]]],[11,"into","","",685,[[]]],[11,"try_into","","",685,[[],["result",4]]],[11,"type_id","","",685,[[],["typeid",3]]],[11,"from","atsamd11c::pm::sleep","",690,[[]]],[11,"borrow","","",690,[[]]],[11,"borrow_mut","","",690,[[]]],[11,"try_from","","",690,[[],["result",4]]],[11,"into","","",690,[[]]],[11,"try_into","","",690,[[],["result",4]]],[11,"type_id","","",690,[[],["typeid",3]]],[11,"from","","",688,[[]]],[11,"borrow","","",688,[[]]],[11,"borrow_mut","","",688,[[]]],[11,"try_from","","",688,[[],["result",4]]],[11,"into","","",688,[[]]],[11,"try_into","","",688,[[],["result",4]]],[11,"type_id","","",688,[[],["typeid",3]]],[11,"from","atsamd11c::pm::extctrl","",693,[[]]],[11,"borrow","","",693,[[]]],[11,"borrow_mut","","",693,[[]]],[11,"try_from","","",693,[[],["result",4]]],[11,"into","","",693,[[]]],[11,"try_into","","",693,[[],["result",4]]],[11,"type_id","","",693,[[],["typeid",3]]],[11,"from","atsamd11c::pm::cpusel","",698,[[]]],[11,"borrow","","",698,[[]]],[11,"borrow_mut","","",698,[[]]],[11,"try_from","","",698,[[],["result",4]]],[11,"into","","",698,[[]]],[11,"try_into","","",698,[[],["result",4]]],[11,"type_id","","",698,[[],["typeid",3]]],[11,"from","","",696,[[]]],[11,"borrow","","",696,[[]]],[11,"borrow_mut","","",696,[[]]],[11,"try_from","","",696,[[],["result",4]]],[11,"into","","",696,[[]]],[11,"try_into","","",696,[[],["result",4]]],[11,"type_id","","",696,[[],["typeid",3]]],[11,"from","atsamd11c::pm::apbasel","",703,[[]]],[11,"borrow","","",703,[[]]],[11,"borrow_mut","","",703,[[]]],[11,"try_from","","",703,[[],["result",4]]],[11,"into","","",703,[[]]],[11,"try_into","","",703,[[],["result",4]]],[11,"type_id","","",703,[[],["typeid",3]]],[11,"from","","",701,[[]]],[11,"borrow","","",701,[[]]],[11,"borrow_mut","","",701,[[]]],[11,"try_from","","",701,[[],["result",4]]],[11,"into","","",701,[[]]],[11,"try_into","","",701,[[],["result",4]]],[11,"type_id","","",701,[[],["typeid",3]]],[11,"from","atsamd11c::pm::apbbsel","",708,[[]]],[11,"borrow","","",708,[[]]],[11,"borrow_mut","","",708,[[]]],[11,"try_from","","",708,[[],["result",4]]],[11,"into","","",708,[[]]],[11,"try_into","","",708,[[],["result",4]]],[11,"type_id","","",708,[[],["typeid",3]]],[11,"from","","",706,[[]]],[11,"borrow","","",706,[[]]],[11,"borrow_mut","","",706,[[]]],[11,"try_from","","",706,[[],["result",4]]],[11,"into","","",706,[[]]],[11,"try_into","","",706,[[],["result",4]]],[11,"type_id","","",706,[[],["typeid",3]]],[11,"from","atsamd11c::pm::apbcsel","",713,[[]]],[11,"borrow","","",713,[[]]],[11,"borrow_mut","","",713,[[]]],[11,"try_from","","",713,[[],["result",4]]],[11,"into","","",713,[[]]],[11,"try_into","","",713,[[],["result",4]]],[11,"type_id","","",713,[[],["typeid",3]]],[11,"from","","",711,[[]]],[11,"borrow","","",711,[[]]],[11,"borrow_mut","","",711,[[]]],[11,"try_from","","",711,[[],["result",4]]],[11,"into","","",711,[[]]],[11,"try_into","","",711,[[],["result",4]]],[11,"type_id","","",711,[[],["typeid",3]]],[11,"from","atsamd11c::pm::ahbmask","",716,[[]]],[11,"borrow","","",716,[[]]],[11,"borrow_mut","","",716,[[]]],[11,"try_from","","",716,[[],["result",4]]],[11,"into","","",716,[[]]],[11,"try_into","","",716,[[],["result",4]]],[11,"type_id","","",716,[[],["typeid",3]]],[11,"from","","",717,[[]]],[11,"borrow","","",717,[[]]],[11,"borrow_mut","","",717,[[]]],[11,"try_from","","",717,[[],["result",4]]],[11,"into","","",717,[[]]],[11,"try_into","","",717,[[],["result",4]]],[11,"type_id","","",717,[[],["typeid",3]]],[11,"from","","",718,[[]]],[11,"borrow","","",718,[[]]],[11,"borrow_mut","","",718,[[]]],[11,"try_from","","",718,[[],["result",4]]],[11,"into","","",718,[[]]],[11,"try_into","","",718,[[],["result",4]]],[11,"type_id","","",718,[[],["typeid",3]]],[11,"from","","",719,[[]]],[11,"borrow","","",719,[[]]],[11,"borrow_mut","","",719,[[]]],[11,"try_from","","",719,[[],["result",4]]],[11,"into","","",719,[[]]],[11,"try_into","","",719,[[],["result",4]]],[11,"type_id","","",719,[[],["typeid",3]]],[11,"from","","",720,[[]]],[11,"borrow","","",720,[[]]],[11,"borrow_mut","","",720,[[]]],[11,"try_from","","",720,[[],["result",4]]],[11,"into","","",720,[[]]],[11,"try_into","","",720,[[],["result",4]]],[11,"type_id","","",720,[[],["typeid",3]]],[11,"from","","",721,[[]]],[11,"borrow","","",721,[[]]],[11,"borrow_mut","","",721,[[]]],[11,"try_from","","",721,[[],["result",4]]],[11,"into","","",721,[[]]],[11,"try_into","","",721,[[],["result",4]]],[11,"type_id","","",721,[[],["typeid",3]]],[11,"from","","",722,[[]]],[11,"borrow","","",722,[[]]],[11,"borrow_mut","","",722,[[]]],[11,"try_from","","",722,[[],["result",4]]],[11,"into","","",722,[[]]],[11,"try_into","","",722,[[],["result",4]]],[11,"type_id","","",722,[[],["typeid",3]]],[11,"from","atsamd11c::pm::apbamask","",725,[[]]],[11,"borrow","","",725,[[]]],[11,"borrow_mut","","",725,[[]]],[11,"try_from","","",725,[[],["result",4]]],[11,"into","","",725,[[]]],[11,"try_into","","",725,[[],["result",4]]],[11,"type_id","","",725,[[],["typeid",3]]],[11,"from","","",726,[[]]],[11,"borrow","","",726,[[]]],[11,"borrow_mut","","",726,[[]]],[11,"try_from","","",726,[[],["result",4]]],[11,"into","","",726,[[]]],[11,"try_into","","",726,[[],["result",4]]],[11,"type_id","","",726,[[],["typeid",3]]],[11,"from","","",727,[[]]],[11,"borrow","","",727,[[]]],[11,"borrow_mut","","",727,[[]]],[11,"try_from","","",727,[[],["result",4]]],[11,"into","","",727,[[]]],[11,"try_into","","",727,[[],["result",4]]],[11,"type_id","","",727,[[],["typeid",3]]],[11,"from","","",728,[[]]],[11,"borrow","","",728,[[]]],[11,"borrow_mut","","",728,[[]]],[11,"try_from","","",728,[[],["result",4]]],[11,"into","","",728,[[]]],[11,"try_into","","",728,[[],["result",4]]],[11,"type_id","","",728,[[],["typeid",3]]],[11,"from","","",729,[[]]],[11,"borrow","","",729,[[]]],[11,"borrow_mut","","",729,[[]]],[11,"try_from","","",729,[[],["result",4]]],[11,"into","","",729,[[]]],[11,"try_into","","",729,[[],["result",4]]],[11,"type_id","","",729,[[],["typeid",3]]],[11,"from","","",730,[[]]],[11,"borrow","","",730,[[]]],[11,"borrow_mut","","",730,[[]]],[11,"try_from","","",730,[[],["result",4]]],[11,"into","","",730,[[]]],[11,"try_into","","",730,[[],["result",4]]],[11,"type_id","","",730,[[],["typeid",3]]],[11,"from","","",731,[[]]],[11,"borrow","","",731,[[]]],[11,"borrow_mut","","",731,[[]]],[11,"try_from","","",731,[[],["result",4]]],[11,"into","","",731,[[]]],[11,"try_into","","",731,[[],["result",4]]],[11,"type_id","","",731,[[],["typeid",3]]],[11,"from","atsamd11c::pm::apbbmask","",734,[[]]],[11,"borrow","","",734,[[]]],[11,"borrow_mut","","",734,[[]]],[11,"try_from","","",734,[[],["result",4]]],[11,"into","","",734,[[]]],[11,"try_into","","",734,[[],["result",4]]],[11,"type_id","","",734,[[],["typeid",3]]],[11,"from","","",735,[[]]],[11,"borrow","","",735,[[]]],[11,"borrow_mut","","",735,[[]]],[11,"try_from","","",735,[[],["result",4]]],[11,"into","","",735,[[]]],[11,"try_into","","",735,[[],["result",4]]],[11,"type_id","","",735,[[],["typeid",3]]],[11,"from","","",736,[[]]],[11,"borrow","","",736,[[]]],[11,"borrow_mut","","",736,[[]]],[11,"try_from","","",736,[[],["result",4]]],[11,"into","","",736,[[]]],[11,"try_into","","",736,[[],["result",4]]],[11,"type_id","","",736,[[],["typeid",3]]],[11,"from","","",737,[[]]],[11,"borrow","","",737,[[]]],[11,"borrow_mut","","",737,[[]]],[11,"try_from","","",737,[[],["result",4]]],[11,"into","","",737,[[]]],[11,"try_into","","",737,[[],["result",4]]],[11,"type_id","","",737,[[],["typeid",3]]],[11,"from","","",738,[[]]],[11,"borrow","","",738,[[]]],[11,"borrow_mut","","",738,[[]]],[11,"try_from","","",738,[[],["result",4]]],[11,"into","","",738,[[]]],[11,"try_into","","",738,[[],["result",4]]],[11,"type_id","","",738,[[],["typeid",3]]],[11,"from","","",739,[[]]],[11,"borrow","","",739,[[]]],[11,"borrow_mut","","",739,[[]]],[11,"try_from","","",739,[[],["result",4]]],[11,"into","","",739,[[]]],[11,"try_into","","",739,[[],["result",4]]],[11,"type_id","","",739,[[],["typeid",3]]],[11,"from","","",740,[[]]],[11,"borrow","","",740,[[]]],[11,"borrow_mut","","",740,[[]]],[11,"try_from","","",740,[[],["result",4]]],[11,"into","","",740,[[]]],[11,"try_into","","",740,[[],["result",4]]],[11,"type_id","","",740,[[],["typeid",3]]],[11,"from","atsamd11c::pm::apbcmask","",743,[[]]],[11,"borrow","","",743,[[]]],[11,"borrow_mut","","",743,[[]]],[11,"try_from","","",743,[[],["result",4]]],[11,"into","","",743,[[]]],[11,"try_into","","",743,[[],["result",4]]],[11,"type_id","","",743,[[],["typeid",3]]],[11,"from","","",744,[[]]],[11,"borrow","","",744,[[]]],[11,"borrow_mut","","",744,[[]]],[11,"try_from","","",744,[[],["result",4]]],[11,"into","","",744,[[]]],[11,"try_into","","",744,[[],["result",4]]],[11,"type_id","","",744,[[],["typeid",3]]],[11,"from","","",745,[[]]],[11,"borrow","","",745,[[]]],[11,"borrow_mut","","",745,[[]]],[11,"try_from","","",745,[[],["result",4]]],[11,"into","","",745,[[]]],[11,"try_into","","",745,[[],["result",4]]],[11,"type_id","","",745,[[],["typeid",3]]],[11,"from","","",746,[[]]],[11,"borrow","","",746,[[]]],[11,"borrow_mut","","",746,[[]]],[11,"try_from","","",746,[[],["result",4]]],[11,"into","","",746,[[]]],[11,"try_into","","",746,[[],["result",4]]],[11,"type_id","","",746,[[],["typeid",3]]],[11,"from","","",747,[[]]],[11,"borrow","","",747,[[]]],[11,"borrow_mut","","",747,[[]]],[11,"try_from","","",747,[[],["result",4]]],[11,"into","","",747,[[]]],[11,"try_into","","",747,[[],["result",4]]],[11,"type_id","","",747,[[],["typeid",3]]],[11,"from","","",748,[[]]],[11,"borrow","","",748,[[]]],[11,"borrow_mut","","",748,[[]]],[11,"try_from","","",748,[[],["result",4]]],[11,"into","","",748,[[]]],[11,"try_into","","",748,[[],["result",4]]],[11,"type_id","","",748,[[],["typeid",3]]],[11,"from","","",749,[[]]],[11,"borrow","","",749,[[]]],[11,"borrow_mut","","",749,[[]]],[11,"try_from","","",749,[[],["result",4]]],[11,"into","","",749,[[]]],[11,"try_into","","",749,[[],["result",4]]],[11,"type_id","","",749,[[],["typeid",3]]],[11,"from","","",750,[[]]],[11,"borrow","","",750,[[]]],[11,"borrow_mut","","",750,[[]]],[11,"try_from","","",750,[[],["result",4]]],[11,"into","","",750,[[]]],[11,"try_into","","",750,[[],["result",4]]],[11,"type_id","","",750,[[],["typeid",3]]],[11,"from","","",751,[[]]],[11,"borrow","","",751,[[]]],[11,"borrow_mut","","",751,[[]]],[11,"try_from","","",751,[[],["result",4]]],[11,"into","","",751,[[]]],[11,"try_into","","",751,[[],["result",4]]],[11,"type_id","","",751,[[],["typeid",3]]],[11,"from","","",752,[[]]],[11,"borrow","","",752,[[]]],[11,"borrow_mut","","",752,[[]]],[11,"try_from","","",752,[[],["result",4]]],[11,"into","","",752,[[]]],[11,"try_into","","",752,[[],["result",4]]],[11,"type_id","","",752,[[],["typeid",3]]],[11,"from","","",753,[[]]],[11,"borrow","","",753,[[]]],[11,"borrow_mut","","",753,[[]]],[11,"try_from","","",753,[[],["result",4]]],[11,"into","","",753,[[]]],[11,"try_into","","",753,[[],["result",4]]],[11,"type_id","","",753,[[],["typeid",3]]],[11,"from","atsamd11c::pm::intenclr","",756,[[]]],[11,"borrow","","",756,[[]]],[11,"borrow_mut","","",756,[[]]],[11,"try_from","","",756,[[],["result",4]]],[11,"into","","",756,[[]]],[11,"try_into","","",756,[[],["result",4]]],[11,"type_id","","",756,[[],["typeid",3]]],[11,"from","","",757,[[]]],[11,"borrow","","",757,[[]]],[11,"borrow_mut","","",757,[[]]],[11,"try_from","","",757,[[],["result",4]]],[11,"into","","",757,[[]]],[11,"try_into","","",757,[[],["result",4]]],[11,"type_id","","",757,[[],["typeid",3]]],[11,"from","atsamd11c::pm::intenset","",760,[[]]],[11,"borrow","","",760,[[]]],[11,"borrow_mut","","",760,[[]]],[11,"try_from","","",760,[[],["result",4]]],[11,"into","","",760,[[]]],[11,"try_into","","",760,[[],["result",4]]],[11,"type_id","","",760,[[],["typeid",3]]],[11,"from","","",761,[[]]],[11,"borrow","","",761,[[]]],[11,"borrow_mut","","",761,[[]]],[11,"try_from","","",761,[[],["result",4]]],[11,"into","","",761,[[]]],[11,"try_into","","",761,[[],["result",4]]],[11,"type_id","","",761,[[],["typeid",3]]],[11,"from","atsamd11c::pm::intflag","",764,[[]]],[11,"borrow","","",764,[[]]],[11,"borrow_mut","","",764,[[]]],[11,"try_from","","",764,[[],["result",4]]],[11,"into","","",764,[[]]],[11,"try_into","","",764,[[],["result",4]]],[11,"type_id","","",764,[[],["typeid",3]]],[11,"from","","",765,[[]]],[11,"borrow","","",765,[[]]],[11,"borrow_mut","","",765,[[]]],[11,"try_from","","",765,[[],["result",4]]],[11,"into","","",765,[[]]],[11,"try_into","","",765,[[],["result",4]]],[11,"type_id","","",765,[[],["typeid",3]]],[11,"from","atsamd11c::port","",769,[[]]],[11,"borrow","","",769,[[]]],[11,"borrow_mut","","",769,[[]]],[11,"try_from","","",769,[[],["result",4]]],[11,"into","","",769,[[]]],[11,"try_into","","",769,[[],["result",4]]],[11,"type_id","","",769,[[],["typeid",3]]],[11,"from","atsamd11c::port::dir","",770,[[]]],[11,"borrow","","",770,[[]]],[11,"borrow_mut","","",770,[[]]],[11,"try_from","","",770,[[],["result",4]]],[11,"into","","",770,[[]]],[11,"try_into","","",770,[[],["result",4]]],[11,"type_id","","",770,[[],["typeid",3]]],[11,"from","atsamd11c::port::dirclr","",773,[[]]],[11,"borrow","","",773,[[]]],[11,"borrow_mut","","",773,[[]]],[11,"try_from","","",773,[[],["result",4]]],[11,"into","","",773,[[]]],[11,"try_into","","",773,[[],["result",4]]],[11,"type_id","","",773,[[],["typeid",3]]],[11,"from","atsamd11c::port::dirset","",776,[[]]],[11,"borrow","","",776,[[]]],[11,"borrow_mut","","",776,[[]]],[11,"try_from","","",776,[[],["result",4]]],[11,"into","","",776,[[]]],[11,"try_into","","",776,[[],["result",4]]],[11,"type_id","","",776,[[],["typeid",3]]],[11,"from","atsamd11c::port::dirtgl","",779,[[]]],[11,"borrow","","",779,[[]]],[11,"borrow_mut","","",779,[[]]],[11,"try_from","","",779,[[],["result",4]]],[11,"into","","",779,[[]]],[11,"try_into","","",779,[[],["result",4]]],[11,"type_id","","",779,[[],["typeid",3]]],[11,"from","atsamd11c::port::out","",782,[[]]],[11,"borrow","","",782,[[]]],[11,"borrow_mut","","",782,[[]]],[11,"try_from","","",782,[[],["result",4]]],[11,"into","","",782,[[]]],[11,"try_into","","",782,[[],["result",4]]],[11,"type_id","","",782,[[],["typeid",3]]],[11,"from","atsamd11c::port::outclr","",785,[[]]],[11,"borrow","","",785,[[]]],[11,"borrow_mut","","",785,[[]]],[11,"try_from","","",785,[[],["result",4]]],[11,"into","","",785,[[]]],[11,"try_into","","",785,[[],["result",4]]],[11,"type_id","","",785,[[],["typeid",3]]],[11,"from","atsamd11c::port::outset","",788,[[]]],[11,"borrow","","",788,[[]]],[11,"borrow_mut","","",788,[[]]],[11,"try_from","","",788,[[],["result",4]]],[11,"into","","",788,[[]]],[11,"try_into","","",788,[[],["result",4]]],[11,"type_id","","",788,[[],["typeid",3]]],[11,"from","atsamd11c::port::outtgl","",791,[[]]],[11,"borrow","","",791,[[]]],[11,"borrow_mut","","",791,[[]]],[11,"try_from","","",791,[[],["result",4]]],[11,"into","","",791,[[]]],[11,"try_into","","",791,[[],["result",4]]],[11,"type_id","","",791,[[],["typeid",3]]],[11,"from","atsamd11c::port::ctrl","",795,[[]]],[11,"borrow","","",795,[[]]],[11,"borrow_mut","","",795,[[]]],[11,"try_from","","",795,[[],["result",4]]],[11,"into","","",795,[[]]],[11,"try_into","","",795,[[],["result",4]]],[11,"type_id","","",795,[[],["typeid",3]]],[11,"from","atsamd11c::port::wrconfig","",797,[[]]],[11,"borrow","","",797,[[]]],[11,"borrow_mut","","",797,[[]]],[11,"try_from","","",797,[[],["result",4]]],[11,"into","","",797,[[]]],[11,"try_into","","",797,[[],["result",4]]],[11,"type_id","","",797,[[],["typeid",3]]],[11,"from","","",798,[[]]],[11,"borrow","","",798,[[]]],[11,"borrow_mut","","",798,[[]]],[11,"try_from","","",798,[[],["result",4]]],[11,"into","","",798,[[]]],[11,"try_into","","",798,[[],["result",4]]],[11,"type_id","","",798,[[],["typeid",3]]],[11,"from","","",799,[[]]],[11,"borrow","","",799,[[]]],[11,"borrow_mut","","",799,[[]]],[11,"try_from","","",799,[[],["result",4]]],[11,"into","","",799,[[]]],[11,"try_into","","",799,[[],["result",4]]],[11,"type_id","","",799,[[],["typeid",3]]],[11,"from","","",800,[[]]],[11,"borrow","","",800,[[]]],[11,"borrow_mut","","",800,[[]]],[11,"try_from","","",800,[[],["result",4]]],[11,"into","","",800,[[]]],[11,"try_into","","",800,[[],["result",4]]],[11,"type_id","","",800,[[],["typeid",3]]],[11,"from","","",801,[[]]],[11,"borrow","","",801,[[]]],[11,"borrow_mut","","",801,[[]]],[11,"try_from","","",801,[[],["result",4]]],[11,"into","","",801,[[]]],[11,"try_into","","",801,[[],["result",4]]],[11,"type_id","","",801,[[],["typeid",3]]],[11,"from","","",802,[[]]],[11,"borrow","","",802,[[]]],[11,"borrow_mut","","",802,[[]]],[11,"try_from","","",802,[[],["result",4]]],[11,"into","","",802,[[]]],[11,"try_into","","",802,[[],["result",4]]],[11,"type_id","","",802,[[],["typeid",3]]],[11,"from","","",803,[[]]],[11,"borrow","","",803,[[]]],[11,"borrow_mut","","",803,[[]]],[11,"try_from","","",803,[[],["result",4]]],[11,"into","","",803,[[]]],[11,"try_into","","",803,[[],["result",4]]],[11,"type_id","","",803,[[],["typeid",3]]],[11,"from","","",804,[[]]],[11,"borrow","","",804,[[]]],[11,"borrow_mut","","",804,[[]]],[11,"try_from","","",804,[[],["result",4]]],[11,"into","","",804,[[]]],[11,"try_into","","",804,[[],["result",4]]],[11,"type_id","","",804,[[],["typeid",3]]],[11,"from","","",805,[[]]],[11,"borrow","","",805,[[]]],[11,"borrow_mut","","",805,[[]]],[11,"try_from","","",805,[[],["result",4]]],[11,"into","","",805,[[]]],[11,"try_into","","",805,[[],["result",4]]],[11,"type_id","","",805,[[],["typeid",3]]],[11,"from","atsamd11c::port::pmux0_","",810,[[]]],[11,"borrow","","",810,[[]]],[11,"borrow_mut","","",810,[[]]],[11,"try_from","","",810,[[],["result",4]]],[11,"into","","",810,[[]]],[11,"try_into","","",810,[[],["result",4]]],[11,"type_id","","",810,[[],["typeid",3]]],[11,"from","","",812,[[]]],[11,"borrow","","",812,[[]]],[11,"borrow_mut","","",812,[[]]],[11,"try_from","","",812,[[],["result",4]]],[11,"into","","",812,[[]]],[11,"try_into","","",812,[[],["result",4]]],[11,"type_id","","",812,[[],["typeid",3]]],[11,"from","","",807,[[]]],[11,"borrow","","",807,[[]]],[11,"borrow_mut","","",807,[[]]],[11,"try_from","","",807,[[],["result",4]]],[11,"into","","",807,[[]]],[11,"try_into","","",807,[[],["result",4]]],[11,"type_id","","",807,[[],["typeid",3]]],[11,"from","","",808,[[]]],[11,"borrow","","",808,[[]]],[11,"borrow_mut","","",808,[[]]],[11,"try_from","","",808,[[],["result",4]]],[11,"into","","",808,[[]]],[11,"try_into","","",808,[[],["result",4]]],[11,"type_id","","",808,[[],["typeid",3]]],[11,"from","atsamd11c::port::pincfg0_","",815,[[]]],[11,"borrow","","",815,[[]]],[11,"borrow_mut","","",815,[[]]],[11,"try_from","","",815,[[],["result",4]]],[11,"into","","",815,[[]]],[11,"try_into","","",815,[[],["result",4]]],[11,"type_id","","",815,[[],["typeid",3]]],[11,"from","","",816,[[]]],[11,"borrow","","",816,[[]]],[11,"borrow_mut","","",816,[[]]],[11,"try_from","","",816,[[],["result",4]]],[11,"into","","",816,[[]]],[11,"try_into","","",816,[[],["result",4]]],[11,"type_id","","",816,[[],["typeid",3]]],[11,"from","","",817,[[]]],[11,"borrow","","",817,[[]]],[11,"borrow_mut","","",817,[[]]],[11,"try_from","","",817,[[],["result",4]]],[11,"into","","",817,[[]]],[11,"try_into","","",817,[[],["result",4]]],[11,"type_id","","",817,[[],["typeid",3]]],[11,"from","","",818,[[]]],[11,"borrow","","",818,[[]]],[11,"borrow_mut","","",818,[[]]],[11,"try_from","","",818,[[],["result",4]]],[11,"into","","",818,[[]]],[11,"try_into","","",818,[[],["result",4]]],[11,"type_id","","",818,[[],["typeid",3]]],[11,"from","atsamd11c::rtc","",1018,[[]]],[11,"borrow","","",1018,[[]]],[11,"borrow_mut","","",1018,[[]]],[11,"try_from","","",1018,[[],["result",4]]],[11,"into","","",1018,[[]]],[11,"try_into","","",1018,[[],["result",4]]],[11,"type_id","","",1018,[[],["typeid",3]]],[11,"from","","",821,[[]]],[11,"borrow","","",821,[[]]],[11,"borrow_mut","","",821,[[]]],[11,"try_from","","",821,[[],["result",4]]],[11,"into","","",821,[[]]],[11,"try_into","","",821,[[],["result",4]]],[11,"type_id","","",821,[[],["typeid",3]]],[11,"from","","",822,[[]]],[11,"borrow","","",822,[[]]],[11,"borrow_mut","","",822,[[]]],[11,"try_from","","",822,[[],["result",4]]],[11,"into","","",822,[[]]],[11,"try_into","","",822,[[],["result",4]]],[11,"type_id","","",822,[[],["typeid",3]]],[11,"from","","",823,[[]]],[11,"borrow","","",823,[[]]],[11,"borrow_mut","","",823,[[]]],[11,"try_from","","",823,[[],["result",4]]],[11,"into","","",823,[[]]],[11,"try_into","","",823,[[],["result",4]]],[11,"type_id","","",823,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::ctrl","",826,[[]]],[11,"borrow","","",826,[[]]],[11,"borrow_mut","","",826,[[]]],[11,"try_from","","",826,[[],["result",4]]],[11,"into","","",826,[[]]],[11,"try_into","","",826,[[],["result",4]]],[11,"type_id","","",826,[[],["typeid",3]]],[11,"from","","",827,[[]]],[11,"borrow","","",827,[[]]],[11,"borrow_mut","","",827,[[]]],[11,"try_from","","",827,[[],["result",4]]],[11,"into","","",827,[[]]],[11,"try_into","","",827,[[],["result",4]]],[11,"type_id","","",827,[[],["typeid",3]]],[11,"from","","",829,[[]]],[11,"borrow","","",829,[[]]],[11,"borrow_mut","","",829,[[]]],[11,"try_from","","",829,[[],["result",4]]],[11,"into","","",829,[[]]],[11,"try_into","","",829,[[],["result",4]]],[11,"type_id","","",829,[[],["typeid",3]]],[11,"from","","",830,[[]]],[11,"borrow","","",830,[[]]],[11,"borrow_mut","","",830,[[]]],[11,"try_from","","",830,[[],["result",4]]],[11,"into","","",830,[[]]],[11,"try_into","","",830,[[],["result",4]]],[11,"type_id","","",830,[[],["typeid",3]]],[11,"from","","",832,[[]]],[11,"borrow","","",832,[[]]],[11,"borrow_mut","","",832,[[]]],[11,"try_from","","",832,[[],["result",4]]],[11,"into","","",832,[[]]],[11,"try_into","","",832,[[],["result",4]]],[11,"type_id","","",832,[[],["typeid",3]]],[11,"from","","",824,[[]]],[11,"borrow","","",824,[[]]],[11,"borrow_mut","","",824,[[]]],[11,"try_from","","",824,[[],["result",4]]],[11,"into","","",824,[[]]],[11,"try_into","","",824,[[],["result",4]]],[11,"type_id","","",824,[[],["typeid",3]]],[11,"from","","",825,[[]]],[11,"borrow","","",825,[[]]],[11,"borrow_mut","","",825,[[]]],[11,"try_from","","",825,[[],["result",4]]],[11,"into","","",825,[[]]],[11,"try_into","","",825,[[],["result",4]]],[11,"type_id","","",825,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::readreq","",835,[[]]],[11,"borrow","","",835,[[]]],[11,"borrow_mut","","",835,[[]]],[11,"try_from","","",835,[[],["result",4]]],[11,"into","","",835,[[]]],[11,"try_into","","",835,[[],["result",4]]],[11,"type_id","","",835,[[],["typeid",3]]],[11,"from","","",836,[[]]],[11,"borrow","","",836,[[]]],[11,"borrow_mut","","",836,[[]]],[11,"try_from","","",836,[[],["result",4]]],[11,"into","","",836,[[]]],[11,"try_into","","",836,[[],["result",4]]],[11,"type_id","","",836,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::evctrl","",839,[[]]],[11,"borrow","","",839,[[]]],[11,"borrow_mut","","",839,[[]]],[11,"try_from","","",839,[[],["result",4]]],[11,"into","","",839,[[]]],[11,"try_into","","",839,[[],["result",4]]],[11,"type_id","","",839,[[],["typeid",3]]],[11,"from","","",840,[[]]],[11,"borrow","","",840,[[]]],[11,"borrow_mut","","",840,[[]]],[11,"try_from","","",840,[[],["result",4]]],[11,"into","","",840,[[]]],[11,"try_into","","",840,[[],["result",4]]],[11,"type_id","","",840,[[],["typeid",3]]],[11,"from","","",841,[[]]],[11,"borrow","","",841,[[]]],[11,"borrow_mut","","",841,[[]]],[11,"try_from","","",841,[[],["result",4]]],[11,"into","","",841,[[]]],[11,"try_into","","",841,[[],["result",4]]],[11,"type_id","","",841,[[],["typeid",3]]],[11,"from","","",842,[[]]],[11,"borrow","","",842,[[]]],[11,"borrow_mut","","",842,[[]]],[11,"try_from","","",842,[[],["result",4]]],[11,"into","","",842,[[]]],[11,"try_into","","",842,[[],["result",4]]],[11,"type_id","","",842,[[],["typeid",3]]],[11,"from","","",843,[[]]],[11,"borrow","","",843,[[]]],[11,"borrow_mut","","",843,[[]]],[11,"try_from","","",843,[[],["result",4]]],[11,"into","","",843,[[]]],[11,"try_into","","",843,[[],["result",4]]],[11,"type_id","","",843,[[],["typeid",3]]],[11,"from","","",844,[[]]],[11,"borrow","","",844,[[]]],[11,"borrow_mut","","",844,[[]]],[11,"try_from","","",844,[[],["result",4]]],[11,"into","","",844,[[]]],[11,"try_into","","",844,[[],["result",4]]],[11,"type_id","","",844,[[],["typeid",3]]],[11,"from","","",845,[[]]],[11,"borrow","","",845,[[]]],[11,"borrow_mut","","",845,[[]]],[11,"try_from","","",845,[[],["result",4]]],[11,"into","","",845,[[]]],[11,"try_into","","",845,[[],["result",4]]],[11,"type_id","","",845,[[],["typeid",3]]],[11,"from","","",846,[[]]],[11,"borrow","","",846,[[]]],[11,"borrow_mut","","",846,[[]]],[11,"try_from","","",846,[[],["result",4]]],[11,"into","","",846,[[]]],[11,"try_into","","",846,[[],["result",4]]],[11,"type_id","","",846,[[],["typeid",3]]],[11,"from","","",847,[[]]],[11,"borrow","","",847,[[]]],[11,"borrow_mut","","",847,[[]]],[11,"try_from","","",847,[[],["result",4]]],[11,"into","","",847,[[]]],[11,"try_into","","",847,[[],["result",4]]],[11,"type_id","","",847,[[],["typeid",3]]],[11,"from","","",848,[[]]],[11,"borrow","","",848,[[]]],[11,"borrow_mut","","",848,[[]]],[11,"try_from","","",848,[[],["result",4]]],[11,"into","","",848,[[]]],[11,"try_into","","",848,[[],["result",4]]],[11,"type_id","","",848,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::intenclr","",851,[[]]],[11,"borrow","","",851,[[]]],[11,"borrow_mut","","",851,[[]]],[11,"try_from","","",851,[[],["result",4]]],[11,"into","","",851,[[]]],[11,"try_into","","",851,[[],["result",4]]],[11,"type_id","","",851,[[],["typeid",3]]],[11,"from","","",852,[[]]],[11,"borrow","","",852,[[]]],[11,"borrow_mut","","",852,[[]]],[11,"try_from","","",852,[[],["result",4]]],[11,"into","","",852,[[]]],[11,"try_into","","",852,[[],["result",4]]],[11,"type_id","","",852,[[],["typeid",3]]],[11,"from","","",853,[[]]],[11,"borrow","","",853,[[]]],[11,"borrow_mut","","",853,[[]]],[11,"try_from","","",853,[[],["result",4]]],[11,"into","","",853,[[]]],[11,"try_into","","",853,[[],["result",4]]],[11,"type_id","","",853,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::intenset","",856,[[]]],[11,"borrow","","",856,[[]]],[11,"borrow_mut","","",856,[[]]],[11,"try_from","","",856,[[],["result",4]]],[11,"into","","",856,[[]]],[11,"try_into","","",856,[[],["result",4]]],[11,"type_id","","",856,[[],["typeid",3]]],[11,"from","","",857,[[]]],[11,"borrow","","",857,[[]]],[11,"borrow_mut","","",857,[[]]],[11,"try_from","","",857,[[],["result",4]]],[11,"into","","",857,[[]]],[11,"try_into","","",857,[[],["result",4]]],[11,"type_id","","",857,[[],["typeid",3]]],[11,"from","","",858,[[]]],[11,"borrow","","",858,[[]]],[11,"borrow_mut","","",858,[[]]],[11,"try_from","","",858,[[],["result",4]]],[11,"into","","",858,[[]]],[11,"try_into","","",858,[[],["result",4]]],[11,"type_id","","",858,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::intflag","",861,[[]]],[11,"borrow","","",861,[[]]],[11,"borrow_mut","","",861,[[]]],[11,"try_from","","",861,[[],["result",4]]],[11,"into","","",861,[[]]],[11,"try_into","","",861,[[],["result",4]]],[11,"type_id","","",861,[[],["typeid",3]]],[11,"from","","",862,[[]]],[11,"borrow","","",862,[[]]],[11,"borrow_mut","","",862,[[]]],[11,"try_from","","",862,[[],["result",4]]],[11,"into","","",862,[[]]],[11,"try_into","","",862,[[],["result",4]]],[11,"type_id","","",862,[[],["typeid",3]]],[11,"from","","",863,[[]]],[11,"borrow","","",863,[[]]],[11,"borrow_mut","","",863,[[]]],[11,"try_from","","",863,[[],["result",4]]],[11,"into","","",863,[[]]],[11,"try_into","","",863,[[],["result",4]]],[11,"type_id","","",863,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::dbgctrl","",867,[[]]],[11,"borrow","","",867,[[]]],[11,"borrow_mut","","",867,[[]]],[11,"try_from","","",867,[[],["result",4]]],[11,"into","","",867,[[]]],[11,"try_into","","",867,[[],["result",4]]],[11,"type_id","","",867,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::freqcorr","",870,[[]]],[11,"borrow","","",870,[[]]],[11,"borrow_mut","","",870,[[]]],[11,"try_from","","",870,[[],["result",4]]],[11,"into","","",870,[[]]],[11,"try_into","","",870,[[],["result",4]]],[11,"type_id","","",870,[[],["typeid",3]]],[11,"from","","",871,[[]]],[11,"borrow","","",871,[[]]],[11,"borrow_mut","","",871,[[]]],[11,"try_from","","",871,[[],["result",4]]],[11,"into","","",871,[[]]],[11,"try_into","","",871,[[],["result",4]]],[11,"type_id","","",871,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::count","",874,[[]]],[11,"borrow","","",874,[[]]],[11,"borrow_mut","","",874,[[]]],[11,"try_from","","",874,[[],["result",4]]],[11,"into","","",874,[[]]],[11,"try_into","","",874,[[],["result",4]]],[11,"type_id","","",874,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode0::comp","",877,[[]]],[11,"borrow","","",877,[[]]],[11,"borrow_mut","","",877,[[]]],[11,"try_from","","",877,[[],["result",4]]],[11,"into","","",877,[[]]],[11,"try_into","","",877,[[],["result",4]]],[11,"type_id","","",877,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::ctrl","",882,[[]]],[11,"borrow","","",882,[[]]],[11,"borrow_mut","","",882,[[]]],[11,"try_from","","",882,[[],["result",4]]],[11,"into","","",882,[[]]],[11,"try_into","","",882,[[],["result",4]]],[11,"type_id","","",882,[[],["typeid",3]]],[11,"from","","",883,[[]]],[11,"borrow","","",883,[[]]],[11,"borrow_mut","","",883,[[]]],[11,"try_from","","",883,[[],["result",4]]],[11,"into","","",883,[[]]],[11,"try_into","","",883,[[],["result",4]]],[11,"type_id","","",883,[[],["typeid",3]]],[11,"from","","",885,[[]]],[11,"borrow","","",885,[[]]],[11,"borrow_mut","","",885,[[]]],[11,"try_from","","",885,[[],["result",4]]],[11,"into","","",885,[[]]],[11,"try_into","","",885,[[],["result",4]]],[11,"type_id","","",885,[[],["typeid",3]]],[11,"from","","",887,[[]]],[11,"borrow","","",887,[[]]],[11,"borrow_mut","","",887,[[]]],[11,"try_from","","",887,[[],["result",4]]],[11,"into","","",887,[[]]],[11,"try_into","","",887,[[],["result",4]]],[11,"type_id","","",887,[[],["typeid",3]]],[11,"from","","",880,[[]]],[11,"borrow","","",880,[[]]],[11,"borrow_mut","","",880,[[]]],[11,"try_from","","",880,[[],["result",4]]],[11,"into","","",880,[[]]],[11,"try_into","","",880,[[],["result",4]]],[11,"type_id","","",880,[[],["typeid",3]]],[11,"from","","",881,[[]]],[11,"borrow","","",881,[[]]],[11,"borrow_mut","","",881,[[]]],[11,"try_from","","",881,[[],["result",4]]],[11,"into","","",881,[[]]],[11,"try_into","","",881,[[],["result",4]]],[11,"type_id","","",881,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::readreq","",890,[[]]],[11,"borrow","","",890,[[]]],[11,"borrow_mut","","",890,[[]]],[11,"try_from","","",890,[[],["result",4]]],[11,"into","","",890,[[]]],[11,"try_into","","",890,[[],["result",4]]],[11,"type_id","","",890,[[],["typeid",3]]],[11,"from","","",891,[[]]],[11,"borrow","","",891,[[]]],[11,"borrow_mut","","",891,[[]]],[11,"try_from","","",891,[[],["result",4]]],[11,"into","","",891,[[]]],[11,"try_into","","",891,[[],["result",4]]],[11,"type_id","","",891,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::evctrl","",894,[[]]],[11,"borrow","","",894,[[]]],[11,"borrow_mut","","",894,[[]]],[11,"try_from","","",894,[[],["result",4]]],[11,"into","","",894,[[]]],[11,"try_into","","",894,[[],["result",4]]],[11,"type_id","","",894,[[],["typeid",3]]],[11,"from","","",895,[[]]],[11,"borrow","","",895,[[]]],[11,"borrow_mut","","",895,[[]]],[11,"try_from","","",895,[[],["result",4]]],[11,"into","","",895,[[]]],[11,"try_into","","",895,[[],["result",4]]],[11,"type_id","","",895,[[],["typeid",3]]],[11,"from","","",896,[[]]],[11,"borrow","","",896,[[]]],[11,"borrow_mut","","",896,[[]]],[11,"try_from","","",896,[[],["result",4]]],[11,"into","","",896,[[]]],[11,"try_into","","",896,[[],["result",4]]],[11,"type_id","","",896,[[],["typeid",3]]],[11,"from","","",897,[[]]],[11,"borrow","","",897,[[]]],[11,"borrow_mut","","",897,[[]]],[11,"try_from","","",897,[[],["result",4]]],[11,"into","","",897,[[]]],[11,"try_into","","",897,[[],["result",4]]],[11,"type_id","","",897,[[],["typeid",3]]],[11,"from","","",898,[[]]],[11,"borrow","","",898,[[]]],[11,"borrow_mut","","",898,[[]]],[11,"try_from","","",898,[[],["result",4]]],[11,"into","","",898,[[]]],[11,"try_into","","",898,[[],["result",4]]],[11,"type_id","","",898,[[],["typeid",3]]],[11,"from","","",899,[[]]],[11,"borrow","","",899,[[]]],[11,"borrow_mut","","",899,[[]]],[11,"try_from","","",899,[[],["result",4]]],[11,"into","","",899,[[]]],[11,"try_into","","",899,[[],["result",4]]],[11,"type_id","","",899,[[],["typeid",3]]],[11,"from","","",900,[[]]],[11,"borrow","","",900,[[]]],[11,"borrow_mut","","",900,[[]]],[11,"try_from","","",900,[[],["result",4]]],[11,"into","","",900,[[]]],[11,"try_into","","",900,[[],["result",4]]],[11,"type_id","","",900,[[],["typeid",3]]],[11,"from","","",901,[[]]],[11,"borrow","","",901,[[]]],[11,"borrow_mut","","",901,[[]]],[11,"try_from","","",901,[[],["result",4]]],[11,"into","","",901,[[]]],[11,"try_into","","",901,[[],["result",4]]],[11,"type_id","","",901,[[],["typeid",3]]],[11,"from","","",902,[[]]],[11,"borrow","","",902,[[]]],[11,"borrow_mut","","",902,[[]]],[11,"try_from","","",902,[[],["result",4]]],[11,"into","","",902,[[]]],[11,"try_into","","",902,[[],["result",4]]],[11,"type_id","","",902,[[],["typeid",3]]],[11,"from","","",903,[[]]],[11,"borrow","","",903,[[]]],[11,"borrow_mut","","",903,[[]]],[11,"try_from","","",903,[[],["result",4]]],[11,"into","","",903,[[]]],[11,"try_into","","",903,[[],["result",4]]],[11,"type_id","","",903,[[],["typeid",3]]],[11,"from","","",904,[[]]],[11,"borrow","","",904,[[]]],[11,"borrow_mut","","",904,[[]]],[11,"try_from","","",904,[[],["result",4]]],[11,"into","","",904,[[]]],[11,"try_into","","",904,[[],["result",4]]],[11,"type_id","","",904,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::intenclr","",907,[[]]],[11,"borrow","","",907,[[]]],[11,"borrow_mut","","",907,[[]]],[11,"try_from","","",907,[[],["result",4]]],[11,"into","","",907,[[]]],[11,"try_into","","",907,[[],["result",4]]],[11,"type_id","","",907,[[],["typeid",3]]],[11,"from","","",908,[[]]],[11,"borrow","","",908,[[]]],[11,"borrow_mut","","",908,[[]]],[11,"try_from","","",908,[[],["result",4]]],[11,"into","","",908,[[]]],[11,"try_into","","",908,[[],["result",4]]],[11,"type_id","","",908,[[],["typeid",3]]],[11,"from","","",909,[[]]],[11,"borrow","","",909,[[]]],[11,"borrow_mut","","",909,[[]]],[11,"try_from","","",909,[[],["result",4]]],[11,"into","","",909,[[]]],[11,"try_into","","",909,[[],["result",4]]],[11,"type_id","","",909,[[],["typeid",3]]],[11,"from","","",910,[[]]],[11,"borrow","","",910,[[]]],[11,"borrow_mut","","",910,[[]]],[11,"try_from","","",910,[[],["result",4]]],[11,"into","","",910,[[]]],[11,"try_into","","",910,[[],["result",4]]],[11,"type_id","","",910,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::intenset","",913,[[]]],[11,"borrow","","",913,[[]]],[11,"borrow_mut","","",913,[[]]],[11,"try_from","","",913,[[],["result",4]]],[11,"into","","",913,[[]]],[11,"try_into","","",913,[[],["result",4]]],[11,"type_id","","",913,[[],["typeid",3]]],[11,"from","","",914,[[]]],[11,"borrow","","",914,[[]]],[11,"borrow_mut","","",914,[[]]],[11,"try_from","","",914,[[],["result",4]]],[11,"into","","",914,[[]]],[11,"try_into","","",914,[[],["result",4]]],[11,"type_id","","",914,[[],["typeid",3]]],[11,"from","","",915,[[]]],[11,"borrow","","",915,[[]]],[11,"borrow_mut","","",915,[[]]],[11,"try_from","","",915,[[],["result",4]]],[11,"into","","",915,[[]]],[11,"try_into","","",915,[[],["result",4]]],[11,"type_id","","",915,[[],["typeid",3]]],[11,"from","","",916,[[]]],[11,"borrow","","",916,[[]]],[11,"borrow_mut","","",916,[[]]],[11,"try_from","","",916,[[],["result",4]]],[11,"into","","",916,[[]]],[11,"try_into","","",916,[[],["result",4]]],[11,"type_id","","",916,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::intflag","",919,[[]]],[11,"borrow","","",919,[[]]],[11,"borrow_mut","","",919,[[]]],[11,"try_from","","",919,[[],["result",4]]],[11,"into","","",919,[[]]],[11,"try_into","","",919,[[],["result",4]]],[11,"type_id","","",919,[[],["typeid",3]]],[11,"from","","",920,[[]]],[11,"borrow","","",920,[[]]],[11,"borrow_mut","","",920,[[]]],[11,"try_from","","",920,[[],["result",4]]],[11,"into","","",920,[[]]],[11,"try_into","","",920,[[],["result",4]]],[11,"type_id","","",920,[[],["typeid",3]]],[11,"from","","",921,[[]]],[11,"borrow","","",921,[[]]],[11,"borrow_mut","","",921,[[]]],[11,"try_from","","",921,[[],["result",4]]],[11,"into","","",921,[[]]],[11,"try_into","","",921,[[],["result",4]]],[11,"type_id","","",921,[[],["typeid",3]]],[11,"from","","",922,[[]]],[11,"borrow","","",922,[[]]],[11,"borrow_mut","","",922,[[]]],[11,"try_from","","",922,[[],["result",4]]],[11,"into","","",922,[[]]],[11,"try_into","","",922,[[],["result",4]]],[11,"type_id","","",922,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::dbgctrl","",926,[[]]],[11,"borrow","","",926,[[]]],[11,"borrow_mut","","",926,[[]]],[11,"try_from","","",926,[[],["result",4]]],[11,"into","","",926,[[]]],[11,"try_into","","",926,[[],["result",4]]],[11,"type_id","","",926,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::freqcorr","",929,[[]]],[11,"borrow","","",929,[[]]],[11,"borrow_mut","","",929,[[]]],[11,"try_from","","",929,[[],["result",4]]],[11,"into","","",929,[[]]],[11,"try_into","","",929,[[],["result",4]]],[11,"type_id","","",929,[[],["typeid",3]]],[11,"from","","",930,[[]]],[11,"borrow","","",930,[[]]],[11,"borrow_mut","","",930,[[]]],[11,"try_from","","",930,[[],["result",4]]],[11,"into","","",930,[[]]],[11,"try_into","","",930,[[],["result",4]]],[11,"type_id","","",930,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::count","",933,[[]]],[11,"borrow","","",933,[[]]],[11,"borrow_mut","","",933,[[]]],[11,"try_from","","",933,[[],["result",4]]],[11,"into","","",933,[[]]],[11,"try_into","","",933,[[],["result",4]]],[11,"type_id","","",933,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::per","",936,[[]]],[11,"borrow","","",936,[[]]],[11,"borrow_mut","","",936,[[]]],[11,"try_from","","",936,[[],["result",4]]],[11,"into","","",936,[[]]],[11,"try_into","","",936,[[],["result",4]]],[11,"type_id","","",936,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode1::comp","",939,[[]]],[11,"borrow","","",939,[[]]],[11,"borrow_mut","","",939,[[]]],[11,"try_from","","",939,[[],["result",4]]],[11,"into","","",939,[[]]],[11,"try_into","","",939,[[],["result",4]]],[11,"type_id","","",939,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::ctrl","",944,[[]]],[11,"borrow","","",944,[[]]],[11,"borrow_mut","","",944,[[]]],[11,"try_from","","",944,[[],["result",4]]],[11,"into","","",944,[[]]],[11,"try_into","","",944,[[],["result",4]]],[11,"type_id","","",944,[[],["typeid",3]]],[11,"from","","",945,[[]]],[11,"borrow","","",945,[[]]],[11,"borrow_mut","","",945,[[]]],[11,"try_from","","",945,[[],["result",4]]],[11,"into","","",945,[[]]],[11,"try_into","","",945,[[],["result",4]]],[11,"type_id","","",945,[[],["typeid",3]]],[11,"from","","",947,[[]]],[11,"borrow","","",947,[[]]],[11,"borrow_mut","","",947,[[]]],[11,"try_from","","",947,[[],["result",4]]],[11,"into","","",947,[[]]],[11,"try_into","","",947,[[],["result",4]]],[11,"type_id","","",947,[[],["typeid",3]]],[11,"from","","",948,[[]]],[11,"borrow","","",948,[[]]],[11,"borrow_mut","","",948,[[]]],[11,"try_from","","",948,[[],["result",4]]],[11,"into","","",948,[[]]],[11,"try_into","","",948,[[],["result",4]]],[11,"type_id","","",948,[[],["typeid",3]]],[11,"from","","",949,[[]]],[11,"borrow","","",949,[[]]],[11,"borrow_mut","","",949,[[]]],[11,"try_from","","",949,[[],["result",4]]],[11,"into","","",949,[[]]],[11,"try_into","","",949,[[],["result",4]]],[11,"type_id","","",949,[[],["typeid",3]]],[11,"from","","",951,[[]]],[11,"borrow","","",951,[[]]],[11,"borrow_mut","","",951,[[]]],[11,"try_from","","",951,[[],["result",4]]],[11,"into","","",951,[[]]],[11,"try_into","","",951,[[],["result",4]]],[11,"type_id","","",951,[[],["typeid",3]]],[11,"from","","",942,[[]]],[11,"borrow","","",942,[[]]],[11,"borrow_mut","","",942,[[]]],[11,"try_from","","",942,[[],["result",4]]],[11,"into","","",942,[[]]],[11,"try_into","","",942,[[],["result",4]]],[11,"type_id","","",942,[[],["typeid",3]]],[11,"from","","",943,[[]]],[11,"borrow","","",943,[[]]],[11,"borrow_mut","","",943,[[]]],[11,"try_from","","",943,[[],["result",4]]],[11,"into","","",943,[[]]],[11,"try_into","","",943,[[],["result",4]]],[11,"type_id","","",943,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::readreq","",954,[[]]],[11,"borrow","","",954,[[]]],[11,"borrow_mut","","",954,[[]]],[11,"try_from","","",954,[[],["result",4]]],[11,"into","","",954,[[]]],[11,"try_into","","",954,[[],["result",4]]],[11,"type_id","","",954,[[],["typeid",3]]],[11,"from","","",955,[[]]],[11,"borrow","","",955,[[]]],[11,"borrow_mut","","",955,[[]]],[11,"try_from","","",955,[[],["result",4]]],[11,"into","","",955,[[]]],[11,"try_into","","",955,[[],["result",4]]],[11,"type_id","","",955,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::evctrl","",958,[[]]],[11,"borrow","","",958,[[]]],[11,"borrow_mut","","",958,[[]]],[11,"try_from","","",958,[[],["result",4]]],[11,"into","","",958,[[]]],[11,"try_into","","",958,[[],["result",4]]],[11,"type_id","","",958,[[],["typeid",3]]],[11,"from","","",959,[[]]],[11,"borrow","","",959,[[]]],[11,"borrow_mut","","",959,[[]]],[11,"try_from","","",959,[[],["result",4]]],[11,"into","","",959,[[]]],[11,"try_into","","",959,[[],["result",4]]],[11,"type_id","","",959,[[],["typeid",3]]],[11,"from","","",960,[[]]],[11,"borrow","","",960,[[]]],[11,"borrow_mut","","",960,[[]]],[11,"try_from","","",960,[[],["result",4]]],[11,"into","","",960,[[]]],[11,"try_into","","",960,[[],["result",4]]],[11,"type_id","","",960,[[],["typeid",3]]],[11,"from","","",961,[[]]],[11,"borrow","","",961,[[]]],[11,"borrow_mut","","",961,[[]]],[11,"try_from","","",961,[[],["result",4]]],[11,"into","","",961,[[]]],[11,"try_into","","",961,[[],["result",4]]],[11,"type_id","","",961,[[],["typeid",3]]],[11,"from","","",962,[[]]],[11,"borrow","","",962,[[]]],[11,"borrow_mut","","",962,[[]]],[11,"try_from","","",962,[[],["result",4]]],[11,"into","","",962,[[]]],[11,"try_into","","",962,[[],["result",4]]],[11,"type_id","","",962,[[],["typeid",3]]],[11,"from","","",963,[[]]],[11,"borrow","","",963,[[]]],[11,"borrow_mut","","",963,[[]]],[11,"try_from","","",963,[[],["result",4]]],[11,"into","","",963,[[]]],[11,"try_into","","",963,[[],["result",4]]],[11,"type_id","","",963,[[],["typeid",3]]],[11,"from","","",964,[[]]],[11,"borrow","","",964,[[]]],[11,"borrow_mut","","",964,[[]]],[11,"try_from","","",964,[[],["result",4]]],[11,"into","","",964,[[]]],[11,"try_into","","",964,[[],["result",4]]],[11,"type_id","","",964,[[],["typeid",3]]],[11,"from","","",965,[[]]],[11,"borrow","","",965,[[]]],[11,"borrow_mut","","",965,[[]]],[11,"try_from","","",965,[[],["result",4]]],[11,"into","","",965,[[]]],[11,"try_into","","",965,[[],["result",4]]],[11,"type_id","","",965,[[],["typeid",3]]],[11,"from","","",966,[[]]],[11,"borrow","","",966,[[]]],[11,"borrow_mut","","",966,[[]]],[11,"try_from","","",966,[[],["result",4]]],[11,"into","","",966,[[]]],[11,"try_into","","",966,[[],["result",4]]],[11,"type_id","","",966,[[],["typeid",3]]],[11,"from","","",967,[[]]],[11,"borrow","","",967,[[]]],[11,"borrow_mut","","",967,[[]]],[11,"try_from","","",967,[[],["result",4]]],[11,"into","","",967,[[]]],[11,"try_into","","",967,[[],["result",4]]],[11,"type_id","","",967,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::intenclr","",970,[[]]],[11,"borrow","","",970,[[]]],[11,"borrow_mut","","",970,[[]]],[11,"try_from","","",970,[[],["result",4]]],[11,"into","","",970,[[]]],[11,"try_into","","",970,[[],["result",4]]],[11,"type_id","","",970,[[],["typeid",3]]],[11,"from","","",971,[[]]],[11,"borrow","","",971,[[]]],[11,"borrow_mut","","",971,[[]]],[11,"try_from","","",971,[[],["result",4]]],[11,"into","","",971,[[]]],[11,"try_into","","",971,[[],["result",4]]],[11,"type_id","","",971,[[],["typeid",3]]],[11,"from","","",972,[[]]],[11,"borrow","","",972,[[]]],[11,"borrow_mut","","",972,[[]]],[11,"try_from","","",972,[[],["result",4]]],[11,"into","","",972,[[]]],[11,"try_into","","",972,[[],["result",4]]],[11,"type_id","","",972,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::intenset","",975,[[]]],[11,"borrow","","",975,[[]]],[11,"borrow_mut","","",975,[[]]],[11,"try_from","","",975,[[],["result",4]]],[11,"into","","",975,[[]]],[11,"try_into","","",975,[[],["result",4]]],[11,"type_id","","",975,[[],["typeid",3]]],[11,"from","","",976,[[]]],[11,"borrow","","",976,[[]]],[11,"borrow_mut","","",976,[[]]],[11,"try_from","","",976,[[],["result",4]]],[11,"into","","",976,[[]]],[11,"try_into","","",976,[[],["result",4]]],[11,"type_id","","",976,[[],["typeid",3]]],[11,"from","","",977,[[]]],[11,"borrow","","",977,[[]]],[11,"borrow_mut","","",977,[[]]],[11,"try_from","","",977,[[],["result",4]]],[11,"into","","",977,[[]]],[11,"try_into","","",977,[[],["result",4]]],[11,"type_id","","",977,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::intflag","",980,[[]]],[11,"borrow","","",980,[[]]],[11,"borrow_mut","","",980,[[]]],[11,"try_from","","",980,[[],["result",4]]],[11,"into","","",980,[[]]],[11,"try_into","","",980,[[],["result",4]]],[11,"type_id","","",980,[[],["typeid",3]]],[11,"from","","",981,[[]]],[11,"borrow","","",981,[[]]],[11,"borrow_mut","","",981,[[]]],[11,"try_from","","",981,[[],["result",4]]],[11,"into","","",981,[[]]],[11,"try_into","","",981,[[],["result",4]]],[11,"type_id","","",981,[[],["typeid",3]]],[11,"from","","",982,[[]]],[11,"borrow","","",982,[[]]],[11,"borrow_mut","","",982,[[]]],[11,"try_from","","",982,[[],["result",4]]],[11,"into","","",982,[[]]],[11,"try_into","","",982,[[],["result",4]]],[11,"type_id","","",982,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::dbgctrl","",986,[[]]],[11,"borrow","","",986,[[]]],[11,"borrow_mut","","",986,[[]]],[11,"try_from","","",986,[[],["result",4]]],[11,"into","","",986,[[]]],[11,"try_into","","",986,[[],["result",4]]],[11,"type_id","","",986,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::freqcorr","",989,[[]]],[11,"borrow","","",989,[[]]],[11,"borrow_mut","","",989,[[]]],[11,"try_from","","",989,[[],["result",4]]],[11,"into","","",989,[[]]],[11,"try_into","","",989,[[],["result",4]]],[11,"type_id","","",989,[[],["typeid",3]]],[11,"from","","",990,[[]]],[11,"borrow","","",990,[[]]],[11,"borrow_mut","","",990,[[]]],[11,"try_from","","",990,[[],["result",4]]],[11,"into","","",990,[[]]],[11,"try_into","","",990,[[],["result",4]]],[11,"type_id","","",990,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::clock","",994,[[]]],[11,"borrow","","",994,[[]]],[11,"borrow_mut","","",994,[[]]],[11,"try_from","","",994,[[],["result",4]]],[11,"into","","",994,[[]]],[11,"try_into","","",994,[[],["result",4]]],[11,"type_id","","",994,[[],["typeid",3]]],[11,"from","","",995,[[]]],[11,"borrow","","",995,[[]]],[11,"borrow_mut","","",995,[[]]],[11,"try_from","","",995,[[],["result",4]]],[11,"into","","",995,[[]]],[11,"try_into","","",995,[[],["result",4]]],[11,"type_id","","",995,[[],["typeid",3]]],[11,"from","","",997,[[]]],[11,"borrow","","",997,[[]]],[11,"borrow_mut","","",997,[[]]],[11,"try_from","","",997,[[],["result",4]]],[11,"into","","",997,[[]]],[11,"try_into","","",997,[[],["result",4]]],[11,"type_id","","",997,[[],["typeid",3]]],[11,"from","","",998,[[]]],[11,"borrow","","",998,[[]]],[11,"borrow_mut","","",998,[[]]],[11,"try_from","","",998,[[],["result",4]]],[11,"into","","",998,[[]]],[11,"try_into","","",998,[[],["result",4]]],[11,"type_id","","",998,[[],["typeid",3]]],[11,"from","","",999,[[]]],[11,"borrow","","",999,[[]]],[11,"borrow_mut","","",999,[[]]],[11,"try_from","","",999,[[],["result",4]]],[11,"into","","",999,[[]]],[11,"try_into","","",999,[[],["result",4]]],[11,"type_id","","",999,[[],["typeid",3]]],[11,"from","","",1000,[[]]],[11,"borrow","","",1000,[[]]],[11,"borrow_mut","","",1000,[[]]],[11,"try_from","","",1000,[[],["result",4]]],[11,"into","","",1000,[[]]],[11,"try_into","","",1000,[[],["result",4]]],[11,"type_id","","",1000,[[],["typeid",3]]],[11,"from","","",993,[[]]],[11,"borrow","","",993,[[]]],[11,"borrow_mut","","",993,[[]]],[11,"try_from","","",993,[[],["result",4]]],[11,"into","","",993,[[]]],[11,"try_into","","",993,[[],["result",4]]],[11,"type_id","","",993,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::alarm","",1004,[[]]],[11,"borrow","","",1004,[[]]],[11,"borrow_mut","","",1004,[[]]],[11,"try_from","","",1004,[[],["result",4]]],[11,"into","","",1004,[[]]],[11,"try_into","","",1004,[[],["result",4]]],[11,"type_id","","",1004,[[],["typeid",3]]],[11,"from","","",1005,[[]]],[11,"borrow","","",1005,[[]]],[11,"borrow_mut","","",1005,[[]]],[11,"try_from","","",1005,[[],["result",4]]],[11,"into","","",1005,[[]]],[11,"try_into","","",1005,[[],["result",4]]],[11,"type_id","","",1005,[[],["typeid",3]]],[11,"from","","",1007,[[]]],[11,"borrow","","",1007,[[]]],[11,"borrow_mut","","",1007,[[]]],[11,"try_from","","",1007,[[],["result",4]]],[11,"into","","",1007,[[]]],[11,"try_into","","",1007,[[],["result",4]]],[11,"type_id","","",1007,[[],["typeid",3]]],[11,"from","","",1008,[[]]],[11,"borrow","","",1008,[[]]],[11,"borrow_mut","","",1008,[[]]],[11,"try_from","","",1008,[[],["result",4]]],[11,"into","","",1008,[[]]],[11,"try_into","","",1008,[[],["result",4]]],[11,"type_id","","",1008,[[],["typeid",3]]],[11,"from","","",1009,[[]]],[11,"borrow","","",1009,[[]]],[11,"borrow_mut","","",1009,[[]]],[11,"try_from","","",1009,[[],["result",4]]],[11,"into","","",1009,[[]]],[11,"try_into","","",1009,[[],["result",4]]],[11,"type_id","","",1009,[[],["typeid",3]]],[11,"from","","",1010,[[]]],[11,"borrow","","",1010,[[]]],[11,"borrow_mut","","",1010,[[]]],[11,"try_from","","",1010,[[],["result",4]]],[11,"into","","",1010,[[]]],[11,"try_into","","",1010,[[],["result",4]]],[11,"type_id","","",1010,[[],["typeid",3]]],[11,"from","","",1003,[[]]],[11,"borrow","","",1003,[[]]],[11,"borrow_mut","","",1003,[[]]],[11,"try_from","","",1003,[[],["result",4]]],[11,"into","","",1003,[[]]],[11,"try_into","","",1003,[[],["result",4]]],[11,"type_id","","",1003,[[],["typeid",3]]],[11,"from","atsamd11c::rtc::mode2::mask","",1015,[[]]],[11,"borrow","","",1015,[[]]],[11,"borrow_mut","","",1015,[[]]],[11,"try_from","","",1015,[[],["result",4]]],[11,"into","","",1015,[[]]],[11,"try_into","","",1015,[[],["result",4]]],[11,"type_id","","",1015,[[],["typeid",3]]],[11,"from","","",1013,[[]]],[11,"borrow","","",1013,[[]]],[11,"borrow_mut","","",1013,[[]]],[11,"try_from","","",1013,[[],["result",4]]],[11,"into","","",1013,[[]]],[11,"try_into","","",1013,[[],["result",4]]],[11,"type_id","","",1013,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0","",1288,[[]]],[11,"borrow","","",1288,[[]]],[11,"borrow_mut","","",1288,[[]]],[11,"try_from","","",1288,[[],["result",4]]],[11,"into","","",1288,[[]]],[11,"try_into","","",1288,[[],["result",4]]],[11,"type_id","","",1288,[[],["typeid",3]]],[11,"from","","",1019,[[]]],[11,"borrow","","",1019,[[]]],[11,"borrow_mut","","",1019,[[]]],[11,"try_from","","",1019,[[],["result",4]]],[11,"into","","",1019,[[]]],[11,"try_into","","",1019,[[],["result",4]]],[11,"type_id","","",1019,[[],["typeid",3]]],[11,"from","","",1020,[[]]],[11,"borrow","","",1020,[[]]],[11,"borrow_mut","","",1020,[[]]],[11,"try_from","","",1020,[[],["result",4]]],[11,"into","","",1020,[[]]],[11,"try_into","","",1020,[[],["result",4]]],[11,"type_id","","",1020,[[],["typeid",3]]],[11,"from","","",1021,[[]]],[11,"borrow","","",1021,[[]]],[11,"borrow_mut","","",1021,[[]]],[11,"try_from","","",1021,[[],["result",4]]],[11,"into","","",1021,[[]]],[11,"try_into","","",1021,[[],["result",4]]],[11,"type_id","","",1021,[[],["typeid",3]]],[11,"from","","",1022,[[]]],[11,"borrow","","",1022,[[]]],[11,"borrow_mut","","",1022,[[]]],[11,"try_from","","",1022,[[],["result",4]]],[11,"into","","",1022,[[]]],[11,"try_into","","",1022,[[],["result",4]]],[11,"type_id","","",1022,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::ctrla","",1024,[[]]],[11,"borrow","","",1024,[[]]],[11,"borrow_mut","","",1024,[[]]],[11,"try_from","","",1024,[[],["result",4]]],[11,"into","","",1024,[[]]],[11,"try_into","","",1024,[[],["result",4]]],[11,"type_id","","",1024,[[],["typeid",3]]],[11,"from","","",1025,[[]]],[11,"borrow","","",1025,[[]]],[11,"borrow_mut","","",1025,[[]]],[11,"try_from","","",1025,[[],["result",4]]],[11,"into","","",1025,[[]]],[11,"try_into","","",1025,[[],["result",4]]],[11,"type_id","","",1025,[[],["typeid",3]]],[11,"from","","",1027,[[]]],[11,"borrow","","",1027,[[]]],[11,"borrow_mut","","",1027,[[]]],[11,"try_from","","",1027,[[],["result",4]]],[11,"into","","",1027,[[]]],[11,"try_into","","",1027,[[],["result",4]]],[11,"type_id","","",1027,[[],["typeid",3]]],[11,"from","","",1028,[[]]],[11,"borrow","","",1028,[[]]],[11,"borrow_mut","","",1028,[[]]],[11,"try_from","","",1028,[[],["result",4]]],[11,"into","","",1028,[[]]],[11,"try_into","","",1028,[[],["result",4]]],[11,"type_id","","",1028,[[],["typeid",3]]],[11,"from","","",1029,[[]]],[11,"borrow","","",1029,[[]]],[11,"borrow_mut","","",1029,[[]]],[11,"try_from","","",1029,[[],["result",4]]],[11,"into","","",1029,[[]]],[11,"try_into","","",1029,[[],["result",4]]],[11,"type_id","","",1029,[[],["typeid",3]]],[11,"from","","",1030,[[]]],[11,"borrow","","",1030,[[]]],[11,"borrow_mut","","",1030,[[]]],[11,"try_from","","",1030,[[],["result",4]]],[11,"into","","",1030,[[]]],[11,"try_into","","",1030,[[],["result",4]]],[11,"type_id","","",1030,[[],["typeid",3]]],[11,"from","","",1031,[[]]],[11,"borrow","","",1031,[[]]],[11,"borrow_mut","","",1031,[[]]],[11,"try_from","","",1031,[[],["result",4]]],[11,"into","","",1031,[[]]],[11,"try_into","","",1031,[[],["result",4]]],[11,"type_id","","",1031,[[],["typeid",3]]],[11,"from","","",1032,[[]]],[11,"borrow","","",1032,[[]]],[11,"borrow_mut","","",1032,[[]]],[11,"try_from","","",1032,[[],["result",4]]],[11,"into","","",1032,[[]]],[11,"try_into","","",1032,[[],["result",4]]],[11,"type_id","","",1032,[[],["typeid",3]]],[11,"from","","",1033,[[]]],[11,"borrow","","",1033,[[]]],[11,"borrow_mut","","",1033,[[]]],[11,"try_from","","",1033,[[],["result",4]]],[11,"into","","",1033,[[]]],[11,"try_into","","",1033,[[],["result",4]]],[11,"type_id","","",1033,[[],["typeid",3]]],[11,"from","","",1034,[[]]],[11,"borrow","","",1034,[[]]],[11,"borrow_mut","","",1034,[[]]],[11,"try_from","","",1034,[[],["result",4]]],[11,"into","","",1034,[[]]],[11,"try_into","","",1034,[[],["result",4]]],[11,"type_id","","",1034,[[],["typeid",3]]],[11,"from","","",1035,[[]]],[11,"borrow","","",1035,[[]]],[11,"borrow_mut","","",1035,[[]]],[11,"try_from","","",1035,[[],["result",4]]],[11,"into","","",1035,[[]]],[11,"try_into","","",1035,[[],["result",4]]],[11,"type_id","","",1035,[[],["typeid",3]]],[11,"from","","",1036,[[]]],[11,"borrow","","",1036,[[]]],[11,"borrow_mut","","",1036,[[]]],[11,"try_from","","",1036,[[],["result",4]]],[11,"into","","",1036,[[]]],[11,"try_into","","",1036,[[],["result",4]]],[11,"type_id","","",1036,[[],["typeid",3]]],[11,"from","","",1023,[[]]],[11,"borrow","","",1023,[[]]],[11,"borrow_mut","","",1023,[[]]],[11,"try_from","","",1023,[[],["result",4]]],[11,"into","","",1023,[[]]],[11,"try_into","","",1023,[[],["result",4]]],[11,"type_id","","",1023,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::ctrlb","",1039,[[]]],[11,"borrow","","",1039,[[]]],[11,"borrow_mut","","",1039,[[]]],[11,"try_from","","",1039,[[],["result",4]]],[11,"into","","",1039,[[]]],[11,"try_into","","",1039,[[],["result",4]]],[11,"type_id","","",1039,[[],["typeid",3]]],[11,"from","","",1040,[[]]],[11,"borrow","","",1040,[[]]],[11,"borrow_mut","","",1040,[[]]],[11,"try_from","","",1040,[[],["result",4]]],[11,"into","","",1040,[[]]],[11,"try_into","","",1040,[[],["result",4]]],[11,"type_id","","",1040,[[],["typeid",3]]],[11,"from","","",1041,[[]]],[11,"borrow","","",1041,[[]]],[11,"borrow_mut","","",1041,[[]]],[11,"try_from","","",1041,[[],["result",4]]],[11,"into","","",1041,[[]]],[11,"try_into","","",1041,[[],["result",4]]],[11,"type_id","","",1041,[[],["typeid",3]]],[11,"from","","",1042,[[]]],[11,"borrow","","",1042,[[]]],[11,"borrow_mut","","",1042,[[]]],[11,"try_from","","",1042,[[],["result",4]]],[11,"into","","",1042,[[]]],[11,"try_into","","",1042,[[],["result",4]]],[11,"type_id","","",1042,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::baud","",1045,[[]]],[11,"borrow","","",1045,[[]]],[11,"borrow_mut","","",1045,[[]]],[11,"try_from","","",1045,[[],["result",4]]],[11,"into","","",1045,[[]]],[11,"try_into","","",1045,[[],["result",4]]],[11,"type_id","","",1045,[[],["typeid",3]]],[11,"from","","",1046,[[]]],[11,"borrow","","",1046,[[]]],[11,"borrow_mut","","",1046,[[]]],[11,"try_from","","",1046,[[],["result",4]]],[11,"into","","",1046,[[]]],[11,"try_into","","",1046,[[],["result",4]]],[11,"type_id","","",1046,[[],["typeid",3]]],[11,"from","","",1047,[[]]],[11,"borrow","","",1047,[[]]],[11,"borrow_mut","","",1047,[[]]],[11,"try_from","","",1047,[[],["result",4]]],[11,"into","","",1047,[[]]],[11,"try_into","","",1047,[[],["result",4]]],[11,"type_id","","",1047,[[],["typeid",3]]],[11,"from","","",1048,[[]]],[11,"borrow","","",1048,[[]]],[11,"borrow_mut","","",1048,[[]]],[11,"try_from","","",1048,[[],["result",4]]],[11,"into","","",1048,[[]]],[11,"try_into","","",1048,[[],["result",4]]],[11,"type_id","","",1048,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::intenclr","",1051,[[]]],[11,"borrow","","",1051,[[]]],[11,"borrow_mut","","",1051,[[]]],[11,"try_from","","",1051,[[],["result",4]]],[11,"into","","",1051,[[]]],[11,"try_into","","",1051,[[],["result",4]]],[11,"type_id","","",1051,[[],["typeid",3]]],[11,"from","","",1052,[[]]],[11,"borrow","","",1052,[[]]],[11,"borrow_mut","","",1052,[[]]],[11,"try_from","","",1052,[[],["result",4]]],[11,"into","","",1052,[[]]],[11,"try_into","","",1052,[[],["result",4]]],[11,"type_id","","",1052,[[],["typeid",3]]],[11,"from","","",1053,[[]]],[11,"borrow","","",1053,[[]]],[11,"borrow_mut","","",1053,[[]]],[11,"try_from","","",1053,[[],["result",4]]],[11,"into","","",1053,[[]]],[11,"try_into","","",1053,[[],["result",4]]],[11,"type_id","","",1053,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::intenset","",1056,[[]]],[11,"borrow","","",1056,[[]]],[11,"borrow_mut","","",1056,[[]]],[11,"try_from","","",1056,[[],["result",4]]],[11,"into","","",1056,[[]]],[11,"try_into","","",1056,[[],["result",4]]],[11,"type_id","","",1056,[[],["typeid",3]]],[11,"from","","",1057,[[]]],[11,"borrow","","",1057,[[]]],[11,"borrow_mut","","",1057,[[]]],[11,"try_from","","",1057,[[],["result",4]]],[11,"into","","",1057,[[]]],[11,"try_into","","",1057,[[],["result",4]]],[11,"type_id","","",1057,[[],["typeid",3]]],[11,"from","","",1058,[[]]],[11,"borrow","","",1058,[[]]],[11,"borrow_mut","","",1058,[[]]],[11,"try_from","","",1058,[[],["result",4]]],[11,"into","","",1058,[[]]],[11,"try_into","","",1058,[[],["result",4]]],[11,"type_id","","",1058,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::intflag","",1061,[[]]],[11,"borrow","","",1061,[[]]],[11,"borrow_mut","","",1061,[[]]],[11,"try_from","","",1061,[[],["result",4]]],[11,"into","","",1061,[[]]],[11,"try_into","","",1061,[[],["result",4]]],[11,"type_id","","",1061,[[],["typeid",3]]],[11,"from","","",1062,[[]]],[11,"borrow","","",1062,[[]]],[11,"borrow_mut","","",1062,[[]]],[11,"try_from","","",1062,[[],["result",4]]],[11,"into","","",1062,[[]]],[11,"try_into","","",1062,[[],["result",4]]],[11,"type_id","","",1062,[[],["typeid",3]]],[11,"from","","",1063,[[]]],[11,"borrow","","",1063,[[]]],[11,"borrow_mut","","",1063,[[]]],[11,"try_from","","",1063,[[],["result",4]]],[11,"into","","",1063,[[]]],[11,"try_into","","",1063,[[],["result",4]]],[11,"type_id","","",1063,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::status","",1066,[[]]],[11,"borrow","","",1066,[[]]],[11,"borrow_mut","","",1066,[[]]],[11,"try_from","","",1066,[[],["result",4]]],[11,"into","","",1066,[[]]],[11,"try_into","","",1066,[[],["result",4]]],[11,"type_id","","",1066,[[],["typeid",3]]],[11,"from","","",1067,[[]]],[11,"borrow","","",1067,[[]]],[11,"borrow_mut","","",1067,[[]]],[11,"try_from","","",1067,[[],["result",4]]],[11,"into","","",1067,[[]]],[11,"try_into","","",1067,[[],["result",4]]],[11,"type_id","","",1067,[[],["typeid",3]]],[11,"from","","",1068,[[]]],[11,"borrow","","",1068,[[]]],[11,"borrow_mut","","",1068,[[]]],[11,"try_from","","",1068,[[],["result",4]]],[11,"into","","",1068,[[]]],[11,"try_into","","",1068,[[],["result",4]]],[11,"type_id","","",1068,[[],["typeid",3]]],[11,"from","","",1069,[[]]],[11,"borrow","","",1069,[[]]],[11,"borrow_mut","","",1069,[[]]],[11,"try_from","","",1069,[[],["result",4]]],[11,"into","","",1069,[[]]],[11,"try_into","","",1069,[[],["result",4]]],[11,"type_id","","",1069,[[],["typeid",3]]],[11,"from","","",1070,[[]]],[11,"borrow","","",1070,[[]]],[11,"borrow_mut","","",1070,[[]]],[11,"try_from","","",1070,[[],["result",4]]],[11,"into","","",1070,[[]]],[11,"try_into","","",1070,[[],["result",4]]],[11,"type_id","","",1070,[[],["typeid",3]]],[11,"from","","",1071,[[]]],[11,"borrow","","",1071,[[]]],[11,"borrow_mut","","",1071,[[]]],[11,"try_from","","",1071,[[],["result",4]]],[11,"into","","",1071,[[]]],[11,"try_into","","",1071,[[],["result",4]]],[11,"type_id","","",1071,[[],["typeid",3]]],[11,"from","","",1072,[[]]],[11,"borrow","","",1072,[[]]],[11,"borrow_mut","","",1072,[[]]],[11,"try_from","","",1072,[[],["result",4]]],[11,"into","","",1072,[[]]],[11,"try_into","","",1072,[[],["result",4]]],[11,"type_id","","",1072,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::addr","",1076,[[]]],[11,"borrow","","",1076,[[]]],[11,"borrow_mut","","",1076,[[]]],[11,"try_from","","",1076,[[],["result",4]]],[11,"into","","",1076,[[]]],[11,"try_into","","",1076,[[],["result",4]]],[11,"type_id","","",1076,[[],["typeid",3]]],[11,"from","","",1077,[[]]],[11,"borrow","","",1077,[[]]],[11,"borrow_mut","","",1077,[[]]],[11,"try_from","","",1077,[[],["result",4]]],[11,"into","","",1077,[[]]],[11,"try_into","","",1077,[[],["result",4]]],[11,"type_id","","",1077,[[],["typeid",3]]],[11,"from","","",1078,[[]]],[11,"borrow","","",1078,[[]]],[11,"borrow_mut","","",1078,[[]]],[11,"try_from","","",1078,[[],["result",4]]],[11,"into","","",1078,[[]]],[11,"try_into","","",1078,[[],["result",4]]],[11,"type_id","","",1078,[[],["typeid",3]]],[11,"from","","",1079,[[]]],[11,"borrow","","",1079,[[]]],[11,"borrow_mut","","",1079,[[]]],[11,"try_from","","",1079,[[],["result",4]]],[11,"into","","",1079,[[]]],[11,"try_into","","",1079,[[],["result",4]]],[11,"type_id","","",1079,[[],["typeid",3]]],[11,"from","","",1080,[[]]],[11,"borrow","","",1080,[[]]],[11,"borrow_mut","","",1080,[[]]],[11,"try_from","","",1080,[[],["result",4]]],[11,"into","","",1080,[[]]],[11,"try_into","","",1080,[[],["result",4]]],[11,"type_id","","",1080,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::data","",1083,[[]]],[11,"borrow","","",1083,[[]]],[11,"borrow_mut","","",1083,[[]]],[11,"try_from","","",1083,[[],["result",4]]],[11,"into","","",1083,[[]]],[11,"try_into","","",1083,[[],["result",4]]],[11,"type_id","","",1083,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cm::dbgctrl","",1086,[[]]],[11,"borrow","","",1086,[[]]],[11,"borrow_mut","","",1086,[[]]],[11,"try_from","","",1086,[[],["result",4]]],[11,"into","","",1086,[[]]],[11,"try_into","","",1086,[[],["result",4]]],[11,"type_id","","",1086,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::ctrla","",1090,[[]]],[11,"borrow","","",1090,[[]]],[11,"borrow_mut","","",1090,[[]]],[11,"try_from","","",1090,[[],["result",4]]],[11,"into","","",1090,[[]]],[11,"try_into","","",1090,[[],["result",4]]],[11,"type_id","","",1090,[[],["typeid",3]]],[11,"from","","",1091,[[]]],[11,"borrow","","",1091,[[]]],[11,"borrow_mut","","",1091,[[]]],[11,"try_from","","",1091,[[],["result",4]]],[11,"into","","",1091,[[]]],[11,"try_into","","",1091,[[],["result",4]]],[11,"type_id","","",1091,[[],["typeid",3]]],[11,"from","","",1093,[[]]],[11,"borrow","","",1093,[[]]],[11,"borrow_mut","","",1093,[[]]],[11,"try_from","","",1093,[[],["result",4]]],[11,"into","","",1093,[[]]],[11,"try_into","","",1093,[[],["result",4]]],[11,"type_id","","",1093,[[],["typeid",3]]],[11,"from","","",1094,[[]]],[11,"borrow","","",1094,[[]]],[11,"borrow_mut","","",1094,[[]]],[11,"try_from","","",1094,[[],["result",4]]],[11,"into","","",1094,[[]]],[11,"try_into","","",1094,[[],["result",4]]],[11,"type_id","","",1094,[[],["typeid",3]]],[11,"from","","",1095,[[]]],[11,"borrow","","",1095,[[]]],[11,"borrow_mut","","",1095,[[]]],[11,"try_from","","",1095,[[],["result",4]]],[11,"into","","",1095,[[]]],[11,"try_into","","",1095,[[],["result",4]]],[11,"type_id","","",1095,[[],["typeid",3]]],[11,"from","","",1096,[[]]],[11,"borrow","","",1096,[[]]],[11,"borrow_mut","","",1096,[[]]],[11,"try_from","","",1096,[[],["result",4]]],[11,"into","","",1096,[[]]],[11,"try_into","","",1096,[[],["result",4]]],[11,"type_id","","",1096,[[],["typeid",3]]],[11,"from","","",1097,[[]]],[11,"borrow","","",1097,[[]]],[11,"borrow_mut","","",1097,[[]]],[11,"try_from","","",1097,[[],["result",4]]],[11,"into","","",1097,[[]]],[11,"try_into","","",1097,[[],["result",4]]],[11,"type_id","","",1097,[[],["typeid",3]]],[11,"from","","",1098,[[]]],[11,"borrow","","",1098,[[]]],[11,"borrow_mut","","",1098,[[]]],[11,"try_from","","",1098,[[],["result",4]]],[11,"into","","",1098,[[]]],[11,"try_into","","",1098,[[],["result",4]]],[11,"type_id","","",1098,[[],["typeid",3]]],[11,"from","","",1099,[[]]],[11,"borrow","","",1099,[[]]],[11,"borrow_mut","","",1099,[[]]],[11,"try_from","","",1099,[[],["result",4]]],[11,"into","","",1099,[[]]],[11,"try_into","","",1099,[[],["result",4]]],[11,"type_id","","",1099,[[],["typeid",3]]],[11,"from","","",1100,[[]]],[11,"borrow","","",1100,[[]]],[11,"borrow_mut","","",1100,[[]]],[11,"try_from","","",1100,[[],["result",4]]],[11,"into","","",1100,[[]]],[11,"try_into","","",1100,[[],["result",4]]],[11,"type_id","","",1100,[[],["typeid",3]]],[11,"from","","",1089,[[]]],[11,"borrow","","",1089,[[]]],[11,"borrow_mut","","",1089,[[]]],[11,"try_from","","",1089,[[],["result",4]]],[11,"into","","",1089,[[]]],[11,"try_into","","",1089,[[],["result",4]]],[11,"type_id","","",1089,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::ctrlb","",1103,[[]]],[11,"borrow","","",1103,[[]]],[11,"borrow_mut","","",1103,[[]]],[11,"try_from","","",1103,[[],["result",4]]],[11,"into","","",1103,[[]]],[11,"try_into","","",1103,[[],["result",4]]],[11,"type_id","","",1103,[[],["typeid",3]]],[11,"from","","",1104,[[]]],[11,"borrow","","",1104,[[]]],[11,"borrow_mut","","",1104,[[]]],[11,"try_from","","",1104,[[],["result",4]]],[11,"into","","",1104,[[]]],[11,"try_into","","",1104,[[],["result",4]]],[11,"type_id","","",1104,[[],["typeid",3]]],[11,"from","","",1105,[[]]],[11,"borrow","","",1105,[[]]],[11,"borrow_mut","","",1105,[[]]],[11,"try_from","","",1105,[[],["result",4]]],[11,"into","","",1105,[[]]],[11,"try_into","","",1105,[[],["result",4]]],[11,"type_id","","",1105,[[],["typeid",3]]],[11,"from","","",1106,[[]]],[11,"borrow","","",1106,[[]]],[11,"borrow_mut","","",1106,[[]]],[11,"try_from","","",1106,[[],["result",4]]],[11,"into","","",1106,[[]]],[11,"try_into","","",1106,[[],["result",4]]],[11,"type_id","","",1106,[[],["typeid",3]]],[11,"from","","",1107,[[]]],[11,"borrow","","",1107,[[]]],[11,"borrow_mut","","",1107,[[]]],[11,"try_from","","",1107,[[],["result",4]]],[11,"into","","",1107,[[]]],[11,"try_into","","",1107,[[],["result",4]]],[11,"type_id","","",1107,[[],["typeid",3]]],[11,"from","","",1108,[[]]],[11,"borrow","","",1108,[[]]],[11,"borrow_mut","","",1108,[[]]],[11,"try_from","","",1108,[[],["result",4]]],[11,"into","","",1108,[[]]],[11,"try_into","","",1108,[[],["result",4]]],[11,"type_id","","",1108,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::intenclr","",1111,[[]]],[11,"borrow","","",1111,[[]]],[11,"borrow_mut","","",1111,[[]]],[11,"try_from","","",1111,[[],["result",4]]],[11,"into","","",1111,[[]]],[11,"try_into","","",1111,[[],["result",4]]],[11,"type_id","","",1111,[[],["typeid",3]]],[11,"from","","",1112,[[]]],[11,"borrow","","",1112,[[]]],[11,"borrow_mut","","",1112,[[]]],[11,"try_from","","",1112,[[],["result",4]]],[11,"into","","",1112,[[]]],[11,"try_into","","",1112,[[],["result",4]]],[11,"type_id","","",1112,[[],["typeid",3]]],[11,"from","","",1113,[[]]],[11,"borrow","","",1113,[[]]],[11,"borrow_mut","","",1113,[[]]],[11,"try_from","","",1113,[[],["result",4]]],[11,"into","","",1113,[[]]],[11,"try_into","","",1113,[[],["result",4]]],[11,"type_id","","",1113,[[],["typeid",3]]],[11,"from","","",1114,[[]]],[11,"borrow","","",1114,[[]]],[11,"borrow_mut","","",1114,[[]]],[11,"try_from","","",1114,[[],["result",4]]],[11,"into","","",1114,[[]]],[11,"try_into","","",1114,[[],["result",4]]],[11,"type_id","","",1114,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::intenset","",1117,[[]]],[11,"borrow","","",1117,[[]]],[11,"borrow_mut","","",1117,[[]]],[11,"try_from","","",1117,[[],["result",4]]],[11,"into","","",1117,[[]]],[11,"try_into","","",1117,[[],["result",4]]],[11,"type_id","","",1117,[[],["typeid",3]]],[11,"from","","",1118,[[]]],[11,"borrow","","",1118,[[]]],[11,"borrow_mut","","",1118,[[]]],[11,"try_from","","",1118,[[],["result",4]]],[11,"into","","",1118,[[]]],[11,"try_into","","",1118,[[],["result",4]]],[11,"type_id","","",1118,[[],["typeid",3]]],[11,"from","","",1119,[[]]],[11,"borrow","","",1119,[[]]],[11,"borrow_mut","","",1119,[[]]],[11,"try_from","","",1119,[[],["result",4]]],[11,"into","","",1119,[[]]],[11,"try_into","","",1119,[[],["result",4]]],[11,"type_id","","",1119,[[],["typeid",3]]],[11,"from","","",1120,[[]]],[11,"borrow","","",1120,[[]]],[11,"borrow_mut","","",1120,[[]]],[11,"try_from","","",1120,[[],["result",4]]],[11,"into","","",1120,[[]]],[11,"try_into","","",1120,[[],["result",4]]],[11,"type_id","","",1120,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::intflag","",1123,[[]]],[11,"borrow","","",1123,[[]]],[11,"borrow_mut","","",1123,[[]]],[11,"try_from","","",1123,[[],["result",4]]],[11,"into","","",1123,[[]]],[11,"try_into","","",1123,[[],["result",4]]],[11,"type_id","","",1123,[[],["typeid",3]]],[11,"from","","",1124,[[]]],[11,"borrow","","",1124,[[]]],[11,"borrow_mut","","",1124,[[]]],[11,"try_from","","",1124,[[],["result",4]]],[11,"into","","",1124,[[]]],[11,"try_into","","",1124,[[],["result",4]]],[11,"type_id","","",1124,[[],["typeid",3]]],[11,"from","","",1125,[[]]],[11,"borrow","","",1125,[[]]],[11,"borrow_mut","","",1125,[[]]],[11,"try_from","","",1125,[[],["result",4]]],[11,"into","","",1125,[[]]],[11,"try_into","","",1125,[[],["result",4]]],[11,"type_id","","",1125,[[],["typeid",3]]],[11,"from","","",1126,[[]]],[11,"borrow","","",1126,[[]]],[11,"borrow_mut","","",1126,[[]]],[11,"try_from","","",1126,[[],["result",4]]],[11,"into","","",1126,[[]]],[11,"try_into","","",1126,[[],["result",4]]],[11,"type_id","","",1126,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::status","",1129,[[]]],[11,"borrow","","",1129,[[]]],[11,"borrow_mut","","",1129,[[]]],[11,"try_from","","",1129,[[],["result",4]]],[11,"into","","",1129,[[]]],[11,"try_into","","",1129,[[],["result",4]]],[11,"type_id","","",1129,[[],["typeid",3]]],[11,"from","","",1130,[[]]],[11,"borrow","","",1130,[[]]],[11,"borrow_mut","","",1130,[[]]],[11,"try_from","","",1130,[[],["result",4]]],[11,"into","","",1130,[[]]],[11,"try_into","","",1130,[[],["result",4]]],[11,"type_id","","",1130,[[],["typeid",3]]],[11,"from","","",1131,[[]]],[11,"borrow","","",1131,[[]]],[11,"borrow_mut","","",1131,[[]]],[11,"try_from","","",1131,[[],["result",4]]],[11,"into","","",1131,[[]]],[11,"try_into","","",1131,[[],["result",4]]],[11,"type_id","","",1131,[[],["typeid",3]]],[11,"from","","",1132,[[]]],[11,"borrow","","",1132,[[]]],[11,"borrow_mut","","",1132,[[]]],[11,"try_from","","",1132,[[],["result",4]]],[11,"into","","",1132,[[]]],[11,"try_into","","",1132,[[],["result",4]]],[11,"type_id","","",1132,[[],["typeid",3]]],[11,"from","","",1133,[[]]],[11,"borrow","","",1133,[[]]],[11,"borrow_mut","","",1133,[[]]],[11,"try_from","","",1133,[[],["result",4]]],[11,"into","","",1133,[[]]],[11,"try_into","","",1133,[[],["result",4]]],[11,"type_id","","",1133,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::addr","",1137,[[]]],[11,"borrow","","",1137,[[]]],[11,"borrow_mut","","",1137,[[]]],[11,"try_from","","",1137,[[],["result",4]]],[11,"into","","",1137,[[]]],[11,"try_into","","",1137,[[],["result",4]]],[11,"type_id","","",1137,[[],["typeid",3]]],[11,"from","","",1138,[[]]],[11,"borrow","","",1138,[[]]],[11,"borrow_mut","","",1138,[[]]],[11,"try_from","","",1138,[[],["result",4]]],[11,"into","","",1138,[[]]],[11,"try_into","","",1138,[[],["result",4]]],[11,"type_id","","",1138,[[],["typeid",3]]],[11,"from","","",1139,[[]]],[11,"borrow","","",1139,[[]]],[11,"borrow_mut","","",1139,[[]]],[11,"try_from","","",1139,[[],["result",4]]],[11,"into","","",1139,[[]]],[11,"try_into","","",1139,[[],["result",4]]],[11,"type_id","","",1139,[[],["typeid",3]]],[11,"from","","",1140,[[]]],[11,"borrow","","",1140,[[]]],[11,"borrow_mut","","",1140,[[]]],[11,"try_from","","",1140,[[],["result",4]]],[11,"into","","",1140,[[]]],[11,"try_into","","",1140,[[],["result",4]]],[11,"type_id","","",1140,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::i2cs::data","",1143,[[]]],[11,"borrow","","",1143,[[]]],[11,"borrow_mut","","",1143,[[]]],[11,"try_from","","",1143,[[],["result",4]]],[11,"into","","",1143,[[]]],[11,"try_into","","",1143,[[],["result",4]]],[11,"type_id","","",1143,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::ctrla","",1147,[[]]],[11,"borrow","","",1147,[[]]],[11,"borrow_mut","","",1147,[[]]],[11,"try_from","","",1147,[[],["result",4]]],[11,"into","","",1147,[[]]],[11,"try_into","","",1147,[[],["result",4]]],[11,"type_id","","",1147,[[],["typeid",3]]],[11,"from","","",1148,[[]]],[11,"borrow","","",1148,[[]]],[11,"borrow_mut","","",1148,[[]]],[11,"try_from","","",1148,[[],["result",4]]],[11,"into","","",1148,[[]]],[11,"try_into","","",1148,[[],["result",4]]],[11,"type_id","","",1148,[[],["typeid",3]]],[11,"from","","",1150,[[]]],[11,"borrow","","",1150,[[]]],[11,"borrow_mut","","",1150,[[]]],[11,"try_from","","",1150,[[],["result",4]]],[11,"into","","",1150,[[]]],[11,"try_into","","",1150,[[],["result",4]]],[11,"type_id","","",1150,[[],["typeid",3]]],[11,"from","","",1151,[[]]],[11,"borrow","","",1151,[[]]],[11,"borrow_mut","","",1151,[[]]],[11,"try_from","","",1151,[[],["result",4]]],[11,"into","","",1151,[[]]],[11,"try_into","","",1151,[[],["result",4]]],[11,"type_id","","",1151,[[],["typeid",3]]],[11,"from","","",1152,[[]]],[11,"borrow","","",1152,[[]]],[11,"borrow_mut","","",1152,[[]]],[11,"try_from","","",1152,[[],["result",4]]],[11,"into","","",1152,[[]]],[11,"try_into","","",1152,[[],["result",4]]],[11,"type_id","","",1152,[[],["typeid",3]]],[11,"from","","",1153,[[]]],[11,"borrow","","",1153,[[]]],[11,"borrow_mut","","",1153,[[]]],[11,"try_from","","",1153,[[],["result",4]]],[11,"into","","",1153,[[]]],[11,"try_into","","",1153,[[],["result",4]]],[11,"type_id","","",1153,[[],["typeid",3]]],[11,"from","","",1154,[[]]],[11,"borrow","","",1154,[[]]],[11,"borrow_mut","","",1154,[[]]],[11,"try_from","","",1154,[[],["result",4]]],[11,"into","","",1154,[[]]],[11,"try_into","","",1154,[[],["result",4]]],[11,"type_id","","",1154,[[],["typeid",3]]],[11,"from","","",1155,[[]]],[11,"borrow","","",1155,[[]]],[11,"borrow_mut","","",1155,[[]]],[11,"try_from","","",1155,[[],["result",4]]],[11,"into","","",1155,[[]]],[11,"try_into","","",1155,[[],["result",4]]],[11,"type_id","","",1155,[[],["typeid",3]]],[11,"from","","",1156,[[]]],[11,"borrow","","",1156,[[]]],[11,"borrow_mut","","",1156,[[]]],[11,"try_from","","",1156,[[],["result",4]]],[11,"into","","",1156,[[]]],[11,"try_into","","",1156,[[],["result",4]]],[11,"type_id","","",1156,[[],["typeid",3]]],[11,"from","","",1157,[[]]],[11,"borrow","","",1157,[[]]],[11,"borrow_mut","","",1157,[[]]],[11,"try_from","","",1157,[[],["result",4]]],[11,"into","","",1157,[[]]],[11,"try_into","","",1157,[[],["result",4]]],[11,"type_id","","",1157,[[],["typeid",3]]],[11,"from","","",1158,[[]]],[11,"borrow","","",1158,[[]]],[11,"borrow_mut","","",1158,[[]]],[11,"try_from","","",1158,[[],["result",4]]],[11,"into","","",1158,[[]]],[11,"try_into","","",1158,[[],["result",4]]],[11,"type_id","","",1158,[[],["typeid",3]]],[11,"from","","",1146,[[]]],[11,"borrow","","",1146,[[]]],[11,"borrow_mut","","",1146,[[]]],[11,"try_from","","",1146,[[],["result",4]]],[11,"into","","",1146,[[]]],[11,"try_into","","",1146,[[],["result",4]]],[11,"type_id","","",1146,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::ctrlb","",1161,[[]]],[11,"borrow","","",1161,[[]]],[11,"borrow_mut","","",1161,[[]]],[11,"try_from","","",1161,[[],["result",4]]],[11,"into","","",1161,[[]]],[11,"try_into","","",1161,[[],["result",4]]],[11,"type_id","","",1161,[[],["typeid",3]]],[11,"from","","",1162,[[]]],[11,"borrow","","",1162,[[]]],[11,"borrow_mut","","",1162,[[]]],[11,"try_from","","",1162,[[],["result",4]]],[11,"into","","",1162,[[]]],[11,"try_into","","",1162,[[],["result",4]]],[11,"type_id","","",1162,[[],["typeid",3]]],[11,"from","","",1163,[[]]],[11,"borrow","","",1163,[[]]],[11,"borrow_mut","","",1163,[[]]],[11,"try_from","","",1163,[[],["result",4]]],[11,"into","","",1163,[[]]],[11,"try_into","","",1163,[[],["result",4]]],[11,"type_id","","",1163,[[],["typeid",3]]],[11,"from","","",1164,[[]]],[11,"borrow","","",1164,[[]]],[11,"borrow_mut","","",1164,[[]]],[11,"try_from","","",1164,[[],["result",4]]],[11,"into","","",1164,[[]]],[11,"try_into","","",1164,[[],["result",4]]],[11,"type_id","","",1164,[[],["typeid",3]]],[11,"from","","",1165,[[]]],[11,"borrow","","",1165,[[]]],[11,"borrow_mut","","",1165,[[]]],[11,"try_from","","",1165,[[],["result",4]]],[11,"into","","",1165,[[]]],[11,"try_into","","",1165,[[],["result",4]]],[11,"type_id","","",1165,[[],["typeid",3]]],[11,"from","","",1166,[[]]],[11,"borrow","","",1166,[[]]],[11,"borrow_mut","","",1166,[[]]],[11,"try_from","","",1166,[[],["result",4]]],[11,"into","","",1166,[[]]],[11,"try_into","","",1166,[[],["result",4]]],[11,"type_id","","",1166,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::baud","",1169,[[]]],[11,"borrow","","",1169,[[]]],[11,"borrow_mut","","",1169,[[]]],[11,"try_from","","",1169,[[],["result",4]]],[11,"into","","",1169,[[]]],[11,"try_into","","",1169,[[],["result",4]]],[11,"type_id","","",1169,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::intenclr","",1172,[[]]],[11,"borrow","","",1172,[[]]],[11,"borrow_mut","","",1172,[[]]],[11,"try_from","","",1172,[[],["result",4]]],[11,"into","","",1172,[[]]],[11,"try_into","","",1172,[[],["result",4]]],[11,"type_id","","",1172,[[],["typeid",3]]],[11,"from","","",1173,[[]]],[11,"borrow","","",1173,[[]]],[11,"borrow_mut","","",1173,[[]]],[11,"try_from","","",1173,[[],["result",4]]],[11,"into","","",1173,[[]]],[11,"try_into","","",1173,[[],["result",4]]],[11,"type_id","","",1173,[[],["typeid",3]]],[11,"from","","",1174,[[]]],[11,"borrow","","",1174,[[]]],[11,"borrow_mut","","",1174,[[]]],[11,"try_from","","",1174,[[],["result",4]]],[11,"into","","",1174,[[]]],[11,"try_into","","",1174,[[],["result",4]]],[11,"type_id","","",1174,[[],["typeid",3]]],[11,"from","","",1175,[[]]],[11,"borrow","","",1175,[[]]],[11,"borrow_mut","","",1175,[[]]],[11,"try_from","","",1175,[[],["result",4]]],[11,"into","","",1175,[[]]],[11,"try_into","","",1175,[[],["result",4]]],[11,"type_id","","",1175,[[],["typeid",3]]],[11,"from","","",1176,[[]]],[11,"borrow","","",1176,[[]]],[11,"borrow_mut","","",1176,[[]]],[11,"try_from","","",1176,[[],["result",4]]],[11,"into","","",1176,[[]]],[11,"try_into","","",1176,[[],["result",4]]],[11,"type_id","","",1176,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::intenset","",1179,[[]]],[11,"borrow","","",1179,[[]]],[11,"borrow_mut","","",1179,[[]]],[11,"try_from","","",1179,[[],["result",4]]],[11,"into","","",1179,[[]]],[11,"try_into","","",1179,[[],["result",4]]],[11,"type_id","","",1179,[[],["typeid",3]]],[11,"from","","",1180,[[]]],[11,"borrow","","",1180,[[]]],[11,"borrow_mut","","",1180,[[]]],[11,"try_from","","",1180,[[],["result",4]]],[11,"into","","",1180,[[]]],[11,"try_into","","",1180,[[],["result",4]]],[11,"type_id","","",1180,[[],["typeid",3]]],[11,"from","","",1181,[[]]],[11,"borrow","","",1181,[[]]],[11,"borrow_mut","","",1181,[[]]],[11,"try_from","","",1181,[[],["result",4]]],[11,"into","","",1181,[[]]],[11,"try_into","","",1181,[[],["result",4]]],[11,"type_id","","",1181,[[],["typeid",3]]],[11,"from","","",1182,[[]]],[11,"borrow","","",1182,[[]]],[11,"borrow_mut","","",1182,[[]]],[11,"try_from","","",1182,[[],["result",4]]],[11,"into","","",1182,[[]]],[11,"try_into","","",1182,[[],["result",4]]],[11,"type_id","","",1182,[[],["typeid",3]]],[11,"from","","",1183,[[]]],[11,"borrow","","",1183,[[]]],[11,"borrow_mut","","",1183,[[]]],[11,"try_from","","",1183,[[],["result",4]]],[11,"into","","",1183,[[]]],[11,"try_into","","",1183,[[],["result",4]]],[11,"type_id","","",1183,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::intflag","",1186,[[]]],[11,"borrow","","",1186,[[]]],[11,"borrow_mut","","",1186,[[]]],[11,"try_from","","",1186,[[],["result",4]]],[11,"into","","",1186,[[]]],[11,"try_into","","",1186,[[],["result",4]]],[11,"type_id","","",1186,[[],["typeid",3]]],[11,"from","","",1187,[[]]],[11,"borrow","","",1187,[[]]],[11,"borrow_mut","","",1187,[[]]],[11,"try_from","","",1187,[[],["result",4]]],[11,"into","","",1187,[[]]],[11,"try_into","","",1187,[[],["result",4]]],[11,"type_id","","",1187,[[],["typeid",3]]],[11,"from","","",1188,[[]]],[11,"borrow","","",1188,[[]]],[11,"borrow_mut","","",1188,[[]]],[11,"try_from","","",1188,[[],["result",4]]],[11,"into","","",1188,[[]]],[11,"try_into","","",1188,[[],["result",4]]],[11,"type_id","","",1188,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::status","",1191,[[]]],[11,"borrow","","",1191,[[]]],[11,"borrow_mut","","",1191,[[]]],[11,"try_from","","",1191,[[],["result",4]]],[11,"into","","",1191,[[]]],[11,"try_into","","",1191,[[],["result",4]]],[11,"type_id","","",1191,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::addr","",1195,[[]]],[11,"borrow","","",1195,[[]]],[11,"borrow_mut","","",1195,[[]]],[11,"try_from","","",1195,[[],["result",4]]],[11,"into","","",1195,[[]]],[11,"try_into","","",1195,[[],["result",4]]],[11,"type_id","","",1195,[[],["typeid",3]]],[11,"from","","",1196,[[]]],[11,"borrow","","",1196,[[]]],[11,"borrow_mut","","",1196,[[]]],[11,"try_from","","",1196,[[],["result",4]]],[11,"into","","",1196,[[]]],[11,"try_into","","",1196,[[],["result",4]]],[11,"type_id","","",1196,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::data","",1199,[[]]],[11,"borrow","","",1199,[[]]],[11,"borrow_mut","","",1199,[[]]],[11,"try_from","","",1199,[[],["result",4]]],[11,"into","","",1199,[[]]],[11,"try_into","","",1199,[[],["result",4]]],[11,"type_id","","",1199,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::spi::dbgctrl","",1202,[[]]],[11,"borrow","","",1202,[[]]],[11,"borrow_mut","","",1202,[[]]],[11,"try_from","","",1202,[[],["result",4]]],[11,"into","","",1202,[[]]],[11,"try_into","","",1202,[[],["result",4]]],[11,"type_id","","",1202,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::ctrla","",1206,[[]]],[11,"borrow","","",1206,[[]]],[11,"borrow_mut","","",1206,[[]]],[11,"try_from","","",1206,[[],["result",4]]],[11,"into","","",1206,[[]]],[11,"try_into","","",1206,[[],["result",4]]],[11,"type_id","","",1206,[[],["typeid",3]]],[11,"from","","",1207,[[]]],[11,"borrow","","",1207,[[]]],[11,"borrow_mut","","",1207,[[]]],[11,"try_from","","",1207,[[],["result",4]]],[11,"into","","",1207,[[]]],[11,"try_into","","",1207,[[],["result",4]]],[11,"type_id","","",1207,[[],["typeid",3]]],[11,"from","","",1209,[[]]],[11,"borrow","","",1209,[[]]],[11,"borrow_mut","","",1209,[[]]],[11,"try_from","","",1209,[[],["result",4]]],[11,"into","","",1209,[[]]],[11,"try_into","","",1209,[[],["result",4]]],[11,"type_id","","",1209,[[],["typeid",3]]],[11,"from","","",1210,[[]]],[11,"borrow","","",1210,[[]]],[11,"borrow_mut","","",1210,[[]]],[11,"try_from","","",1210,[[],["result",4]]],[11,"into","","",1210,[[]]],[11,"try_into","","",1210,[[],["result",4]]],[11,"type_id","","",1210,[[],["typeid",3]]],[11,"from","","",1211,[[]]],[11,"borrow","","",1211,[[]]],[11,"borrow_mut","","",1211,[[]]],[11,"try_from","","",1211,[[],["result",4]]],[11,"into","","",1211,[[]]],[11,"try_into","","",1211,[[],["result",4]]],[11,"type_id","","",1211,[[],["typeid",3]]],[11,"from","","",1212,[[]]],[11,"borrow","","",1212,[[]]],[11,"borrow_mut","","",1212,[[]]],[11,"try_from","","",1212,[[],["result",4]]],[11,"into","","",1212,[[]]],[11,"try_into","","",1212,[[],["result",4]]],[11,"type_id","","",1212,[[],["typeid",3]]],[11,"from","","",1213,[[]]],[11,"borrow","","",1213,[[]]],[11,"borrow_mut","","",1213,[[]]],[11,"try_from","","",1213,[[],["result",4]]],[11,"into","","",1213,[[]]],[11,"try_into","","",1213,[[],["result",4]]],[11,"type_id","","",1213,[[],["typeid",3]]],[11,"from","","",1214,[[]]],[11,"borrow","","",1214,[[]]],[11,"borrow_mut","","",1214,[[]]],[11,"try_from","","",1214,[[],["result",4]]],[11,"into","","",1214,[[]]],[11,"try_into","","",1214,[[],["result",4]]],[11,"type_id","","",1214,[[],["typeid",3]]],[11,"from","","",1215,[[]]],[11,"borrow","","",1215,[[]]],[11,"borrow_mut","","",1215,[[]]],[11,"try_from","","",1215,[[],["result",4]]],[11,"into","","",1215,[[]]],[11,"try_into","","",1215,[[],["result",4]]],[11,"type_id","","",1215,[[],["typeid",3]]],[11,"from","","",1216,[[]]],[11,"borrow","","",1216,[[]]],[11,"borrow_mut","","",1216,[[]]],[11,"try_from","","",1216,[[],["result",4]]],[11,"into","","",1216,[[]]],[11,"try_into","","",1216,[[],["result",4]]],[11,"type_id","","",1216,[[],["typeid",3]]],[11,"from","","",1217,[[]]],[11,"borrow","","",1217,[[]]],[11,"borrow_mut","","",1217,[[]]],[11,"try_from","","",1217,[[],["result",4]]],[11,"into","","",1217,[[]]],[11,"try_into","","",1217,[[],["result",4]]],[11,"type_id","","",1217,[[],["typeid",3]]],[11,"from","","",1218,[[]]],[11,"borrow","","",1218,[[]]],[11,"borrow_mut","","",1218,[[]]],[11,"try_from","","",1218,[[],["result",4]]],[11,"into","","",1218,[[]]],[11,"try_into","","",1218,[[],["result",4]]],[11,"type_id","","",1218,[[],["typeid",3]]],[11,"from","","",1219,[[]]],[11,"borrow","","",1219,[[]]],[11,"borrow_mut","","",1219,[[]]],[11,"try_from","","",1219,[[],["result",4]]],[11,"into","","",1219,[[]]],[11,"try_into","","",1219,[[],["result",4]]],[11,"type_id","","",1219,[[],["typeid",3]]],[11,"from","","",1205,[[]]],[11,"borrow","","",1205,[[]]],[11,"borrow_mut","","",1205,[[]]],[11,"try_from","","",1205,[[],["result",4]]],[11,"into","","",1205,[[]]],[11,"try_into","","",1205,[[],["result",4]]],[11,"type_id","","",1205,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::ctrlb","",1222,[[]]],[11,"borrow","","",1222,[[]]],[11,"borrow_mut","","",1222,[[]]],[11,"try_from","","",1222,[[],["result",4]]],[11,"into","","",1222,[[]]],[11,"try_into","","",1222,[[],["result",4]]],[11,"type_id","","",1222,[[],["typeid",3]]],[11,"from","","",1223,[[]]],[11,"borrow","","",1223,[[]]],[11,"borrow_mut","","",1223,[[]]],[11,"try_from","","",1223,[[],["result",4]]],[11,"into","","",1223,[[]]],[11,"try_into","","",1223,[[],["result",4]]],[11,"type_id","","",1223,[[],["typeid",3]]],[11,"from","","",1224,[[]]],[11,"borrow","","",1224,[[]]],[11,"borrow_mut","","",1224,[[]]],[11,"try_from","","",1224,[[],["result",4]]],[11,"into","","",1224,[[]]],[11,"try_into","","",1224,[[],["result",4]]],[11,"type_id","","",1224,[[],["typeid",3]]],[11,"from","","",1225,[[]]],[11,"borrow","","",1225,[[]]],[11,"borrow_mut","","",1225,[[]]],[11,"try_from","","",1225,[[],["result",4]]],[11,"into","","",1225,[[]]],[11,"try_into","","",1225,[[],["result",4]]],[11,"type_id","","",1225,[[],["typeid",3]]],[11,"from","","",1226,[[]]],[11,"borrow","","",1226,[[]]],[11,"borrow_mut","","",1226,[[]]],[11,"try_from","","",1226,[[],["result",4]]],[11,"into","","",1226,[[]]],[11,"try_into","","",1226,[[],["result",4]]],[11,"type_id","","",1226,[[],["typeid",3]]],[11,"from","","",1227,[[]]],[11,"borrow","","",1227,[[]]],[11,"borrow_mut","","",1227,[[]]],[11,"try_from","","",1227,[[],["result",4]]],[11,"into","","",1227,[[]]],[11,"try_into","","",1227,[[],["result",4]]],[11,"type_id","","",1227,[[],["typeid",3]]],[11,"from","","",1228,[[]]],[11,"borrow","","",1228,[[]]],[11,"borrow_mut","","",1228,[[]]],[11,"try_from","","",1228,[[],["result",4]]],[11,"into","","",1228,[[]]],[11,"try_into","","",1228,[[],["result",4]]],[11,"type_id","","",1228,[[],["typeid",3]]],[11,"from","","",1229,[[]]],[11,"borrow","","",1229,[[]]],[11,"borrow_mut","","",1229,[[]]],[11,"try_from","","",1229,[[],["result",4]]],[11,"into","","",1229,[[]]],[11,"try_into","","",1229,[[],["result",4]]],[11,"type_id","","",1229,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::baud","",1232,[[]]],[11,"borrow","","",1232,[[]]],[11,"borrow_mut","","",1232,[[]]],[11,"try_from","","",1232,[[],["result",4]]],[11,"into","","",1232,[[]]],[11,"try_into","","",1232,[[],["result",4]]],[11,"type_id","","",1232,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::baud_frac_mode","",1235,[[]]],[11,"borrow","","",1235,[[]]],[11,"borrow_mut","","",1235,[[]]],[11,"try_from","","",1235,[[],["result",4]]],[11,"into","","",1235,[[]]],[11,"try_into","","",1235,[[],["result",4]]],[11,"type_id","","",1235,[[],["typeid",3]]],[11,"from","","",1236,[[]]],[11,"borrow","","",1236,[[]]],[11,"borrow_mut","","",1236,[[]]],[11,"try_from","","",1236,[[],["result",4]]],[11,"into","","",1236,[[]]],[11,"try_into","","",1236,[[],["result",4]]],[11,"type_id","","",1236,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::baud_fracfp_mode","",1239,[[]]],[11,"borrow","","",1239,[[]]],[11,"borrow_mut","","",1239,[[]]],[11,"try_from","","",1239,[[],["result",4]]],[11,"into","","",1239,[[]]],[11,"try_into","","",1239,[[],["result",4]]],[11,"type_id","","",1239,[[],["typeid",3]]],[11,"from","","",1240,[[]]],[11,"borrow","","",1240,[[]]],[11,"borrow_mut","","",1240,[[]]],[11,"try_from","","",1240,[[],["result",4]]],[11,"into","","",1240,[[]]],[11,"try_into","","",1240,[[],["result",4]]],[11,"type_id","","",1240,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::baud_usartfp_mode","",1243,[[]]],[11,"borrow","","",1243,[[]]],[11,"borrow_mut","","",1243,[[]]],[11,"try_from","","",1243,[[],["result",4]]],[11,"into","","",1243,[[]]],[11,"try_into","","",1243,[[],["result",4]]],[11,"type_id","","",1243,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::rxpl","",1246,[[]]],[11,"borrow","","",1246,[[]]],[11,"borrow_mut","","",1246,[[]]],[11,"try_from","","",1246,[[],["result",4]]],[11,"into","","",1246,[[]]],[11,"try_into","","",1246,[[],["result",4]]],[11,"type_id","","",1246,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::intenclr","",1249,[[]]],[11,"borrow","","",1249,[[]]],[11,"borrow_mut","","",1249,[[]]],[11,"try_from","","",1249,[[],["result",4]]],[11,"into","","",1249,[[]]],[11,"try_into","","",1249,[[],["result",4]]],[11,"type_id","","",1249,[[],["typeid",3]]],[11,"from","","",1250,[[]]],[11,"borrow","","",1250,[[]]],[11,"borrow_mut","","",1250,[[]]],[11,"try_from","","",1250,[[],["result",4]]],[11,"into","","",1250,[[]]],[11,"try_into","","",1250,[[],["result",4]]],[11,"type_id","","",1250,[[],["typeid",3]]],[11,"from","","",1251,[[]]],[11,"borrow","","",1251,[[]]],[11,"borrow_mut","","",1251,[[]]],[11,"try_from","","",1251,[[],["result",4]]],[11,"into","","",1251,[[]]],[11,"try_into","","",1251,[[],["result",4]]],[11,"type_id","","",1251,[[],["typeid",3]]],[11,"from","","",1252,[[]]],[11,"borrow","","",1252,[[]]],[11,"borrow_mut","","",1252,[[]]],[11,"try_from","","",1252,[[],["result",4]]],[11,"into","","",1252,[[]]],[11,"try_into","","",1252,[[],["result",4]]],[11,"type_id","","",1252,[[],["typeid",3]]],[11,"from","","",1253,[[]]],[11,"borrow","","",1253,[[]]],[11,"borrow_mut","","",1253,[[]]],[11,"try_from","","",1253,[[],["result",4]]],[11,"into","","",1253,[[]]],[11,"try_into","","",1253,[[],["result",4]]],[11,"type_id","","",1253,[[],["typeid",3]]],[11,"from","","",1254,[[]]],[11,"borrow","","",1254,[[]]],[11,"borrow_mut","","",1254,[[]]],[11,"try_from","","",1254,[[],["result",4]]],[11,"into","","",1254,[[]]],[11,"try_into","","",1254,[[],["result",4]]],[11,"type_id","","",1254,[[],["typeid",3]]],[11,"from","","",1255,[[]]],[11,"borrow","","",1255,[[]]],[11,"borrow_mut","","",1255,[[]]],[11,"try_from","","",1255,[[],["result",4]]],[11,"into","","",1255,[[]]],[11,"try_into","","",1255,[[],["result",4]]],[11,"type_id","","",1255,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::intenset","",1258,[[]]],[11,"borrow","","",1258,[[]]],[11,"borrow_mut","","",1258,[[]]],[11,"try_from","","",1258,[[],["result",4]]],[11,"into","","",1258,[[]]],[11,"try_into","","",1258,[[],["result",4]]],[11,"type_id","","",1258,[[],["typeid",3]]],[11,"from","","",1259,[[]]],[11,"borrow","","",1259,[[]]],[11,"borrow_mut","","",1259,[[]]],[11,"try_from","","",1259,[[],["result",4]]],[11,"into","","",1259,[[]]],[11,"try_into","","",1259,[[],["result",4]]],[11,"type_id","","",1259,[[],["typeid",3]]],[11,"from","","",1260,[[]]],[11,"borrow","","",1260,[[]]],[11,"borrow_mut","","",1260,[[]]],[11,"try_from","","",1260,[[],["result",4]]],[11,"into","","",1260,[[]]],[11,"try_into","","",1260,[[],["result",4]]],[11,"type_id","","",1260,[[],["typeid",3]]],[11,"from","","",1261,[[]]],[11,"borrow","","",1261,[[]]],[11,"borrow_mut","","",1261,[[]]],[11,"try_from","","",1261,[[],["result",4]]],[11,"into","","",1261,[[]]],[11,"try_into","","",1261,[[],["result",4]]],[11,"type_id","","",1261,[[],["typeid",3]]],[11,"from","","",1262,[[]]],[11,"borrow","","",1262,[[]]],[11,"borrow_mut","","",1262,[[]]],[11,"try_from","","",1262,[[],["result",4]]],[11,"into","","",1262,[[]]],[11,"try_into","","",1262,[[],["result",4]]],[11,"type_id","","",1262,[[],["typeid",3]]],[11,"from","","",1263,[[]]],[11,"borrow","","",1263,[[]]],[11,"borrow_mut","","",1263,[[]]],[11,"try_from","","",1263,[[],["result",4]]],[11,"into","","",1263,[[]]],[11,"try_into","","",1263,[[],["result",4]]],[11,"type_id","","",1263,[[],["typeid",3]]],[11,"from","","",1264,[[]]],[11,"borrow","","",1264,[[]]],[11,"borrow_mut","","",1264,[[]]],[11,"try_from","","",1264,[[],["result",4]]],[11,"into","","",1264,[[]]],[11,"try_into","","",1264,[[],["result",4]]],[11,"type_id","","",1264,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::intflag","",1267,[[]]],[11,"borrow","","",1267,[[]]],[11,"borrow_mut","","",1267,[[]]],[11,"try_from","","",1267,[[],["result",4]]],[11,"into","","",1267,[[]]],[11,"try_into","","",1267,[[],["result",4]]],[11,"type_id","","",1267,[[],["typeid",3]]],[11,"from","","",1268,[[]]],[11,"borrow","","",1268,[[]]],[11,"borrow_mut","","",1268,[[]]],[11,"try_from","","",1268,[[],["result",4]]],[11,"into","","",1268,[[]]],[11,"try_into","","",1268,[[],["result",4]]],[11,"type_id","","",1268,[[],["typeid",3]]],[11,"from","","",1269,[[]]],[11,"borrow","","",1269,[[]]],[11,"borrow_mut","","",1269,[[]]],[11,"try_from","","",1269,[[],["result",4]]],[11,"into","","",1269,[[]]],[11,"try_into","","",1269,[[],["result",4]]],[11,"type_id","","",1269,[[],["typeid",3]]],[11,"from","","",1270,[[]]],[11,"borrow","","",1270,[[]]],[11,"borrow_mut","","",1270,[[]]],[11,"try_from","","",1270,[[],["result",4]]],[11,"into","","",1270,[[]]],[11,"try_into","","",1270,[[],["result",4]]],[11,"type_id","","",1270,[[],["typeid",3]]],[11,"from","","",1271,[[]]],[11,"borrow","","",1271,[[]]],[11,"borrow_mut","","",1271,[[]]],[11,"try_from","","",1271,[[],["result",4]]],[11,"into","","",1271,[[]]],[11,"try_into","","",1271,[[],["result",4]]],[11,"type_id","","",1271,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::status","",1274,[[]]],[11,"borrow","","",1274,[[]]],[11,"borrow_mut","","",1274,[[]]],[11,"try_from","","",1274,[[],["result",4]]],[11,"into","","",1274,[[]]],[11,"try_into","","",1274,[[],["result",4]]],[11,"type_id","","",1274,[[],["typeid",3]]],[11,"from","","",1275,[[]]],[11,"borrow","","",1275,[[]]],[11,"borrow_mut","","",1275,[[]]],[11,"try_from","","",1275,[[],["result",4]]],[11,"into","","",1275,[[]]],[11,"try_into","","",1275,[[],["result",4]]],[11,"type_id","","",1275,[[],["typeid",3]]],[11,"from","","",1276,[[]]],[11,"borrow","","",1276,[[]]],[11,"borrow_mut","","",1276,[[]]],[11,"try_from","","",1276,[[],["result",4]]],[11,"into","","",1276,[[]]],[11,"try_into","","",1276,[[],["result",4]]],[11,"type_id","","",1276,[[],["typeid",3]]],[11,"from","","",1277,[[]]],[11,"borrow","","",1277,[[]]],[11,"borrow_mut","","",1277,[[]]],[11,"try_from","","",1277,[[],["result",4]]],[11,"into","","",1277,[[]]],[11,"try_into","","",1277,[[],["result",4]]],[11,"type_id","","",1277,[[],["typeid",3]]],[11,"from","","",1278,[[]]],[11,"borrow","","",1278,[[]]],[11,"borrow_mut","","",1278,[[]]],[11,"try_from","","",1278,[[],["result",4]]],[11,"into","","",1278,[[]]],[11,"try_into","","",1278,[[],["result",4]]],[11,"type_id","","",1278,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::data","",1282,[[]]],[11,"borrow","","",1282,[[]]],[11,"borrow_mut","","",1282,[[]]],[11,"try_from","","",1282,[[],["result",4]]],[11,"into","","",1282,[[]]],[11,"try_into","","",1282,[[],["result",4]]],[11,"type_id","","",1282,[[],["typeid",3]]],[11,"from","atsamd11c::sercom0::usart::dbgctrl","",1285,[[]]],[11,"borrow","","",1285,[[]]],[11,"borrow_mut","","",1285,[[]]],[11,"try_from","","",1285,[[],["result",4]]],[11,"into","","",1285,[[]]],[11,"try_into","","",1285,[[],["result",4]]],[11,"type_id","","",1285,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl","",1289,[[]]],[11,"borrow","","",1289,[[]]],[11,"borrow_mut","","",1289,[[]]],[11,"try_from","","",1289,[[],["result",4]]],[11,"into","","",1289,[[]]],[11,"try_into","","",1289,[[],["result",4]]],[11,"type_id","","",1289,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::intenclr","",1290,[[]]],[11,"borrow","","",1290,[[]]],[11,"borrow_mut","","",1290,[[]]],[11,"try_from","","",1290,[[],["result",4]]],[11,"into","","",1290,[[]]],[11,"try_into","","",1290,[[],["result",4]]],[11,"type_id","","",1290,[[],["typeid",3]]],[11,"from","","",1291,[[]]],[11,"borrow","","",1291,[[]]],[11,"borrow_mut","","",1291,[[]]],[11,"try_from","","",1291,[[],["result",4]]],[11,"into","","",1291,[[]]],[11,"try_into","","",1291,[[],["result",4]]],[11,"type_id","","",1291,[[],["typeid",3]]],[11,"from","","",1292,[[]]],[11,"borrow","","",1292,[[]]],[11,"borrow_mut","","",1292,[[]]],[11,"try_from","","",1292,[[],["result",4]]],[11,"into","","",1292,[[]]],[11,"try_into","","",1292,[[],["result",4]]],[11,"type_id","","",1292,[[],["typeid",3]]],[11,"from","","",1293,[[]]],[11,"borrow","","",1293,[[]]],[11,"borrow_mut","","",1293,[[]]],[11,"try_from","","",1293,[[],["result",4]]],[11,"into","","",1293,[[]]],[11,"try_into","","",1293,[[],["result",4]]],[11,"type_id","","",1293,[[],["typeid",3]]],[11,"from","","",1294,[[]]],[11,"borrow","","",1294,[[]]],[11,"borrow_mut","","",1294,[[]]],[11,"try_from","","",1294,[[],["result",4]]],[11,"into","","",1294,[[]]],[11,"try_into","","",1294,[[],["result",4]]],[11,"type_id","","",1294,[[],["typeid",3]]],[11,"from","","",1295,[[]]],[11,"borrow","","",1295,[[]]],[11,"borrow_mut","","",1295,[[]]],[11,"try_from","","",1295,[[],["result",4]]],[11,"into","","",1295,[[]]],[11,"try_into","","",1295,[[],["result",4]]],[11,"type_id","","",1295,[[],["typeid",3]]],[11,"from","","",1296,[[]]],[11,"borrow","","",1296,[[]]],[11,"borrow_mut","","",1296,[[]]],[11,"try_from","","",1296,[[],["result",4]]],[11,"into","","",1296,[[]]],[11,"try_into","","",1296,[[],["result",4]]],[11,"type_id","","",1296,[[],["typeid",3]]],[11,"from","","",1297,[[]]],[11,"borrow","","",1297,[[]]],[11,"borrow_mut","","",1297,[[]]],[11,"try_from","","",1297,[[],["result",4]]],[11,"into","","",1297,[[]]],[11,"try_into","","",1297,[[],["result",4]]],[11,"type_id","","",1297,[[],["typeid",3]]],[11,"from","","",1298,[[]]],[11,"borrow","","",1298,[[]]],[11,"borrow_mut","","",1298,[[]]],[11,"try_from","","",1298,[[],["result",4]]],[11,"into","","",1298,[[]]],[11,"try_into","","",1298,[[],["result",4]]],[11,"type_id","","",1298,[[],["typeid",3]]],[11,"from","","",1299,[[]]],[11,"borrow","","",1299,[[]]],[11,"borrow_mut","","",1299,[[]]],[11,"try_from","","",1299,[[],["result",4]]],[11,"into","","",1299,[[]]],[11,"try_into","","",1299,[[],["result",4]]],[11,"type_id","","",1299,[[],["typeid",3]]],[11,"from","","",1300,[[]]],[11,"borrow","","",1300,[[]]],[11,"borrow_mut","","",1300,[[]]],[11,"try_from","","",1300,[[],["result",4]]],[11,"into","","",1300,[[]]],[11,"try_into","","",1300,[[],["result",4]]],[11,"type_id","","",1300,[[],["typeid",3]]],[11,"from","","",1301,[[]]],[11,"borrow","","",1301,[[]]],[11,"borrow_mut","","",1301,[[]]],[11,"try_from","","",1301,[[],["result",4]]],[11,"into","","",1301,[[]]],[11,"try_into","","",1301,[[],["result",4]]],[11,"type_id","","",1301,[[],["typeid",3]]],[11,"from","","",1302,[[]]],[11,"borrow","","",1302,[[]]],[11,"borrow_mut","","",1302,[[]]],[11,"try_from","","",1302,[[],["result",4]]],[11,"into","","",1302,[[]]],[11,"try_into","","",1302,[[],["result",4]]],[11,"type_id","","",1302,[[],["typeid",3]]],[11,"from","","",1303,[[]]],[11,"borrow","","",1303,[[]]],[11,"borrow_mut","","",1303,[[]]],[11,"try_from","","",1303,[[],["result",4]]],[11,"into","","",1303,[[]]],[11,"try_into","","",1303,[[],["result",4]]],[11,"type_id","","",1303,[[],["typeid",3]]],[11,"from","","",1304,[[]]],[11,"borrow","","",1304,[[]]],[11,"borrow_mut","","",1304,[[]]],[11,"try_from","","",1304,[[],["result",4]]],[11,"into","","",1304,[[]]],[11,"try_into","","",1304,[[],["result",4]]],[11,"type_id","","",1304,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::intenset","",1307,[[]]],[11,"borrow","","",1307,[[]]],[11,"borrow_mut","","",1307,[[]]],[11,"try_from","","",1307,[[],["result",4]]],[11,"into","","",1307,[[]]],[11,"try_into","","",1307,[[],["result",4]]],[11,"type_id","","",1307,[[],["typeid",3]]],[11,"from","","",1308,[[]]],[11,"borrow","","",1308,[[]]],[11,"borrow_mut","","",1308,[[]]],[11,"try_from","","",1308,[[],["result",4]]],[11,"into","","",1308,[[]]],[11,"try_into","","",1308,[[],["result",4]]],[11,"type_id","","",1308,[[],["typeid",3]]],[11,"from","","",1309,[[]]],[11,"borrow","","",1309,[[]]],[11,"borrow_mut","","",1309,[[]]],[11,"try_from","","",1309,[[],["result",4]]],[11,"into","","",1309,[[]]],[11,"try_into","","",1309,[[],["result",4]]],[11,"type_id","","",1309,[[],["typeid",3]]],[11,"from","","",1310,[[]]],[11,"borrow","","",1310,[[]]],[11,"borrow_mut","","",1310,[[]]],[11,"try_from","","",1310,[[],["result",4]]],[11,"into","","",1310,[[]]],[11,"try_into","","",1310,[[],["result",4]]],[11,"type_id","","",1310,[[],["typeid",3]]],[11,"from","","",1311,[[]]],[11,"borrow","","",1311,[[]]],[11,"borrow_mut","","",1311,[[]]],[11,"try_from","","",1311,[[],["result",4]]],[11,"into","","",1311,[[]]],[11,"try_into","","",1311,[[],["result",4]]],[11,"type_id","","",1311,[[],["typeid",3]]],[11,"from","","",1312,[[]]],[11,"borrow","","",1312,[[]]],[11,"borrow_mut","","",1312,[[]]],[11,"try_from","","",1312,[[],["result",4]]],[11,"into","","",1312,[[]]],[11,"try_into","","",1312,[[],["result",4]]],[11,"type_id","","",1312,[[],["typeid",3]]],[11,"from","","",1313,[[]]],[11,"borrow","","",1313,[[]]],[11,"borrow_mut","","",1313,[[]]],[11,"try_from","","",1313,[[],["result",4]]],[11,"into","","",1313,[[]]],[11,"try_into","","",1313,[[],["result",4]]],[11,"type_id","","",1313,[[],["typeid",3]]],[11,"from","","",1314,[[]]],[11,"borrow","","",1314,[[]]],[11,"borrow_mut","","",1314,[[]]],[11,"try_from","","",1314,[[],["result",4]]],[11,"into","","",1314,[[]]],[11,"try_into","","",1314,[[],["result",4]]],[11,"type_id","","",1314,[[],["typeid",3]]],[11,"from","","",1315,[[]]],[11,"borrow","","",1315,[[]]],[11,"borrow_mut","","",1315,[[]]],[11,"try_from","","",1315,[[],["result",4]]],[11,"into","","",1315,[[]]],[11,"try_into","","",1315,[[],["result",4]]],[11,"type_id","","",1315,[[],["typeid",3]]],[11,"from","","",1316,[[]]],[11,"borrow","","",1316,[[]]],[11,"borrow_mut","","",1316,[[]]],[11,"try_from","","",1316,[[],["result",4]]],[11,"into","","",1316,[[]]],[11,"try_into","","",1316,[[],["result",4]]],[11,"type_id","","",1316,[[],["typeid",3]]],[11,"from","","",1317,[[]]],[11,"borrow","","",1317,[[]]],[11,"borrow_mut","","",1317,[[]]],[11,"try_from","","",1317,[[],["result",4]]],[11,"into","","",1317,[[]]],[11,"try_into","","",1317,[[],["result",4]]],[11,"type_id","","",1317,[[],["typeid",3]]],[11,"from","","",1318,[[]]],[11,"borrow","","",1318,[[]]],[11,"borrow_mut","","",1318,[[]]],[11,"try_from","","",1318,[[],["result",4]]],[11,"into","","",1318,[[]]],[11,"try_into","","",1318,[[],["result",4]]],[11,"type_id","","",1318,[[],["typeid",3]]],[11,"from","","",1319,[[]]],[11,"borrow","","",1319,[[]]],[11,"borrow_mut","","",1319,[[]]],[11,"try_from","","",1319,[[],["result",4]]],[11,"into","","",1319,[[]]],[11,"try_into","","",1319,[[],["result",4]]],[11,"type_id","","",1319,[[],["typeid",3]]],[11,"from","","",1320,[[]]],[11,"borrow","","",1320,[[]]],[11,"borrow_mut","","",1320,[[]]],[11,"try_from","","",1320,[[],["result",4]]],[11,"into","","",1320,[[]]],[11,"try_into","","",1320,[[],["result",4]]],[11,"type_id","","",1320,[[],["typeid",3]]],[11,"from","","",1321,[[]]],[11,"borrow","","",1321,[[]]],[11,"borrow_mut","","",1321,[[]]],[11,"try_from","","",1321,[[],["result",4]]],[11,"into","","",1321,[[]]],[11,"try_into","","",1321,[[],["result",4]]],[11,"type_id","","",1321,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::intflag","",1324,[[]]],[11,"borrow","","",1324,[[]]],[11,"borrow_mut","","",1324,[[]]],[11,"try_from","","",1324,[[],["result",4]]],[11,"into","","",1324,[[]]],[11,"try_into","","",1324,[[],["result",4]]],[11,"type_id","","",1324,[[],["typeid",3]]],[11,"from","","",1325,[[]]],[11,"borrow","","",1325,[[]]],[11,"borrow_mut","","",1325,[[]]],[11,"try_from","","",1325,[[],["result",4]]],[11,"into","","",1325,[[]]],[11,"try_into","","",1325,[[],["result",4]]],[11,"type_id","","",1325,[[],["typeid",3]]],[11,"from","","",1326,[[]]],[11,"borrow","","",1326,[[]]],[11,"borrow_mut","","",1326,[[]]],[11,"try_from","","",1326,[[],["result",4]]],[11,"into","","",1326,[[]]],[11,"try_into","","",1326,[[],["result",4]]],[11,"type_id","","",1326,[[],["typeid",3]]],[11,"from","","",1327,[[]]],[11,"borrow","","",1327,[[]]],[11,"borrow_mut","","",1327,[[]]],[11,"try_from","","",1327,[[],["result",4]]],[11,"into","","",1327,[[]]],[11,"try_into","","",1327,[[],["result",4]]],[11,"type_id","","",1327,[[],["typeid",3]]],[11,"from","","",1328,[[]]],[11,"borrow","","",1328,[[]]],[11,"borrow_mut","","",1328,[[]]],[11,"try_from","","",1328,[[],["result",4]]],[11,"into","","",1328,[[]]],[11,"try_into","","",1328,[[],["result",4]]],[11,"type_id","","",1328,[[],["typeid",3]]],[11,"from","","",1329,[[]]],[11,"borrow","","",1329,[[]]],[11,"borrow_mut","","",1329,[[]]],[11,"try_from","","",1329,[[],["result",4]]],[11,"into","","",1329,[[]]],[11,"try_into","","",1329,[[],["result",4]]],[11,"type_id","","",1329,[[],["typeid",3]]],[11,"from","","",1330,[[]]],[11,"borrow","","",1330,[[]]],[11,"borrow_mut","","",1330,[[]]],[11,"try_from","","",1330,[[],["result",4]]],[11,"into","","",1330,[[]]],[11,"try_into","","",1330,[[],["result",4]]],[11,"type_id","","",1330,[[],["typeid",3]]],[11,"from","","",1331,[[]]],[11,"borrow","","",1331,[[]]],[11,"borrow_mut","","",1331,[[]]],[11,"try_from","","",1331,[[],["result",4]]],[11,"into","","",1331,[[]]],[11,"try_into","","",1331,[[],["result",4]]],[11,"type_id","","",1331,[[],["typeid",3]]],[11,"from","","",1332,[[]]],[11,"borrow","","",1332,[[]]],[11,"borrow_mut","","",1332,[[]]],[11,"try_from","","",1332,[[],["result",4]]],[11,"into","","",1332,[[]]],[11,"try_into","","",1332,[[],["result",4]]],[11,"type_id","","",1332,[[],["typeid",3]]],[11,"from","","",1333,[[]]],[11,"borrow","","",1333,[[]]],[11,"borrow_mut","","",1333,[[]]],[11,"try_from","","",1333,[[],["result",4]]],[11,"into","","",1333,[[]]],[11,"try_into","","",1333,[[],["result",4]]],[11,"type_id","","",1333,[[],["typeid",3]]],[11,"from","","",1334,[[]]],[11,"borrow","","",1334,[[]]],[11,"borrow_mut","","",1334,[[]]],[11,"try_from","","",1334,[[],["result",4]]],[11,"into","","",1334,[[]]],[11,"try_into","","",1334,[[],["result",4]]],[11,"type_id","","",1334,[[],["typeid",3]]],[11,"from","","",1335,[[]]],[11,"borrow","","",1335,[[]]],[11,"borrow_mut","","",1335,[[]]],[11,"try_from","","",1335,[[],["result",4]]],[11,"into","","",1335,[[]]],[11,"try_into","","",1335,[[],["result",4]]],[11,"type_id","","",1335,[[],["typeid",3]]],[11,"from","","",1336,[[]]],[11,"borrow","","",1336,[[]]],[11,"borrow_mut","","",1336,[[]]],[11,"try_from","","",1336,[[],["result",4]]],[11,"into","","",1336,[[]]],[11,"try_into","","",1336,[[],["result",4]]],[11,"type_id","","",1336,[[],["typeid",3]]],[11,"from","","",1337,[[]]],[11,"borrow","","",1337,[[]]],[11,"borrow_mut","","",1337,[[]]],[11,"try_from","","",1337,[[],["result",4]]],[11,"into","","",1337,[[]]],[11,"try_into","","",1337,[[],["result",4]]],[11,"type_id","","",1337,[[],["typeid",3]]],[11,"from","","",1338,[[]]],[11,"borrow","","",1338,[[]]],[11,"borrow_mut","","",1338,[[]]],[11,"try_from","","",1338,[[],["result",4]]],[11,"into","","",1338,[[]]],[11,"try_into","","",1338,[[],["result",4]]],[11,"type_id","","",1338,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::xosc","",1343,[[]]],[11,"borrow","","",1343,[[]]],[11,"borrow_mut","","",1343,[[]]],[11,"try_from","","",1343,[[],["result",4]]],[11,"into","","",1343,[[]]],[11,"try_into","","",1343,[[],["result",4]]],[11,"type_id","","",1343,[[],["typeid",3]]],[11,"from","","",1344,[[]]],[11,"borrow","","",1344,[[]]],[11,"borrow_mut","","",1344,[[]]],[11,"try_from","","",1344,[[],["result",4]]],[11,"into","","",1344,[[]]],[11,"try_into","","",1344,[[],["result",4]]],[11,"type_id","","",1344,[[],["typeid",3]]],[11,"from","","",1345,[[]]],[11,"borrow","","",1345,[[]]],[11,"borrow_mut","","",1345,[[]]],[11,"try_from","","",1345,[[],["result",4]]],[11,"into","","",1345,[[]]],[11,"try_into","","",1345,[[],["result",4]]],[11,"type_id","","",1345,[[],["typeid",3]]],[11,"from","","",1346,[[]]],[11,"borrow","","",1346,[[]]],[11,"borrow_mut","","",1346,[[]]],[11,"try_from","","",1346,[[],["result",4]]],[11,"into","","",1346,[[]]],[11,"try_into","","",1346,[[],["result",4]]],[11,"type_id","","",1346,[[],["typeid",3]]],[11,"from","","",1348,[[]]],[11,"borrow","","",1348,[[]]],[11,"borrow_mut","","",1348,[[]]],[11,"try_from","","",1348,[[],["result",4]]],[11,"into","","",1348,[[]]],[11,"try_into","","",1348,[[],["result",4]]],[11,"type_id","","",1348,[[],["typeid",3]]],[11,"from","","",1349,[[]]],[11,"borrow","","",1349,[[]]],[11,"borrow_mut","","",1349,[[]]],[11,"try_from","","",1349,[[],["result",4]]],[11,"into","","",1349,[[]]],[11,"try_into","","",1349,[[],["result",4]]],[11,"type_id","","",1349,[[],["typeid",3]]],[11,"from","","",1350,[[]]],[11,"borrow","","",1350,[[]]],[11,"borrow_mut","","",1350,[[]]],[11,"try_from","","",1350,[[],["result",4]]],[11,"into","","",1350,[[]]],[11,"try_into","","",1350,[[],["result",4]]],[11,"type_id","","",1350,[[],["typeid",3]]],[11,"from","","",1342,[[]]],[11,"borrow","","",1342,[[]]],[11,"borrow_mut","","",1342,[[]]],[11,"try_from","","",1342,[[],["result",4]]],[11,"into","","",1342,[[]]],[11,"try_into","","",1342,[[],["result",4]]],[11,"type_id","","",1342,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::xosc32k","",1353,[[]]],[11,"borrow","","",1353,[[]]],[11,"borrow_mut","","",1353,[[]]],[11,"try_from","","",1353,[[],["result",4]]],[11,"into","","",1353,[[]]],[11,"try_into","","",1353,[[],["result",4]]],[11,"type_id","","",1353,[[],["typeid",3]]],[11,"from","","",1354,[[]]],[11,"borrow","","",1354,[[]]],[11,"borrow_mut","","",1354,[[]]],[11,"try_from","","",1354,[[],["result",4]]],[11,"into","","",1354,[[]]],[11,"try_into","","",1354,[[],["result",4]]],[11,"type_id","","",1354,[[],["typeid",3]]],[11,"from","","",1355,[[]]],[11,"borrow","","",1355,[[]]],[11,"borrow_mut","","",1355,[[]]],[11,"try_from","","",1355,[[],["result",4]]],[11,"into","","",1355,[[]]],[11,"try_into","","",1355,[[],["result",4]]],[11,"type_id","","",1355,[[],["typeid",3]]],[11,"from","","",1356,[[]]],[11,"borrow","","",1356,[[]]],[11,"borrow_mut","","",1356,[[]]],[11,"try_from","","",1356,[[],["result",4]]],[11,"into","","",1356,[[]]],[11,"try_into","","",1356,[[],["result",4]]],[11,"type_id","","",1356,[[],["typeid",3]]],[11,"from","","",1357,[[]]],[11,"borrow","","",1357,[[]]],[11,"borrow_mut","","",1357,[[]]],[11,"try_from","","",1357,[[],["result",4]]],[11,"into","","",1357,[[]]],[11,"try_into","","",1357,[[],["result",4]]],[11,"type_id","","",1357,[[],["typeid",3]]],[11,"from","","",1358,[[]]],[11,"borrow","","",1358,[[]]],[11,"borrow_mut","","",1358,[[]]],[11,"try_from","","",1358,[[],["result",4]]],[11,"into","","",1358,[[]]],[11,"try_into","","",1358,[[],["result",4]]],[11,"type_id","","",1358,[[],["typeid",3]]],[11,"from","","",1359,[[]]],[11,"borrow","","",1359,[[]]],[11,"borrow_mut","","",1359,[[]]],[11,"try_from","","",1359,[[],["result",4]]],[11,"into","","",1359,[[]]],[11,"try_into","","",1359,[[],["result",4]]],[11,"type_id","","",1359,[[],["typeid",3]]],[11,"from","","",1360,[[]]],[11,"borrow","","",1360,[[]]],[11,"borrow_mut","","",1360,[[]]],[11,"try_from","","",1360,[[],["result",4]]],[11,"into","","",1360,[[]]],[11,"try_into","","",1360,[[],["result",4]]],[11,"type_id","","",1360,[[],["typeid",3]]],[11,"from","","",1361,[[]]],[11,"borrow","","",1361,[[]]],[11,"borrow_mut","","",1361,[[]]],[11,"try_from","","",1361,[[],["result",4]]],[11,"into","","",1361,[[]]],[11,"try_into","","",1361,[[],["result",4]]],[11,"type_id","","",1361,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::osc32k","",1364,[[]]],[11,"borrow","","",1364,[[]]],[11,"borrow_mut","","",1364,[[]]],[11,"try_from","","",1364,[[],["result",4]]],[11,"into","","",1364,[[]]],[11,"try_into","","",1364,[[],["result",4]]],[11,"type_id","","",1364,[[],["typeid",3]]],[11,"from","","",1365,[[]]],[11,"borrow","","",1365,[[]]],[11,"borrow_mut","","",1365,[[]]],[11,"try_from","","",1365,[[],["result",4]]],[11,"into","","",1365,[[]]],[11,"try_into","","",1365,[[],["result",4]]],[11,"type_id","","",1365,[[],["typeid",3]]],[11,"from","","",1366,[[]]],[11,"borrow","","",1366,[[]]],[11,"borrow_mut","","",1366,[[]]],[11,"try_from","","",1366,[[],["result",4]]],[11,"into","","",1366,[[]]],[11,"try_into","","",1366,[[],["result",4]]],[11,"type_id","","",1366,[[],["typeid",3]]],[11,"from","","",1367,[[]]],[11,"borrow","","",1367,[[]]],[11,"borrow_mut","","",1367,[[]]],[11,"try_from","","",1367,[[],["result",4]]],[11,"into","","",1367,[[]]],[11,"try_into","","",1367,[[],["result",4]]],[11,"type_id","","",1367,[[],["typeid",3]]],[11,"from","","",1368,[[]]],[11,"borrow","","",1368,[[]]],[11,"borrow_mut","","",1368,[[]]],[11,"try_from","","",1368,[[],["result",4]]],[11,"into","","",1368,[[]]],[11,"try_into","","",1368,[[],["result",4]]],[11,"type_id","","",1368,[[],["typeid",3]]],[11,"from","","",1369,[[]]],[11,"borrow","","",1369,[[]]],[11,"borrow_mut","","",1369,[[]]],[11,"try_from","","",1369,[[],["result",4]]],[11,"into","","",1369,[[]]],[11,"try_into","","",1369,[[],["result",4]]],[11,"type_id","","",1369,[[],["typeid",3]]],[11,"from","","",1370,[[]]],[11,"borrow","","",1370,[[]]],[11,"borrow_mut","","",1370,[[]]],[11,"try_from","","",1370,[[],["result",4]]],[11,"into","","",1370,[[]]],[11,"try_into","","",1370,[[],["result",4]]],[11,"type_id","","",1370,[[],["typeid",3]]],[11,"from","","",1371,[[]]],[11,"borrow","","",1371,[[]]],[11,"borrow_mut","","",1371,[[]]],[11,"try_from","","",1371,[[],["result",4]]],[11,"into","","",1371,[[]]],[11,"try_into","","",1371,[[],["result",4]]],[11,"type_id","","",1371,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::osculp32k","",1374,[[]]],[11,"borrow","","",1374,[[]]],[11,"borrow_mut","","",1374,[[]]],[11,"try_from","","",1374,[[],["result",4]]],[11,"into","","",1374,[[]]],[11,"try_into","","",1374,[[],["result",4]]],[11,"type_id","","",1374,[[],["typeid",3]]],[11,"from","","",1375,[[]]],[11,"borrow","","",1375,[[]]],[11,"borrow_mut","","",1375,[[]]],[11,"try_from","","",1375,[[],["result",4]]],[11,"into","","",1375,[[]]],[11,"try_into","","",1375,[[],["result",4]]],[11,"type_id","","",1375,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::osc8m","",1380,[[]]],[11,"borrow","","",1380,[[]]],[11,"borrow_mut","","",1380,[[]]],[11,"try_from","","",1380,[[],["result",4]]],[11,"into","","",1380,[[]]],[11,"try_into","","",1380,[[],["result",4]]],[11,"type_id","","",1380,[[],["typeid",3]]],[11,"from","","",1381,[[]]],[11,"borrow","","",1381,[[]]],[11,"borrow_mut","","",1381,[[]]],[11,"try_from","","",1381,[[],["result",4]]],[11,"into","","",1381,[[]]],[11,"try_into","","",1381,[[],["result",4]]],[11,"type_id","","",1381,[[],["typeid",3]]],[11,"from","","",1382,[[]]],[11,"borrow","","",1382,[[]]],[11,"borrow_mut","","",1382,[[]]],[11,"try_from","","",1382,[[],["result",4]]],[11,"into","","",1382,[[]]],[11,"try_into","","",1382,[[],["result",4]]],[11,"type_id","","",1382,[[],["typeid",3]]],[11,"from","","",1384,[[]]],[11,"borrow","","",1384,[[]]],[11,"borrow_mut","","",1384,[[]]],[11,"try_from","","",1384,[[],["result",4]]],[11,"into","","",1384,[[]]],[11,"try_into","","",1384,[[],["result",4]]],[11,"type_id","","",1384,[[],["typeid",3]]],[11,"from","","",1385,[[]]],[11,"borrow","","",1385,[[]]],[11,"borrow_mut","","",1385,[[]]],[11,"try_from","","",1385,[[],["result",4]]],[11,"into","","",1385,[[]]],[11,"try_into","","",1385,[[],["result",4]]],[11,"type_id","","",1385,[[],["typeid",3]]],[11,"from","","",1387,[[]]],[11,"borrow","","",1387,[[]]],[11,"borrow_mut","","",1387,[[]]],[11,"try_from","","",1387,[[],["result",4]]],[11,"into","","",1387,[[]]],[11,"try_into","","",1387,[[],["result",4]]],[11,"type_id","","",1387,[[],["typeid",3]]],[11,"from","","",1378,[[]]],[11,"borrow","","",1378,[[]]],[11,"borrow_mut","","",1378,[[]]],[11,"try_from","","",1378,[[],["result",4]]],[11,"into","","",1378,[[]]],[11,"try_into","","",1378,[[],["result",4]]],[11,"type_id","","",1378,[[],["typeid",3]]],[11,"from","","",1379,[[]]],[11,"borrow","","",1379,[[]]],[11,"borrow_mut","","",1379,[[]]],[11,"try_from","","",1379,[[],["result",4]]],[11,"into","","",1379,[[]]],[11,"try_into","","",1379,[[],["result",4]]],[11,"type_id","","",1379,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dfllctrl","",1390,[[]]],[11,"borrow","","",1390,[[]]],[11,"borrow_mut","","",1390,[[]]],[11,"try_from","","",1390,[[],["result",4]]],[11,"into","","",1390,[[]]],[11,"try_into","","",1390,[[],["result",4]]],[11,"type_id","","",1390,[[],["typeid",3]]],[11,"from","","",1391,[[]]],[11,"borrow","","",1391,[[]]],[11,"borrow_mut","","",1391,[[]]],[11,"try_from","","",1391,[[],["result",4]]],[11,"into","","",1391,[[]]],[11,"try_into","","",1391,[[],["result",4]]],[11,"type_id","","",1391,[[],["typeid",3]]],[11,"from","","",1392,[[]]],[11,"borrow","","",1392,[[]]],[11,"borrow_mut","","",1392,[[]]],[11,"try_from","","",1392,[[],["result",4]]],[11,"into","","",1392,[[]]],[11,"try_into","","",1392,[[],["result",4]]],[11,"type_id","","",1392,[[],["typeid",3]]],[11,"from","","",1393,[[]]],[11,"borrow","","",1393,[[]]],[11,"borrow_mut","","",1393,[[]]],[11,"try_from","","",1393,[[],["result",4]]],[11,"into","","",1393,[[]]],[11,"try_into","","",1393,[[],["result",4]]],[11,"type_id","","",1393,[[],["typeid",3]]],[11,"from","","",1394,[[]]],[11,"borrow","","",1394,[[]]],[11,"borrow_mut","","",1394,[[]]],[11,"try_from","","",1394,[[],["result",4]]],[11,"into","","",1394,[[]]],[11,"try_into","","",1394,[[],["result",4]]],[11,"type_id","","",1394,[[],["typeid",3]]],[11,"from","","",1395,[[]]],[11,"borrow","","",1395,[[]]],[11,"borrow_mut","","",1395,[[]]],[11,"try_from","","",1395,[[],["result",4]]],[11,"into","","",1395,[[]]],[11,"try_into","","",1395,[[],["result",4]]],[11,"type_id","","",1395,[[],["typeid",3]]],[11,"from","","",1396,[[]]],[11,"borrow","","",1396,[[]]],[11,"borrow_mut","","",1396,[[]]],[11,"try_from","","",1396,[[],["result",4]]],[11,"into","","",1396,[[]]],[11,"try_into","","",1396,[[],["result",4]]],[11,"type_id","","",1396,[[],["typeid",3]]],[11,"from","","",1397,[[]]],[11,"borrow","","",1397,[[]]],[11,"borrow_mut","","",1397,[[]]],[11,"try_from","","",1397,[[],["result",4]]],[11,"into","","",1397,[[]]],[11,"try_into","","",1397,[[],["result",4]]],[11,"type_id","","",1397,[[],["typeid",3]]],[11,"from","","",1398,[[]]],[11,"borrow","","",1398,[[]]],[11,"borrow_mut","","",1398,[[]]],[11,"try_from","","",1398,[[],["result",4]]],[11,"into","","",1398,[[]]],[11,"try_into","","",1398,[[],["result",4]]],[11,"type_id","","",1398,[[],["typeid",3]]],[11,"from","","",1399,[[]]],[11,"borrow","","",1399,[[]]],[11,"borrow_mut","","",1399,[[]]],[11,"try_from","","",1399,[[],["result",4]]],[11,"into","","",1399,[[]]],[11,"try_into","","",1399,[[],["result",4]]],[11,"type_id","","",1399,[[],["typeid",3]]],[11,"from","","",1400,[[]]],[11,"borrow","","",1400,[[]]],[11,"borrow_mut","","",1400,[[]]],[11,"try_from","","",1400,[[],["result",4]]],[11,"into","","",1400,[[]]],[11,"try_into","","",1400,[[],["result",4]]],[11,"type_id","","",1400,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dfllval","",1403,[[]]],[11,"borrow","","",1403,[[]]],[11,"borrow_mut","","",1403,[[]]],[11,"try_from","","",1403,[[],["result",4]]],[11,"into","","",1403,[[]]],[11,"try_into","","",1403,[[],["result",4]]],[11,"type_id","","",1403,[[],["typeid",3]]],[11,"from","","",1404,[[]]],[11,"borrow","","",1404,[[]]],[11,"borrow_mut","","",1404,[[]]],[11,"try_from","","",1404,[[],["result",4]]],[11,"into","","",1404,[[]]],[11,"try_into","","",1404,[[],["result",4]]],[11,"type_id","","",1404,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dfllmul","",1407,[[]]],[11,"borrow","","",1407,[[]]],[11,"borrow_mut","","",1407,[[]]],[11,"try_from","","",1407,[[],["result",4]]],[11,"into","","",1407,[[]]],[11,"try_into","","",1407,[[],["result",4]]],[11,"type_id","","",1407,[[],["typeid",3]]],[11,"from","","",1408,[[]]],[11,"borrow","","",1408,[[]]],[11,"borrow_mut","","",1408,[[]]],[11,"try_from","","",1408,[[],["result",4]]],[11,"into","","",1408,[[]]],[11,"try_into","","",1408,[[],["result",4]]],[11,"type_id","","",1408,[[],["typeid",3]]],[11,"from","","",1409,[[]]],[11,"borrow","","",1409,[[]]],[11,"borrow_mut","","",1409,[[]]],[11,"try_from","","",1409,[[],["result",4]]],[11,"into","","",1409,[[]]],[11,"try_into","","",1409,[[],["result",4]]],[11,"type_id","","",1409,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dfllsync","",1412,[[]]],[11,"borrow","","",1412,[[]]],[11,"borrow_mut","","",1412,[[]]],[11,"try_from","","",1412,[[],["result",4]]],[11,"into","","",1412,[[]]],[11,"try_into","","",1412,[[],["result",4]]],[11,"type_id","","",1412,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::bod33","",1416,[[]]],[11,"borrow","","",1416,[[]]],[11,"borrow_mut","","",1416,[[]]],[11,"try_from","","",1416,[[],["result",4]]],[11,"into","","",1416,[[]]],[11,"try_into","","",1416,[[],["result",4]]],[11,"type_id","","",1416,[[],["typeid",3]]],[11,"from","","",1417,[[]]],[11,"borrow","","",1417,[[]]],[11,"borrow_mut","","",1417,[[]]],[11,"try_from","","",1417,[[],["result",4]]],[11,"into","","",1417,[[]]],[11,"try_into","","",1417,[[],["result",4]]],[11,"type_id","","",1417,[[],["typeid",3]]],[11,"from","","",1419,[[]]],[11,"borrow","","",1419,[[]]],[11,"borrow_mut","","",1419,[[]]],[11,"try_from","","",1419,[[],["result",4]]],[11,"into","","",1419,[[]]],[11,"try_into","","",1419,[[],["result",4]]],[11,"type_id","","",1419,[[],["typeid",3]]],[11,"from","","",1420,[[]]],[11,"borrow","","",1420,[[]]],[11,"borrow_mut","","",1420,[[]]],[11,"try_from","","",1420,[[],["result",4]]],[11,"into","","",1420,[[]]],[11,"try_into","","",1420,[[],["result",4]]],[11,"type_id","","",1420,[[],["typeid",3]]],[11,"from","","",1421,[[]]],[11,"borrow","","",1421,[[]]],[11,"borrow_mut","","",1421,[[]]],[11,"try_from","","",1421,[[],["result",4]]],[11,"into","","",1421,[[]]],[11,"try_into","","",1421,[[],["result",4]]],[11,"type_id","","",1421,[[],["typeid",3]]],[11,"from","","",1422,[[]]],[11,"borrow","","",1422,[[]]],[11,"borrow_mut","","",1422,[[]]],[11,"try_from","","",1422,[[],["result",4]]],[11,"into","","",1422,[[]]],[11,"try_into","","",1422,[[],["result",4]]],[11,"type_id","","",1422,[[],["typeid",3]]],[11,"from","","",1424,[[]]],[11,"borrow","","",1424,[[]]],[11,"borrow_mut","","",1424,[[]]],[11,"try_from","","",1424,[[],["result",4]]],[11,"into","","",1424,[[]]],[11,"try_into","","",1424,[[],["result",4]]],[11,"type_id","","",1424,[[],["typeid",3]]],[11,"from","","",1425,[[]]],[11,"borrow","","",1425,[[]]],[11,"borrow_mut","","",1425,[[]]],[11,"try_from","","",1425,[[],["result",4]]],[11,"into","","",1425,[[]]],[11,"try_into","","",1425,[[],["result",4]]],[11,"type_id","","",1425,[[],["typeid",3]]],[11,"from","","",1414,[[]]],[11,"borrow","","",1414,[[]]],[11,"borrow_mut","","",1414,[[]]],[11,"try_from","","",1414,[[],["result",4]]],[11,"into","","",1414,[[]]],[11,"try_into","","",1414,[[],["result",4]]],[11,"type_id","","",1414,[[],["typeid",3]]],[11,"from","","",1415,[[]]],[11,"borrow","","",1415,[[]]],[11,"borrow_mut","","",1415,[[]]],[11,"try_from","","",1415,[[],["result",4]]],[11,"into","","",1415,[[]]],[11,"try_into","","",1415,[[],["result",4]]],[11,"type_id","","",1415,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::vref","",1428,[[]]],[11,"borrow","","",1428,[[]]],[11,"borrow_mut","","",1428,[[]]],[11,"try_from","","",1428,[[],["result",4]]],[11,"into","","",1428,[[]]],[11,"try_into","","",1428,[[],["result",4]]],[11,"type_id","","",1428,[[],["typeid",3]]],[11,"from","","",1429,[[]]],[11,"borrow","","",1429,[[]]],[11,"borrow_mut","","",1429,[[]]],[11,"try_from","","",1429,[[],["result",4]]],[11,"into","","",1429,[[]]],[11,"try_into","","",1429,[[],["result",4]]],[11,"type_id","","",1429,[[],["typeid",3]]],[11,"from","","",1430,[[]]],[11,"borrow","","",1430,[[]]],[11,"borrow_mut","","",1430,[[]]],[11,"try_from","","",1430,[[],["result",4]]],[11,"into","","",1430,[[]]],[11,"try_into","","",1430,[[],["result",4]]],[11,"type_id","","",1430,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dpllctrla","",1433,[[]]],[11,"borrow","","",1433,[[]]],[11,"borrow_mut","","",1433,[[]]],[11,"try_from","","",1433,[[],["result",4]]],[11,"into","","",1433,[[]]],[11,"try_into","","",1433,[[],["result",4]]],[11,"type_id","","",1433,[[],["typeid",3]]],[11,"from","","",1434,[[]]],[11,"borrow","","",1434,[[]]],[11,"borrow_mut","","",1434,[[]]],[11,"try_from","","",1434,[[],["result",4]]],[11,"into","","",1434,[[]]],[11,"try_into","","",1434,[[],["result",4]]],[11,"type_id","","",1434,[[],["typeid",3]]],[11,"from","","",1435,[[]]],[11,"borrow","","",1435,[[]]],[11,"borrow_mut","","",1435,[[]]],[11,"try_from","","",1435,[[],["result",4]]],[11,"into","","",1435,[[]]],[11,"try_into","","",1435,[[],["result",4]]],[11,"type_id","","",1435,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dpllratio","",1438,[[]]],[11,"borrow","","",1438,[[]]],[11,"borrow_mut","","",1438,[[]]],[11,"try_from","","",1438,[[],["result",4]]],[11,"into","","",1438,[[]]],[11,"try_into","","",1438,[[],["result",4]]],[11,"type_id","","",1438,[[],["typeid",3]]],[11,"from","","",1439,[[]]],[11,"borrow","","",1439,[[]]],[11,"borrow_mut","","",1439,[[]]],[11,"try_from","","",1439,[[],["result",4]]],[11,"into","","",1439,[[]]],[11,"try_into","","",1439,[[],["result",4]]],[11,"type_id","","",1439,[[],["typeid",3]]],[11,"from","atsamd11c::sysctrl::dpllctrlb","",1446,[[]]],[11,"borrow","","",1446,[[]]],[11,"borrow_mut","","",1446,[[]]],[11,"try_from","","",1446,[[],["result",4]]],[11,"into","","",1446,[[]]],[11,"try_into","","",1446,[[],["result",4]]],[11,"type_id","","",1446,[[],["typeid",3]]],[11,"from","","",1447,[[]]],[11,"borrow","","",1447,[[]]],[11,"borrow_mut","","",1447,[[]]],[11,"try_from","","",1447,[[],["result",4]]],[11,"into","","",1447,[[]]],[11,"try_into","","",1447,[[],["result",4]]],[11,"type_id","","",1447,[[],["typeid",3]]],[11,"from","","",1448,[[]]],[11,"borrow","","",1448,[[]]],[11,"borrow_mut","","",1448,[[]]],[11,"try_from","","",1448,[[],["result",4]]],[11,"into","","",1448,[[]]],[11,"try_into","","",1448,[[],["result",4]]],[11,"type_id","","",1448,[[],["typeid",3]]],[11,"from","","",1450,[[]]],[11,"borrow","","",1450,[[]]],[11,"borrow_mut","","",1450,[[]]],[11,"try_from","","",1450,[[],["result",4]]],[11,"into","","",1450,[[]]],[11,"try_into","","",1450,[[],["result",4]]],[11,"type_id","","",1450,[[],["typeid",3]]],[11,"from","","",1452,[[]]],[11,"borrow","","",1452,[[]]],[11,"borrow_mut","","",1452,[[]]],[11,"try_from","","",1452,[[],["result",4]]],[11,"into","","",1452,[[]]],[11,"try_into","","",1452,[[],["result",4]]],[11,"type_id","","",1452,[[],["typeid",3]]],[11,"from","","",1453,[[]]],[11,"borrow","","",1453,[[]]],[11,"borrow_mut","","",1453,[[]]],[11,"try_from","","",1453,[[],["result",4]]],[11,"into","","",1453,[[]]],[11,"try_into","","",1453,[[],["result",4]]],[11,"type_id","","",1453,[[],["typeid",3]]],[11,"from","","",1454,[[]]],[11,"borrow","","",1454,[[]]],[11,"borrow_mut","","",1454,[[]]],[11,"try_from","","",1454,[[],["result",4]]],[11,"into","","",1454,[[]]],[11,"try_into","","",1454,[[],["result",4]]],[11,"type_id","","",1454,[[],["typeid",3]]],[11,"from","","",1442,[[]]],[11,"borrow","","",1442,[[]]],[11,"borrow_mut","","",1442,[[]]],[11,"try_from","","",1442,[[],["result",4]]],[11,"into","","",1442,[[]]],[11,"try_into","","",1442,[[],["result",4]]],[11,"type_id","","",1442,[[],["typeid",3]]],[11,"from","","",1443,[[]]],[11,"borrow","","",1443,[[]]],[11,"borrow_mut","","",1443,[[]]],[11,"try_from","","",1443,[[],["result",4]]],[11,"into","","",1443,[[]]],[11,"try_into","","",1443,[[],["result",4]]],[11,"type_id","","",1443,[[],["typeid",3]]],[11,"from","","",1444,[[]]],[11,"borrow","","",1444,[[]]],[11,"borrow_mut","","",1444,[[]]],[11,"try_from","","",1444,[[],["result",4]]],[11,"into","","",1444,[[]]],[11,"try_into","","",1444,[[],["result",4]]],[11,"type_id","","",1444,[[],["typeid",3]]],[11,"from","atsamd11c::tc1","",1713,[[]]],[11,"borrow","","",1713,[[]]],[11,"borrow_mut","","",1713,[[]]],[11,"try_from","","",1713,[[],["result",4]]],[11,"into","","",1713,[[]]],[11,"try_into","","",1713,[[],["result",4]]],[11,"type_id","","",1713,[[],["typeid",3]]],[11,"from","","",1458,[[]]],[11,"borrow","","",1458,[[]]],[11,"borrow_mut","","",1458,[[]]],[11,"try_from","","",1458,[[],["result",4]]],[11,"into","","",1458,[[]]],[11,"try_into","","",1458,[[],["result",4]]],[11,"type_id","","",1458,[[],["typeid",3]]],[11,"from","","",1459,[[]]],[11,"borrow","","",1459,[[]]],[11,"borrow_mut","","",1459,[[]]],[11,"try_from","","",1459,[[],["result",4]]],[11,"into","","",1459,[[]]],[11,"try_into","","",1459,[[],["result",4]]],[11,"type_id","","",1459,[[],["typeid",3]]],[11,"from","","",1460,[[]]],[11,"borrow","","",1460,[[]]],[11,"borrow_mut","","",1460,[[]]],[11,"try_from","","",1460,[[],["result",4]]],[11,"into","","",1460,[[]]],[11,"try_into","","",1460,[[],["result",4]]],[11,"type_id","","",1460,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::ctrla","",1465,[[]]],[11,"borrow","","",1465,[[]]],[11,"borrow_mut","","",1465,[[]]],[11,"try_from","","",1465,[[],["result",4]]],[11,"into","","",1465,[[]]],[11,"try_into","","",1465,[[],["result",4]]],[11,"type_id","","",1465,[[],["typeid",3]]],[11,"from","","",1466,[[]]],[11,"borrow","","",1466,[[]]],[11,"borrow_mut","","",1466,[[]]],[11,"try_from","","",1466,[[],["result",4]]],[11,"into","","",1466,[[]]],[11,"try_into","","",1466,[[],["result",4]]],[11,"type_id","","",1466,[[],["typeid",3]]],[11,"from","","",1468,[[]]],[11,"borrow","","",1468,[[]]],[11,"borrow_mut","","",1468,[[]]],[11,"try_from","","",1468,[[],["result",4]]],[11,"into","","",1468,[[]]],[11,"try_into","","",1468,[[],["result",4]]],[11,"type_id","","",1468,[[],["typeid",3]]],[11,"from","","",1470,[[]]],[11,"borrow","","",1470,[[]]],[11,"borrow_mut","","",1470,[[]]],[11,"try_from","","",1470,[[],["result",4]]],[11,"into","","",1470,[[]]],[11,"try_into","","",1470,[[],["result",4]]],[11,"type_id","","",1470,[[],["typeid",3]]],[11,"from","","",1472,[[]]],[11,"borrow","","",1472,[[]]],[11,"borrow_mut","","",1472,[[]]],[11,"try_from","","",1472,[[],["result",4]]],[11,"into","","",1472,[[]]],[11,"try_into","","",1472,[[],["result",4]]],[11,"type_id","","",1472,[[],["typeid",3]]],[11,"from","","",1473,[[]]],[11,"borrow","","",1473,[[]]],[11,"borrow_mut","","",1473,[[]]],[11,"try_from","","",1473,[[],["result",4]]],[11,"into","","",1473,[[]]],[11,"try_into","","",1473,[[],["result",4]]],[11,"type_id","","",1473,[[],["typeid",3]]],[11,"from","","",1475,[[]]],[11,"borrow","","",1475,[[]]],[11,"borrow_mut","","",1475,[[]]],[11,"try_from","","",1475,[[],["result",4]]],[11,"into","","",1475,[[]]],[11,"try_into","","",1475,[[],["result",4]]],[11,"type_id","","",1475,[[],["typeid",3]]],[11,"from","","",1461,[[]]],[11,"borrow","","",1461,[[]]],[11,"borrow_mut","","",1461,[[]]],[11,"try_from","","",1461,[[],["result",4]]],[11,"into","","",1461,[[]]],[11,"try_into","","",1461,[[],["result",4]]],[11,"type_id","","",1461,[[],["typeid",3]]],[11,"from","","",1462,[[]]],[11,"borrow","","",1462,[[]]],[11,"borrow_mut","","",1462,[[]]],[11,"try_from","","",1462,[[],["result",4]]],[11,"into","","",1462,[[]]],[11,"try_into","","",1462,[[],["result",4]]],[11,"type_id","","",1462,[[],["typeid",3]]],[11,"from","","",1463,[[]]],[11,"borrow","","",1463,[[]]],[11,"borrow_mut","","",1463,[[]]],[11,"try_from","","",1463,[[],["result",4]]],[11,"into","","",1463,[[]]],[11,"try_into","","",1463,[[],["result",4]]],[11,"type_id","","",1463,[[],["typeid",3]]],[11,"from","","",1464,[[]]],[11,"borrow","","",1464,[[]]],[11,"borrow_mut","","",1464,[[]]],[11,"try_from","","",1464,[[],["result",4]]],[11,"into","","",1464,[[]]],[11,"try_into","","",1464,[[],["result",4]]],[11,"type_id","","",1464,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::readreq","",1478,[[]]],[11,"borrow","","",1478,[[]]],[11,"borrow_mut","","",1478,[[]]],[11,"try_from","","",1478,[[],["result",4]]],[11,"into","","",1478,[[]]],[11,"try_into","","",1478,[[],["result",4]]],[11,"type_id","","",1478,[[],["typeid",3]]],[11,"from","","",1479,[[]]],[11,"borrow","","",1479,[[]]],[11,"borrow_mut","","",1479,[[]]],[11,"try_from","","",1479,[[],["result",4]]],[11,"into","","",1479,[[]]],[11,"try_into","","",1479,[[],["result",4]]],[11,"type_id","","",1479,[[],["typeid",3]]],[11,"from","","",1480,[[]]],[11,"borrow","","",1480,[[]]],[11,"borrow_mut","","",1480,[[]]],[11,"try_from","","",1480,[[],["result",4]]],[11,"into","","",1480,[[]]],[11,"try_into","","",1480,[[],["result",4]]],[11,"type_id","","",1480,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::ctrlbclr","",1484,[[]]],[11,"borrow","","",1484,[[]]],[11,"borrow_mut","","",1484,[[]]],[11,"try_from","","",1484,[[],["result",4]]],[11,"into","","",1484,[[]]],[11,"try_into","","",1484,[[],["result",4]]],[11,"type_id","","",1484,[[],["typeid",3]]],[11,"from","","",1485,[[]]],[11,"borrow","","",1485,[[]]],[11,"borrow_mut","","",1485,[[]]],[11,"try_from","","",1485,[[],["result",4]]],[11,"into","","",1485,[[]]],[11,"try_into","","",1485,[[],["result",4]]],[11,"type_id","","",1485,[[],["typeid",3]]],[11,"from","","",1487,[[]]],[11,"borrow","","",1487,[[]]],[11,"borrow_mut","","",1487,[[]]],[11,"try_from","","",1487,[[],["result",4]]],[11,"into","","",1487,[[]]],[11,"try_into","","",1487,[[],["result",4]]],[11,"type_id","","",1487,[[],["typeid",3]]],[11,"from","","",1483,[[]]],[11,"borrow","","",1483,[[]]],[11,"borrow_mut","","",1483,[[]]],[11,"try_from","","",1483,[[],["result",4]]],[11,"into","","",1483,[[]]],[11,"try_into","","",1483,[[],["result",4]]],[11,"type_id","","",1483,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::ctrlbset","",1491,[[]]],[11,"borrow","","",1491,[[]]],[11,"borrow_mut","","",1491,[[]]],[11,"try_from","","",1491,[[],["result",4]]],[11,"into","","",1491,[[]]],[11,"try_into","","",1491,[[],["result",4]]],[11,"type_id","","",1491,[[],["typeid",3]]],[11,"from","","",1492,[[]]],[11,"borrow","","",1492,[[]]],[11,"borrow_mut","","",1492,[[]]],[11,"try_from","","",1492,[[],["result",4]]],[11,"into","","",1492,[[]]],[11,"try_into","","",1492,[[],["result",4]]],[11,"type_id","","",1492,[[],["typeid",3]]],[11,"from","","",1494,[[]]],[11,"borrow","","",1494,[[]]],[11,"borrow_mut","","",1494,[[]]],[11,"try_from","","",1494,[[],["result",4]]],[11,"into","","",1494,[[]]],[11,"try_into","","",1494,[[],["result",4]]],[11,"type_id","","",1494,[[],["typeid",3]]],[11,"from","","",1490,[[]]],[11,"borrow","","",1490,[[]]],[11,"borrow_mut","","",1490,[[]]],[11,"try_from","","",1490,[[],["result",4]]],[11,"into","","",1490,[[]]],[11,"try_into","","",1490,[[],["result",4]]],[11,"type_id","","",1490,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::ctrlc","",1497,[[]]],[11,"borrow","","",1497,[[]]],[11,"borrow_mut","","",1497,[[]]],[11,"try_from","","",1497,[[],["result",4]]],[11,"into","","",1497,[[]]],[11,"try_into","","",1497,[[],["result",4]]],[11,"type_id","","",1497,[[],["typeid",3]]],[11,"from","","",1498,[[]]],[11,"borrow","","",1498,[[]]],[11,"borrow_mut","","",1498,[[]]],[11,"try_from","","",1498,[[],["result",4]]],[11,"into","","",1498,[[]]],[11,"try_into","","",1498,[[],["result",4]]],[11,"type_id","","",1498,[[],["typeid",3]]],[11,"from","","",1499,[[]]],[11,"borrow","","",1499,[[]]],[11,"borrow_mut","","",1499,[[]]],[11,"try_from","","",1499,[[],["result",4]]],[11,"into","","",1499,[[]]],[11,"try_into","","",1499,[[],["result",4]]],[11,"type_id","","",1499,[[],["typeid",3]]],[11,"from","","",1500,[[]]],[11,"borrow","","",1500,[[]]],[11,"borrow_mut","","",1500,[[]]],[11,"try_from","","",1500,[[],["result",4]]],[11,"into","","",1500,[[]]],[11,"try_into","","",1500,[[],["result",4]]],[11,"type_id","","",1500,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::dbgctrl","",1503,[[]]],[11,"borrow","","",1503,[[]]],[11,"borrow_mut","","",1503,[[]]],[11,"try_from","","",1503,[[],["result",4]]],[11,"into","","",1503,[[]]],[11,"try_into","","",1503,[[],["result",4]]],[11,"type_id","","",1503,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::evctrl","",1508,[[]]],[11,"borrow","","",1508,[[]]],[11,"borrow_mut","","",1508,[[]]],[11,"try_from","","",1508,[[],["result",4]]],[11,"into","","",1508,[[]]],[11,"try_into","","",1508,[[],["result",4]]],[11,"type_id","","",1508,[[],["typeid",3]]],[11,"from","","",1509,[[]]],[11,"borrow","","",1509,[[]]],[11,"borrow_mut","","",1509,[[]]],[11,"try_from","","",1509,[[],["result",4]]],[11,"into","","",1509,[[]]],[11,"try_into","","",1509,[[],["result",4]]],[11,"type_id","","",1509,[[],["typeid",3]]],[11,"from","","",1510,[[]]],[11,"borrow","","",1510,[[]]],[11,"borrow_mut","","",1510,[[]]],[11,"try_from","","",1510,[[],["result",4]]],[11,"into","","",1510,[[]]],[11,"try_into","","",1510,[[],["result",4]]],[11,"type_id","","",1510,[[],["typeid",3]]],[11,"from","","",1511,[[]]],[11,"borrow","","",1511,[[]]],[11,"borrow_mut","","",1511,[[]]],[11,"try_from","","",1511,[[],["result",4]]],[11,"into","","",1511,[[]]],[11,"try_into","","",1511,[[],["result",4]]],[11,"type_id","","",1511,[[],["typeid",3]]],[11,"from","","",1512,[[]]],[11,"borrow","","",1512,[[]]],[11,"borrow_mut","","",1512,[[]]],[11,"try_from","","",1512,[[],["result",4]]],[11,"into","","",1512,[[]]],[11,"try_into","","",1512,[[],["result",4]]],[11,"type_id","","",1512,[[],["typeid",3]]],[11,"from","","",1513,[[]]],[11,"borrow","","",1513,[[]]],[11,"borrow_mut","","",1513,[[]]],[11,"try_from","","",1513,[[],["result",4]]],[11,"into","","",1513,[[]]],[11,"try_into","","",1513,[[],["result",4]]],[11,"type_id","","",1513,[[],["typeid",3]]],[11,"from","","",1506,[[]]],[11,"borrow","","",1506,[[]]],[11,"borrow_mut","","",1506,[[]]],[11,"try_from","","",1506,[[],["result",4]]],[11,"into","","",1506,[[]]],[11,"try_into","","",1506,[[],["result",4]]],[11,"type_id","","",1506,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::intenclr","",1516,[[]]],[11,"borrow","","",1516,[[]]],[11,"borrow_mut","","",1516,[[]]],[11,"try_from","","",1516,[[],["result",4]]],[11,"into","","",1516,[[]]],[11,"try_into","","",1516,[[],["result",4]]],[11,"type_id","","",1516,[[],["typeid",3]]],[11,"from","","",1517,[[]]],[11,"borrow","","",1517,[[]]],[11,"borrow_mut","","",1517,[[]]],[11,"try_from","","",1517,[[],["result",4]]],[11,"into","","",1517,[[]]],[11,"try_into","","",1517,[[],["result",4]]],[11,"type_id","","",1517,[[],["typeid",3]]],[11,"from","","",1518,[[]]],[11,"borrow","","",1518,[[]]],[11,"borrow_mut","","",1518,[[]]],[11,"try_from","","",1518,[[],["result",4]]],[11,"into","","",1518,[[]]],[11,"try_into","","",1518,[[],["result",4]]],[11,"type_id","","",1518,[[],["typeid",3]]],[11,"from","","",1519,[[]]],[11,"borrow","","",1519,[[]]],[11,"borrow_mut","","",1519,[[]]],[11,"try_from","","",1519,[[],["result",4]]],[11,"into","","",1519,[[]]],[11,"try_into","","",1519,[[],["result",4]]],[11,"type_id","","",1519,[[],["typeid",3]]],[11,"from","","",1520,[[]]],[11,"borrow","","",1520,[[]]],[11,"borrow_mut","","",1520,[[]]],[11,"try_from","","",1520,[[],["result",4]]],[11,"into","","",1520,[[]]],[11,"try_into","","",1520,[[],["result",4]]],[11,"type_id","","",1520,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::intenset","",1523,[[]]],[11,"borrow","","",1523,[[]]],[11,"borrow_mut","","",1523,[[]]],[11,"try_from","","",1523,[[],["result",4]]],[11,"into","","",1523,[[]]],[11,"try_into","","",1523,[[],["result",4]]],[11,"type_id","","",1523,[[],["typeid",3]]],[11,"from","","",1524,[[]]],[11,"borrow","","",1524,[[]]],[11,"borrow_mut","","",1524,[[]]],[11,"try_from","","",1524,[[],["result",4]]],[11,"into","","",1524,[[]]],[11,"try_into","","",1524,[[],["result",4]]],[11,"type_id","","",1524,[[],["typeid",3]]],[11,"from","","",1525,[[]]],[11,"borrow","","",1525,[[]]],[11,"borrow_mut","","",1525,[[]]],[11,"try_from","","",1525,[[],["result",4]]],[11,"into","","",1525,[[]]],[11,"try_into","","",1525,[[],["result",4]]],[11,"type_id","","",1525,[[],["typeid",3]]],[11,"from","","",1526,[[]]],[11,"borrow","","",1526,[[]]],[11,"borrow_mut","","",1526,[[]]],[11,"try_from","","",1526,[[],["result",4]]],[11,"into","","",1526,[[]]],[11,"try_into","","",1526,[[],["result",4]]],[11,"type_id","","",1526,[[],["typeid",3]]],[11,"from","","",1527,[[]]],[11,"borrow","","",1527,[[]]],[11,"borrow_mut","","",1527,[[]]],[11,"try_from","","",1527,[[],["result",4]]],[11,"into","","",1527,[[]]],[11,"try_into","","",1527,[[],["result",4]]],[11,"type_id","","",1527,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::intflag","",1530,[[]]],[11,"borrow","","",1530,[[]]],[11,"borrow_mut","","",1530,[[]]],[11,"try_from","","",1530,[[],["result",4]]],[11,"into","","",1530,[[]]],[11,"try_into","","",1530,[[],["result",4]]],[11,"type_id","","",1530,[[],["typeid",3]]],[11,"from","","",1531,[[]]],[11,"borrow","","",1531,[[]]],[11,"borrow_mut","","",1531,[[]]],[11,"try_from","","",1531,[[],["result",4]]],[11,"into","","",1531,[[]]],[11,"try_into","","",1531,[[],["result",4]]],[11,"type_id","","",1531,[[],["typeid",3]]],[11,"from","","",1532,[[]]],[11,"borrow","","",1532,[[]]],[11,"borrow_mut","","",1532,[[]]],[11,"try_from","","",1532,[[],["result",4]]],[11,"into","","",1532,[[]]],[11,"try_into","","",1532,[[],["result",4]]],[11,"type_id","","",1532,[[],["typeid",3]]],[11,"from","","",1533,[[]]],[11,"borrow","","",1533,[[]]],[11,"borrow_mut","","",1533,[[]]],[11,"try_from","","",1533,[[],["result",4]]],[11,"into","","",1533,[[]]],[11,"try_into","","",1533,[[],["result",4]]],[11,"type_id","","",1533,[[],["typeid",3]]],[11,"from","","",1534,[[]]],[11,"borrow","","",1534,[[]]],[11,"borrow_mut","","",1534,[[]]],[11,"try_from","","",1534,[[],["result",4]]],[11,"into","","",1534,[[]]],[11,"try_into","","",1534,[[],["result",4]]],[11,"type_id","","",1534,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::count","",1538,[[]]],[11,"borrow","","",1538,[[]]],[11,"borrow_mut","","",1538,[[]]],[11,"try_from","","",1538,[[],["result",4]]],[11,"into","","",1538,[[]]],[11,"try_into","","",1538,[[],["result",4]]],[11,"type_id","","",1538,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::per","",1541,[[]]],[11,"borrow","","",1541,[[]]],[11,"borrow_mut","","",1541,[[]]],[11,"try_from","","",1541,[[],["result",4]]],[11,"into","","",1541,[[]]],[11,"try_into","","",1541,[[],["result",4]]],[11,"type_id","","",1541,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count8::cc","",1544,[[]]],[11,"borrow","","",1544,[[]]],[11,"borrow_mut","","",1544,[[]]],[11,"try_from","","",1544,[[],["result",4]]],[11,"into","","",1544,[[]]],[11,"try_into","","",1544,[[],["result",4]]],[11,"type_id","","",1544,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::ctrla","",1551,[[]]],[11,"borrow","","",1551,[[]]],[11,"borrow_mut","","",1551,[[]]],[11,"try_from","","",1551,[[],["result",4]]],[11,"into","","",1551,[[]]],[11,"try_into","","",1551,[[],["result",4]]],[11,"type_id","","",1551,[[],["typeid",3]]],[11,"from","","",1552,[[]]],[11,"borrow","","",1552,[[]]],[11,"borrow_mut","","",1552,[[]]],[11,"try_from","","",1552,[[],["result",4]]],[11,"into","","",1552,[[]]],[11,"try_into","","",1552,[[],["result",4]]],[11,"type_id","","",1552,[[],["typeid",3]]],[11,"from","","",1554,[[]]],[11,"borrow","","",1554,[[]]],[11,"borrow_mut","","",1554,[[]]],[11,"try_from","","",1554,[[],["result",4]]],[11,"into","","",1554,[[]]],[11,"try_into","","",1554,[[],["result",4]]],[11,"type_id","","",1554,[[],["typeid",3]]],[11,"from","","",1556,[[]]],[11,"borrow","","",1556,[[]]],[11,"borrow_mut","","",1556,[[]]],[11,"try_from","","",1556,[[],["result",4]]],[11,"into","","",1556,[[]]],[11,"try_into","","",1556,[[],["result",4]]],[11,"type_id","","",1556,[[],["typeid",3]]],[11,"from","","",1558,[[]]],[11,"borrow","","",1558,[[]]],[11,"borrow_mut","","",1558,[[]]],[11,"try_from","","",1558,[[],["result",4]]],[11,"into","","",1558,[[]]],[11,"try_into","","",1558,[[],["result",4]]],[11,"type_id","","",1558,[[],["typeid",3]]],[11,"from","","",1559,[[]]],[11,"borrow","","",1559,[[]]],[11,"borrow_mut","","",1559,[[]]],[11,"try_from","","",1559,[[],["result",4]]],[11,"into","","",1559,[[]]],[11,"try_into","","",1559,[[],["result",4]]],[11,"type_id","","",1559,[[],["typeid",3]]],[11,"from","","",1561,[[]]],[11,"borrow","","",1561,[[]]],[11,"borrow_mut","","",1561,[[]]],[11,"try_from","","",1561,[[],["result",4]]],[11,"into","","",1561,[[]]],[11,"try_into","","",1561,[[],["result",4]]],[11,"type_id","","",1561,[[],["typeid",3]]],[11,"from","","",1547,[[]]],[11,"borrow","","",1547,[[]]],[11,"borrow_mut","","",1547,[[]]],[11,"try_from","","",1547,[[],["result",4]]],[11,"into","","",1547,[[]]],[11,"try_into","","",1547,[[],["result",4]]],[11,"type_id","","",1547,[[],["typeid",3]]],[11,"from","","",1548,[[]]],[11,"borrow","","",1548,[[]]],[11,"borrow_mut","","",1548,[[]]],[11,"try_from","","",1548,[[],["result",4]]],[11,"into","","",1548,[[]]],[11,"try_into","","",1548,[[],["result",4]]],[11,"type_id","","",1548,[[],["typeid",3]]],[11,"from","","",1549,[[]]],[11,"borrow","","",1549,[[]]],[11,"borrow_mut","","",1549,[[]]],[11,"try_from","","",1549,[[],["result",4]]],[11,"into","","",1549,[[]]],[11,"try_into","","",1549,[[],["result",4]]],[11,"type_id","","",1549,[[],["typeid",3]]],[11,"from","","",1550,[[]]],[11,"borrow","","",1550,[[]]],[11,"borrow_mut","","",1550,[[]]],[11,"try_from","","",1550,[[],["result",4]]],[11,"into","","",1550,[[]]],[11,"try_into","","",1550,[[],["result",4]]],[11,"type_id","","",1550,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::readreq","",1564,[[]]],[11,"borrow","","",1564,[[]]],[11,"borrow_mut","","",1564,[[]]],[11,"try_from","","",1564,[[],["result",4]]],[11,"into","","",1564,[[]]],[11,"try_into","","",1564,[[],["result",4]]],[11,"type_id","","",1564,[[],["typeid",3]]],[11,"from","","",1565,[[]]],[11,"borrow","","",1565,[[]]],[11,"borrow_mut","","",1565,[[]]],[11,"try_from","","",1565,[[],["result",4]]],[11,"into","","",1565,[[]]],[11,"try_into","","",1565,[[],["result",4]]],[11,"type_id","","",1565,[[],["typeid",3]]],[11,"from","","",1566,[[]]],[11,"borrow","","",1566,[[]]],[11,"borrow_mut","","",1566,[[]]],[11,"try_from","","",1566,[[],["result",4]]],[11,"into","","",1566,[[]]],[11,"try_into","","",1566,[[],["result",4]]],[11,"type_id","","",1566,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::ctrlbclr","",1570,[[]]],[11,"borrow","","",1570,[[]]],[11,"borrow_mut","","",1570,[[]]],[11,"try_from","","",1570,[[],["result",4]]],[11,"into","","",1570,[[]]],[11,"try_into","","",1570,[[],["result",4]]],[11,"type_id","","",1570,[[],["typeid",3]]],[11,"from","","",1571,[[]]],[11,"borrow","","",1571,[[]]],[11,"borrow_mut","","",1571,[[]]],[11,"try_from","","",1571,[[],["result",4]]],[11,"into","","",1571,[[]]],[11,"try_into","","",1571,[[],["result",4]]],[11,"type_id","","",1571,[[],["typeid",3]]],[11,"from","","",1573,[[]]],[11,"borrow","","",1573,[[]]],[11,"borrow_mut","","",1573,[[]]],[11,"try_from","","",1573,[[],["result",4]]],[11,"into","","",1573,[[]]],[11,"try_into","","",1573,[[],["result",4]]],[11,"type_id","","",1573,[[],["typeid",3]]],[11,"from","","",1569,[[]]],[11,"borrow","","",1569,[[]]],[11,"borrow_mut","","",1569,[[]]],[11,"try_from","","",1569,[[],["result",4]]],[11,"into","","",1569,[[]]],[11,"try_into","","",1569,[[],["result",4]]],[11,"type_id","","",1569,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::ctrlbset","",1577,[[]]],[11,"borrow","","",1577,[[]]],[11,"borrow_mut","","",1577,[[]]],[11,"try_from","","",1577,[[],["result",4]]],[11,"into","","",1577,[[]]],[11,"try_into","","",1577,[[],["result",4]]],[11,"type_id","","",1577,[[],["typeid",3]]],[11,"from","","",1578,[[]]],[11,"borrow","","",1578,[[]]],[11,"borrow_mut","","",1578,[[]]],[11,"try_from","","",1578,[[],["result",4]]],[11,"into","","",1578,[[]]],[11,"try_into","","",1578,[[],["result",4]]],[11,"type_id","","",1578,[[],["typeid",3]]],[11,"from","","",1580,[[]]],[11,"borrow","","",1580,[[]]],[11,"borrow_mut","","",1580,[[]]],[11,"try_from","","",1580,[[],["result",4]]],[11,"into","","",1580,[[]]],[11,"try_into","","",1580,[[],["result",4]]],[11,"type_id","","",1580,[[],["typeid",3]]],[11,"from","","",1576,[[]]],[11,"borrow","","",1576,[[]]],[11,"borrow_mut","","",1576,[[]]],[11,"try_from","","",1576,[[],["result",4]]],[11,"into","","",1576,[[]]],[11,"try_into","","",1576,[[],["result",4]]],[11,"type_id","","",1576,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::ctrlc","",1583,[[]]],[11,"borrow","","",1583,[[]]],[11,"borrow_mut","","",1583,[[]]],[11,"try_from","","",1583,[[],["result",4]]],[11,"into","","",1583,[[]]],[11,"try_into","","",1583,[[],["result",4]]],[11,"type_id","","",1583,[[],["typeid",3]]],[11,"from","","",1584,[[]]],[11,"borrow","","",1584,[[]]],[11,"borrow_mut","","",1584,[[]]],[11,"try_from","","",1584,[[],["result",4]]],[11,"into","","",1584,[[]]],[11,"try_into","","",1584,[[],["result",4]]],[11,"type_id","","",1584,[[],["typeid",3]]],[11,"from","","",1585,[[]]],[11,"borrow","","",1585,[[]]],[11,"borrow_mut","","",1585,[[]]],[11,"try_from","","",1585,[[],["result",4]]],[11,"into","","",1585,[[]]],[11,"try_into","","",1585,[[],["result",4]]],[11,"type_id","","",1585,[[],["typeid",3]]],[11,"from","","",1586,[[]]],[11,"borrow","","",1586,[[]]],[11,"borrow_mut","","",1586,[[]]],[11,"try_from","","",1586,[[],["result",4]]],[11,"into","","",1586,[[]]],[11,"try_into","","",1586,[[],["result",4]]],[11,"type_id","","",1586,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::dbgctrl","",1589,[[]]],[11,"borrow","","",1589,[[]]],[11,"borrow_mut","","",1589,[[]]],[11,"try_from","","",1589,[[],["result",4]]],[11,"into","","",1589,[[]]],[11,"try_into","","",1589,[[],["result",4]]],[11,"type_id","","",1589,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::evctrl","",1594,[[]]],[11,"borrow","","",1594,[[]]],[11,"borrow_mut","","",1594,[[]]],[11,"try_from","","",1594,[[],["result",4]]],[11,"into","","",1594,[[]]],[11,"try_into","","",1594,[[],["result",4]]],[11,"type_id","","",1594,[[],["typeid",3]]],[11,"from","","",1595,[[]]],[11,"borrow","","",1595,[[]]],[11,"borrow_mut","","",1595,[[]]],[11,"try_from","","",1595,[[],["result",4]]],[11,"into","","",1595,[[]]],[11,"try_into","","",1595,[[],["result",4]]],[11,"type_id","","",1595,[[],["typeid",3]]],[11,"from","","",1596,[[]]],[11,"borrow","","",1596,[[]]],[11,"borrow_mut","","",1596,[[]]],[11,"try_from","","",1596,[[],["result",4]]],[11,"into","","",1596,[[]]],[11,"try_into","","",1596,[[],["result",4]]],[11,"type_id","","",1596,[[],["typeid",3]]],[11,"from","","",1597,[[]]],[11,"borrow","","",1597,[[]]],[11,"borrow_mut","","",1597,[[]]],[11,"try_from","","",1597,[[],["result",4]]],[11,"into","","",1597,[[]]],[11,"try_into","","",1597,[[],["result",4]]],[11,"type_id","","",1597,[[],["typeid",3]]],[11,"from","","",1598,[[]]],[11,"borrow","","",1598,[[]]],[11,"borrow_mut","","",1598,[[]]],[11,"try_from","","",1598,[[],["result",4]]],[11,"into","","",1598,[[]]],[11,"try_into","","",1598,[[],["result",4]]],[11,"type_id","","",1598,[[],["typeid",3]]],[11,"from","","",1599,[[]]],[11,"borrow","","",1599,[[]]],[11,"borrow_mut","","",1599,[[]]],[11,"try_from","","",1599,[[],["result",4]]],[11,"into","","",1599,[[]]],[11,"try_into","","",1599,[[],["result",4]]],[11,"type_id","","",1599,[[],["typeid",3]]],[11,"from","","",1592,[[]]],[11,"borrow","","",1592,[[]]],[11,"borrow_mut","","",1592,[[]]],[11,"try_from","","",1592,[[],["result",4]]],[11,"into","","",1592,[[]]],[11,"try_into","","",1592,[[],["result",4]]],[11,"type_id","","",1592,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::intenclr","",1602,[[]]],[11,"borrow","","",1602,[[]]],[11,"borrow_mut","","",1602,[[]]],[11,"try_from","","",1602,[[],["result",4]]],[11,"into","","",1602,[[]]],[11,"try_into","","",1602,[[],["result",4]]],[11,"type_id","","",1602,[[],["typeid",3]]],[11,"from","","",1603,[[]]],[11,"borrow","","",1603,[[]]],[11,"borrow_mut","","",1603,[[]]],[11,"try_from","","",1603,[[],["result",4]]],[11,"into","","",1603,[[]]],[11,"try_into","","",1603,[[],["result",4]]],[11,"type_id","","",1603,[[],["typeid",3]]],[11,"from","","",1604,[[]]],[11,"borrow","","",1604,[[]]],[11,"borrow_mut","","",1604,[[]]],[11,"try_from","","",1604,[[],["result",4]]],[11,"into","","",1604,[[]]],[11,"try_into","","",1604,[[],["result",4]]],[11,"type_id","","",1604,[[],["typeid",3]]],[11,"from","","",1605,[[]]],[11,"borrow","","",1605,[[]]],[11,"borrow_mut","","",1605,[[]]],[11,"try_from","","",1605,[[],["result",4]]],[11,"into","","",1605,[[]]],[11,"try_into","","",1605,[[],["result",4]]],[11,"type_id","","",1605,[[],["typeid",3]]],[11,"from","","",1606,[[]]],[11,"borrow","","",1606,[[]]],[11,"borrow_mut","","",1606,[[]]],[11,"try_from","","",1606,[[],["result",4]]],[11,"into","","",1606,[[]]],[11,"try_into","","",1606,[[],["result",4]]],[11,"type_id","","",1606,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::intenset","",1609,[[]]],[11,"borrow","","",1609,[[]]],[11,"borrow_mut","","",1609,[[]]],[11,"try_from","","",1609,[[],["result",4]]],[11,"into","","",1609,[[]]],[11,"try_into","","",1609,[[],["result",4]]],[11,"type_id","","",1609,[[],["typeid",3]]],[11,"from","","",1610,[[]]],[11,"borrow","","",1610,[[]]],[11,"borrow_mut","","",1610,[[]]],[11,"try_from","","",1610,[[],["result",4]]],[11,"into","","",1610,[[]]],[11,"try_into","","",1610,[[],["result",4]]],[11,"type_id","","",1610,[[],["typeid",3]]],[11,"from","","",1611,[[]]],[11,"borrow","","",1611,[[]]],[11,"borrow_mut","","",1611,[[]]],[11,"try_from","","",1611,[[],["result",4]]],[11,"into","","",1611,[[]]],[11,"try_into","","",1611,[[],["result",4]]],[11,"type_id","","",1611,[[],["typeid",3]]],[11,"from","","",1612,[[]]],[11,"borrow","","",1612,[[]]],[11,"borrow_mut","","",1612,[[]]],[11,"try_from","","",1612,[[],["result",4]]],[11,"into","","",1612,[[]]],[11,"try_into","","",1612,[[],["result",4]]],[11,"type_id","","",1612,[[],["typeid",3]]],[11,"from","","",1613,[[]]],[11,"borrow","","",1613,[[]]],[11,"borrow_mut","","",1613,[[]]],[11,"try_from","","",1613,[[],["result",4]]],[11,"into","","",1613,[[]]],[11,"try_into","","",1613,[[],["result",4]]],[11,"type_id","","",1613,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::intflag","",1616,[[]]],[11,"borrow","","",1616,[[]]],[11,"borrow_mut","","",1616,[[]]],[11,"try_from","","",1616,[[],["result",4]]],[11,"into","","",1616,[[]]],[11,"try_into","","",1616,[[],["result",4]]],[11,"type_id","","",1616,[[],["typeid",3]]],[11,"from","","",1617,[[]]],[11,"borrow","","",1617,[[]]],[11,"borrow_mut","","",1617,[[]]],[11,"try_from","","",1617,[[],["result",4]]],[11,"into","","",1617,[[]]],[11,"try_into","","",1617,[[],["result",4]]],[11,"type_id","","",1617,[[],["typeid",3]]],[11,"from","","",1618,[[]]],[11,"borrow","","",1618,[[]]],[11,"borrow_mut","","",1618,[[]]],[11,"try_from","","",1618,[[],["result",4]]],[11,"into","","",1618,[[]]],[11,"try_into","","",1618,[[],["result",4]]],[11,"type_id","","",1618,[[],["typeid",3]]],[11,"from","","",1619,[[]]],[11,"borrow","","",1619,[[]]],[11,"borrow_mut","","",1619,[[]]],[11,"try_from","","",1619,[[],["result",4]]],[11,"into","","",1619,[[]]],[11,"try_into","","",1619,[[],["result",4]]],[11,"type_id","","",1619,[[],["typeid",3]]],[11,"from","","",1620,[[]]],[11,"borrow","","",1620,[[]]],[11,"borrow_mut","","",1620,[[]]],[11,"try_from","","",1620,[[],["result",4]]],[11,"into","","",1620,[[]]],[11,"try_into","","",1620,[[],["result",4]]],[11,"type_id","","",1620,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::count","",1624,[[]]],[11,"borrow","","",1624,[[]]],[11,"borrow_mut","","",1624,[[]]],[11,"try_from","","",1624,[[],["result",4]]],[11,"into","","",1624,[[]]],[11,"try_into","","",1624,[[],["result",4]]],[11,"type_id","","",1624,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count16::cc","",1627,[[]]],[11,"borrow","","",1627,[[]]],[11,"borrow_mut","","",1627,[[]]],[11,"try_from","","",1627,[[],["result",4]]],[11,"into","","",1627,[[]]],[11,"try_into","","",1627,[[],["result",4]]],[11,"type_id","","",1627,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::ctrla","",1634,[[]]],[11,"borrow","","",1634,[[]]],[11,"borrow_mut","","",1634,[[]]],[11,"try_from","","",1634,[[],["result",4]]],[11,"into","","",1634,[[]]],[11,"try_into","","",1634,[[],["result",4]]],[11,"type_id","","",1634,[[],["typeid",3]]],[11,"from","","",1635,[[]]],[11,"borrow","","",1635,[[]]],[11,"borrow_mut","","",1635,[[]]],[11,"try_from","","",1635,[[],["result",4]]],[11,"into","","",1635,[[]]],[11,"try_into","","",1635,[[],["result",4]]],[11,"type_id","","",1635,[[],["typeid",3]]],[11,"from","","",1637,[[]]],[11,"borrow","","",1637,[[]]],[11,"borrow_mut","","",1637,[[]]],[11,"try_from","","",1637,[[],["result",4]]],[11,"into","","",1637,[[]]],[11,"try_into","","",1637,[[],["result",4]]],[11,"type_id","","",1637,[[],["typeid",3]]],[11,"from","","",1639,[[]]],[11,"borrow","","",1639,[[]]],[11,"borrow_mut","","",1639,[[]]],[11,"try_from","","",1639,[[],["result",4]]],[11,"into","","",1639,[[]]],[11,"try_into","","",1639,[[],["result",4]]],[11,"type_id","","",1639,[[],["typeid",3]]],[11,"from","","",1641,[[]]],[11,"borrow","","",1641,[[]]],[11,"borrow_mut","","",1641,[[]]],[11,"try_from","","",1641,[[],["result",4]]],[11,"into","","",1641,[[]]],[11,"try_into","","",1641,[[],["result",4]]],[11,"type_id","","",1641,[[],["typeid",3]]],[11,"from","","",1642,[[]]],[11,"borrow","","",1642,[[]]],[11,"borrow_mut","","",1642,[[]]],[11,"try_from","","",1642,[[],["result",4]]],[11,"into","","",1642,[[]]],[11,"try_into","","",1642,[[],["result",4]]],[11,"type_id","","",1642,[[],["typeid",3]]],[11,"from","","",1644,[[]]],[11,"borrow","","",1644,[[]]],[11,"borrow_mut","","",1644,[[]]],[11,"try_from","","",1644,[[],["result",4]]],[11,"into","","",1644,[[]]],[11,"try_into","","",1644,[[],["result",4]]],[11,"type_id","","",1644,[[],["typeid",3]]],[11,"from","","",1630,[[]]],[11,"borrow","","",1630,[[]]],[11,"borrow_mut","","",1630,[[]]],[11,"try_from","","",1630,[[],["result",4]]],[11,"into","","",1630,[[]]],[11,"try_into","","",1630,[[],["result",4]]],[11,"type_id","","",1630,[[],["typeid",3]]],[11,"from","","",1631,[[]]],[11,"borrow","","",1631,[[]]],[11,"borrow_mut","","",1631,[[]]],[11,"try_from","","",1631,[[],["result",4]]],[11,"into","","",1631,[[]]],[11,"try_into","","",1631,[[],["result",4]]],[11,"type_id","","",1631,[[],["typeid",3]]],[11,"from","","",1632,[[]]],[11,"borrow","","",1632,[[]]],[11,"borrow_mut","","",1632,[[]]],[11,"try_from","","",1632,[[],["result",4]]],[11,"into","","",1632,[[]]],[11,"try_into","","",1632,[[],["result",4]]],[11,"type_id","","",1632,[[],["typeid",3]]],[11,"from","","",1633,[[]]],[11,"borrow","","",1633,[[]]],[11,"borrow_mut","","",1633,[[]]],[11,"try_from","","",1633,[[],["result",4]]],[11,"into","","",1633,[[]]],[11,"try_into","","",1633,[[],["result",4]]],[11,"type_id","","",1633,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::readreq","",1647,[[]]],[11,"borrow","","",1647,[[]]],[11,"borrow_mut","","",1647,[[]]],[11,"try_from","","",1647,[[],["result",4]]],[11,"into","","",1647,[[]]],[11,"try_into","","",1647,[[],["result",4]]],[11,"type_id","","",1647,[[],["typeid",3]]],[11,"from","","",1648,[[]]],[11,"borrow","","",1648,[[]]],[11,"borrow_mut","","",1648,[[]]],[11,"try_from","","",1648,[[],["result",4]]],[11,"into","","",1648,[[]]],[11,"try_into","","",1648,[[],["result",4]]],[11,"type_id","","",1648,[[],["typeid",3]]],[11,"from","","",1649,[[]]],[11,"borrow","","",1649,[[]]],[11,"borrow_mut","","",1649,[[]]],[11,"try_from","","",1649,[[],["result",4]]],[11,"into","","",1649,[[]]],[11,"try_into","","",1649,[[],["result",4]]],[11,"type_id","","",1649,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::ctrlbclr","",1653,[[]]],[11,"borrow","","",1653,[[]]],[11,"borrow_mut","","",1653,[[]]],[11,"try_from","","",1653,[[],["result",4]]],[11,"into","","",1653,[[]]],[11,"try_into","","",1653,[[],["result",4]]],[11,"type_id","","",1653,[[],["typeid",3]]],[11,"from","","",1654,[[]]],[11,"borrow","","",1654,[[]]],[11,"borrow_mut","","",1654,[[]]],[11,"try_from","","",1654,[[],["result",4]]],[11,"into","","",1654,[[]]],[11,"try_into","","",1654,[[],["result",4]]],[11,"type_id","","",1654,[[],["typeid",3]]],[11,"from","","",1656,[[]]],[11,"borrow","","",1656,[[]]],[11,"borrow_mut","","",1656,[[]]],[11,"try_from","","",1656,[[],["result",4]]],[11,"into","","",1656,[[]]],[11,"try_into","","",1656,[[],["result",4]]],[11,"type_id","","",1656,[[],["typeid",3]]],[11,"from","","",1652,[[]]],[11,"borrow","","",1652,[[]]],[11,"borrow_mut","","",1652,[[]]],[11,"try_from","","",1652,[[],["result",4]]],[11,"into","","",1652,[[]]],[11,"try_into","","",1652,[[],["result",4]]],[11,"type_id","","",1652,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::ctrlbset","",1660,[[]]],[11,"borrow","","",1660,[[]]],[11,"borrow_mut","","",1660,[[]]],[11,"try_from","","",1660,[[],["result",4]]],[11,"into","","",1660,[[]]],[11,"try_into","","",1660,[[],["result",4]]],[11,"type_id","","",1660,[[],["typeid",3]]],[11,"from","","",1661,[[]]],[11,"borrow","","",1661,[[]]],[11,"borrow_mut","","",1661,[[]]],[11,"try_from","","",1661,[[],["result",4]]],[11,"into","","",1661,[[]]],[11,"try_into","","",1661,[[],["result",4]]],[11,"type_id","","",1661,[[],["typeid",3]]],[11,"from","","",1663,[[]]],[11,"borrow","","",1663,[[]]],[11,"borrow_mut","","",1663,[[]]],[11,"try_from","","",1663,[[],["result",4]]],[11,"into","","",1663,[[]]],[11,"try_into","","",1663,[[],["result",4]]],[11,"type_id","","",1663,[[],["typeid",3]]],[11,"from","","",1659,[[]]],[11,"borrow","","",1659,[[]]],[11,"borrow_mut","","",1659,[[]]],[11,"try_from","","",1659,[[],["result",4]]],[11,"into","","",1659,[[]]],[11,"try_into","","",1659,[[],["result",4]]],[11,"type_id","","",1659,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::ctrlc","",1666,[[]]],[11,"borrow","","",1666,[[]]],[11,"borrow_mut","","",1666,[[]]],[11,"try_from","","",1666,[[],["result",4]]],[11,"into","","",1666,[[]]],[11,"try_into","","",1666,[[],["result",4]]],[11,"type_id","","",1666,[[],["typeid",3]]],[11,"from","","",1667,[[]]],[11,"borrow","","",1667,[[]]],[11,"borrow_mut","","",1667,[[]]],[11,"try_from","","",1667,[[],["result",4]]],[11,"into","","",1667,[[]]],[11,"try_into","","",1667,[[],["result",4]]],[11,"type_id","","",1667,[[],["typeid",3]]],[11,"from","","",1668,[[]]],[11,"borrow","","",1668,[[]]],[11,"borrow_mut","","",1668,[[]]],[11,"try_from","","",1668,[[],["result",4]]],[11,"into","","",1668,[[]]],[11,"try_into","","",1668,[[],["result",4]]],[11,"type_id","","",1668,[[],["typeid",3]]],[11,"from","","",1669,[[]]],[11,"borrow","","",1669,[[]]],[11,"borrow_mut","","",1669,[[]]],[11,"try_from","","",1669,[[],["result",4]]],[11,"into","","",1669,[[]]],[11,"try_into","","",1669,[[],["result",4]]],[11,"type_id","","",1669,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::dbgctrl","",1672,[[]]],[11,"borrow","","",1672,[[]]],[11,"borrow_mut","","",1672,[[]]],[11,"try_from","","",1672,[[],["result",4]]],[11,"into","","",1672,[[]]],[11,"try_into","","",1672,[[],["result",4]]],[11,"type_id","","",1672,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::evctrl","",1677,[[]]],[11,"borrow","","",1677,[[]]],[11,"borrow_mut","","",1677,[[]]],[11,"try_from","","",1677,[[],["result",4]]],[11,"into","","",1677,[[]]],[11,"try_into","","",1677,[[],["result",4]]],[11,"type_id","","",1677,[[],["typeid",3]]],[11,"from","","",1678,[[]]],[11,"borrow","","",1678,[[]]],[11,"borrow_mut","","",1678,[[]]],[11,"try_from","","",1678,[[],["result",4]]],[11,"into","","",1678,[[]]],[11,"try_into","","",1678,[[],["result",4]]],[11,"type_id","","",1678,[[],["typeid",3]]],[11,"from","","",1679,[[]]],[11,"borrow","","",1679,[[]]],[11,"borrow_mut","","",1679,[[]]],[11,"try_from","","",1679,[[],["result",4]]],[11,"into","","",1679,[[]]],[11,"try_into","","",1679,[[],["result",4]]],[11,"type_id","","",1679,[[],["typeid",3]]],[11,"from","","",1680,[[]]],[11,"borrow","","",1680,[[]]],[11,"borrow_mut","","",1680,[[]]],[11,"try_from","","",1680,[[],["result",4]]],[11,"into","","",1680,[[]]],[11,"try_into","","",1680,[[],["result",4]]],[11,"type_id","","",1680,[[],["typeid",3]]],[11,"from","","",1681,[[]]],[11,"borrow","","",1681,[[]]],[11,"borrow_mut","","",1681,[[]]],[11,"try_from","","",1681,[[],["result",4]]],[11,"into","","",1681,[[]]],[11,"try_into","","",1681,[[],["result",4]]],[11,"type_id","","",1681,[[],["typeid",3]]],[11,"from","","",1682,[[]]],[11,"borrow","","",1682,[[]]],[11,"borrow_mut","","",1682,[[]]],[11,"try_from","","",1682,[[],["result",4]]],[11,"into","","",1682,[[]]],[11,"try_into","","",1682,[[],["result",4]]],[11,"type_id","","",1682,[[],["typeid",3]]],[11,"from","","",1675,[[]]],[11,"borrow","","",1675,[[]]],[11,"borrow_mut","","",1675,[[]]],[11,"try_from","","",1675,[[],["result",4]]],[11,"into","","",1675,[[]]],[11,"try_into","","",1675,[[],["result",4]]],[11,"type_id","","",1675,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::intenclr","",1685,[[]]],[11,"borrow","","",1685,[[]]],[11,"borrow_mut","","",1685,[[]]],[11,"try_from","","",1685,[[],["result",4]]],[11,"into","","",1685,[[]]],[11,"try_into","","",1685,[[],["result",4]]],[11,"type_id","","",1685,[[],["typeid",3]]],[11,"from","","",1686,[[]]],[11,"borrow","","",1686,[[]]],[11,"borrow_mut","","",1686,[[]]],[11,"try_from","","",1686,[[],["result",4]]],[11,"into","","",1686,[[]]],[11,"try_into","","",1686,[[],["result",4]]],[11,"type_id","","",1686,[[],["typeid",3]]],[11,"from","","",1687,[[]]],[11,"borrow","","",1687,[[]]],[11,"borrow_mut","","",1687,[[]]],[11,"try_from","","",1687,[[],["result",4]]],[11,"into","","",1687,[[]]],[11,"try_into","","",1687,[[],["result",4]]],[11,"type_id","","",1687,[[],["typeid",3]]],[11,"from","","",1688,[[]]],[11,"borrow","","",1688,[[]]],[11,"borrow_mut","","",1688,[[]]],[11,"try_from","","",1688,[[],["result",4]]],[11,"into","","",1688,[[]]],[11,"try_into","","",1688,[[],["result",4]]],[11,"type_id","","",1688,[[],["typeid",3]]],[11,"from","","",1689,[[]]],[11,"borrow","","",1689,[[]]],[11,"borrow_mut","","",1689,[[]]],[11,"try_from","","",1689,[[],["result",4]]],[11,"into","","",1689,[[]]],[11,"try_into","","",1689,[[],["result",4]]],[11,"type_id","","",1689,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::intenset","",1692,[[]]],[11,"borrow","","",1692,[[]]],[11,"borrow_mut","","",1692,[[]]],[11,"try_from","","",1692,[[],["result",4]]],[11,"into","","",1692,[[]]],[11,"try_into","","",1692,[[],["result",4]]],[11,"type_id","","",1692,[[],["typeid",3]]],[11,"from","","",1693,[[]]],[11,"borrow","","",1693,[[]]],[11,"borrow_mut","","",1693,[[]]],[11,"try_from","","",1693,[[],["result",4]]],[11,"into","","",1693,[[]]],[11,"try_into","","",1693,[[],["result",4]]],[11,"type_id","","",1693,[[],["typeid",3]]],[11,"from","","",1694,[[]]],[11,"borrow","","",1694,[[]]],[11,"borrow_mut","","",1694,[[]]],[11,"try_from","","",1694,[[],["result",4]]],[11,"into","","",1694,[[]]],[11,"try_into","","",1694,[[],["result",4]]],[11,"type_id","","",1694,[[],["typeid",3]]],[11,"from","","",1695,[[]]],[11,"borrow","","",1695,[[]]],[11,"borrow_mut","","",1695,[[]]],[11,"try_from","","",1695,[[],["result",4]]],[11,"into","","",1695,[[]]],[11,"try_into","","",1695,[[],["result",4]]],[11,"type_id","","",1695,[[],["typeid",3]]],[11,"from","","",1696,[[]]],[11,"borrow","","",1696,[[]]],[11,"borrow_mut","","",1696,[[]]],[11,"try_from","","",1696,[[],["result",4]]],[11,"into","","",1696,[[]]],[11,"try_into","","",1696,[[],["result",4]]],[11,"type_id","","",1696,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::intflag","",1699,[[]]],[11,"borrow","","",1699,[[]]],[11,"borrow_mut","","",1699,[[]]],[11,"try_from","","",1699,[[],["result",4]]],[11,"into","","",1699,[[]]],[11,"try_into","","",1699,[[],["result",4]]],[11,"type_id","","",1699,[[],["typeid",3]]],[11,"from","","",1700,[[]]],[11,"borrow","","",1700,[[]]],[11,"borrow_mut","","",1700,[[]]],[11,"try_from","","",1700,[[],["result",4]]],[11,"into","","",1700,[[]]],[11,"try_into","","",1700,[[],["result",4]]],[11,"type_id","","",1700,[[],["typeid",3]]],[11,"from","","",1701,[[]]],[11,"borrow","","",1701,[[]]],[11,"borrow_mut","","",1701,[[]]],[11,"try_from","","",1701,[[],["result",4]]],[11,"into","","",1701,[[]]],[11,"try_into","","",1701,[[],["result",4]]],[11,"type_id","","",1701,[[],["typeid",3]]],[11,"from","","",1702,[[]]],[11,"borrow","","",1702,[[]]],[11,"borrow_mut","","",1702,[[]]],[11,"try_from","","",1702,[[],["result",4]]],[11,"into","","",1702,[[]]],[11,"try_into","","",1702,[[],["result",4]]],[11,"type_id","","",1702,[[],["typeid",3]]],[11,"from","","",1703,[[]]],[11,"borrow","","",1703,[[]]],[11,"borrow_mut","","",1703,[[]]],[11,"try_from","","",1703,[[],["result",4]]],[11,"into","","",1703,[[]]],[11,"try_into","","",1703,[[],["result",4]]],[11,"type_id","","",1703,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::count","",1707,[[]]],[11,"borrow","","",1707,[[]]],[11,"borrow_mut","","",1707,[[]]],[11,"try_from","","",1707,[[],["result",4]]],[11,"into","","",1707,[[]]],[11,"try_into","","",1707,[[],["result",4]]],[11,"type_id","","",1707,[[],["typeid",3]]],[11,"from","atsamd11c::tc1::count32::cc","",1710,[[]]],[11,"borrow","","",1710,[[]]],[11,"borrow_mut","","",1710,[[]]],[11,"try_from","","",1710,[[],["result",4]]],[11,"into","","",1710,[[]]],[11,"try_into","","",1710,[[],["result",4]]],[11,"type_id","","",1710,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0","",1714,[[]]],[11,"borrow","","",1714,[[]]],[11,"borrow_mut","","",1714,[[]]],[11,"try_from","","",1714,[[],["result",4]]],[11,"into","","",1714,[[]]],[11,"try_into","","",1714,[[],["result",4]]],[11,"type_id","","",1714,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ctrla","",1718,[[]]],[11,"borrow","","",1718,[[]]],[11,"borrow_mut","","",1718,[[]]],[11,"try_from","","",1718,[[],["result",4]]],[11,"into","","",1718,[[]]],[11,"try_into","","",1718,[[],["result",4]]],[11,"type_id","","",1718,[[],["typeid",3]]],[11,"from","","",1719,[[]]],[11,"borrow","","",1719,[[]]],[11,"borrow_mut","","",1719,[[]]],[11,"try_from","","",1719,[[],["result",4]]],[11,"into","","",1719,[[]]],[11,"try_into","","",1719,[[],["result",4]]],[11,"type_id","","",1719,[[],["typeid",3]]],[11,"from","","",1721,[[]]],[11,"borrow","","",1721,[[]]],[11,"borrow_mut","","",1721,[[]]],[11,"try_from","","",1721,[[],["result",4]]],[11,"into","","",1721,[[]]],[11,"try_into","","",1721,[[],["result",4]]],[11,"type_id","","",1721,[[],["typeid",3]]],[11,"from","","",1723,[[]]],[11,"borrow","","",1723,[[]]],[11,"borrow_mut","","",1723,[[]]],[11,"try_from","","",1723,[[],["result",4]]],[11,"into","","",1723,[[]]],[11,"try_into","","",1723,[[],["result",4]]],[11,"type_id","","",1723,[[],["typeid",3]]],[11,"from","","",1724,[[]]],[11,"borrow","","",1724,[[]]],[11,"borrow_mut","","",1724,[[]]],[11,"try_from","","",1724,[[],["result",4]]],[11,"into","","",1724,[[]]],[11,"try_into","","",1724,[[],["result",4]]],[11,"type_id","","",1724,[[],["typeid",3]]],[11,"from","","",1726,[[]]],[11,"borrow","","",1726,[[]]],[11,"borrow_mut","","",1726,[[]]],[11,"try_from","","",1726,[[],["result",4]]],[11,"into","","",1726,[[]]],[11,"try_into","","",1726,[[],["result",4]]],[11,"type_id","","",1726,[[],["typeid",3]]],[11,"from","","",1727,[[]]],[11,"borrow","","",1727,[[]]],[11,"borrow_mut","","",1727,[[]]],[11,"try_from","","",1727,[[],["result",4]]],[11,"into","","",1727,[[]]],[11,"try_into","","",1727,[[],["result",4]]],[11,"type_id","","",1727,[[],["typeid",3]]],[11,"from","","",1728,[[]]],[11,"borrow","","",1728,[[]]],[11,"borrow_mut","","",1728,[[]]],[11,"try_from","","",1728,[[],["result",4]]],[11,"into","","",1728,[[]]],[11,"try_into","","",1728,[[],["result",4]]],[11,"type_id","","",1728,[[],["typeid",3]]],[11,"from","","",1729,[[]]],[11,"borrow","","",1729,[[]]],[11,"borrow_mut","","",1729,[[]]],[11,"try_from","","",1729,[[],["result",4]]],[11,"into","","",1729,[[]]],[11,"try_into","","",1729,[[],["result",4]]],[11,"type_id","","",1729,[[],["typeid",3]]],[11,"from","","",1730,[[]]],[11,"borrow","","",1730,[[]]],[11,"borrow_mut","","",1730,[[]]],[11,"try_from","","",1730,[[],["result",4]]],[11,"into","","",1730,[[]]],[11,"try_into","","",1730,[[],["result",4]]],[11,"type_id","","",1730,[[],["typeid",3]]],[11,"from","","",1731,[[]]],[11,"borrow","","",1731,[[]]],[11,"borrow_mut","","",1731,[[]]],[11,"try_from","","",1731,[[],["result",4]]],[11,"into","","",1731,[[]]],[11,"try_into","","",1731,[[],["result",4]]],[11,"type_id","","",1731,[[],["typeid",3]]],[11,"from","","",1715,[[]]],[11,"borrow","","",1715,[[]]],[11,"borrow_mut","","",1715,[[]]],[11,"try_from","","",1715,[[],["result",4]]],[11,"into","","",1715,[[]]],[11,"try_into","","",1715,[[],["result",4]]],[11,"type_id","","",1715,[[],["typeid",3]]],[11,"from","","",1716,[[]]],[11,"borrow","","",1716,[[]]],[11,"borrow_mut","","",1716,[[]]],[11,"try_from","","",1716,[[],["result",4]]],[11,"into","","",1716,[[]]],[11,"try_into","","",1716,[[],["result",4]]],[11,"type_id","","",1716,[[],["typeid",3]]],[11,"from","","",1717,[[]]],[11,"borrow","","",1717,[[]]],[11,"borrow_mut","","",1717,[[]]],[11,"try_from","","",1717,[[],["result",4]]],[11,"into","","",1717,[[]]],[11,"try_into","","",1717,[[],["result",4]]],[11,"type_id","","",1717,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ctrlbclr","",1736,[[]]],[11,"borrow","","",1736,[[]]],[11,"borrow_mut","","",1736,[[]]],[11,"try_from","","",1736,[[],["result",4]]],[11,"into","","",1736,[[]]],[11,"try_into","","",1736,[[],["result",4]]],[11,"type_id","","",1736,[[],["typeid",3]]],[11,"from","","",1737,[[]]],[11,"borrow","","",1737,[[]]],[11,"borrow_mut","","",1737,[[]]],[11,"try_from","","",1737,[[],["result",4]]],[11,"into","","",1737,[[]]],[11,"try_into","","",1737,[[],["result",4]]],[11,"type_id","","",1737,[[],["typeid",3]]],[11,"from","","",1738,[[]]],[11,"borrow","","",1738,[[]]],[11,"borrow_mut","","",1738,[[]]],[11,"try_from","","",1738,[[],["result",4]]],[11,"into","","",1738,[[]]],[11,"try_into","","",1738,[[],["result",4]]],[11,"type_id","","",1738,[[],["typeid",3]]],[11,"from","","",1740,[[]]],[11,"borrow","","",1740,[[]]],[11,"borrow_mut","","",1740,[[]]],[11,"try_from","","",1740,[[],["result",4]]],[11,"into","","",1740,[[]]],[11,"try_into","","",1740,[[],["result",4]]],[11,"type_id","","",1740,[[],["typeid",3]]],[11,"from","","",1742,[[]]],[11,"borrow","","",1742,[[]]],[11,"borrow_mut","","",1742,[[]]],[11,"try_from","","",1742,[[],["result",4]]],[11,"into","","",1742,[[]]],[11,"try_into","","",1742,[[],["result",4]]],[11,"type_id","","",1742,[[],["typeid",3]]],[11,"from","","",1734,[[]]],[11,"borrow","","",1734,[[]]],[11,"borrow_mut","","",1734,[[]]],[11,"try_from","","",1734,[[],["result",4]]],[11,"into","","",1734,[[]]],[11,"try_into","","",1734,[[],["result",4]]],[11,"type_id","","",1734,[[],["typeid",3]]],[11,"from","","",1735,[[]]],[11,"borrow","","",1735,[[]]],[11,"borrow_mut","","",1735,[[]]],[11,"try_from","","",1735,[[],["result",4]]],[11,"into","","",1735,[[]]],[11,"try_into","","",1735,[[],["result",4]]],[11,"type_id","","",1735,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ctrlbset","",1747,[[]]],[11,"borrow","","",1747,[[]]],[11,"borrow_mut","","",1747,[[]]],[11,"try_from","","",1747,[[],["result",4]]],[11,"into","","",1747,[[]]],[11,"try_into","","",1747,[[],["result",4]]],[11,"type_id","","",1747,[[],["typeid",3]]],[11,"from","","",1748,[[]]],[11,"borrow","","",1748,[[]]],[11,"borrow_mut","","",1748,[[]]],[11,"try_from","","",1748,[[],["result",4]]],[11,"into","","",1748,[[]]],[11,"try_into","","",1748,[[],["result",4]]],[11,"type_id","","",1748,[[],["typeid",3]]],[11,"from","","",1749,[[]]],[11,"borrow","","",1749,[[]]],[11,"borrow_mut","","",1749,[[]]],[11,"try_from","","",1749,[[],["result",4]]],[11,"into","","",1749,[[]]],[11,"try_into","","",1749,[[],["result",4]]],[11,"type_id","","",1749,[[],["typeid",3]]],[11,"from","","",1751,[[]]],[11,"borrow","","",1751,[[]]],[11,"borrow_mut","","",1751,[[]]],[11,"try_from","","",1751,[[],["result",4]]],[11,"into","","",1751,[[]]],[11,"try_into","","",1751,[[],["result",4]]],[11,"type_id","","",1751,[[],["typeid",3]]],[11,"from","","",1753,[[]]],[11,"borrow","","",1753,[[]]],[11,"borrow_mut","","",1753,[[]]],[11,"try_from","","",1753,[[],["result",4]]],[11,"into","","",1753,[[]]],[11,"try_into","","",1753,[[],["result",4]]],[11,"type_id","","",1753,[[],["typeid",3]]],[11,"from","","",1745,[[]]],[11,"borrow","","",1745,[[]]],[11,"borrow_mut","","",1745,[[]]],[11,"try_from","","",1745,[[],["result",4]]],[11,"into","","",1745,[[]]],[11,"try_into","","",1745,[[],["result",4]]],[11,"type_id","","",1745,[[],["typeid",3]]],[11,"from","","",1746,[[]]],[11,"borrow","","",1746,[[]]],[11,"borrow_mut","","",1746,[[]]],[11,"try_from","","",1746,[[],["result",4]]],[11,"into","","",1746,[[]]],[11,"try_into","","",1746,[[],["result",4]]],[11,"type_id","","",1746,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::fctrla","",1763,[[]]],[11,"borrow","","",1763,[[]]],[11,"borrow_mut","","",1763,[[]]],[11,"try_from","","",1763,[[],["result",4]]],[11,"into","","",1763,[[]]],[11,"try_into","","",1763,[[],["result",4]]],[11,"type_id","","",1763,[[],["typeid",3]]],[11,"from","","",1764,[[]]],[11,"borrow","","",1764,[[]]],[11,"borrow_mut","","",1764,[[]]],[11,"try_from","","",1764,[[],["result",4]]],[11,"into","","",1764,[[]]],[11,"try_into","","",1764,[[],["result",4]]],[11,"type_id","","",1764,[[],["typeid",3]]],[11,"from","","",1765,[[]]],[11,"borrow","","",1765,[[]]],[11,"borrow_mut","","",1765,[[]]],[11,"try_from","","",1765,[[],["result",4]]],[11,"into","","",1765,[[]]],[11,"try_into","","",1765,[[],["result",4]]],[11,"type_id","","",1765,[[],["typeid",3]]],[11,"from","","",1767,[[]]],[11,"borrow","","",1767,[[]]],[11,"borrow_mut","","",1767,[[]]],[11,"try_from","","",1767,[[],["result",4]]],[11,"into","","",1767,[[]]],[11,"try_into","","",1767,[[],["result",4]]],[11,"type_id","","",1767,[[],["typeid",3]]],[11,"from","","",1768,[[]]],[11,"borrow","","",1768,[[]]],[11,"borrow_mut","","",1768,[[]]],[11,"try_from","","",1768,[[],["result",4]]],[11,"into","","",1768,[[]]],[11,"try_into","","",1768,[[],["result",4]]],[11,"type_id","","",1768,[[],["typeid",3]]],[11,"from","","",1770,[[]]],[11,"borrow","","",1770,[[]]],[11,"borrow_mut","","",1770,[[]]],[11,"try_from","","",1770,[[],["result",4]]],[11,"into","","",1770,[[]]],[11,"try_into","","",1770,[[],["result",4]]],[11,"type_id","","",1770,[[],["typeid",3]]],[11,"from","","",1772,[[]]],[11,"borrow","","",1772,[[]]],[11,"borrow_mut","","",1772,[[]]],[11,"try_from","","",1772,[[],["result",4]]],[11,"into","","",1772,[[]]],[11,"try_into","","",1772,[[],["result",4]]],[11,"type_id","","",1772,[[],["typeid",3]]],[11,"from","","",1774,[[]]],[11,"borrow","","",1774,[[]]],[11,"borrow_mut","","",1774,[[]]],[11,"try_from","","",1774,[[],["result",4]]],[11,"into","","",1774,[[]]],[11,"try_into","","",1774,[[],["result",4]]],[11,"type_id","","",1774,[[],["typeid",3]]],[11,"from","","",1775,[[]]],[11,"borrow","","",1775,[[]]],[11,"borrow_mut","","",1775,[[]]],[11,"try_from","","",1775,[[],["result",4]]],[11,"into","","",1775,[[]]],[11,"try_into","","",1775,[[],["result",4]]],[11,"type_id","","",1775,[[],["typeid",3]]],[11,"from","","",1776,[[]]],[11,"borrow","","",1776,[[]]],[11,"borrow_mut","","",1776,[[]]],[11,"try_from","","",1776,[[],["result",4]]],[11,"into","","",1776,[[]]],[11,"try_into","","",1776,[[],["result",4]]],[11,"type_id","","",1776,[[],["typeid",3]]],[11,"from","","",1777,[[]]],[11,"borrow","","",1777,[[]]],[11,"borrow_mut","","",1777,[[]]],[11,"try_from","","",1777,[[],["result",4]]],[11,"into","","",1777,[[]]],[11,"try_into","","",1777,[[],["result",4]]],[11,"type_id","","",1777,[[],["typeid",3]]],[11,"from","","",1757,[[]]],[11,"borrow","","",1757,[[]]],[11,"borrow_mut","","",1757,[[]]],[11,"try_from","","",1757,[[],["result",4]]],[11,"into","","",1757,[[]]],[11,"try_into","","",1757,[[],["result",4]]],[11,"type_id","","",1757,[[],["typeid",3]]],[11,"from","","",1758,[[]]],[11,"borrow","","",1758,[[]]],[11,"borrow_mut","","",1758,[[]]],[11,"try_from","","",1758,[[],["result",4]]],[11,"into","","",1758,[[]]],[11,"try_into","","",1758,[[],["result",4]]],[11,"type_id","","",1758,[[],["typeid",3]]],[11,"from","","",1759,[[]]],[11,"borrow","","",1759,[[]]],[11,"borrow_mut","","",1759,[[]]],[11,"try_from","","",1759,[[],["result",4]]],[11,"into","","",1759,[[]]],[11,"try_into","","",1759,[[],["result",4]]],[11,"type_id","","",1759,[[],["typeid",3]]],[11,"from","","",1760,[[]]],[11,"borrow","","",1760,[[]]],[11,"borrow_mut","","",1760,[[]]],[11,"try_from","","",1760,[[],["result",4]]],[11,"into","","",1760,[[]]],[11,"try_into","","",1760,[[],["result",4]]],[11,"type_id","","",1760,[[],["typeid",3]]],[11,"from","","",1761,[[]]],[11,"borrow","","",1761,[[]]],[11,"borrow_mut","","",1761,[[]]],[11,"try_from","","",1761,[[],["result",4]]],[11,"into","","",1761,[[]]],[11,"try_into","","",1761,[[],["result",4]]],[11,"type_id","","",1761,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::fctrlb","",1786,[[]]],[11,"borrow","","",1786,[[]]],[11,"borrow_mut","","",1786,[[]]],[11,"try_from","","",1786,[[],["result",4]]],[11,"into","","",1786,[[]]],[11,"try_into","","",1786,[[],["result",4]]],[11,"type_id","","",1786,[[],["typeid",3]]],[11,"from","","",1787,[[]]],[11,"borrow","","",1787,[[]]],[11,"borrow_mut","","",1787,[[]]],[11,"try_from","","",1787,[[],["result",4]]],[11,"into","","",1787,[[]]],[11,"try_into","","",1787,[[],["result",4]]],[11,"type_id","","",1787,[[],["typeid",3]]],[11,"from","","",1788,[[]]],[11,"borrow","","",1788,[[]]],[11,"borrow_mut","","",1788,[[]]],[11,"try_from","","",1788,[[],["result",4]]],[11,"into","","",1788,[[]]],[11,"try_into","","",1788,[[],["result",4]]],[11,"type_id","","",1788,[[],["typeid",3]]],[11,"from","","",1790,[[]]],[11,"borrow","","",1790,[[]]],[11,"borrow_mut","","",1790,[[]]],[11,"try_from","","",1790,[[],["result",4]]],[11,"into","","",1790,[[]]],[11,"try_into","","",1790,[[],["result",4]]],[11,"type_id","","",1790,[[],["typeid",3]]],[11,"from","","",1791,[[]]],[11,"borrow","","",1791,[[]]],[11,"borrow_mut","","",1791,[[]]],[11,"try_from","","",1791,[[],["result",4]]],[11,"into","","",1791,[[]]],[11,"try_into","","",1791,[[],["result",4]]],[11,"type_id","","",1791,[[],["typeid",3]]],[11,"from","","",1793,[[]]],[11,"borrow","","",1793,[[]]],[11,"borrow_mut","","",1793,[[]]],[11,"try_from","","",1793,[[],["result",4]]],[11,"into","","",1793,[[]]],[11,"try_into","","",1793,[[],["result",4]]],[11,"type_id","","",1793,[[],["typeid",3]]],[11,"from","","",1795,[[]]],[11,"borrow","","",1795,[[]]],[11,"borrow_mut","","",1795,[[]]],[11,"try_from","","",1795,[[],["result",4]]],[11,"into","","",1795,[[]]],[11,"try_into","","",1795,[[],["result",4]]],[11,"type_id","","",1795,[[],["typeid",3]]],[11,"from","","",1797,[[]]],[11,"borrow","","",1797,[[]]],[11,"borrow_mut","","",1797,[[]]],[11,"try_from","","",1797,[[],["result",4]]],[11,"into","","",1797,[[]]],[11,"try_into","","",1797,[[],["result",4]]],[11,"type_id","","",1797,[[],["typeid",3]]],[11,"from","","",1798,[[]]],[11,"borrow","","",1798,[[]]],[11,"borrow_mut","","",1798,[[]]],[11,"try_from","","",1798,[[],["result",4]]],[11,"into","","",1798,[[]]],[11,"try_into","","",1798,[[],["result",4]]],[11,"type_id","","",1798,[[],["typeid",3]]],[11,"from","","",1799,[[]]],[11,"borrow","","",1799,[[]]],[11,"borrow_mut","","",1799,[[]]],[11,"try_from","","",1799,[[],["result",4]]],[11,"into","","",1799,[[]]],[11,"try_into","","",1799,[[],["result",4]]],[11,"type_id","","",1799,[[],["typeid",3]]],[11,"from","","",1800,[[]]],[11,"borrow","","",1800,[[]]],[11,"borrow_mut","","",1800,[[]]],[11,"try_from","","",1800,[[],["result",4]]],[11,"into","","",1800,[[]]],[11,"try_into","","",1800,[[],["result",4]]],[11,"type_id","","",1800,[[],["typeid",3]]],[11,"from","","",1780,[[]]],[11,"borrow","","",1780,[[]]],[11,"borrow_mut","","",1780,[[]]],[11,"try_from","","",1780,[[],["result",4]]],[11,"into","","",1780,[[]]],[11,"try_into","","",1780,[[],["result",4]]],[11,"type_id","","",1780,[[],["typeid",3]]],[11,"from","","",1781,[[]]],[11,"borrow","","",1781,[[]]],[11,"borrow_mut","","",1781,[[]]],[11,"try_from","","",1781,[[],["result",4]]],[11,"into","","",1781,[[]]],[11,"try_into","","",1781,[[],["result",4]]],[11,"type_id","","",1781,[[],["typeid",3]]],[11,"from","","",1782,[[]]],[11,"borrow","","",1782,[[]]],[11,"borrow_mut","","",1782,[[]]],[11,"try_from","","",1782,[[],["result",4]]],[11,"into","","",1782,[[]]],[11,"try_into","","",1782,[[],["result",4]]],[11,"type_id","","",1782,[[],["typeid",3]]],[11,"from","","",1783,[[]]],[11,"borrow","","",1783,[[]]],[11,"borrow_mut","","",1783,[[]]],[11,"try_from","","",1783,[[],["result",4]]],[11,"into","","",1783,[[]]],[11,"try_into","","",1783,[[],["result",4]]],[11,"type_id","","",1783,[[],["typeid",3]]],[11,"from","","",1784,[[]]],[11,"borrow","","",1784,[[]]],[11,"borrow_mut","","",1784,[[]]],[11,"try_from","","",1784,[[],["result",4]]],[11,"into","","",1784,[[]]],[11,"try_into","","",1784,[[],["result",4]]],[11,"type_id","","",1784,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::wexctrl","",1803,[[]]],[11,"borrow","","",1803,[[]]],[11,"borrow_mut","","",1803,[[]]],[11,"try_from","","",1803,[[],["result",4]]],[11,"into","","",1803,[[]]],[11,"try_into","","",1803,[[],["result",4]]],[11,"type_id","","",1803,[[],["typeid",3]]],[11,"from","","",1804,[[]]],[11,"borrow","","",1804,[[]]],[11,"borrow_mut","","",1804,[[]]],[11,"try_from","","",1804,[[],["result",4]]],[11,"into","","",1804,[[]]],[11,"try_into","","",1804,[[],["result",4]]],[11,"type_id","","",1804,[[],["typeid",3]]],[11,"from","","",1805,[[]]],[11,"borrow","","",1805,[[]]],[11,"borrow_mut","","",1805,[[]]],[11,"try_from","","",1805,[[],["result",4]]],[11,"into","","",1805,[[]]],[11,"try_into","","",1805,[[],["result",4]]],[11,"type_id","","",1805,[[],["typeid",3]]],[11,"from","","",1806,[[]]],[11,"borrow","","",1806,[[]]],[11,"borrow_mut","","",1806,[[]]],[11,"try_from","","",1806,[[],["result",4]]],[11,"into","","",1806,[[]]],[11,"try_into","","",1806,[[],["result",4]]],[11,"type_id","","",1806,[[],["typeid",3]]],[11,"from","","",1807,[[]]],[11,"borrow","","",1807,[[]]],[11,"borrow_mut","","",1807,[[]]],[11,"try_from","","",1807,[[],["result",4]]],[11,"into","","",1807,[[]]],[11,"try_into","","",1807,[[],["result",4]]],[11,"type_id","","",1807,[[],["typeid",3]]],[11,"from","","",1808,[[]]],[11,"borrow","","",1808,[[]]],[11,"borrow_mut","","",1808,[[]]],[11,"try_from","","",1808,[[],["result",4]]],[11,"into","","",1808,[[]]],[11,"try_into","","",1808,[[],["result",4]]],[11,"type_id","","",1808,[[],["typeid",3]]],[11,"from","","",1809,[[]]],[11,"borrow","","",1809,[[]]],[11,"borrow_mut","","",1809,[[]]],[11,"try_from","","",1809,[[],["result",4]]],[11,"into","","",1809,[[]]],[11,"try_into","","",1809,[[],["result",4]]],[11,"type_id","","",1809,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::drvctrl","",1812,[[]]],[11,"borrow","","",1812,[[]]],[11,"borrow_mut","","",1812,[[]]],[11,"try_from","","",1812,[[],["result",4]]],[11,"into","","",1812,[[]]],[11,"try_into","","",1812,[[],["result",4]]],[11,"type_id","","",1812,[[],["typeid",3]]],[11,"from","","",1813,[[]]],[11,"borrow","","",1813,[[]]],[11,"borrow_mut","","",1813,[[]]],[11,"try_from","","",1813,[[],["result",4]]],[11,"into","","",1813,[[]]],[11,"try_into","","",1813,[[],["result",4]]],[11,"type_id","","",1813,[[],["typeid",3]]],[11,"from","","",1814,[[]]],[11,"borrow","","",1814,[[]]],[11,"borrow_mut","","",1814,[[]]],[11,"try_from","","",1814,[[],["result",4]]],[11,"into","","",1814,[[]]],[11,"try_into","","",1814,[[],["result",4]]],[11,"type_id","","",1814,[[],["typeid",3]]],[11,"from","","",1815,[[]]],[11,"borrow","","",1815,[[]]],[11,"borrow_mut","","",1815,[[]]],[11,"try_from","","",1815,[[],["result",4]]],[11,"into","","",1815,[[]]],[11,"try_into","","",1815,[[],["result",4]]],[11,"type_id","","",1815,[[],["typeid",3]]],[11,"from","","",1816,[[]]],[11,"borrow","","",1816,[[]]],[11,"borrow_mut","","",1816,[[]]],[11,"try_from","","",1816,[[],["result",4]]],[11,"into","","",1816,[[]]],[11,"try_into","","",1816,[[],["result",4]]],[11,"type_id","","",1816,[[],["typeid",3]]],[11,"from","","",1817,[[]]],[11,"borrow","","",1817,[[]]],[11,"borrow_mut","","",1817,[[]]],[11,"try_from","","",1817,[[],["result",4]]],[11,"into","","",1817,[[]]],[11,"try_into","","",1817,[[],["result",4]]],[11,"type_id","","",1817,[[],["typeid",3]]],[11,"from","","",1818,[[]]],[11,"borrow","","",1818,[[]]],[11,"borrow_mut","","",1818,[[]]],[11,"try_from","","",1818,[[],["result",4]]],[11,"into","","",1818,[[]]],[11,"try_into","","",1818,[[],["result",4]]],[11,"type_id","","",1818,[[],["typeid",3]]],[11,"from","","",1819,[[]]],[11,"borrow","","",1819,[[]]],[11,"borrow_mut","","",1819,[[]]],[11,"try_from","","",1819,[[],["result",4]]],[11,"into","","",1819,[[]]],[11,"try_into","","",1819,[[],["result",4]]],[11,"type_id","","",1819,[[],["typeid",3]]],[11,"from","","",1820,[[]]],[11,"borrow","","",1820,[[]]],[11,"borrow_mut","","",1820,[[]]],[11,"try_from","","",1820,[[],["result",4]]],[11,"into","","",1820,[[]]],[11,"try_into","","",1820,[[],["result",4]]],[11,"type_id","","",1820,[[],["typeid",3]]],[11,"from","","",1821,[[]]],[11,"borrow","","",1821,[[]]],[11,"borrow_mut","","",1821,[[]]],[11,"try_from","","",1821,[[],["result",4]]],[11,"into","","",1821,[[]]],[11,"try_into","","",1821,[[],["result",4]]],[11,"type_id","","",1821,[[],["typeid",3]]],[11,"from","","",1822,[[]]],[11,"borrow","","",1822,[[]]],[11,"borrow_mut","","",1822,[[]]],[11,"try_from","","",1822,[[],["result",4]]],[11,"into","","",1822,[[]]],[11,"try_into","","",1822,[[],["result",4]]],[11,"type_id","","",1822,[[],["typeid",3]]],[11,"from","","",1823,[[]]],[11,"borrow","","",1823,[[]]],[11,"borrow_mut","","",1823,[[]]],[11,"try_from","","",1823,[[],["result",4]]],[11,"into","","",1823,[[]]],[11,"try_into","","",1823,[[],["result",4]]],[11,"type_id","","",1823,[[],["typeid",3]]],[11,"from","","",1824,[[]]],[11,"borrow","","",1824,[[]]],[11,"borrow_mut","","",1824,[[]]],[11,"try_from","","",1824,[[],["result",4]]],[11,"into","","",1824,[[]]],[11,"try_into","","",1824,[[],["result",4]]],[11,"type_id","","",1824,[[],["typeid",3]]],[11,"from","","",1825,[[]]],[11,"borrow","","",1825,[[]]],[11,"borrow_mut","","",1825,[[]]],[11,"try_from","","",1825,[[],["result",4]]],[11,"into","","",1825,[[]]],[11,"try_into","","",1825,[[],["result",4]]],[11,"type_id","","",1825,[[],["typeid",3]]],[11,"from","","",1826,[[]]],[11,"borrow","","",1826,[[]]],[11,"borrow_mut","","",1826,[[]]],[11,"try_from","","",1826,[[],["result",4]]],[11,"into","","",1826,[[]]],[11,"try_into","","",1826,[[],["result",4]]],[11,"type_id","","",1826,[[],["typeid",3]]],[11,"from","","",1827,[[]]],[11,"borrow","","",1827,[[]]],[11,"borrow_mut","","",1827,[[]]],[11,"try_from","","",1827,[[],["result",4]]],[11,"into","","",1827,[[]]],[11,"try_into","","",1827,[[],["result",4]]],[11,"type_id","","",1827,[[],["typeid",3]]],[11,"from","","",1828,[[]]],[11,"borrow","","",1828,[[]]],[11,"borrow_mut","","",1828,[[]]],[11,"try_from","","",1828,[[],["result",4]]],[11,"into","","",1828,[[]]],[11,"try_into","","",1828,[[],["result",4]]],[11,"type_id","","",1828,[[],["typeid",3]]],[11,"from","","",1829,[[]]],[11,"borrow","","",1829,[[]]],[11,"borrow_mut","","",1829,[[]]],[11,"try_from","","",1829,[[],["result",4]]],[11,"into","","",1829,[[]]],[11,"try_into","","",1829,[[],["result",4]]],[11,"type_id","","",1829,[[],["typeid",3]]],[11,"from","","",1830,[[]]],[11,"borrow","","",1830,[[]]],[11,"borrow_mut","","",1830,[[]]],[11,"try_from","","",1830,[[],["result",4]]],[11,"into","","",1830,[[]]],[11,"try_into","","",1830,[[],["result",4]]],[11,"type_id","","",1830,[[],["typeid",3]]],[11,"from","","",1831,[[]]],[11,"borrow","","",1831,[[]]],[11,"borrow_mut","","",1831,[[]]],[11,"try_from","","",1831,[[],["result",4]]],[11,"into","","",1831,[[]]],[11,"try_into","","",1831,[[],["result",4]]],[11,"type_id","","",1831,[[],["typeid",3]]],[11,"from","","",1832,[[]]],[11,"borrow","","",1832,[[]]],[11,"borrow_mut","","",1832,[[]]],[11,"try_from","","",1832,[[],["result",4]]],[11,"into","","",1832,[[]]],[11,"try_into","","",1832,[[],["result",4]]],[11,"type_id","","",1832,[[],["typeid",3]]],[11,"from","","",1833,[[]]],[11,"borrow","","",1833,[[]]],[11,"borrow_mut","","",1833,[[]]],[11,"try_from","","",1833,[[],["result",4]]],[11,"into","","",1833,[[]]],[11,"try_into","","",1833,[[],["result",4]]],[11,"type_id","","",1833,[[],["typeid",3]]],[11,"from","","",1834,[[]]],[11,"borrow","","",1834,[[]]],[11,"borrow_mut","","",1834,[[]]],[11,"try_from","","",1834,[[],["result",4]]],[11,"into","","",1834,[[]]],[11,"try_into","","",1834,[[],["result",4]]],[11,"type_id","","",1834,[[],["typeid",3]]],[11,"from","","",1835,[[]]],[11,"borrow","","",1835,[[]]],[11,"borrow_mut","","",1835,[[]]],[11,"try_from","","",1835,[[],["result",4]]],[11,"into","","",1835,[[]]],[11,"try_into","","",1835,[[],["result",4]]],[11,"type_id","","",1835,[[],["typeid",3]]],[11,"from","","",1836,[[]]],[11,"borrow","","",1836,[[]]],[11,"borrow_mut","","",1836,[[]]],[11,"try_from","","",1836,[[],["result",4]]],[11,"into","","",1836,[[]]],[11,"try_into","","",1836,[[],["result",4]]],[11,"type_id","","",1836,[[],["typeid",3]]],[11,"from","","",1837,[[]]],[11,"borrow","","",1837,[[]]],[11,"borrow_mut","","",1837,[[]]],[11,"try_from","","",1837,[[],["result",4]]],[11,"into","","",1837,[[]]],[11,"try_into","","",1837,[[],["result",4]]],[11,"type_id","","",1837,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::dbgctrl","",1840,[[]]],[11,"borrow","","",1840,[[]]],[11,"borrow_mut","","",1840,[[]]],[11,"try_from","","",1840,[[],["result",4]]],[11,"into","","",1840,[[]]],[11,"try_into","","",1840,[[],["result",4]]],[11,"type_id","","",1840,[[],["typeid",3]]],[11,"from","","",1841,[[]]],[11,"borrow","","",1841,[[]]],[11,"borrow_mut","","",1841,[[]]],[11,"try_from","","",1841,[[],["result",4]]],[11,"into","","",1841,[[]]],[11,"try_into","","",1841,[[],["result",4]]],[11,"type_id","","",1841,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::evctrl","",1848,[[]]],[11,"borrow","","",1848,[[]]],[11,"borrow_mut","","",1848,[[]]],[11,"try_from","","",1848,[[],["result",4]]],[11,"into","","",1848,[[]]],[11,"try_into","","",1848,[[],["result",4]]],[11,"type_id","","",1848,[[],["typeid",3]]],[11,"from","","",1850,[[]]],[11,"borrow","","",1850,[[]]],[11,"borrow_mut","","",1850,[[]]],[11,"try_from","","",1850,[[],["result",4]]],[11,"into","","",1850,[[]]],[11,"try_into","","",1850,[[],["result",4]]],[11,"type_id","","",1850,[[],["typeid",3]]],[11,"from","","",1852,[[]]],[11,"borrow","","",1852,[[]]],[11,"borrow_mut","","",1852,[[]]],[11,"try_from","","",1852,[[],["result",4]]],[11,"into","","",1852,[[]]],[11,"try_into","","",1852,[[],["result",4]]],[11,"type_id","","",1852,[[],["typeid",3]]],[11,"from","","",1853,[[]]],[11,"borrow","","",1853,[[]]],[11,"borrow_mut","","",1853,[[]]],[11,"try_from","","",1853,[[],["result",4]]],[11,"into","","",1853,[[]]],[11,"try_into","","",1853,[[],["result",4]]],[11,"type_id","","",1853,[[],["typeid",3]]],[11,"from","","",1854,[[]]],[11,"borrow","","",1854,[[]]],[11,"borrow_mut","","",1854,[[]]],[11,"try_from","","",1854,[[],["result",4]]],[11,"into","","",1854,[[]]],[11,"try_into","","",1854,[[],["result",4]]],[11,"type_id","","",1854,[[],["typeid",3]]],[11,"from","","",1855,[[]]],[11,"borrow","","",1855,[[]]],[11,"borrow_mut","","",1855,[[]]],[11,"try_from","","",1855,[[],["result",4]]],[11,"into","","",1855,[[]]],[11,"try_into","","",1855,[[],["result",4]]],[11,"type_id","","",1855,[[],["typeid",3]]],[11,"from","","",1856,[[]]],[11,"borrow","","",1856,[[]]],[11,"borrow_mut","","",1856,[[]]],[11,"try_from","","",1856,[[],["result",4]]],[11,"into","","",1856,[[]]],[11,"try_into","","",1856,[[],["result",4]]],[11,"type_id","","",1856,[[],["typeid",3]]],[11,"from","","",1857,[[]]],[11,"borrow","","",1857,[[]]],[11,"borrow_mut","","",1857,[[]]],[11,"try_from","","",1857,[[],["result",4]]],[11,"into","","",1857,[[]]],[11,"try_into","","",1857,[[],["result",4]]],[11,"type_id","","",1857,[[],["typeid",3]]],[11,"from","","",1858,[[]]],[11,"borrow","","",1858,[[]]],[11,"borrow_mut","","",1858,[[]]],[11,"try_from","","",1858,[[],["result",4]]],[11,"into","","",1858,[[]]],[11,"try_into","","",1858,[[],["result",4]]],[11,"type_id","","",1858,[[],["typeid",3]]],[11,"from","","",1859,[[]]],[11,"borrow","","",1859,[[]]],[11,"borrow_mut","","",1859,[[]]],[11,"try_from","","",1859,[[],["result",4]]],[11,"into","","",1859,[[]]],[11,"try_into","","",1859,[[],["result",4]]],[11,"type_id","","",1859,[[],["typeid",3]]],[11,"from","","",1860,[[]]],[11,"borrow","","",1860,[[]]],[11,"borrow_mut","","",1860,[[]]],[11,"try_from","","",1860,[[],["result",4]]],[11,"into","","",1860,[[]]],[11,"try_into","","",1860,[[],["result",4]]],[11,"type_id","","",1860,[[],["typeid",3]]],[11,"from","","",1861,[[]]],[11,"borrow","","",1861,[[]]],[11,"borrow_mut","","",1861,[[]]],[11,"try_from","","",1861,[[],["result",4]]],[11,"into","","",1861,[[]]],[11,"try_into","","",1861,[[],["result",4]]],[11,"type_id","","",1861,[[],["typeid",3]]],[11,"from","","",1862,[[]]],[11,"borrow","","",1862,[[]]],[11,"borrow_mut","","",1862,[[]]],[11,"try_from","","",1862,[[],["result",4]]],[11,"into","","",1862,[[]]],[11,"try_into","","",1862,[[],["result",4]]],[11,"type_id","","",1862,[[],["typeid",3]]],[11,"from","","",1863,[[]]],[11,"borrow","","",1863,[[]]],[11,"borrow_mut","","",1863,[[]]],[11,"try_from","","",1863,[[],["result",4]]],[11,"into","","",1863,[[]]],[11,"try_into","","",1863,[[],["result",4]]],[11,"type_id","","",1863,[[],["typeid",3]]],[11,"from","","",1864,[[]]],[11,"borrow","","",1864,[[]]],[11,"borrow_mut","","",1864,[[]]],[11,"try_from","","",1864,[[],["result",4]]],[11,"into","","",1864,[[]]],[11,"try_into","","",1864,[[],["result",4]]],[11,"type_id","","",1864,[[],["typeid",3]]],[11,"from","","",1865,[[]]],[11,"borrow","","",1865,[[]]],[11,"borrow_mut","","",1865,[[]]],[11,"try_from","","",1865,[[],["result",4]]],[11,"into","","",1865,[[]]],[11,"try_into","","",1865,[[],["result",4]]],[11,"type_id","","",1865,[[],["typeid",3]]],[11,"from","","",1866,[[]]],[11,"borrow","","",1866,[[]]],[11,"borrow_mut","","",1866,[[]]],[11,"try_from","","",1866,[[],["result",4]]],[11,"into","","",1866,[[]]],[11,"try_into","","",1866,[[],["result",4]]],[11,"type_id","","",1866,[[],["typeid",3]]],[11,"from","","",1867,[[]]],[11,"borrow","","",1867,[[]]],[11,"borrow_mut","","",1867,[[]]],[11,"try_from","","",1867,[[],["result",4]]],[11,"into","","",1867,[[]]],[11,"try_into","","",1867,[[],["result",4]]],[11,"type_id","","",1867,[[],["typeid",3]]],[11,"from","","",1844,[[]]],[11,"borrow","","",1844,[[]]],[11,"borrow_mut","","",1844,[[]]],[11,"try_from","","",1844,[[],["result",4]]],[11,"into","","",1844,[[]]],[11,"try_into","","",1844,[[],["result",4]]],[11,"type_id","","",1844,[[],["typeid",3]]],[11,"from","","",1845,[[]]],[11,"borrow","","",1845,[[]]],[11,"borrow_mut","","",1845,[[]]],[11,"try_from","","",1845,[[],["result",4]]],[11,"into","","",1845,[[]]],[11,"try_into","","",1845,[[],["result",4]]],[11,"type_id","","",1845,[[],["typeid",3]]],[11,"from","","",1846,[[]]],[11,"borrow","","",1846,[[]]],[11,"borrow_mut","","",1846,[[]]],[11,"try_from","","",1846,[[],["result",4]]],[11,"into","","",1846,[[]]],[11,"try_into","","",1846,[[],["result",4]]],[11,"type_id","","",1846,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::intenclr","",1870,[[]]],[11,"borrow","","",1870,[[]]],[11,"borrow_mut","","",1870,[[]]],[11,"try_from","","",1870,[[],["result",4]]],[11,"into","","",1870,[[]]],[11,"try_into","","",1870,[[],["result",4]]],[11,"type_id","","",1870,[[],["typeid",3]]],[11,"from","","",1871,[[]]],[11,"borrow","","",1871,[[]]],[11,"borrow_mut","","",1871,[[]]],[11,"try_from","","",1871,[[],["result",4]]],[11,"into","","",1871,[[]]],[11,"try_into","","",1871,[[],["result",4]]],[11,"type_id","","",1871,[[],["typeid",3]]],[11,"from","","",1872,[[]]],[11,"borrow","","",1872,[[]]],[11,"borrow_mut","","",1872,[[]]],[11,"try_from","","",1872,[[],["result",4]]],[11,"into","","",1872,[[]]],[11,"try_into","","",1872,[[],["result",4]]],[11,"type_id","","",1872,[[],["typeid",3]]],[11,"from","","",1873,[[]]],[11,"borrow","","",1873,[[]]],[11,"borrow_mut","","",1873,[[]]],[11,"try_from","","",1873,[[],["result",4]]],[11,"into","","",1873,[[]]],[11,"try_into","","",1873,[[],["result",4]]],[11,"type_id","","",1873,[[],["typeid",3]]],[11,"from","","",1874,[[]]],[11,"borrow","","",1874,[[]]],[11,"borrow_mut","","",1874,[[]]],[11,"try_from","","",1874,[[],["result",4]]],[11,"into","","",1874,[[]]],[11,"try_into","","",1874,[[],["result",4]]],[11,"type_id","","",1874,[[],["typeid",3]]],[11,"from","","",1875,[[]]],[11,"borrow","","",1875,[[]]],[11,"borrow_mut","","",1875,[[]]],[11,"try_from","","",1875,[[],["result",4]]],[11,"into","","",1875,[[]]],[11,"try_into","","",1875,[[],["result",4]]],[11,"type_id","","",1875,[[],["typeid",3]]],[11,"from","","",1876,[[]]],[11,"borrow","","",1876,[[]]],[11,"borrow_mut","","",1876,[[]]],[11,"try_from","","",1876,[[],["result",4]]],[11,"into","","",1876,[[]]],[11,"try_into","","",1876,[[],["result",4]]],[11,"type_id","","",1876,[[],["typeid",3]]],[11,"from","","",1877,[[]]],[11,"borrow","","",1877,[[]]],[11,"borrow_mut","","",1877,[[]]],[11,"try_from","","",1877,[[],["result",4]]],[11,"into","","",1877,[[]]],[11,"try_into","","",1877,[[],["result",4]]],[11,"type_id","","",1877,[[],["typeid",3]]],[11,"from","","",1878,[[]]],[11,"borrow","","",1878,[[]]],[11,"borrow_mut","","",1878,[[]]],[11,"try_from","","",1878,[[],["result",4]]],[11,"into","","",1878,[[]]],[11,"try_into","","",1878,[[],["result",4]]],[11,"type_id","","",1878,[[],["typeid",3]]],[11,"from","","",1879,[[]]],[11,"borrow","","",1879,[[]]],[11,"borrow_mut","","",1879,[[]]],[11,"try_from","","",1879,[[],["result",4]]],[11,"into","","",1879,[[]]],[11,"try_into","","",1879,[[],["result",4]]],[11,"type_id","","",1879,[[],["typeid",3]]],[11,"from","","",1880,[[]]],[11,"borrow","","",1880,[[]]],[11,"borrow_mut","","",1880,[[]]],[11,"try_from","","",1880,[[],["result",4]]],[11,"into","","",1880,[[]]],[11,"try_into","","",1880,[[],["result",4]]],[11,"type_id","","",1880,[[],["typeid",3]]],[11,"from","","",1881,[[]]],[11,"borrow","","",1881,[[]]],[11,"borrow_mut","","",1881,[[]]],[11,"try_from","","",1881,[[],["result",4]]],[11,"into","","",1881,[[]]],[11,"try_into","","",1881,[[],["result",4]]],[11,"type_id","","",1881,[[],["typeid",3]]],[11,"from","","",1882,[[]]],[11,"borrow","","",1882,[[]]],[11,"borrow_mut","","",1882,[[]]],[11,"try_from","","",1882,[[],["result",4]]],[11,"into","","",1882,[[]]],[11,"try_into","","",1882,[[],["result",4]]],[11,"type_id","","",1882,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::intenset","",1885,[[]]],[11,"borrow","","",1885,[[]]],[11,"borrow_mut","","",1885,[[]]],[11,"try_from","","",1885,[[],["result",4]]],[11,"into","","",1885,[[]]],[11,"try_into","","",1885,[[],["result",4]]],[11,"type_id","","",1885,[[],["typeid",3]]],[11,"from","","",1886,[[]]],[11,"borrow","","",1886,[[]]],[11,"borrow_mut","","",1886,[[]]],[11,"try_from","","",1886,[[],["result",4]]],[11,"into","","",1886,[[]]],[11,"try_into","","",1886,[[],["result",4]]],[11,"type_id","","",1886,[[],["typeid",3]]],[11,"from","","",1887,[[]]],[11,"borrow","","",1887,[[]]],[11,"borrow_mut","","",1887,[[]]],[11,"try_from","","",1887,[[],["result",4]]],[11,"into","","",1887,[[]]],[11,"try_into","","",1887,[[],["result",4]]],[11,"type_id","","",1887,[[],["typeid",3]]],[11,"from","","",1888,[[]]],[11,"borrow","","",1888,[[]]],[11,"borrow_mut","","",1888,[[]]],[11,"try_from","","",1888,[[],["result",4]]],[11,"into","","",1888,[[]]],[11,"try_into","","",1888,[[],["result",4]]],[11,"type_id","","",1888,[[],["typeid",3]]],[11,"from","","",1889,[[]]],[11,"borrow","","",1889,[[]]],[11,"borrow_mut","","",1889,[[]]],[11,"try_from","","",1889,[[],["result",4]]],[11,"into","","",1889,[[]]],[11,"try_into","","",1889,[[],["result",4]]],[11,"type_id","","",1889,[[],["typeid",3]]],[11,"from","","",1890,[[]]],[11,"borrow","","",1890,[[]]],[11,"borrow_mut","","",1890,[[]]],[11,"try_from","","",1890,[[],["result",4]]],[11,"into","","",1890,[[]]],[11,"try_into","","",1890,[[],["result",4]]],[11,"type_id","","",1890,[[],["typeid",3]]],[11,"from","","",1891,[[]]],[11,"borrow","","",1891,[[]]],[11,"borrow_mut","","",1891,[[]]],[11,"try_from","","",1891,[[],["result",4]]],[11,"into","","",1891,[[]]],[11,"try_into","","",1891,[[],["result",4]]],[11,"type_id","","",1891,[[],["typeid",3]]],[11,"from","","",1892,[[]]],[11,"borrow","","",1892,[[]]],[11,"borrow_mut","","",1892,[[]]],[11,"try_from","","",1892,[[],["result",4]]],[11,"into","","",1892,[[]]],[11,"try_into","","",1892,[[],["result",4]]],[11,"type_id","","",1892,[[],["typeid",3]]],[11,"from","","",1893,[[]]],[11,"borrow","","",1893,[[]]],[11,"borrow_mut","","",1893,[[]]],[11,"try_from","","",1893,[[],["result",4]]],[11,"into","","",1893,[[]]],[11,"try_into","","",1893,[[],["result",4]]],[11,"type_id","","",1893,[[],["typeid",3]]],[11,"from","","",1894,[[]]],[11,"borrow","","",1894,[[]]],[11,"borrow_mut","","",1894,[[]]],[11,"try_from","","",1894,[[],["result",4]]],[11,"into","","",1894,[[]]],[11,"try_into","","",1894,[[],["result",4]]],[11,"type_id","","",1894,[[],["typeid",3]]],[11,"from","","",1895,[[]]],[11,"borrow","","",1895,[[]]],[11,"borrow_mut","","",1895,[[]]],[11,"try_from","","",1895,[[],["result",4]]],[11,"into","","",1895,[[]]],[11,"try_into","","",1895,[[],["result",4]]],[11,"type_id","","",1895,[[],["typeid",3]]],[11,"from","","",1896,[[]]],[11,"borrow","","",1896,[[]]],[11,"borrow_mut","","",1896,[[]]],[11,"try_from","","",1896,[[],["result",4]]],[11,"into","","",1896,[[]]],[11,"try_into","","",1896,[[],["result",4]]],[11,"type_id","","",1896,[[],["typeid",3]]],[11,"from","","",1897,[[]]],[11,"borrow","","",1897,[[]]],[11,"borrow_mut","","",1897,[[]]],[11,"try_from","","",1897,[[],["result",4]]],[11,"into","","",1897,[[]]],[11,"try_into","","",1897,[[],["result",4]]],[11,"type_id","","",1897,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::intflag","",1900,[[]]],[11,"borrow","","",1900,[[]]],[11,"borrow_mut","","",1900,[[]]],[11,"try_from","","",1900,[[],["result",4]]],[11,"into","","",1900,[[]]],[11,"try_into","","",1900,[[],["result",4]]],[11,"type_id","","",1900,[[],["typeid",3]]],[11,"from","","",1901,[[]]],[11,"borrow","","",1901,[[]]],[11,"borrow_mut","","",1901,[[]]],[11,"try_from","","",1901,[[],["result",4]]],[11,"into","","",1901,[[]]],[11,"try_into","","",1901,[[],["result",4]]],[11,"type_id","","",1901,[[],["typeid",3]]],[11,"from","","",1902,[[]]],[11,"borrow","","",1902,[[]]],[11,"borrow_mut","","",1902,[[]]],[11,"try_from","","",1902,[[],["result",4]]],[11,"into","","",1902,[[]]],[11,"try_into","","",1902,[[],["result",4]]],[11,"type_id","","",1902,[[],["typeid",3]]],[11,"from","","",1903,[[]]],[11,"borrow","","",1903,[[]]],[11,"borrow_mut","","",1903,[[]]],[11,"try_from","","",1903,[[],["result",4]]],[11,"into","","",1903,[[]]],[11,"try_into","","",1903,[[],["result",4]]],[11,"type_id","","",1903,[[],["typeid",3]]],[11,"from","","",1904,[[]]],[11,"borrow","","",1904,[[]]],[11,"borrow_mut","","",1904,[[]]],[11,"try_from","","",1904,[[],["result",4]]],[11,"into","","",1904,[[]]],[11,"try_into","","",1904,[[],["result",4]]],[11,"type_id","","",1904,[[],["typeid",3]]],[11,"from","","",1905,[[]]],[11,"borrow","","",1905,[[]]],[11,"borrow_mut","","",1905,[[]]],[11,"try_from","","",1905,[[],["result",4]]],[11,"into","","",1905,[[]]],[11,"try_into","","",1905,[[],["result",4]]],[11,"type_id","","",1905,[[],["typeid",3]]],[11,"from","","",1906,[[]]],[11,"borrow","","",1906,[[]]],[11,"borrow_mut","","",1906,[[]]],[11,"try_from","","",1906,[[],["result",4]]],[11,"into","","",1906,[[]]],[11,"try_into","","",1906,[[],["result",4]]],[11,"type_id","","",1906,[[],["typeid",3]]],[11,"from","","",1907,[[]]],[11,"borrow","","",1907,[[]]],[11,"borrow_mut","","",1907,[[]]],[11,"try_from","","",1907,[[],["result",4]]],[11,"into","","",1907,[[]]],[11,"try_into","","",1907,[[],["result",4]]],[11,"type_id","","",1907,[[],["typeid",3]]],[11,"from","","",1908,[[]]],[11,"borrow","","",1908,[[]]],[11,"borrow_mut","","",1908,[[]]],[11,"try_from","","",1908,[[],["result",4]]],[11,"into","","",1908,[[]]],[11,"try_into","","",1908,[[],["result",4]]],[11,"type_id","","",1908,[[],["typeid",3]]],[11,"from","","",1909,[[]]],[11,"borrow","","",1909,[[]]],[11,"borrow_mut","","",1909,[[]]],[11,"try_from","","",1909,[[],["result",4]]],[11,"into","","",1909,[[]]],[11,"try_into","","",1909,[[],["result",4]]],[11,"type_id","","",1909,[[],["typeid",3]]],[11,"from","","",1910,[[]]],[11,"borrow","","",1910,[[]]],[11,"borrow_mut","","",1910,[[]]],[11,"try_from","","",1910,[[],["result",4]]],[11,"into","","",1910,[[]]],[11,"try_into","","",1910,[[],["result",4]]],[11,"type_id","","",1910,[[],["typeid",3]]],[11,"from","","",1911,[[]]],[11,"borrow","","",1911,[[]]],[11,"borrow_mut","","",1911,[[]]],[11,"try_from","","",1911,[[],["result",4]]],[11,"into","","",1911,[[]]],[11,"try_into","","",1911,[[],["result",4]]],[11,"type_id","","",1911,[[],["typeid",3]]],[11,"from","","",1912,[[]]],[11,"borrow","","",1912,[[]]],[11,"borrow_mut","","",1912,[[]]],[11,"try_from","","",1912,[[],["result",4]]],[11,"into","","",1912,[[]]],[11,"try_into","","",1912,[[],["result",4]]],[11,"type_id","","",1912,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::status","",1915,[[]]],[11,"borrow","","",1915,[[]]],[11,"borrow_mut","","",1915,[[]]],[11,"try_from","","",1915,[[],["result",4]]],[11,"into","","",1915,[[]]],[11,"try_into","","",1915,[[],["result",4]]],[11,"type_id","","",1915,[[],["typeid",3]]],[11,"from","","",1916,[[]]],[11,"borrow","","",1916,[[]]],[11,"borrow_mut","","",1916,[[]]],[11,"try_from","","",1916,[[],["result",4]]],[11,"into","","",1916,[[]]],[11,"try_into","","",1916,[[],["result",4]]],[11,"type_id","","",1916,[[],["typeid",3]]],[11,"from","","",1917,[[]]],[11,"borrow","","",1917,[[]]],[11,"borrow_mut","","",1917,[[]]],[11,"try_from","","",1917,[[],["result",4]]],[11,"into","","",1917,[[]]],[11,"try_into","","",1917,[[],["result",4]]],[11,"type_id","","",1917,[[],["typeid",3]]],[11,"from","","",1918,[[]]],[11,"borrow","","",1918,[[]]],[11,"borrow_mut","","",1918,[[]]],[11,"try_from","","",1918,[[],["result",4]]],[11,"into","","",1918,[[]]],[11,"try_into","","",1918,[[],["result",4]]],[11,"type_id","","",1918,[[],["typeid",3]]],[11,"from","","",1919,[[]]],[11,"borrow","","",1919,[[]]],[11,"borrow_mut","","",1919,[[]]],[11,"try_from","","",1919,[[],["result",4]]],[11,"into","","",1919,[[]]],[11,"try_into","","",1919,[[],["result",4]]],[11,"type_id","","",1919,[[],["typeid",3]]],[11,"from","","",1920,[[]]],[11,"borrow","","",1920,[[]]],[11,"borrow_mut","","",1920,[[]]],[11,"try_from","","",1920,[[],["result",4]]],[11,"into","","",1920,[[]]],[11,"try_into","","",1920,[[],["result",4]]],[11,"type_id","","",1920,[[],["typeid",3]]],[11,"from","","",1921,[[]]],[11,"borrow","","",1921,[[]]],[11,"borrow_mut","","",1921,[[]]],[11,"try_from","","",1921,[[],["result",4]]],[11,"into","","",1921,[[]]],[11,"try_into","","",1921,[[],["result",4]]],[11,"type_id","","",1921,[[],["typeid",3]]],[11,"from","","",1922,[[]]],[11,"borrow","","",1922,[[]]],[11,"borrow_mut","","",1922,[[]]],[11,"try_from","","",1922,[[],["result",4]]],[11,"into","","",1922,[[]]],[11,"try_into","","",1922,[[],["result",4]]],[11,"type_id","","",1922,[[],["typeid",3]]],[11,"from","","",1923,[[]]],[11,"borrow","","",1923,[[]]],[11,"borrow_mut","","",1923,[[]]],[11,"try_from","","",1923,[[],["result",4]]],[11,"into","","",1923,[[]]],[11,"try_into","","",1923,[[],["result",4]]],[11,"type_id","","",1923,[[],["typeid",3]]],[11,"from","","",1924,[[]]],[11,"borrow","","",1924,[[]]],[11,"borrow_mut","","",1924,[[]]],[11,"try_from","","",1924,[[],["result",4]]],[11,"into","","",1924,[[]]],[11,"try_into","","",1924,[[],["result",4]]],[11,"type_id","","",1924,[[],["typeid",3]]],[11,"from","","",1925,[[]]],[11,"borrow","","",1925,[[]]],[11,"borrow_mut","","",1925,[[]]],[11,"try_from","","",1925,[[],["result",4]]],[11,"into","","",1925,[[]]],[11,"try_into","","",1925,[[],["result",4]]],[11,"type_id","","",1925,[[],["typeid",3]]],[11,"from","","",1926,[[]]],[11,"borrow","","",1926,[[]]],[11,"borrow_mut","","",1926,[[]]],[11,"try_from","","",1926,[[],["result",4]]],[11,"into","","",1926,[[]]],[11,"try_into","","",1926,[[],["result",4]]],[11,"type_id","","",1926,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::count","",1929,[[]]],[11,"borrow","","",1929,[[]]],[11,"borrow_mut","","",1929,[[]]],[11,"try_from","","",1929,[[],["result",4]]],[11,"into","","",1929,[[]]],[11,"try_into","","",1929,[[],["result",4]]],[11,"type_id","","",1929,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::count_dith4","",1932,[[]]],[11,"borrow","","",1932,[[]]],[11,"borrow_mut","","",1932,[[]]],[11,"try_from","","",1932,[[],["result",4]]],[11,"into","","",1932,[[]]],[11,"try_into","","",1932,[[],["result",4]]],[11,"type_id","","",1932,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::count_dith5","",1935,[[]]],[11,"borrow","","",1935,[[]]],[11,"borrow_mut","","",1935,[[]]],[11,"try_from","","",1935,[[],["result",4]]],[11,"into","","",1935,[[]]],[11,"try_into","","",1935,[[],["result",4]]],[11,"type_id","","",1935,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::count_dith6","",1938,[[]]],[11,"borrow","","",1938,[[]]],[11,"borrow_mut","","",1938,[[]]],[11,"try_from","","",1938,[[],["result",4]]],[11,"into","","",1938,[[]]],[11,"try_into","","",1938,[[],["result",4]]],[11,"type_id","","",1938,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::patt","",1941,[[]]],[11,"borrow","","",1941,[[]]],[11,"borrow_mut","","",1941,[[]]],[11,"try_from","","",1941,[[],["result",4]]],[11,"into","","",1941,[[]]],[11,"try_into","","",1941,[[],["result",4]]],[11,"type_id","","",1941,[[],["typeid",3]]],[11,"from","","",1942,[[]]],[11,"borrow","","",1942,[[]]],[11,"borrow_mut","","",1942,[[]]],[11,"try_from","","",1942,[[],["result",4]]],[11,"into","","",1942,[[]]],[11,"try_into","","",1942,[[],["result",4]]],[11,"type_id","","",1942,[[],["typeid",3]]],[11,"from","","",1943,[[]]],[11,"borrow","","",1943,[[]]],[11,"borrow_mut","","",1943,[[]]],[11,"try_from","","",1943,[[],["result",4]]],[11,"into","","",1943,[[]]],[11,"try_into","","",1943,[[],["result",4]]],[11,"type_id","","",1943,[[],["typeid",3]]],[11,"from","","",1944,[[]]],[11,"borrow","","",1944,[[]]],[11,"borrow_mut","","",1944,[[]]],[11,"try_from","","",1944,[[],["result",4]]],[11,"into","","",1944,[[]]],[11,"try_into","","",1944,[[],["result",4]]],[11,"type_id","","",1944,[[],["typeid",3]]],[11,"from","","",1945,[[]]],[11,"borrow","","",1945,[[]]],[11,"borrow_mut","","",1945,[[]]],[11,"try_from","","",1945,[[],["result",4]]],[11,"into","","",1945,[[]]],[11,"try_into","","",1945,[[],["result",4]]],[11,"type_id","","",1945,[[],["typeid",3]]],[11,"from","","",1946,[[]]],[11,"borrow","","",1946,[[]]],[11,"borrow_mut","","",1946,[[]]],[11,"try_from","","",1946,[[],["result",4]]],[11,"into","","",1946,[[]]],[11,"try_into","","",1946,[[],["result",4]]],[11,"type_id","","",1946,[[],["typeid",3]]],[11,"from","","",1947,[[]]],[11,"borrow","","",1947,[[]]],[11,"borrow_mut","","",1947,[[]]],[11,"try_from","","",1947,[[],["result",4]]],[11,"into","","",1947,[[]]],[11,"try_into","","",1947,[[],["result",4]]],[11,"type_id","","",1947,[[],["typeid",3]]],[11,"from","","",1948,[[]]],[11,"borrow","","",1948,[[]]],[11,"borrow_mut","","",1948,[[]]],[11,"try_from","","",1948,[[],["result",4]]],[11,"into","","",1948,[[]]],[11,"try_into","","",1948,[[],["result",4]]],[11,"type_id","","",1948,[[],["typeid",3]]],[11,"from","","",1949,[[]]],[11,"borrow","","",1949,[[]]],[11,"borrow_mut","","",1949,[[]]],[11,"try_from","","",1949,[[],["result",4]]],[11,"into","","",1949,[[]]],[11,"try_into","","",1949,[[],["result",4]]],[11,"type_id","","",1949,[[],["typeid",3]]],[11,"from","","",1950,[[]]],[11,"borrow","","",1950,[[]]],[11,"borrow_mut","","",1950,[[]]],[11,"try_from","","",1950,[[],["result",4]]],[11,"into","","",1950,[[]]],[11,"try_into","","",1950,[[],["result",4]]],[11,"type_id","","",1950,[[],["typeid",3]]],[11,"from","","",1951,[[]]],[11,"borrow","","",1951,[[]]],[11,"borrow_mut","","",1951,[[]]],[11,"try_from","","",1951,[[],["result",4]]],[11,"into","","",1951,[[]]],[11,"try_into","","",1951,[[],["result",4]]],[11,"type_id","","",1951,[[],["typeid",3]]],[11,"from","","",1952,[[]]],[11,"borrow","","",1952,[[]]],[11,"borrow_mut","","",1952,[[]]],[11,"try_from","","",1952,[[],["result",4]]],[11,"into","","",1952,[[]]],[11,"try_into","","",1952,[[],["result",4]]],[11,"type_id","","",1952,[[],["typeid",3]]],[11,"from","","",1953,[[]]],[11,"borrow","","",1953,[[]]],[11,"borrow_mut","","",1953,[[]]],[11,"try_from","","",1953,[[],["result",4]]],[11,"into","","",1953,[[]]],[11,"try_into","","",1953,[[],["result",4]]],[11,"type_id","","",1953,[[],["typeid",3]]],[11,"from","","",1954,[[]]],[11,"borrow","","",1954,[[]]],[11,"borrow_mut","","",1954,[[]]],[11,"try_from","","",1954,[[],["result",4]]],[11,"into","","",1954,[[]]],[11,"try_into","","",1954,[[],["result",4]]],[11,"type_id","","",1954,[[],["typeid",3]]],[11,"from","","",1955,[[]]],[11,"borrow","","",1955,[[]]],[11,"borrow_mut","","",1955,[[]]],[11,"try_from","","",1955,[[],["result",4]]],[11,"into","","",1955,[[]]],[11,"try_into","","",1955,[[],["result",4]]],[11,"type_id","","",1955,[[],["typeid",3]]],[11,"from","","",1956,[[]]],[11,"borrow","","",1956,[[]]],[11,"borrow_mut","","",1956,[[]]],[11,"try_from","","",1956,[[],["result",4]]],[11,"into","","",1956,[[]]],[11,"try_into","","",1956,[[],["result",4]]],[11,"type_id","","",1956,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::wave","",1962,[[]]],[11,"borrow","","",1962,[[]]],[11,"borrow_mut","","",1962,[[]]],[11,"try_from","","",1962,[[],["result",4]]],[11,"into","","",1962,[[]]],[11,"try_into","","",1962,[[],["result",4]]],[11,"type_id","","",1962,[[],["typeid",3]]],[11,"from","","",1964,[[]]],[11,"borrow","","",1964,[[]]],[11,"borrow_mut","","",1964,[[]]],[11,"try_from","","",1964,[[],["result",4]]],[11,"into","","",1964,[[]]],[11,"try_into","","",1964,[[],["result",4]]],[11,"type_id","","",1964,[[],["typeid",3]]],[11,"from","","",1965,[[]]],[11,"borrow","","",1965,[[]]],[11,"borrow_mut","","",1965,[[]]],[11,"try_from","","",1965,[[],["result",4]]],[11,"into","","",1965,[[]]],[11,"try_into","","",1965,[[],["result",4]]],[11,"type_id","","",1965,[[],["typeid",3]]],[11,"from","","",1966,[[]]],[11,"borrow","","",1966,[[]]],[11,"borrow_mut","","",1966,[[]]],[11,"try_from","","",1966,[[],["result",4]]],[11,"into","","",1966,[[]]],[11,"try_into","","",1966,[[],["result",4]]],[11,"type_id","","",1966,[[],["typeid",3]]],[11,"from","","",1967,[[]]],[11,"borrow","","",1967,[[]]],[11,"borrow_mut","","",1967,[[]]],[11,"try_from","","",1967,[[],["result",4]]],[11,"into","","",1967,[[]]],[11,"try_into","","",1967,[[],["result",4]]],[11,"type_id","","",1967,[[],["typeid",3]]],[11,"from","","",1968,[[]]],[11,"borrow","","",1968,[[]]],[11,"borrow_mut","","",1968,[[]]],[11,"try_from","","",1968,[[],["result",4]]],[11,"into","","",1968,[[]]],[11,"try_into","","",1968,[[],["result",4]]],[11,"type_id","","",1968,[[],["typeid",3]]],[11,"from","","",1969,[[]]],[11,"borrow","","",1969,[[]]],[11,"borrow_mut","","",1969,[[]]],[11,"try_from","","",1969,[[],["result",4]]],[11,"into","","",1969,[[]]],[11,"try_into","","",1969,[[],["result",4]]],[11,"type_id","","",1969,[[],["typeid",3]]],[11,"from","","",1970,[[]]],[11,"borrow","","",1970,[[]]],[11,"borrow_mut","","",1970,[[]]],[11,"try_from","","",1970,[[],["result",4]]],[11,"into","","",1970,[[]]],[11,"try_into","","",1970,[[],["result",4]]],[11,"type_id","","",1970,[[],["typeid",3]]],[11,"from","","",1971,[[]]],[11,"borrow","","",1971,[[]]],[11,"borrow_mut","","",1971,[[]]],[11,"try_from","","",1971,[[],["result",4]]],[11,"into","","",1971,[[]]],[11,"try_into","","",1971,[[],["result",4]]],[11,"type_id","","",1971,[[],["typeid",3]]],[11,"from","","",1972,[[]]],[11,"borrow","","",1972,[[]]],[11,"borrow_mut","","",1972,[[]]],[11,"try_from","","",1972,[[],["result",4]]],[11,"into","","",1972,[[]]],[11,"try_into","","",1972,[[],["result",4]]],[11,"type_id","","",1972,[[],["typeid",3]]],[11,"from","","",1973,[[]]],[11,"borrow","","",1973,[[]]],[11,"borrow_mut","","",1973,[[]]],[11,"try_from","","",1973,[[],["result",4]]],[11,"into","","",1973,[[]]],[11,"try_into","","",1973,[[],["result",4]]],[11,"type_id","","",1973,[[],["typeid",3]]],[11,"from","","",1974,[[]]],[11,"borrow","","",1974,[[]]],[11,"borrow_mut","","",1974,[[]]],[11,"try_from","","",1974,[[],["result",4]]],[11,"into","","",1974,[[]]],[11,"try_into","","",1974,[[],["result",4]]],[11,"type_id","","",1974,[[],["typeid",3]]],[11,"from","","",1975,[[]]],[11,"borrow","","",1975,[[]]],[11,"borrow_mut","","",1975,[[]]],[11,"try_from","","",1975,[[],["result",4]]],[11,"into","","",1975,[[]]],[11,"try_into","","",1975,[[],["result",4]]],[11,"type_id","","",1975,[[],["typeid",3]]],[11,"from","","",1976,[[]]],[11,"borrow","","",1976,[[]]],[11,"borrow_mut","","",1976,[[]]],[11,"try_from","","",1976,[[],["result",4]]],[11,"into","","",1976,[[]]],[11,"try_into","","",1976,[[],["result",4]]],[11,"type_id","","",1976,[[],["typeid",3]]],[11,"from","","",1977,[[]]],[11,"borrow","","",1977,[[]]],[11,"borrow_mut","","",1977,[[]]],[11,"try_from","","",1977,[[],["result",4]]],[11,"into","","",1977,[[]]],[11,"try_into","","",1977,[[],["result",4]]],[11,"type_id","","",1977,[[],["typeid",3]]],[11,"from","","",1959,[[]]],[11,"borrow","","",1959,[[]]],[11,"borrow_mut","","",1959,[[]]],[11,"try_from","","",1959,[[],["result",4]]],[11,"into","","",1959,[[]]],[11,"try_into","","",1959,[[],["result",4]]],[11,"type_id","","",1959,[[],["typeid",3]]],[11,"from","","",1960,[[]]],[11,"borrow","","",1960,[[]]],[11,"borrow_mut","","",1960,[[]]],[11,"try_from","","",1960,[[],["result",4]]],[11,"into","","",1960,[[]]],[11,"try_into","","",1960,[[],["result",4]]],[11,"type_id","","",1960,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::per","",1980,[[]]],[11,"borrow","","",1980,[[]]],[11,"borrow_mut","","",1980,[[]]],[11,"try_from","","",1980,[[],["result",4]]],[11,"into","","",1980,[[]]],[11,"try_into","","",1980,[[],["result",4]]],[11,"type_id","","",1980,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::per_dith4","",1983,[[]]],[11,"borrow","","",1983,[[]]],[11,"borrow_mut","","",1983,[[]]],[11,"try_from","","",1983,[[],["result",4]]],[11,"into","","",1983,[[]]],[11,"try_into","","",1983,[[],["result",4]]],[11,"type_id","","",1983,[[],["typeid",3]]],[11,"from","","",1984,[[]]],[11,"borrow","","",1984,[[]]],[11,"borrow_mut","","",1984,[[]]],[11,"try_from","","",1984,[[],["result",4]]],[11,"into","","",1984,[[]]],[11,"try_into","","",1984,[[],["result",4]]],[11,"type_id","","",1984,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::per_dith5","",1987,[[]]],[11,"borrow","","",1987,[[]]],[11,"borrow_mut","","",1987,[[]]],[11,"try_from","","",1987,[[],["result",4]]],[11,"into","","",1987,[[]]],[11,"try_into","","",1987,[[],["result",4]]],[11,"type_id","","",1987,[[],["typeid",3]]],[11,"from","","",1988,[[]]],[11,"borrow","","",1988,[[]]],[11,"borrow_mut","","",1988,[[]]],[11,"try_from","","",1988,[[],["result",4]]],[11,"into","","",1988,[[]]],[11,"try_into","","",1988,[[],["result",4]]],[11,"type_id","","",1988,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::per_dith6","",1991,[[]]],[11,"borrow","","",1991,[[]]],[11,"borrow_mut","","",1991,[[]]],[11,"try_from","","",1991,[[],["result",4]]],[11,"into","","",1991,[[]]],[11,"try_into","","",1991,[[],["result",4]]],[11,"type_id","","",1991,[[],["typeid",3]]],[11,"from","","",1992,[[]]],[11,"borrow","","",1992,[[]]],[11,"borrow_mut","","",1992,[[]]],[11,"try_from","","",1992,[[],["result",4]]],[11,"into","","",1992,[[]]],[11,"try_into","","",1992,[[],["result",4]]],[11,"type_id","","",1992,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::cc","",1995,[[]]],[11,"borrow","","",1995,[[]]],[11,"borrow_mut","","",1995,[[]]],[11,"try_from","","",1995,[[],["result",4]]],[11,"into","","",1995,[[]]],[11,"try_into","","",1995,[[],["result",4]]],[11,"type_id","","",1995,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::cc_dith4","",1998,[[]]],[11,"borrow","","",1998,[[]]],[11,"borrow_mut","","",1998,[[]]],[11,"try_from","","",1998,[[],["result",4]]],[11,"into","","",1998,[[]]],[11,"try_into","","",1998,[[],["result",4]]],[11,"type_id","","",1998,[[],["typeid",3]]],[11,"from","","",1999,[[]]],[11,"borrow","","",1999,[[]]],[11,"borrow_mut","","",1999,[[]]],[11,"try_from","","",1999,[[],["result",4]]],[11,"into","","",1999,[[]]],[11,"try_into","","",1999,[[],["result",4]]],[11,"type_id","","",1999,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::cc_dith5","",2002,[[]]],[11,"borrow","","",2002,[[]]],[11,"borrow_mut","","",2002,[[]]],[11,"try_from","","",2002,[[],["result",4]]],[11,"into","","",2002,[[]]],[11,"try_into","","",2002,[[],["result",4]]],[11,"type_id","","",2002,[[],["typeid",3]]],[11,"from","","",2003,[[]]],[11,"borrow","","",2003,[[]]],[11,"borrow_mut","","",2003,[[]]],[11,"try_from","","",2003,[[],["result",4]]],[11,"into","","",2003,[[]]],[11,"try_into","","",2003,[[],["result",4]]],[11,"type_id","","",2003,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::cc_dith6","",2006,[[]]],[11,"borrow","","",2006,[[]]],[11,"borrow_mut","","",2006,[[]]],[11,"try_from","","",2006,[[],["result",4]]],[11,"into","","",2006,[[]]],[11,"try_into","","",2006,[[],["result",4]]],[11,"type_id","","",2006,[[],["typeid",3]]],[11,"from","","",2007,[[]]],[11,"borrow","","",2007,[[]]],[11,"borrow_mut","","",2007,[[]]],[11,"try_from","","",2007,[[],["result",4]]],[11,"into","","",2007,[[]]],[11,"try_into","","",2007,[[],["result",4]]],[11,"type_id","","",2007,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::pattb","",2010,[[]]],[11,"borrow","","",2010,[[]]],[11,"borrow_mut","","",2010,[[]]],[11,"try_from","","",2010,[[],["result",4]]],[11,"into","","",2010,[[]]],[11,"try_into","","",2010,[[],["result",4]]],[11,"type_id","","",2010,[[],["typeid",3]]],[11,"from","","",2011,[[]]],[11,"borrow","","",2011,[[]]],[11,"borrow_mut","","",2011,[[]]],[11,"try_from","","",2011,[[],["result",4]]],[11,"into","","",2011,[[]]],[11,"try_into","","",2011,[[],["result",4]]],[11,"type_id","","",2011,[[],["typeid",3]]],[11,"from","","",2012,[[]]],[11,"borrow","","",2012,[[]]],[11,"borrow_mut","","",2012,[[]]],[11,"try_from","","",2012,[[],["result",4]]],[11,"into","","",2012,[[]]],[11,"try_into","","",2012,[[],["result",4]]],[11,"type_id","","",2012,[[],["typeid",3]]],[11,"from","","",2013,[[]]],[11,"borrow","","",2013,[[]]],[11,"borrow_mut","","",2013,[[]]],[11,"try_from","","",2013,[[],["result",4]]],[11,"into","","",2013,[[]]],[11,"try_into","","",2013,[[],["result",4]]],[11,"type_id","","",2013,[[],["typeid",3]]],[11,"from","","",2014,[[]]],[11,"borrow","","",2014,[[]]],[11,"borrow_mut","","",2014,[[]]],[11,"try_from","","",2014,[[],["result",4]]],[11,"into","","",2014,[[]]],[11,"try_into","","",2014,[[],["result",4]]],[11,"type_id","","",2014,[[],["typeid",3]]],[11,"from","","",2015,[[]]],[11,"borrow","","",2015,[[]]],[11,"borrow_mut","","",2015,[[]]],[11,"try_from","","",2015,[[],["result",4]]],[11,"into","","",2015,[[]]],[11,"try_into","","",2015,[[],["result",4]]],[11,"type_id","","",2015,[[],["typeid",3]]],[11,"from","","",2016,[[]]],[11,"borrow","","",2016,[[]]],[11,"borrow_mut","","",2016,[[]]],[11,"try_from","","",2016,[[],["result",4]]],[11,"into","","",2016,[[]]],[11,"try_into","","",2016,[[],["result",4]]],[11,"type_id","","",2016,[[],["typeid",3]]],[11,"from","","",2017,[[]]],[11,"borrow","","",2017,[[]]],[11,"borrow_mut","","",2017,[[]]],[11,"try_from","","",2017,[[],["result",4]]],[11,"into","","",2017,[[]]],[11,"try_into","","",2017,[[],["result",4]]],[11,"type_id","","",2017,[[],["typeid",3]]],[11,"from","","",2018,[[]]],[11,"borrow","","",2018,[[]]],[11,"borrow_mut","","",2018,[[]]],[11,"try_from","","",2018,[[],["result",4]]],[11,"into","","",2018,[[]]],[11,"try_into","","",2018,[[],["result",4]]],[11,"type_id","","",2018,[[],["typeid",3]]],[11,"from","","",2019,[[]]],[11,"borrow","","",2019,[[]]],[11,"borrow_mut","","",2019,[[]]],[11,"try_from","","",2019,[[],["result",4]]],[11,"into","","",2019,[[]]],[11,"try_into","","",2019,[[],["result",4]]],[11,"type_id","","",2019,[[],["typeid",3]]],[11,"from","","",2020,[[]]],[11,"borrow","","",2020,[[]]],[11,"borrow_mut","","",2020,[[]]],[11,"try_from","","",2020,[[],["result",4]]],[11,"into","","",2020,[[]]],[11,"try_into","","",2020,[[],["result",4]]],[11,"type_id","","",2020,[[],["typeid",3]]],[11,"from","","",2021,[[]]],[11,"borrow","","",2021,[[]]],[11,"borrow_mut","","",2021,[[]]],[11,"try_from","","",2021,[[],["result",4]]],[11,"into","","",2021,[[]]],[11,"try_into","","",2021,[[],["result",4]]],[11,"type_id","","",2021,[[],["typeid",3]]],[11,"from","","",2022,[[]]],[11,"borrow","","",2022,[[]]],[11,"borrow_mut","","",2022,[[]]],[11,"try_from","","",2022,[[],["result",4]]],[11,"into","","",2022,[[]]],[11,"try_into","","",2022,[[],["result",4]]],[11,"type_id","","",2022,[[],["typeid",3]]],[11,"from","","",2023,[[]]],[11,"borrow","","",2023,[[]]],[11,"borrow_mut","","",2023,[[]]],[11,"try_from","","",2023,[[],["result",4]]],[11,"into","","",2023,[[]]],[11,"try_into","","",2023,[[],["result",4]]],[11,"type_id","","",2023,[[],["typeid",3]]],[11,"from","","",2024,[[]]],[11,"borrow","","",2024,[[]]],[11,"borrow_mut","","",2024,[[]]],[11,"try_from","","",2024,[[],["result",4]]],[11,"into","","",2024,[[]]],[11,"try_into","","",2024,[[],["result",4]]],[11,"type_id","","",2024,[[],["typeid",3]]],[11,"from","","",2025,[[]]],[11,"borrow","","",2025,[[]]],[11,"borrow_mut","","",2025,[[]]],[11,"try_from","","",2025,[[],["result",4]]],[11,"into","","",2025,[[]]],[11,"try_into","","",2025,[[],["result",4]]],[11,"type_id","","",2025,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::waveb","",2031,[[]]],[11,"borrow","","",2031,[[]]],[11,"borrow_mut","","",2031,[[]]],[11,"try_from","","",2031,[[],["result",4]]],[11,"into","","",2031,[[]]],[11,"try_into","","",2031,[[],["result",4]]],[11,"type_id","","",2031,[[],["typeid",3]]],[11,"from","","",2033,[[]]],[11,"borrow","","",2033,[[]]],[11,"borrow_mut","","",2033,[[]]],[11,"try_from","","",2033,[[],["result",4]]],[11,"into","","",2033,[[]]],[11,"try_into","","",2033,[[],["result",4]]],[11,"type_id","","",2033,[[],["typeid",3]]],[11,"from","","",2034,[[]]],[11,"borrow","","",2034,[[]]],[11,"borrow_mut","","",2034,[[]]],[11,"try_from","","",2034,[[],["result",4]]],[11,"into","","",2034,[[]]],[11,"try_into","","",2034,[[],["result",4]]],[11,"type_id","","",2034,[[],["typeid",3]]],[11,"from","","",2035,[[]]],[11,"borrow","","",2035,[[]]],[11,"borrow_mut","","",2035,[[]]],[11,"try_from","","",2035,[[],["result",4]]],[11,"into","","",2035,[[]]],[11,"try_into","","",2035,[[],["result",4]]],[11,"type_id","","",2035,[[],["typeid",3]]],[11,"from","","",2036,[[]]],[11,"borrow","","",2036,[[]]],[11,"borrow_mut","","",2036,[[]]],[11,"try_from","","",2036,[[],["result",4]]],[11,"into","","",2036,[[]]],[11,"try_into","","",2036,[[],["result",4]]],[11,"type_id","","",2036,[[],["typeid",3]]],[11,"from","","",2037,[[]]],[11,"borrow","","",2037,[[]]],[11,"borrow_mut","","",2037,[[]]],[11,"try_from","","",2037,[[],["result",4]]],[11,"into","","",2037,[[]]],[11,"try_into","","",2037,[[],["result",4]]],[11,"type_id","","",2037,[[],["typeid",3]]],[11,"from","","",2038,[[]]],[11,"borrow","","",2038,[[]]],[11,"borrow_mut","","",2038,[[]]],[11,"try_from","","",2038,[[],["result",4]]],[11,"into","","",2038,[[]]],[11,"try_into","","",2038,[[],["result",4]]],[11,"type_id","","",2038,[[],["typeid",3]]],[11,"from","","",2039,[[]]],[11,"borrow","","",2039,[[]]],[11,"borrow_mut","","",2039,[[]]],[11,"try_from","","",2039,[[],["result",4]]],[11,"into","","",2039,[[]]],[11,"try_into","","",2039,[[],["result",4]]],[11,"type_id","","",2039,[[],["typeid",3]]],[11,"from","","",2040,[[]]],[11,"borrow","","",2040,[[]]],[11,"borrow_mut","","",2040,[[]]],[11,"try_from","","",2040,[[],["result",4]]],[11,"into","","",2040,[[]]],[11,"try_into","","",2040,[[],["result",4]]],[11,"type_id","","",2040,[[],["typeid",3]]],[11,"from","","",2041,[[]]],[11,"borrow","","",2041,[[]]],[11,"borrow_mut","","",2041,[[]]],[11,"try_from","","",2041,[[],["result",4]]],[11,"into","","",2041,[[]]],[11,"try_into","","",2041,[[],["result",4]]],[11,"type_id","","",2041,[[],["typeid",3]]],[11,"from","","",2042,[[]]],[11,"borrow","","",2042,[[]]],[11,"borrow_mut","","",2042,[[]]],[11,"try_from","","",2042,[[],["result",4]]],[11,"into","","",2042,[[]]],[11,"try_into","","",2042,[[],["result",4]]],[11,"type_id","","",2042,[[],["typeid",3]]],[11,"from","","",2043,[[]]],[11,"borrow","","",2043,[[]]],[11,"borrow_mut","","",2043,[[]]],[11,"try_from","","",2043,[[],["result",4]]],[11,"into","","",2043,[[]]],[11,"try_into","","",2043,[[],["result",4]]],[11,"type_id","","",2043,[[],["typeid",3]]],[11,"from","","",2044,[[]]],[11,"borrow","","",2044,[[]]],[11,"borrow_mut","","",2044,[[]]],[11,"try_from","","",2044,[[],["result",4]]],[11,"into","","",2044,[[]]],[11,"try_into","","",2044,[[],["result",4]]],[11,"type_id","","",2044,[[],["typeid",3]]],[11,"from","","",2045,[[]]],[11,"borrow","","",2045,[[]]],[11,"borrow_mut","","",2045,[[]]],[11,"try_from","","",2045,[[],["result",4]]],[11,"into","","",2045,[[]]],[11,"try_into","","",2045,[[],["result",4]]],[11,"type_id","","",2045,[[],["typeid",3]]],[11,"from","","",2046,[[]]],[11,"borrow","","",2046,[[]]],[11,"borrow_mut","","",2046,[[]]],[11,"try_from","","",2046,[[],["result",4]]],[11,"into","","",2046,[[]]],[11,"try_into","","",2046,[[],["result",4]]],[11,"type_id","","",2046,[[],["typeid",3]]],[11,"from","","",2028,[[]]],[11,"borrow","","",2028,[[]]],[11,"borrow_mut","","",2028,[[]]],[11,"try_from","","",2028,[[],["result",4]]],[11,"into","","",2028,[[]]],[11,"try_into","","",2028,[[],["result",4]]],[11,"type_id","","",2028,[[],["typeid",3]]],[11,"from","","",2029,[[]]],[11,"borrow","","",2029,[[]]],[11,"borrow_mut","","",2029,[[]]],[11,"try_from","","",2029,[[],["result",4]]],[11,"into","","",2029,[[]]],[11,"try_into","","",2029,[[],["result",4]]],[11,"type_id","","",2029,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::perb","",2049,[[]]],[11,"borrow","","",2049,[[]]],[11,"borrow_mut","","",2049,[[]]],[11,"try_from","","",2049,[[],["result",4]]],[11,"into","","",2049,[[]]],[11,"try_into","","",2049,[[],["result",4]]],[11,"type_id","","",2049,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::perb_dith4","",2052,[[]]],[11,"borrow","","",2052,[[]]],[11,"borrow_mut","","",2052,[[]]],[11,"try_from","","",2052,[[],["result",4]]],[11,"into","","",2052,[[]]],[11,"try_into","","",2052,[[],["result",4]]],[11,"type_id","","",2052,[[],["typeid",3]]],[11,"from","","",2053,[[]]],[11,"borrow","","",2053,[[]]],[11,"borrow_mut","","",2053,[[]]],[11,"try_from","","",2053,[[],["result",4]]],[11,"into","","",2053,[[]]],[11,"try_into","","",2053,[[],["result",4]]],[11,"type_id","","",2053,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::perb_dith5","",2056,[[]]],[11,"borrow","","",2056,[[]]],[11,"borrow_mut","","",2056,[[]]],[11,"try_from","","",2056,[[],["result",4]]],[11,"into","","",2056,[[]]],[11,"try_into","","",2056,[[],["result",4]]],[11,"type_id","","",2056,[[],["typeid",3]]],[11,"from","","",2057,[[]]],[11,"borrow","","",2057,[[]]],[11,"borrow_mut","","",2057,[[]]],[11,"try_from","","",2057,[[],["result",4]]],[11,"into","","",2057,[[]]],[11,"try_into","","",2057,[[],["result",4]]],[11,"type_id","","",2057,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::perb_dith6","",2060,[[]]],[11,"borrow","","",2060,[[]]],[11,"borrow_mut","","",2060,[[]]],[11,"try_from","","",2060,[[],["result",4]]],[11,"into","","",2060,[[]]],[11,"try_into","","",2060,[[],["result",4]]],[11,"type_id","","",2060,[[],["typeid",3]]],[11,"from","","",2061,[[]]],[11,"borrow","","",2061,[[]]],[11,"borrow_mut","","",2061,[[]]],[11,"try_from","","",2061,[[],["result",4]]],[11,"into","","",2061,[[]]],[11,"try_into","","",2061,[[],["result",4]]],[11,"type_id","","",2061,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ccb","",2064,[[]]],[11,"borrow","","",2064,[[]]],[11,"borrow_mut","","",2064,[[]]],[11,"try_from","","",2064,[[],["result",4]]],[11,"into","","",2064,[[]]],[11,"try_into","","",2064,[[],["result",4]]],[11,"type_id","","",2064,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ccb_dith4","",2067,[[]]],[11,"borrow","","",2067,[[]]],[11,"borrow_mut","","",2067,[[]]],[11,"try_from","","",2067,[[],["result",4]]],[11,"into","","",2067,[[]]],[11,"try_into","","",2067,[[],["result",4]]],[11,"type_id","","",2067,[[],["typeid",3]]],[11,"from","","",2068,[[]]],[11,"borrow","","",2068,[[]]],[11,"borrow_mut","","",2068,[[]]],[11,"try_from","","",2068,[[],["result",4]]],[11,"into","","",2068,[[]]],[11,"try_into","","",2068,[[],["result",4]]],[11,"type_id","","",2068,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ccb_dith5","",2071,[[]]],[11,"borrow","","",2071,[[]]],[11,"borrow_mut","","",2071,[[]]],[11,"try_from","","",2071,[[],["result",4]]],[11,"into","","",2071,[[]]],[11,"try_into","","",2071,[[],["result",4]]],[11,"type_id","","",2071,[[],["typeid",3]]],[11,"from","","",2072,[[]]],[11,"borrow","","",2072,[[]]],[11,"borrow_mut","","",2072,[[]]],[11,"try_from","","",2072,[[],["result",4]]],[11,"into","","",2072,[[]]],[11,"try_into","","",2072,[[],["result",4]]],[11,"type_id","","",2072,[[],["typeid",3]]],[11,"from","atsamd11c::tcc0::ccb_dith6","",2075,[[]]],[11,"borrow","","",2075,[[]]],[11,"borrow_mut","","",2075,[[]]],[11,"try_from","","",2075,[[],["result",4]]],[11,"into","","",2075,[[]]],[11,"try_into","","",2075,[[],["result",4]]],[11,"type_id","","",2075,[[],["typeid",3]]],[11,"from","","",2076,[[]]],[11,"borrow","","",2076,[[]]],[11,"borrow_mut","","",2076,[[]]],[11,"try_from","","",2076,[[],["result",4]]],[11,"into","","",2076,[[]]],[11,"try_into","","",2076,[[],["result",4]]],[11,"type_id","","",2076,[[],["typeid",3]]],[11,"from","atsamd11c::usb","",2079,[[]]],[11,"borrow","","",2079,[[]]],[11,"borrow_mut","","",2079,[[]]],[11,"try_from","","",2079,[[],["result",4]]],[11,"into","","",2079,[[]]],[11,"try_into","","",2079,[[],["result",4]]],[11,"type_id","","",2079,[[],["typeid",3]]],[11,"from","","",2080,[[]]],[11,"borrow","","",2080,[[]]],[11,"borrow_mut","","",2080,[[]]],[11,"try_from","","",2080,[[],["result",4]]],[11,"into","","",2080,[[]]],[11,"try_into","","",2080,[[],["result",4]]],[11,"type_id","","",2080,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::ctrla","",2082,[[]]],[11,"borrow","","",2082,[[]]],[11,"borrow_mut","","",2082,[[]]],[11,"try_from","","",2082,[[],["result",4]]],[11,"into","","",2082,[[]]],[11,"try_into","","",2082,[[],["result",4]]],[11,"type_id","","",2082,[[],["typeid",3]]],[11,"from","","",2083,[[]]],[11,"borrow","","",2083,[[]]],[11,"borrow_mut","","",2083,[[]]],[11,"try_from","","",2083,[[],["result",4]]],[11,"into","","",2083,[[]]],[11,"try_into","","",2083,[[],["result",4]]],[11,"type_id","","",2083,[[],["typeid",3]]],[11,"from","","",2084,[[]]],[11,"borrow","","",2084,[[]]],[11,"borrow_mut","","",2084,[[]]],[11,"try_from","","",2084,[[],["result",4]]],[11,"into","","",2084,[[]]],[11,"try_into","","",2084,[[],["result",4]]],[11,"type_id","","",2084,[[],["typeid",3]]],[11,"from","","",2086,[[]]],[11,"borrow","","",2086,[[]]],[11,"borrow_mut","","",2086,[[]]],[11,"try_from","","",2086,[[],["result",4]]],[11,"into","","",2086,[[]]],[11,"try_into","","",2086,[[],["result",4]]],[11,"type_id","","",2086,[[],["typeid",3]]],[11,"from","","",2081,[[]]],[11,"borrow","","",2081,[[]]],[11,"borrow_mut","","",2081,[[]]],[11,"try_from","","",2081,[[],["result",4]]],[11,"into","","",2081,[[]]],[11,"try_into","","",2081,[[],["result",4]]],[11,"type_id","","",2081,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::qosctrl","",2090,[[]]],[11,"borrow","","",2090,[[]]],[11,"borrow_mut","","",2090,[[]]],[11,"try_from","","",2090,[[],["result",4]]],[11,"into","","",2090,[[]]],[11,"try_into","","",2090,[[],["result",4]]],[11,"type_id","","",2090,[[],["typeid",3]]],[11,"from","","",2091,[[]]],[11,"borrow","","",2091,[[]]],[11,"borrow_mut","","",2091,[[]]],[11,"try_from","","",2091,[[],["result",4]]],[11,"into","","",2091,[[]]],[11,"try_into","","",2091,[[],["result",4]]],[11,"type_id","","",2091,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::ctrlb","",2096,[[]]],[11,"borrow","","",2096,[[]]],[11,"borrow_mut","","",2096,[[]]],[11,"try_from","","",2096,[[],["result",4]]],[11,"into","","",2096,[[]]],[11,"try_into","","",2096,[[],["result",4]]],[11,"type_id","","",2096,[[],["typeid",3]]],[11,"from","","",2097,[[]]],[11,"borrow","","",2097,[[]]],[11,"borrow_mut","","",2097,[[]]],[11,"try_from","","",2097,[[],["result",4]]],[11,"into","","",2097,[[]]],[11,"try_into","","",2097,[[],["result",4]]],[11,"type_id","","",2097,[[],["typeid",3]]],[11,"from","","",2099,[[]]],[11,"borrow","","",2099,[[]]],[11,"borrow_mut","","",2099,[[]]],[11,"try_from","","",2099,[[],["result",4]]],[11,"into","","",2099,[[]]],[11,"try_into","","",2099,[[],["result",4]]],[11,"type_id","","",2099,[[],["typeid",3]]],[11,"from","","",2100,[[]]],[11,"borrow","","",2100,[[]]],[11,"borrow_mut","","",2100,[[]]],[11,"try_from","","",2100,[[],["result",4]]],[11,"into","","",2100,[[]]],[11,"try_into","","",2100,[[],["result",4]]],[11,"type_id","","",2100,[[],["typeid",3]]],[11,"from","","",2101,[[]]],[11,"borrow","","",2101,[[]]],[11,"borrow_mut","","",2101,[[]]],[11,"try_from","","",2101,[[],["result",4]]],[11,"into","","",2101,[[]]],[11,"try_into","","",2101,[[],["result",4]]],[11,"type_id","","",2101,[[],["typeid",3]]],[11,"from","","",2102,[[]]],[11,"borrow","","",2102,[[]]],[11,"borrow_mut","","",2102,[[]]],[11,"try_from","","",2102,[[],["result",4]]],[11,"into","","",2102,[[]]],[11,"try_into","","",2102,[[],["result",4]]],[11,"type_id","","",2102,[[],["typeid",3]]],[11,"from","","",2103,[[]]],[11,"borrow","","",2103,[[]]],[11,"borrow_mut","","",2103,[[]]],[11,"try_from","","",2103,[[],["result",4]]],[11,"into","","",2103,[[]]],[11,"try_into","","",2103,[[],["result",4]]],[11,"type_id","","",2103,[[],["typeid",3]]],[11,"from","","",2104,[[]]],[11,"borrow","","",2104,[[]]],[11,"borrow_mut","","",2104,[[]]],[11,"try_from","","",2104,[[],["result",4]]],[11,"into","","",2104,[[]]],[11,"try_into","","",2104,[[],["result",4]]],[11,"type_id","","",2104,[[],["typeid",3]]],[11,"from","","",2105,[[]]],[11,"borrow","","",2105,[[]]],[11,"borrow_mut","","",2105,[[]]],[11,"try_from","","",2105,[[],["result",4]]],[11,"into","","",2105,[[]]],[11,"try_into","","",2105,[[],["result",4]]],[11,"type_id","","",2105,[[],["typeid",3]]],[11,"from","","",2107,[[]]],[11,"borrow","","",2107,[[]]],[11,"borrow_mut","","",2107,[[]]],[11,"try_from","","",2107,[[],["result",4]]],[11,"into","","",2107,[[]]],[11,"try_into","","",2107,[[],["result",4]]],[11,"type_id","","",2107,[[],["typeid",3]]],[11,"from","","",2094,[[]]],[11,"borrow","","",2094,[[]]],[11,"borrow_mut","","",2094,[[]]],[11,"try_from","","",2094,[[],["result",4]]],[11,"into","","",2094,[[]]],[11,"try_into","","",2094,[[],["result",4]]],[11,"type_id","","",2094,[[],["typeid",3]]],[11,"from","","",2095,[[]]],[11,"borrow","","",2095,[[]]],[11,"borrow_mut","","",2095,[[]]],[11,"try_from","","",2095,[[],["result",4]]],[11,"into","","",2095,[[]]],[11,"try_into","","",2095,[[],["result",4]]],[11,"type_id","","",2095,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::dadd","",2110,[[]]],[11,"borrow","","",2110,[[]]],[11,"borrow_mut","","",2110,[[]]],[11,"try_from","","",2110,[[],["result",4]]],[11,"into","","",2110,[[]]],[11,"try_into","","",2110,[[],["result",4]]],[11,"type_id","","",2110,[[],["typeid",3]]],[11,"from","","",2111,[[]]],[11,"borrow","","",2111,[[]]],[11,"borrow_mut","","",2111,[[]]],[11,"try_from","","",2111,[[],["result",4]]],[11,"into","","",2111,[[]]],[11,"try_into","","",2111,[[],["result",4]]],[11,"type_id","","",2111,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::status","",2114,[[]]],[11,"borrow","","",2114,[[]]],[11,"borrow_mut","","",2114,[[]]],[11,"try_from","","",2114,[[],["result",4]]],[11,"into","","",2114,[[]]],[11,"try_into","","",2114,[[],["result",4]]],[11,"type_id","","",2114,[[],["typeid",3]]],[11,"from","","",2115,[[]]],[11,"borrow","","",2115,[[]]],[11,"borrow_mut","","",2115,[[]]],[11,"try_from","","",2115,[[],["result",4]]],[11,"into","","",2115,[[]]],[11,"try_into","","",2115,[[],["result",4]]],[11,"type_id","","",2115,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::fsmstatus","",2119,[[]]],[11,"borrow","","",2119,[[]]],[11,"borrow_mut","","",2119,[[]]],[11,"try_from","","",2119,[[],["result",4]]],[11,"into","","",2119,[[]]],[11,"try_into","","",2119,[[],["result",4]]],[11,"type_id","","",2119,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::intenclr","",2123,[[]]],[11,"borrow","","",2123,[[]]],[11,"borrow_mut","","",2123,[[]]],[11,"try_from","","",2123,[[],["result",4]]],[11,"into","","",2123,[[]]],[11,"try_into","","",2123,[[],["result",4]]],[11,"type_id","","",2123,[[],["typeid",3]]],[11,"from","","",2124,[[]]],[11,"borrow","","",2124,[[]]],[11,"borrow_mut","","",2124,[[]]],[11,"try_from","","",2124,[[],["result",4]]],[11,"into","","",2124,[[]]],[11,"try_into","","",2124,[[],["result",4]]],[11,"type_id","","",2124,[[],["typeid",3]]],[11,"from","","",2125,[[]]],[11,"borrow","","",2125,[[]]],[11,"borrow_mut","","",2125,[[]]],[11,"try_from","","",2125,[[],["result",4]]],[11,"into","","",2125,[[]]],[11,"try_into","","",2125,[[],["result",4]]],[11,"type_id","","",2125,[[],["typeid",3]]],[11,"from","","",2126,[[]]],[11,"borrow","","",2126,[[]]],[11,"borrow_mut","","",2126,[[]]],[11,"try_from","","",2126,[[],["result",4]]],[11,"into","","",2126,[[]]],[11,"try_into","","",2126,[[],["result",4]]],[11,"type_id","","",2126,[[],["typeid",3]]],[11,"from","","",2127,[[]]],[11,"borrow","","",2127,[[]]],[11,"borrow_mut","","",2127,[[]]],[11,"try_from","","",2127,[[],["result",4]]],[11,"into","","",2127,[[]]],[11,"try_into","","",2127,[[],["result",4]]],[11,"type_id","","",2127,[[],["typeid",3]]],[11,"from","","",2128,[[]]],[11,"borrow","","",2128,[[]]],[11,"borrow_mut","","",2128,[[]]],[11,"try_from","","",2128,[[],["result",4]]],[11,"into","","",2128,[[]]],[11,"try_into","","",2128,[[],["result",4]]],[11,"type_id","","",2128,[[],["typeid",3]]],[11,"from","","",2129,[[]]],[11,"borrow","","",2129,[[]]],[11,"borrow_mut","","",2129,[[]]],[11,"try_from","","",2129,[[],["result",4]]],[11,"into","","",2129,[[]]],[11,"try_into","","",2129,[[],["result",4]]],[11,"type_id","","",2129,[[],["typeid",3]]],[11,"from","","",2130,[[]]],[11,"borrow","","",2130,[[]]],[11,"borrow_mut","","",2130,[[]]],[11,"try_from","","",2130,[[],["result",4]]],[11,"into","","",2130,[[]]],[11,"try_into","","",2130,[[],["result",4]]],[11,"type_id","","",2130,[[],["typeid",3]]],[11,"from","","",2131,[[]]],[11,"borrow","","",2131,[[]]],[11,"borrow_mut","","",2131,[[]]],[11,"try_from","","",2131,[[],["result",4]]],[11,"into","","",2131,[[]]],[11,"try_into","","",2131,[[],["result",4]]],[11,"type_id","","",2131,[[],["typeid",3]]],[11,"from","","",2132,[[]]],[11,"borrow","","",2132,[[]]],[11,"borrow_mut","","",2132,[[]]],[11,"try_from","","",2132,[[],["result",4]]],[11,"into","","",2132,[[]]],[11,"try_into","","",2132,[[],["result",4]]],[11,"type_id","","",2132,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::intenset","",2135,[[]]],[11,"borrow","","",2135,[[]]],[11,"borrow_mut","","",2135,[[]]],[11,"try_from","","",2135,[[],["result",4]]],[11,"into","","",2135,[[]]],[11,"try_into","","",2135,[[],["result",4]]],[11,"type_id","","",2135,[[],["typeid",3]]],[11,"from","","",2136,[[]]],[11,"borrow","","",2136,[[]]],[11,"borrow_mut","","",2136,[[]]],[11,"try_from","","",2136,[[],["result",4]]],[11,"into","","",2136,[[]]],[11,"try_into","","",2136,[[],["result",4]]],[11,"type_id","","",2136,[[],["typeid",3]]],[11,"from","","",2137,[[]]],[11,"borrow","","",2137,[[]]],[11,"borrow_mut","","",2137,[[]]],[11,"try_from","","",2137,[[],["result",4]]],[11,"into","","",2137,[[]]],[11,"try_into","","",2137,[[],["result",4]]],[11,"type_id","","",2137,[[],["typeid",3]]],[11,"from","","",2138,[[]]],[11,"borrow","","",2138,[[]]],[11,"borrow_mut","","",2138,[[]]],[11,"try_from","","",2138,[[],["result",4]]],[11,"into","","",2138,[[]]],[11,"try_into","","",2138,[[],["result",4]]],[11,"type_id","","",2138,[[],["typeid",3]]],[11,"from","","",2139,[[]]],[11,"borrow","","",2139,[[]]],[11,"borrow_mut","","",2139,[[]]],[11,"try_from","","",2139,[[],["result",4]]],[11,"into","","",2139,[[]]],[11,"try_into","","",2139,[[],["result",4]]],[11,"type_id","","",2139,[[],["typeid",3]]],[11,"from","","",2140,[[]]],[11,"borrow","","",2140,[[]]],[11,"borrow_mut","","",2140,[[]]],[11,"try_from","","",2140,[[],["result",4]]],[11,"into","","",2140,[[]]],[11,"try_into","","",2140,[[],["result",4]]],[11,"type_id","","",2140,[[],["typeid",3]]],[11,"from","","",2141,[[]]],[11,"borrow","","",2141,[[]]],[11,"borrow_mut","","",2141,[[]]],[11,"try_from","","",2141,[[],["result",4]]],[11,"into","","",2141,[[]]],[11,"try_into","","",2141,[[],["result",4]]],[11,"type_id","","",2141,[[],["typeid",3]]],[11,"from","","",2142,[[]]],[11,"borrow","","",2142,[[]]],[11,"borrow_mut","","",2142,[[]]],[11,"try_from","","",2142,[[],["result",4]]],[11,"into","","",2142,[[]]],[11,"try_into","","",2142,[[],["result",4]]],[11,"type_id","","",2142,[[],["typeid",3]]],[11,"from","","",2143,[[]]],[11,"borrow","","",2143,[[]]],[11,"borrow_mut","","",2143,[[]]],[11,"try_from","","",2143,[[],["result",4]]],[11,"into","","",2143,[[]]],[11,"try_into","","",2143,[[],["result",4]]],[11,"type_id","","",2143,[[],["typeid",3]]],[11,"from","","",2144,[[]]],[11,"borrow","","",2144,[[]]],[11,"borrow_mut","","",2144,[[]]],[11,"try_from","","",2144,[[],["result",4]]],[11,"into","","",2144,[[]]],[11,"try_into","","",2144,[[],["result",4]]],[11,"type_id","","",2144,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::intflag","",2147,[[]]],[11,"borrow","","",2147,[[]]],[11,"borrow_mut","","",2147,[[]]],[11,"try_from","","",2147,[[],["result",4]]],[11,"into","","",2147,[[]]],[11,"try_into","","",2147,[[],["result",4]]],[11,"type_id","","",2147,[[],["typeid",3]]],[11,"from","","",2148,[[]]],[11,"borrow","","",2148,[[]]],[11,"borrow_mut","","",2148,[[]]],[11,"try_from","","",2148,[[],["result",4]]],[11,"into","","",2148,[[]]],[11,"try_into","","",2148,[[],["result",4]]],[11,"type_id","","",2148,[[],["typeid",3]]],[11,"from","","",2149,[[]]],[11,"borrow","","",2149,[[]]],[11,"borrow_mut","","",2149,[[]]],[11,"try_from","","",2149,[[],["result",4]]],[11,"into","","",2149,[[]]],[11,"try_into","","",2149,[[],["result",4]]],[11,"type_id","","",2149,[[],["typeid",3]]],[11,"from","","",2150,[[]]],[11,"borrow","","",2150,[[]]],[11,"borrow_mut","","",2150,[[]]],[11,"try_from","","",2150,[[],["result",4]]],[11,"into","","",2150,[[]]],[11,"try_into","","",2150,[[],["result",4]]],[11,"type_id","","",2150,[[],["typeid",3]]],[11,"from","","",2151,[[]]],[11,"borrow","","",2151,[[]]],[11,"borrow_mut","","",2151,[[]]],[11,"try_from","","",2151,[[],["result",4]]],[11,"into","","",2151,[[]]],[11,"try_into","","",2151,[[],["result",4]]],[11,"type_id","","",2151,[[],["typeid",3]]],[11,"from","","",2152,[[]]],[11,"borrow","","",2152,[[]]],[11,"borrow_mut","","",2152,[[]]],[11,"try_from","","",2152,[[],["result",4]]],[11,"into","","",2152,[[]]],[11,"try_into","","",2152,[[],["result",4]]],[11,"type_id","","",2152,[[],["typeid",3]]],[11,"from","","",2153,[[]]],[11,"borrow","","",2153,[[]]],[11,"borrow_mut","","",2153,[[]]],[11,"try_from","","",2153,[[],["result",4]]],[11,"into","","",2153,[[]]],[11,"try_into","","",2153,[[],["result",4]]],[11,"type_id","","",2153,[[],["typeid",3]]],[11,"from","","",2154,[[]]],[11,"borrow","","",2154,[[]]],[11,"borrow_mut","","",2154,[[]]],[11,"try_from","","",2154,[[],["result",4]]],[11,"into","","",2154,[[]]],[11,"try_into","","",2154,[[],["result",4]]],[11,"type_id","","",2154,[[],["typeid",3]]],[11,"from","","",2155,[[]]],[11,"borrow","","",2155,[[]]],[11,"borrow_mut","","",2155,[[]]],[11,"try_from","","",2155,[[],["result",4]]],[11,"into","","",2155,[[]]],[11,"try_into","","",2155,[[],["result",4]]],[11,"type_id","","",2155,[[],["typeid",3]]],[11,"from","","",2156,[[]]],[11,"borrow","","",2156,[[]]],[11,"borrow_mut","","",2156,[[]]],[11,"try_from","","",2156,[[],["result",4]]],[11,"into","","",2156,[[]]],[11,"try_into","","",2156,[[],["result",4]]],[11,"type_id","","",2156,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::descadd","",2160,[[]]],[11,"borrow","","",2160,[[]]],[11,"borrow_mut","","",2160,[[]]],[11,"try_from","","",2160,[[],["result",4]]],[11,"into","","",2160,[[]]],[11,"try_into","","",2160,[[],["result",4]]],[11,"type_id","","",2160,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::padcal","",2163,[[]]],[11,"borrow","","",2163,[[]]],[11,"borrow_mut","","",2163,[[]]],[11,"try_from","","",2163,[[],["result",4]]],[11,"into","","",2163,[[]]],[11,"try_into","","",2163,[[],["result",4]]],[11,"type_id","","",2163,[[],["typeid",3]]],[11,"from","","",2164,[[]]],[11,"borrow","","",2164,[[]]],[11,"borrow_mut","","",2164,[[]]],[11,"try_from","","",2164,[[],["result",4]]],[11,"into","","",2164,[[]]],[11,"try_into","","",2164,[[],["result",4]]],[11,"type_id","","",2164,[[],["typeid",3]]],[11,"from","","",2165,[[]]],[11,"borrow","","",2165,[[]]],[11,"borrow_mut","","",2165,[[]]],[11,"try_from","","",2165,[[],["result",4]]],[11,"into","","",2165,[[]]],[11,"try_into","","",2165,[[],["result",4]]],[11,"type_id","","",2165,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::epcfg","",2168,[[]]],[11,"borrow","","",2168,[[]]],[11,"borrow_mut","","",2168,[[]]],[11,"try_from","","",2168,[[],["result",4]]],[11,"into","","",2168,[[]]],[11,"try_into","","",2168,[[],["result",4]]],[11,"type_id","","",2168,[[],["typeid",3]]],[11,"from","","",2169,[[]]],[11,"borrow","","",2169,[[]]],[11,"borrow_mut","","",2169,[[]]],[11,"try_from","","",2169,[[],["result",4]]],[11,"into","","",2169,[[]]],[11,"try_into","","",2169,[[],["result",4]]],[11,"type_id","","",2169,[[],["typeid",3]]],[11,"from","","",2170,[[]]],[11,"borrow","","",2170,[[]]],[11,"borrow_mut","","",2170,[[]]],[11,"try_from","","",2170,[[],["result",4]]],[11,"into","","",2170,[[]]],[11,"try_into","","",2170,[[],["result",4]]],[11,"type_id","","",2170,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::epstatusclr","",2173,[[]]],[11,"borrow","","",2173,[[]]],[11,"borrow_mut","","",2173,[[]]],[11,"try_from","","",2173,[[],["result",4]]],[11,"into","","",2173,[[]]],[11,"try_into","","",2173,[[],["result",4]]],[11,"type_id","","",2173,[[],["typeid",3]]],[11,"from","","",2174,[[]]],[11,"borrow","","",2174,[[]]],[11,"borrow_mut","","",2174,[[]]],[11,"try_from","","",2174,[[],["result",4]]],[11,"into","","",2174,[[]]],[11,"try_into","","",2174,[[],["result",4]]],[11,"type_id","","",2174,[[],["typeid",3]]],[11,"from","","",2175,[[]]],[11,"borrow","","",2175,[[]]],[11,"borrow_mut","","",2175,[[]]],[11,"try_from","","",2175,[[],["result",4]]],[11,"into","","",2175,[[]]],[11,"try_into","","",2175,[[],["result",4]]],[11,"type_id","","",2175,[[],["typeid",3]]],[11,"from","","",2176,[[]]],[11,"borrow","","",2176,[[]]],[11,"borrow_mut","","",2176,[[]]],[11,"try_from","","",2176,[[],["result",4]]],[11,"into","","",2176,[[]]],[11,"try_into","","",2176,[[],["result",4]]],[11,"type_id","","",2176,[[],["typeid",3]]],[11,"from","","",2177,[[]]],[11,"borrow","","",2177,[[]]],[11,"borrow_mut","","",2177,[[]]],[11,"try_from","","",2177,[[],["result",4]]],[11,"into","","",2177,[[]]],[11,"try_into","","",2177,[[],["result",4]]],[11,"type_id","","",2177,[[],["typeid",3]]],[11,"from","","",2178,[[]]],[11,"borrow","","",2178,[[]]],[11,"borrow_mut","","",2178,[[]]],[11,"try_from","","",2178,[[],["result",4]]],[11,"into","","",2178,[[]]],[11,"try_into","","",2178,[[],["result",4]]],[11,"type_id","","",2178,[[],["typeid",3]]],[11,"from","","",2179,[[]]],[11,"borrow","","",2179,[[]]],[11,"borrow_mut","","",2179,[[]]],[11,"try_from","","",2179,[[],["result",4]]],[11,"into","","",2179,[[]]],[11,"try_into","","",2179,[[],["result",4]]],[11,"type_id","","",2179,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::epstatusset","",2181,[[]]],[11,"borrow","","",2181,[[]]],[11,"borrow_mut","","",2181,[[]]],[11,"try_from","","",2181,[[],["result",4]]],[11,"into","","",2181,[[]]],[11,"try_into","","",2181,[[],["result",4]]],[11,"type_id","","",2181,[[],["typeid",3]]],[11,"from","","",2182,[[]]],[11,"borrow","","",2182,[[]]],[11,"borrow_mut","","",2182,[[]]],[11,"try_from","","",2182,[[],["result",4]]],[11,"into","","",2182,[[]]],[11,"try_into","","",2182,[[],["result",4]]],[11,"type_id","","",2182,[[],["typeid",3]]],[11,"from","","",2183,[[]]],[11,"borrow","","",2183,[[]]],[11,"borrow_mut","","",2183,[[]]],[11,"try_from","","",2183,[[],["result",4]]],[11,"into","","",2183,[[]]],[11,"try_into","","",2183,[[],["result",4]]],[11,"type_id","","",2183,[[],["typeid",3]]],[11,"from","","",2184,[[]]],[11,"borrow","","",2184,[[]]],[11,"borrow_mut","","",2184,[[]]],[11,"try_from","","",2184,[[],["result",4]]],[11,"into","","",2184,[[]]],[11,"try_into","","",2184,[[],["result",4]]],[11,"type_id","","",2184,[[],["typeid",3]]],[11,"from","","",2185,[[]]],[11,"borrow","","",2185,[[]]],[11,"borrow_mut","","",2185,[[]]],[11,"try_from","","",2185,[[],["result",4]]],[11,"into","","",2185,[[]]],[11,"try_into","","",2185,[[],["result",4]]],[11,"type_id","","",2185,[[],["typeid",3]]],[11,"from","","",2186,[[]]],[11,"borrow","","",2186,[[]]],[11,"borrow_mut","","",2186,[[]]],[11,"try_from","","",2186,[[],["result",4]]],[11,"into","","",2186,[[]]],[11,"try_into","","",2186,[[],["result",4]]],[11,"type_id","","",2186,[[],["typeid",3]]],[11,"from","","",2187,[[]]],[11,"borrow","","",2187,[[]]],[11,"borrow_mut","","",2187,[[]]],[11,"try_from","","",2187,[[],["result",4]]],[11,"into","","",2187,[[]]],[11,"try_into","","",2187,[[],["result",4]]],[11,"type_id","","",2187,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::epintflag","",2190,[[]]],[11,"borrow","","",2190,[[]]],[11,"borrow_mut","","",2190,[[]]],[11,"try_from","","",2190,[[],["result",4]]],[11,"into","","",2190,[[]]],[11,"try_into","","",2190,[[],["result",4]]],[11,"type_id","","",2190,[[],["typeid",3]]],[11,"from","","",2191,[[]]],[11,"borrow","","",2191,[[]]],[11,"borrow_mut","","",2191,[[]]],[11,"try_from","","",2191,[[],["result",4]]],[11,"into","","",2191,[[]]],[11,"try_into","","",2191,[[],["result",4]]],[11,"type_id","","",2191,[[],["typeid",3]]],[11,"from","","",2192,[[]]],[11,"borrow","","",2192,[[]]],[11,"borrow_mut","","",2192,[[]]],[11,"try_from","","",2192,[[],["result",4]]],[11,"into","","",2192,[[]]],[11,"try_into","","",2192,[[],["result",4]]],[11,"type_id","","",2192,[[],["typeid",3]]],[11,"from","","",2193,[[]]],[11,"borrow","","",2193,[[]]],[11,"borrow_mut","","",2193,[[]]],[11,"try_from","","",2193,[[],["result",4]]],[11,"into","","",2193,[[]]],[11,"try_into","","",2193,[[],["result",4]]],[11,"type_id","","",2193,[[],["typeid",3]]],[11,"from","","",2194,[[]]],[11,"borrow","","",2194,[[]]],[11,"borrow_mut","","",2194,[[]]],[11,"try_from","","",2194,[[],["result",4]]],[11,"into","","",2194,[[]]],[11,"try_into","","",2194,[[],["result",4]]],[11,"type_id","","",2194,[[],["typeid",3]]],[11,"from","","",2195,[[]]],[11,"borrow","","",2195,[[]]],[11,"borrow_mut","","",2195,[[]]],[11,"try_from","","",2195,[[],["result",4]]],[11,"into","","",2195,[[]]],[11,"try_into","","",2195,[[],["result",4]]],[11,"type_id","","",2195,[[],["typeid",3]]],[11,"from","","",2196,[[]]],[11,"borrow","","",2196,[[]]],[11,"borrow_mut","","",2196,[[]]],[11,"try_from","","",2196,[[],["result",4]]],[11,"into","","",2196,[[]]],[11,"try_into","","",2196,[[],["result",4]]],[11,"type_id","","",2196,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::epintenclr","",2199,[[]]],[11,"borrow","","",2199,[[]]],[11,"borrow_mut","","",2199,[[]]],[11,"try_from","","",2199,[[],["result",4]]],[11,"into","","",2199,[[]]],[11,"try_into","","",2199,[[],["result",4]]],[11,"type_id","","",2199,[[],["typeid",3]]],[11,"from","","",2200,[[]]],[11,"borrow","","",2200,[[]]],[11,"borrow_mut","","",2200,[[]]],[11,"try_from","","",2200,[[],["result",4]]],[11,"into","","",2200,[[]]],[11,"try_into","","",2200,[[],["result",4]]],[11,"type_id","","",2200,[[],["typeid",3]]],[11,"from","","",2201,[[]]],[11,"borrow","","",2201,[[]]],[11,"borrow_mut","","",2201,[[]]],[11,"try_from","","",2201,[[],["result",4]]],[11,"into","","",2201,[[]]],[11,"try_into","","",2201,[[],["result",4]]],[11,"type_id","","",2201,[[],["typeid",3]]],[11,"from","","",2202,[[]]],[11,"borrow","","",2202,[[]]],[11,"borrow_mut","","",2202,[[]]],[11,"try_from","","",2202,[[],["result",4]]],[11,"into","","",2202,[[]]],[11,"try_into","","",2202,[[],["result",4]]],[11,"type_id","","",2202,[[],["typeid",3]]],[11,"from","","",2203,[[]]],[11,"borrow","","",2203,[[]]],[11,"borrow_mut","","",2203,[[]]],[11,"try_from","","",2203,[[],["result",4]]],[11,"into","","",2203,[[]]],[11,"try_into","","",2203,[[],["result",4]]],[11,"type_id","","",2203,[[],["typeid",3]]],[11,"from","","",2204,[[]]],[11,"borrow","","",2204,[[]]],[11,"borrow_mut","","",2204,[[]]],[11,"try_from","","",2204,[[],["result",4]]],[11,"into","","",2204,[[]]],[11,"try_into","","",2204,[[],["result",4]]],[11,"type_id","","",2204,[[],["typeid",3]]],[11,"from","","",2205,[[]]],[11,"borrow","","",2205,[[]]],[11,"borrow_mut","","",2205,[[]]],[11,"try_from","","",2205,[[],["result",4]]],[11,"into","","",2205,[[]]],[11,"try_into","","",2205,[[],["result",4]]],[11,"type_id","","",2205,[[],["typeid",3]]],[11,"from","atsamd11c::usb::device::epintenset","",2208,[[]]],[11,"borrow","","",2208,[[]]],[11,"borrow_mut","","",2208,[[]]],[11,"try_from","","",2208,[[],["result",4]]],[11,"into","","",2208,[[]]],[11,"try_into","","",2208,[[],["result",4]]],[11,"type_id","","",2208,[[],["typeid",3]]],[11,"from","","",2209,[[]]],[11,"borrow","","",2209,[[]]],[11,"borrow_mut","","",2209,[[]]],[11,"try_from","","",2209,[[],["result",4]]],[11,"into","","",2209,[[]]],[11,"try_into","","",2209,[[],["result",4]]],[11,"type_id","","",2209,[[],["typeid",3]]],[11,"from","","",2210,[[]]],[11,"borrow","","",2210,[[]]],[11,"borrow_mut","","",2210,[[]]],[11,"try_from","","",2210,[[],["result",4]]],[11,"into","","",2210,[[]]],[11,"try_into","","",2210,[[],["result",4]]],[11,"type_id","","",2210,[[],["typeid",3]]],[11,"from","","",2211,[[]]],[11,"borrow","","",2211,[[]]],[11,"borrow_mut","","",2211,[[]]],[11,"try_from","","",2211,[[],["result",4]]],[11,"into","","",2211,[[]]],[11,"try_into","","",2211,[[],["result",4]]],[11,"type_id","","",2211,[[],["typeid",3]]],[11,"from","","",2212,[[]]],[11,"borrow","","",2212,[[]]],[11,"borrow_mut","","",2212,[[]]],[11,"try_from","","",2212,[[],["result",4]]],[11,"into","","",2212,[[]]],[11,"try_into","","",2212,[[],["result",4]]],[11,"type_id","","",2212,[[],["typeid",3]]],[11,"from","","",2213,[[]]],[11,"borrow","","",2213,[[]]],[11,"borrow_mut","","",2213,[[]]],[11,"try_from","","",2213,[[],["result",4]]],[11,"into","","",2213,[[]]],[11,"try_into","","",2213,[[],["result",4]]],[11,"type_id","","",2213,[[],["typeid",3]]],[11,"from","","",2214,[[]]],[11,"borrow","","",2214,[[]]],[11,"borrow_mut","","",2214,[[]]],[11,"try_from","","",2214,[[],["result",4]]],[11,"into","","",2214,[[]]],[11,"try_into","","",2214,[[],["result",4]]],[11,"type_id","","",2214,[[],["typeid",3]]],[11,"from","atsamd11c::wdt","",2217,[[]]],[11,"borrow","","",2217,[[]]],[11,"borrow_mut","","",2217,[[]]],[11,"try_from","","",2217,[[],["result",4]]],[11,"into","","",2217,[[]]],[11,"try_into","","",2217,[[],["result",4]]],[11,"type_id","","",2217,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::ctrl","",2218,[[]]],[11,"borrow","","",2218,[[]]],[11,"borrow_mut","","",2218,[[]]],[11,"try_from","","",2218,[[],["result",4]]],[11,"into","","",2218,[[]]],[11,"try_into","","",2218,[[],["result",4]]],[11,"type_id","","",2218,[[],["typeid",3]]],[11,"from","","",2219,[[]]],[11,"borrow","","",2219,[[]]],[11,"borrow_mut","","",2219,[[]]],[11,"try_from","","",2219,[[],["result",4]]],[11,"into","","",2219,[[]]],[11,"try_into","","",2219,[[],["result",4]]],[11,"type_id","","",2219,[[],["typeid",3]]],[11,"from","","",2220,[[]]],[11,"borrow","","",2220,[[]]],[11,"borrow_mut","","",2220,[[]]],[11,"try_from","","",2220,[[],["result",4]]],[11,"into","","",2220,[[]]],[11,"try_into","","",2220,[[],["result",4]]],[11,"type_id","","",2220,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::config","",2226,[[]]],[11,"borrow","","",2226,[[]]],[11,"borrow_mut","","",2226,[[]]],[11,"try_from","","",2226,[[],["result",4]]],[11,"into","","",2226,[[]]],[11,"try_into","","",2226,[[],["result",4]]],[11,"type_id","","",2226,[[],["typeid",3]]],[11,"from","","",2228,[[]]],[11,"borrow","","",2228,[[]]],[11,"borrow_mut","","",2228,[[]]],[11,"try_from","","",2228,[[],["result",4]]],[11,"into","","",2228,[[]]],[11,"try_into","","",2228,[[],["result",4]]],[11,"type_id","","",2228,[[],["typeid",3]]],[11,"from","","",2223,[[]]],[11,"borrow","","",2223,[[]]],[11,"borrow_mut","","",2223,[[]]],[11,"try_from","","",2223,[[],["result",4]]],[11,"into","","",2223,[[]]],[11,"try_into","","",2223,[[],["result",4]]],[11,"type_id","","",2223,[[],["typeid",3]]],[11,"from","","",2224,[[]]],[11,"borrow","","",2224,[[]]],[11,"borrow_mut","","",2224,[[]]],[11,"try_from","","",2224,[[],["result",4]]],[11,"into","","",2224,[[]]],[11,"try_into","","",2224,[[],["result",4]]],[11,"type_id","","",2224,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::ewctrl","",2233,[[]]],[11,"borrow","","",2233,[[]]],[11,"borrow_mut","","",2233,[[]]],[11,"try_from","","",2233,[[],["result",4]]],[11,"into","","",2233,[[]]],[11,"try_into","","",2233,[[],["result",4]]],[11,"type_id","","",2233,[[],["typeid",3]]],[11,"from","","",2231,[[]]],[11,"borrow","","",2231,[[]]],[11,"borrow_mut","","",2231,[[]]],[11,"try_from","","",2231,[[],["result",4]]],[11,"into","","",2231,[[]]],[11,"try_into","","",2231,[[],["result",4]]],[11,"type_id","","",2231,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::intenclr","",2236,[[]]],[11,"borrow","","",2236,[[]]],[11,"borrow_mut","","",2236,[[]]],[11,"try_from","","",2236,[[],["result",4]]],[11,"into","","",2236,[[]]],[11,"try_into","","",2236,[[],["result",4]]],[11,"type_id","","",2236,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::intenset","",2239,[[]]],[11,"borrow","","",2239,[[]]],[11,"borrow_mut","","",2239,[[]]],[11,"try_from","","",2239,[[],["result",4]]],[11,"into","","",2239,[[]]],[11,"try_into","","",2239,[[],["result",4]]],[11,"type_id","","",2239,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::intflag","",2242,[[]]],[11,"borrow","","",2242,[[]]],[11,"borrow_mut","","",2242,[[]]],[11,"try_from","","",2242,[[],["result",4]]],[11,"into","","",2242,[[]]],[11,"try_into","","",2242,[[],["result",4]]],[11,"type_id","","",2242,[[],["typeid",3]]],[11,"from","atsamd11c::wdt::clear","",2247,[[]]],[11,"borrow","","",2247,[[]]],[11,"borrow_mut","","",2247,[[]]],[11,"try_from","","",2247,[[],["result",4]]],[11,"into","","",2247,[[]]],[11,"try_into","","",2247,[[],["result",4]]],[11,"type_id","","",2247,[[],["typeid",3]]],[11,"from","","",2246,[[]]],[11,"borrow","","",2246,[[]]],[11,"borrow_mut","","",2246,[[]]],[11,"try_from","","",2246,[[],["result",4]]],[11,"into","","",2246,[[]]],[11,"try_into","","",2246,[[],["result",4]]],[11,"type_id","","",2246,[[],["typeid",3]]],[11,"deref","atsamd11c","",2278,[[]]],[11,"deref","","",2283,[[]]],[11,"deref","","",2284,[[]]],[11,"deref","","",2277,[[]]],[11,"deref","","",2276,[[]]],[11,"deref","","",2281,[[]]],[11,"deref","","",2282,[[]]],[11,"reset_value","","",2286,[[]]],[11,"reset_value","","",2287,[[]]],[11,"reset_value","","",2288,[[]]],[11,"reset_value","","",2289,[[]]],[11,"reset_value","","",2290,[[]]],[11,"reset_value","","",2291,[[]]],[11,"reset_value","","",2292,[[]]],[11,"reset_value","","",2293,[[]]],[11,"reset_value","","",2294,[[]]],[11,"reset_value","","",2295,[[]]],[11,"reset_value","","",2296,[[]]],[11,"reset_value","","",2297,[[]]],[11,"reset_value","","",2298,[[]]],[11,"reset_value","","",2299,[[]]],[11,"reset_value","","",2300,[[]]],[11,"reset_value","","",2301,[[]]],[11,"reset_value","","",2302,[[]]],[11,"reset_value","","",2303,[[]]],[11,"reset_value","","",2304,[[]]],[11,"reset_value","","",2305,[[]]],[11,"reset_value","","",2306,[[]]],[11,"reset_value","","",2307,[[]]],[11,"reset_value","","",2308,[[]]],[11,"reset_value","","",2309,[[]]],[11,"reset_value","","",2310,[[]]],[11,"reset_value","","",2311,[[]]],[11,"reset_value","","",2312,[[]]],[11,"reset_value","","",2313,[[]]],[11,"reset_value","","",2314,[[]]],[11,"reset_value","","",2315,[[]]],[11,"reset_value","","",2316,[[]]],[11,"reset_value","","",2317,[[]]],[11,"reset_value","","",2318,[[]]],[11,"reset_value","","",2319,[[]]],[11,"reset_value","","",2320,[[]]],[11,"reset_value","","",2321,[[]]],[11,"reset_value","","",2322,[[]]],[11,"reset_value","","",2323,[[]]],[11,"reset_value","","",2324,[[]]],[11,"reset_value","","",2325,[[]]],[11,"reset_value","","",2326,[[]]],[11,"reset_value","","",2327,[[]]],[11,"reset_value","","",2328,[[]]],[11,"reset_value","","",2329,[[]]],[11,"reset_value","","",2330,[[]]],[11,"reset_value","","",2331,[[]]],[11,"reset_value","","",2332,[[]]],[11,"reset_value","","",2333,[[]]],[11,"reset_value","","",2334,[[]]],[11,"reset_value","","",2335,[[]]],[11,"reset_value","","",2336,[[]]],[11,"reset_value","","",2337,[[]]],[11,"reset_value","","",2338,[[]]],[11,"reset_value","","",2339,[[]]],[11,"reset_value","","",2340,[[]]],[11,"reset_value","","",2341,[[]]],[11,"reset_value","","",2342,[[]]],[11,"reset_value","","",2343,[[]]],[11,"reset_value","","",2344,[[]]],[11,"reset_value","","",2345,[[]]],[11,"reset_value","","",2346,[[]]],[11,"reset_value","","",2347,[[]]],[11,"reset_value","","",2348,[[]]],[11,"reset_value","","",2349,[[]]],[11,"reset_value","","",2350,[[]]],[11,"reset_value","","",2351,[[]]],[11,"reset_value","","",2352,[[]]],[11,"reset_value","","",2353,[[]]],[11,"reset_value","","",2354,[[]]],[11,"reset_value","","",2355,[[]]],[11,"reset_value","","",2356,[[]]],[11,"reset_value","","",2357,[[]]],[11,"reset_value","","",2358,[[]]],[11,"reset_value","","",2359,[[]]],[11,"reset_value","","",2360,[[]]],[11,"reset_value","","",2361,[[]]],[11,"reset_value","","",2362,[[]]],[11,"reset_value","","",2363,[[]]],[11,"reset_value","","",2364,[[]]],[11,"reset_value","","",2365,[[]]],[11,"reset_value","","",2366,[[]]],[11,"reset_value","","",2367,[[]]],[11,"reset_value","","",2368,[[]]],[11,"reset_value","","",2369,[[]]],[11,"reset_value","","",2370,[[]]],[11,"reset_value","","",2371,[[]]],[11,"reset_value","","",2372,[[]]],[11,"reset_value","","",2373,[[]]],[11,"reset_value","","",2374,[[]]],[11,"reset_value","","",2375,[[]]],[11,"reset_value","","",2376,[[]]],[11,"reset_value","","",2377,[[]]],[11,"reset_value","","",2378,[[]]],[11,"reset_value","","",2379,[[]]],[11,"reset_value","","",2380,[[]]],[11,"reset_value","","",2381,[[]]],[11,"reset_value","","",2382,[[]]],[11,"reset_value","","",2383,[[]]],[11,"reset_value","","",2384,[[]]],[11,"reset_value","","",2385,[[]]],[11,"reset_value","","",2386,[[]]],[11,"reset_value","","",2387,[[]]],[11,"reset_value","","",2388,[[]]],[11,"reset_value","","",2389,[[]]],[11,"reset_value","","",2390,[[]]],[11,"reset_value","","",2391,[[]]],[11,"reset_value","","",2392,[[]]],[11,"reset_value","","",2393,[[]]],[11,"reset_value","","",2394,[[]]],[11,"reset_value","","",2395,[[]]],[11,"reset_value","","",2396,[[]]],[11,"reset_value","","",2397,[[]]],[11,"reset_value","","",2398,[[]]],[11,"reset_value","","",2399,[[]]],[11,"reset_value","","",2400,[[]]],[11,"reset_value","","",2401,[[]]],[11,"reset_value","","",2402,[[]]],[11,"reset_value","","",2403,[[]]],[11,"reset_value","","",2404,[[]]],[11,"reset_value","","",2405,[[]]],[11,"reset_value","","",2406,[[]]],[11,"reset_value","","",2407,[[]]],[11,"reset_value","","",2408,[[]]],[11,"reset_value","","",2409,[[]]],[11,"reset_value","","",2410,[[]]],[11,"reset_value","","",2411,[[]]],[11,"reset_value","","",2412,[[]]],[11,"reset_value","","",2413,[[]]],[11,"reset_value","","",2414,[[]]],[11,"reset_value","","",2415,[[]]],[11,"reset_value","","",2416,[[]]],[11,"reset_value","","",2417,[[]]],[11,"reset_value","","",2418,[[]]],[11,"reset_value","","",2419,[[]]],[11,"reset_value","","",2420,[[]]],[11,"reset_value","","",2421,[[]]],[11,"reset_value","","",2422,[[]]],[11,"reset_value","","",2423,[[]]],[11,"reset_value","","",2424,[[]]],[11,"reset_value","","",2425,[[]]],[11,"reset_value","","",2426,[[]]],[11,"reset_value","","",2427,[[]]],[11,"reset_value","","",2428,[[]]],[11,"reset_value","","",2429,[[]]],[11,"reset_value","","",2430,[[]]],[11,"reset_value","","",2431,[[]]],[11,"reset_value","","",2432,[[]]],[11,"reset_value","","",2433,[[]]],[11,"reset_value","","",2434,[[]]],[11,"reset_value","","",2435,[[]]],[11,"reset_value","","",2436,[[]]],[11,"reset_value","","",2437,[[]]],[11,"reset_value","","",2438,[[]]],[11,"reset_value","","",2439,[[]]],[11,"reset_value","","",2440,[[]]],[11,"reset_value","","",2441,[[]]],[11,"reset_value","","",2442,[[]]],[11,"reset_value","","",2443,[[]]],[11,"reset_value","","",2444,[[]]],[11,"reset_value","","",2445,[[]]],[11,"reset_value","","",2446,[[]]],[11,"reset_value","","",2447,[[]]],[11,"reset_value","","",2448,[[]]],[11,"reset_value","","",2449,[[]]],[11,"reset_value","","",2450,[[]]],[11,"reset_value","","",2451,[[]]],[11,"reset_value","","",2452,[[]]],[11,"reset_value","","",2453,[[]]],[11,"reset_value","","",2454,[[]]],[11,"reset_value","","",2455,[[]]],[11,"reset_value","","",2456,[[]]],[11,"reset_value","","",2457,[[]]],[11,"reset_value","","",2458,[[]]],[11,"reset_value","","",2459,[[]]],[11,"reset_value","","",2460,[[]]],[11,"reset_value","","",2461,[[]]],[11,"reset_value","","",2462,[[]]],[11,"reset_value","","",2463,[[]]],[11,"reset_value","","",2464,[[]]],[11,"reset_value","","",2465,[[]]],[11,"reset_value","","",2466,[[]]],[11,"reset_value","","",2467,[[]]],[11,"reset_value","","",2468,[[]]],[11,"reset_value","","",2469,[[]]],[11,"reset_value","","",2470,[[]]],[11,"reset_value","","",2471,[[]]],[11,"reset_value","","",2472,[[]]],[11,"reset_value","","",2473,[[]]],[11,"reset_value","","",2474,[[]]],[11,"reset_value","","",2475,[[]]],[11,"reset_value","","",2476,[[]]],[11,"reset_value","","",2477,[[]]],[11,"reset_value","","",2478,[[]]],[11,"reset_value","","",2479,[[]]],[11,"reset_value","","",2480,[[]]],[11,"reset_value","","",2481,[[]]],[11,"reset_value","","",2482,[[]]],[11,"reset_value","","",2483,[[]]],[11,"reset_value","","",2484,[[]]],[11,"reset_value","","",2485,[[]]],[11,"reset_value","","",2486,[[]]],[11,"reset_value","","",2487,[[]]],[11,"reset_value","","",2488,[[]]],[11,"reset_value","","",2489,[[]]],[11,"reset_value","","",2490,[[]]],[11,"reset_value","","",2491,[[]]],[11,"reset_value","","",2492,[[]]],[11,"reset_value","","",2493,[[]]],[11,"reset_value","","",2494,[[]]],[11,"reset_value","","",2495,[[]]],[11,"reset_value","","",2496,[[]]],[11,"reset_value","","",2497,[[]]],[11,"reset_value","","",2498,[[]]],[11,"reset_value","","",2499,[[]]],[11,"reset_value","","",2500,[[]]],[11,"reset_value","","",2501,[[]]],[11,"reset_value","","",2502,[[]]],[11,"reset_value","","",2503,[[]]],[11,"reset_value","","",2504,[[]]],[11,"reset_value","","",2505,[[]]],[11,"reset_value","","",2506,[[]]],[11,"reset_value","","",2507,[[]]],[11,"reset_value","","",2508,[[]]],[11,"reset_value","","",2509,[[]]],[11,"reset_value","","",2510,[[]]],[11,"reset_value","","",2511,[[]]],[11,"reset_value","","",2512,[[]]],[11,"reset_value","","",2513,[[]]],[11,"reset_value","","",2514,[[]]],[11,"reset_value","","",2515,[[]]],[11,"reset_value","","",2516,[[]]],[11,"reset_value","","",2517,[[]]],[11,"reset_value","","",2518,[[]]],[11,"reset_value","","",2519,[[]]],[11,"reset_value","","",2520,[[]]],[11,"reset_value","","",2521,[[]]],[11,"reset_value","","",2522,[[]]],[11,"reset_value","","",2523,[[]]],[11,"reset_value","","",2524,[[]]],[11,"reset_value","","",2525,[[]]],[11,"reset_value","","",2526,[[]]],[11,"reset_value","","",2527,[[]]],[11,"reset_value","","",2528,[[]]],[11,"reset_value","","",2529,[[]]],[11,"reset_value","","",2530,[[]]],[11,"reset_value","","",2531,[[]]],[11,"reset_value","","",2532,[[]]],[11,"reset_value","","",2533,[[]]],[11,"reset_value","","",2534,[[]]],[11,"reset_value","","",2535,[[]]],[11,"reset_value","","",2536,[[]]],[11,"reset_value","","",2537,[[]]],[11,"reset_value","","",2538,[[]]],[11,"reset_value","","",2539,[[]]],[11,"reset_value","","",2540,[[]]],[11,"reset_value","","",2541,[[]]],[11,"reset_value","","",2542,[[]]],[11,"reset_value","","",2543,[[]]],[11,"reset_value","","",2544,[[]]],[11,"reset_value","","",2545,[[]]],[11,"reset_value","","",2546,[[]]],[11,"reset_value","","",2547,[[]]],[11,"reset_value","","",2548,[[]]],[11,"reset_value","","",2549,[[]]],[11,"reset_value","","",2550,[[]]],[11,"reset_value","","",2551,[[]]],[11,"reset_value","","",2552,[[]]],[11,"reset_value","","",2553,[[]]],[11,"reset_value","","",2554,[[]]],[11,"reset_value","","",2555,[[]]],[11,"reset_value","","",2556,[[]]],[11,"reset_value","","",2557,[[]]],[11,"reset_value","","",2558,[[]]],[11,"reset_value","","",2559,[[]]],[11,"reset_value","","",2560,[[]]],[11,"reset_value","","",2561,[[]]],[11,"reset_value","","",2562,[[]]],[11,"reset_value","","",2563,[[]]],[11,"reset_value","","",2564,[[]]],[11,"reset_value","","",2565,[[]]],[11,"reset_value","","",2566,[[]]],[11,"reset_value","","",2567,[[]]],[11,"reset_value","","",2568,[[]]],[11,"reset_value","","",2569,[[]]],[11,"reset_value","","",2570,[[]]],[11,"reset_value","","",2571,[[]]],[11,"reset_value","","",2572,[[]]],[11,"reset_value","","",2573,[[]]],[11,"reset_value","","",2574,[[]]],[11,"reset_value","","",2575,[[]]],[11,"reset_value","","",2576,[[]]],[11,"reset_value","","",2577,[[]]],[11,"reset_value","","",2578,[[]]],[11,"reset_value","","",2579,[[]]],[11,"reset_value","","",2580,[[]]],[11,"reset_value","","",2581,[[]]],[11,"reset_value","","",2582,[[]]],[11,"reset_value","","",2583,[[]]],[11,"reset_value","","",2584,[[]]],[11,"reset_value","","",2585,[[]]],[11,"reset_value","","",2586,[[]]],[11,"reset_value","","",2587,[[]]],[11,"reset_value","","",2588,[[]]],[11,"reset_value","","",2589,[[]]],[11,"reset_value","","",2590,[[]]],[11,"reset_value","","",2591,[[]]],[11,"reset_value","","",2592,[[]]],[11,"reset_value","","",2593,[[]]],[11,"reset_value","","",2594,[[]]],[11,"reset_value","","",2595,[[]]],[11,"deref","","",2249,[[]]],[11,"deref","","",2250,[[]]],[11,"deref","","",2251,[[]]],[11,"deref","","",2252,[[]]],[11,"deref","","",2253,[[]]],[11,"deref","","",2254,[[]]],[11,"deref","","",2255,[[]]],[11,"deref","","",2256,[[]]],[11,"deref","","",2257,[[]]],[11,"deref","","",2258,[[]]],[11,"deref","","",2259,[[]]],[11,"deref","","",2260,[[]]],[11,"deref","","",2261,[[]]],[11,"deref","","",2262,[[]]],[11,"deref","","",2263,[[]]],[11,"deref","","",2264,[[]]],[11,"deref","","",2265,[[]]],[11,"deref","","",2266,[[]]],[11,"deref","","",2267,[[]]],[11,"deref","","",2268,[[]]],[11,"deref","","",2269,[[]]],[11,"deref","","",2270,[[]]],[11,"deref","","",2271,[[]]],[11,"deref","","",2272,[[]]],[11,"deref","","",2273,[[]]],[11,"deref","","",2274,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::ac::statusa","",40,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::ac::statusc","",44,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::ac::winctrl","",47,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::ac::compctrl","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::adc::refctrl","",86,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::adc::avgctrl","",92,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::adc::ctrlb","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::adc::winctrl","",113,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::adc::inputctrl","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::dac::ctrlb","",186,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::dmac::crcctrl","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::dmac::qosctrl","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::dmac::chctrlb","",307,[[["formatter",3]],["result",6]]],[11,"fmt","","",308,[[["formatter",3]],["result",6]]],[11,"fmt","","",309,[[["formatter",3]],["result",6]]],[11,"fmt","","",310,[[["formatter",3]],["result",6]]],[11,"fmt","","",311,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::dsu::did","",371,[[["formatter",3]],["result",6]]],[11,"fmt","","",372,[[["formatter",3]],["result",6]]],[11,"fmt","","",373,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::eic::nmictrl","",399,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::eic::config","",458,[[["formatter",3]],["result",6]]],[11,"fmt","","",459,[[["formatter",3]],["result",6]]],[11,"fmt","","",460,[[["formatter",3]],["result",6]]],[11,"fmt","","",461,[[["formatter",3]],["result",6]]],[11,"fmt","","",462,[[["formatter",3]],["result",6]]],[11,"fmt","","",463,[[["formatter",3]],["result",6]]],[11,"fmt","","",464,[[["formatter",3]],["result",6]]],[11,"fmt","","",465,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::evsys::channel","",496,[[["formatter",3]],["result",6]]],[11,"fmt","","",497,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::evsys::user","",507,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::gclk::clkctrl","",561,[[["formatter",3]],["result",6]]],[11,"fmt","","",562,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::gclk::genctrl","",571,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::nvmctrl::ctrla","",631,[[["formatter",3]],["result",6]]],[11,"fmt","","",632,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::nvmctrl::ctrlb","",639,[[["formatter",3]],["result",6]]],[11,"fmt","","",640,[[["formatter",3]],["result",6]]],[11,"fmt","","",641,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::nvmctrl::param","",652,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::pm::sleep","",688,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::pm::cpusel","",696,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::pm::apbasel","",701,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::pm::apbbsel","",706,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::pm::apbcsel","",711,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::port::pmux0_","",807,[[["formatter",3]],["result",6]]],[11,"fmt","","",808,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::rtc::mode0::ctrl","",824,[[["formatter",3]],["result",6]]],[11,"fmt","","",825,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::rtc::mode1::ctrl","",880,[[["formatter",3]],["result",6]]],[11,"fmt","","",881,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::rtc::mode2::ctrl","",942,[[["formatter",3]],["result",6]]],[11,"fmt","","",943,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::rtc::mode2::clock","",993,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::rtc::mode2::alarm","",1003,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::rtc::mode2::mask","",1013,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sercom0::i2cm::ctrla","",1023,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sercom0::i2cs::ctrla","",1089,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sercom0::spi::ctrla","",1146,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sercom0::usart::ctrla","",1205,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sysctrl::xosc","",1342,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sysctrl::osc8m","",1378,[[["formatter",3]],["result",6]]],[11,"fmt","","",1379,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sysctrl::bod33","",1414,[[["formatter",3]],["result",6]]],[11,"fmt","","",1415,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::sysctrl::dpllctrlb","",1442,[[["formatter",3]],["result",6]]],[11,"fmt","","",1443,[[["formatter",3]],["result",6]]],[11,"fmt","","",1444,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count8::ctrla","",1461,[[["formatter",3]],["result",6]]],[11,"fmt","","",1462,[[["formatter",3]],["result",6]]],[11,"fmt","","",1463,[[["formatter",3]],["result",6]]],[11,"fmt","","",1464,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count8::ctrlbclr","",1483,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count8::ctrlbset","",1490,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count8::evctrl","",1506,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count16::ctrla","",1547,[[["formatter",3]],["result",6]]],[11,"fmt","","",1548,[[["formatter",3]],["result",6]]],[11,"fmt","","",1549,[[["formatter",3]],["result",6]]],[11,"fmt","","",1550,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count16::ctrlbclr","",1569,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count16::ctrlbset","",1576,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count16::evctrl","",1592,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count32::ctrla","",1630,[[["formatter",3]],["result",6]]],[11,"fmt","","",1631,[[["formatter",3]],["result",6]]],[11,"fmt","","",1632,[[["formatter",3]],["result",6]]],[11,"fmt","","",1633,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count32::ctrlbclr","",1652,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count32::ctrlbset","",1659,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tc1::count32::evctrl","",1675,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::ctrla","",1715,[[["formatter",3]],["result",6]]],[11,"fmt","","",1716,[[["formatter",3]],["result",6]]],[11,"fmt","","",1717,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::ctrlbclr","",1734,[[["formatter",3]],["result",6]]],[11,"fmt","","",1735,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::ctrlbset","",1745,[[["formatter",3]],["result",6]]],[11,"fmt","","",1746,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::fctrla","",1757,[[["formatter",3]],["result",6]]],[11,"fmt","","",1758,[[["formatter",3]],["result",6]]],[11,"fmt","","",1759,[[["formatter",3]],["result",6]]],[11,"fmt","","",1760,[[["formatter",3]],["result",6]]],[11,"fmt","","",1761,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::fctrlb","",1780,[[["formatter",3]],["result",6]]],[11,"fmt","","",1781,[[["formatter",3]],["result",6]]],[11,"fmt","","",1782,[[["formatter",3]],["result",6]]],[11,"fmt","","",1783,[[["formatter",3]],["result",6]]],[11,"fmt","","",1784,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::evctrl","",1844,[[["formatter",3]],["result",6]]],[11,"fmt","","",1845,[[["formatter",3]],["result",6]]],[11,"fmt","","",1846,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::wave","",1959,[[["formatter",3]],["result",6]]],[11,"fmt","","",1960,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::tcc0::waveb","",2028,[[["formatter",3]],["result",6]]],[11,"fmt","","",2029,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::usb::device::ctrla","",2081,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::usb::device::ctrlb","",2094,[[["formatter",3]],["result",6]]],[11,"fmt","","",2095,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::usb::device::status","",2114,[[["formatter",3]],["result",6]]],[11,"fmt","","",2115,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::usb::device::fsmstatus","",2119,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::wdt::config","",2223,[[["formatter",3]],["result",6]]],[11,"fmt","","",2224,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::wdt::ewctrl","",2231,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd11c::wdt::clear","",2246,[[["formatter",3]],["result",6]]],[11,"eq","atsamd11c::generic","",6,[[]]],[11,"eq","","",3,[[["variant",4]]]],[11,"ne","","",3,[[["variant",4]]]],[11,"eq","atsamd11c::ac::statusa","",40,[[["wstate0_a",4]]]],[11,"eq","atsamd11c::ac::statusc","",44,[[["wstate0_a",4]]]],[11,"eq","atsamd11c::ac::winctrl","",47,[[["wintsel0_a",4]]]],[11,"eq","atsamd11c::ac::compctrl","",53,[[["speed_a",4]]]],[11,"eq","","",54,[[["intsel_a",4]]]],[11,"eq","","",55,[[["muxneg_a",4]]]],[11,"eq","","",56,[[["muxpos_a",4]]]],[11,"eq","","",57,[[["out_a",4]]]],[11,"eq","","",58,[[["flen_a",4]]]],[11,"eq","atsamd11c::adc::refctrl","",86,[[["refsel_a",4]]]],[11,"eq","atsamd11c::adc::avgctrl","",92,[[["samplenum_a",4]]]],[11,"eq","atsamd11c::adc::ctrlb","",101,[[["ressel_a",4]]]],[11,"eq","","",102,[[["prescaler_a",4]]]],[11,"eq","atsamd11c::adc::winctrl","",113,[[["winmode_a",4]]]],[11,"eq","atsamd11c::adc::inputctrl","",122,[[["muxpos_a",4]]]],[11,"eq","","",123,[[["muxneg_a",4]]]],[11,"eq","","",124,[[["gain_a",4]]]],[11,"eq","atsamd11c::dac::ctrlb","",186,[[["refsel_a",4]]]],[11,"eq","atsamd11c::dmac::crcctrl","",232,[[["crcbeatsize_a",4]]]],[11,"eq","","",233,[[["crcpoly_a",4]]]],[11,"eq","","",234,[[["crcsrc_a",4]]]],[11,"eq","atsamd11c::dmac::qosctrl","",255,[[["wrbqos_a",4]]]],[11,"eq","","",256,[[["fqos_a",4]]]],[11,"eq","","",257,[[["dqos_a",4]]]],[11,"eq","atsamd11c::dmac::chctrlb","",307,[[["evact_a",4]]]],[11,"eq","","",308,[[["lvl_a",4]]]],[11,"eq","","",309,[[["trigsrc_a",4]]]],[11,"eq","","",310,[[["trigact_a",4]]]],[11,"eq","","",311,[[["cmd_a",4]]]],[11,"eq","atsamd11c::dsu::did","",371,[[["series_a",4]]]],[11,"eq","","",372,[[["family_a",4]]]],[11,"eq","","",373,[[["processor_a",4]]]],[11,"eq","atsamd11c::eic::nmictrl","",399,[[["nmisense_a",4]]]],[11,"eq","atsamd11c::eic::config","",458,[[["sense0_a",4]]]],[11,"eq","","",459,[[["sense1_a",4]]]],[11,"eq","","",460,[[["sense2_a",4]]]],[11,"eq","","",461,[[["sense3_a",4]]]],[11,"eq","","",462,[[["sense4_a",4]]]],[11,"eq","","",463,[[["sense5_a",4]]]],[11,"eq","","",464,[[["sense6_a",4]]]],[11,"eq","","",465,[[["sense7_a",4]]]],[11,"eq","atsamd11c::evsys::channel","",496,[[["path_a",4]]]],[11,"eq","","",497,[[["edgsel_a",4]]]],[11,"eq","atsamd11c::evsys::user","",507,[[["channel_a",4]]]],[11,"eq","atsamd11c::gclk::clkctrl","",561,[[["id_a",4]]]],[11,"eq","","",562,[[["gen_a",4]]]],[11,"eq","atsamd11c::gclk::genctrl","",571,[[["src_a",4]]]],[11,"eq","atsamd11c::nvmctrl::ctrla","",631,[[["cmd_a",4]]]],[11,"eq","","",632,[[["cmdex_a",4]]]],[11,"eq","atsamd11c::nvmctrl::ctrlb","",639,[[["rws_a",4]]]],[11,"eq","","",640,[[["sleepprm_a",4]]]],[11,"eq","","",641,[[["readmode_a",4]]]],[11,"eq","atsamd11c::nvmctrl::param","",652,[[["psz_a",4]]]],[11,"eq","atsamd11c::pm::sleep","",688,[[["idle_a",4]]]],[11,"eq","atsamd11c::pm::cpusel","",696,[[["cpudiv_a",4]]]],[11,"eq","atsamd11c::pm::apbasel","",701,[[["apbadiv_a",4]]]],[11,"eq","atsamd11c::pm::apbbsel","",706,[[["apbbdiv_a",4]]]],[11,"eq","atsamd11c::pm::apbcsel","",711,[[["apbcdiv_a",4]]]],[11,"eq","atsamd11c::port::pmux0_","",807,[[["pmuxe_a",4]]]],[11,"eq","","",808,[[["pmuxo_a",4]]]],[11,"eq","atsamd11c::rtc::mode0::ctrl","",824,[[["mode_a",4]]]],[11,"eq","","",825,[[["prescaler_a",4]]]],[11,"eq","atsamd11c::rtc::mode1::ctrl","",880,[[["mode_a",4]]]],[11,"eq","","",881,[[["prescaler_a",4]]]],[11,"eq","atsamd11c::rtc::mode2::ctrl","",942,[[["mode_a",4]]]],[11,"eq","","",943,[[["prescaler_a",4]]]],[11,"eq","atsamd11c::rtc::mode2::clock","",993,[[["hour_a",4]]]],[11,"eq","atsamd11c::rtc::mode2::alarm","",1003,[[["hour_a",4]]]],[11,"eq","atsamd11c::rtc::mode2::mask","",1013,[[["sel_a",4]]]],[11,"eq","atsamd11c::sercom0::i2cm::ctrla","",1023,[[["mode_a",4]]]],[11,"eq","atsamd11c::sercom0::i2cs::ctrla","",1089,[[["mode_a",4]]]],[11,"eq","atsamd11c::sercom0::spi::ctrla","",1146,[[["mode_a",4]]]],[11,"eq","atsamd11c::sercom0::usart::ctrla","",1205,[[["mode_a",4]]]],[11,"eq","atsamd11c::sysctrl::xosc","",1342,[[["gain_a",4]]]],[11,"eq","atsamd11c::sysctrl::osc8m","",1378,[[["presc_a",4]]]],[11,"eq","","",1379,[[["frange_a",4]]]],[11,"eq","atsamd11c::sysctrl::bod33","",1414,[[["action_a",4]]]],[11,"eq","","",1415,[[["psel_a",4]]]],[11,"eq","atsamd11c::sysctrl::dpllctrlb","",1442,[[["filter_a",4]]]],[11,"eq","","",1443,[[["refclk_a",4]]]],[11,"eq","","",1444,[[["ltime_a",4]]]],[11,"eq","atsamd11c::tc1::count8::ctrla","",1461,[[["mode_a",4]]]],[11,"eq","","",1462,[[["wavegen_a",4]]]],[11,"eq","","",1463,[[["prescaler_a",4]]]],[11,"eq","","",1464,[[["prescsync_a",4]]]],[11,"eq","atsamd11c::tc1::count8::ctrlbclr","",1483,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tc1::count8::ctrlbset","",1490,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tc1::count8::evctrl","",1506,[[["evact_a",4]]]],[11,"eq","atsamd11c::tc1::count16::ctrla","",1547,[[["mode_a",4]]]],[11,"eq","","",1548,[[["wavegen_a",4]]]],[11,"eq","","",1549,[[["prescaler_a",4]]]],[11,"eq","","",1550,[[["prescsync_a",4]]]],[11,"eq","atsamd11c::tc1::count16::ctrlbclr","",1569,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tc1::count16::ctrlbset","",1576,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tc1::count16::evctrl","",1592,[[["evact_a",4]]]],[11,"eq","atsamd11c::tc1::count32::ctrla","",1630,[[["mode_a",4]]]],[11,"eq","","",1631,[[["wavegen_a",4]]]],[11,"eq","","",1632,[[["prescaler_a",4]]]],[11,"eq","","",1633,[[["prescsync_a",4]]]],[11,"eq","atsamd11c::tc1::count32::ctrlbclr","",1652,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tc1::count32::ctrlbset","",1659,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tc1::count32::evctrl","",1675,[[["evact_a",4]]]],[11,"eq","atsamd11c::tcc0::ctrla","",1715,[[["resolution_a",4]]]],[11,"eq","","",1716,[[["prescaler_a",4]]]],[11,"eq","","",1717,[[["prescsync_a",4]]]],[11,"eq","atsamd11c::tcc0::ctrlbclr","",1734,[[["idxcmd_a",4]]]],[11,"eq","","",1735,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tcc0::ctrlbset","",1745,[[["idxcmd_a",4]]]],[11,"eq","","",1746,[[["cmd_a",4]]]],[11,"eq","atsamd11c::tcc0::fctrla","",1757,[[["src_a",4]]]],[11,"eq","","",1758,[[["blank_a",4]]]],[11,"eq","","",1759,[[["halt_a",4]]]],[11,"eq","","",1760,[[["chsel_a",4]]]],[11,"eq","","",1761,[[["capture_a",4]]]],[11,"eq","atsamd11c::tcc0::fctrlb","",1780,[[["src_a",4]]]],[11,"eq","","",1781,[[["blank_a",4]]]],[11,"eq","","",1782,[[["halt_a",4]]]],[11,"eq","","",1783,[[["chsel_a",4]]]],[11,"eq","","",1784,[[["capture_a",4]]]],[11,"eq","atsamd11c::tcc0::evctrl","",1844,[[["evact0_a",4]]]],[11,"eq","","",1845,[[["evact1_a",4]]]],[11,"eq","","",1846,[[["cntsel_a",4]]]],[11,"eq","atsamd11c::tcc0::wave","",1959,[[["wavegen_a",4]]]],[11,"eq","","",1960,[[["ramp_a",4]]]],[11,"eq","atsamd11c::tcc0::waveb","",2028,[[["wavegenb_a",4]]]],[11,"eq","","",2029,[[["rampb_a",4]]]],[11,"eq","atsamd11c::usb::device::ctrla","",2081,[[["mode_a",4]]]],[11,"eq","atsamd11c::usb::device::ctrlb","",2094,[[["spdconf_a",4]]]],[11,"eq","","",2095,[[["lpmhdsk_a",4]]]],[11,"eq","atsamd11c::usb::device::status","",2114,[[["speed_a",4]]]],[11,"eq","","",2115,[[["linestate_a",4]]]],[11,"eq","atsamd11c::usb::device::fsmstatus","",2119,[[["fsmstate_a",4]]]],[11,"eq","atsamd11c::wdt::config","",2223,[[["per_a",4]]]],[11,"eq","","",2224,[[["window_a",4]]]],[11,"eq","atsamd11c::wdt::ewctrl","",2231,[[["ewoffset_a",4]]]],[11,"eq","atsamd11c::wdt::clear","",2246,[[["clear_aw",4]]]],[11,"clone","atsamd11c","",2,[[],["interrupt",4]]],[11,"clone","atsamd11c::generic","",3,[[],["variant",4]]],[11,"clone","atsamd11c::ac::statusa","",40,[[],["wstate0_a",4]]],[11,"clone","atsamd11c::ac::statusc","",44,[[],["wstate0_a",4]]],[11,"clone","atsamd11c::ac::winctrl","",47,[[],["wintsel0_a",4]]],[11,"clone","atsamd11c::ac::compctrl","",53,[[],["speed_a",4]]],[11,"clone","","",54,[[],["intsel_a",4]]],[11,"clone","","",55,[[],["muxneg_a",4]]],[11,"clone","","",56,[[],["muxpos_a",4]]],[11,"clone","","",57,[[],["out_a",4]]],[11,"clone","","",58,[[],["flen_a",4]]],[11,"clone","atsamd11c::adc::refctrl","",86,[[],["refsel_a",4]]],[11,"clone","atsamd11c::adc::avgctrl","",92,[[],["samplenum_a",4]]],[11,"clone","atsamd11c::adc::ctrlb","",101,[[],["ressel_a",4]]],[11,"clone","","",102,[[],["prescaler_a",4]]],[11,"clone","atsamd11c::adc::winctrl","",113,[[],["winmode_a",4]]],[11,"clone","atsamd11c::adc::inputctrl","",122,[[],["muxpos_a",4]]],[11,"clone","","",123,[[],["muxneg_a",4]]],[11,"clone","","",124,[[],["gain_a",4]]],[11,"clone","atsamd11c::dac::ctrlb","",186,[[],["refsel_a",4]]],[11,"clone","atsamd11c::dmac::crcctrl","",232,[[],["crcbeatsize_a",4]]],[11,"clone","","",233,[[],["crcpoly_a",4]]],[11,"clone","","",234,[[],["crcsrc_a",4]]],[11,"clone","atsamd11c::dmac::qosctrl","",255,[[],["wrbqos_a",4]]],[11,"clone","","",256,[[],["fqos_a",4]]],[11,"clone","","",257,[[],["dqos_a",4]]],[11,"clone","atsamd11c::dmac::chctrlb","",307,[[],["evact_a",4]]],[11,"clone","","",308,[[],["lvl_a",4]]],[11,"clone","","",309,[[],["trigsrc_a",4]]],[11,"clone","","",310,[[],["trigact_a",4]]],[11,"clone","","",311,[[],["cmd_a",4]]],[11,"clone","atsamd11c::dsu::did","",371,[[],["series_a",4]]],[11,"clone","","",372,[[],["family_a",4]]],[11,"clone","","",373,[[],["processor_a",4]]],[11,"clone","atsamd11c::eic::nmictrl","",399,[[],["nmisense_a",4]]],[11,"clone","atsamd11c::eic::config","",458,[[],["sense0_a",4]]],[11,"clone","","",459,[[],["sense1_a",4]]],[11,"clone","","",460,[[],["sense2_a",4]]],[11,"clone","","",461,[[],["sense3_a",4]]],[11,"clone","","",462,[[],["sense4_a",4]]],[11,"clone","","",463,[[],["sense5_a",4]]],[11,"clone","","",464,[[],["sense6_a",4]]],[11,"clone","","",465,[[],["sense7_a",4]]],[11,"clone","atsamd11c::evsys::channel","",496,[[],["path_a",4]]],[11,"clone","","",497,[[],["edgsel_a",4]]],[11,"clone","atsamd11c::evsys::user","",507,[[],["channel_a",4]]],[11,"clone","atsamd11c::gclk::clkctrl","",561,[[],["id_a",4]]],[11,"clone","","",562,[[],["gen_a",4]]],[11,"clone","atsamd11c::gclk::genctrl","",571,[[],["src_a",4]]],[11,"clone","atsamd11c::nvmctrl::ctrla","",631,[[],["cmd_a",4]]],[11,"clone","","",632,[[],["cmdex_a",4]]],[11,"clone","atsamd11c::nvmctrl::ctrlb","",639,[[],["rws_a",4]]],[11,"clone","","",640,[[],["sleepprm_a",4]]],[11,"clone","","",641,[[],["readmode_a",4]]],[11,"clone","atsamd11c::nvmctrl::param","",652,[[],["psz_a",4]]],[11,"clone","atsamd11c::pm::sleep","",688,[[],["idle_a",4]]],[11,"clone","atsamd11c::pm::cpusel","",696,[[],["cpudiv_a",4]]],[11,"clone","atsamd11c::pm::apbasel","",701,[[],["apbadiv_a",4]]],[11,"clone","atsamd11c::pm::apbbsel","",706,[[],["apbbdiv_a",4]]],[11,"clone","atsamd11c::pm::apbcsel","",711,[[],["apbcdiv_a",4]]],[11,"clone","atsamd11c::port::pmux0_","",807,[[],["pmuxe_a",4]]],[11,"clone","","",808,[[],["pmuxo_a",4]]],[11,"clone","atsamd11c::rtc::mode0::ctrl","",824,[[],["mode_a",4]]],[11,"clone","","",825,[[],["prescaler_a",4]]],[11,"clone","atsamd11c::rtc::mode1::ctrl","",880,[[],["mode_a",4]]],[11,"clone","","",881,[[],["prescaler_a",4]]],[11,"clone","atsamd11c::rtc::mode2::ctrl","",942,[[],["mode_a",4]]],[11,"clone","","",943,[[],["prescaler_a",4]]],[11,"clone","atsamd11c::rtc::mode2::clock","",993,[[],["hour_a",4]]],[11,"clone","atsamd11c::rtc::mode2::alarm","",1003,[[],["hour_a",4]]],[11,"clone","atsamd11c::rtc::mode2::mask","",1013,[[],["sel_a",4]]],[11,"clone","atsamd11c::sercom0::i2cm::ctrla","",1023,[[],["mode_a",4]]],[11,"clone","atsamd11c::sercom0::i2cs::ctrla","",1089,[[],["mode_a",4]]],[11,"clone","atsamd11c::sercom0::spi::ctrla","",1146,[[],["mode_a",4]]],[11,"clone","atsamd11c::sercom0::usart::ctrla","",1205,[[],["mode_a",4]]],[11,"clone","atsamd11c::sysctrl::xosc","",1342,[[],["gain_a",4]]],[11,"clone","atsamd11c::sysctrl::osc8m","",1378,[[],["presc_a",4]]],[11,"clone","","",1379,[[],["frange_a",4]]],[11,"clone","atsamd11c::sysctrl::bod33","",1414,[[],["action_a",4]]],[11,"clone","","",1415,[[],["psel_a",4]]],[11,"clone","atsamd11c::sysctrl::dpllctrlb","",1442,[[],["filter_a",4]]],[11,"clone","","",1443,[[],["refclk_a",4]]],[11,"clone","","",1444,[[],["ltime_a",4]]],[11,"clone","atsamd11c::tc1::count8::ctrla","",1461,[[],["mode_a",4]]],[11,"clone","","",1462,[[],["wavegen_a",4]]],[11,"clone","","",1463,[[],["prescaler_a",4]]],[11,"clone","","",1464,[[],["prescsync_a",4]]],[11,"clone","atsamd11c::tc1::count8::ctrlbclr","",1483,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tc1::count8::ctrlbset","",1490,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tc1::count8::evctrl","",1506,[[],["evact_a",4]]],[11,"clone","atsamd11c::tc1::count16::ctrla","",1547,[[],["mode_a",4]]],[11,"clone","","",1548,[[],["wavegen_a",4]]],[11,"clone","","",1549,[[],["prescaler_a",4]]],[11,"clone","","",1550,[[],["prescsync_a",4]]],[11,"clone","atsamd11c::tc1::count16::ctrlbclr","",1569,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tc1::count16::ctrlbset","",1576,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tc1::count16::evctrl","",1592,[[],["evact_a",4]]],[11,"clone","atsamd11c::tc1::count32::ctrla","",1630,[[],["mode_a",4]]],[11,"clone","","",1631,[[],["wavegen_a",4]]],[11,"clone","","",1632,[[],["prescaler_a",4]]],[11,"clone","","",1633,[[],["prescsync_a",4]]],[11,"clone","atsamd11c::tc1::count32::ctrlbclr","",1652,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tc1::count32::ctrlbset","",1659,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tc1::count32::evctrl","",1675,[[],["evact_a",4]]],[11,"clone","atsamd11c::tcc0::ctrla","",1715,[[],["resolution_a",4]]],[11,"clone","","",1716,[[],["prescaler_a",4]]],[11,"clone","","",1717,[[],["prescsync_a",4]]],[11,"clone","atsamd11c::tcc0::ctrlbclr","",1734,[[],["idxcmd_a",4]]],[11,"clone","","",1735,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tcc0::ctrlbset","",1745,[[],["idxcmd_a",4]]],[11,"clone","","",1746,[[],["cmd_a",4]]],[11,"clone","atsamd11c::tcc0::fctrla","",1757,[[],["src_a",4]]],[11,"clone","","",1758,[[],["blank_a",4]]],[11,"clone","","",1759,[[],["halt_a",4]]],[11,"clone","","",1760,[[],["chsel_a",4]]],[11,"clone","","",1761,[[],["capture_a",4]]],[11,"clone","atsamd11c::tcc0::fctrlb","",1780,[[],["src_a",4]]],[11,"clone","","",1781,[[],["blank_a",4]]],[11,"clone","","",1782,[[],["halt_a",4]]],[11,"clone","","",1783,[[],["chsel_a",4]]],[11,"clone","","",1784,[[],["capture_a",4]]],[11,"clone","atsamd11c::tcc0::evctrl","",1844,[[],["evact0_a",4]]],[11,"clone","","",1845,[[],["evact1_a",4]]],[11,"clone","","",1846,[[],["cntsel_a",4]]],[11,"clone","atsamd11c::tcc0::wave","",1959,[[],["wavegen_a",4]]],[11,"clone","","",1960,[[],["ramp_a",4]]],[11,"clone","atsamd11c::tcc0::waveb","",2028,[[],["wavegenb_a",4]]],[11,"clone","","",2029,[[],["rampb_a",4]]],[11,"clone","atsamd11c::usb::device::ctrla","",2081,[[],["mode_a",4]]],[11,"clone","atsamd11c::usb::device::ctrlb","",2094,[[],["spdconf_a",4]]],[11,"clone","","",2095,[[],["lpmhdsk_a",4]]],[11,"clone","atsamd11c::usb::device::status","",2114,[[],["speed_a",4]]],[11,"clone","","",2115,[[],["linestate_a",4]]],[11,"clone","atsamd11c::usb::device::fsmstatus","",2119,[[],["fsmstate_a",4]]],[11,"clone","atsamd11c::wdt::config","",2223,[[],["per_a",4]]],[11,"clone","","",2224,[[],["window_a",4]]],[11,"clone","atsamd11c::wdt::ewctrl","",2231,[[],["ewoffset_a",4]]],[11,"clone","atsamd11c::wdt::clear","",2246,[[],["clear_aw",4]]],[11,"nr","atsamd11c","",2,[[]]],[11,"take","","Returns all the core peripherals once",0,[[],[["peripherals",3],["option",4]]]],[11,"steal","","Unchecked version of `Peripherals::take`",0,[[],["peripherals",3]]],[11,"ptr","","Returns a pointer to the register block",2276,[[]]],[11,"enable_trace","","Enables TRACE. This is for example required by the…",2277,[[]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",2277,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",2277,[[]]],[11,"ptr","","Returns a pointer to the register block",2277,[[]]],[11,"ptr","","Returns a pointer to the register block",2278,[[]]],[11,"ptr","","Returns a pointer to the register block",2281,[[]]],[11,"clear_pending","","Clears `interrupt`\'s pending state",2282,[[]]],[11,"mask","","Disables `interrupt`",2282,[[]]],[11,"unmask","","Enables `interrupt`",2282,[[]]],[11,"disable","","Disables `interrupt`",2282,[[]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",2282,[[]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",2282,[[]]],[11,"is_enabled","","Checks if `interrupt` is enabled",2282,[[]]],[11,"is_pending","","Checks if `interrupt` is pending",2282,[[]]],[11,"pend","","Forces `interrupt` into pending state",2282,[[]]],[11,"set_pending","","Forces `interrupt` into pending state",2282,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of `interrupt` to `prio`",2282,[[]]],[11,"unpend","","Clears `interrupt`\'s pending state",2282,[[]]],[11,"ptr","","Returns a pointer to the register block",2282,[[]]],[11,"vect_active","","Returns the active exception number",2283,[[],["vectactive",4]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",2283,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",2283,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",2283,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",2283,[[]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",2283,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",2283,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",2283,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",2283,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",2283,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will pend…",2283,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",2283,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",2283,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",2283,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",2283,[[["systemhandler",4]]]],[11,"ptr","","Returns a pointer to the register block",2283,[[]]],[11,"clear_current","","Clears current value to 0",2284,[[]]],[11,"disable_counter","","Disables counter",2284,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",2284,[[]]],[11,"enable_counter","","Enables counter",2284,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",2284,[[]]],[11,"get_clock_source","","Gets clock source",2284,[[],["systclksource",4]]],[11,"get_current","","Gets current value",2284,[[]]],[11,"get_reload","","Gets reload value",2284,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",2284,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",2284,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",2284,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",2284,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",2284,[[]]],[11,"is_precise","","Checks if the calibration value is precise",2284,[[]]],[11,"set_clock_source","","Sets clock source",2284,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",2284,[[]]],[11,"ptr","","Returns a pointer to the register block",2284,[[]]]],"p":[[3,"CorePeripherals"],[3,"Peripherals"],[4,"Interrupt"],[4,"Variant"],[8,"ResetValue"],[3,"Reg"],[3,"R"],[3,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"LPMUX_W"],[6,"R"],[6,"W"],[3,"START0_W"],[3,"START1_W"],[6,"W"],[3,"COMPEO0_W"],[3,"COMPEO1_W"],[3,"WINEO0_W"],[3,"COMPEI0_W"],[3,"COMPEI1_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[4,"WSTATE0_A"],[6,"WSTATE0_R"],[6,"R"],[6,"R"],[4,"WSTATE0_A"],[6,"WSTATE0_R"],[6,"R"],[4,"WINTSEL0_A"],[3,"WEN0_W"],[6,"WINTSEL0_R"],[3,"WINTSEL0_W"],[6,"R"],[6,"W"],[4,"SPEED_A"],[4,"INTSEL_A"],[4,"MUXNEG_A"],[4,"MUXPOS_A"],[4,"OUT_A"],[4,"FLEN_A"],[3,"ENABLE_W"],[3,"SINGLE_W"],[6,"SPEED_R"],[3,"SPEED_W"],[6,"INTSEL_R"],[3,"INTSEL_W"],[6,"MUXNEG_R"],[3,"MUXNEG_W"],[6,"MUXPOS_R"],[3,"MUXPOS_W"],[3,"SWAP_W"],[6,"OUT_R"],[3,"OUT_W"],[3,"HYST_W"],[6,"FLEN_R"],[3,"FLEN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[4,"REFSEL_A"],[6,"REFSEL_R"],[3,"REFSEL_W"],[3,"REFCOMP_W"],[6,"R"],[6,"W"],[4,"SAMPLENUM_A"],[6,"SAMPLENUM_R"],[3,"SAMPLENUM_W"],[3,"ADJRES_W"],[6,"R"],[6,"W"],[3,"SAMPLEN_W"],[6,"R"],[6,"W"],[4,"RESSEL_A"],[4,"PRESCALER_A"],[3,"DIFFMODE_W"],[3,"LEFTADJ_W"],[3,"FREERUN_W"],[3,"CORREN_W"],[6,"RESSEL_R"],[3,"RESSEL_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[4,"WINMODE_A"],[6,"WINMODE_R"],[3,"WINMODE_W"],[6,"R"],[6,"W"],[3,"FLUSH_W"],[3,"START_W"],[6,"R"],[6,"W"],[4,"MUXPOS_A"],[4,"MUXNEG_A"],[4,"GAIN_A"],[6,"MUXPOS_R"],[3,"MUXPOS_W"],[6,"MUXNEG_R"],[3,"MUXNEG_W"],[3,"INPUTSCAN_W"],[3,"INPUTOFFSET_W"],[6,"GAIN_R"],[3,"GAIN_W"],[6,"R"],[6,"W"],[3,"STARTEI_W"],[3,"SYNCEI_W"],[3,"RESRDYEO_W"],[3,"WINMONEO_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"WINLT_W"],[6,"R"],[6,"W"],[3,"WINUT_W"],[6,"R"],[6,"W"],[3,"GAINCORR_W"],[6,"R"],[6,"W"],[3,"OFFSETCORR_W"],[6,"R"],[6,"W"],[3,"LINEARITY_CAL_W"],[3,"BIAS_CAL_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[4,"REFSEL_A"],[3,"EOEN_W"],[3,"IOEN_W"],[3,"LEFTADJ_W"],[3,"VPD_W"],[3,"BDWP_W"],[6,"REFSEL_R"],[3,"REFSEL_W"],[6,"R"],[6,"W"],[3,"STARTEI_W"],[3,"EMPTYEO_W"],[6,"R"],[6,"W"],[3,"UNDERRUN_W"],[3,"EMPTY_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"UNDERRUN_W"],[3,"EMPTY_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[3,"UNDERRUN_W"],[3,"EMPTY_W"],[3,"SYNCRDY_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DATABUF_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"DMAENABLE_W"],[3,"CRCENABLE_W"],[3,"LVLEN0_W"],[3,"LVLEN1_W"],[3,"LVLEN2_W"],[3,"LVLEN3_W"],[6,"R"],[6,"W"],[4,"CRCBEATSIZE_A"],[4,"CRCPOLY_A"],[4,"CRCSRC_A"],[6,"CRCBEATSIZE_R"],[3,"CRCBEATSIZE_W"],[6,"CRCPOLY_R"],[3,"CRCPOLY_W"],[6,"CRCSRC_R"],[3,"CRCSRC_W"],[6,"R"],[6,"W"],[3,"CRCDATAIN_W"],[6,"R"],[6,"W"],[3,"CRCCHKSUM_W"],[6,"R"],[6,"W"],[3,"CRCBUSY_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"WRBQOS_A"],[4,"FQOS_A"],[4,"DQOS_A"],[6,"WRBQOS_R"],[3,"WRBQOS_W"],[6,"FQOS_R"],[3,"FQOS_W"],[6,"DQOS_R"],[3,"DQOS_W"],[6,"R"],[6,"W"],[3,"SWTRIG0_W"],[3,"SWTRIG1_W"],[3,"SWTRIG2_W"],[3,"SWTRIG3_W"],[3,"SWTRIG4_W"],[3,"SWTRIG5_W"],[6,"R"],[6,"W"],[3,"LVLPRI0_W"],[3,"RRLVLEN0_W"],[3,"LVLPRI1_W"],[3,"RRLVLEN1_W"],[3,"LVLPRI2_W"],[3,"RRLVLEN2_W"],[3,"LVLPRI3_W"],[3,"RRLVLEN3_W"],[6,"R"],[6,"W"],[3,"ID_W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"BASEADDR_W"],[6,"R"],[6,"W"],[3,"WRBADDR_W"],[6,"R"],[6,"W"],[3,"ID_W"],[6,"R"],[6,"W"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[4,"LVL_A"],[4,"TRIGSRC_A"],[4,"TRIGACT_A"],[4,"CMD_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"EVIE_W"],[3,"EVOE_W"],[6,"LVL_R"],[3,"LVL_W"],[6,"TRIGSRC_R"],[3,"TRIGSRC_W"],[6,"TRIGACT_R"],[3,"TRIGACT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"CRC_W"],[3,"MBIST_W"],[3,"CE_W"],[3,"ARR_W"],[3,"SMSA_W"],[6,"W"],[3,"DONE_W"],[3,"CRSTEXT_W"],[3,"BERR_W"],[3,"FAIL_W"],[3,"PERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"AMOD_W"],[3,"ADDR_W"],[6,"R"],[6,"W"],[3,"LENGTH_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[4,"SERIES_A"],[4,"FAMILY_A"],[4,"PROCESSOR_A"],[6,"SERIES_R"],[6,"FAMILY_R"],[6,"PROCESSOR_R"],[6,"R"],[3,"DCFG_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[6,"R"],[4,"NMISENSE_A"],[6,"NMISENSE_R"],[3,"NMISENSE_W"],[3,"NMIFILTEN_W"],[6,"R"],[6,"W"],[3,"NMI_W"],[6,"R"],[6,"W"],[3,"EXTINTEO0_W"],[3,"EXTINTEO1_W"],[3,"EXTINTEO2_W"],[3,"EXTINTEO3_W"],[3,"EXTINTEO4_W"],[3,"EXTINTEO5_W"],[3,"EXTINTEO6_W"],[3,"EXTINTEO7_W"],[6,"R"],[6,"W"],[3,"EXTINT0_W"],[3,"EXTINT1_W"],[3,"EXTINT2_W"],[3,"EXTINT3_W"],[3,"EXTINT4_W"],[3,"EXTINT5_W"],[3,"EXTINT6_W"],[3,"EXTINT7_W"],[6,"R"],[6,"W"],[3,"EXTINT0_W"],[3,"EXTINT1_W"],[3,"EXTINT2_W"],[3,"EXTINT3_W"],[3,"EXTINT4_W"],[3,"EXTINT5_W"],[3,"EXTINT6_W"],[3,"EXTINT7_W"],[6,"R"],[6,"W"],[3,"EXTINT0_W"],[3,"EXTINT1_W"],[3,"EXTINT2_W"],[3,"EXTINT3_W"],[3,"EXTINT4_W"],[3,"EXTINT5_W"],[3,"EXTINT6_W"],[3,"EXTINT7_W"],[6,"R"],[6,"W"],[3,"WAKEUPEN0_W"],[3,"WAKEUPEN1_W"],[3,"WAKEUPEN2_W"],[3,"WAKEUPEN3_W"],[3,"WAKEUPEN4_W"],[3,"WAKEUPEN5_W"],[3,"WAKEUPEN6_W"],[3,"WAKEUPEN7_W"],[6,"R"],[6,"W"],[4,"SENSE0_A"],[4,"SENSE1_A"],[4,"SENSE2_A"],[4,"SENSE3_A"],[4,"SENSE4_A"],[4,"SENSE5_A"],[4,"SENSE6_A"],[4,"SENSE7_A"],[6,"SENSE0_R"],[3,"SENSE0_W"],[3,"FILTEN0_W"],[6,"SENSE1_R"],[3,"SENSE1_W"],[3,"FILTEN1_W"],[6,"SENSE2_R"],[3,"SENSE2_W"],[3,"FILTEN2_W"],[6,"SENSE3_R"],[3,"SENSE3_W"],[3,"FILTEN3_W"],[6,"SENSE4_R"],[3,"SENSE4_W"],[3,"FILTEN4_W"],[6,"SENSE5_R"],[3,"SENSE5_W"],[3,"FILTEN5_W"],[6,"SENSE6_R"],[3,"SENSE6_W"],[3,"FILTEN6_W"],[6,"SENSE7_R"],[3,"SENSE7_W"],[3,"FILTEN7_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"GCLKREQ_W"],[6,"W"],[4,"PATH_A"],[4,"EDGSEL_A"],[3,"CHANNEL_W"],[3,"SWEVT_W"],[3,"EVGEN_W"],[6,"PATH_R"],[3,"PATH_W"],[6,"EDGSEL_R"],[3,"EDGSEL_W"],[6,"R"],[6,"W"],[4,"CHANNEL_A"],[3,"USER_W"],[6,"CHANNEL_R"],[3,"CHANNEL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"OVR0_W"],[3,"OVR1_W"],[3,"OVR2_W"],[3,"OVR3_W"],[3,"OVR4_W"],[3,"OVR5_W"],[3,"EVD0_W"],[3,"EVD1_W"],[3,"EVD2_W"],[3,"EVD3_W"],[3,"EVD4_W"],[3,"EVD5_W"],[6,"R"],[6,"W"],[3,"OVR0_W"],[3,"OVR1_W"],[3,"OVR2_W"],[3,"OVR3_W"],[3,"OVR4_W"],[3,"OVR5_W"],[3,"EVD0_W"],[3,"EVD1_W"],[3,"EVD2_W"],[3,"EVD3_W"],[3,"EVD4_W"],[3,"EVD5_W"],[6,"R"],[6,"W"],[3,"OVR0_W"],[3,"OVR1_W"],[3,"OVR2_W"],[3,"OVR3_W"],[3,"OVR4_W"],[3,"OVR5_W"],[3,"EVD0_W"],[3,"EVD1_W"],[3,"EVD2_W"],[3,"EVD3_W"],[3,"EVD4_W"],[3,"EVD5_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[6,"R"],[6,"W"],[6,"R"],[4,"ID_A"],[4,"GEN_A"],[6,"ID_R"],[3,"ID_W"],[6,"GEN_R"],[3,"GEN_W"],[3,"CLKEN_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[4,"SRC_A"],[3,"ID_W"],[6,"SRC_R"],[3,"SRC_W"],[3,"GENEN_W"],[3,"IDC_W"],[3,"OOV_W"],[3,"OE_W"],[3,"DIVSEL_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[3,"ID_W"],[3,"DIV_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"M0PR_W"],[3,"M1PR_W"],[3,"M2PR_W"],[3,"M3PR_W"],[3,"M4PR_W"],[3,"M5PR_W"],[3,"M6PR_W"],[3,"M7PR_W"],[6,"R"],[6,"W"],[3,"M8PR_W"],[3,"M9PR_W"],[3,"M10PR_W"],[3,"M11PR_W"],[3,"M12PR_W"],[3,"M13PR_W"],[3,"M14PR_W"],[3,"M15PR_W"],[6,"R"],[6,"W"],[3,"SFR_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"WRAP_W"],[3,"POINTER_W"],[6,"R"],[6,"W"],[3,"MASK_W"],[3,"TSTARTEN_W"],[3,"TSTOPEN_W"],[3,"SFRWPRIV_W"],[3,"RAMPRIV_W"],[3,"HALTREQ_W"],[3,"EN_W"],[6,"R"],[6,"W"],[3,"AUTOSTOP_W"],[3,"AUTOHALT_W"],[3,"WATERMARK_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"CMD_A"],[4,"CMDEX_A"],[6,"CMD_R"],[3,"CMD_W"],[6,"CMDEX_R"],[3,"CMDEX_W"],[6,"R"],[6,"W"],[4,"RWS_A"],[4,"SLEEPPRM_A"],[4,"READMODE_A"],[6,"RWS_R"],[3,"RWS_W"],[3,"MANW_W"],[6,"SLEEPPRM_R"],[3,"SLEEPPRM_W"],[6,"READMODE_R"],[3,"READMODE_W"],[3,"CACHEDIS_W"],[6,"R"],[6,"W"],[4,"PSZ_A"],[6,"PSZ_R"],[6,"R"],[3,"READY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"READY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"LOAD_W"],[3,"PROGE_W"],[3,"LOCKE_W"],[3,"NVME_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"WP_W"],[6,"R"],[6,"W"],[3,"WP_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"CFDEN_W"],[3,"BKUPCLK_W"],[6,"R"],[6,"W"],[4,"IDLE_A"],[6,"IDLE_R"],[3,"IDLE_W"],[6,"R"],[6,"W"],[3,"SETDIS_W"],[6,"R"],[6,"W"],[4,"CPUDIV_A"],[6,"CPUDIV_R"],[3,"CPUDIV_W"],[6,"R"],[6,"W"],[4,"APBADIV_A"],[6,"APBADIV_R"],[3,"APBADIV_W"],[6,"R"],[6,"W"],[4,"APBBDIV_A"],[6,"APBBDIV_R"],[3,"APBBDIV_W"],[6,"R"],[6,"W"],[4,"APBCDIV_A"],[6,"APBCDIV_R"],[3,"APBCDIV_W"],[6,"R"],[6,"W"],[3,"HPB0__W"],[3,"HPB1__W"],[3,"HPB2__W"],[3,"DSU__W"],[3,"NVMCTRL__W"],[3,"DMAC__W"],[3,"USB__W"],[6,"R"],[6,"W"],[3,"PAC0__W"],[3,"PM__W"],[3,"SYSCTRL__W"],[3,"GCLK__W"],[3,"WDT__W"],[3,"RTC__W"],[3,"EIC__W"],[6,"R"],[6,"W"],[3,"PAC1__W"],[3,"DSU__W"],[3,"NVMCTRL__W"],[3,"PORT__W"],[3,"DMAC__W"],[3,"USB__W"],[3,"HMATRIX__W"],[6,"R"],[6,"W"],[3,"PAC2__W"],[3,"EVSYS__W"],[3,"SERCOM0__W"],[3,"SERCOM1__W"],[3,"TCC0__W"],[3,"TC1__W"],[3,"TC2__W"],[3,"ADC__W"],[3,"AC__W"],[3,"DAC__W"],[3,"PTC__W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[3,"CFD_W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[3,"CFD_W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[3,"CFD_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"DIR_W"],[6,"R"],[6,"W"],[3,"DIRCLR_W"],[6,"R"],[6,"W"],[3,"DIRSET_W"],[6,"R"],[6,"W"],[3,"DIRTGL_W"],[6,"R"],[6,"W"],[3,"OUT_W"],[6,"R"],[6,"W"],[3,"OUTCLR_W"],[6,"R"],[6,"W"],[3,"OUTSET_W"],[6,"R"],[6,"W"],[3,"OUTTGL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"SAMPLING_W"],[6,"W"],[3,"PINMASK_W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[3,"PMUX_W"],[3,"WRPMUX_W"],[3,"WRPINCFG_W"],[3,"HWSEL_W"],[6,"W"],[4,"PMUXE_A"],[4,"PMUXO_A"],[6,"PMUXE_R"],[3,"PMUXE_W"],[6,"PMUXO_R"],[3,"PMUXO_W"],[6,"R"],[6,"W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[6,"R"],[6,"W"],[3,"MODE0"],[3,"MODE1"],[3,"MODE2"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"MATCHCLR_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"CMPEO0_W"],[3,"OVFEO_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COMP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"CMPEO0_W"],[3,"CMPEO1_W"],[3,"OVFEO_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"COMP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"CLKREP_W"],[3,"MATCHCLR_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"ALARMEO0_W"],[3,"OVFEO_W"],[6,"R"],[6,"W"],[3,"ALARM0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"ALARM0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"ALARM0_W"],[3,"SYNCRDY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[4,"SEL_A"],[6,"SEL_R"],[3,"SEL_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"I2CM"],[3,"I2CS"],[3,"SPI"],[3,"USART"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"PINOUT_W"],[3,"SDAHOLD_W"],[3,"MEXTTOEN_W"],[3,"SEXTTOEN_W"],[3,"SPEED_W"],[3,"SCLSM_W"],[3,"INACTOUT_W"],[3,"LOWTOUTEN_W"],[6,"R"],[6,"W"],[3,"SMEN_W"],[3,"QCEN_W"],[3,"CMD_W"],[3,"ACKACT_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"BAUDLOW_W"],[3,"HSBAUD_W"],[3,"HSBAUDLOW_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUSERR_W"],[3,"ARBLOST_W"],[3,"BUSSTATE_W"],[3,"LOWTOUT_W"],[3,"MEXTTOUT_W"],[3,"SEXTTOUT_W"],[3,"LENERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[3,"LENEN_W"],[3,"HS_W"],[3,"TENBITEN_W"],[3,"LEN_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"PINOUT_W"],[3,"SDAHOLD_W"],[3,"SEXTTOEN_W"],[3,"SPEED_W"],[3,"SCLSM_W"],[3,"LOWTOUTEN_W"],[6,"R"],[6,"W"],[3,"SMEN_W"],[3,"GCMD_W"],[3,"AACKEN_W"],[3,"AMODE_W"],[3,"CMD_W"],[3,"ACKACT_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUSERR_W"],[3,"COLL_W"],[3,"LOWTOUT_W"],[3,"SEXTTOUT_W"],[3,"HS_W"],[6,"R"],[6,"W"],[6,"R"],[3,"GENCEN_W"],[3,"ADDR_W"],[3,"TENBITEN_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[3,"DOPO_W"],[3,"DIPO_W"],[3,"FORM_W"],[3,"CPHA_W"],[3,"CPOL_W"],[3,"DORD_W"],[6,"R"],[6,"W"],[3,"CHSIZE_W"],[3,"PLOADEN_W"],[3,"SSDE_W"],[3,"MSSEN_W"],[3,"AMODE_W"],[3,"RXEN_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"TXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUFOVF_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[3,"SAMPR_W"],[3,"TXPO_W"],[3,"RXPO_W"],[3,"SAMPA_W"],[3,"FORM_W"],[3,"CMODE_W"],[3,"CPOL_W"],[3,"DORD_W"],[6,"R"],[6,"W"],[3,"CHSIZE_W"],[3,"SBMODE_W"],[3,"COLDEN_W"],[3,"SFDE_W"],[3,"ENC_W"],[3,"PMODE_W"],[3,"TXEN_W"],[3,"RXEN_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"RXPL_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"TXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PERR_W"],[3,"FERR_W"],[3,"BUFOVF_W"],[3,"ISF_W"],[3,"COLL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"XOSCRDY_W"],[3,"XOSC32KRDY_W"],[3,"OSC32KRDY_W"],[3,"OSC8MRDY_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"DPLLLCKR_W"],[3,"DPLLLCKF_W"],[3,"DPLLLTO_W"],[6,"R"],[6,"W"],[3,"XOSCRDY_W"],[3,"XOSC32KRDY_W"],[3,"OSC32KRDY_W"],[3,"OSC8MRDY_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"DPLLLCKR_W"],[3,"DPLLLCKF_W"],[3,"DPLLLTO_W"],[6,"R"],[6,"W"],[3,"XOSCRDY_W"],[3,"XOSC32KRDY_W"],[3,"OSC32KRDY_W"],[3,"OSC8MRDY_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"DPLLLCKR_W"],[3,"DPLLLCKF_W"],[3,"DPLLLTO_W"],[6,"R"],[6,"W"],[6,"R"],[4,"GAIN_A"],[3,"ENABLE_W"],[3,"XTALEN_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"GAIN_R"],[3,"GAIN_W"],[3,"AMPGC_W"],[3,"STARTUP_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"XTALEN_W"],[3,"EN32K_W"],[3,"EN1K_W"],[3,"AAMPEN_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"STARTUP_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"EN32K_W"],[3,"EN1K_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"STARTUP_W"],[3,"WRTLOCK_W"],[3,"CALIB_W"],[6,"R"],[6,"W"],[3,"CALIB_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[4,"PRESC_A"],[4,"FRANGE_A"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"PRESC_R"],[3,"PRESC_W"],[3,"CALIB_W"],[6,"FRANGE_R"],[3,"FRANGE_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"MODE_W"],[3,"STABLE_W"],[3,"LLAW_W"],[3,"USBCRM_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"CCDIS_W"],[3,"QLDIS_W"],[3,"BPLCKC_W"],[3,"WAITLOCK_W"],[6,"R"],[6,"W"],[3,"FINE_W"],[3,"COARSE_W"],[6,"R"],[6,"W"],[3,"MUL_W"],[3,"FSTEP_W"],[3,"CSTEP_W"],[6,"R"],[6,"W"],[3,"READREQ_W"],[6,"W"],[4,"ACTION_A"],[4,"PSEL_A"],[3,"ENABLE_W"],[3,"HYST_W"],[6,"ACTION_R"],[3,"ACTION_W"],[3,"RUNSTDBY_W"],[3,"MODE_W"],[3,"CEN_W"],[6,"PSEL_R"],[3,"PSEL_W"],[3,"LEVEL_W"],[6,"R"],[6,"W"],[3,"TSEN_W"],[3,"BGOUTEN_W"],[3,"CALIB_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"R"],[6,"W"],[3,"LDR_W"],[3,"LDRFRAC_W"],[6,"R"],[6,"W"],[4,"FILTER_A"],[4,"REFCLK_A"],[4,"LTIME_A"],[6,"FILTER_R"],[3,"FILTER_W"],[3,"LPEN_W"],[3,"WUF_W"],[6,"REFCLK_R"],[3,"REFCLK_W"],[6,"LTIME_R"],[3,"LTIME_W"],[3,"LBYPASS_W"],[3,"DIV_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT8"],[3,"COUNT16"],[3,"COUNT32"],[4,"MODE_A"],[4,"WAVEGEN_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"WAVEGEN_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"WAVEGEN_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"RCONT_W"],[3,"RREQ_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"SYNCRDY_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"RESOLUTION_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"RESOLUTION_R"],[3,"RESOLUTION_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[3,"ALOCK_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[3,"CPTEN2_W"],[3,"CPTEN3_W"],[6,"R"],[6,"W"],[4,"IDXCMD_A"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"IDXCMD_R"],[3,"IDXCMD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"IDXCMD_A"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"IDXCMD_R"],[3,"IDXCMD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[6,"R"],[4,"SRC_A"],[4,"BLANK_A"],[4,"HALT_A"],[4,"CHSEL_A"],[4,"CAPTURE_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"KEEP_W"],[3,"QUAL_W"],[6,"BLANK_R"],[3,"BLANK_W"],[3,"RESTART_W"],[6,"HALT_R"],[3,"HALT_W"],[6,"CHSEL_R"],[3,"CHSEL_W"],[6,"CAPTURE_R"],[3,"CAPTURE_W"],[3,"BLANKPRESC_W"],[3,"BLANKVAL_W"],[3,"FILTERVAL_W"],[6,"R"],[6,"W"],[4,"SRC_A"],[4,"BLANK_A"],[4,"HALT_A"],[4,"CHSEL_A"],[4,"CAPTURE_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"KEEP_W"],[3,"QUAL_W"],[6,"BLANK_R"],[3,"BLANK_W"],[3,"RESTART_W"],[6,"HALT_R"],[3,"HALT_W"],[6,"CHSEL_R"],[3,"CHSEL_W"],[6,"CAPTURE_R"],[3,"CAPTURE_W"],[3,"BLANKPRESC_W"],[3,"BLANKVAL_W"],[3,"FILTERVAL_W"],[6,"R"],[6,"W"],[3,"OTMX_W"],[3,"DTIEN0_W"],[3,"DTIEN1_W"],[3,"DTIEN2_W"],[3,"DTIEN3_W"],[3,"DTLS_W"],[3,"DTHS_W"],[6,"R"],[6,"W"],[3,"NRE0_W"],[3,"NRE1_W"],[3,"NRE2_W"],[3,"NRE3_W"],[3,"NRE4_W"],[3,"NRE5_W"],[3,"NRE6_W"],[3,"NRE7_W"],[3,"NRV0_W"],[3,"NRV1_W"],[3,"NRV2_W"],[3,"NRV3_W"],[3,"NRV4_W"],[3,"NRV5_W"],[3,"NRV6_W"],[3,"NRV7_W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"INVEN2_W"],[3,"INVEN3_W"],[3,"INVEN4_W"],[3,"INVEN5_W"],[3,"INVEN6_W"],[3,"INVEN7_W"],[3,"FILTERVAL0_W"],[3,"FILTERVAL1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[3,"FDDBD_W"],[6,"R"],[6,"W"],[4,"EVACT0_A"],[4,"EVACT1_A"],[4,"CNTSEL_A"],[6,"EVACT0_R"],[3,"EVACT0_W"],[6,"EVACT1_R"],[3,"EVACT1_W"],[6,"CNTSEL_R"],[3,"CNTSEL_W"],[3,"OVFEO_W"],[3,"TRGEO_W"],[3,"CNTEO_W"],[3,"TCINV0_W"],[3,"TCINV1_W"],[3,"TCEI0_W"],[3,"TCEI1_W"],[3,"MCEI0_W"],[3,"MCEI1_W"],[3,"MCEI2_W"],[3,"MCEI3_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[3,"MCEO2_W"],[3,"MCEO3_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[6,"R"],[6,"W"],[3,"DFS_W"],[3,"PATTBV_W"],[3,"WAVEBV_W"],[3,"PERBV_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"CCBV0_W"],[3,"CCBV1_W"],[3,"CCBV2_W"],[3,"CCBV3_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PGE0_W"],[3,"PGE1_W"],[3,"PGE2_W"],[3,"PGE3_W"],[3,"PGE4_W"],[3,"PGE5_W"],[3,"PGE6_W"],[3,"PGE7_W"],[3,"PGV0_W"],[3,"PGV1_W"],[3,"PGV2_W"],[3,"PGV3_W"],[3,"PGV4_W"],[3,"PGV5_W"],[3,"PGV6_W"],[3,"PGV7_W"],[6,"R"],[6,"W"],[4,"WAVEGEN_A"],[4,"RAMP_A"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"RAMP_R"],[3,"RAMP_W"],[3,"CIPEREN_W"],[3,"CICCEN0_W"],[3,"CICCEN1_W"],[3,"CICCEN2_W"],[3,"CICCEN3_W"],[3,"POL0_W"],[3,"POL1_W"],[3,"POL2_W"],[3,"POL3_W"],[3,"SWAP0_W"],[3,"SWAP1_W"],[3,"SWAP2_W"],[3,"SWAP3_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHERCY_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"PGEB0_W"],[3,"PGEB1_W"],[3,"PGEB2_W"],[3,"PGEB3_W"],[3,"PGEB4_W"],[3,"PGEB5_W"],[3,"PGEB6_W"],[3,"PGEB7_W"],[3,"PGVB0_W"],[3,"PGVB1_W"],[3,"PGVB2_W"],[3,"PGVB3_W"],[3,"PGVB4_W"],[3,"PGVB5_W"],[3,"PGVB6_W"],[3,"PGVB7_W"],[6,"R"],[6,"W"],[4,"WAVEGENB_A"],[4,"RAMPB_A"],[6,"WAVEGENB_R"],[3,"WAVEGENB_W"],[6,"RAMPB_R"],[3,"RAMPB_W"],[3,"CIPERENB_W"],[3,"CICCENB0_W"],[3,"CICCENB1_W"],[3,"CICCENB2_W"],[3,"CICCENB3_W"],[3,"POLB0_W"],[3,"POLB1_W"],[3,"POLB2_W"],[3,"POLB3_W"],[3,"SWAPB0_W"],[3,"SWAPB1_W"],[3,"SWAPB2_W"],[3,"SWAPB3_W"],[6,"R"],[6,"W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"PERB_W"],[6,"R"],[6,"W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"DITHERCYB_W"],[3,"CCB_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"DEVICE"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"R"],[6,"W"],[6,"R"],[3,"CQOS_W"],[3,"DQOS_W"],[6,"R"],[6,"W"],[4,"SPDCONF_A"],[4,"LPMHDSK_A"],[3,"DETACH_W"],[3,"UPRSM_W"],[6,"SPDCONF_R"],[3,"SPDCONF_W"],[3,"NREPLY_W"],[3,"TSTJ_W"],[3,"TSTK_W"],[3,"TSTPCKT_W"],[3,"OPMODE2_W"],[3,"GNAK_W"],[6,"LPMHDSK_R"],[3,"LPMHDSK_W"],[6,"R"],[6,"W"],[3,"DADD_W"],[3,"ADDEN_W"],[6,"R"],[6,"W"],[4,"SPEED_A"],[4,"LINESTATE_A"],[6,"SPEED_R"],[6,"LINESTATE_R"],[6,"R"],[4,"FSMSTATE_A"],[6,"FSMSTATE_R"],[6,"R"],[6,"R"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DESCADD_W"],[6,"R"],[6,"W"],[3,"TRANSP_W"],[3,"TRANSN_W"],[3,"TRIM_W"],[6,"R"],[6,"W"],[3,"EPTYPE0_W"],[3,"EPTYPE1_W"],[3,"NYETDIS_W"],[6,"R"],[6,"W"],[3,"DTGLOUT_W"],[3,"DTGLIN_W"],[3,"CURBK_W"],[3,"STALLRQ0_W"],[3,"STALLRQ1_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[3,"DTGLOUT_W"],[3,"DTGLIN_W"],[3,"CURBK_W"],[3,"STALLRQ0_W"],[3,"STALLRQ1_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[6,"R"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"ENABLE_W"],[3,"WEN_W"],[3,"ALWAYSON_W"],[6,"R"],[6,"W"],[4,"PER_A"],[4,"WINDOW_A"],[6,"PER_R"],[3,"PER_W"],[6,"WINDOW_R"],[3,"WINDOW_W"],[6,"R"],[6,"W"],[4,"EWOFFSET_A"],[6,"EWOFFSET_R"],[3,"EWOFFSET_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[6,"R"],[4,"CLEAR_AW"],[3,"CLEAR_W"],[6,"W"],[3,"AC"],[3,"ADC"],[3,"DAC"],[3,"DMAC"],[3,"DSU"],[3,"EIC"],[3,"EVSYS"],[3,"GCLK"],[3,"HMATRIX"],[3,"MTB"],[3,"NVMCTRL"],[3,"PAC0"],[3,"PAC1"],[3,"PAC2"],[3,"PM"],[3,"PORT"],[3,"PORT_IOBUS"],[3,"RTC"],[3,"SERCOM0"],[3,"SERCOM1"],[3,"SYSCTRL"],[3,"TC1"],[3,"TC2"],[3,"TCC0"],[3,"USB"],[3,"WDT"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"WINCTRL"],[6,"COMPCTRL"],[6,"SCALER"],[6,"CTRLA"],[6,"REFCTRL"],[6,"AVGCTRL"],[6,"SAMPCTRL"],[6,"CTRLB"],[6,"WINCTRL"],[6,"SWTRIG"],[6,"INPUTCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"WINLT"],[6,"WINUT"],[6,"GAINCORR"],[6,"OFFSETCORR"],[6,"CALIB"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DATA"],[6,"DATABUF"],[6,"CTRL"],[6,"CRCCTRL"],[6,"CRCDATAIN"],[6,"CRCCHKSUM"],[6,"CRCSTATUS"],[6,"DBGCTRL"],[6,"QOSCTRL"],[6,"SWTRIGCTRL"],[6,"PRICTRL0"],[6,"INTPEND"],[6,"BASEADDR"],[6,"WRBADDR"],[6,"CHID"],[6,"CHCTRLA"],[6,"CHCTRLB"],[6,"CHINTENCLR"],[6,"CHINTENSET"],[6,"CHINTFLAG"],[6,"CTRL"],[6,"STATUSA"],[6,"ADDR"],[6,"LENGTH"],[6,"DATA"],[6,"DCC"],[6,"DCFG"],[6,"CTRL"],[6,"NMICTRL"],[6,"NMIFLAG"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"WAKEUP"],[6,"CONFIG"],[6,"CTRL"],[6,"CHANNEL"],[6,"USER"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CTRL"],[6,"CLKCTRL"],[6,"GENCTRL"],[6,"GENDIV"],[6,"PRAS"],[6,"PRBS"],[6,"SFR"],[6,"POSITION"],[6,"MASTER"],[6,"FLOW"],[6,"ITCTRL"],[6,"CLAIMSET"],[6,"CLAIMCLR"],[6,"LOCKACCESS"],[6,"CTRLA"],[6,"CTRLB"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"WPCLR"],[6,"WPSET"],[6,"CTRL"],[6,"SLEEP"],[6,"EXTCTRL"],[6,"CPUSEL"],[6,"APBASEL"],[6,"APBBSEL"],[6,"APBCSEL"],[6,"AHBMASK"],[6,"APBAMASK"],[6,"APBBMASK"],[6,"APBCMASK"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DIR"],[6,"DIRCLR"],[6,"DIRSET"],[6,"DIRTGL"],[6,"OUT"],[6,"OUTCLR"],[6,"OUTSET"],[6,"OUTTGL"],[6,"CTRL"],[6,"WRCONFIG"],[6,"PMUX0_"],[6,"PINCFG0_"],[6,"CTRL"],[6,"READREQ"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"COUNT"],[6,"COMP"],[6,"CTRL"],[6,"READREQ"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"COUNT"],[6,"PER"],[6,"COMP"],[6,"CTRL"],[6,"READREQ"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"CLOCK"],[6,"ALARM"],[6,"MASK"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"BAUD_FRAC_MODE"],[6,"BAUD_FRACFP_MODE"],[6,"BAUD_USARTFP_MODE"],[6,"RXPL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"DATA"],[6,"DBGCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"XOSC"],[6,"XOSC32K"],[6,"OSC32K"],[6,"OSCULP32K"],[6,"OSC8M"],[6,"DFLLCTRL"],[6,"DFLLVAL"],[6,"DFLLMUL"],[6,"DFLLSYNC"],[6,"BOD33"],[6,"VREF"],[6,"DPLLCTRLA"],[6,"DPLLRATIO"],[6,"DPLLCTRLB"],[6,"CTRLA"],[6,"READREQ"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"CTRLC"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"COUNT"],[6,"PER"],[6,"CC"],[6,"CTRLA"],[6,"READREQ"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"CTRLC"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"COUNT"],[6,"CC"],[6,"CTRLA"],[6,"READREQ"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"CTRLC"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"COUNT"],[6,"CC"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"FCTRLA"],[6,"FCTRLB"],[6,"WEXCTRL"],[6,"DRVCTRL"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"COUNT"],[6,"COUNT_DITH4"],[6,"COUNT_DITH5"],[6,"COUNT_DITH6"],[6,"PATT"],[6,"WAVE"],[6,"PER"],[6,"PER_DITH4"],[6,"PER_DITH5"],[6,"PER_DITH6"],[6,"CC"],[6,"CC_DITH4"],[6,"CC_DITH5"],[6,"CC_DITH6"],[6,"PATTB"],[6,"WAVEB"],[6,"PERB"],[6,"PERB_DITH4"],[6,"PERB_DITH5"],[6,"PERB_DITH6"],[6,"CCB"],[6,"CCB_DITH4"],[6,"CCB_DITH5"],[6,"CCB_DITH6"],[6,"CTRLA"],[6,"QOSCTRL"],[6,"CTRLB"],[6,"DADD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DESCADD"],[6,"PADCAL"],[6,"EPCFG"],[6,"EPSTATUSCLR"],[6,"EPSTATUSSET"],[6,"EPINTFLAG"],[6,"EPINTENCLR"],[6,"EPINTENSET"],[6,"CTRL"],[6,"CONFIG"],[6,"EWCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CLEAR"]]},\
"atsamd_hal":{"doc":"","i":[[0,"typelevel","atsamd_hal","Module supporting type-level programming",null,null],[3,"NoneT","atsamd_hal::typelevel","Type-level version of the None variant",null,null],[0,"common","atsamd_hal","",null,null],[4,"ResetCause","atsamd_hal::common","ResetCause represents the reason the MCU was reset.",null,null],[13,"Unknown","","",0,null],[13,"POR","","",0,null],[13,"BOD12","","",0,null],[13,"BOD33","","",0,null],[13,"External","","",0,null],[13,"Watchdog","","",0,null],[13,"System","","",0,null],[5,"reset_cause","","Returns the cause of the last reset.",null,[[["pm",3]],["resetcause",4]]],[5,"split_serial_number","","Returns the serial number of the chip as 4 32-bit…",null,[[]]],[5,"serial_number","","Returns the serial number of the chip as an array of…",null,[[]]],[0,"delay","","Delays",null,null],[3,"Delay","atsamd_hal::common::delay","System timer (SysTick) as a delay provider",null,null],[11,"new","","Configures the system timer (SysTick) as a delay provider",1,[[["syst",3],["genericclockcontroller",3]]]],[11,"free","","Releases the system timer (SysTick) resource",1,[[],["syst",3]]],[0,"gpio","atsamd_hal::common","GPIOThe GPIO module is used to configure GPIO pins through…",null,null],[0,"v1","atsamd_hal::common::gpio","Version 1 of the GPIO moduleThis module is a compatibility…",null,null],[3,"Pin","atsamd_hal::common::gpio::v1","Represents a GPIO pin with a corresponding `PinId` and…",null,null],[3,"Port","","Opaque port reference",null,null],[3,"Parts","","Holds the GPIO Port peripheral and broken out pin instances",null,null],[12,"port","","Opaque port reference",2,null],[12,"pa2","","",2,null],[12,"pa4","","",2,null],[12,"pa5","","",2,null],[12,"pa8","","",2,null],[12,"pa9","","",2,null],[12,"pa14","","",2,null],[12,"pa15","","",2,null],[12,"pa24","","",2,null],[12,"pa25","","",2,null],[12,"pa28","","",2,null],[12,"pa30","","",2,null],[12,"pa31","","",2,null],[6,"Input","","Represents a pin configured for input. The MODE type is…",null,null],[6,"Output","","Represents a pin configured for output. The MODE type is…",null,null],[6,"Floating","","Floating Input",null,null],[6,"PullDown","","Pulled down Input",null,null],[6,"PullUp","","Pulled up Input",null,null],[6,"PushPull","","Totem Pole aka Push-Pull",null,null],[6,"OpenDrain","","Open drain output. The SAMD5x/E5x chips don\'t actually…",null,null],[6,"ReadableOpenDrain","","Open drain output, which can be read when not driven The…",null,null],[6,"PfA","","Peripheral Function A",null,null],[6,"PfB","","Peripheral Function B",null,null],[6,"PfC","","Peripheral Function C",null,null],[6,"PfD","","Peripheral Function D",null,null],[6,"PfE","","Peripheral Function E",null,null],[6,"PfF","","Peripheral Function F",null,null],[6,"PfG","","Peripheral Function G",null,null],[6,"Pa2","","Represents the IO pin with the matching name",null,null],[6,"Pa4","","Represents the IO pin with the matching name",null,null],[6,"Pa5","","Represents the IO pin with the matching name",null,null],[6,"Pa8","","Represents the IO pin with the matching name",null,null],[6,"Pa9","","Represents the IO pin with the matching name",null,null],[6,"Pa14","","Represents the IO pin with the matching name",null,null],[6,"Pa15","","Represents the IO pin with the matching name",null,null],[6,"Pa24","","Represents the IO pin with the matching name",null,null],[6,"Pa25","","Represents the IO pin with the matching name",null,null],[6,"Pa28","","Represents the IO pin with the matching name",null,null],[6,"Pa30","","Represents the IO pin with the matching name",null,null],[6,"Pa31","","Represents the IO pin with the matching name",null,null],[8,"GpioExt","","The GpioExt trait allows splitting the PORT hardware into…",null,null],[16,"Parts","","",3,null],[10,"split","","Consume and split the device into its constitent parts",3,[[]]],[8,"IntoFunction","","A trait that makes it easier to generically manage…",null,null],[10,"into_function","","Consume the pin and configure it to operate in the mode T.",4,[[["port",3]]]],[11,"into_floating_input","","Configures the pin to operate as a floating input",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_pull_down_input","","Configures the pin to operate as a pulled down input pin",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_pull_up_input","","Configures the pin to operate as a pulled up input pin",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_open_drain_output","","Configures the pin to operate as an open drain output",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_readable_open_drain_output","","Configures the pin to operate as an open drain output…",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_push_pull_output","","Configures the pin to operate as a push-pull output",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_function_a","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfa",6],["pin",3]]]],[11,"into_function_b","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfb",6]]]],[11,"into_function_c","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfc",6]]]],[11,"into_function_d","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfd",6]]]],[11,"into_function_e","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfe",6],["pin",3]]]],[11,"into_function_f","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pff",6]]]],[11,"into_function_g","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfg",6]]]],[11,"internal_pull_up","","Control state of the internal pull up",5,[[["port",3]]]],[11,"toggle","","Toggle the logic level of the pin; if it is currently…",5,[[]]],[0,"v2","atsamd_hal::common::gpio","Version 2 of the GPIO moduleThe new API provides two…",null,null],[0,"pin","atsamd_hal::common::gpio::v2","Type-level module for GPIO pinsThis module provides a…",null,null],[3,"Disabled","atsamd_hal::common::gpio::v2::pin","Type-level variant of [`PinMode`] for disabled modes",null,null],[3,"Input","","Type-level variant of [`PinMode`] for input modes",null,null],[3,"Output","","Type-level variant of [`PinMode`] for output modes",null,null],[3,"Alternate","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[3,"Pin","","A type-level GPIO pin, parameterized by [`PinId`] and…",null,null],[3,"Pins","","Collection of all the individual [`Pin`]s",null,null],[12,"pa02","","Pin PA02",6,null],[12,"pa04","","Pin PA04",6,null],[12,"pa05","","Pin PA05",6,null],[12,"pa08","","Pin PA08",6,null],[12,"pa09","","Pin PA09",6,null],[12,"pa14","","Pin PA14",6,null],[12,"pa15","","Pin PA15",6,null],[12,"pa24","","Pin PA24",6,null],[12,"pa25","","Pin PA25",6,null],[12,"pa28","","Pin PA28",6,null],[12,"pa30","","Pin PA30",6,null],[12,"pa31","","Pin PA31",6,null],[4,"Floating","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PullDown","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PullUp","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PushPull","","Type-level variant of [`OutputConfig`] for a push-pull…",null,null],[4,"Readable","","Type-level variant of [`OutputConfig`] for a readable…",null,null],[4,"A","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"B","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"C","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"D","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"E","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"F","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"G","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"GroupA","","Type-level variant of `Group`",null,null],[4,"PA02","","Pin ID representing pin PA02",null,null],[4,"PA04","","Pin ID representing pin PA04",null,null],[4,"PA05","","Pin ID representing pin PA05",null,null],[4,"PA08","","Pin ID representing pin PA08",null,null],[4,"PA09","","Pin ID representing pin PA09",null,null],[4,"PA14","","Pin ID representing pin PA14",null,null],[4,"PA15","","Pin ID representing pin PA15",null,null],[4,"PA24","","Pin ID representing pin PA24",null,null],[4,"PA25","","Pin ID representing pin PA25",null,null],[4,"PA28","","Pin ID representing pin PA28",null,null],[4,"PA30","","Pin ID representing pin PA30",null,null],[4,"PA31","","Pin ID representing pin PA31",null,null],[6,"FloatingDisabled","","Type-level variant of [`PinMode`] for floating disabled mode",null,null],[6,"PullDownDisabled","","Type-level variant of [`PinMode`] for pull-down disabled…",null,null],[6,"PullUpDisabled","","Type-level variant of [`PinMode`] for pull-up disabled mode",null,null],[6,"Reset","","Type alias for the [`PinMode`] at reset",null,null],[6,"FloatingInput","","Type-level variant of [`PinMode`] for floating input mode",null,null],[6,"PullDownInput","","Type-level variant of [`PinMode`] for pull-down input mode",null,null],[6,"PullUpInput","","Type-level variant of [`PinMode`] for pull-up input mode",null,null],[6,"PushPullOutput","","Type-level variant of [`PinMode`] for push-pull output mode",null,null],[6,"ReadableOutput","","Type-level variant of [`PinMode`] for readable push-pull…",null,null],[6,"AlternateA","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateB","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateC","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateD","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateE","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateF","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateG","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"ConcretePin","","Type alias to recover the corresponding concrete [`Pin`]…",null,null],[8,"DisabledConfig","","Type-level `enum` for disabled configurations",null,null],[18,"DYN","","Corresponding `DynDisabled`",7,null],[18,"PULLEN","","Value of the PULLEN field in this configuration",7,null],[18,"OUT","","Value of the OUT field in this configuration",7,null],[8,"InputConfig","","Type-level `enum` for input configurations",null,null],[18,"DYN","","Corresponding `DynInput`",8,null],[18,"PULLEN","","Value of the PULLEN field in this configuration",8,null],[18,"OUT","","Value of the OUT field in this configuration",8,null],[8,"OutputConfig","","Type-level `enum` for output configurations",null,null],[18,"DYN","","Corresponding `DynOutput`",9,null],[18,"INEN","","Value of the INEN field in this configuration",9,null],[8,"AlternateConfig","","Type-level `enum` for alternate peripheral function…",null,null],[18,"DYN","","Corresponding `DynAlternate`",10,null],[18,"PMUX","","Value of the PMUXE/PMUXO field in this configuration",10,null],[8,"PinMode","","Type-level `enum` representing pin modes",null,null],[18,"DYN","","Corresponding `DynPinMode`",11,null],[18,"DIR","","Value of the DIR field in this mode",11,null],[18,"INEN","","Value of the INEN field in this mode",11,null],[18,"PULLEN","","Value of the PULLEN field in this mode",11,null],[18,"OUT","","Value of the OUT field in this mode",11,null],[18,"PMUXEN","","Value of the PMUXEN field in this mode",11,null],[18,"PMUX","","Value of the PMUXE/PMUXO field in this mode",11,null],[11,"into_mode","","Convert a [`Pin`] into this [`PinMode`]",11,[[["pin",3]],["pin",3]]],[8,"PinId","","Type-level `enum` for pin IDs",null,null],[18,"DYN","","Corresponding `DynPinId`",12,null],[16,"Group","","Pin group; Also acts as zero-sized reference to the GROUP…",12,null],[18,"NUM","","Pin number",12,null],[8,"AnyPin","","Meta-type representing any [`Pin`]",null,null],[16,"Id","","[`PinId`] of the corresponding [`Pin`]",13,null],[16,"Mode","","[`PinMode`] of the corresponding [`Pin`]",13,null],[10,"as_concrete","","Convert a type that implements [`AnyPin`] to a concrete…",13,[[],["concretepin",6]]],[10,"as_concrete_ref","","Implement `as_concrete` for references",13,[[],["concretepin",6]]],[10,"as_concrete_mut","","Implement `as_concrete` for mutable references",13,[[],["concretepin",6]]],[11,"into_mode","","Convert the pin to the requested [`PinMode`]",13,[[],[["pinmode",8],["pin",3]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",13,[[],[["floatingdisabled",6],["pin",3]]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",13,[[],[["pulldowndisabled",6],["pin",3]]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",13,[[],[["pin",3],["pullupdisabled",6]]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",13,[[],[["floatinginput",6],["pin",3]]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",13,[[],[["pin",3],["pulldowninput",6]]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",13,[[],[["pullupinput",6],["pin",3]]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",13,[[],[["pushpulloutput",6],["pin",3]]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",13,[[],[["pin",3],["readableoutput",6]]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",13,[[],[["pin",3],["alternate",3]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",13,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",13,[[]]],[8,"OptionalPin","","Meta-type representing an optional [`Pin`].",null,null],[8,"SomePin","","Meta-type representing a valid [`Pin`].",null,null],[11,"as_any","","Convert a [`Pin`] to a type that implements [`AnyPin`]",14,[[]]],[11,"as_any_ref","","Implement `as_any` for references",14,[[]]],[11,"as_any_mut","","Implement `as_any` for mutable references",14,[[]]],[11,"into_mode","","Convert the pin to the requested [`PinMode`]",14,[[],[["pinmode",8],["pin",3]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",14,[[],[["pin",3],["floatingdisabled",6]]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",14,[[],[["pulldowndisabled",6],["pin",3]]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",14,[[],[["pullupdisabled",6],["pin",3]]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",14,[[],[["floatinginput",6],["pin",3]]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",14,[[],[["pin",3],["pulldowninput",6]]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",14,[[],[["pullupinput",6],["pin",3]]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",14,[[],[["pin",3],["pushpulloutput",6]]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",14,[[],[["pin",3],["readableoutput",6]]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",14,[[],[["pin",3],["alternate",3]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",14,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",14,[[]]],[11,"new","","Take ownership of the PAC `PORT` and split it into…",6,[[["port",3]],["pins",3]]],[11,"port","","Get a reference to the PAC `PORT`",6,[[],["port",3]]],[11,"free","","Consume the [`Pins`] struct and return the PAC `PORT`",6,[[],["port",3]]],[0,"dynpin","atsamd_hal::common::gpio::v2","Type-erased, value-level module for GPIO pinsAlthough the…",null,null],[3,"DynPinId","atsamd_hal::common::gpio::v2::dynpin","Value-level `struct` representing pin IDs",null,null],[12,"group","","",15,null],[12,"num","","",15,null],[3,"DynPin","","A value-level pin, parameterized by [DynPinId] and…",null,null],[4,"Error","","GPIO error type",null,null],[13,"InvalidPinType","","The pin did not have the correct ID or mode for the…",16,null],[4,"DynDisabled","","Value-level `enum` for disabled configurations",null,null],[13,"Floating","","",17,null],[13,"PullDown","","",17,null],[13,"PullUp","","",17,null],[4,"DynInput","","Value-level `enum` for input configurations",null,null],[13,"Floating","","",18,null],[13,"PullDown","","",18,null],[13,"PullUp","","",18,null],[4,"DynOutput","","Value-level `enum` for output configurations",null,null],[13,"PushPull","","",19,null],[13,"Readable","","",19,null],[4,"DynAlternate","","Value-level `enum` for alternate peripheral function…",null,null],[13,"A","","",20,null],[13,"B","","",20,null],[13,"C","","",20,null],[13,"D","","",20,null],[13,"E","","",20,null],[13,"F","","",20,null],[13,"G","","",20,null],[4,"DynPinMode","","Value-level `enum` representing pin modes",null,null],[13,"Disabled","","",21,null],[13,"Input","","",21,null],[13,"Output","","",21,null],[13,"Alternate","","",21,null],[4,"DynGroup","","Value-level `enum` for pin groups",null,null],[13,"A","","",22,null],[17,"DYN_FLOATING_DISABLED","","Value-level variant of [DynPinMode] for floating disabled…",null,null],[17,"DYN_PULL_DOWN_DISABLED","","Value-level variant of [DynPinMode] for pull-down disabled…",null,null],[17,"DYN_PULL_UP_DISABLED","","Value-level variant of [DynPinMode] for pull-up disabled…",null,null],[17,"DYN_FLOATING_INPUT","","Value-level variant of [DynPinMode] for floating input mode",null,null],[17,"DYN_PULL_DOWN_INPUT","","Value-level variant of [DynPinMode] for pull-down input mode",null,null],[17,"DYN_PULL_UP_INPUT","","Value-level variant of [DynPinMode] for pull-up input mode",null,null],[17,"DYN_PUSH_PULL_OUTPUT","","Value-level variant of [DynPinMode] for push-pull output…",null,null],[17,"DYN_READABLE_OUTPUT","","Value-level variant of [DynPinMode] for readable push-pull…",null,null],[17,"DYN_ALTERNATE_A","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_B","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_C","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_D","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_E","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_F","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_G","","Value-level variant of [DynPinMode] for alternate…",null,null],[11,"id","","Return a copy of the pin ID",23,[[],["dynpinid",3]]],[11,"mode","","Return a copy of the pin mode",23,[[],["dynpinmode",4]]],[11,"into_mode","","Convert the pin to the requested [DynPinMode]",23,[[["dynpinmode",4]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",23,[[]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",23,[[]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",23,[[]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",23,[[]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",23,[[]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",23,[[]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",23,[[]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",23,[[]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",23,[[["dynalternate",4]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",23,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",23,[[]]],[0,"prelude","atsamd_hal::common","Import the prelude to gain convenient access to helper…",null,null],[8,"_atsamd_hal_embedded_hal_digital_v2_InputPin","atsamd_hal::common::prelude","Single digital input pin",null,null],[16,"Error","","Error type",24,null],[10,"is_high","","Is the input pin high?",24,[[],["result",4]]],[10,"is_low","","Is the input pin low?",24,[[],["result",4]]],[8,"_atsamd_hal_embedded_hal_digital_v2_OutputPin","","Single digital push-pull output pin",null,null],[16,"Error","","Error type",25,null],[10,"set_low","","Drives the pin low",25,[[],["result",4]]],[10,"set_high","","Drives the pin high",25,[[],["result",4]]],[8,"_atsamd_hal_embedded_hal_digital_v2_ToggleableOutputPin","","Output pin that can be toggled",null,null],[16,"Error","","Error type",26,null],[10,"toggle","","Toggle pin output.",26,[[],["result",4]]],[8,"_embedded_hal_adc_OneShot","","ADCs that sample on single channels per request, and do so…",null,null],[16,"Error","","Error type returned by ADC methods",27,null],[10,"read","","Request that the ADC begin a conversion on the specified pin",27,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_blocking_delay_DelayMs","","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",28,[[]]],[8,"_embedded_hal_blocking_delay_DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",29,[[]]],[8,"_embedded_hal_blocking_i2c_Read","","Blocking read",null,null],[16,"Error","","Error type",30,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",30,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_Write","","Blocking write",null,null],[16,"Error","","Error type",31,null],[10,"write","","Sends bytes to slave with address `addr`",31,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",32,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",32,[[],["result",4]]],[8,"_embedded_hal_blocking_rng_Read","","Blocking read",null,null],[16,"Error","","Error type",33,null],[10,"read","","Reads enough bytes from hardware random number generator…",33,[[],["result",4]]],[8,"_embedded_hal_blocking_serial_Write","","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",34,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",34,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered words",34,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Transfer","","Blocking transfer",null,null],[16,"Error","","Error type",35,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",35,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Write","","Blocking write",null,null],[16,"Error","","Error type",36,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",36,[[],["result",4]]],[8,"_embedded_hal_digital_InputPin","","Single digital input pin",null,null],[10,"is_high","","Is the input pin high?",37,[[]]],[10,"is_low","","Is the input pin low?",37,[[]]],[8,"_embedded_hal_digital_OutputPin","","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",38,[[]]],[10,"set_high","","Drives the pin high",38,[[]]],[8,"_embedded_hal_digital_ToggleableOutputPin","","Output pin that can be toggled",null,null],[10,"toggle","","Toggle pin output.",39,[[]]],[8,"_embedded_hal_serial_Read","","Read half of a serial interface",null,null],[16,"Error","","Read error",40,null],[10,"read","","Reads a single word from the serial interface",40,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_serial_Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",41,null],[10,"write","","Writes a single word to the serial interface",41,[[],[["error",4],["result",4]]]],[10,"flush","","Ensures that none of the previously written words are…",41,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_spi_FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",42,null],[10,"read","","Reads the word stored in the shift register",42,[[],[["result",4],["error",4]]]],[10,"send","","Sends a word to the slave",42,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_timer_CountDown","","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",43,null],[10,"start","","Starts a new count down",43,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",43,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_watchdog_Watchdog","","Feeds an existing watchdog to ensure the processor isn\'t…",null,null],[10,"feed","","Triggers the watchdog. This must be done once the watchdog…",44,[[]]],[8,"_embedded_hal_watchdog_WatchdogDisable","","Disables a running watchdog timer so the processor won\'t…",null,null],[10,"disable","","Disables the watchdog",45,[[]]],[8,"_embedded_hal_watchdog_WatchdogEnable","","Enables A watchdog timer to reset the processor if…",null,null],[16,"Time","","Unit of time used by the watchdog",46,null],[10,"start","","Starts the watchdog with a given period, typically once…",46,[[]]],[8,"_embedded_hal_Capture","","Input capture",null,null],[16,"Error","","Enumeration of `Capture` errors",47,null],[16,"Channel","","Enumeration of channels that can be used with this…",47,null],[16,"Time","","A time unit that can be converted into a human time unit…",47,null],[16,"Capture","","The type of the value returned by `capture`",47,null],[10,"capture","","\\\"Waits\\\" for a transition in the capture `channel` and…",47,[[],[["error",4],["result",4]]]],[10,"disable","","Disables a capture `channel`",47,[[]]],[10,"enable","","Enables a capture `channel`",47,[[]]],[10,"get_resolution","","Returns the current resolution",47,[[]]],[10,"set_resolution","","Sets the resolution of the capture timer",47,[[]]],[8,"_embedded_hal_Pwm","","Pulse Width Modulation",null,null],[16,"Channel","","Enumeration of channels that can be used with this `Pwm`…",48,null],[16,"Time","","A time unit that can be converted into a human time unit…",48,null],[16,"Duty","","Type for the `duty` methods",48,null],[10,"disable","","Disables a PWM `channel`",48,[[]]],[10,"enable","","Enables a PWM `channel`",48,[[]]],[10,"get_period","","Returns the current PWM period",48,[[]]],[10,"get_duty","","Returns the current duty cycle",48,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",48,[[]]],[10,"set_duty","","Sets a new duty cycle",48,[[]]],[10,"set_period","","Sets a new PWM period",48,[[]]],[8,"_embedded_hal_PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",49,null],[10,"disable","","Disables a PWM `channel`",49,[[]]],[10,"enable","","Enables a PWM `channel`",49,[[]]],[10,"get_duty","","Returns the current duty cycle",49,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",49,[[]]],[10,"set_duty","","Sets a new duty cycle",49,[[]]],[8,"_embedded_hal_Qei","","Quadrature encoder interface",null,null],[16,"Count","","The type of the value returned by `count`",50,null],[10,"count","","Returns the current pulse count of the encoder",50,[[]]],[10,"direction","","Returns the count direction",50,[[],["direction",4]]],[8,"EicPin","","The EicPin trait makes it more ergonomic to convert a gpio…",null,null],[10,"into_ei","","",51,[[["port",3]]]],[0,"rtc","atsamd_hal::common","Real-time clock/counter",null,null],[3,"Datetime","atsamd_hal::common::rtc","Datetime represents an RTC clock/calendar value.",null,null],[12,"seconds","","",52,null],[12,"minutes","","",52,null],[12,"hours","","",52,null],[12,"day","","",52,null],[12,"month","","",52,null],[12,"year","","",52,null],[3,"Rtc","","Rtc represents the RTC peripheral for either…",null,null],[3,"TimerParams","","Helper type for computing cycles and divider given frequency",null,null],[12,"divider","","",53,null],[12,"cycles","","",53,null],[11,"new","","Resets & does the basic configuration of the RTC…",54,[[["hertz",3],["pm",3],["rtc",3]]]],[11,"clock_mode","","Configures the peripheral for clock/calendar mode.…",54,[[]]],[11,"current_time","","Returns the current clock/calendar value.",54,[[],["datetime",3]]],[11,"set_time","","Updates the current clock/calendar value.",54,[[["datetime",3]]]],[11,"new","","calculates RTC timer paramters based on the input…",53,[[]]],[11,"new_us","","calculates RTC timer paramters based on the input…",53,[[]]],[0,"sercom","atsamd_hal::common","Configure the SERCOM peripheralsThe SERCOM module is used…",null,null],[0,"v1","atsamd_hal::common::sercom","Version 1 of the SERCOM moduleThis module retains the…",null,null],[3,"I2CMaster0","atsamd_hal::common::sercom::v1","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster1","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"SPIMaster0Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster0","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster1Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster1","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"UART0Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART0","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART1Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART1","","UARTX represents the corresponding SERCOMX instance…",null,null],[4,"I2CError","","",null,null],[13,"ArbitrationLost","","",55,null],[13,"AddressError","","",55,null],[13,"BusError","","",55,null],[13,"Timeout","","",55,null],[13,"Nack","","",55,null],[4,"Error","","",null,null],[13,"Overrun","","",56,null],[0,"pads","","Version 1 of the SERCOM pads module",null,null],[6,"Sercom0Pad0","atsamd_hal::common::sercom::v1::pads","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad3","","Represents a numbered pad for the associated sercom…",null,null],[8,"PadPin","","The PadPin trait makes it more ergonomic to convert a pin…",null,null],[10,"into_pad","","",57,[[["port",3]]]],[0,"i2c","atsamd_hal::common::sercom::v1","",null,null],[3,"I2CMaster0","atsamd_hal::common::sercom::v1::i2c","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster1","","Represents the Sercom instance configured to act as an I2C…",null,null],[4,"I2CError","","",null,null],[13,"ArbitrationLost","","",55,null],[13,"AddressError","","",55,null],[13,"BusError","","",55,null],[13,"Timeout","","",55,null],[13,"Nack","","",55,null],[0,"spi","atsamd_hal::common::sercom::v1","",null,null],[3,"SPIMaster0Padout","atsamd_hal::common::sercom::v1::spi","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster0","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster1Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster1","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[4,"Error","","",null,null],[13,"Overrun","","",56,null],[8,"DipoDopo","","The DipoDopo trait defines a way to get the data in and…",null,null],[10,"dipo_dopo","","",58,[[]]],[0,"uart","atsamd_hal::common::sercom::v1","",null,null],[3,"UART0Padout","atsamd_hal::common::sercom::v1::uart","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART0","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART1Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART1","","UARTX represents the corresponding SERCOMX instance…",null,null],[8,"RxpoTxpo","","The RxpoTxpo trait defines a way to get the data in and…",null,null],[10,"rxpo_txpo","","",59,[[]]],[0,"pad_map","atsamd_hal::common::sercom::v1","Implementations of the `pads` `Map` trait",null,null],[8,"DipoDopo","","The DipoDopo trait defines a way to get the data in and…",null,null],[10,"dipo_dopo","","",58,[[]]],[8,"RxpoTxpo","","The RxpoTxpo trait defines a way to get the data in and…",null,null],[10,"rxpo_txpo","","",59,[[]]],[0,"v2","atsamd_hal::common::sercom","Version 2 of the SERCOM moduleThis module provides a new…",null,null],[0,"pads","atsamd_hal::common::sercom::v2","Version 2 of the SERCOM pads module",null,null],[3,"Pad","atsamd_hal::common::sercom::v2::pads","Represents a SERCOM Pad configured to use a particular pin",null,null],[4,"Sercom0","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom1","","Represents the corresponding SERCOM instance",null,null],[4,"Pad0","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad1","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad2","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad3","","Represents the corresponding SERCOM pad number",null,null],[6,"SERCOM","","Type alias to extract the correct PAC SERCOM type from the…",null,null],[6,"ConcretePad","","Type alias to convert from an implementation of [`AnyPad`]…",null,null],[8,"Sercom","","Type-level `enum` representing a Serial Communication…",null,null],[16,"SERCOM","","Corresponding PAC SERCOM type",60,null],[8,"PadNum","","Type-level `enum` representing a SERCOM pad number",null,null],[8,"Map","","Type-level function mapping [`Pad`]s to [`Pin`]s",null,null],[16,"Id","","The [`PinId`] for the corresponding pin",61,null],[16,"Mode","","The [`PinMode`] for the corresponding pin",61,null],[8,"AnyPad","","Meta-type representing any [`Pad`]",null,null],[16,"Sercom","","",62,null],[16,"PadNum","","",62,null],[16,"Map","","",62,null],[10,"as_concrete","","Convert a type that implements [`AnyPad`] to a concrete…",62,[[],["concretepad",6]]],[8,"OptionalPad","","Meta-type representing an optional [`Pad`].",null,null],[8,"SomePad","","Meta-type representing a valid [`Pad`].",null,null],[11,"new","","Create a new SERCOM [`Pad`] from a [`Pin`]",63,[[["pin",3],["pinmode",8]]]],[11,"free","","Consume the [`Pad`] and release the corresponding [`Pin`]",63,[[],["pin",3]]],[11,"as_any","","Convert a [`Pad`] to a type that implements [`AnyPad`]",63,[[]]],[0,"pad_map","atsamd_hal::common::sercom::v2","Implementations of the `pads` `Map` trait",null,null],[0,"sleeping_delay","atsamd_hal::common","Delays with WFI sleep while we wait using a timer",null,null],[3,"SleepingDelay","atsamd_hal::common::sleeping_delay","Delay and sleep while we do (WFI) using a timer",null,null],[11,"new","","Initializes a new SleepingDelay struct",64,[[["atomicbool",3]],["sleepingdelay",3]]],[11,"free","","Releases the timer resource",64,[[]]],[0,"spi_common","atsamd_hal::common","",null,null],[8,"CommonSpi","atsamd_hal::common::spi_common","",null,null],[10,"spi","","Helper for accessing the spi member of the sercom instance",65,[[],["spi",3]]],[10,"spi_mut","","Helper for accessing the spi member of the sercom instance",65,[[],["spi",3]]],[11,"disable","","Disable the SPI",65,[[]]],[11,"enable","","Enable the SPI",65,[[]]],[11,"set_mode","","Set the polarity (CPOL) and phase (CPHA) of the SPI",65,[[["mode",3]]]],[11,"freq","","Method for calculating the output frequency given our baud…",65,[[["hertz",3]],["hertz",3]]],[11,"calculate_baud","","Helper for calculating our baudrate register",65,[[["hertz",3],["into",8]]]],[0,"time","atsamd_hal::common","Time units",null,null],[3,"Bps","atsamd_hal::common::time","Bits per second",null,null],[12,"0","","",66,null],[3,"Hertz","","Hertz",null,null],[12,"0","","",67,null],[3,"KiloHertz","","KiloHertz",null,null],[12,"0","","",68,null],[3,"MegaHertz","","MegaHertz",null,null],[12,"0","","",69,null],[3,"Seconds","","Seconds",null,null],[12,"0","","",70,null],[3,"Milliseconds","","Milliseconds",null,null],[12,"0","","",71,null],[3,"Microseconds","","Microseconds",null,null],[12,"0","","",72,null],[3,"Nanoseconds","","Nanoseconds",null,null],[12,"0","","",73,null],[8,"U32Ext","","Extension trait that adds convenience methods to the `u32`…",null,null],[10,"bps","","Wrap in `Bps`",74,[[],["bps",3]]],[10,"hz","","Wrap in `Hertz`",74,[[],["hertz",3]]],[10,"khz","","Wrap in `KiloHertz`",74,[[],["kilohertz",3]]],[10,"mhz","","Wrap in `MegaHertz`",74,[[],["megahertz",3]]],[10,"s","","Wrap in `Seconds`",74,[[],["seconds",3]]],[10,"ms","","Wrap in `Milliseconds`",74,[[],["milliseconds",3]]],[10,"us","","Wrap in `Microseconds`",74,[[],["microseconds",3]]],[10,"ns","","Wrap in `NanoSeconds`",74,[[],["nanoseconds",3]]],[0,"timer_params","atsamd_hal::common","helper struct to calculate divider & cycles settings for…",null,null],[3,"TimerParams","atsamd_hal::common::timer_params","Helper type for computing cycles and divider given frequency",null,null],[12,"divider","","",75,null],[12,"cycles","","",75,null],[11,"new","","calculates TimerParams from a given frequency based timeout.",75,[[]]],[11,"new_us","","calculates TimerParams from a given period based timeout.",75,[[]]],[0,"timer_traits","atsamd_hal::common","",null,null],[8,"InterruptDrivenTimer","atsamd_hal::common::timer_traits","Trait for timers that can enable & disable an interrupt…",null,null],[10,"enable_interrupt","","Enable the timer interrupt",76,[[]]],[10,"disable_interrupt","","Disable the timer interrupt",76,[[]]],[11,"new","atsamd_hal::common::sercom::v1","Configures the sercom instance to work as an I2C Master.…",77,[[["sercom0coreclock",3],["hertz",3],["pm",3],["into",8],["sercom0",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",77,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",78,[[["hertz",3],["sercom1coreclock",3],["sercom1",3],["pm",3],["into",8]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",78,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",79,[[["sercom0coreclock",3],["hertz",3],["pm",3],["mode",3],["sercom0",3],["spimaster0padout",3],["into",8],["into",8]]]],[11,"set_baud","","Set the baud rate",79,[[["hertz",3],["sercom0coreclock",3],["into",8]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",79,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",80,[[["hertz",3],["sercom1coreclock",3],["sercom1",3],["pm",3],["spimaster1padout",3],["into",8],["mode",3],["into",8]]]],[11,"set_baud","","Set the baud rate",80,[[["hertz",3],["sercom1coreclock",3],["into",8]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",80,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",81,[[["sercom0coreclock",3],["hertz",3],["pm",3],["into",8],["uart0padout",3],["into",8],["sercom0",3]],["uart0",3]]],[11,"free","","",81,[[]]],[11,"new","","Power on and configure SERCOMX to work as a UART Master…",82,[[["hertz",3],["sercom1coreclock",3],["sercom1",3],["pm",3],["into",8],["uart1padout",3],["into",8]],["uart1",3]]],[11,"free","","",82,[[]]],[0,"eic","atsamd_hal::common","",null,null],[3,"EIC","atsamd_hal::common::eic","",null,null],[0,"pin","","",null,null],[3,"ExtInt1","atsamd_hal::common::eic::pin","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt2","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt3","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt4","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt5","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt6","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt7","","Represents a numbered external interrupt. The external…",null,null],[6,"Sense","","",null,null],[6,"ExternalInterruptID","","",null,null],[8,"EicPin","","The EicPin trait makes it more ergonomic to convert a gpio…",null,null],[10,"into_ei","","",51,[[["port",3]]]],[8,"ExternalInterrupt","","ExternalInterrupt describes something with an external…",null,null],[10,"id","","",83,[[],["externalinterruptid",6]]],[0,"adc","atsamd_hal::common","",null,null],[3,"Adc","atsamd_hal::common::adc","",null,null],[0,"pwm","atsamd_hal::common","",null,null],[3,"Pwm1","atsamd_hal::common::pwm","",null,null],[3,"Pwm2","","",null,null],[3,"Pwm0","","",null,null],[4,"Channel","","",null,null],[13,"_0","","",84,null],[13,"_1","","",84,null],[13,"_2","","",84,null],[13,"_3","","",84,null],[0,"watchdog","atsamd_hal::common","",null,null],[3,"Watchdog","atsamd_hal::common::watchdog","",null,null],[4,"WatchdogTimeout","","WatchdogTimeout enumerates usable values for configuring…",null,null],[13,"Cycles8","","",85,null],[13,"Cycles16","","",85,null],[13,"Cycles32","","",85,null],[13,"Cycles64","","",85,null],[13,"Cycles128","","",85,null],[13,"Cycles256","","",85,null],[13,"Cycles512","","",85,null],[13,"Cycles1K","","",85,null],[13,"Cycles2K","","",85,null],[13,"Cycles4K","","",85,null],[13,"Cycles8K","","",85,null],[13,"Cycles16K","","",85,null],[0,"pad","atsamd_hal::common","",null,null],[0,"samd11","atsamd_hal","",null,null],[0,"calibration","atsamd_hal::samd11","NVM Software Calibration Row Mapping",null,null],[5,"osc32k_cal","atsamd_hal::samd11::calibration","Returns the osc32k calibration value from the NVM…",null,[[]]],[5,"dfll48m_coarse_cal","","Returns the dfll48m coarse calibration value",null,[[]]],[5,"usb_transn_cal","","USB TRANSN calibration value. Should be written to USB…",null,[[]]],[5,"usb_transp_cal","","USB TRANSP calibration value. Should be written to USB…",null,[[]]],[5,"usb_trim_cal","","USB TRIM calibration value. Should be written to USB…",null,[[]]],[0,"clock","atsamd_hal::samd11","Configuring the system clock sources. You will typically…",null,null],[3,"GClock","atsamd_hal::samd11::clock","Represents a configured clock generator. Can be converted…",null,null],[3,"GenericClockController","","`GenericClockController` encapsulates the GCLK hardware.…",null,null],[3,"Tcc0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tc1Tc2Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom0CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom1CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom2CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"UsbClock","","A typed token that indicates that the clock for the…",null,null],[3,"RtcClock","","A typed token that indicates that the clock for the…",null,null],[3,"AdcClock","","A typed token that indicates that the clock for the…",null,null],[3,"WdtClock","","A typed token that indicates that the clock for the…",null,null],[3,"EicClock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys2Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys3Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys4Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys5Clock","","A typed token that indicates that the clock for the…",null,null],[3,"AcDigClock","","A typed token that indicates that the clock for the…",null,null],[3,"AcAnaClock","","A typed token that indicates that the clock for the…",null,null],[3,"DacClock","","A typed token that indicates that the clock for the…",null,null],[5,"enable_internal_32kosc","","Turn on the internal 32hkz oscillator",null,[[["sysctrl",3]]]],[5,"enable_external_32kosc","","Turn on the external 32hkz oscillator",null,[[["sysctrl",3]]]],[6,"ClockId","","",null,null],[6,"ClockGenId","","",null,null],[6,"ClockSource","","",null,null],[17,"OSC48M_FREQ","","The frequency of the 48Mhz source.",null,null],[17,"OSC8M_FREQ","","The frequency of the 8 Mhz source.",null,null],[17,"OSC32K_FREQ","","The frequency of the 32Khz source.",null,null],[11,"with_internal_32kosc","","Reset the clock controller, configure the system to run at…",86,[[["gclk",3],["pm",3],["nvmctrl",3],["sysctrl",3]]]],[11,"with_external_32kosc","","Reset the clock controller, configure the system to run at…",86,[[["gclk",3],["pm",3],["nvmctrl",3],["sysctrl",3]]]],[11,"with_internal_8mhz","","Reset the clock controller, configure the system to run at…",86,[[["gclk",3],["pm",3],["nvmctrl",3],["sysctrl",3]]]],[11,"gclk0","","Returns a `GClock` for gclk0, the system clock generator…",86,[[],["gclock",3]]],[11,"gclk1","","Returns a `GClock` for gclk1, the 32Khz oscillator.",86,[[],["gclock",3]]],[11,"get_gclk","","Returns the `GClock` for the specified clock generator. If…",86,[[["clockgenid",6]],[["option",4],["gclock",3]]]],[11,"configure_gclk_divider_and_source","","Configures a clock generator with the specified divider…",86,[[["clockgenid",6],["clocksource",6]],[["option",4],["gclock",3]]]],[11,"configure_standby","","Enables or disables the given GClk from operation in…",86,[[["clockgenid",6]]]],[11,"freq","","Returns the frequency of the configured clock",87,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",88,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",89,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",90,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",91,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",92,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",93,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",94,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",95,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",96,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",97,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",98,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",99,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",100,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",101,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",102,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",103,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",104,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",105,[[],["hertz",3]]],[11,"tcc0","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["tcc0clock",3]]]],[11,"tc1_tc2","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["tc1tc2clock",3],["option",4]]]],[11,"sercom0_core","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["sercom0coreclock",3],["option",4]]]],[11,"sercom1_core","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["sercom1coreclock",3],["option",4]]]],[11,"sercom2_core","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["sercom2coreclock",3],["option",4]]]],[11,"usb","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["usbclock",3],["option",4]]]],[11,"rtc","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["rtcclock",3],["option",4]]]],[11,"adc","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["adcclock",3]]]],[11,"wdt","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["wdtclock",3]]]],[11,"eic","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["eicclock",3]]]],[11,"evsys0","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["evsys0clock",3]]]],[11,"evsys1","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["evsys1clock",3],["option",4]]]],[11,"evsys2","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["evsys2clock",3]]]],[11,"evsys3","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["evsys3clock",3]]]],[11,"evsys4","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["evsys4clock",3],["option",4]]]],[11,"evsys5","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["evsys5clock",3]]]],[11,"ac_dig","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["acdigclock",3],["option",4]]]],[11,"ac_ana","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["option",4],["acanaclock",3]]]],[11,"dac","","Configure the clock for peripheral(s) that match the name…",86,[[["gclock",3]],[["dacclock",3],["option",4]]]],[0,"timer","atsamd_hal::samd11","Working with timer counter hardware",null,null],[3,"TimerCounter","atsamd_hal::samd11::timer","A generic hardware timer counter. The counters are exposed…",null,null],[6,"TimerCounter1","","",null,null],[8,"Count16","","This is a helper trait to make it easier to make most of…",null,null],[10,"count_16","","",106,[[],["count16",3]]],[11,"tc1_","","Configure this timer counter instance. The clock is…",107,[[["tc1",3],["pm",3],["tc1tc2clock",3]]]],[14,"dbgprint","atsamd_hal","",null,null],[14,"define_pins","","This macro is a helper for defining a `Pins` type in a…",null,null],[11,"from","atsamd_hal::typelevel","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","atsamd_hal::common","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","atsamd_hal::common::delay","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v1","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"set_low","","",5,[[],["result",4]]],[11,"set_high","","",5,[[],["result",4]]],[11,"is_set_low","","",5,[[],["result",4]]],[11,"is_set_high","","",5,[[],["result",4]]],[11,"toggle","","Toggle pin output",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","","",5,[[],["result",4]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"set_low","","",14,[[],["result",4]]],[11,"set_high","","",14,[[],["result",4]]],[11,"is_set_low","","",14,[[],["result",4]]],[11,"is_set_high","","",14,[[],["result",4]]],[11,"toggle","","Toggle pin output",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","","",14,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v2::dynpin","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"set_low","","",23,[[],["result",4]]],[11,"set_high","","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"is_set_high","","",23,[[],["result",4]]],[11,"toggle","","Toggle pin output",23,[[],["result",4]]],[11,"is_low","","",23,[[],["result",4]]],[11,"is_high","","",23,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","atsamd_hal::common::rtc","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sercom::v1","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"transfer","","",79,[[],["result",4]]],[11,"write","","",79,[[],["result",4]]],[11,"write_iter","","",79,[[],["result",4]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"transfer","","",80,[[],["result",4]]],[11,"write","","",80,[[],["result",4]]],[11,"write_iter","","",80,[[],["result",4]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"bwrite_all","","",81,[[],["result",4]]],[11,"bflush","","",81,[[],["result",4]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"bwrite_all","","",82,[[],["result",4]]],[11,"bflush","","",82,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sercom::v2::pads","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sleeping_delay","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","atsamd_hal::common::time","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","atsamd_hal::common::timer_params","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","atsamd_hal::common::eic","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","atsamd_hal::common::eic::pin","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","atsamd_hal::common::adc","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","atsamd_hal::common::pwm","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","atsamd_hal::common::watchdog","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","atsamd_hal::samd11::clock","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","atsamd_hal::samd11::timer","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"write_str","atsamd_hal::common::prelude","",41,[[],[["result",4],["error",3]]]],[11,"into_function","atsamd_hal::common::gpio::v1","",5,[[["port",3]],[["pin",3],["alternate",3]]]],[11,"as_concrete","atsamd_hal::common::gpio::v2::pin","",14,[[],["concretepin",6]]],[11,"as_concrete_ref","","",14,[[],["concretepin",6]]],[11,"as_concrete_mut","","",14,[[],["concretepin",6]]],[11,"into_pad","atsamd_hal::common::gpio::v1","",5,[[["port",3]],[["pin",3],["pad",3]]]],[11,"as_concrete","atsamd_hal::common::sercom::v2::pads","",63,[[],["concretepad",6]]],[11,"spi","atsamd_hal::common::sercom::v1","Helper for accessing the spi member of the sercom instance",79,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",79,[[],["spi",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",80,[[],["spi",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",80,[[],["spi",3]]],[11,"enable_interrupt","atsamd_hal::common::rtc","Enable the interrupt generation for this hardware timer.…",54,[[]]],[11,"disable_interrupt","","Disables interrupt generation for this hardware timer.…",54,[[]]],[11,"enable_interrupt","atsamd_hal::samd11::timer","Enable the interrupt generation for this hardware timer.…",107,[[]]],[11,"disable_interrupt","","Disables interrupt generation for this hardware timer.…",107,[[]]],[11,"into_ei","atsamd_hal","",163,[[["port",3]],[["extint1",3],["pa15",6]]]],[11,"into_ei","","",164,[[["port",3]],[["pa2",6],["extint2",3]]]],[11,"into_ei","","",165,[[["port",3]],[["pa31",6],["extint3",3]]]],[11,"into_ei","","",166,[[["port",3]],[["extint4",3],["pa4",6]]]],[11,"into_ei","","",167,[[["port",3]],[["pa24",6],["extint4",3]]]],[11,"into_ei","","",168,[[["port",3]],[["pa5",6],["extint5",3]]]],[11,"into_ei","","",169,[[["port",3]],[["extint5",3],["pa25",6]]]],[11,"into_ei","","",170,[[["port",3]],[["pa8",6],["extint6",3]]]],[11,"into_ei","","",171,[[["port",3]],[["pa9",6],["extint7",3]]]],[11,"dipo_dopo","atsamd_hal::common::sercom::v1","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",139,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"dipo_dopo","","",140,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",141,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"rxpo_txpo","","",142,[[]]],[11,"from","atsamd_hal::common::gpio::v1","",5,[[["pin",3]],["pin",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","",14,[[["pin",3]],["pin",3]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullDownDisabled`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`FloatingDisabled`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullUpDisabled`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`FloatingDisabled`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`FloatingInput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`FloatingDisabled`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullDownInput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`FloatingDisabled`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullUpInput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`FloatingDisabled`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`FloatingDisabled`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`FloatingDisabled`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateA`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateB`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`FloatingDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateC`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateD`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`FloatingDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateE`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateF`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`FloatingDisabled`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateG`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`FloatingDisabled`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullUpDisabled`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullDownDisabled`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`FloatingInput`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullDownDisabled`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullDownInput`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullDownDisabled`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullUpInput`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullDownDisabled`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PushPullOutput`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullDownDisabled`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`ReadableOutput`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullDownDisabled`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateA`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateB`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`PullDownDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateC`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateD`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`PullDownDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateE`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateF`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`PullDownDisabled`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateG`]",14,[[["pulldowndisabled",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`PullDownDisabled`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`FloatingInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullUpDisabled`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullDownInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullUpDisabled`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullUpInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullUpDisabled`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullUpDisabled`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullUpDisabled`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateA`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateB`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullUpDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateC`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateD`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullUpDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateE`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateF`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullUpDisabled`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateG`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullUpDisabled`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullDownInput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`FloatingInput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullUpInput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`FloatingInput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`PushPullOutput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`FloatingInput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`ReadableOutput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`FloatingInput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateA`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`FloatingInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateB`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`FloatingInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateC`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`FloatingInput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateD`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`FloatingInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateE`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`FloatingInput`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateF`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`FloatingInput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateG`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`FloatingInput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullUpInput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullDownInput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`PushPullOutput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullDownInput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`ReadableOutput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullDownInput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateA`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullDownInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateB`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullDownInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateC`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullDownInput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateD`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullDownInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateE`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullDownInput`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateF`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullDownInput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateG`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullDownInput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PushPullOutput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullUpInput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`ReadableOutput`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullUpInput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateA`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`PullUpInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateB`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`PullUpInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateC`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`PullUpInput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateD`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`PullUpInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateE`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`PullUpInput`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateF`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`PullUpInput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateG`]",14,[[["pullupinput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`PullUpInput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`ReadableOutput`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PushPullOutput`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateA`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PushPullOutput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateB`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PushPullOutput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateC`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PushPullOutput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateD`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PushPullOutput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateE`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PushPullOutput`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateF`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PushPullOutput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateG`]",14,[[["pin",3],["pushpulloutput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PushPullOutput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateA`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`ReadableOutput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateB`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`ReadableOutput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateC`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`ReadableOutput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateD`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`ReadableOutput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateE`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`ReadableOutput`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateF`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`ReadableOutput`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateG`]",14,[[["pin",3],["readableoutput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`ReadableOutput`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateB`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateA`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateC`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateA`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateD`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateA`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateE`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateA`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateF`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateA`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateG`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateA`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateC`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateB`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateD`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateB`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateE`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateB`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateF`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateB`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateG`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateB`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateD`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateC`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateE`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateC`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateF`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateC`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateG`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateC`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateE`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateD`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateF`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateD`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateG`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateD`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateF`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateE`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateG`]",14,[[["pin",3],["alternatee",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateE`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateG`]",14,[[["alternatef",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateF`]",14,[[["pin",3],["alternateg",6]]]],[11,"from","atsamd_hal::common::gpio::v2::dynpin","Erase the type-level information in a [Pin] and return a…",23,[[["pin",3]]]],[11,"from","atsamd_hal::common::rtc","",52,[[["r",6]],["datetime",3]]],[11,"from","atsamd_hal::common::sercom::v2::pads","",63,[[["pad",3]],[["pin",3],["pad",3]]]],[11,"from","","",63,[[["pin",3],["pad",3]],["pad",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","Convert from a [`Pad`] to its corresponding [`Pin`].",14,[[["pad",3]]]],[11,"from","atsamd_hal::common::sercom::v2::pads","Convert from a [`Pin`] to its corresponding [`Pad`].",63,[[["pin",3]]]],[11,"from","atsamd_hal::common","",0,[[],["resetcause",4]]],[11,"from","atsamd_hal::common::sercom::v1","",139,[[],[["sercom0pad2",6],["spimaster0padout",3],["sercom0pad3",6],["sercom0pad0",6]]]],[11,"from","","",139,[[],[["sercom0pad1",6],["spimaster0padout",3],["sercom0pad3",6],["sercom0pad0",6]]]],[11,"from","","",139,[[],[["sercom0pad2",6],["sercom0pad1",6],["sercom0pad3",6],["spimaster0padout",3]]]],[11,"from","","",139,[[],[["spimaster0padout",3],["sercom0pad0",6],["sercom0pad1",6],["sercom0pad3",6]]]],[11,"from","","",139,[[],[["spimaster0padout",3],["sercom0pad2",6],["sercom0pad0",6],["sercom0pad1",6]]]],[11,"from","","",139,[[],[["sercom0pad2",6],["spimaster0padout",3],["sercom0pad1",6],["sercom0pad3",6]]]],[11,"from","","",139,[[],[["sercom0pad2",6],["sercom0pad0",6],["spimaster0padout",3],["sercom0pad3",6]]]],[11,"from","","",139,[[],[["sercom0pad3",6],["spimaster0padout",3],["sercom0pad0",6],["sercom0pad1",6]]]],[11,"from","","",140,[[],[["spimaster1padout",3],["sercom1pad0",6],["sercom1pad2",6],["sercom1pad3",6]]]],[11,"from","","",140,[[],[["sercom1pad0",6],["spimaster1padout",3],["sercom1pad3",6],["sercom1pad1",6]]]],[11,"from","","",140,[[],[["sercom1pad3",6],["sercom1pad1",6],["sercom1pad2",6],["spimaster1padout",3]]]],[11,"from","","",140,[[],[["sercom1pad1",6],["sercom1pad0",6],["sercom1pad3",6],["spimaster1padout",3]]]],[11,"from","","",140,[[],[["sercom1pad0",6],["sercom1pad2",6],["spimaster1padout",3],["sercom1pad1",6]]]],[11,"from","","",140,[[],[["spimaster1padout",3],["sercom1pad2",6],["sercom1pad3",6],["sercom1pad1",6]]]],[11,"from","","",140,[[],[["sercom1pad2",6],["sercom1pad0",6],["sercom1pad3",6],["spimaster1padout",3]]]],[11,"from","","",140,[[],[["spimaster1padout",3],["sercom1pad0",6],["sercom1pad1",6],["sercom1pad3",6]]]],[11,"from","","",141,[[],[["uart0padout",3],["sercom0pad2",6],["sercom0pad0",6]]]],[11,"from","","",141,[[],[["sercom0pad0",6],["uart0padout",3],["sercom0pad1",6]]]],[11,"from","","",141,[[],[["sercom0pad2",6],["sercom0pad0",6],["sercom0pad1",6],["sercom0pad3",6],["uart0padout",3]]]],[11,"from","","",141,[[],[["uart0padout",3],["sercom0pad2",6],["sercom0pad1",6]]]],[11,"from","","",141,[[],[["uart0padout",3],["sercom0pad2",6],["sercom0pad0",6]]]],[11,"from","","",141,[[],[["uart0padout",3],["sercom0pad3",6],["sercom0pad0",6]]]],[11,"from","","",141,[[],[["sercom0pad3",6],["sercom0pad2",6],["uart0padout",3]]]],[11,"from","","",142,[[],[["uart1padout",3],["sercom1pad2",6],["sercom1pad0",6]]]],[11,"from","","",142,[[],[["sercom1pad1",6],["sercom1pad0",6],["uart1padout",3]]]],[11,"from","","",142,[[],[["sercom1pad2",6],["sercom1pad0",6],["sercom1pad1",6],["uart1padout",3],["sercom1pad3",6]]]],[11,"from","","",142,[[],[["sercom1pad1",6],["sercom1pad2",6],["uart1padout",3]]]],[11,"from","","",142,[[],[["sercom1pad0",6],["uart1padout",3],["sercom1pad2",6]]]],[11,"from","","",142,[[],[["sercom1pad0",6],["uart1padout",3],["sercom1pad3",6]]]],[11,"from","","",142,[[],[["uart1padout",3],["sercom1pad2",6],["sercom1pad3",6]]]],[11,"fmt","atsamd_hal::common::rtc","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::time","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::timer_params","",75,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common","",0,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::watchdog","",85,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::sercom::v1","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::samd11::clock","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"eq","atsamd_hal::common::gpio::v2::dynpin","",17,[[["dyndisabled",4]]]],[11,"eq","","",18,[[["dyninput",4]]]],[11,"eq","","",19,[[["dynoutput",4]]]],[11,"eq","","",20,[[["dynalternate",4]]]],[11,"eq","","",21,[[["dynpinmode",4]]]],[11,"ne","","",21,[[["dynpinmode",4]]]],[11,"eq","","",22,[[["dyngroup",4]]]],[11,"eq","","",15,[[["dynpinid",3]]]],[11,"ne","","",15,[[["dynpinid",3]]]],[11,"eq","atsamd_hal::common::time","",66,[[["bps",3]]]],[11,"ne","","",66,[[["bps",3]]]],[11,"eq","","",67,[[["hertz",3]]]],[11,"ne","","",67,[[["hertz",3]]]],[11,"eq","","",68,[[["kilohertz",3]]]],[11,"ne","","",68,[[["kilohertz",3]]]],[11,"eq","","",69,[[["megahertz",3]]]],[11,"ne","","",69,[[["megahertz",3]]]],[11,"eq","","",70,[[["seconds",3]]]],[11,"ne","","",70,[[["seconds",3]]]],[11,"eq","","",71,[[["milliseconds",3]]]],[11,"ne","","",71,[[["milliseconds",3]]]],[11,"eq","","",72,[[["microseconds",3]]]],[11,"ne","","",72,[[["microseconds",3]]]],[11,"eq","","",73,[[["nanoseconds",3]]]],[11,"ne","","",73,[[["nanoseconds",3]]]],[11,"eq","atsamd_hal::common::watchdog","",85,[[["watchdogtimeout",4]]]],[11,"try_from","atsamd_hal::common::gpio::v2::pin","Try to recreate a type-level [Pin] from a value-level…",14,[[["dynpin",3]],[["error",4],["result",4]]]],[11,"write_str","atsamd_hal::common::sercom::v1","",81,[[],["result",6]]],[11,"write_str","","",82,[[],["result",6]]],[11,"into","atsamd_hal::common::time","",68,[[],["hertz",3]]],[11,"into","","",69,[[],["hertz",3]]],[11,"into","","",69,[[],["kilohertz",3]]],[11,"into","","",67,[[],["kilohertz",3]]],[11,"into","","",67,[[],["megahertz",3]]],[11,"into","","",68,[[],["megahertz",3]]],[11,"into","","",70,[[],["milliseconds",3]]],[11,"into","","",70,[[],["microseconds",3]]],[11,"into","","",70,[[],["nanoseconds",3]]],[11,"into","","",71,[[],["microseconds",3]]],[11,"into","","",72,[[],["nanoseconds",3]]],[11,"into","","",71,[[],["seconds",3]]],[11,"into","","",72,[[],["seconds",3]]],[11,"into","","",72,[[],["milliseconds",3]]],[11,"into","","",71,[[],["nanoseconds",3]]],[11,"into","","",73,[[],["hertz",3]]],[11,"into","","",72,[[],["hertz",3]]],[11,"into","","",73,[[],["kilohertz",3]]],[11,"into","","",73,[[],["megahertz",3]]],[11,"into","","",67,[[],["microseconds",3]]],[11,"into","","",67,[[],["nanoseconds",3]]],[11,"into","","",68,[[],["nanoseconds",3]]],[11,"into","","",69,[[],["nanoseconds",3]]],[11,"into","atsamd_hal::samd11::clock","",162,[[],["hertz",3]]],[11,"into","","",87,[[],["hertz",3]]],[11,"into","","",88,[[],["hertz",3]]],[11,"into","","",89,[[],["hertz",3]]],[11,"into","","",90,[[],["hertz",3]]],[11,"into","","",91,[[],["hertz",3]]],[11,"into","","",92,[[],["hertz",3]]],[11,"into","","",93,[[],["hertz",3]]],[11,"into","","",94,[[],["hertz",3]]],[11,"into","","",95,[[],["hertz",3]]],[11,"into","","",96,[[],["hertz",3]]],[11,"into","","",97,[[],["hertz",3]]],[11,"into","","",98,[[],["hertz",3]]],[11,"into","","",99,[[],["hertz",3]]],[11,"into","","",100,[[],["hertz",3]]],[11,"into","","",101,[[],["hertz",3]]],[11,"into","","",102,[[],["hertz",3]]],[11,"into","","",103,[[],["hertz",3]]],[11,"into","","",104,[[],["hertz",3]]],[11,"into","","",105,[[],["hertz",3]]],[11,"clone","atsamd_hal::common::gpio::v2::dynpin","",17,[[],["dyndisabled",4]]],[11,"clone","","",18,[[],["dyninput",4]]],[11,"clone","","",19,[[],["dynoutput",4]]],[11,"clone","","",20,[[],["dynalternate",4]]],[11,"clone","","",21,[[],["dynpinmode",4]]],[11,"clone","","",22,[[],["dyngroup",4]]],[11,"clone","","",15,[[],["dynpinid",3]]],[11,"clone","atsamd_hal::common::rtc","",52,[[],["datetime",3]]],[11,"clone","","",53,[[],["timerparams",3]]],[11,"clone","atsamd_hal::common::time","",66,[[],["bps",3]]],[11,"clone","","",67,[[],["hertz",3]]],[11,"clone","","",68,[[],["kilohertz",3]]],[11,"clone","","",69,[[],["megahertz",3]]],[11,"clone","","",70,[[],["seconds",3]]],[11,"clone","","",71,[[],["milliseconds",3]]],[11,"clone","","",72,[[],["microseconds",3]]],[11,"clone","","",73,[[],["nanoseconds",3]]],[11,"clone","atsamd_hal::common::timer_params","",75,[[],["timerparams",3]]],[11,"clone","atsamd_hal::common","",0,[[],["resetcause",4]]],[11,"clone","atsamd_hal::common::pwm","",84,[[],["channel",4]]],[11,"clone","atsamd_hal::common::watchdog","",85,[[],["watchdogtimeout",4]]],[11,"clone","atsamd_hal::samd11::clock","",162,[[],["gclock",3]]],[11,"channel","atsamd_hal","",164,[[]]],[11,"channel","","",166,[[]]],[11,"channel","","",168,[[]]],[11,"channel","","",172,[[]]],[11,"channel","","",163,[[]]],[11,"read","atsamd_hal::common::adc","",157,[[],["result",6]]],[11,"delay_ms","atsamd_hal::common::delay","",1,[[]]],[11,"delay_ms","","",1,[[]]],[11,"delay_ms","","",1,[[]]],[11,"delay_ms","atsamd_hal::common::sleeping_delay","",64,[[]]],[11,"delay_us","atsamd_hal::common::delay","",1,[[]]],[11,"delay_us","","",1,[[]]],[11,"delay_us","","",1,[[]]],[11,"delay_us","atsamd_hal::common::sleeping_delay","",64,[[]]],[11,"read","atsamd_hal::common::sercom::v1","",77,[[],["result",4]]],[11,"read","","",78,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",77,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",78,[[],["result",4]]],[11,"write_read","","",77,[[],["result",4]]],[11,"write_read","","",78,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"set_low","","",5,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"set_low","","",14,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"set_low","","",23,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"is_set_low","","",5,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"is_set_low","","",14,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","","",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","","",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_low","","",23,[[],["result",4]]],[11,"read","atsamd_hal::common::sercom::v1","",81,[[],["result",6]]],[11,"read","","",82,[[],["result",6]]],[11,"write","","",81,[[],["result",6]]],[11,"flush","","",81,[[],["result",6]]],[11,"write","","",82,[[],["result",6]]],[11,"flush","","",82,[[],["result",6]]],[11,"read","","",79,[[],[["result",6],["error",4]]]],[11,"send","","",79,[[],[["result",6],["error",4]]]],[11,"read","","",80,[[],[["result",6],["error",4]]]],[11,"send","","",80,[[],[["result",6],["error",4]]]],[11,"start","atsamd_hal::common::rtc","",54,[[]]],[11,"wait","","",54,[[],[["result",6],["void",4]]]],[11,"start","atsamd_hal::samd11::timer","",107,[[]]],[11,"wait","","",107,[[],[["result",6],["void",4]]]],[11,"feed","atsamd_hal::common::watchdog","Feeds an existing watchdog to ensure the processor isn\'t…",161,[[]]],[11,"disable","","",161,[[]]],[11,"start","","Enables a watchdog timer to reset the processor if…",161,[[]]],[11,"disable","atsamd_hal::common::pwm","",160,[[]]],[11,"enable","","",160,[[]]],[11,"get_period","","",160,[[]]],[11,"get_duty","","",160,[[]]],[11,"get_max_duty","","",160,[[]]],[11,"set_duty","","",160,[[]]],[11,"set_period","","",160,[[]]],[11,"disable","","",158,[[]]],[11,"enable","","",158,[[]]],[11,"get_duty","","",158,[[]]],[11,"get_max_duty","","",158,[[]]],[11,"set_duty","","",158,[[]]],[11,"disable","","",159,[[]]],[11,"enable","","",159,[[]]],[11,"get_duty","","",159,[[]]],[11,"get_max_duty","","",159,[[]]],[11,"set_duty","","",159,[[]]],[11,"new","atsamd_hal::common::eic::pin","Construct pad from the appropriate pin in any mode. You…",150,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",150,[[["eic",3]]]],[11,"enable_interrupt","","",150,[[["eic",3]]]],[11,"enable_interrupt_wake","","",150,[[["eic",3]]]],[11,"disable_interrupt","","",150,[[["eic",3]]]],[11,"is_interrupt","","",150,[[]]],[11,"clear_interrupt","","",150,[[]]],[11,"sense","","",150,[[["eic",3],["sense",6]]]],[11,"filter","","",150,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",151,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",151,[[["eic",3]]]],[11,"enable_interrupt","","",151,[[["eic",3]]]],[11,"enable_interrupt_wake","","",151,[[["eic",3]]]],[11,"disable_interrupt","","",151,[[["eic",3]]]],[11,"is_interrupt","","",151,[[]]],[11,"clear_interrupt","","",151,[[]]],[11,"sense","","",151,[[["eic",3],["sense",6]]]],[11,"filter","","",151,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",152,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",152,[[["eic",3]]]],[11,"enable_interrupt","","",152,[[["eic",3]]]],[11,"enable_interrupt_wake","","",152,[[["eic",3]]]],[11,"disable_interrupt","","",152,[[["eic",3]]]],[11,"is_interrupt","","",152,[[]]],[11,"clear_interrupt","","",152,[[]]],[11,"sense","","",152,[[["eic",3],["sense",6]]]],[11,"filter","","",152,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",153,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",153,[[["eic",3]]]],[11,"enable_interrupt","","",153,[[["eic",3]]]],[11,"enable_interrupt_wake","","",153,[[["eic",3]]]],[11,"disable_interrupt","","",153,[[["eic",3]]]],[11,"is_interrupt","","",153,[[]]],[11,"clear_interrupt","","",153,[[]]],[11,"sense","","",153,[[["eic",3],["sense",6]]]],[11,"filter","","",153,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",154,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",154,[[["eic",3]]]],[11,"enable_interrupt","","",154,[[["eic",3]]]],[11,"enable_interrupt_wake","","",154,[[["eic",3]]]],[11,"disable_interrupt","","",154,[[["eic",3]]]],[11,"is_interrupt","","",154,[[]]],[11,"clear_interrupt","","",154,[[]]],[11,"sense","","",154,[[["eic",3],["sense",6]]]],[11,"filter","","",154,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",155,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",155,[[["eic",3]]]],[11,"enable_interrupt","","",155,[[["eic",3]]]],[11,"enable_interrupt_wake","","",155,[[["eic",3]]]],[11,"disable_interrupt","","",155,[[["eic",3]]]],[11,"is_interrupt","","",155,[[]]],[11,"clear_interrupt","","",155,[[]]],[11,"sense","","",155,[[["eic",3],["sense",6]]]],[11,"filter","","",155,[[["eic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",156,[[]]],[11,"enable_event","","Configure the eic with options for this external interrupt",156,[[["eic",3]]]],[11,"enable_interrupt","","",156,[[["eic",3]]]],[11,"enable_interrupt_wake","","",156,[[["eic",3]]]],[11,"disable_interrupt","","",156,[[["eic",3]]]],[11,"is_interrupt","","",156,[[]]],[11,"clear_interrupt","","",156,[[]]],[11,"sense","","",156,[[["eic",3],["sense",6]]]],[11,"filter","","",156,[[["eic",3]]]],[11,"init","atsamd_hal::common::eic","",149,[[["pm",3],["eic",3],["eicclock",3]]]],[11,"adc","atsamd_hal::common::adc","",157,[[["genericclockcontroller",3],["pm",3],["adc",3]]]],[11,"samples","","",157,[[["samplenum_a",4]]]],[11,"gain","","",157,[[["gain_a",4]]]],[11,"reference","","",157,[[["refsel_a",4]]]],[11,"new","atsamd_hal::common::pwm","",158,[[["hertz",3],["pm",3],["tc1tc2clock",3],["tc1",3],["into",8]]]],[11,"set_period","","",158,[[]]],[11,"get_period","","",158,[[],["hertz",3]]],[11,"new","","",159,[[["hertz",3],["tc2",3],["tc1tc2clock",3],["pm",3],["into",8]]]],[11,"set_period","","",159,[[]]],[11,"get_period","","",159,[[],["hertz",3]]],[11,"new","","",160,[[["hertz",3],["tcc0",3],["pm",3],["tcc0clock",3],["into",8]]]],[11,"new","atsamd_hal::common::watchdog","",161,[[["wdt",3]]]]],"p":[[4,"ResetCause"],[3,"Delay"],[3,"Parts"],[8,"GpioExt"],[8,"IntoFunction"],[3,"Pin"],[3,"Pins"],[8,"DisabledConfig"],[8,"InputConfig"],[8,"OutputConfig"],[8,"AlternateConfig"],[8,"PinMode"],[8,"PinId"],[8,"AnyPin"],[3,"Pin"],[3,"DynPinId"],[4,"Error"],[4,"DynDisabled"],[4,"DynInput"],[4,"DynOutput"],[4,"DynAlternate"],[4,"DynPinMode"],[4,"DynGroup"],[3,"DynPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_InputPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_OutputPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_ToggleableOutputPin"],[8,"_embedded_hal_adc_OneShot"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_rng_Read"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_digital_InputPin"],[8,"_embedded_hal_digital_OutputPin"],[8,"_embedded_hal_digital_ToggleableOutputPin"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_serial_Write"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_watchdog_Watchdog"],[8,"_embedded_hal_watchdog_WatchdogDisable"],[8,"_embedded_hal_watchdog_WatchdogEnable"],[8,"_embedded_hal_Capture"],[8,"_embedded_hal_Pwm"],[8,"_embedded_hal_PwmPin"],[8,"_embedded_hal_Qei"],[8,"EicPin"],[3,"Datetime"],[3,"TimerParams"],[3,"Rtc"],[4,"I2CError"],[4,"Error"],[8,"PadPin"],[8,"DipoDopo"],[8,"RxpoTxpo"],[8,"Sercom"],[8,"Map"],[8,"AnyPad"],[3,"Pad"],[3,"SleepingDelay"],[8,"CommonSpi"],[3,"Bps"],[3,"Hertz"],[3,"KiloHertz"],[3,"MegaHertz"],[3,"Seconds"],[3,"Milliseconds"],[3,"Microseconds"],[3,"Nanoseconds"],[8,"U32Ext"],[3,"TimerParams"],[8,"InterruptDrivenTimer"],[3,"I2CMaster0"],[3,"I2CMaster1"],[3,"SPIMaster0"],[3,"SPIMaster1"],[3,"UART0"],[3,"UART1"],[8,"ExternalInterrupt"],[4,"Channel"],[4,"WatchdogTimeout"],[3,"GenericClockController"],[3,"Tcc0Clock"],[3,"Tc1Tc2Clock"],[3,"Sercom0CoreClock"],[3,"Sercom1CoreClock"],[3,"Sercom2CoreClock"],[3,"UsbClock"],[3,"RtcClock"],[3,"AdcClock"],[3,"WdtClock"],[3,"EicClock"],[3,"Evsys0Clock"],[3,"Evsys1Clock"],[3,"Evsys2Clock"],[3,"Evsys3Clock"],[3,"Evsys4Clock"],[3,"Evsys5Clock"],[3,"AcDigClock"],[3,"AcAnaClock"],[3,"DacClock"],[8,"Count16"],[3,"TimerCounter"],[3,"NoneT"],[3,"Port"],[3,"Disabled"],[3,"Input"],[3,"Output"],[3,"Alternate"],[4,"Floating"],[4,"PullDown"],[4,"PullUp"],[4,"PushPull"],[4,"Readable"],[4,"A"],[4,"B"],[4,"C"],[4,"D"],[4,"E"],[4,"F"],[4,"G"],[4,"GroupA"],[4,"PA02"],[4,"PA04"],[4,"PA05"],[4,"PA08"],[4,"PA09"],[4,"PA14"],[4,"PA15"],[4,"PA24"],[4,"PA25"],[4,"PA28"],[4,"PA30"],[4,"PA31"],[3,"SPIMaster0Padout"],[3,"SPIMaster1Padout"],[3,"UART0Padout"],[3,"UART1Padout"],[4,"Sercom0"],[4,"Sercom1"],[4,"Pad0"],[4,"Pad1"],[4,"Pad2"],[4,"Pad3"],[3,"EIC"],[3,"ExtInt1"],[3,"ExtInt2"],[3,"ExtInt3"],[3,"ExtInt4"],[3,"ExtInt5"],[3,"ExtInt6"],[3,"ExtInt7"],[3,"Adc"],[3,"Pwm1"],[3,"Pwm2"],[3,"Pwm0"],[3,"Watchdog"],[3,"GClock"],[6,"Pa15"],[6,"Pa2"],[6,"Pa31"],[6,"Pa4"],[6,"Pa24"],[6,"Pa5"],[6,"Pa25"],[6,"Pa8"],[6,"Pa9"],[6,"Pa14"]]},\
"bare_metal":{"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[3,"CriticalSection","","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[]]],[11,"new","","Creates a new peripheral",1,[[]]],[11,"borrow","","Borrows the peripheral for the duration of a critical…",1,[[["criticalsection",3]]]],[11,"get","","Returns a pointer to the register block",1,[[]]],[11,"new","","Creates a critical section token",2,[[]]],[11,"new","","Creates a new mutex",3,[[]]],[11,"borrow","","Borrows the data for the duration of the critical section",3,[[["criticalsection",3]]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[8,"Nr"],[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like struct.","i":[[8,"BitRange","bitfield","A trait to get or set ranges of bits.",null,null],[10,"bit_range","","Get a range of bits.",0,[[]]],[10,"set_bit_range","","Set a range of bits.",0,[[]]],[8,"Bit","","A trait to get or set a single bit.",null,null],[10,"bit","","Get a single bit.",1,[[]]],[10,"set_bit","","Set a single bit.",1,[[]]],[14,"bitfield_fields","","Declares the fields of struct.",null,null],[14,"bitfield_debug","","Generates a `fmt::Debug` implementation.",null,null],[14,"bitfield_bitrange","","Implements `BitRange` for a tuple struct (or \\\"newtype\\\").",null,null],[14,"bitfield","","Combines `bitfield_bitrange` and `bitfield_fields`.",null,null]],"p":[[8,"BitRange"],[8,"Bit"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","i":[[0,"asm","cortex_m","Miscellaneous assembly instructions",null,null],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick this…",null,[[]]],[5,"delay","","Blocks the program for at least `n` instruction cycles",null,[[]]],[5,"nop","","A no-operation. Useful to prevent delay loops from being…",null,[[]]],[5,"udf","","Generate an Undefined Instruction exception.",null,[[]]],[5,"wfe","","Wait For Event",null,[[]]],[5,"wfi","","Wait For Interrupt",null,[[]]],[5,"sev","","Send Event",null,[[]]],[5,"isb","","Instruction Synchronization Barrier",null,[[]]],[5,"dsb","","Data Synchronization Barrier",null,[[]]],[5,"dmb","","Data Memory Barrier",null,[[]]],[0,"interrupt","cortex_m","Interrupts",null,null],[3,"CriticalSection","cortex_m::interrupt","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure `f` in an interrupt-free context.",null,[[]]],[0,"peripheral","cortex_m","Core peripherals",null,null],[3,"Peripherals","cortex_m::peripheral","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",1,null],[12,"CPUID","","CPUID",1,null],[12,"DCB","","Debug Control Block",1,null],[12,"DWT","","Data Watchpoint and Trace unit",1,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",1,null],[12,"FPU","","Floating Point Unit (only present on…",1,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",1,null],[12,"MPU","","Memory Protection Unit",1,null],[12,"NVIC","","Nested Vector Interrupt Controller",1,null],[12,"SCB","","System Control Block",1,null],[12,"SYST","","SysTick: System Timer",1,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",1,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"FPU","","Floating Point Unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[0,"cpuid","","CPUID",null,null],[3,"RegisterBlock","cortex_m::peripheral::cpuid","Register block",null,null],[12,"base","","CPUID base",2,null],[0,"dcb","cortex_m::peripheral","Debug Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::dcb","Register block",null,null],[12,"dhcsr","","Debug Halting Control and Status",3,null],[12,"dcrsr","","Debug Core Register Selector",3,null],[12,"dcrdr","","Debug Core Register Data",3,null],[12,"demcr","","Debug Exception and Monitor Control",3,null],[11,"enable_trace","cortex_m::peripheral","Enables TRACE. This is for example required by the…",4,[[]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",4,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",4,[[]]],[0,"dwt","","Data Watchpoint and Trace unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::dwt","Register block",null,null],[12,"ctrl","","Control",5,null],[12,"pcsr","","Program Counter Sample",5,null],[12,"c","","Comparators",5,null],[3,"Comparator","","Comparator",null,null],[12,"comp","","Comparator",6,null],[12,"mask","","Comparator Mask",6,null],[12,"function","","Comparator Function",6,null],[0,"mpu","cortex_m::peripheral","Memory Protection Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::mpu","Register block",null,null],[12,"_type","","Type",7,null],[12,"ctrl","","Control",7,null],[12,"rnr","","Region Number",7,null],[12,"rbar","","Region Base Address",7,null],[12,"rasr","","Region Attribute and Size",7,null],[12,"rbar_a1","","Alias 1 of RBAR",7,null],[12,"rsar_a1","","Alias 1 of RSAR",7,null],[12,"rbar_a2","","Alias 2 of RBAR",7,null],[12,"rsar_a2","","Alias 2 of RSAR",7,null],[12,"rbar_a3","","Alias 3 of RBAR",7,null],[12,"rsar_a3","","Alias 3 of RSAR",7,null],[0,"nvic","cortex_m::peripheral","Nested Vector Interrupt Controller",null,null],[3,"RegisterBlock","cortex_m::peripheral::nvic","Register block",null,null],[12,"iser","","Interrupt Set-Enable",8,null],[12,"icer","","Interrupt Clear-Enable",8,null],[12,"ispr","","Interrupt Set-Pending",8,null],[12,"icpr","","Interrupt Clear-Pending",8,null],[12,"ipr","","Interrupt Priority",8,null],[11,"clear_pending","cortex_m::peripheral","Clears `interrupt`\'s pending state",9,[[]]],[11,"mask","","Disables `interrupt`",9,[[]]],[11,"unmask","","Enables `interrupt`",9,[[]]],[11,"disable","","Disables `interrupt`",9,[[]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",9,[[]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",9,[[]]],[11,"is_enabled","","Checks if `interrupt` is enabled",9,[[]]],[11,"is_pending","","Checks if `interrupt` is pending",9,[[]]],[11,"pend","","Forces `interrupt` into pending state",9,[[]]],[11,"set_pending","","Forces `interrupt` into pending state",9,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of `interrupt` to `prio`",9,[[]]],[11,"unpend","","Clears `interrupt`\'s pending state",9,[[]]],[0,"scb","","System Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::scb","Register block",null,null],[12,"icsr","","Interrupt Control and State",10,null],[12,"vtor","","Vector Table Offset (not present on Cortex-M0 variants)",10,null],[12,"aircr","","Application Interrupt and Reset Control",10,null],[12,"scr","","System Control",10,null],[12,"ccr","","Configuration and Control",10,null],[12,"shpr","","System Handler Priority (word accessible only on Cortex-M0…",10,null],[12,"shcsr","","System Handler Control and State",10,null],[4,"Exception","","Processor core exceptions (internal interrupts)",null,null],[13,"NonMaskableInt","","Non maskable interrupt",11,null],[13,"HardFault","","Hard fault interrupt",11,null],[13,"SVCall","","SV call interrupt",11,null],[13,"PendSV","","Pend SV interrupt",11,null],[13,"SysTick","","System Tick interrupt",11,null],[4,"VectActive","","Active exception number",null,null],[13,"ThreadMode","","Thread mode",12,null],[13,"Exception","","Processor core exception (internal interrupts)",12,null],[13,"Interrupt","","Device specific exception (external interrupts)",12,null],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open…",13,null],[4,"SystemHandler","cortex_m::peripheral::scb","System handlers, exceptions with configurable priority",null,null],[13,"SVCall","","SV call interrupt",14,null],[13,"PendSV","","Pend SV interrupt",14,null],[13,"SysTick","","System Tick interrupt",14,null],[11,"vect_active","cortex_m::peripheral","Returns the active exception number",15,[[],["vectactive",4]]],[11,"irqn","cortex_m::peripheral::scb","Returns the IRQ number of this `Exception`",11,[[]]],[11,"from","","Converts a `byte` into `VectActive`",12,[[],["option",4]]],[11,"set_sleepdeep","cortex_m::peripheral","Set the SLEEPDEEP bit in the SCR register",15,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",15,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",15,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",15,[[]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",15,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",15,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",15,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",15,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",15,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will pend…",15,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",15,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",15,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",15,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",15,[[["systemhandler",4]]]],[0,"syst","","SysTick: System Timer",null,null],[3,"RegisterBlock","cortex_m::peripheral::syst","Register block",null,null],[12,"csr","","Control and Status",16,null],[12,"rvr","","Reload Value",16,null],[12,"cvr","","Current Value",16,null],[12,"calib","","Calibration Value",16,null],[4,"SystClkSource","","SysTick clock source",null,null],[13,"Core","","Core-provided clock",17,null],[13,"External","","External reference clock",17,null],[11,"clear_current","cortex_m::peripheral","Clears current value to 0",18,[[]]],[11,"disable_counter","","Disables counter",18,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",18,[[]]],[11,"enable_counter","","Enables counter",18,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",18,[[]]],[11,"get_clock_source","","Gets clock source",18,[[],["systclksource",4]]],[11,"get_current","","Gets current value",18,[[]]],[11,"get_reload","","Gets reload value",18,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",18,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",18,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",18,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",18,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",18,[[]]],[11,"is_precise","","Checks if the calibration value is precise",18,[[]]],[11,"set_clock_source","","Sets clock source",18,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",18,[[]]],[11,"take","","Returns all the core peripherals once",1,[[],["option",4]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[]]],[11,"ptr","","Returns a pointer to the register block",19,[[]]],[11,"ptr","","Returns a pointer to the register block",4,[[]]],[11,"ptr","","Returns a pointer to the register block",20,[[]]],[11,"ptr","","Returns a pointer to the register block",21,[[]]],[11,"ptr","","Returns a pointer to the register block",9,[[]]],[11,"ptr","","Returns a pointer to the register block",15,[[]]],[11,"ptr","","Returns a pointer to the register block",18,[[]]],[0,"register","cortex_m","Processor core registers",null,null],[0,"control","cortex_m::register","Control register",null,null],[3,"Control","cortex_m::register::control","Control register",null,null],[4,"Npriv","","Thread mode privilege level",null,null],[13,"Privileged","","Privileged",22,null],[13,"Unprivileged","","Unprivileged",22,null],[4,"Spsel","","Currently active stack pointer",null,null],[13,"Msp","","MSP is the current stack pointer",23,null],[13,"Psp","","PSP is the current stack pointer",23,null],[4,"Fpca","","Whether context floating-point is currently active",null,null],[13,"Active","","Floating-point context active.",24,null],[13,"NotActive","","No floating-point context active",24,null],[5,"read","","Reads the CPU register",null,[[],["control",3]]],[5,"write","","Writes to the CPU register.",null,[[["control",3]]]],[11,"from_bits","","Creates a `Control` value from raw bits.",25,[[]]],[11,"bits","","Returns the contents of the register as raw bits",25,[[]]],[11,"npriv","","Thread mode privilege level",25,[[],["npriv",4]]],[11,"set_npriv","","Sets the thread mode privilege level value (nPRIV).",25,[[["npriv",4]]]],[11,"spsel","","Currently active stack pointer",25,[[],["spsel",4]]],[11,"set_spsel","","Sets the SPSEL value.",25,[[["spsel",4]]]],[11,"fpca","","Whether context floating-point is currently active",25,[[],["fpca",4]]],[11,"set_fpca","","Sets the FPCA value.",25,[[["fpca",4]]]],[11,"is_privileged","","Is in privileged thread mode?",22,[[]]],[11,"is_unprivileged","","Is in unprivileged thread mode?",22,[[]]],[11,"is_msp","","Is MSP the current stack pointer?",23,[[]]],[11,"is_psp","","Is PSP the current stack pointer?",23,[[]]],[11,"is_active","","Is a floating-point context active?",24,[[]]],[11,"is_not_active","","Is a floating-point context not active?",24,[[]]],[0,"msp","cortex_m::register","Main Stack Pointer",null,null],[5,"read","cortex_m::register::msp","Reads the CPU register",null,[[]]],[5,"write","","Writes `bits` to the CPU register",null,[[]]],[0,"primask","cortex_m::register","Priority mask register",null,null],[4,"Primask","cortex_m::register::primask","All exceptions with configurable priority are ...",null,null],[13,"Active","","Active",26,null],[13,"Inactive","","Inactive",26,null],[5,"read","","Reads the CPU register",null,[[],["primask",4]]],[11,"is_active","","All exceptions with configurable priority are active",26,[[]]],[11,"is_inactive","","All exceptions with configurable priority are inactive",26,[[]]],[0,"psp","cortex_m::register","Process Stack Pointer",null,null],[5,"read","cortex_m::register::psp","Reads the CPU register",null,[[]]],[5,"write","","Writes `bits` to the CPU register",null,[[]]],[14,"iprint","cortex_m","Macro for sending a formatted string through an ITM channel",null,null],[14,"iprintln","","Macro for sending a formatted string through an ITM…",null,null],[14,"singleton","","Macro to create a mutable reference to a statically…",null,null],[11,"from","cortex_m::interrupt","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","cortex_m::peripheral","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::cpuid","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dcb","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dwt","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::mpu","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::nvic","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::scb","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::syst","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","cortex_m::register::control","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","cortex_m::register::primask","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"deref","cortex_m::peripheral","",19,[[]]],[11,"deref","","",4,[[]]],[11,"deref","","",20,[[]]],[11,"deref","","",21,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",15,[[]]],[11,"deref","","",18,[[]]],[11,"fmt","cortex_m::peripheral::scb","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::syst","",17,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::control","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::primask","",26,[[["formatter",3]],["result",6]]],[11,"eq","cortex_m::peripheral::scb","",11,[[["exception",4]]]],[11,"eq","","",12,[[["vectactive",4]]]],[11,"ne","","",12,[[["vectactive",4]]]],[11,"eq","","",14,[[["systemhandler",4]]]],[11,"eq","cortex_m::peripheral::syst","",17,[[["systclksource",4]]]],[11,"eq","cortex_m::register::control","",22,[[["npriv",4]]]],[11,"eq","","",23,[[["spsel",4]]]],[11,"eq","","",24,[[["fpca",4]]]],[11,"eq","cortex_m::register::primask","",26,[[["primask",4]]]],[11,"clone","cortex_m::peripheral::scb","",11,[[],["exception",4]]],[11,"clone","","",12,[[],["vectactive",4]]],[11,"clone","","",14,[[],["systemhandler",4]]],[11,"clone","cortex_m::peripheral::syst","",17,[[],["systclksource",4]]],[11,"clone","cortex_m::register::control","",25,[[],["control",3]]],[11,"clone","","",22,[[],["npriv",4]]],[11,"clone","","",23,[[],["spsel",4]]],[11,"clone","","",24,[[],["fpca",4]]],[11,"clone","cortex_m::register::primask","",26,[[],["primask",4]]],[11,"new","cortex_m::interrupt","Creates a critical section token",27,[[],["criticalsection",3]]],[11,"new","","Creates a new mutex",28,[[],["mutex",3]]],[11,"borrow","","Borrows the data for the duration of the critical section",28,[[["criticalsection",3]]]]],"p":[[8,"Nr"],[3,"Peripherals"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"DCB"],[3,"RegisterBlock"],[3,"Comparator"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"NVIC"],[3,"RegisterBlock"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"SCB"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"SYST"],[3,"CPUID"],[3,"DWT"],[3,"MPU"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[3,"Control"],[4,"Primask"],[3,"CriticalSection"],[3,"Mutex"],[3,"CBP"],[3,"FPB"],[3,"FPU"],[3,"ITM"],[3,"TPIU"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","i":[[4,"Direction","embedded_hal","Count direction",null,null],[13,"Downcounting","","3, 2, 1",0,null],[13,"Upcounting","","1, 2, 3",0,null],[0,"adc","","Analog-digital conversion traits",null,null],[8,"Channel","embedded_hal::adc","A marker trait to identify MCU pins that can be used as…",null,null],[16,"ID","","Channel ID type",1,null],[10,"channel","","Get the specific ID that identifies this channel, for…",1,[[]]],[8,"OneShot","","ADCs that sample on single channels per request, and do so…",null,null],[16,"Error","","Error type returned by ADC methods",2,null],[10,"read","","Request that the ADC begin a conversion on the specified pin",2,[[],["result",6]]],[0,"blocking","embedded_hal","Blocking API",null,null],[0,"delay","embedded_hal::blocking","Delays",null,null],[8,"DelayMs","embedded_hal::blocking::delay","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",3,[[]]],[8,"DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",4,[[]]],[0,"i2c","embedded_hal::blocking","Blocking I2C API",null,null],[8,"Read","embedded_hal::blocking::i2c","Blocking read",null,null],[16,"Error","","Error type",5,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",5,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",6,null],[10,"write","","Sends bytes to slave with address `addr`",6,[[],["result",4]]],[8,"WriteIter","","Blocking write (iterator version)",null,null],[16,"Error","","Error type",7,null],[10,"write","","Sends bytes to slave with address `addr`",7,[[],["result",4]]],[8,"WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",8,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",8,[[],["result",4]]],[8,"WriteIterRead","","Blocking write (iterator version) + read",null,null],[16,"Error","","Error type",9,null],[10,"write_iter_read","","Sends bytes to slave with address `addr` and then reads…",9,[[],["result",4]]],[0,"rng","embedded_hal::blocking","Blocking hardware random number generator",null,null],[8,"Read","embedded_hal::blocking::rng","Blocking read",null,null],[16,"Error","","Error type",10,null],[10,"read","","Reads enough bytes from hardware random number generator…",10,[[],["result",4]]],[0,"serial","embedded_hal::blocking","Blocking serial API",null,null],[0,"write","embedded_hal::blocking::serial","Blocking serial write",null,null],[8,"Default","embedded_hal::blocking::serial::write","Marker trait to opt into default blocking write…",null,null],[8,"Write","embedded_hal::blocking::serial","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",11,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",11,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered words",11,[[],["result",4]]],[0,"spi","embedded_hal::blocking","Blocking SPI API",null,null],[0,"transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[8,"Default","embedded_hal::blocking::spi::transfer","Default implementation of `blocking::spi::Transfer<W>` for…",null,null],[0,"write","embedded_hal::blocking::spi","Blocking write",null,null],[8,"Default","embedded_hal::blocking::spi::write","Default implementation of `blocking::spi::Write<W>` for…",null,null],[0,"write_iter","embedded_hal::blocking::spi","Blocking write (iterator version)",null,null],[8,"Default","embedded_hal::blocking::spi::write_iter","Default implementation of `blocking::spi::WriteIter<W>`…",null,null],[8,"Transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[16,"Error","","Error type",12,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",12,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",13,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",13,[[],["result",4]]],[8,"WriteIter","","Blocking write (iterator version)",null,null],[16,"Error","","Error type",14,null],[10,"write_iter","","Sends `words` to the slave, ignoring all the incoming words",14,[[],["result",4]]],[0,"digital","embedded_hal","Digital I/O",null,null],[0,"v1","embedded_hal::digital","Digital I/O",null,null],[0,"toggleable","embedded_hal::digital::v1","If you can read and write the output state, a pin is…",null,null],[8,"Default","embedded_hal::digital::v1::toggleable","Software-driven `toggle()` implementation.",null,null],[8,"OutputPin","embedded_hal::digital::v1","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",15,[[]]],[10,"set_high","","Drives the pin high",15,[[]]],[8,"StatefulOutputPin","","Push-pull output pin that can read its output state",null,null],[10,"is_set_high","","Is the pin in drive high mode?",16,[[]]],[10,"is_set_low","","Is the pin in drive low mode?",16,[[]]],[8,"ToggleableOutputPin","","Output pin that can be toggled",null,null],[10,"toggle","","Toggle pin output.",17,[[]]],[8,"InputPin","","Single digital input pin",null,null],[10,"is_high","","Is the input pin high?",18,[[]]],[10,"is_low","","Is the input pin low?",18,[[]]],[0,"v2","embedded_hal::digital","Digital I/O",null,null],[0,"toggleable","embedded_hal::digital::v2","If you can read and write the output state, a pin is…",null,null],[8,"Default","embedded_hal::digital::v2::toggleable","Software-driven `toggle()` implementation.",null,null],[8,"OutputPin","embedded_hal::digital::v2","Single digital push-pull output pin",null,null],[16,"Error","","Error type",19,null],[10,"set_low","","Drives the pin low",19,[[],["result",4]]],[10,"set_high","","Drives the pin high",19,[[],["result",4]]],[8,"StatefulOutputPin","","Push-pull output pin that can read its output state",null,null],[10,"is_set_high","","Is the pin in drive high mode?",20,[[],["result",4]]],[10,"is_set_low","","Is the pin in drive low mode?",20,[[],["result",4]]],[8,"ToggleableOutputPin","","Output pin that can be toggled",null,null],[16,"Error","","Error type",21,null],[10,"toggle","","Toggle pin output.",21,[[],["result",4]]],[8,"InputPin","","Single digital input pin",null,null],[16,"Error","","Error type",22,null],[10,"is_high","","Is the input pin high?",22,[[],["result",4]]],[10,"is_low","","Is the input pin low?",22,[[],["result",4]]],[0,"v1_compat","embedded_hal::digital","v1 compatibility wrappers",null,null],[3,"OldOutputPin","embedded_hal::digital::v1_compat","Wrapper to allow fallible `v2::OutputPin` traits to be…",null,null],[3,"OldInputPin","","Wrapper to allow fallible `v2::InputPin` traits to be…",null,null],[11,"new","","Create a new OldOutputPin wrapper around a `v2::OutputPin`",23,[[]]],[11,"new","","Create an `OldInputPin` wrapper around a `v2::InputPin`.",24,[[]]],[0,"v2_compat","embedded_hal::digital","v2 compatibility shims",null,null],[0,"fmt","embedded_hal","Implementation of `core::fmt::Write` for the HAL\'s…",null,null],[0,"prelude","","The prelude is a collection of all the traits in this crate",null,null],[0,"serial","","Serial interface",null,null],[8,"Read","embedded_hal::serial","Read half of a serial interface",null,null],[16,"Error","","Read error",25,null],[10,"read","","Reads a single word from the serial interface",25,[[],["result",6]]],[8,"Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",26,null],[10,"write","","Writes a single word to the serial interface",26,[[],["result",6]]],[10,"flush","","Ensures that none of the previously written words are…",26,[[],["result",6]]],[0,"spi","embedded_hal","Serial Peripheral Interface",null,null],[3,"Mode","embedded_hal::spi","SPI mode",null,null],[12,"polarity","","Clock polarity",27,null],[12,"phase","","Clock phase",27,null],[4,"Polarity","","Clock polarity",null,null],[13,"IdleLow","","Clock signal low when idle",28,null],[13,"IdleHigh","","Clock signal high when idle",28,null],[4,"Phase","","Clock phase",null,null],[13,"CaptureOnFirstTransition","","Data in \\\"captured\\\" on the first clock transition",29,null],[13,"CaptureOnSecondTransition","","Data in \\\"captured\\\" on the second clock transition",29,null],[17,"MODE_0","","Helper for CPOL = 0, CPHA = 0",null,null],[17,"MODE_1","","Helper for CPOL = 0, CPHA = 1",null,null],[17,"MODE_2","","Helper for CPOL = 1, CPHA = 0",null,null],[17,"MODE_3","","Helper for CPOL = 1, CPHA = 1",null,null],[8,"FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",30,null],[10,"read","","Reads the word stored in the shift register",30,[[],["result",6]]],[10,"send","","Sends a word to the slave",30,[[],["result",6]]],[0,"timer","embedded_hal","Timers",null,null],[8,"CountDown","embedded_hal::timer","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",31,null],[10,"start","","Starts a new count down",31,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",31,[[],[["result",6],["void",4]]]],[8,"Periodic","","Marker trait that indicates that a timer is periodic",null,null],[8,"Cancel","","Trait for cancelable countdowns.",null,null],[16,"Error","","Error returned when a countdown can\'t be canceled.",32,null],[10,"cancel","","Tries to cancel this countdown.",32,[[],["result",4]]],[0,"watchdog","embedded_hal","Traits for interactions with a processors watchdog timer.",null,null],[8,"Watchdog","embedded_hal::watchdog","Feeds an existing watchdog to ensure the processor isn\'t…",null,null],[10,"feed","","Triggers the watchdog. This must be done once the watchdog…",33,[[]]],[8,"WatchdogEnable","","Enables A watchdog timer to reset the processor if…",null,null],[16,"Time","","Unit of time used by the watchdog",34,null],[10,"start","","Starts the watchdog with a given period, typically once…",34,[[]]],[8,"WatchdogDisable","","Disables a running watchdog timer so the processor won\'t…",null,null],[10,"disable","","Disables the watchdog",35,[[]]],[8,"Capture","embedded_hal","Input capture",null,null],[16,"Error","","Enumeration of `Capture` errors",36,null],[16,"Channel","","Enumeration of channels that can be used with this…",36,null],[16,"Time","","A time unit that can be converted into a human time unit…",36,null],[16,"Capture","","The type of the value returned by `capture`",36,null],[10,"capture","","\\\"Waits\\\" for a transition in the capture `channel` and…",36,[[],["result",6]]],[10,"disable","","Disables a capture `channel`",36,[[]]],[10,"enable","","Enables a capture `channel`",36,[[]]],[10,"get_resolution","","Returns the current resolution",36,[[]]],[10,"set_resolution","","Sets the resolution of the capture timer",36,[[]]],[8,"Pwm","","Pulse Width Modulation",null,null],[16,"Channel","","Enumeration of channels that can be used with this `Pwm`…",37,null],[16,"Time","","A time unit that can be converted into a human time unit…",37,null],[16,"Duty","","Type for the `duty` methods",37,null],[10,"disable","","Disables a PWM `channel`",37,[[]]],[10,"enable","","Enables a PWM `channel`",37,[[]]],[10,"get_period","","Returns the current PWM period",37,[[]]],[10,"get_duty","","Returns the current duty cycle",37,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",37,[[]]],[10,"set_duty","","Sets a new duty cycle",37,[[]]],[10,"set_period","","Sets a new PWM period",37,[[]]],[8,"PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",38,null],[10,"disable","","Disables a PWM `channel`",38,[[]]],[10,"enable","","Enables a PWM `channel`",38,[[]]],[10,"get_duty","","Returns the current duty cycle",38,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",38,[[]]],[10,"set_duty","","Sets a new duty cycle",38,[[]]],[8,"Qei","","Quadrature encoder interface",null,null],[16,"Count","","The type of the value returned by `count`",39,null],[10,"count","","Returns the current pulse count of the encoder",39,[[]]],[10,"direction","","Returns the count direction",39,[[],["direction",4]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",23,[[],["result",4]]],[11,"set_high","","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"is_set_high","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"is_low","","",24,[[],["result",4]]],[11,"is_high","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","embedded_hal::spi","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",23,[[]]],[11,"set_high","","",23,[[]]],[11,"is_set_low","","",23,[[]]],[11,"is_set_high","","",23,[[]]],[11,"is_low","","",24,[[]]],[11,"is_high","","",24,[[]]],[11,"from","","",23,[[]]],[11,"from","","",24,[[]]],[11,"fmt","embedded_hal","",0,[[["formatter",3]],["result",6]]],[11,"eq","embedded_hal::spi","",28,[[["polarity",4]]]],[11,"eq","","",29,[[["phase",4]]]],[11,"eq","","",27,[[["mode",3]]]],[11,"ne","","",27,[[["mode",3]]]],[11,"eq","embedded_hal","",0,[[["direction",4]]]],[11,"write_str","embedded_hal::serial","",26,[[],["result",6]]],[11,"clone","embedded_hal::spi","",28,[[],["polarity",4]]],[11,"clone","","",29,[[],["phase",4]]],[11,"clone","","",27,[[],["mode",3]]],[11,"clone","embedded_hal","",0,[[],["direction",4]]]],"p":[[4,"Direction"],[8,"Channel"],[8,"OneShot"],[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteIter"],[8,"WriteRead"],[8,"WriteIterRead"],[8,"Read"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"WriteIter"],[8,"OutputPin"],[8,"StatefulOutputPin"],[8,"ToggleableOutputPin"],[8,"InputPin"],[8,"OutputPin"],[8,"StatefulOutputPin"],[8,"ToggleableOutputPin"],[8,"InputPin"],[3,"OldOutputPin"],[3,"OldInputPin"],[8,"Read"],[8,"Write"],[3,"Mode"],[4,"Polarity"],[4,"Phase"],[8,"FullDuplex"],[8,"CountDown"],[8,"Cancel"],[8,"Watchdog"],[8,"WatchdogEnable"],[8,"WatchdogDisable"],[8,"Capture"],[8,"Pwm"],[8,"PwmPin"],[8,"Qei"]]},\
"generic_array":{"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[],["mappedsequence",6]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[],["mappedsequence",6]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray",3]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray",3]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray",3]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[],["option",4]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","generic_array::iter","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"map","generic_array","",10,[[],["mappedsequence",6]]],[11,"zip","","",10,[[],["mappedsequence",6]]],[11,"fold","","",10,[[]]],[11,"generate","","",10,[[],["genericarray",3]]],[11,"append","","",10,[[]]],[11,"prepend","","",10,[[]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","generic_array::iter","",3,[[["formatter",3]],["result",6]]],[11,"eq","generic_array","",10,[[]]],[11,"cmp","","",10,[[["genericarray",3]],["ordering",4]]],[11,"partial_cmp","","",10,[[["genericarray",3]],[["option",4],["ordering",4]]]],[11,"drop","generic_array::iter","",3,[[]]],[11,"hash","generic_array","",10,[[]]],[11,"len","generic_array::iter","",3,[[]]],[11,"borrow","generic_array","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"from_iter","","",10,[[],["genericarray",3]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"next_back","generic_array::iter","",3,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[]]],[11,"nth","","",3,[[],["option",4]]],[11,"last","","",3,[[],["option",4]]],[11,"into_iter","generic_array","",10,[[]]],[11,"clone","","",10,[[],["genericarray",3]]],[11,"clone","generic_array::iter","",3,[[]]],[11,"default","generic_array","",10,[[]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]},\
"nb":{"doc":"Minimal and reusable non-blocking I/O layer","i":[[14,"block","nb","Turns the non-blocking expression `$e` into a blocking…",null,null],[4,"Error","","A non-blocking error",null,null],[13,"Other","","A different kind of error",0,null],[13,"WouldBlock","","This operation requires blocking behavior to complete",0,null],[6,"Result","","A non-blocking result",null,null],[14,"await","","Await operation (won\'t work until the language gains…",null,null],[14,"try_nb","","Future adapter",null,null],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"cmp","","",0,[[["error",4]],["ordering",4]]],[11,"from","","",0,[[],["error",4]]],[11,"partial_cmp","","",0,[[["error",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["error",4]]]],[11,"le","","",0,[[["error",4]]]],[11,"gt","","",0,[[["error",4]]]],[11,"ge","","",0,[[["error",4]]]],[11,"hash","","",0,[[]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"map","","Maps an `Error<E>` to `Error<T>` by applying a function to…",0,[[],["error",4]]]],"p":[[4,"Error"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",0,[[],[["nonzerou32",3],["option",4]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"from_seed","","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",0,[[["nonzerou32",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",0,[[["formatter",3]],["result",6]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",null,null]],"p":[]},\
"vcell":{"doc":"Just like `Cell` but with volatile read / write operations","i":[[3,"VolatileCell","vcell","Just like `Cell` but with volatile read / write operations",null,null],[11,"new","","Creates a new `VolatileCell` containing the given value",0,[[]]],[11,"get","","Returns a copy of the contained value",0,[[]]],[11,"set","","Sets the contained value",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"VolatileCell"]]},\
"void":{"doc":"VoidThe uninhabited void type for use in statically…","i":[[4,"Void","void","The empty type for cases which can\'t occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,[[["void",4]]]],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[]]],[11,"partial_cmp","","",2,[[],[["ordering",4],["option",4]]]],[11,"clone","","",2,[[],["void",4]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",null,null],[3,"RW","","Read-Write register",null,null],[3,"WO","","Write-Only register",null,null],[11,"read","","Reads the value of the register",0,[[]]],[11,"modify","","Performs a read-modify-write operation",1,[[]]],[11,"read","","Reads the value of the register",1,[[]]],[11,"write","","Writes a `value` into the register",1,[[]]],[11,"write","","Writes `value` into the register",2,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);