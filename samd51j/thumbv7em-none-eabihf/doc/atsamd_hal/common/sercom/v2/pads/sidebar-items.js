initSidebarItems({"enum":[["IoSet1","Represents the corresponding IOSET"],["IoSet2","Represents the corresponding IOSET"],["IoSet3","Represents the corresponding IOSET"],["IoSet4","Represents the corresponding IOSET"],["IoSet5","Represents the corresponding IOSET"],["IoSet6","Represents the corresponding IOSET"],["Pad0","Represents the corresponding SERCOM pad number"],["Pad1","Represents the corresponding SERCOM pad number"],["Pad2","Represents the corresponding SERCOM pad number"],["Pad3","Represents the corresponding SERCOM pad number"],["Sercom0","Represents the corresponding SERCOM instance"],["Sercom1","Represents the corresponding SERCOM instance"],["Sercom2","Represents the corresponding SERCOM instance"],["Sercom3","Represents the corresponding SERCOM instance"],["Sercom4","Represents the corresponding SERCOM instance"],["Sercom5","Represents the corresponding SERCOM instance"]],"struct":[["Pad","Represents a SERCOM Pad configured to use a particular pin"],["Pads","Tuple struct containing all four [`Pad`]s for a given [`Sercom`] and [`IoSet`]"]],"trait":[["AnyPad","Meta-type representing any [`Pad`]"],["IoSet","Type-level `enum` representing a SERCOM IOSET configuration"],["Map","Type-level function mapping [`Pad`]s to [`Pin`]s"],["OptionalPad","Meta-type representing an optional [`Pad`]."],["PadNum","Type-level `enum` representing a SERCOM pad number"],["Sercom","Type-level `enum` representing a Serial Communication Interface (SERCOM)"],["SomePad","Meta-type representing a valid [`Pad`]."]],"type":[["ConcretePad","Type alias to convert from an implementation of [`AnyPad`] to the corresponding concrete [`Pad`]"],["SERCOM","Type alias to extract the correct PAC SERCOM type from the [`Sercom`] instance"]]});