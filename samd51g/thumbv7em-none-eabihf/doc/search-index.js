var searchIndex = JSON.parse('{\
"aligned":{"doc":"A newtype with alignment of at least `A` bytes","i":[[3,"A2","aligned","2-byte alignment",null,null],[3,"A4","","4-byte alignment",null,null],[3,"A8","","8-byte alignment",null,null],[3,"A16","","16-byte alignment",null,null],[3,"Aligned","","A newtype with alignment of at least `A` bytes",null,null],[5,"Aligned","","Changes the alignment of `value` to be at least `A` bytes",null,[[],["aligned",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"index","","",4,[[["rangeto",3]],["aligned",3]]],[11,"hash","","",4,[[]]],[11,"clone","","",4,[[]]],[11,"default","","",4,[[]]],[11,"as_slice","","",4,[[]]],[11,"as_mut_slice","","",4,[[]]]],"p":[[3,"A2"],[3,"A4"],[3,"A8"],[3,"A16"],[3,"Aligned"]]},\
"as_slice":{"doc":"`AsSlice` and `AsMutSlice` traits","i":[[8,"AsSlice","as_slice","Something that can be seen as an immutable slice",null,null],[16,"Element","","The element type of the slice view",0,null],[10,"as_slice","","Returns the immutable slice view of `Self`",0,[[]]],[8,"AsMutSlice","","Something that can be seen as an mutable slice",null,null],[10,"as_mut_slice","","Returns the mutable slice view of `Self`",1,[[]]]],"p":[[8,"AsSlice"],[8,"AsMutSlice"]]},\
"atsamd51g":{"doc":"Peripheral access API for ATSAMD51G microcontrollers…","i":[[3,"CorePeripherals","atsamd51g","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",0,null],[12,"CPUID","","CPUID",0,null],[12,"DCB","","Debug Control Block",0,null],[12,"DWT","","Data Watchpoint and Trace unit",0,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",0,null],[12,"FPU","","Floating Point Unit (only present on…",0,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",0,null],[12,"MPU","","Memory Protection Unit",0,null],[12,"NVIC","","Nested Vector Interrupt Controller",0,null],[12,"SCB","","System Control Block",0,null],[12,"SYST","","SysTick: System Timer",0,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",0,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"FPU","","Floating Point Unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[3,"AC","","Analog Comparators",null,null],[3,"ADC0","","Analog Digital Converter",null,null],[3,"ADC1","","Analog Digital Converter",null,null],[3,"AES","","Advanced Encryption Standard",null,null],[3,"CCL","","Configurable Custom Logic",null,null],[3,"CMCC","","Cortex M Cache Controller",null,null],[3,"DAC","","Digital-to-Analog Converter",null,null],[3,"DMAC","","Direct Memory Access Controller",null,null],[3,"DSU","","Device Service Unit",null,null],[3,"EIC","","External Interrupt Controller",null,null],[3,"EVSYS","","Event System Interface",null,null],[3,"FREQM","","Frequency Meter",null,null],[3,"GCLK","","Generic Clock Generator",null,null],[3,"HMATRIX","","HSB Matrix",null,null],[3,"ICM","","Integrity Check Monitor",null,null],[3,"MCLK","","Main Clock",null,null],[3,"NVMCTRL","","Non-Volatile Memory Controller",null,null],[3,"OSCCTRL","","Oscillators Control",null,null],[3,"OSC32KCTRL","","32kHz Oscillators Control",null,null],[3,"PAC","","Peripheral Access Controller",null,null],[3,"PCC","","Parallel Capture Controller",null,null],[3,"PDEC","","Quadrature Decodeur",null,null],[3,"PM","","Power Manager",null,null],[3,"PORT","","Port Module",null,null],[3,"QSPI","","Quad SPI interface",null,null],[3,"RAMECC","","RAM ECC",null,null],[3,"RSTC","","Reset Controller",null,null],[3,"RTC","","Real-Time Counter",null,null],[3,"SDHC0","","SD/MMC Host Controller",null,null],[3,"SERCOM0","","Serial Communication Interface",null,null],[3,"SERCOM1","","Serial Communication Interface",null,null],[3,"SERCOM2","","Serial Communication Interface",null,null],[3,"SERCOM3","","Serial Communication Interface",null,null],[3,"SERCOM4","","Serial Communication Interface",null,null],[3,"SERCOM5","","Serial Communication Interface",null,null],[3,"SUPC","","Supply Controller",null,null],[3,"TC0","","Basic Timer Counter",null,null],[3,"TC1","","Basic Timer Counter",null,null],[3,"TC2","","Basic Timer Counter",null,null],[3,"TC3","","Basic Timer Counter",null,null],[3,"TCC0","","Timer Counter Control",null,null],[3,"TCC1","","Timer Counter Control",null,null],[3,"TCC2","","Timer Counter Control",null,null],[3,"TRNG","","True Random Generator",null,null],[3,"USB","","Universal Serial Bus",null,null],[3,"WDT","","Watchdog Timer",null,null],[3,"COREDEBUG","","Core Debug Register",null,null],[3,"ETM","","Embedded Trace Macrocell",null,null],[3,"SYSTICK","","System timer",null,null],[3,"SYSTEMCONTROL","","System Control Registers",null,null],[3,"TPI","","Trace Port Interface Register",null,null],[3,"Peripherals","","All the peripherals",null,null],[12,"AC","","AC",1,null],[12,"ADC0","","ADC0",1,null],[12,"ADC1","","ADC1",1,null],[12,"AES","","AES",1,null],[12,"CCL","","CCL",1,null],[12,"CMCC","","CMCC",1,null],[12,"DAC","","DAC",1,null],[12,"DMAC","","DMAC",1,null],[12,"DSU","","DSU",1,null],[12,"EIC","","EIC",1,null],[12,"EVSYS","","EVSYS",1,null],[12,"FREQM","","FREQM",1,null],[12,"GCLK","","GCLK",1,null],[12,"HMATRIX","","HMATRIX",1,null],[12,"ICM","","ICM",1,null],[12,"MCLK","","MCLK",1,null],[12,"NVMCTRL","","NVMCTRL",1,null],[12,"OSCCTRL","","OSCCTRL",1,null],[12,"OSC32KCTRL","","OSC32KCTRL",1,null],[12,"PAC","","PAC",1,null],[12,"PCC","","PCC",1,null],[12,"PDEC","","PDEC",1,null],[12,"PM","","PM",1,null],[12,"PORT","","PORT",1,null],[12,"QSPI","","QSPI",1,null],[12,"RAMECC","","RAMECC",1,null],[12,"RSTC","","RSTC",1,null],[12,"RTC","","RTC",1,null],[12,"SDHC0","","SDHC0",1,null],[12,"SERCOM0","","SERCOM0",1,null],[12,"SERCOM1","","SERCOM1",1,null],[12,"SERCOM2","","SERCOM2",1,null],[12,"SERCOM3","","SERCOM3",1,null],[12,"SERCOM4","","SERCOM4",1,null],[12,"SERCOM5","","SERCOM5",1,null],[12,"SUPC","","SUPC",1,null],[12,"TC0","","TC0",1,null],[12,"TC1","","TC1",1,null],[12,"TC2","","TC2",1,null],[12,"TC3","","TC3",1,null],[12,"TCC0","","TCC0",1,null],[12,"TCC1","","TCC1",1,null],[12,"TCC2","","TCC2",1,null],[12,"TRNG","","TRNG",1,null],[12,"USB","","USB",1,null],[12,"WDT","","WDT",1,null],[12,"COREDEBUG","","COREDEBUG",1,null],[12,"ETM","","ETM",1,null],[12,"SYSTICK","","SYSTICK",1,null],[12,"SYSTEMCONTROL","","SYSTEMCONTROL",1,null],[12,"TPI","","TPI",1,null],[4,"Interrupt","","Enumeration of all the interrupts",null,null],[13,"PM","","0 - PM",2,null],[13,"MCLK","","1 - MCLK",2,null],[13,"OSCCTRL_XOSC0","","2 - OSCCTRL_XOSC0",2,null],[13,"OSCCTRL_XOSC1","","3 - OSCCTRL_XOSC1",2,null],[13,"OSCCTRL_DFLL","","4 - OSCCTRL_DFLL",2,null],[13,"OSCCTRL_DPLL0","","5 - OSCCTRL_DPLL0",2,null],[13,"OSCCTRL_DPLL1","","6 - OSCCTRL_DPLL1",2,null],[13,"OSC32KCTRL","","7 - OSC32KCTRL",2,null],[13,"SUPC_OTHER","","8 - SUPC_OTHER",2,null],[13,"SUPC_BODDET","","9 - SUPC_BODDET",2,null],[13,"WDT","","10 - WDT",2,null],[13,"RTC","","11 - RTC",2,null],[13,"EIC_EXTINT_0","","12 - EIC_EXTINT_0",2,null],[13,"EIC_EXTINT_1","","13 - EIC_EXTINT_1",2,null],[13,"EIC_EXTINT_2","","14 - EIC_EXTINT_2",2,null],[13,"EIC_EXTINT_3","","15 - EIC_EXTINT_3",2,null],[13,"EIC_EXTINT_4","","16 - EIC_EXTINT_4",2,null],[13,"EIC_EXTINT_5","","17 - EIC_EXTINT_5",2,null],[13,"EIC_EXTINT_6","","18 - EIC_EXTINT_6",2,null],[13,"EIC_EXTINT_7","","19 - EIC_EXTINT_7",2,null],[13,"EIC_EXTINT_8","","20 - EIC_EXTINT_8",2,null],[13,"EIC_EXTINT_9","","21 - EIC_EXTINT_9",2,null],[13,"EIC_EXTINT_10","","22 - EIC_EXTINT_10",2,null],[13,"EIC_EXTINT_11","","23 - EIC_EXTINT_11",2,null],[13,"EIC_EXTINT_12","","24 - EIC_EXTINT_12",2,null],[13,"EIC_EXTINT_13","","25 - EIC_EXTINT_13",2,null],[13,"EIC_EXTINT_14","","26 - EIC_EXTINT_14",2,null],[13,"EIC_EXTINT_15","","27 - EIC_EXTINT_15",2,null],[13,"FREQM","","28 - FREQM",2,null],[13,"NVMCTRL_0","","29 - NVMCTRL_0",2,null],[13,"NVMCTRL_1","","30 - NVMCTRL_1",2,null],[13,"DMAC_0","","31 - DMAC_0",2,null],[13,"DMAC_1","","32 - DMAC_1",2,null],[13,"DMAC_2","","33 - DMAC_2",2,null],[13,"DMAC_3","","34 - DMAC_3",2,null],[13,"DMAC_OTHER","","35 - DMAC_OTHER",2,null],[13,"EVSYS_0","","36 - EVSYS_0",2,null],[13,"EVSYS_1","","37 - EVSYS_1",2,null],[13,"EVSYS_2","","38 - EVSYS_2",2,null],[13,"EVSYS_3","","39 - EVSYS_3",2,null],[13,"EVSYS_OTHER","","40 - EVSYS_OTHER",2,null],[13,"PAC","","41 - PAC",2,null],[13,"RAMECC","","45 - RAMECC",2,null],[13,"SERCOM0_0","","46 - SERCOM0_0",2,null],[13,"SERCOM0_1","","47 - SERCOM0_1",2,null],[13,"SERCOM0_2","","48 - SERCOM0_2",2,null],[13,"SERCOM0_OTHER","","49 - SERCOM0_OTHER",2,null],[13,"SERCOM1_0","","50 - SERCOM1_0",2,null],[13,"SERCOM1_1","","51 - SERCOM1_1",2,null],[13,"SERCOM1_2","","52 - SERCOM1_2",2,null],[13,"SERCOM1_OTHER","","53 - SERCOM1_OTHER",2,null],[13,"SERCOM2_0","","54 - SERCOM2_0",2,null],[13,"SERCOM2_1","","55 - SERCOM2_1",2,null],[13,"SERCOM2_2","","56 - SERCOM2_2",2,null],[13,"SERCOM2_OTHER","","57 - SERCOM2_OTHER",2,null],[13,"SERCOM3_0","","58 - SERCOM3_0",2,null],[13,"SERCOM3_1","","59 - SERCOM3_1",2,null],[13,"SERCOM3_2","","60 - SERCOM3_2",2,null],[13,"SERCOM3_OTHER","","61 - SERCOM3_OTHER",2,null],[13,"SERCOM4_0","","62 - SERCOM4_0",2,null],[13,"SERCOM4_1","","63 - SERCOM4_1",2,null],[13,"SERCOM4_2","","64 - SERCOM4_2",2,null],[13,"SERCOM4_OTHER","","65 - SERCOM4_OTHER",2,null],[13,"SERCOM5_0","","66 - SERCOM5_0",2,null],[13,"SERCOM5_1","","67 - SERCOM5_1",2,null],[13,"SERCOM5_2","","68 - SERCOM5_2",2,null],[13,"SERCOM5_OTHER","","69 - SERCOM5_OTHER",2,null],[13,"USB_OTHER","","80 - USB_OTHER",2,null],[13,"USB_SOF_HSOF","","81 - USB_SOF_HSOF",2,null],[13,"USB_TRCPT0","","82 - USB_TRCPT0",2,null],[13,"USB_TRCPT1","","83 - USB_TRCPT1",2,null],[13,"TCC0_OTHER","","85 - TCC0_OTHER",2,null],[13,"TCC0_MC0","","86 - TCC0_MC0",2,null],[13,"TCC0_MC1","","87 - TCC0_MC1",2,null],[13,"TCC0_MC2","","88 - TCC0_MC2",2,null],[13,"TCC0_MC3","","89 - TCC0_MC3",2,null],[13,"TCC0_MC4","","90 - TCC0_MC4",2,null],[13,"TCC0_MC5","","91 - TCC0_MC5",2,null],[13,"TCC1_OTHER","","92 - TCC1_OTHER",2,null],[13,"TCC1_MC0","","93 - TCC1_MC0",2,null],[13,"TCC1_MC1","","94 - TCC1_MC1",2,null],[13,"TCC1_MC2","","95 - TCC1_MC2",2,null],[13,"TCC1_MC3","","96 - TCC1_MC3",2,null],[13,"TCC2_OTHER","","97 - TCC2_OTHER",2,null],[13,"TCC2_MC0","","98 - TCC2_MC0",2,null],[13,"TCC2_MC1","","99 - TCC2_MC1",2,null],[13,"TCC2_MC2","","100 - TCC2_MC2",2,null],[13,"TC0","","107 - TC0",2,null],[13,"TC1","","108 - TC1",2,null],[13,"TC2","","109 - TC2",2,null],[13,"TC3","","110 - TC3",2,null],[13,"PDEC_OTHER","","115 - PDEC_OTHER",2,null],[13,"PDEC_MC0","","116 - PDEC_MC0",2,null],[13,"PDEC_MC1","","117 - PDEC_MC1",2,null],[13,"ADC0_OTHER","","118 - ADC0_OTHER",2,null],[13,"ADC0_RESRDY","","119 - ADC0_RESRDY",2,null],[13,"ADC1_OTHER","","120 - ADC1_OTHER",2,null],[13,"ADC1_RESRDY","","121 - ADC1_RESRDY",2,null],[13,"AC","","122 - AC",2,null],[13,"DAC_OTHER","","123 - DAC_OTHER",2,null],[13,"DAC_EMPTY_0","","124 - DAC_EMPTY_0",2,null],[13,"DAC_EMPTY_1","","125 - DAC_EMPTY_1",2,null],[13,"DAC_RESRDY_0","","126 - DAC_RESRDY_0",2,null],[13,"DAC_RESRDY_1","","127 - DAC_RESRDY_1",2,null],[13,"PCC","","129 - PCC",2,null],[13,"AES","","130 - AES",2,null],[13,"TRNG","","131 - TRNG",2,null],[13,"ICM","","132 - ICM",2,null],[13,"QSPI","","134 - QSPI",2,null],[13,"SDHC0","","135 - SDHC0",2,null],[0,"generic","","Common register and bit access and modify traits",null,null],[3,"Reg","atsamd51g::generic","This structure provides volatile access to registers.",null,null],[3,"R","","Register/field reader.",null,null],[3,"W","","Register writer.",null,null],[4,"Variant","","Used if enumerated values cover not the whole range.",null,null],[13,"Val","","Expected variant.",3,null],[13,"Res","","Raw bits.",3,null],[8,"Readable","","Trait implemented by readable registers to enable the…",null,null],[8,"Writable","","Trait implemented by writeable registers.",null,null],[8,"ResetValue","","Reset value of the register.",null,null],[16,"Type","","Raw register type (`u8`, `u16`, `u32`, ...).",4,null],[10,"reset_value","","Reset value of the register.",4,[[]]],[11,"as_ptr","","Returns the underlying memory address of register.",5,[[]]],[11,"read","","Reads the contents of a `Readable` register.",5,[[],["r",3]]],[11,"reset","","Writes the reset value to `Writable` register.",5,[[]]],[11,"write","","Writes bits to a `Writable` register.",5,[[]]],[11,"write_with_zero","","Writes 0 to a `Writable` register.",5,[[]]],[11,"modify","","Modifies the contents of the register by reading and then…",5,[[]]],[11,"bits","","Reads raw bits from register/field.",6,[[]]],[11,"bit","","Value of the field as raw bits.",6,[[]]],[11,"bit_is_clear","","Returns `true` if the bit is clear (0).",6,[[]]],[11,"bit_is_set","","Returns `true` if the bit is set (1).",6,[[]]],[11,"bits","","Writes raw bits to the register.",7,[[]]],[0,"ac","atsamd51g","Analog Comparators",null,null],[3,"RegisterBlock","atsamd51g::ac","Register block",null,null],[12,"ctrla","","0x00 - Control A",8,null],[12,"ctrlb","","0x01 - Control B",8,null],[12,"evctrl","","0x02 - Event Control",8,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",8,null],[12,"intenset","","0x05 - Interrupt Enable Set",8,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",8,null],[12,"statusa","","0x07 - Status A",8,null],[12,"statusb","","0x08 - Status B",8,null],[12,"dbgctrl","","0x09 - Debug Control",8,null],[12,"winctrl","","0x0a - Window Control",8,null],[12,"scaler","","0x0c - Scaler n",8,null],[12,"compctrl","","0x10 - Comparator Control n",8,null],[12,"syncbusy","","0x20 - Synchronization Busy",8,null],[12,"calib","","0x24 - Calibration",8,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::ac::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",9,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",9,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",9,[[],["w",6]]],[11,"set_bit","","Sets the field bit",10,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",10,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",10,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::ac::ctrla","Bit 0 - Software Reset",11,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",11,[[],["enable_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"swrst","atsamd51g::ac::ctrla","Bit 0 - Software Reset",12,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",12,[[],["enable_w",3]]],[0,"ctrlb","atsamd51g::ac","Control B",null,null],[3,"START0_W","atsamd51g::ac::ctrlb","Write proxy for field `START0`",null,null],[3,"START1_W","","Write proxy for field `START1`",null,null],[6,"W","","Writer for register CTRLB",null,null],[11,"set_bit","","Sets the field bit",13,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",13,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",13,[[],["w",6]]],[11,"set_bit","","Sets the field bit",14,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",14,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",14,[[],["w",6]]],[11,"start0","atsamd51g::generic","Bit 0 - Comparator 0 Start Comparison",7,[[],["start0_w",3]]],[11,"start1","","Bit 1 - Comparator 1 Start Comparison",7,[[],["start1_w",3]]],[11,"start0","atsamd51g::ac::ctrlb","Bit 0 - Comparator 0 Start Comparison",15,[[],["start0_w",3]]],[11,"start1","","Bit 1 - Comparator 1 Start Comparison",15,[[],["start1_w",3]]],[0,"evctrl","atsamd51g::ac","Event Control",null,null],[3,"COMPEO0_W","atsamd51g::ac::evctrl","Write proxy for field `COMPEO0`",null,null],[3,"COMPEO1_W","","Write proxy for field `COMPEO1`",null,null],[3,"WINEO0_W","","Write proxy for field `WINEO0`",null,null],[3,"COMPEI0_W","","Write proxy for field `COMPEI0`",null,null],[3,"COMPEI1_W","","Write proxy for field `COMPEI1`",null,null],[3,"INVEI0_W","","Write proxy for field `INVEI0`",null,null],[3,"INVEI1_W","","Write proxy for field `INVEI1`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"COMPEO0_R","","Reader of field `COMPEO0`",null,null],[6,"COMPEO1_R","","Reader of field `COMPEO1`",null,null],[6,"WINEO0_R","","Reader of field `WINEO0`",null,null],[6,"COMPEI0_R","","Reader of field `COMPEI0`",null,null],[6,"COMPEI1_R","","Reader of field `COMPEI1`",null,null],[6,"INVEI0_R","","Reader of field `INVEI0`",null,null],[6,"INVEI1_R","","Reader of field `INVEI1`",null,null],[11,"set_bit","","Sets the field bit",16,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",16,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",16,[[],["w",6]]],[11,"set_bit","","Sets the field bit",17,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",17,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",17,[[],["w",6]]],[11,"set_bit","","Sets the field bit",18,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",18,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",18,[[],["w",6]]],[11,"set_bit","","Sets the field bit",19,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",19,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",19,[[],["w",6]]],[11,"set_bit","","Sets the field bit",20,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",20,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",20,[[],["w",6]]],[11,"set_bit","","Sets the field bit",21,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",21,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",21,[[],["w",6]]],[11,"set_bit","","Sets the field bit",22,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",22,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",22,[[],["w",6]]],[11,"compeo0","atsamd51g::generic","Bit 0 - Comparator 0 Event Output Enable",6,[[],["compeo0_r",6]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",6,[[],["compeo1_r",6]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",6,[[],["wineo0_r",6]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input Enable",6,[[],["compei0_r",6]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input Enable",6,[[],["compei1_r",6]]],[11,"invei0","","Bit 12 - Comparator 0 Input Event Invert Enable",6,[[],["invei0_r",6]]],[11,"invei1","","Bit 13 - Comparator 1 Input Event Invert Enable",6,[[],["invei1_r",6]]],[11,"compeo0","atsamd51g::ac::evctrl","Bit 0 - Comparator 0 Event Output Enable",23,[[],["compeo0_r",6]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",23,[[],["compeo1_r",6]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",23,[[],["wineo0_r",6]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input Enable",23,[[],["compei0_r",6]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input Enable",23,[[],["compei1_r",6]]],[11,"invei0","","Bit 12 - Comparator 0 Input Event Invert Enable",23,[[],["invei0_r",6]]],[11,"invei1","","Bit 13 - Comparator 1 Input Event Invert Enable",23,[[],["invei1_r",6]]],[11,"compeo0","atsamd51g::generic","Bit 0 - Comparator 0 Event Output Enable",7,[[],["compeo0_w",3]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",7,[[],["compeo1_w",3]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",7,[[],["wineo0_w",3]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input Enable",7,[[],["compei0_w",3]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input Enable",7,[[],["compei1_w",3]]],[11,"invei0","","Bit 12 - Comparator 0 Input Event Invert Enable",7,[[],["invei0_w",3]]],[11,"invei1","","Bit 13 - Comparator 1 Input Event Invert Enable",7,[[],["invei1_w",3]]],[11,"compeo0","atsamd51g::ac::evctrl","Bit 0 - Comparator 0 Event Output Enable",24,[[],["compeo0_w",3]]],[11,"compeo1","","Bit 1 - Comparator 1 Event Output Enable",24,[[],["compeo1_w",3]]],[11,"wineo0","","Bit 4 - Window 0 Event Output Enable",24,[[],["wineo0_w",3]]],[11,"compei0","","Bit 8 - Comparator 0 Event Input Enable",24,[[],["compei0_w",3]]],[11,"compei1","","Bit 9 - Comparator 1 Event Input Enable",24,[[],["compei1_w",3]]],[11,"invei0","","Bit 12 - Comparator 0 Input Event Invert Enable",24,[[],["invei0_w",3]]],[11,"invei1","","Bit 13 - Comparator 1 Input Event Invert Enable",24,[[],["invei1_w",3]]],[0,"intenclr","atsamd51g::ac","Interrupt Enable Clear",null,null],[3,"COMP0_W","atsamd51g::ac::intenclr","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",25,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",25,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",25,[[],["w",6]]],[11,"set_bit","","Sets the field bit",26,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",26,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",26,[[],["w",6]]],[11,"set_bit","","Sets the field bit",27,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",27,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",27,[[],["w",6]]],[11,"comp0","atsamd51g::generic","Bit 0 - Comparator 0 Interrupt Enable",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",6,[[],["win0_r",6]]],[11,"comp0","atsamd51g::ac::intenclr","Bit 0 - Comparator 0 Interrupt Enable",28,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",28,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",28,[[],["win0_r",6]]],[11,"comp0","atsamd51g::generic","Bit 0 - Comparator 0 Interrupt Enable",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",7,[[],["win0_w",3]]],[11,"comp0","atsamd51g::ac::intenclr","Bit 0 - Comparator 0 Interrupt Enable",29,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",29,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",29,[[],["win0_w",3]]],[0,"intenset","atsamd51g::ac","Interrupt Enable Set",null,null],[3,"COMP0_W","atsamd51g::ac::intenset","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",30,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",30,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",30,[[],["w",6]]],[11,"set_bit","","Sets the field bit",31,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",31,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",31,[[],["w",6]]],[11,"set_bit","","Sets the field bit",32,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",32,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",32,[[],["w",6]]],[11,"comp0","atsamd51g::generic","Bit 0 - Comparator 0 Interrupt Enable",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",6,[[],["win0_r",6]]],[11,"comp0","atsamd51g::ac::intenset","Bit 0 - Comparator 0 Interrupt Enable",33,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",33,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",33,[[],["win0_r",6]]],[11,"comp0","atsamd51g::generic","Bit 0 - Comparator 0 Interrupt Enable",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",7,[[],["win0_w",3]]],[11,"comp0","atsamd51g::ac::intenset","Bit 0 - Comparator 0 Interrupt Enable",34,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1 Interrupt Enable",34,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0 Interrupt Enable",34,[[],["win0_w",3]]],[0,"intflag","atsamd51g::ac","Interrupt Flag Status and Clear",null,null],[3,"COMP0_W","atsamd51g::ac::intflag","Write proxy for field `COMP0`",null,null],[3,"COMP1_W","","Write proxy for field `COMP1`",null,null],[3,"WIN0_W","","Write proxy for field `WIN0`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"WIN0_R","","Reader of field `WIN0`",null,null],[11,"set_bit","","Sets the field bit",35,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",35,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",35,[[],["w",6]]],[11,"set_bit","","Sets the field bit",36,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",36,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",36,[[],["w",6]]],[11,"set_bit","","Sets the field bit",37,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",37,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",37,[[],["w",6]]],[11,"comp0","atsamd51g::generic","Bit 0 - Comparator 0",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1",6,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0",6,[[],["win0_r",6]]],[11,"comp0","atsamd51g::ac::intflag","Bit 0 - Comparator 0",38,[[],["comp0_r",6]]],[11,"comp1","","Bit 1 - Comparator 1",38,[[],["comp1_r",6]]],[11,"win0","","Bit 4 - Window 0",38,[[],["win0_r",6]]],[11,"comp0","atsamd51g::generic","Bit 0 - Comparator 0",7,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1",7,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0",7,[[],["win0_w",3]]],[11,"comp0","atsamd51g::ac::intflag","Bit 0 - Comparator 0",39,[[],["comp0_w",3]]],[11,"comp1","","Bit 1 - Comparator 1",39,[[],["comp1_w",3]]],[11,"win0","","Bit 4 - Window 0",39,[[],["win0_w",3]]],[0,"statusa","atsamd51g::ac","Status A",null,null],[4,"WSTATE0_A","atsamd51g::ac::statusa","Window 0 Current State",null,null],[13,"ABOVE","","0: Signal is above window",40,null],[13,"INSIDE","","1: Signal is inside window",40,null],[13,"BELOW","","2: Signal is below window",40,null],[6,"R","","Reader of register STATUSA",null,null],[6,"STATE0_R","","Reader of field `STATE0`",null,null],[6,"STATE1_R","","Reader of field `STATE1`",null,null],[6,"WSTATE0_R","","Reader of field `WSTATE0`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["wstate0_a",4],["variant",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"variant","atsamd51g::ac::statusa","Get enumerated values variant",41,[[],[["wstate0_a",4],["variant",4]]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",41,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",41,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",41,[[]]],[11,"state0","atsamd51g::generic","Bit 0 - Comparator 0 Current State",6,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",6,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",6,[[],["wstate0_r",6]]],[11,"state0","atsamd51g::ac::statusa","Bit 0 - Comparator 0 Current State",42,[[],["state0_r",6]]],[11,"state1","","Bit 1 - Comparator 1 Current State",42,[[],["state1_r",6]]],[11,"wstate0","","Bits 4:5 - Window 0 Current State",42,[[],["wstate0_r",6]]],[0,"statusb","atsamd51g::ac","Status B",null,null],[6,"R","atsamd51g::ac::statusb","Reader of register STATUSB",null,null],[6,"READY0_R","","Reader of field `READY0`",null,null],[6,"READY1_R","","Reader of field `READY1`",null,null],[11,"ready0","atsamd51g::generic","Bit 0 - Comparator 0 Ready",6,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - Comparator 1 Ready",6,[[],["ready1_r",6]]],[11,"ready0","atsamd51g::ac::statusb","Bit 0 - Comparator 0 Ready",43,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - Comparator 1 Ready",43,[[],["ready1_r",6]]],[0,"dbgctrl","atsamd51g::ac","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::ac::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",44,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",44,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",44,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::ac::dbgctrl","Bit 0 - Debug Run",45,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::ac::dbgctrl","Bit 0 - Debug Run",46,[[],["dbgrun_w",3]]],[0,"winctrl","atsamd51g::ac","Window Control",null,null],[3,"WEN0_W","atsamd51g::ac::winctrl","Write proxy for field `WEN0`",null,null],[3,"WINTSEL0_W","","Write proxy for field `WINTSEL0`",null,null],[4,"WINTSEL0_A","","Window 0 Interrupt Selection",null,null],[13,"ABOVE","","0: Interrupt on signal above window",47,null],[13,"INSIDE","","1: Interrupt on signal inside window",47,null],[13,"BELOW","","2: Interrupt on signal below window",47,null],[13,"OUTSIDE","","3: Interrupt on signal outside window",47,null],[6,"R","","Reader of register WINCTRL",null,null],[6,"W","","Writer for register WINCTRL",null,null],[6,"WEN0_R","","Reader of field `WEN0`",null,null],[6,"WINTSEL0_R","","Reader of field `WINTSEL0`",null,null],[11,"set_bit","","Sets the field bit",48,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",48,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",48,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wintsel0_a",4]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",6,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",6,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",6,[[]]],[11,"is_outside","","Checks if the value of the field is `OUTSIDE`",6,[[]]],[11,"variant","atsamd51g::ac::winctrl","Get enumerated values variant",49,[[],["wintsel0_a",4]]],[11,"is_above","","Checks if the value of the field is `ABOVE`",49,[[]]],[11,"is_inside","","Checks if the value of the field is `INSIDE`",49,[[]]],[11,"is_below","","Checks if the value of the field is `BELOW`",49,[[]]],[11,"is_outside","","Checks if the value of the field is `OUTSIDE`",49,[[]]],[11,"variant","","Writes `variant` to the field",50,[[["wintsel0_a",4]],["w",6]]],[11,"above","","Interrupt on signal above window",50,[[],["w",6]]],[11,"inside","","Interrupt on signal inside window",50,[[],["w",6]]],[11,"below","","Interrupt on signal below window",50,[[],["w",6]]],[11,"outside","","Interrupt on signal outside window",50,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",50,[[],["w",6]]],[11,"wen0","atsamd51g::generic","Bit 0 - Window 0 Mode Enable",6,[[],["wen0_r",6]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",6,[[],["wintsel0_r",6]]],[11,"wen0","atsamd51g::ac::winctrl","Bit 0 - Window 0 Mode Enable",51,[[],["wen0_r",6]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",51,[[],["wintsel0_r",6]]],[11,"wen0","atsamd51g::generic","Bit 0 - Window 0 Mode Enable",7,[[],["wen0_w",3]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",7,[[],["wintsel0_w",3]]],[11,"wen0","atsamd51g::ac::winctrl","Bit 0 - Window 0 Mode Enable",52,[[],["wen0_w",3]]],[11,"wintsel0","","Bits 1:2 - Window 0 Interrupt Selection",52,[[],["wintsel0_w",3]]],[0,"scaler","atsamd51g::ac","Scaler n",null,null],[3,"VALUE_W","atsamd51g::ac::scaler","Write proxy for field `VALUE`",null,null],[6,"R","","Reader of register SCALER[%s]",null,null],[6,"W","","Writer for register SCALER[%s]",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[11,"bits","","Writes raw bits to the field",53,[[],["w",6]]],[11,"value","atsamd51g::generic","Bits 0:5 - Scaler Value",6,[[],["value_r",6]]],[11,"value","atsamd51g::ac::scaler","Bits 0:5 - Scaler Value",54,[[],["value_r",6]]],[11,"value","atsamd51g::generic","Bits 0:5 - Scaler Value",7,[[],["value_w",3]]],[11,"value","atsamd51g::ac::scaler","Bits 0:5 - Scaler Value",55,[[],["value_w",3]]],[0,"compctrl","atsamd51g::ac","Comparator Control n",null,null],[3,"ENABLE_W","atsamd51g::ac::compctrl","Write proxy for field `ENABLE`",null,null],[3,"SINGLE_W","","Write proxy for field `SINGLE`",null,null],[3,"INTSEL_W","","Write proxy for field `INTSEL`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MUXNEG_W","","Write proxy for field `MUXNEG`",null,null],[3,"MUXPOS_W","","Write proxy for field `MUXPOS`",null,null],[3,"SWAP_W","","Write proxy for field `SWAP`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"HYSTEN_W","","Write proxy for field `HYSTEN`",null,null],[3,"HYST_W","","Write proxy for field `HYST`",null,null],[3,"FLEN_W","","Write proxy for field `FLEN`",null,null],[3,"OUT_W","","Write proxy for field `OUT`",null,null],[4,"INTSEL_A","","Interrupt Selection",null,null],[13,"TOGGLE","","0: Interrupt on comparator output toggle",56,null],[13,"RISING","","1: Interrupt on comparator output rising",56,null],[13,"FALLING","","2: Interrupt on comparator output falling",56,null],[13,"EOC","","3: Interrupt on end of comparison (single-shot mode only)",56,null],[4,"MUXNEG_A","","Negative Input Mux Selection",null,null],[13,"PIN0","","0: I/O pin 0",57,null],[13,"PIN1","","1: I/O pin 1",57,null],[13,"PIN2","","2: I/O pin 2",57,null],[13,"PIN3","","3: I/O pin 3",57,null],[13,"GND","","4: Ground",57,null],[13,"VSCALE","","5: VDD scaler",57,null],[13,"BANDGAP","","6: Internal bandgap voltage",57,null],[13,"DAC","","7: DAC output",57,null],[4,"MUXPOS_A","","Positive Input Mux Selection",null,null],[13,"PIN0","","0: I/O pin 0",58,null],[13,"PIN1","","1: I/O pin 1",58,null],[13,"PIN2","","2: I/O pin 2",58,null],[13,"PIN3","","3: I/O pin 3",58,null],[13,"VSCALE","","4: VDD Scaler",58,null],[4,"SPEED_A","","Speed Selection",null,null],[13,"HIGH","","3: High speed",59,null],[4,"HYST_A","","Hysteresis Level",null,null],[13,"HYST50","","0: 50mV",60,null],[13,"HYST100","","1: 100mV",60,null],[13,"HYST150","","2: 150mV",60,null],[4,"FLEN_A","","Filter Length",null,null],[13,"OFF","","0: No filtering",61,null],[13,"MAJ3","","1: 3-bit majority function (2 of 3)",61,null],[13,"MAJ5","","2: 5-bit majority function (3 of 5)",61,null],[4,"OUT_A","","Output",null,null],[13,"OFF","","0: The output of COMPn is not routed to the COMPn I/O port",62,null],[13,"ASYNC","","1: The asynchronous output of COMPn is routed to the COMPn…",62,null],[13,"SYNC","","2: The synchronous output (including filtering) of COMPn…",62,null],[6,"R","","Reader of register COMPCTRL[%s]",null,null],[6,"W","","Writer for register COMPCTRL[%s]",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SINGLE_R","","Reader of field `SINGLE`",null,null],[6,"INTSEL_R","","Reader of field `INTSEL`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MUXNEG_R","","Reader of field `MUXNEG`",null,null],[6,"MUXPOS_R","","Reader of field `MUXPOS`",null,null],[6,"SWAP_R","","Reader of field `SWAP`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"HYSTEN_R","","Reader of field `HYSTEN`",null,null],[6,"HYST_R","","Reader of field `HYST`",null,null],[6,"FLEN_R","","Reader of field `FLEN`",null,null],[6,"OUT_R","","Reader of field `OUT`",null,null],[11,"set_bit","","Sets the field bit",63,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",63,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",63,[[],["w",6]]],[11,"set_bit","","Sets the field bit",64,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",64,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",64,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["intsel_a",4]]],[11,"is_toggle","","Checks if the value of the field is `TOGGLE`",6,[[]]],[11,"is_rising","","Checks if the value of the field is `RISING`",6,[[]]],[11,"is_falling","","Checks if the value of the field is `FALLING`",6,[[]]],[11,"is_eoc","","Checks if the value of the field is `EOC`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",65,[[],["intsel_a",4]]],[11,"is_toggle","","Checks if the value of the field is `TOGGLE`",65,[[]]],[11,"is_rising","","Checks if the value of the field is `RISING`",65,[[]]],[11,"is_falling","","Checks if the value of the field is `FALLING`",65,[[]]],[11,"is_eoc","","Checks if the value of the field is `EOC`",65,[[]]],[11,"variant","","Writes `variant` to the field",66,[[["intsel_a",4]],["w",6]]],[11,"toggle","","Interrupt on comparator output toggle",66,[[],["w",6]]],[11,"rising","","Interrupt on comparator output rising",66,[[],["w",6]]],[11,"falling","","Interrupt on comparator output falling",66,[[],["w",6]]],[11,"eoc","","Interrupt on end of comparison (single-shot mode only)",66,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",66,[[],["w",6]]],[11,"set_bit","","Sets the field bit",67,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",67,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",67,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["muxneg_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",6,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",6,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",68,[[],["muxneg_a",4]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",68,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",68,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",68,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",68,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",68,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",68,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",68,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",68,[[]]],[11,"variant","","Writes `variant` to the field",69,[[["muxneg_a",4]],["w",6]]],[11,"pin0","","I/O pin 0",69,[[],["w",6]]],[11,"pin1","","I/O pin 1",69,[[],["w",6]]],[11,"pin2","","I/O pin 2",69,[[],["w",6]]],[11,"pin3","","I/O pin 3",69,[[],["w",6]]],[11,"gnd","","Ground",69,[[],["w",6]]],[11,"vscale","","VDD scaler",69,[[],["w",6]]],[11,"bandgap","","Internal bandgap voltage",69,[[],["w",6]]],[11,"dac","","DAC output",69,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",69,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["muxpos_a",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",6,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",6,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",6,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",6,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",70,[[],[["variant",4],["muxpos_a",4]]]],[11,"is_pin0","","Checks if the value of the field is `PIN0`",70,[[]]],[11,"is_pin1","","Checks if the value of the field is `PIN1`",70,[[]]],[11,"is_pin2","","Checks if the value of the field is `PIN2`",70,[[]]],[11,"is_pin3","","Checks if the value of the field is `PIN3`",70,[[]]],[11,"is_vscale","","Checks if the value of the field is `VSCALE`",70,[[]]],[11,"variant","","Writes `variant` to the field",71,[[["muxpos_a",4]],["w",6]]],[11,"pin0","","I/O pin 0",71,[[],["w",6]]],[11,"pin1","","I/O pin 1",71,[[],["w",6]]],[11,"pin2","","I/O pin 2",71,[[],["w",6]]],[11,"pin3","","I/O pin 3",71,[[],["w",6]]],[11,"vscale","","VDD Scaler",71,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",71,[[],["w",6]]],[11,"set_bit","","Sets the field bit",72,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",72,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",72,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["speed_a",4]]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",73,[[],[["variant",4],["speed_a",4]]]],[11,"is_high","","Checks if the value of the field is `HIGH`",73,[[]]],[11,"variant","","Writes `variant` to the field",74,[[["speed_a",4]],["w",6]]],[11,"high","","High speed",74,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",74,[[],["w",6]]],[11,"set_bit","","Sets the field bit",75,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",75,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",75,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["hyst_a",4]]]],[11,"is_hyst50","","Checks if the value of the field is `HYST50`",6,[[]]],[11,"is_hyst100","","Checks if the value of the field is `HYST100`",6,[[]]],[11,"is_hyst150","","Checks if the value of the field is `HYST150`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",76,[[],[["variant",4],["hyst_a",4]]]],[11,"is_hyst50","","Checks if the value of the field is `HYST50`",76,[[]]],[11,"is_hyst100","","Checks if the value of the field is `HYST100`",76,[[]]],[11,"is_hyst150","","Checks if the value of the field is `HYST150`",76,[[]]],[11,"variant","","Writes `variant` to the field",77,[[["hyst_a",4]],["w",6]]],[11,"hyst50","","50mV",77,[[],["w",6]]],[11,"hyst100","","100mV",77,[[],["w",6]]],[11,"hyst150","","150mV",77,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",77,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["flen_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_maj3","","Checks if the value of the field is `MAJ3`",6,[[]]],[11,"is_maj5","","Checks if the value of the field is `MAJ5`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",78,[[],[["flen_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",78,[[]]],[11,"is_maj3","","Checks if the value of the field is `MAJ3`",78,[[]]],[11,"is_maj5","","Checks if the value of the field is `MAJ5`",78,[[]]],[11,"variant","","Writes `variant` to the field",79,[[["flen_a",4]],["w",6]]],[11,"off","","No filtering",79,[[],["w",6]]],[11,"maj3","","3-bit majority function (2 of 3)",79,[[],["w",6]]],[11,"maj5","","5-bit majority function (3 of 5)",79,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",79,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["out_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"variant","atsamd51g::ac::compctrl","Get enumerated values variant",80,[[],[["variant",4],["out_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",80,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",80,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",80,[[]]],[11,"variant","","Writes `variant` to the field",81,[[["out_a",4]],["w",6]]],[11,"off","","The output of COMPn is not routed to the COMPn I/O port",81,[[],["w",6]]],[11,"async_","","The asynchronous output of COMPn is routed to the COMPn…",81,[[],["w",6]]],[11,"sync","","The synchronous output (including filtering) of COMPn is…",81,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",81,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"single","","Bit 2 - Single-Shot Mode",6,[[],["single_r",6]]],[11,"intsel","","Bits 3:4 - Interrupt Selection",6,[[],["intsel_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",6,[[],["muxneg_r",6]]],[11,"muxpos","","Bits 12:14 - Positive Input Mux Selection",6,[[],["muxpos_r",6]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",6,[[],["swap_r",6]]],[11,"speed","","Bits 16:17 - Speed Selection",6,[[],["speed_r",6]]],[11,"hysten","","Bit 19 - Hysteresis Enable",6,[[],["hysten_r",6]]],[11,"hyst","","Bits 20:21 - Hysteresis Level",6,[[],["hyst_r",6]]],[11,"flen","","Bits 24:26 - Filter Length",6,[[],["flen_r",6]]],[11,"out","","Bits 28:29 - Output",6,[[],["out_r",6]]],[11,"enable","atsamd51g::ac::compctrl","Bit 1 - Enable",82,[[],["enable_r",6]]],[11,"single","","Bit 2 - Single-Shot Mode",82,[[],["single_r",6]]],[11,"intsel","","Bits 3:4 - Interrupt Selection",82,[[],["intsel_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",82,[[],["runstdby_r",6]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",82,[[],["muxneg_r",6]]],[11,"muxpos","","Bits 12:14 - Positive Input Mux Selection",82,[[],["muxpos_r",6]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",82,[[],["swap_r",6]]],[11,"speed","","Bits 16:17 - Speed Selection",82,[[],["speed_r",6]]],[11,"hysten","","Bit 19 - Hysteresis Enable",82,[[],["hysten_r",6]]],[11,"hyst","","Bits 20:21 - Hysteresis Level",82,[[],["hyst_r",6]]],[11,"flen","","Bits 24:26 - Filter Length",82,[[],["flen_r",6]]],[11,"out","","Bits 28:29 - Output",82,[[],["out_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"single","","Bit 2 - Single-Shot Mode",7,[[],["single_w",3]]],[11,"intsel","","Bits 3:4 - Interrupt Selection",7,[[],["intsel_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",7,[[],["muxneg_w",3]]],[11,"muxpos","","Bits 12:14 - Positive Input Mux Selection",7,[[],["muxpos_w",3]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",7,[[],["swap_w",3]]],[11,"speed","","Bits 16:17 - Speed Selection",7,[[],["speed_w",3]]],[11,"hysten","","Bit 19 - Hysteresis Enable",7,[[],["hysten_w",3]]],[11,"hyst","","Bits 20:21 - Hysteresis Level",7,[[],["hyst_w",3]]],[11,"flen","","Bits 24:26 - Filter Length",7,[[],["flen_w",3]]],[11,"out","","Bits 28:29 - Output",7,[[],["out_w",3]]],[11,"enable","atsamd51g::ac::compctrl","Bit 1 - Enable",83,[[],["enable_w",3]]],[11,"single","","Bit 2 - Single-Shot Mode",83,[[],["single_w",3]]],[11,"intsel","","Bits 3:4 - Interrupt Selection",83,[[],["intsel_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",83,[[],["runstdby_w",3]]],[11,"muxneg","","Bits 8:10 - Negative Input Mux Selection",83,[[],["muxneg_w",3]]],[11,"muxpos","","Bits 12:14 - Positive Input Mux Selection",83,[[],["muxpos_w",3]]],[11,"swap","","Bit 15 - Swap Inputs and Invert",83,[[],["swap_w",3]]],[11,"speed","","Bits 16:17 - Speed Selection",83,[[],["speed_w",3]]],[11,"hysten","","Bit 19 - Hysteresis Enable",83,[[],["hysten_w",3]]],[11,"hyst","","Bits 20:21 - Hysteresis Level",83,[[],["hyst_w",3]]],[11,"flen","","Bits 24:26 - Filter Length",83,[[],["flen_w",3]]],[11,"out","","Bits 28:29 - Output",83,[[],["out_w",3]]],[0,"syncbusy","atsamd51g::ac","Synchronization Busy",null,null],[6,"R","atsamd51g::ac::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"WINCTRL_R","","Reader of field `WINCTRL`",null,null],[6,"COMPCTRL0_R","","Reader of field `COMPCTRL0`",null,null],[6,"COMPCTRL1_R","","Reader of field `COMPCTRL1`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"winctrl","","Bit 2 - WINCTRL Synchronization Busy",6,[[],["winctrl_r",6]]],[11,"compctrl0","","Bit 3 - COMPCTRL 0 Synchronization Busy",6,[[],["compctrl0_r",6]]],[11,"compctrl1","","Bit 4 - COMPCTRL 1 Synchronization Busy",6,[[],["compctrl1_r",6]]],[11,"swrst","atsamd51g::ac::syncbusy","Bit 0 - Software Reset Synchronization Busy",84,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",84,[[],["enable_r",6]]],[11,"winctrl","","Bit 2 - WINCTRL Synchronization Busy",84,[[],["winctrl_r",6]]],[11,"compctrl0","","Bit 3 - COMPCTRL 0 Synchronization Busy",84,[[],["compctrl0_r",6]]],[11,"compctrl1","","Bit 4 - COMPCTRL 1 Synchronization Busy",84,[[],["compctrl1_r",6]]],[0,"calib","atsamd51g::ac","Calibration",null,null],[3,"BIAS0_W","atsamd51g::ac::calib","Write proxy for field `BIAS0`",null,null],[6,"R","","Reader of register CALIB",null,null],[6,"W","","Writer for register CALIB",null,null],[6,"BIAS0_R","","Reader of field `BIAS0`",null,null],[11,"bits","","Writes raw bits to the field",85,[[],["w",6]]],[11,"bias0","atsamd51g::generic","Bits 0:1 - COMP0/1 Bias Scaling",6,[[],["bias0_r",6]]],[11,"bias0","atsamd51g::ac::calib","Bits 0:1 - COMP0/1 Bias Scaling",86,[[],["bias0_r",6]]],[11,"bias0","atsamd51g::generic","Bits 0:1 - COMP0/1 Bias Scaling",7,[[],["bias0_w",3]]],[11,"bias0","atsamd51g::ac::calib","Bits 0:1 - COMP0/1 Bias Scaling",87,[[],["bias0_w",3]]],[6,"CTRLA","atsamd51g::ac","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUSA","","Status A",null,null],[6,"STATUSB","","Status B",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"WINCTRL","","Window Control",null,null],[6,"SCALER","","Scaler n",null,null],[6,"COMPCTRL","","Comparator Control n",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"CALIB","","Calibration",null,null],[0,"adc0","atsamd51g","Analog Digital Converter",null,null],[3,"RegisterBlock","atsamd51g::adc0","Register block",null,null],[12,"ctrla","","0x00 - Control A",88,null],[12,"evctrl","","0x02 - Event Control",88,null],[12,"dbgctrl","","0x03 - Debug Control",88,null],[12,"inputctrl","","0x04 - Input Control",88,null],[12,"ctrlb","","0x06 - Control B",88,null],[12,"refctrl","","0x08 - Reference Control",88,null],[12,"avgctrl","","0x0a - Average Control",88,null],[12,"sampctrl","","0x0b - Sample Time Control",88,null],[12,"winlt","","0x0c - Window Monitor Lower Threshold",88,null],[12,"winut","","0x0e - Window Monitor Upper Threshold",88,null],[12,"gaincorr","","0x10 - Gain Correction",88,null],[12,"offsetcorr","","0x12 - Offset Correction",88,null],[12,"swtrig","","0x14 - Software Trigger",88,null],[12,"intenclr","","0x2c - Interrupt Enable Clear",88,null],[12,"intenset","","0x2d - Interrupt Enable Set",88,null],[12,"intflag","","0x2e - Interrupt Flag Status and Clear",88,null],[12,"status","","0x2f - Status",88,null],[12,"syncbusy","","0x30 - Synchronization Busy",88,null],[12,"dseqdata","","0x34 - DMA Sequencial Data",88,null],[12,"dseqctrl","","0x38 - DMA Sequential Control",88,null],[12,"dseqstat","","0x3c - DMA Sequencial Status",88,null],[12,"result","","0x40 - Result Conversion Value",88,null],[12,"ress","","0x44 - Last Sample Result",88,null],[12,"calib","","0x48 - Calibration",88,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::adc0::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"DUALSEL_W","","Write proxy for field `DUALSEL`",null,null],[3,"SLAVEEN_W","","Write proxy for field `SLAVEEN`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"R2R_W","","Write proxy for field `R2R`",null,null],[4,"DUALSEL_A","","Dual Mode Trigger Selection",null,null],[13,"BOTH","","0: Start event or software trigger will start a conversion…",89,null],[13,"INTERLEAVE","","1: START event or software trigger will alternatingly…",89,null],[4,"PRESCALER_A","","Prescaler Configuration",null,null],[13,"DIV2","","0: Peripheral clock divided by 2",90,null],[13,"DIV4","","1: Peripheral clock divided by 4",90,null],[13,"DIV8","","2: Peripheral clock divided by 8",90,null],[13,"DIV16","","3: Peripheral clock divided by 16",90,null],[13,"DIV32","","4: Peripheral clock divided by 32",90,null],[13,"DIV64","","5: Peripheral clock divided by 64",90,null],[13,"DIV128","","6: Peripheral clock divided by 128",90,null],[13,"DIV256","","7: Peripheral clock divided by 256",90,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"DUALSEL_R","","Reader of field `DUALSEL`",null,null],[6,"SLAVEEN_R","","Reader of field `SLAVEEN`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"R2R_R","","Reader of field `R2R`",null,null],[11,"set_bit","","Sets the field bit",91,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",91,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",91,[[],["w",6]]],[11,"set_bit","","Sets the field bit",92,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",92,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",92,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["dualsel_a",4]]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_interleave","","Checks if the value of the field is `INTERLEAVE`",6,[[]]],[11,"variant","atsamd51g::adc0::ctrla","Get enumerated values variant",93,[[],[["variant",4],["dualsel_a",4]]]],[11,"is_both","","Checks if the value of the field is `BOTH`",93,[[]]],[11,"is_interleave","","Checks if the value of the field is `INTERLEAVE`",93,[[]]],[11,"variant","","Writes `variant` to the field",94,[[["dualsel_a",4]],["w",6]]],[11,"both","","Start event or software trigger will start a conversion on…",94,[[],["w",6]]],[11,"interleave","","START event or software trigger will alternatingly start a…",94,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",94,[[],["w",6]]],[11,"set_bit","","Sets the field bit",95,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",95,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",95,[[],["w",6]]],[11,"set_bit","","Sets the field bit",96,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",96,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",96,[[],["w",6]]],[11,"set_bit","","Sets the field bit",97,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",97,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",97,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::adc0::ctrla","Get enumerated values variant",98,[[],["prescaler_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",98,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",98,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",98,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",98,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",98,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",98,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",98,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",98,[[]]],[11,"variant","","Writes `variant` to the field",99,[[["prescaler_a",4]],["w",6]]],[11,"div2","","Peripheral clock divided by 2",99,[[],["w",6]]],[11,"div4","","Peripheral clock divided by 4",99,[[],["w",6]]],[11,"div8","","Peripheral clock divided by 8",99,[[],["w",6]]],[11,"div16","","Peripheral clock divided by 16",99,[[],["w",6]]],[11,"div32","","Peripheral clock divided by 32",99,[[],["w",6]]],[11,"div64","","Peripheral clock divided by 64",99,[[],["w",6]]],[11,"div128","","Peripheral clock divided by 128",99,[[],["w",6]]],[11,"div256","","Peripheral clock divided by 256",99,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",99,[[],["w",6]]],[11,"set_bit","","Sets the field bit",100,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",100,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",100,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"dualsel","","Bits 3:4 - Dual Mode Trigger Selection",6,[[],["dualsel_r",6]]],[11,"slaveen","","Bit 5 - Slave Enable",6,[[],["slaveen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",6,[[],["prescaler_r",6]]],[11,"r2r","","Bit 15 - Rail to Rail Operation Enable",6,[[],["r2r_r",6]]],[11,"swrst","atsamd51g::adc0::ctrla","Bit 0 - Software Reset",101,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",101,[[],["enable_r",6]]],[11,"dualsel","","Bits 3:4 - Dual Mode Trigger Selection",101,[[],["dualsel_r",6]]],[11,"slaveen","","Bit 5 - Slave Enable",101,[[],["slaveen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",101,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",101,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",101,[[],["prescaler_r",6]]],[11,"r2r","","Bit 15 - Rail to Rail Operation Enable",101,[[],["r2r_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"dualsel","","Bits 3:4 - Dual Mode Trigger Selection",7,[[],["dualsel_w",3]]],[11,"slaveen","","Bit 5 - Slave Enable",7,[[],["slaveen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",7,[[],["prescaler_w",3]]],[11,"r2r","","Bit 15 - Rail to Rail Operation Enable",7,[[],["r2r_w",3]]],[11,"swrst","atsamd51g::adc0::ctrla","Bit 0 - Software Reset",102,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",102,[[],["enable_w",3]]],[11,"dualsel","","Bits 3:4 - Dual Mode Trigger Selection",102,[[],["dualsel_w",3]]],[11,"slaveen","","Bit 5 - Slave Enable",102,[[],["slaveen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",102,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",102,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler Configuration",102,[[],["prescaler_w",3]]],[11,"r2r","","Bit 15 - Rail to Rail Operation Enable",102,[[],["r2r_w",3]]],[0,"evctrl","atsamd51g::adc0","Event Control",null,null],[3,"FLUSHEI_W","atsamd51g::adc0::evctrl","Write proxy for field `FLUSHEI`",null,null],[3,"STARTEI_W","","Write proxy for field `STARTEI`",null,null],[3,"FLUSHINV_W","","Write proxy for field `FLUSHINV`",null,null],[3,"STARTINV_W","","Write proxy for field `STARTINV`",null,null],[3,"RESRDYEO_W","","Write proxy for field `RESRDYEO`",null,null],[3,"WINMONEO_W","","Write proxy for field `WINMONEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"FLUSHEI_R","","Reader of field `FLUSHEI`",null,null],[6,"STARTEI_R","","Reader of field `STARTEI`",null,null],[6,"FLUSHINV_R","","Reader of field `FLUSHINV`",null,null],[6,"STARTINV_R","","Reader of field `STARTINV`",null,null],[6,"RESRDYEO_R","","Reader of field `RESRDYEO`",null,null],[6,"WINMONEO_R","","Reader of field `WINMONEO`",null,null],[11,"set_bit","","Sets the field bit",103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",105,[[],["w",6]]],[11,"set_bit","","Sets the field bit",106,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",106,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",106,[[],["w",6]]],[11,"set_bit","","Sets the field bit",107,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",107,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",107,[[],["w",6]]],[11,"set_bit","","Sets the field bit",108,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",108,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",108,[[],["w",6]]],[11,"flushei","atsamd51g::generic","Bit 0 - Flush Event Input Enable",6,[[],["flushei_r",6]]],[11,"startei","","Bit 1 - Start Conversion Event Input Enable",6,[[],["startei_r",6]]],[11,"flushinv","","Bit 2 - Flush Event Invert Enable",6,[[],["flushinv_r",6]]],[11,"startinv","","Bit 3 - Start Conversion Event Invert Enable",6,[[],["startinv_r",6]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",6,[[],["resrdyeo_r",6]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",6,[[],["winmoneo_r",6]]],[11,"flushei","atsamd51g::adc0::evctrl","Bit 0 - Flush Event Input Enable",109,[[],["flushei_r",6]]],[11,"startei","","Bit 1 - Start Conversion Event Input Enable",109,[[],["startei_r",6]]],[11,"flushinv","","Bit 2 - Flush Event Invert Enable",109,[[],["flushinv_r",6]]],[11,"startinv","","Bit 3 - Start Conversion Event Invert Enable",109,[[],["startinv_r",6]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",109,[[],["resrdyeo_r",6]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",109,[[],["winmoneo_r",6]]],[11,"flushei","atsamd51g::generic","Bit 0 - Flush Event Input Enable",7,[[],["flushei_w",3]]],[11,"startei","","Bit 1 - Start Conversion Event Input Enable",7,[[],["startei_w",3]]],[11,"flushinv","","Bit 2 - Flush Event Invert Enable",7,[[],["flushinv_w",3]]],[11,"startinv","","Bit 3 - Start Conversion Event Invert Enable",7,[[],["startinv_w",3]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",7,[[],["resrdyeo_w",3]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",7,[[],["winmoneo_w",3]]],[11,"flushei","atsamd51g::adc0::evctrl","Bit 0 - Flush Event Input Enable",110,[[],["flushei_w",3]]],[11,"startei","","Bit 1 - Start Conversion Event Input Enable",110,[[],["startei_w",3]]],[11,"flushinv","","Bit 2 - Flush Event Invert Enable",110,[[],["flushinv_w",3]]],[11,"startinv","","Bit 3 - Start Conversion Event Invert Enable",110,[[],["startinv_w",3]]],[11,"resrdyeo","","Bit 4 - Result Ready Event Out",110,[[],["resrdyeo_w",3]]],[11,"winmoneo","","Bit 5 - Window Monitor Event Out",110,[[],["winmoneo_w",3]]],[0,"dbgctrl","atsamd51g::adc0","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::adc0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",111,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",111,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",111,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::adc0::dbgctrl","Bit 0 - Debug Run",112,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::adc0::dbgctrl","Bit 0 - Debug Run",113,[[],["dbgrun_w",3]]],[0,"inputctrl","atsamd51g::adc0","Input Control",null,null],[3,"MUXPOS_W","atsamd51g::adc0::inputctrl","Write proxy for field `MUXPOS`",null,null],[3,"DIFFMODE_W","","Write proxy for field `DIFFMODE`",null,null],[3,"MUXNEG_W","","Write proxy for field `MUXNEG`",null,null],[3,"DSEQSTOP_W","","Write proxy for field `DSEQSTOP`",null,null],[4,"MUXPOS_A","","Positive Mux Input Selection",null,null],[13,"AIN0","","0: ADC AIN0 Pin",114,null],[13,"AIN1","","1: ADC AIN1 Pin",114,null],[13,"AIN2","","2: ADC AIN2 Pin",114,null],[13,"AIN3","","3: ADC AIN3 Pin",114,null],[13,"AIN4","","4: ADC AIN4 Pin",114,null],[13,"AIN5","","5: ADC AIN5 Pin",114,null],[13,"AIN6","","6: ADC AIN6 Pin",114,null],[13,"AIN7","","7: ADC AIN7 Pin",114,null],[13,"AIN8","","8: ADC AIN8 Pin",114,null],[13,"AIN9","","9: ADC AIN9 Pin",114,null],[13,"AIN10","","10: ADC AIN10 Pin",114,null],[13,"AIN11","","11: ADC AIN11 Pin",114,null],[13,"AIN12","","12: ADC AIN12 Pin",114,null],[13,"AIN13","","13: ADC AIN13 Pin",114,null],[13,"AIN14","","14: ADC AIN14 Pin",114,null],[13,"AIN15","","15: ADC AIN15 Pin",114,null],[13,"AIN16","","16: ADC AIN16 Pin",114,null],[13,"AIN17","","17: ADC AIN17 Pin",114,null],[13,"AIN18","","18: ADC AIN18 Pin",114,null],[13,"AIN19","","19: ADC AIN19 Pin",114,null],[13,"AIN20","","20: ADC AIN20 Pin",114,null],[13,"AIN21","","21: ADC AIN21 Pin",114,null],[13,"AIN22","","22: ADC AIN22 Pin",114,null],[13,"AIN23","","23: ADC AIN23 Pin",114,null],[13,"SCALEDCOREVCC","","24: 1/4 Scaled Core Supply",114,null],[13,"SCALEDVBAT","","25: 1/4 Scaled VBAT Supply",114,null],[13,"SCALEDIOVCC","","26: 1/4 Scaled I/O Supply",114,null],[13,"BANDGAP","","27: Bandgap Voltage",114,null],[13,"PTAT","","28: Temperature Sensor",114,null],[13,"CTAT","","29: Temperature Sensor",114,null],[13,"DAC","","30: DAC Output",114,null],[13,"PTC","","31: PTC output (only on ADC0)",114,null],[4,"MUXNEG_A","","Negative Mux Input Selection",null,null],[13,"AIN0","","0: ADC AIN0 Pin",115,null],[13,"AIN1","","1: ADC AIN1 Pin",115,null],[13,"AIN2","","2: ADC AIN2 Pin",115,null],[13,"AIN3","","3: ADC AIN3 Pin",115,null],[13,"AIN4","","4: ADC AIN4 Pin",115,null],[13,"AIN5","","5: ADC AIN5 Pin",115,null],[13,"AIN6","","6: ADC AIN6 Pin",115,null],[13,"AIN7","","7: ADC AIN7 Pin",115,null],[13,"GND","","24: Internal Ground",115,null],[6,"R","","Reader of register INPUTCTRL",null,null],[6,"W","","Writer for register INPUTCTRL",null,null],[6,"MUXPOS_R","","Reader of field `MUXPOS`",null,null],[6,"DIFFMODE_R","","Reader of field `DIFFMODE`",null,null],[6,"MUXNEG_R","","Reader of field `MUXNEG`",null,null],[6,"DSEQSTOP_R","","Reader of field `DSEQSTOP`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["muxpos_a",4]]],[11,"is_ain0","","Checks if the value of the field is `AIN0`",6,[[]]],[11,"is_ain1","","Checks if the value of the field is `AIN1`",6,[[]]],[11,"is_ain2","","Checks if the value of the field is `AIN2`",6,[[]]],[11,"is_ain3","","Checks if the value of the field is `AIN3`",6,[[]]],[11,"is_ain4","","Checks if the value of the field is `AIN4`",6,[[]]],[11,"is_ain5","","Checks if the value of the field is `AIN5`",6,[[]]],[11,"is_ain6","","Checks if the value of the field is `AIN6`",6,[[]]],[11,"is_ain7","","Checks if the value of the field is `AIN7`",6,[[]]],[11,"is_ain8","","Checks if the value of the field is `AIN8`",6,[[]]],[11,"is_ain9","","Checks if the value of the field is `AIN9`",6,[[]]],[11,"is_ain10","","Checks if the value of the field is `AIN10`",6,[[]]],[11,"is_ain11","","Checks if the value of the field is `AIN11`",6,[[]]],[11,"is_ain12","","Checks if the value of the field is `AIN12`",6,[[]]],[11,"is_ain13","","Checks if the value of the field is `AIN13`",6,[[]]],[11,"is_ain14","","Checks if the value of the field is `AIN14`",6,[[]]],[11,"is_ain15","","Checks if the value of the field is `AIN15`",6,[[]]],[11,"is_ain16","","Checks if the value of the field is `AIN16`",6,[[]]],[11,"is_ain17","","Checks if the value of the field is `AIN17`",6,[[]]],[11,"is_ain18","","Checks if the value of the field is `AIN18`",6,[[]]],[11,"is_ain19","","Checks if the value of the field is `AIN19`",6,[[]]],[11,"is_ain20","","Checks if the value of the field is `AIN20`",6,[[]]],[11,"is_ain21","","Checks if the value of the field is `AIN21`",6,[[]]],[11,"is_ain22","","Checks if the value of the field is `AIN22`",6,[[]]],[11,"is_ain23","","Checks if the value of the field is `AIN23`",6,[[]]],[11,"is_scaledcorevcc","","Checks if the value of the field is `SCALEDCOREVCC`",6,[[]]],[11,"is_scaledvbat","","Checks if the value of the field is `SCALEDVBAT`",6,[[]]],[11,"is_scalediovcc","","Checks if the value of the field is `SCALEDIOVCC`",6,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",6,[[]]],[11,"is_ptat","","Checks if the value of the field is `PTAT`",6,[[]]],[11,"is_ctat","","Checks if the value of the field is `CTAT`",6,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",6,[[]]],[11,"is_ptc","","Checks if the value of the field is `PTC`",6,[[]]],[11,"variant","atsamd51g::adc0::inputctrl","Get enumerated values variant",116,[[],["muxpos_a",4]]],[11,"is_ain0","","Checks if the value of the field is `AIN0`",116,[[]]],[11,"is_ain1","","Checks if the value of the field is `AIN1`",116,[[]]],[11,"is_ain2","","Checks if the value of the field is `AIN2`",116,[[]]],[11,"is_ain3","","Checks if the value of the field is `AIN3`",116,[[]]],[11,"is_ain4","","Checks if the value of the field is `AIN4`",116,[[]]],[11,"is_ain5","","Checks if the value of the field is `AIN5`",116,[[]]],[11,"is_ain6","","Checks if the value of the field is `AIN6`",116,[[]]],[11,"is_ain7","","Checks if the value of the field is `AIN7`",116,[[]]],[11,"is_ain8","","Checks if the value of the field is `AIN8`",116,[[]]],[11,"is_ain9","","Checks if the value of the field is `AIN9`",116,[[]]],[11,"is_ain10","","Checks if the value of the field is `AIN10`",116,[[]]],[11,"is_ain11","","Checks if the value of the field is `AIN11`",116,[[]]],[11,"is_ain12","","Checks if the value of the field is `AIN12`",116,[[]]],[11,"is_ain13","","Checks if the value of the field is `AIN13`",116,[[]]],[11,"is_ain14","","Checks if the value of the field is `AIN14`",116,[[]]],[11,"is_ain15","","Checks if the value of the field is `AIN15`",116,[[]]],[11,"is_ain16","","Checks if the value of the field is `AIN16`",116,[[]]],[11,"is_ain17","","Checks if the value of the field is `AIN17`",116,[[]]],[11,"is_ain18","","Checks if the value of the field is `AIN18`",116,[[]]],[11,"is_ain19","","Checks if the value of the field is `AIN19`",116,[[]]],[11,"is_ain20","","Checks if the value of the field is `AIN20`",116,[[]]],[11,"is_ain21","","Checks if the value of the field is `AIN21`",116,[[]]],[11,"is_ain22","","Checks if the value of the field is `AIN22`",116,[[]]],[11,"is_ain23","","Checks if the value of the field is `AIN23`",116,[[]]],[11,"is_scaledcorevcc","","Checks if the value of the field is `SCALEDCOREVCC`",116,[[]]],[11,"is_scaledvbat","","Checks if the value of the field is `SCALEDVBAT`",116,[[]]],[11,"is_scalediovcc","","Checks if the value of the field is `SCALEDIOVCC`",116,[[]]],[11,"is_bandgap","","Checks if the value of the field is `BANDGAP`",116,[[]]],[11,"is_ptat","","Checks if the value of the field is `PTAT`",116,[[]]],[11,"is_ctat","","Checks if the value of the field is `CTAT`",116,[[]]],[11,"is_dac","","Checks if the value of the field is `DAC`",116,[[]]],[11,"is_ptc","","Checks if the value of the field is `PTC`",116,[[]]],[11,"variant","","Writes `variant` to the field",117,[[["muxpos_a",4]],["w",6]]],[11,"ain0","","ADC AIN0 Pin",117,[[],["w",6]]],[11,"ain1","","ADC AIN1 Pin",117,[[],["w",6]]],[11,"ain2","","ADC AIN2 Pin",117,[[],["w",6]]],[11,"ain3","","ADC AIN3 Pin",117,[[],["w",6]]],[11,"ain4","","ADC AIN4 Pin",117,[[],["w",6]]],[11,"ain5","","ADC AIN5 Pin",117,[[],["w",6]]],[11,"ain6","","ADC AIN6 Pin",117,[[],["w",6]]],[11,"ain7","","ADC AIN7 Pin",117,[[],["w",6]]],[11,"ain8","","ADC AIN8 Pin",117,[[],["w",6]]],[11,"ain9","","ADC AIN9 Pin",117,[[],["w",6]]],[11,"ain10","","ADC AIN10 Pin",117,[[],["w",6]]],[11,"ain11","","ADC AIN11 Pin",117,[[],["w",6]]],[11,"ain12","","ADC AIN12 Pin",117,[[],["w",6]]],[11,"ain13","","ADC AIN13 Pin",117,[[],["w",6]]],[11,"ain14","","ADC AIN14 Pin",117,[[],["w",6]]],[11,"ain15","","ADC AIN15 Pin",117,[[],["w",6]]],[11,"ain16","","ADC AIN16 Pin",117,[[],["w",6]]],[11,"ain17","","ADC AIN17 Pin",117,[[],["w",6]]],[11,"ain18","","ADC AIN18 Pin",117,[[],["w",6]]],[11,"ain19","","ADC AIN19 Pin",117,[[],["w",6]]],[11,"ain20","","ADC AIN20 Pin",117,[[],["w",6]]],[11,"ain21","","ADC AIN21 Pin",117,[[],["w",6]]],[11,"ain22","","ADC AIN22 Pin",117,[[],["w",6]]],[11,"ain23","","ADC AIN23 Pin",117,[[],["w",6]]],[11,"scaledcorevcc","","1/4 Scaled Core Supply",117,[[],["w",6]]],[11,"scaledvbat","","1/4 Scaled VBAT Supply",117,[[],["w",6]]],[11,"scalediovcc","","1/4 Scaled I/O Supply",117,[[],["w",6]]],[11,"bandgap","","Bandgap Voltage",117,[[],["w",6]]],[11,"ptat","","Temperature Sensor",117,[[],["w",6]]],[11,"ctat","","Temperature Sensor",117,[[],["w",6]]],[11,"dac","","DAC Output",117,[[],["w",6]]],[11,"ptc","","PTC output (only on ADC0)",117,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",117,[[],["w",6]]],[11,"set_bit","","Sets the field bit",118,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",118,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",118,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["muxneg_a",4],["variant",4]]]],[11,"is_ain0","","Checks if the value of the field is `AIN0`",6,[[]]],[11,"is_ain1","","Checks if the value of the field is `AIN1`",6,[[]]],[11,"is_ain2","","Checks if the value of the field is `AIN2`",6,[[]]],[11,"is_ain3","","Checks if the value of the field is `AIN3`",6,[[]]],[11,"is_ain4","","Checks if the value of the field is `AIN4`",6,[[]]],[11,"is_ain5","","Checks if the value of the field is `AIN5`",6,[[]]],[11,"is_ain6","","Checks if the value of the field is `AIN6`",6,[[]]],[11,"is_ain7","","Checks if the value of the field is `AIN7`",6,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",6,[[]]],[11,"variant","atsamd51g::adc0::inputctrl","Get enumerated values variant",119,[[],[["muxneg_a",4],["variant",4]]]],[11,"is_ain0","","Checks if the value of the field is `AIN0`",119,[[]]],[11,"is_ain1","","Checks if the value of the field is `AIN1`",119,[[]]],[11,"is_ain2","","Checks if the value of the field is `AIN2`",119,[[]]],[11,"is_ain3","","Checks if the value of the field is `AIN3`",119,[[]]],[11,"is_ain4","","Checks if the value of the field is `AIN4`",119,[[]]],[11,"is_ain5","","Checks if the value of the field is `AIN5`",119,[[]]],[11,"is_ain6","","Checks if the value of the field is `AIN6`",119,[[]]],[11,"is_ain7","","Checks if the value of the field is `AIN7`",119,[[]]],[11,"is_gnd","","Checks if the value of the field is `GND`",119,[[]]],[11,"variant","","Writes `variant` to the field",120,[[["muxneg_a",4]],["w",6]]],[11,"ain0","","ADC AIN0 Pin",120,[[],["w",6]]],[11,"ain1","","ADC AIN1 Pin",120,[[],["w",6]]],[11,"ain2","","ADC AIN2 Pin",120,[[],["w",6]]],[11,"ain3","","ADC AIN3 Pin",120,[[],["w",6]]],[11,"ain4","","ADC AIN4 Pin",120,[[],["w",6]]],[11,"ain5","","ADC AIN5 Pin",120,[[],["w",6]]],[11,"ain6","","ADC AIN6 Pin",120,[[],["w",6]]],[11,"ain7","","ADC AIN7 Pin",120,[[],["w",6]]],[11,"gnd","","Internal Ground",120,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",120,[[],["w",6]]],[11,"set_bit","","Sets the field bit",121,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",121,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",121,[[],["w",6]]],[11,"muxpos","atsamd51g::generic","Bits 0:4 - Positive Mux Input Selection",6,[[],["muxpos_r",6]]],[11,"diffmode","","Bit 7 - Differential Mode",6,[[],["diffmode_r",6]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",6,[[],["muxneg_r",6]]],[11,"dseqstop","","Bit 15 - Stop DMA Sequencing",6,[[],["dseqstop_r",6]]],[11,"muxpos","atsamd51g::adc0::inputctrl","Bits 0:4 - Positive Mux Input Selection",122,[[],["muxpos_r",6]]],[11,"diffmode","","Bit 7 - Differential Mode",122,[[],["diffmode_r",6]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",122,[[],["muxneg_r",6]]],[11,"dseqstop","","Bit 15 - Stop DMA Sequencing",122,[[],["dseqstop_r",6]]],[11,"muxpos","atsamd51g::generic","Bits 0:4 - Positive Mux Input Selection",7,[[],["muxpos_w",3]]],[11,"diffmode","","Bit 7 - Differential Mode",7,[[],["diffmode_w",3]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",7,[[],["muxneg_w",3]]],[11,"dseqstop","","Bit 15 - Stop DMA Sequencing",7,[[],["dseqstop_w",3]]],[11,"muxpos","atsamd51g::adc0::inputctrl","Bits 0:4 - Positive Mux Input Selection",123,[[],["muxpos_w",3]]],[11,"diffmode","","Bit 7 - Differential Mode",123,[[],["diffmode_w",3]]],[11,"muxneg","","Bits 8:12 - Negative Mux Input Selection",123,[[],["muxneg_w",3]]],[11,"dseqstop","","Bit 15 - Stop DMA Sequencing",123,[[],["dseqstop_w",3]]],[0,"ctrlb","atsamd51g::adc0","Control B",null,null],[3,"LEFTADJ_W","atsamd51g::adc0::ctrlb","Write proxy for field `LEFTADJ`",null,null],[3,"FREERUN_W","","Write proxy for field `FREERUN`",null,null],[3,"CORREN_W","","Write proxy for field `CORREN`",null,null],[3,"RESSEL_W","","Write proxy for field `RESSEL`",null,null],[3,"WINMODE_W","","Write proxy for field `WINMODE`",null,null],[3,"WINSS_W","","Write proxy for field `WINSS`",null,null],[4,"RESSEL_A","","Conversion Result Resolution",null,null],[13,"_12BIT","","0: 12-bit result",124,null],[13,"_16BIT","","1: For averaging mode output",124,null],[13,"_10BIT","","2: 10-bit result",124,null],[13,"_8BIT","","3: 8-bit result",124,null],[4,"WINMODE_A","","Window Monitor Mode",null,null],[13,"DISABLE","","0: No window mode (default)",125,null],[13,"MODE1","","1: RESULT > WINLT",125,null],[13,"MODE2","","2: RESULT < WINUT",125,null],[13,"MODE3","","3: WINLT < RESULT < WINUT",125,null],[13,"MODE4","","4: !(WINLT < RESULT < WINUT)",125,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"LEFTADJ_R","","Reader of field `LEFTADJ`",null,null],[6,"FREERUN_R","","Reader of field `FREERUN`",null,null],[6,"CORREN_R","","Reader of field `CORREN`",null,null],[6,"RESSEL_R","","Reader of field `RESSEL`",null,null],[6,"WINMODE_R","","Reader of field `WINMODE`",null,null],[6,"WINSS_R","","Reader of field `WINSS`",null,null],[11,"set_bit","","Sets the field bit",126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",126,[[],["w",6]]],[11,"set_bit","","Sets the field bit",127,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",127,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",127,[[],["w",6]]],[11,"set_bit","","Sets the field bit",128,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",128,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",128,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["ressel_a",4]]],[11,"is_12bit","","Checks if the value of the field is `_12BIT`",6,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",6,[[]]],[11,"is_10bit","","Checks if the value of the field is `_10BIT`",6,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",6,[[]]],[11,"variant","atsamd51g::adc0::ctrlb","Get enumerated values variant",129,[[],["ressel_a",4]]],[11,"is_12bit","","Checks if the value of the field is `_12BIT`",129,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",129,[[]]],[11,"is_10bit","","Checks if the value of the field is `_10BIT`",129,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",129,[[]]],[11,"variant","","Writes `variant` to the field",130,[[["ressel_a",4]],["w",6]]],[11,"_12bit","","12-bit result",130,[[],["w",6]]],[11,"_16bit","","For averaging mode output",130,[[],["w",6]]],[11,"_10bit","","10-bit result",130,[[],["w",6]]],[11,"_8bit","","8-bit result",130,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",130,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["winmode_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_mode1","","Checks if the value of the field is `MODE1`",6,[[]]],[11,"is_mode2","","Checks if the value of the field is `MODE2`",6,[[]]],[11,"is_mode3","","Checks if the value of the field is `MODE3`",6,[[]]],[11,"is_mode4","","Checks if the value of the field is `MODE4`",6,[[]]],[11,"variant","atsamd51g::adc0::ctrlb","Get enumerated values variant",131,[[],[["winmode_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",131,[[]]],[11,"is_mode1","","Checks if the value of the field is `MODE1`",131,[[]]],[11,"is_mode2","","Checks if the value of the field is `MODE2`",131,[[]]],[11,"is_mode3","","Checks if the value of the field is `MODE3`",131,[[]]],[11,"is_mode4","","Checks if the value of the field is `MODE4`",131,[[]]],[11,"variant","","Writes `variant` to the field",132,[[["winmode_a",4]],["w",6]]],[11,"disable","","No window mode (default)",132,[[],["w",6]]],[11,"mode1","","RESULT > WINLT",132,[[],["w",6]]],[11,"mode2","","RESULT < WINUT",132,[[],["w",6]]],[11,"mode3","","WINLT < RESULT < WINUT",132,[[],["w",6]]],[11,"mode4","","!(WINLT < RESULT < WINUT)",132,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",132,[[],["w",6]]],[11,"set_bit","","Sets the field bit",133,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",133,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",133,[[],["w",6]]],[11,"leftadj","atsamd51g::generic","Bit 0 - Left-Adjusted Result",6,[[],["leftadj_r",6]]],[11,"freerun","","Bit 1 - Free Running Mode",6,[[],["freerun_r",6]]],[11,"corren","","Bit 2 - Digital Correction Logic Enable",6,[[],["corren_r",6]]],[11,"ressel","","Bits 3:4 - Conversion Result Resolution",6,[[],["ressel_r",6]]],[11,"winmode","","Bits 8:10 - Window Monitor Mode",6,[[],["winmode_r",6]]],[11,"winss","","Bit 11 - Window Single Sample",6,[[],["winss_r",6]]],[11,"leftadj","atsamd51g::adc0::ctrlb","Bit 0 - Left-Adjusted Result",134,[[],["leftadj_r",6]]],[11,"freerun","","Bit 1 - Free Running Mode",134,[[],["freerun_r",6]]],[11,"corren","","Bit 2 - Digital Correction Logic Enable",134,[[],["corren_r",6]]],[11,"ressel","","Bits 3:4 - Conversion Result Resolution",134,[[],["ressel_r",6]]],[11,"winmode","","Bits 8:10 - Window Monitor Mode",134,[[],["winmode_r",6]]],[11,"winss","","Bit 11 - Window Single Sample",134,[[],["winss_r",6]]],[11,"leftadj","atsamd51g::generic","Bit 0 - Left-Adjusted Result",7,[[],["leftadj_w",3]]],[11,"freerun","","Bit 1 - Free Running Mode",7,[[],["freerun_w",3]]],[11,"corren","","Bit 2 - Digital Correction Logic Enable",7,[[],["corren_w",3]]],[11,"ressel","","Bits 3:4 - Conversion Result Resolution",7,[[],["ressel_w",3]]],[11,"winmode","","Bits 8:10 - Window Monitor Mode",7,[[],["winmode_w",3]]],[11,"winss","","Bit 11 - Window Single Sample",7,[[],["winss_w",3]]],[11,"leftadj","atsamd51g::adc0::ctrlb","Bit 0 - Left-Adjusted Result",135,[[],["leftadj_w",3]]],[11,"freerun","","Bit 1 - Free Running Mode",135,[[],["freerun_w",3]]],[11,"corren","","Bit 2 - Digital Correction Logic Enable",135,[[],["corren_w",3]]],[11,"ressel","","Bits 3:4 - Conversion Result Resolution",135,[[],["ressel_w",3]]],[11,"winmode","","Bits 8:10 - Window Monitor Mode",135,[[],["winmode_w",3]]],[11,"winss","","Bit 11 - Window Single Sample",135,[[],["winss_w",3]]],[0,"refctrl","atsamd51g::adc0","Reference Control",null,null],[3,"REFSEL_W","atsamd51g::adc0::refctrl","Write proxy for field `REFSEL`",null,null],[3,"REFCOMP_W","","Write proxy for field `REFCOMP`",null,null],[4,"REFSEL_A","","Reference Selection",null,null],[13,"INTREF","","0: Internal Bandgap Reference",136,null],[13,"INTVCC0","","2: 1/2 VDDANA",136,null],[13,"INTVCC1","","3: VDDANA",136,null],[13,"AREFA","","4: External Reference",136,null],[13,"AREFB","","5: External Reference",136,null],[13,"AREFC","","6: External Reference (only on ADC1)",136,null],[6,"R","","Reader of register REFCTRL",null,null],[6,"W","","Writer for register REFCTRL",null,null],[6,"REFSEL_R","","Reader of field `REFSEL`",null,null],[6,"REFCOMP_R","","Reader of field `REFCOMP`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["refsel_a",4],["variant",4]]]],[11,"is_intref","","Checks if the value of the field is `INTREF`",6,[[]]],[11,"is_intvcc0","","Checks if the value of the field is `INTVCC0`",6,[[]]],[11,"is_intvcc1","","Checks if the value of the field is `INTVCC1`",6,[[]]],[11,"is_arefa","","Checks if the value of the field is `AREFA`",6,[[]]],[11,"is_arefb","","Checks if the value of the field is `AREFB`",6,[[]]],[11,"is_arefc","","Checks if the value of the field is `AREFC`",6,[[]]],[11,"variant","atsamd51g::adc0::refctrl","Get enumerated values variant",137,[[],[["refsel_a",4],["variant",4]]]],[11,"is_intref","","Checks if the value of the field is `INTREF`",137,[[]]],[11,"is_intvcc0","","Checks if the value of the field is `INTVCC0`",137,[[]]],[11,"is_intvcc1","","Checks if the value of the field is `INTVCC1`",137,[[]]],[11,"is_arefa","","Checks if the value of the field is `AREFA`",137,[[]]],[11,"is_arefb","","Checks if the value of the field is `AREFB`",137,[[]]],[11,"is_arefc","","Checks if the value of the field is `AREFC`",137,[[]]],[11,"variant","","Writes `variant` to the field",138,[[["refsel_a",4]],["w",6]]],[11,"intref","","Internal Bandgap Reference",138,[[],["w",6]]],[11,"intvcc0","","1/2 VDDANA",138,[[],["w",6]]],[11,"intvcc1","","VDDANA",138,[[],["w",6]]],[11,"arefa","","External Reference",138,[[],["w",6]]],[11,"arefb","","External Reference",138,[[],["w",6]]],[11,"arefc","","External Reference (only on ADC1)",138,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",138,[[],["w",6]]],[11,"set_bit","","Sets the field bit",139,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",139,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",139,[[],["w",6]]],[11,"refsel","atsamd51g::generic","Bits 0:3 - Reference Selection",6,[[],["refsel_r",6]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",6,[[],["refcomp_r",6]]],[11,"refsel","atsamd51g::adc0::refctrl","Bits 0:3 - Reference Selection",140,[[],["refsel_r",6]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",140,[[],["refcomp_r",6]]],[11,"refsel","atsamd51g::generic","Bits 0:3 - Reference Selection",7,[[],["refsel_w",3]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",7,[[],["refcomp_w",3]]],[11,"refsel","atsamd51g::adc0::refctrl","Bits 0:3 - Reference Selection",141,[[],["refsel_w",3]]],[11,"refcomp","","Bit 7 - Reference Buffer Offset Compensation Enable",141,[[],["refcomp_w",3]]],[0,"avgctrl","atsamd51g::adc0","Average Control",null,null],[3,"SAMPLENUM_W","atsamd51g::adc0::avgctrl","Write proxy for field `SAMPLENUM`",null,null],[3,"ADJRES_W","","Write proxy for field `ADJRES`",null,null],[4,"SAMPLENUM_A","","Number of Samples to be Collected",null,null],[13,"_1","","0: 1 sample",142,null],[13,"_2","","1: 2 samples",142,null],[13,"_4","","2: 4 samples",142,null],[13,"_8","","3: 8 samples",142,null],[13,"_16","","4: 16 samples",142,null],[13,"_32","","5: 32 samples",142,null],[13,"_64","","6: 64 samples",142,null],[13,"_128","","7: 128 samples",142,null],[13,"_256","","8: 256 samples",142,null],[13,"_512","","9: 512 samples",142,null],[13,"_1024","","10: 1024 samples",142,null],[6,"R","","Reader of register AVGCTRL",null,null],[6,"W","","Writer for register AVGCTRL",null,null],[6,"SAMPLENUM_R","","Reader of field `SAMPLENUM`",null,null],[6,"ADJRES_R","","Reader of field `ADJRES`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["samplenum_a",4]]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",6,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"variant","atsamd51g::adc0::avgctrl","Get enumerated values variant",143,[[],[["variant",4],["samplenum_a",4]]]],[11,"is_1","","Checks if the value of the field is `_1`",143,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",143,[[]]],[11,"is_4","","Checks if the value of the field is `_4`",143,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",143,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",143,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",143,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",143,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",143,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",143,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",143,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",143,[[]]],[11,"variant","","Writes `variant` to the field",144,[[["samplenum_a",4]],["w",6]]],[11,"_1","","1 sample",144,[[],["w",6]]],[11,"_2","","2 samples",144,[[],["w",6]]],[11,"_4","","4 samples",144,[[],["w",6]]],[11,"_8","","8 samples",144,[[],["w",6]]],[11,"_16","","16 samples",144,[[],["w",6]]],[11,"_32","","32 samples",144,[[],["w",6]]],[11,"_64","","64 samples",144,[[],["w",6]]],[11,"_128","","128 samples",144,[[],["w",6]]],[11,"_256","","256 samples",144,[[],["w",6]]],[11,"_512","","512 samples",144,[[],["w",6]]],[11,"_1024","","1024 samples",144,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",144,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",145,[[],["w",6]]],[11,"samplenum","atsamd51g::generic","Bits 0:3 - Number of Samples to be Collected",6,[[],["samplenum_r",6]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",6,[[],["adjres_r",6]]],[11,"samplenum","atsamd51g::adc0::avgctrl","Bits 0:3 - Number of Samples to be Collected",146,[[],["samplenum_r",6]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",146,[[],["adjres_r",6]]],[11,"samplenum","atsamd51g::generic","Bits 0:3 - Number of Samples to be Collected",7,[[],["samplenum_w",3]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",7,[[],["adjres_w",3]]],[11,"samplenum","atsamd51g::adc0::avgctrl","Bits 0:3 - Number of Samples to be Collected",147,[[],["samplenum_w",3]]],[11,"adjres","","Bits 4:6 - Adjusting Result / Division Coefficient",147,[[],["adjres_w",3]]],[0,"sampctrl","atsamd51g::adc0","Sample Time Control",null,null],[3,"SAMPLEN_W","atsamd51g::adc0::sampctrl","Write proxy for field `SAMPLEN`",null,null],[3,"OFFCOMP_W","","Write proxy for field `OFFCOMP`",null,null],[6,"R","","Reader of register SAMPCTRL",null,null],[6,"W","","Writer for register SAMPCTRL",null,null],[6,"SAMPLEN_R","","Reader of field `SAMPLEN`",null,null],[6,"OFFCOMP_R","","Reader of field `OFFCOMP`",null,null],[11,"bits","","Writes raw bits to the field",148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",149,[[],["w",6]]],[11,"samplen","atsamd51g::generic","Bits 0:5 - Sampling Time Length",6,[[],["samplen_r",6]]],[11,"offcomp","","Bit 7 - Comparator Offset Compensation Enable",6,[[],["offcomp_r",6]]],[11,"samplen","atsamd51g::adc0::sampctrl","Bits 0:5 - Sampling Time Length",150,[[],["samplen_r",6]]],[11,"offcomp","","Bit 7 - Comparator Offset Compensation Enable",150,[[],["offcomp_r",6]]],[11,"samplen","atsamd51g::generic","Bits 0:5 - Sampling Time Length",7,[[],["samplen_w",3]]],[11,"offcomp","","Bit 7 - Comparator Offset Compensation Enable",7,[[],["offcomp_w",3]]],[11,"samplen","atsamd51g::adc0::sampctrl","Bits 0:5 - Sampling Time Length",151,[[],["samplen_w",3]]],[11,"offcomp","","Bit 7 - Comparator Offset Compensation Enable",151,[[],["offcomp_w",3]]],[0,"winlt","atsamd51g::adc0","Window Monitor Lower Threshold",null,null],[3,"WINLT_W","atsamd51g::adc0::winlt","Write proxy for field `WINLT`",null,null],[6,"R","","Reader of register WINLT",null,null],[6,"W","","Writer for register WINLT",null,null],[6,"WINLT_R","","Reader of field `WINLT`",null,null],[11,"bits","","Writes raw bits to the field",152,[[],["w",6]]],[11,"winlt","atsamd51g::generic","Bits 0:15 - Window Lower Threshold",6,[[],["winlt_r",6]]],[11,"winlt","atsamd51g::adc0::winlt","Bits 0:15 - Window Lower Threshold",153,[[],["winlt_r",6]]],[11,"winlt","atsamd51g::generic","Bits 0:15 - Window Lower Threshold",7,[[],["winlt_w",3]]],[11,"winlt","atsamd51g::adc0::winlt","Bits 0:15 - Window Lower Threshold",154,[[],["winlt_w",3]]],[0,"winut","atsamd51g::adc0","Window Monitor Upper Threshold",null,null],[3,"WINUT_W","atsamd51g::adc0::winut","Write proxy for field `WINUT`",null,null],[6,"R","","Reader of register WINUT",null,null],[6,"W","","Writer for register WINUT",null,null],[6,"WINUT_R","","Reader of field `WINUT`",null,null],[11,"bits","","Writes raw bits to the field",155,[[],["w",6]]],[11,"winut","atsamd51g::generic","Bits 0:15 - Window Upper Threshold",6,[[],["winut_r",6]]],[11,"winut","atsamd51g::adc0::winut","Bits 0:15 - Window Upper Threshold",156,[[],["winut_r",6]]],[11,"winut","atsamd51g::generic","Bits 0:15 - Window Upper Threshold",7,[[],["winut_w",3]]],[11,"winut","atsamd51g::adc0::winut","Bits 0:15 - Window Upper Threshold",157,[[],["winut_w",3]]],[0,"gaincorr","atsamd51g::adc0","Gain Correction",null,null],[3,"GAINCORR_W","atsamd51g::adc0::gaincorr","Write proxy for field `GAINCORR`",null,null],[6,"R","","Reader of register GAINCORR",null,null],[6,"W","","Writer for register GAINCORR",null,null],[6,"GAINCORR_R","","Reader of field `GAINCORR`",null,null],[11,"bits","","Writes raw bits to the field",158,[[],["w",6]]],[11,"gaincorr","atsamd51g::generic","Bits 0:11 - Gain Correction Value",6,[[],["gaincorr_r",6]]],[11,"gaincorr","atsamd51g::adc0::gaincorr","Bits 0:11 - Gain Correction Value",159,[[],["gaincorr_r",6]]],[11,"gaincorr","atsamd51g::generic","Bits 0:11 - Gain Correction Value",7,[[],["gaincorr_w",3]]],[11,"gaincorr","atsamd51g::adc0::gaincorr","Bits 0:11 - Gain Correction Value",160,[[],["gaincorr_w",3]]],[0,"offsetcorr","atsamd51g::adc0","Offset Correction",null,null],[3,"OFFSETCORR_W","atsamd51g::adc0::offsetcorr","Write proxy for field `OFFSETCORR`",null,null],[6,"R","","Reader of register OFFSETCORR",null,null],[6,"W","","Writer for register OFFSETCORR",null,null],[6,"OFFSETCORR_R","","Reader of field `OFFSETCORR`",null,null],[11,"bits","","Writes raw bits to the field",161,[[],["w",6]]],[11,"offsetcorr","atsamd51g::generic","Bits 0:11 - Offset Correction Value",6,[[],["offsetcorr_r",6]]],[11,"offsetcorr","atsamd51g::adc0::offsetcorr","Bits 0:11 - Offset Correction Value",162,[[],["offsetcorr_r",6]]],[11,"offsetcorr","atsamd51g::generic","Bits 0:11 - Offset Correction Value",7,[[],["offsetcorr_w",3]]],[11,"offsetcorr","atsamd51g::adc0::offsetcorr","Bits 0:11 - Offset Correction Value",163,[[],["offsetcorr_w",3]]],[0,"swtrig","atsamd51g::adc0","Software Trigger",null,null],[3,"FLUSH_W","atsamd51g::adc0::swtrig","Write proxy for field `FLUSH`",null,null],[3,"START_W","","Write proxy for field `START`",null,null],[6,"R","","Reader of register SWTRIG",null,null],[6,"W","","Writer for register SWTRIG",null,null],[6,"FLUSH_R","","Reader of field `FLUSH`",null,null],[6,"START_R","","Reader of field `START`",null,null],[11,"set_bit","","Sets the field bit",164,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",164,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",164,[[],["w",6]]],[11,"set_bit","","Sets the field bit",165,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",165,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",165,[[],["w",6]]],[11,"flush","atsamd51g::generic","Bit 0 - ADC Conversion Flush",6,[[],["flush_r",6]]],[11,"start","","Bit 1 - Start ADC Conversion",6,[[],["start_r",6]]],[11,"flush","atsamd51g::adc0::swtrig","Bit 0 - ADC Conversion Flush",166,[[],["flush_r",6]]],[11,"start","","Bit 1 - Start ADC Conversion",166,[[],["start_r",6]]],[11,"flush","atsamd51g::generic","Bit 0 - ADC Conversion Flush",7,[[],["flush_w",3]]],[11,"start","","Bit 1 - Start ADC Conversion",7,[[],["start_w",3]]],[11,"flush","atsamd51g::adc0::swtrig","Bit 0 - ADC Conversion Flush",167,[[],["flush_w",3]]],[11,"start","","Bit 1 - Start ADC Conversion",167,[[],["start_w",3]]],[0,"intenclr","atsamd51g::adc0","Interrupt Enable Clear",null,null],[3,"RESRDY_W","atsamd51g::adc0::intenclr","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[11,"set_bit","","Sets the field bit",168,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",168,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",168,[[],["w",6]]],[11,"set_bit","","Sets the field bit",169,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",169,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",169,[[],["w",6]]],[11,"set_bit","","Sets the field bit",170,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",170,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",170,[[],["w",6]]],[11,"resrdy","atsamd51g::generic","Bit 0 - Result Ready Interrupt Disable",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Disable",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Disable",6,[[],["winmon_r",6]]],[11,"resrdy","atsamd51g::adc0::intenclr","Bit 0 - Result Ready Interrupt Disable",171,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Disable",171,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Disable",171,[[],["winmon_r",6]]],[11,"resrdy","atsamd51g::generic","Bit 0 - Result Ready Interrupt Disable",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Disable",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Disable",7,[[],["winmon_w",3]]],[11,"resrdy","atsamd51g::adc0::intenclr","Bit 0 - Result Ready Interrupt Disable",172,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Disable",172,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Disable",172,[[],["winmon_w",3]]],[0,"intenset","atsamd51g::adc0","Interrupt Enable Set",null,null],[3,"RESRDY_W","atsamd51g::adc0::intenset","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[11,"set_bit","","Sets the field bit",173,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",173,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",173,[[],["w",6]]],[11,"set_bit","","Sets the field bit",174,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",174,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",174,[[],["w",6]]],[11,"set_bit","","Sets the field bit",175,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",175,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",175,[[],["w",6]]],[11,"resrdy","atsamd51g::generic","Bit 0 - Result Ready Interrupt Enable",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",6,[[],["winmon_r",6]]],[11,"resrdy","atsamd51g::adc0::intenset","Bit 0 - Result Ready Interrupt Enable",176,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",176,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",176,[[],["winmon_r",6]]],[11,"resrdy","atsamd51g::generic","Bit 0 - Result Ready Interrupt Enable",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",7,[[],["winmon_w",3]]],[11,"resrdy","atsamd51g::adc0::intenset","Bit 0 - Result Ready Interrupt Enable",177,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Enable",177,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Enable",177,[[],["winmon_w",3]]],[0,"intflag","atsamd51g::adc0","Interrupt Flag Status and Clear",null,null],[3,"RESRDY_W","atsamd51g::adc0::intflag","Write proxy for field `RESRDY`",null,null],[3,"OVERRUN_W","","Write proxy for field `OVERRUN`",null,null],[3,"WINMON_W","","Write proxy for field `WINMON`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"RESRDY_R","","Reader of field `RESRDY`",null,null],[6,"OVERRUN_R","","Reader of field `OVERRUN`",null,null],[6,"WINMON_R","","Reader of field `WINMON`",null,null],[11,"set_bit","","Sets the field bit",178,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",178,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",178,[[],["w",6]]],[11,"set_bit","","Sets the field bit",179,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",179,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",179,[[],["w",6]]],[11,"set_bit","","Sets the field bit",180,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",180,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",180,[[],["w",6]]],[11,"resrdy","atsamd51g::generic","Bit 0 - Result Ready Interrupt Flag",6,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Flag",6,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Flag",6,[[],["winmon_r",6]]],[11,"resrdy","atsamd51g::adc0::intflag","Bit 0 - Result Ready Interrupt Flag",181,[[],["resrdy_r",6]]],[11,"overrun","","Bit 1 - Overrun Interrupt Flag",181,[[],["overrun_r",6]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Flag",181,[[],["winmon_r",6]]],[11,"resrdy","atsamd51g::generic","Bit 0 - Result Ready Interrupt Flag",7,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Flag",7,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Flag",7,[[],["winmon_w",3]]],[11,"resrdy","atsamd51g::adc0::intflag","Bit 0 - Result Ready Interrupt Flag",182,[[],["resrdy_w",3]]],[11,"overrun","","Bit 1 - Overrun Interrupt Flag",182,[[],["overrun_w",3]]],[11,"winmon","","Bit 2 - Window Monitor Interrupt Flag",182,[[],["winmon_w",3]]],[0,"status","atsamd51g::adc0","Status",null,null],[6,"R","atsamd51g::adc0::status","Reader of register STATUS",null,null],[6,"ADCBUSY_R","","Reader of field `ADCBUSY`",null,null],[6,"WCC_R","","Reader of field `WCC`",null,null],[11,"adcbusy","atsamd51g::generic","Bit 0 - ADC Busy Status",6,[[],["adcbusy_r",6]]],[11,"wcc","","Bits 2:7 - Window Comparator Counter",6,[[],["wcc_r",6]]],[11,"adcbusy","atsamd51g::adc0::status","Bit 0 - ADC Busy Status",183,[[],["adcbusy_r",6]]],[11,"wcc","","Bits 2:7 - Window Comparator Counter",183,[[],["wcc_r",6]]],[0,"syncbusy","atsamd51g::adc0","Synchronization Busy",null,null],[6,"R","atsamd51g::adc0::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"INPUTCTRL_R","","Reader of field `INPUTCTRL`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"REFCTRL_R","","Reader of field `REFCTRL`",null,null],[6,"AVGCTRL_R","","Reader of field `AVGCTRL`",null,null],[6,"SAMPCTRL_R","","Reader of field `SAMPCTRL`",null,null],[6,"WINLT_R","","Reader of field `WINLT`",null,null],[6,"WINUT_R","","Reader of field `WINUT`",null,null],[6,"GAINCORR_R","","Reader of field `GAINCORR`",null,null],[6,"OFFSETCORR_R","","Reader of field `OFFSETCORR`",null,null],[6,"SWTRIG_R","","Reader of field `SWTRIG`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - SWRST Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - ENABLE Synchronization Busy",6,[[],["enable_r",6]]],[11,"inputctrl","","Bit 2 - Input Control Synchronization Busy",6,[[],["inputctrl_r",6]]],[11,"ctrlb","","Bit 3 - Control B Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"refctrl","","Bit 4 - Reference Control Synchronization Busy",6,[[],["refctrl_r",6]]],[11,"avgctrl","","Bit 5 - Average Control Synchronization Busy",6,[[],["avgctrl_r",6]]],[11,"sampctrl","","Bit 6 - Sampling Time Control Synchronization Busy",6,[[],["sampctrl_r",6]]],[11,"winlt","","Bit 7 - Window Monitor Lower Threshold Synchronization Busy",6,[[],["winlt_r",6]]],[11,"winut","","Bit 8 - Window Monitor Upper Threshold Synchronization Busy",6,[[],["winut_r",6]]],[11,"gaincorr","","Bit 9 - Gain Correction Synchronization Busy",6,[[],["gaincorr_r",6]]],[11,"offsetcorr","","Bit 10 - Offset Correction Synchronization Busy",6,[[],["offsetcorr_r",6]]],[11,"swtrig","","Bit 11 - Software Trigger Synchronization Busy",6,[[],["swtrig_r",6]]],[11,"swrst","atsamd51g::adc0::syncbusy","Bit 0 - SWRST Synchronization Busy",184,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - ENABLE Synchronization Busy",184,[[],["enable_r",6]]],[11,"inputctrl","","Bit 2 - Input Control Synchronization Busy",184,[[],["inputctrl_r",6]]],[11,"ctrlb","","Bit 3 - Control B Synchronization Busy",184,[[],["ctrlb_r",6]]],[11,"refctrl","","Bit 4 - Reference Control Synchronization Busy",184,[[],["refctrl_r",6]]],[11,"avgctrl","","Bit 5 - Average Control Synchronization Busy",184,[[],["avgctrl_r",6]]],[11,"sampctrl","","Bit 6 - Sampling Time Control Synchronization Busy",184,[[],["sampctrl_r",6]]],[11,"winlt","","Bit 7 - Window Monitor Lower Threshold Synchronization Busy",184,[[],["winlt_r",6]]],[11,"winut","","Bit 8 - Window Monitor Upper Threshold Synchronization Busy",184,[[],["winut_r",6]]],[11,"gaincorr","","Bit 9 - Gain Correction Synchronization Busy",184,[[],["gaincorr_r",6]]],[11,"offsetcorr","","Bit 10 - Offset Correction Synchronization Busy",184,[[],["offsetcorr_r",6]]],[11,"swtrig","","Bit 11 - Software Trigger Synchronization Busy",184,[[],["swtrig_r",6]]],[0,"dseqdata","atsamd51g::adc0","DMA Sequencial Data",null,null],[3,"DATA_W","atsamd51g::adc0::dseqdata","Write proxy for field `DATA`",null,null],[6,"W","","Writer for register DSEQDATA",null,null],[11,"bits","","Writes raw bits to the field",185,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - DMA Sequential Data",7,[[],["data_w",3]]],[11,"data","atsamd51g::adc0::dseqdata","Bits 0:31 - DMA Sequential Data",186,[[],["data_w",3]]],[0,"dseqctrl","atsamd51g::adc0","DMA Sequential Control",null,null],[3,"INPUTCTRL_W","atsamd51g::adc0::dseqctrl","Write proxy for field `INPUTCTRL`",null,null],[3,"CTRLB_W","","Write proxy for field `CTRLB`",null,null],[3,"REFCTRL_W","","Write proxy for field `REFCTRL`",null,null],[3,"AVGCTRL_W","","Write proxy for field `AVGCTRL`",null,null],[3,"SAMPCTRL_W","","Write proxy for field `SAMPCTRL`",null,null],[3,"WINLT_W","","Write proxy for field `WINLT`",null,null],[3,"WINUT_W","","Write proxy for field `WINUT`",null,null],[3,"GAINCORR_W","","Write proxy for field `GAINCORR`",null,null],[3,"OFFSETCORR_W","","Write proxy for field `OFFSETCORR`",null,null],[3,"AUTOSTART_W","","Write proxy for field `AUTOSTART`",null,null],[6,"R","","Reader of register DSEQCTRL",null,null],[6,"W","","Writer for register DSEQCTRL",null,null],[6,"INPUTCTRL_R","","Reader of field `INPUTCTRL`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"REFCTRL_R","","Reader of field `REFCTRL`",null,null],[6,"AVGCTRL_R","","Reader of field `AVGCTRL`",null,null],[6,"SAMPCTRL_R","","Reader of field `SAMPCTRL`",null,null],[6,"WINLT_R","","Reader of field `WINLT`",null,null],[6,"WINUT_R","","Reader of field `WINUT`",null,null],[6,"GAINCORR_R","","Reader of field `GAINCORR`",null,null],[6,"OFFSETCORR_R","","Reader of field `OFFSETCORR`",null,null],[6,"AUTOSTART_R","","Reader of field `AUTOSTART`",null,null],[11,"set_bit","","Sets the field bit",187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",187,[[],["w",6]]],[11,"set_bit","","Sets the field bit",188,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",188,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",188,[[],["w",6]]],[11,"set_bit","","Sets the field bit",189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",191,[[],["w",6]]],[11,"set_bit","","Sets the field bit",192,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",192,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",192,[[],["w",6]]],[11,"set_bit","","Sets the field bit",193,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",193,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",193,[[],["w",6]]],[11,"set_bit","","Sets the field bit",194,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",194,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",194,[[],["w",6]]],[11,"set_bit","","Sets the field bit",195,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",195,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",195,[[],["w",6]]],[11,"set_bit","","Sets the field bit",196,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",196,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",196,[[],["w",6]]],[11,"inputctrl","atsamd51g::generic","Bit 0 - Input Control",6,[[],["inputctrl_r",6]]],[11,"ctrlb","","Bit 1 - Control B",6,[[],["ctrlb_r",6]]],[11,"refctrl","","Bit 2 - Reference Control",6,[[],["refctrl_r",6]]],[11,"avgctrl","","Bit 3 - Average Control",6,[[],["avgctrl_r",6]]],[11,"sampctrl","","Bit 4 - Sampling Time Control",6,[[],["sampctrl_r",6]]],[11,"winlt","","Bit 5 - Window Monitor Lower Threshold",6,[[],["winlt_r",6]]],[11,"winut","","Bit 6 - Window Monitor Upper Threshold",6,[[],["winut_r",6]]],[11,"gaincorr","","Bit 7 - Gain Correction",6,[[],["gaincorr_r",6]]],[11,"offsetcorr","","Bit 8 - Offset Correction",6,[[],["offsetcorr_r",6]]],[11,"autostart","","Bit 31 - ADC Auto-Start Conversion",6,[[],["autostart_r",6]]],[11,"inputctrl","atsamd51g::adc0::dseqctrl","Bit 0 - Input Control",197,[[],["inputctrl_r",6]]],[11,"ctrlb","","Bit 1 - Control B",197,[[],["ctrlb_r",6]]],[11,"refctrl","","Bit 2 - Reference Control",197,[[],["refctrl_r",6]]],[11,"avgctrl","","Bit 3 - Average Control",197,[[],["avgctrl_r",6]]],[11,"sampctrl","","Bit 4 - Sampling Time Control",197,[[],["sampctrl_r",6]]],[11,"winlt","","Bit 5 - Window Monitor Lower Threshold",197,[[],["winlt_r",6]]],[11,"winut","","Bit 6 - Window Monitor Upper Threshold",197,[[],["winut_r",6]]],[11,"gaincorr","","Bit 7 - Gain Correction",197,[[],["gaincorr_r",6]]],[11,"offsetcorr","","Bit 8 - Offset Correction",197,[[],["offsetcorr_r",6]]],[11,"autostart","","Bit 31 - ADC Auto-Start Conversion",197,[[],["autostart_r",6]]],[11,"inputctrl","atsamd51g::generic","Bit 0 - Input Control",7,[[],["inputctrl_w",3]]],[11,"ctrlb","","Bit 1 - Control B",7,[[],["ctrlb_w",3]]],[11,"refctrl","","Bit 2 - Reference Control",7,[[],["refctrl_w",3]]],[11,"avgctrl","","Bit 3 - Average Control",7,[[],["avgctrl_w",3]]],[11,"sampctrl","","Bit 4 - Sampling Time Control",7,[[],["sampctrl_w",3]]],[11,"winlt","","Bit 5 - Window Monitor Lower Threshold",7,[[],["winlt_w",3]]],[11,"winut","","Bit 6 - Window Monitor Upper Threshold",7,[[],["winut_w",3]]],[11,"gaincorr","","Bit 7 - Gain Correction",7,[[],["gaincorr_w",3]]],[11,"offsetcorr","","Bit 8 - Offset Correction",7,[[],["offsetcorr_w",3]]],[11,"autostart","","Bit 31 - ADC Auto-Start Conversion",7,[[],["autostart_w",3]]],[11,"inputctrl","atsamd51g::adc0::dseqctrl","Bit 0 - Input Control",198,[[],["inputctrl_w",3]]],[11,"ctrlb","","Bit 1 - Control B",198,[[],["ctrlb_w",3]]],[11,"refctrl","","Bit 2 - Reference Control",198,[[],["refctrl_w",3]]],[11,"avgctrl","","Bit 3 - Average Control",198,[[],["avgctrl_w",3]]],[11,"sampctrl","","Bit 4 - Sampling Time Control",198,[[],["sampctrl_w",3]]],[11,"winlt","","Bit 5 - Window Monitor Lower Threshold",198,[[],["winlt_w",3]]],[11,"winut","","Bit 6 - Window Monitor Upper Threshold",198,[[],["winut_w",3]]],[11,"gaincorr","","Bit 7 - Gain Correction",198,[[],["gaincorr_w",3]]],[11,"offsetcorr","","Bit 8 - Offset Correction",198,[[],["offsetcorr_w",3]]],[11,"autostart","","Bit 31 - ADC Auto-Start Conversion",198,[[],["autostart_w",3]]],[0,"dseqstat","atsamd51g::adc0","DMA Sequencial Status",null,null],[6,"R","atsamd51g::adc0::dseqstat","Reader of register DSEQSTAT",null,null],[6,"INPUTCTRL_R","","Reader of field `INPUTCTRL`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"REFCTRL_R","","Reader of field `REFCTRL`",null,null],[6,"AVGCTRL_R","","Reader of field `AVGCTRL`",null,null],[6,"SAMPCTRL_R","","Reader of field `SAMPCTRL`",null,null],[6,"WINLT_R","","Reader of field `WINLT`",null,null],[6,"WINUT_R","","Reader of field `WINUT`",null,null],[6,"GAINCORR_R","","Reader of field `GAINCORR`",null,null],[6,"OFFSETCORR_R","","Reader of field `OFFSETCORR`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[11,"inputctrl","atsamd51g::generic","Bit 0 - Input Control",6,[[],["inputctrl_r",6]]],[11,"ctrlb","","Bit 1 - Control B",6,[[],["ctrlb_r",6]]],[11,"refctrl","","Bit 2 - Reference Control",6,[[],["refctrl_r",6]]],[11,"avgctrl","","Bit 3 - Average Control",6,[[],["avgctrl_r",6]]],[11,"sampctrl","","Bit 4 - Sampling Time Control",6,[[],["sampctrl_r",6]]],[11,"winlt","","Bit 5 - Window Monitor Lower Threshold",6,[[],["winlt_r",6]]],[11,"winut","","Bit 6 - Window Monitor Upper Threshold",6,[[],["winut_r",6]]],[11,"gaincorr","","Bit 7 - Gain Correction",6,[[],["gaincorr_r",6]]],[11,"offsetcorr","","Bit 8 - Offset Correction",6,[[],["offsetcorr_r",6]]],[11,"busy","","Bit 31 - DMA Sequencing Busy",6,[[],["busy_r",6]]],[11,"inputctrl","atsamd51g::adc0::dseqstat","Bit 0 - Input Control",199,[[],["inputctrl_r",6]]],[11,"ctrlb","","Bit 1 - Control B",199,[[],["ctrlb_r",6]]],[11,"refctrl","","Bit 2 - Reference Control",199,[[],["refctrl_r",6]]],[11,"avgctrl","","Bit 3 - Average Control",199,[[],["avgctrl_r",6]]],[11,"sampctrl","","Bit 4 - Sampling Time Control",199,[[],["sampctrl_r",6]]],[11,"winlt","","Bit 5 - Window Monitor Lower Threshold",199,[[],["winlt_r",6]]],[11,"winut","","Bit 6 - Window Monitor Upper Threshold",199,[[],["winut_r",6]]],[11,"gaincorr","","Bit 7 - Gain Correction",199,[[],["gaincorr_r",6]]],[11,"offsetcorr","","Bit 8 - Offset Correction",199,[[],["offsetcorr_r",6]]],[11,"busy","","Bit 31 - DMA Sequencing Busy",199,[[],["busy_r",6]]],[0,"result","atsamd51g::adc0","Result Conversion Value",null,null],[6,"R","atsamd51g::adc0::result","Reader of register RESULT",null,null],[6,"RESULT_R","","Reader of field `RESULT`",null,null],[11,"result","atsamd51g::generic","Bits 0:15 - Result Conversion Value",6,[[],["result_r",6]]],[11,"result","atsamd51g::adc0::result","Bits 0:15 - Result Conversion Value",200,[[],["result_r",6]]],[0,"ress","atsamd51g::adc0","Last Sample Result",null,null],[6,"R","atsamd51g::adc0::ress","Reader of register RESS",null,null],[6,"RESS_R","","Reader of field `RESS`",null,null],[11,"ress","atsamd51g::generic","Bits 0:15 - Last ADC conversion result",6,[[],["ress_r",6]]],[11,"ress","atsamd51g::adc0::ress","Bits 0:15 - Last ADC conversion result",201,[[],["ress_r",6]]],[0,"calib","atsamd51g::adc0","Calibration",null,null],[3,"BIASCOMP_W","atsamd51g::adc0::calib","Write proxy for field `BIASCOMP`",null,null],[3,"BIASR2R_W","","Write proxy for field `BIASR2R`",null,null],[3,"BIASREFBUF_W","","Write proxy for field `BIASREFBUF`",null,null],[6,"R","","Reader of register CALIB",null,null],[6,"W","","Writer for register CALIB",null,null],[6,"BIASCOMP_R","","Reader of field `BIASCOMP`",null,null],[6,"BIASR2R_R","","Reader of field `BIASR2R`",null,null],[6,"BIASREFBUF_R","","Reader of field `BIASREFBUF`",null,null],[11,"bits","","Writes raw bits to the field",202,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",203,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",204,[[],["w",6]]],[11,"biascomp","atsamd51g::generic","Bits 0:2 - Bias Comparator Scaling",6,[[],["biascomp_r",6]]],[11,"biasr2r","","Bits 4:6 - Bias R2R Ampli scaling",6,[[],["biasr2r_r",6]]],[11,"biasrefbuf","","Bits 8:10 - Bias Reference Buffer Scaling",6,[[],["biasrefbuf_r",6]]],[11,"biascomp","atsamd51g::adc0::calib","Bits 0:2 - Bias Comparator Scaling",205,[[],["biascomp_r",6]]],[11,"biasr2r","","Bits 4:6 - Bias R2R Ampli scaling",205,[[],["biasr2r_r",6]]],[11,"biasrefbuf","","Bits 8:10 - Bias Reference Buffer Scaling",205,[[],["biasrefbuf_r",6]]],[11,"biascomp","atsamd51g::generic","Bits 0:2 - Bias Comparator Scaling",7,[[],["biascomp_w",3]]],[11,"biasr2r","","Bits 4:6 - Bias R2R Ampli scaling",7,[[],["biasr2r_w",3]]],[11,"biasrefbuf","","Bits 8:10 - Bias Reference Buffer Scaling",7,[[],["biasrefbuf_w",3]]],[11,"biascomp","atsamd51g::adc0::calib","Bits 0:2 - Bias Comparator Scaling",206,[[],["biascomp_w",3]]],[11,"biasr2r","","Bits 4:6 - Bias R2R Ampli scaling",206,[[],["biasr2r_w",3]]],[11,"biasrefbuf","","Bits 8:10 - Bias Reference Buffer Scaling",206,[[],["biasrefbuf_w",3]]],[6,"CTRLA","atsamd51g::adc0","Control A",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"INPUTCTRL","","Input Control",null,null],[6,"CTRLB","","Control B",null,null],[6,"REFCTRL","","Reference Control",null,null],[6,"AVGCTRL","","Average Control",null,null],[6,"SAMPCTRL","","Sample Time Control",null,null],[6,"WINLT","","Window Monitor Lower Threshold",null,null],[6,"WINUT","","Window Monitor Upper Threshold",null,null],[6,"GAINCORR","","Gain Correction",null,null],[6,"OFFSETCORR","","Offset Correction",null,null],[6,"SWTRIG","","Software Trigger",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"DSEQDATA","","DMA Sequencial Data",null,null],[6,"DSEQCTRL","","DMA Sequential Control",null,null],[6,"DSEQSTAT","","DMA Sequencial Status",null,null],[6,"RESULT","","Result Conversion Value",null,null],[6,"RESS","","Last Sample Result",null,null],[6,"CALIB","","Calibration",null,null],[0,"aes","atsamd51g","Advanced Encryption Standard",null,null],[3,"RegisterBlock","atsamd51g::aes","Register block",null,null],[12,"ctrla","","0x00 - Control A",207,null],[12,"ctrlb","","0x04 - Control B",207,null],[12,"intenclr","","0x05 - Interrupt Enable Clear",207,null],[12,"intenset","","0x06 - Interrupt Enable Set",207,null],[12,"intflag","","0x07 - Interrupt Flag Status",207,null],[12,"databufptr","","0x08 - Data buffer pointer",207,null],[12,"dbgctrl","","0x09 - Debug control",207,null],[12,"keyword","","0x0c - Keyword n",207,null],[12,"indata","","0x38 - Indata",207,null],[12,"intvectv","","0x3c - Initialisation Vector n",207,null],[12,"hashkey","","0x5c - Hash key n",207,null],[12,"ghash","","0x6c - Galois Hash n",207,null],[12,"ciplen","","0x80 - Cipher Length",207,null],[12,"randseed","","0x84 - Random Seed",207,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::aes::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"AESMODE_W","","Write proxy for field `AESMODE`",null,null],[3,"CFBS_W","","Write proxy for field `CFBS`",null,null],[3,"KEYSIZE_W","","Write proxy for field `KEYSIZE`",null,null],[3,"CIPHER_W","","Write proxy for field `CIPHER`",null,null],[3,"STARTMODE_W","","Write proxy for field `STARTMODE`",null,null],[3,"LOD_W","","Write proxy for field `LOD`",null,null],[3,"KEYGEN_W","","Write proxy for field `KEYGEN`",null,null],[3,"XORKEY_W","","Write proxy for field `XORKEY`",null,null],[3,"CTYPE_W","","Write proxy for field `CTYPE`",null,null],[4,"AESMODE_A","","AES Modes of operation",null,null],[13,"ECB","","0: Electronic code book mode",208,null],[13,"CBC","","1: Cipher block chaining mode",208,null],[13,"OFB","","2: Output feedback mode",208,null],[13,"CFB","","3: Cipher feedback mode",208,null],[13,"COUNTER","","4: Counter mode",208,null],[13,"CCM","","5: CCM mode",208,null],[13,"GCM","","6: Galois counter mode",208,null],[4,"CFBS_A","","Cipher Feedback Block Size",null,null],[13,"_128BIT","","0: 128-bit Input data block for Encryption/Decryption in…",209,null],[13,"_64BIT","","1: 64-bit Input data block for Encryption/Decryption in…",209,null],[13,"_32BIT","","2: 32-bit Input data block for Encryption/Decryption in…",209,null],[13,"_16BIT","","3: 16-bit Input data block for Encryption/Decryption in…",209,null],[13,"_8BIT","","4: 8-bit Input data block for Encryption/Decryption in…",209,null],[4,"KEYSIZE_A","","Encryption Key Size",null,null],[13,"_128BIT","","0: 128-bit Key for Encryption / Decryption",210,null],[13,"_192BIT","","1: 192-bit Key for Encryption / Decryption",210,null],[13,"_256BIT","","2: 256-bit Key for Encryption / Decryption",210,null],[4,"CIPHER_A","","Cipher Mode",null,null],[13,"DEC","","0: Decryption",211,null],[13,"ENC","","1: Encryption",211,null],[4,"STARTMODE_A","","Start Mode Select",null,null],[13,"MANUAL","","0: Start Encryption / Decryption in Manual mode",212,null],[13,"AUTO","","1: Start Encryption / Decryption in Auto mode",212,null],[4,"LOD_A","","Last Output Data Mode",null,null],[13,"NONE","","0: No effect",213,null],[13,"LAST","","1: Start encryption in Last Output Data mode",213,null],[4,"KEYGEN_A","","Last Key Generation",null,null],[13,"NONE","","0: No effect",214,null],[13,"LAST","","1: Start Computation of the last NK words of the expanded…",214,null],[4,"XORKEY_A","","XOR Key Operation",null,null],[13,"NONE","","0: No effect",215,null],[13,"XOR","","1: The user keyword gets XORed with the previous keyword…",215,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"AESMODE_R","","Reader of field `AESMODE`",null,null],[6,"CFBS_R","","Reader of field `CFBS`",null,null],[6,"KEYSIZE_R","","Reader of field `KEYSIZE`",null,null],[6,"CIPHER_R","","Reader of field `CIPHER`",null,null],[6,"STARTMODE_R","","Reader of field `STARTMODE`",null,null],[6,"LOD_R","","Reader of field `LOD`",null,null],[6,"KEYGEN_R","","Reader of field `KEYGEN`",null,null],[6,"XORKEY_R","","Reader of field `XORKEY`",null,null],[6,"CTYPE_R","","Reader of field `CTYPE`",null,null],[11,"set_bit","","Sets the field bit",216,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",216,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",216,[[],["w",6]]],[11,"set_bit","","Sets the field bit",217,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",217,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",217,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["aesmode_a",4],["variant",4]]]],[11,"is_ecb","","Checks if the value of the field is `ECB`",6,[[]]],[11,"is_cbc","","Checks if the value of the field is `CBC`",6,[[]]],[11,"is_ofb","","Checks if the value of the field is `OFB`",6,[[]]],[11,"is_cfb","","Checks if the value of the field is `CFB`",6,[[]]],[11,"is_counter","","Checks if the value of the field is `COUNTER`",6,[[]]],[11,"is_ccm","","Checks if the value of the field is `CCM`",6,[[]]],[11,"is_gcm","","Checks if the value of the field is `GCM`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",218,[[],[["aesmode_a",4],["variant",4]]]],[11,"is_ecb","","Checks if the value of the field is `ECB`",218,[[]]],[11,"is_cbc","","Checks if the value of the field is `CBC`",218,[[]]],[11,"is_ofb","","Checks if the value of the field is `OFB`",218,[[]]],[11,"is_cfb","","Checks if the value of the field is `CFB`",218,[[]]],[11,"is_counter","","Checks if the value of the field is `COUNTER`",218,[[]]],[11,"is_ccm","","Checks if the value of the field is `CCM`",218,[[]]],[11,"is_gcm","","Checks if the value of the field is `GCM`",218,[[]]],[11,"variant","","Writes `variant` to the field",219,[[["aesmode_a",4]],["w",6]]],[11,"ecb","","Electronic code book mode",219,[[],["w",6]]],[11,"cbc","","Cipher block chaining mode",219,[[],["w",6]]],[11,"ofb","","Output feedback mode",219,[[],["w",6]]],[11,"cfb","","Cipher feedback mode",219,[[],["w",6]]],[11,"counter","","Counter mode",219,[[],["w",6]]],[11,"ccm","","CCM mode",219,[[],["w",6]]],[11,"gcm","","Galois counter mode",219,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",219,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cfbs_a",4],["variant",4]]]],[11,"is_128bit","","Checks if the value of the field is `_128BIT`",6,[[]]],[11,"is_64bit","","Checks if the value of the field is `_64BIT`",6,[[]]],[11,"is_32bit","","Checks if the value of the field is `_32BIT`",6,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",6,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",220,[[],[["cfbs_a",4],["variant",4]]]],[11,"is_128bit","","Checks if the value of the field is `_128BIT`",220,[[]]],[11,"is_64bit","","Checks if the value of the field is `_64BIT`",220,[[]]],[11,"is_32bit","","Checks if the value of the field is `_32BIT`",220,[[]]],[11,"is_16bit","","Checks if the value of the field is `_16BIT`",220,[[]]],[11,"is_8bit","","Checks if the value of the field is `_8BIT`",220,[[]]],[11,"variant","","Writes `variant` to the field",221,[[["cfbs_a",4]],["w",6]]],[11,"_128bit","","128-bit Input data block for Encryption/Decryption in…",221,[[],["w",6]]],[11,"_64bit","","64-bit Input data block for Encryption/Decryption in…",221,[[],["w",6]]],[11,"_32bit","","32-bit Input data block for Encryption/Decryption in…",221,[[],["w",6]]],[11,"_16bit","","16-bit Input data block for Encryption/Decryption in…",221,[[],["w",6]]],[11,"_8bit","","8-bit Input data block for Encryption/Decryption in Cipher…",221,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",221,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["keysize_a",4]]]],[11,"is_128bit","","Checks if the value of the field is `_128BIT`",6,[[]]],[11,"is_192bit","","Checks if the value of the field is `_192BIT`",6,[[]]],[11,"is_256bit","","Checks if the value of the field is `_256BIT`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",222,[[],[["variant",4],["keysize_a",4]]]],[11,"is_128bit","","Checks if the value of the field is `_128BIT`",222,[[]]],[11,"is_192bit","","Checks if the value of the field is `_192BIT`",222,[[]]],[11,"is_256bit","","Checks if the value of the field is `_256BIT`",222,[[]]],[11,"variant","","Writes `variant` to the field",223,[[["keysize_a",4]],["w",6]]],[11,"_128bit","","128-bit Key for Encryption / Decryption",223,[[],["w",6]]],[11,"_192bit","","192-bit Key for Encryption / Decryption",223,[[],["w",6]]],[11,"_256bit","","256-bit Key for Encryption / Decryption",223,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",223,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cipher_a",4]]],[11,"is_dec","","Checks if the value of the field is `DEC`",6,[[]]],[11,"is_enc","","Checks if the value of the field is `ENC`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",224,[[],["cipher_a",4]]],[11,"is_dec","","Checks if the value of the field is `DEC`",224,[[]]],[11,"is_enc","","Checks if the value of the field is `ENC`",224,[[]]],[11,"variant","","Writes `variant` to the field",225,[[["cipher_a",4]],["w",6]]],[11,"dec","","Decryption",225,[[],["w",6]]],[11,"enc","","Encryption",225,[[],["w",6]]],[11,"set_bit","","Sets the field bit",225,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",225,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",225,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["startmode_a",4]]],[11,"is_manual","","Checks if the value of the field is `MANUAL`",6,[[]]],[11,"is_auto","","Checks if the value of the field is `AUTO`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",226,[[],["startmode_a",4]]],[11,"is_manual","","Checks if the value of the field is `MANUAL`",226,[[]]],[11,"is_auto","","Checks if the value of the field is `AUTO`",226,[[]]],[11,"variant","","Writes `variant` to the field",227,[[["startmode_a",4]],["w",6]]],[11,"manual","","Start Encryption / Decryption in Manual mode",227,[[],["w",6]]],[11,"auto","","Start Encryption / Decryption in Auto mode",227,[[],["w",6]]],[11,"set_bit","","Sets the field bit",227,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",227,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",227,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["lod_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_last","","Checks if the value of the field is `LAST`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",228,[[],["lod_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",228,[[]]],[11,"is_last","","Checks if the value of the field is `LAST`",228,[[]]],[11,"variant","","Writes `variant` to the field",229,[[["lod_a",4]],["w",6]]],[11,"none","","No effect",229,[[],["w",6]]],[11,"last","","Start encryption in Last Output Data mode",229,[[],["w",6]]],[11,"set_bit","","Sets the field bit",229,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",229,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",229,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["keygen_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_last","","Checks if the value of the field is `LAST`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",230,[[],["keygen_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",230,[[]]],[11,"is_last","","Checks if the value of the field is `LAST`",230,[[]]],[11,"variant","","Writes `variant` to the field",231,[[["keygen_a",4]],["w",6]]],[11,"none","","No effect",231,[[],["w",6]]],[11,"last","","Start Computation of the last NK words of the expanded key",231,[[],["w",6]]],[11,"set_bit","","Sets the field bit",231,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",231,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",231,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["xorkey_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_xor","","Checks if the value of the field is `XOR`",6,[[]]],[11,"variant","atsamd51g::aes::ctrla","Get enumerated values variant",232,[[],["xorkey_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",232,[[]]],[11,"is_xor","","Checks if the value of the field is `XOR`",232,[[]]],[11,"variant","","Writes `variant` to the field",233,[[["xorkey_a",4]],["w",6]]],[11,"none","","No effect",233,[[],["w",6]]],[11,"xor","","The user keyword gets XORed with the previous keyword…",233,[[],["w",6]]],[11,"set_bit","","Sets the field bit",233,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",233,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",233,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",234,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"aesmode","","Bits 2:4 - AES Modes of operation",6,[[],["aesmode_r",6]]],[11,"cfbs","","Bits 5:7 - Cipher Feedback Block Size",6,[[],["cfbs_r",6]]],[11,"keysize","","Bits 8:9 - Encryption Key Size",6,[[],["keysize_r",6]]],[11,"cipher","","Bit 10 - Cipher Mode",6,[[],["cipher_r",6]]],[11,"startmode","","Bit 11 - Start Mode Select",6,[[],["startmode_r",6]]],[11,"lod","","Bit 12 - Last Output Data Mode",6,[[],["lod_r",6]]],[11,"keygen","","Bit 13 - Last Key Generation",6,[[],["keygen_r",6]]],[11,"xorkey","","Bit 14 - XOR Key Operation",6,[[],["xorkey_r",6]]],[11,"ctype","","Bits 16:19 - Counter Measure Type",6,[[],["ctype_r",6]]],[11,"swrst","atsamd51g::aes::ctrla","Bit 0 - Software Reset",235,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",235,[[],["enable_r",6]]],[11,"aesmode","","Bits 2:4 - AES Modes of operation",235,[[],["aesmode_r",6]]],[11,"cfbs","","Bits 5:7 - Cipher Feedback Block Size",235,[[],["cfbs_r",6]]],[11,"keysize","","Bits 8:9 - Encryption Key Size",235,[[],["keysize_r",6]]],[11,"cipher","","Bit 10 - Cipher Mode",235,[[],["cipher_r",6]]],[11,"startmode","","Bit 11 - Start Mode Select",235,[[],["startmode_r",6]]],[11,"lod","","Bit 12 - Last Output Data Mode",235,[[],["lod_r",6]]],[11,"keygen","","Bit 13 - Last Key Generation",235,[[],["keygen_r",6]]],[11,"xorkey","","Bit 14 - XOR Key Operation",235,[[],["xorkey_r",6]]],[11,"ctype","","Bits 16:19 - Counter Measure Type",235,[[],["ctype_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"aesmode","","Bits 2:4 - AES Modes of operation",7,[[],["aesmode_w",3]]],[11,"cfbs","","Bits 5:7 - Cipher Feedback Block Size",7,[[],["cfbs_w",3]]],[11,"keysize","","Bits 8:9 - Encryption Key Size",7,[[],["keysize_w",3]]],[11,"cipher","","Bit 10 - Cipher Mode",7,[[],["cipher_w",3]]],[11,"startmode","","Bit 11 - Start Mode Select",7,[[],["startmode_w",3]]],[11,"lod","","Bit 12 - Last Output Data Mode",7,[[],["lod_w",3]]],[11,"keygen","","Bit 13 - Last Key Generation",7,[[],["keygen_w",3]]],[11,"xorkey","","Bit 14 - XOR Key Operation",7,[[],["xorkey_w",3]]],[11,"ctype","","Bits 16:19 - Counter Measure Type",7,[[],["ctype_w",3]]],[11,"swrst","atsamd51g::aes::ctrla","Bit 0 - Software Reset",236,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",236,[[],["enable_w",3]]],[11,"aesmode","","Bits 2:4 - AES Modes of operation",236,[[],["aesmode_w",3]]],[11,"cfbs","","Bits 5:7 - Cipher Feedback Block Size",236,[[],["cfbs_w",3]]],[11,"keysize","","Bits 8:9 - Encryption Key Size",236,[[],["keysize_w",3]]],[11,"cipher","","Bit 10 - Cipher Mode",236,[[],["cipher_w",3]]],[11,"startmode","","Bit 11 - Start Mode Select",236,[[],["startmode_w",3]]],[11,"lod","","Bit 12 - Last Output Data Mode",236,[[],["lod_w",3]]],[11,"keygen","","Bit 13 - Last Key Generation",236,[[],["keygen_w",3]]],[11,"xorkey","","Bit 14 - XOR Key Operation",236,[[],["xorkey_w",3]]],[11,"ctype","","Bits 16:19 - Counter Measure Type",236,[[],["ctype_w",3]]],[0,"ctrlb","atsamd51g::aes","Control B",null,null],[3,"START_W","atsamd51g::aes::ctrlb","Write proxy for field `START`",null,null],[3,"NEWMSG_W","","Write proxy for field `NEWMSG`",null,null],[3,"EOM_W","","Write proxy for field `EOM`",null,null],[3,"GFMUL_W","","Write proxy for field `GFMUL`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"START_R","","Reader of field `START`",null,null],[6,"NEWMSG_R","","Reader of field `NEWMSG`",null,null],[6,"EOM_R","","Reader of field `EOM`",null,null],[6,"GFMUL_R","","Reader of field `GFMUL`",null,null],[11,"set_bit","","Sets the field bit",237,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",237,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",237,[[],["w",6]]],[11,"set_bit","","Sets the field bit",238,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",238,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",238,[[],["w",6]]],[11,"set_bit","","Sets the field bit",239,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",239,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",239,[[],["w",6]]],[11,"set_bit","","Sets the field bit",240,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",240,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",240,[[],["w",6]]],[11,"start","atsamd51g::generic","Bit 0 - Start Encryption/Decryption",6,[[],["start_r",6]]],[11,"newmsg","","Bit 1 - New message",6,[[],["newmsg_r",6]]],[11,"eom","","Bit 2 - End of message",6,[[],["eom_r",6]]],[11,"gfmul","","Bit 3 - GF Multiplication",6,[[],["gfmul_r",6]]],[11,"start","atsamd51g::aes::ctrlb","Bit 0 - Start Encryption/Decryption",241,[[],["start_r",6]]],[11,"newmsg","","Bit 1 - New message",241,[[],["newmsg_r",6]]],[11,"eom","","Bit 2 - End of message",241,[[],["eom_r",6]]],[11,"gfmul","","Bit 3 - GF Multiplication",241,[[],["gfmul_r",6]]],[11,"start","atsamd51g::generic","Bit 0 - Start Encryption/Decryption",7,[[],["start_w",3]]],[11,"newmsg","","Bit 1 - New message",7,[[],["newmsg_w",3]]],[11,"eom","","Bit 2 - End of message",7,[[],["eom_w",3]]],[11,"gfmul","","Bit 3 - GF Multiplication",7,[[],["gfmul_w",3]]],[11,"start","atsamd51g::aes::ctrlb","Bit 0 - Start Encryption/Decryption",242,[[],["start_w",3]]],[11,"newmsg","","Bit 1 - New message",242,[[],["newmsg_w",3]]],[11,"eom","","Bit 2 - End of message",242,[[],["eom_w",3]]],[11,"gfmul","","Bit 3 - GF Multiplication",242,[[],["gfmul_w",3]]],[0,"intenclr","atsamd51g::aes","Interrupt Enable Clear",null,null],[3,"ENCCMP_W","atsamd51g::aes::intenclr","Write proxy for field `ENCCMP`",null,null],[3,"GFMCMP_W","","Write proxy for field `GFMCMP`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"ENCCMP_R","","Reader of field `ENCCMP`",null,null],[6,"GFMCMP_R","","Reader of field `GFMCMP`",null,null],[11,"set_bit","","Sets the field bit",243,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",243,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",243,[[],["w",6]]],[11,"set_bit","","Sets the field bit",244,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",244,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",244,[[],["w",6]]],[11,"enccmp","atsamd51g::generic","Bit 0 - Encryption Complete Interrupt Enable",6,[[],["enccmp_r",6]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",6,[[],["gfmcmp_r",6]]],[11,"enccmp","atsamd51g::aes::intenclr","Bit 0 - Encryption Complete Interrupt Enable",245,[[],["enccmp_r",6]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",245,[[],["gfmcmp_r",6]]],[11,"enccmp","atsamd51g::generic","Bit 0 - Encryption Complete Interrupt Enable",7,[[],["enccmp_w",3]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",7,[[],["gfmcmp_w",3]]],[11,"enccmp","atsamd51g::aes::intenclr","Bit 0 - Encryption Complete Interrupt Enable",246,[[],["enccmp_w",3]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",246,[[],["gfmcmp_w",3]]],[0,"intenset","atsamd51g::aes","Interrupt Enable Set",null,null],[3,"ENCCMP_W","atsamd51g::aes::intenset","Write proxy for field `ENCCMP`",null,null],[3,"GFMCMP_W","","Write proxy for field `GFMCMP`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"ENCCMP_R","","Reader of field `ENCCMP`",null,null],[6,"GFMCMP_R","","Reader of field `GFMCMP`",null,null],[11,"set_bit","","Sets the field bit",247,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",247,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",247,[[],["w",6]]],[11,"set_bit","","Sets the field bit",248,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",248,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",248,[[],["w",6]]],[11,"enccmp","atsamd51g::generic","Bit 0 - Encryption Complete Interrupt Enable",6,[[],["enccmp_r",6]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",6,[[],["gfmcmp_r",6]]],[11,"enccmp","atsamd51g::aes::intenset","Bit 0 - Encryption Complete Interrupt Enable",249,[[],["enccmp_r",6]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",249,[[],["gfmcmp_r",6]]],[11,"enccmp","atsamd51g::generic","Bit 0 - Encryption Complete Interrupt Enable",7,[[],["enccmp_w",3]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",7,[[],["gfmcmp_w",3]]],[11,"enccmp","atsamd51g::aes::intenset","Bit 0 - Encryption Complete Interrupt Enable",250,[[],["enccmp_w",3]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete Interrupt Enable",250,[[],["gfmcmp_w",3]]],[0,"intflag","atsamd51g::aes","Interrupt Flag Status",null,null],[3,"ENCCMP_W","atsamd51g::aes::intflag","Write proxy for field `ENCCMP`",null,null],[3,"GFMCMP_W","","Write proxy for field `GFMCMP`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"ENCCMP_R","","Reader of field `ENCCMP`",null,null],[6,"GFMCMP_R","","Reader of field `GFMCMP`",null,null],[11,"set_bit","","Sets the field bit",251,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",251,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",251,[[],["w",6]]],[11,"set_bit","","Sets the field bit",252,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",252,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",252,[[],["w",6]]],[11,"enccmp","atsamd51g::generic","Bit 0 - Encryption Complete",6,[[],["enccmp_r",6]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete",6,[[],["gfmcmp_r",6]]],[11,"enccmp","atsamd51g::aes::intflag","Bit 0 - Encryption Complete",253,[[],["enccmp_r",6]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete",253,[[],["gfmcmp_r",6]]],[11,"enccmp","atsamd51g::generic","Bit 0 - Encryption Complete",7,[[],["enccmp_w",3]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete",7,[[],["gfmcmp_w",3]]],[11,"enccmp","atsamd51g::aes::intflag","Bit 0 - Encryption Complete",254,[[],["enccmp_w",3]]],[11,"gfmcmp","","Bit 1 - GF Multiplication Complete",254,[[],["gfmcmp_w",3]]],[0,"databufptr","atsamd51g::aes","Data buffer pointer",null,null],[3,"INDATAPTR_W","atsamd51g::aes::databufptr","Write proxy for field `INDATAPTR`",null,null],[6,"R","","Reader of register DATABUFPTR",null,null],[6,"W","","Writer for register DATABUFPTR",null,null],[6,"INDATAPTR_R","","Reader of field `INDATAPTR`",null,null],[11,"bits","","Writes raw bits to the field",255,[[],["w",6]]],[11,"indataptr","atsamd51g::generic","Bits 0:1 - Input Data Pointer",6,[[],["indataptr_r",6]]],[11,"indataptr","atsamd51g::aes::databufptr","Bits 0:1 - Input Data Pointer",256,[[],["indataptr_r",6]]],[11,"indataptr","atsamd51g::generic","Bits 0:1 - Input Data Pointer",7,[[],["indataptr_w",3]]],[11,"indataptr","atsamd51g::aes::databufptr","Bits 0:1 - Input Data Pointer",257,[[],["indataptr_w",3]]],[0,"dbgctrl","atsamd51g::aes","Debug control",null,null],[3,"DBGRUN_W","atsamd51g::aes::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",258,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",258,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",258,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::aes::dbgctrl","Bit 0 - Debug Run",259,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::aes::dbgctrl","Bit 0 - Debug Run",260,[[],["dbgrun_w",3]]],[0,"keyword","atsamd51g::aes","Keyword n",null,null],[6,"W","atsamd51g::aes::keyword","Writer for register KEYWORD[%s]",null,null],[0,"indata","atsamd51g::aes","Indata",null,null],[6,"R","atsamd51g::aes::indata","Reader of register INDATA",null,null],[6,"W","","Writer for register INDATA",null,null],[0,"intvectv","atsamd51g::aes","Initialisation Vector n",null,null],[6,"W","atsamd51g::aes::intvectv","Writer for register INTVECTV[%s]",null,null],[0,"hashkey","atsamd51g::aes","Hash key n",null,null],[6,"R","atsamd51g::aes::hashkey","Reader of register HASHKEY[%s]",null,null],[6,"W","","Writer for register HASHKEY[%s]",null,null],[0,"ghash","atsamd51g::aes","Galois Hash n",null,null],[6,"R","atsamd51g::aes::ghash","Reader of register GHASH[%s]",null,null],[6,"W","","Writer for register GHASH[%s]",null,null],[0,"ciplen","atsamd51g::aes","Cipher Length",null,null],[6,"R","atsamd51g::aes::ciplen","Reader of register CIPLEN",null,null],[6,"W","","Writer for register CIPLEN",null,null],[0,"randseed","atsamd51g::aes","Random Seed",null,null],[6,"R","atsamd51g::aes::randseed","Reader of register RANDSEED",null,null],[6,"W","","Writer for register RANDSEED",null,null],[6,"CTRLA","atsamd51g::aes","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status",null,null],[6,"DATABUFPTR","","Data buffer pointer",null,null],[6,"DBGCTRL","","Debug control",null,null],[6,"KEYWORD","","Keyword n",null,null],[6,"INDATA","","Indata",null,null],[6,"INTVECTV","","Initialisation Vector n",null,null],[6,"HASHKEY","","Hash key n",null,null],[6,"GHASH","","Galois Hash n",null,null],[6,"CIPLEN","","Cipher Length",null,null],[6,"RANDSEED","","Random Seed",null,null],[0,"ccl","atsamd51g","Configurable Custom Logic",null,null],[3,"RegisterBlock","atsamd51g::ccl","Register block",null,null],[12,"ctrl","","0x00 - Control",261,null],[12,"seqctrl","","0x04 - SEQ Control x",261,null],[12,"lutctrl","","0x08 - LUT Control x",261,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd51g::ccl::ctrl","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"set_bit","","Sets the field bit",262,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",262,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",262,[[],["w",6]]],[11,"set_bit","","Sets the field bit",263,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",263,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",263,[[],["w",6]]],[11,"set_bit","","Sets the field bit",264,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",264,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",264,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"swrst","atsamd51g::ccl::ctrl","Bit 0 - Software Reset",265,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",265,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",265,[[],["runstdby_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"swrst","atsamd51g::ccl::ctrl","Bit 0 - Software Reset",266,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",266,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",266,[[],["runstdby_w",3]]],[0,"seqctrl","atsamd51g::ccl","SEQ Control x",null,null],[3,"SEQSEL_W","atsamd51g::ccl::seqctrl","Write proxy for field `SEQSEL`",null,null],[4,"SEQSEL_A","","Sequential Selection",null,null],[13,"DISABLE","","0: Sequential logic is disabled",267,null],[13,"DFF","","1: D flip flop",267,null],[13,"JK","","2: JK flip flop",267,null],[13,"LATCH","","3: D latch",267,null],[13,"RS","","4: RS latch",267,null],[6,"R","","Reader of register SEQCTRL[%s]",null,null],[6,"W","","Writer for register SEQCTRL[%s]",null,null],[6,"SEQSEL_R","","Reader of field `SEQSEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["seqsel_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_dff","","Checks if the value of the field is `DFF`",6,[[]]],[11,"is_jk","","Checks if the value of the field is `JK`",6,[[]]],[11,"is_latch","","Checks if the value of the field is `LATCH`",6,[[]]],[11,"is_rs","","Checks if the value of the field is `RS`",6,[[]]],[11,"variant","atsamd51g::ccl::seqctrl","Get enumerated values variant",268,[[],[["seqsel_a",4],["variant",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",268,[[]]],[11,"is_dff","","Checks if the value of the field is `DFF`",268,[[]]],[11,"is_jk","","Checks if the value of the field is `JK`",268,[[]]],[11,"is_latch","","Checks if the value of the field is `LATCH`",268,[[]]],[11,"is_rs","","Checks if the value of the field is `RS`",268,[[]]],[11,"variant","","Writes `variant` to the field",269,[[["seqsel_a",4]],["w",6]]],[11,"disable","","Sequential logic is disabled",269,[[],["w",6]]],[11,"dff","","D flip flop",269,[[],["w",6]]],[11,"jk","","JK flip flop",269,[[],["w",6]]],[11,"latch","","D latch",269,[[],["w",6]]],[11,"rs","","RS latch",269,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",269,[[],["w",6]]],[11,"seqsel","atsamd51g::generic","Bits 0:3 - Sequential Selection",6,[[],["seqsel_r",6]]],[11,"seqsel","atsamd51g::ccl::seqctrl","Bits 0:3 - Sequential Selection",270,[[],["seqsel_r",6]]],[11,"seqsel","atsamd51g::generic","Bits 0:3 - Sequential Selection",7,[[],["seqsel_w",3]]],[11,"seqsel","atsamd51g::ccl::seqctrl","Bits 0:3 - Sequential Selection",271,[[],["seqsel_w",3]]],[0,"lutctrl","atsamd51g::ccl","LUT Control x",null,null],[3,"ENABLE_W","atsamd51g::ccl::lutctrl","Write proxy for field `ENABLE`",null,null],[3,"FILTSEL_W","","Write proxy for field `FILTSEL`",null,null],[3,"EDGESEL_W","","Write proxy for field `EDGESEL`",null,null],[3,"INSEL0_W","","Write proxy for field `INSEL0`",null,null],[3,"INSEL1_W","","Write proxy for field `INSEL1`",null,null],[3,"INSEL2_W","","Write proxy for field `INSEL2`",null,null],[3,"INVEI_W","","Write proxy for field `INVEI`",null,null],[3,"LUTEI_W","","Write proxy for field `LUTEI`",null,null],[3,"LUTEO_W","","Write proxy for field `LUTEO`",null,null],[3,"TRUTH_W","","Write proxy for field `TRUTH`",null,null],[4,"FILTSEL_A","","Filter Selection",null,null],[13,"DISABLE","","0: Filter disabled",272,null],[13,"SYNCH","","1: Synchronizer enabled",272,null],[13,"FILTER","","2: Filter enabled",272,null],[4,"INSEL0_A","","Input Selection 0",null,null],[13,"MASK","","0: Masked input",273,null],[13,"FEEDBACK","","1: Feedback input source",273,null],[13,"LINK","","2: Linked LUT input source",273,null],[13,"EVENT","","3: Event input source",273,null],[13,"IO","","4: I/O pin input source",273,null],[13,"AC","","5: AC input source",273,null],[13,"TC","","6: TC input source",273,null],[13,"ALTTC","","7: Alternate TC input source",273,null],[13,"TCC","","8: TCC input source",273,null],[13,"SERCOM","","9: SERCOM input source",273,null],[4,"INSEL1_A","","Input Selection 1",null,null],[13,"MASK","","0: Masked input",274,null],[13,"FEEDBACK","","1: Feedback input source",274,null],[13,"LINK","","2: Linked LUT input source",274,null],[13,"EVENT","","3: Event input source",274,null],[13,"IO","","4: I/O pin input source",274,null],[13,"AC","","5: AC input source",274,null],[13,"TC","","6: TC input source",274,null],[13,"ALTTC","","7: Alternate TC input source",274,null],[13,"TCC","","8: TCC input source",274,null],[13,"SERCOM","","9: SERCOM input source",274,null],[4,"INSEL2_A","","Input Selection 2",null,null],[13,"MASK","","0: Masked input",275,null],[13,"FEEDBACK","","1: Feedback input source",275,null],[13,"LINK","","2: Linked LUT input source",275,null],[13,"EVENT","","3: Event input source",275,null],[13,"IO","","4: I/O pin input source",275,null],[13,"AC","","5: AC input source",275,null],[13,"TC","","6: TC input source",275,null],[13,"ALTTC","","7: Alternate TC input source",275,null],[13,"TCC","","8: TCC input source",275,null],[13,"SERCOM","","9: SERCOM input source",275,null],[6,"R","","Reader of register LUTCTRL[%s]",null,null],[6,"W","","Writer for register LUTCTRL[%s]",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"FILTSEL_R","","Reader of field `FILTSEL`",null,null],[6,"EDGESEL_R","","Reader of field `EDGESEL`",null,null],[6,"INSEL0_R","","Reader of field `INSEL0`",null,null],[6,"INSEL1_R","","Reader of field `INSEL1`",null,null],[6,"INSEL2_R","","Reader of field `INSEL2`",null,null],[6,"INVEI_R","","Reader of field `INVEI`",null,null],[6,"LUTEI_R","","Reader of field `LUTEI`",null,null],[6,"LUTEO_R","","Reader of field `LUTEO`",null,null],[6,"TRUTH_R","","Reader of field `TRUTH`",null,null],[11,"set_bit","","Sets the field bit",276,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",276,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",276,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["filtsel_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_synch","","Checks if the value of the field is `SYNCH`",6,[[]]],[11,"is_filter","","Checks if the value of the field is `FILTER`",6,[[]]],[11,"variant","atsamd51g::ccl::lutctrl","Get enumerated values variant",277,[[],[["variant",4],["filtsel_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",277,[[]]],[11,"is_synch","","Checks if the value of the field is `SYNCH`",277,[[]]],[11,"is_filter","","Checks if the value of the field is `FILTER`",277,[[]]],[11,"variant","","Writes `variant` to the field",278,[[["filtsel_a",4]],["w",6]]],[11,"disable","","Filter disabled",278,[[],["w",6]]],[11,"synch","","Synchronizer enabled",278,[[],["w",6]]],[11,"filter","","Filter enabled",278,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",278,[[],["w",6]]],[11,"set_bit","","Sets the field bit",279,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",279,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",279,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["insel0_a",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",6,[[]]],[11,"is_feedback","","Checks if the value of the field is `FEEDBACK`",6,[[]]],[11,"is_link","","Checks if the value of the field is `LINK`",6,[[]]],[11,"is_event","","Checks if the value of the field is `EVENT`",6,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",6,[[]]],[11,"is_ac","","Checks if the value of the field is `AC`",6,[[]]],[11,"is_tc","","Checks if the value of the field is `TC`",6,[[]]],[11,"is_alttc","","Checks if the value of the field is `ALTTC`",6,[[]]],[11,"is_tcc","","Checks if the value of the field is `TCC`",6,[[]]],[11,"is_sercom","","Checks if the value of the field is `SERCOM`",6,[[]]],[11,"variant","atsamd51g::ccl::lutctrl","Get enumerated values variant",280,[[],[["variant",4],["insel0_a",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",280,[[]]],[11,"is_feedback","","Checks if the value of the field is `FEEDBACK`",280,[[]]],[11,"is_link","","Checks if the value of the field is `LINK`",280,[[]]],[11,"is_event","","Checks if the value of the field is `EVENT`",280,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",280,[[]]],[11,"is_ac","","Checks if the value of the field is `AC`",280,[[]]],[11,"is_tc","","Checks if the value of the field is `TC`",280,[[]]],[11,"is_alttc","","Checks if the value of the field is `ALTTC`",280,[[]]],[11,"is_tcc","","Checks if the value of the field is `TCC`",280,[[]]],[11,"is_sercom","","Checks if the value of the field is `SERCOM`",280,[[]]],[11,"variant","","Writes `variant` to the field",281,[[["insel0_a",4]],["w",6]]],[11,"mask","","Masked input",281,[[],["w",6]]],[11,"feedback","","Feedback input source",281,[[],["w",6]]],[11,"link","","Linked LUT input source",281,[[],["w",6]]],[11,"event","","Event input source",281,[[],["w",6]]],[11,"io","","I/O pin input source",281,[[],["w",6]]],[11,"ac","","AC input source",281,[[],["w",6]]],[11,"tc","","TC input source",281,[[],["w",6]]],[11,"alttc","","Alternate TC input source",281,[[],["w",6]]],[11,"tcc","","TCC input source",281,[[],["w",6]]],[11,"sercom","","SERCOM input source",281,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",281,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["insel1_a",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",6,[[]]],[11,"is_feedback","","Checks if the value of the field is `FEEDBACK`",6,[[]]],[11,"is_link","","Checks if the value of the field is `LINK`",6,[[]]],[11,"is_event","","Checks if the value of the field is `EVENT`",6,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",6,[[]]],[11,"is_ac","","Checks if the value of the field is `AC`",6,[[]]],[11,"is_tc","","Checks if the value of the field is `TC`",6,[[]]],[11,"is_alttc","","Checks if the value of the field is `ALTTC`",6,[[]]],[11,"is_tcc","","Checks if the value of the field is `TCC`",6,[[]]],[11,"is_sercom","","Checks if the value of the field is `SERCOM`",6,[[]]],[11,"variant","atsamd51g::ccl::lutctrl","Get enumerated values variant",282,[[],[["variant",4],["insel1_a",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",282,[[]]],[11,"is_feedback","","Checks if the value of the field is `FEEDBACK`",282,[[]]],[11,"is_link","","Checks if the value of the field is `LINK`",282,[[]]],[11,"is_event","","Checks if the value of the field is `EVENT`",282,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",282,[[]]],[11,"is_ac","","Checks if the value of the field is `AC`",282,[[]]],[11,"is_tc","","Checks if the value of the field is `TC`",282,[[]]],[11,"is_alttc","","Checks if the value of the field is `ALTTC`",282,[[]]],[11,"is_tcc","","Checks if the value of the field is `TCC`",282,[[]]],[11,"is_sercom","","Checks if the value of the field is `SERCOM`",282,[[]]],[11,"variant","","Writes `variant` to the field",283,[[["insel1_a",4]],["w",6]]],[11,"mask","","Masked input",283,[[],["w",6]]],[11,"feedback","","Feedback input source",283,[[],["w",6]]],[11,"link","","Linked LUT input source",283,[[],["w",6]]],[11,"event","","Event input source",283,[[],["w",6]]],[11,"io","","I/O pin input source",283,[[],["w",6]]],[11,"ac","","AC input source",283,[[],["w",6]]],[11,"tc","","TC input source",283,[[],["w",6]]],[11,"alttc","","Alternate TC input source",283,[[],["w",6]]],[11,"tcc","","TCC input source",283,[[],["w",6]]],[11,"sercom","","SERCOM input source",283,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",283,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["insel2_a",4],["variant",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",6,[[]]],[11,"is_feedback","","Checks if the value of the field is `FEEDBACK`",6,[[]]],[11,"is_link","","Checks if the value of the field is `LINK`",6,[[]]],[11,"is_event","","Checks if the value of the field is `EVENT`",6,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",6,[[]]],[11,"is_ac","","Checks if the value of the field is `AC`",6,[[]]],[11,"is_tc","","Checks if the value of the field is `TC`",6,[[]]],[11,"is_alttc","","Checks if the value of the field is `ALTTC`",6,[[]]],[11,"is_tcc","","Checks if the value of the field is `TCC`",6,[[]]],[11,"is_sercom","","Checks if the value of the field is `SERCOM`",6,[[]]],[11,"variant","atsamd51g::ccl::lutctrl","Get enumerated values variant",284,[[],[["insel2_a",4],["variant",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",284,[[]]],[11,"is_feedback","","Checks if the value of the field is `FEEDBACK`",284,[[]]],[11,"is_link","","Checks if the value of the field is `LINK`",284,[[]]],[11,"is_event","","Checks if the value of the field is `EVENT`",284,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",284,[[]]],[11,"is_ac","","Checks if the value of the field is `AC`",284,[[]]],[11,"is_tc","","Checks if the value of the field is `TC`",284,[[]]],[11,"is_alttc","","Checks if the value of the field is `ALTTC`",284,[[]]],[11,"is_tcc","","Checks if the value of the field is `TCC`",284,[[]]],[11,"is_sercom","","Checks if the value of the field is `SERCOM`",284,[[]]],[11,"variant","","Writes `variant` to the field",285,[[["insel2_a",4]],["w",6]]],[11,"mask","","Masked input",285,[[],["w",6]]],[11,"feedback","","Feedback input source",285,[[],["w",6]]],[11,"link","","Linked LUT input source",285,[[],["w",6]]],[11,"event","","Event input source",285,[[],["w",6]]],[11,"io","","I/O pin input source",285,[[],["w",6]]],[11,"ac","","AC input source",285,[[],["w",6]]],[11,"tc","","TC input source",285,[[],["w",6]]],[11,"alttc","","Alternate TC input source",285,[[],["w",6]]],[11,"tcc","","TCC input source",285,[[],["w",6]]],[11,"sercom","","SERCOM input source",285,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",285,[[],["w",6]]],[11,"set_bit","","Sets the field bit",286,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",286,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",286,[[],["w",6]]],[11,"set_bit","","Sets the field bit",287,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",287,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",287,[[],["w",6]]],[11,"set_bit","","Sets the field bit",288,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",288,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",288,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",289,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - LUT Enable",6,[[],["enable_r",6]]],[11,"filtsel","","Bits 4:5 - Filter Selection",6,[[],["filtsel_r",6]]],[11,"edgesel","","Bit 7 - Edge Selection",6,[[],["edgesel_r",6]]],[11,"insel0","","Bits 8:11 - Input Selection 0",6,[[],["insel0_r",6]]],[11,"insel1","","Bits 12:15 - Input Selection 1",6,[[],["insel1_r",6]]],[11,"insel2","","Bits 16:19 - Input Selection 2",6,[[],["insel2_r",6]]],[11,"invei","","Bit 20 - Inverted Event Input Enable",6,[[],["invei_r",6]]],[11,"lutei","","Bit 21 - LUT Event Input Enable",6,[[],["lutei_r",6]]],[11,"luteo","","Bit 22 - LUT Event Output Enable",6,[[],["luteo_r",6]]],[11,"truth","","Bits 24:31 - Truth Value",6,[[],["truth_r",6]]],[11,"enable","atsamd51g::ccl::lutctrl","Bit 1 - LUT Enable",290,[[],["enable_r",6]]],[11,"filtsel","","Bits 4:5 - Filter Selection",290,[[],["filtsel_r",6]]],[11,"edgesel","","Bit 7 - Edge Selection",290,[[],["edgesel_r",6]]],[11,"insel0","","Bits 8:11 - Input Selection 0",290,[[],["insel0_r",6]]],[11,"insel1","","Bits 12:15 - Input Selection 1",290,[[],["insel1_r",6]]],[11,"insel2","","Bits 16:19 - Input Selection 2",290,[[],["insel2_r",6]]],[11,"invei","","Bit 20 - Inverted Event Input Enable",290,[[],["invei_r",6]]],[11,"lutei","","Bit 21 - LUT Event Input Enable",290,[[],["lutei_r",6]]],[11,"luteo","","Bit 22 - LUT Event Output Enable",290,[[],["luteo_r",6]]],[11,"truth","","Bits 24:31 - Truth Value",290,[[],["truth_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - LUT Enable",7,[[],["enable_w",3]]],[11,"filtsel","","Bits 4:5 - Filter Selection",7,[[],["filtsel_w",3]]],[11,"edgesel","","Bit 7 - Edge Selection",7,[[],["edgesel_w",3]]],[11,"insel0","","Bits 8:11 - Input Selection 0",7,[[],["insel0_w",3]]],[11,"insel1","","Bits 12:15 - Input Selection 1",7,[[],["insel1_w",3]]],[11,"insel2","","Bits 16:19 - Input Selection 2",7,[[],["insel2_w",3]]],[11,"invei","","Bit 20 - Inverted Event Input Enable",7,[[],["invei_w",3]]],[11,"lutei","","Bit 21 - LUT Event Input Enable",7,[[],["lutei_w",3]]],[11,"luteo","","Bit 22 - LUT Event Output Enable",7,[[],["luteo_w",3]]],[11,"truth","","Bits 24:31 - Truth Value",7,[[],["truth_w",3]]],[11,"enable","atsamd51g::ccl::lutctrl","Bit 1 - LUT Enable",291,[[],["enable_w",3]]],[11,"filtsel","","Bits 4:5 - Filter Selection",291,[[],["filtsel_w",3]]],[11,"edgesel","","Bit 7 - Edge Selection",291,[[],["edgesel_w",3]]],[11,"insel0","","Bits 8:11 - Input Selection 0",291,[[],["insel0_w",3]]],[11,"insel1","","Bits 12:15 - Input Selection 1",291,[[],["insel1_w",3]]],[11,"insel2","","Bits 16:19 - Input Selection 2",291,[[],["insel2_w",3]]],[11,"invei","","Bit 20 - Inverted Event Input Enable",291,[[],["invei_w",3]]],[11,"lutei","","Bit 21 - LUT Event Input Enable",291,[[],["lutei_w",3]]],[11,"luteo","","Bit 22 - LUT Event Output Enable",291,[[],["luteo_w",3]]],[11,"truth","","Bits 24:31 - Truth Value",291,[[],["truth_w",3]]],[6,"CTRL","atsamd51g::ccl","Control",null,null],[6,"SEQCTRL","","SEQ Control x",null,null],[6,"LUTCTRL","","LUT Control x",null,null],[0,"cmcc","atsamd51g","Cortex M Cache Controller",null,null],[3,"RegisterBlock","atsamd51g::cmcc","Register block",null,null],[12,"type_","","0x00 - Cache Type Register",292,null],[12,"cfg","","0x04 - Cache Configuration Register",292,null],[12,"ctrl","","0x08 - Cache Control Register",292,null],[12,"sr","","0x0c - Cache Status Register",292,null],[12,"lckway","","0x10 - Cache Lock per Way Register",292,null],[12,"maint0","","0x20 - Cache Maintenance Register 0",292,null],[12,"maint1","","0x24 - Cache Maintenance Register 1",292,null],[12,"mcfg","","0x28 - Cache Monitor Configuration Register",292,null],[12,"men","","0x2c - Cache Monitor Enable Register",292,null],[12,"mctrl","","0x30 - Cache Monitor Control Register",292,null],[12,"msr","","0x34 - Cache Monitor Status Register",292,null],[0,"type_","","Cache Type Register",null,null],[4,"WAYNUM_A","atsamd51g::cmcc::type_","Number of Way",null,null],[13,"DMAPPED","","0: Direct Mapped Cache",293,null],[13,"ARCH2WAY","","1: 2-WAY set associative",293,null],[13,"ARCH4WAY","","2: 4-WAY set associative",293,null],[4,"CSIZE_A","","Cache Size",null,null],[13,"CSIZE_1KB","","0: Cache Size is 1 KB",294,null],[13,"CSIZE_2KB","","1: Cache Size is 2 KB",294,null],[13,"CSIZE_4KB","","2: Cache Size is 4 KB",294,null],[13,"CSIZE_8KB","","3: Cache Size is 8 KB",294,null],[13,"CSIZE_16KB","","4: Cache Size is 16 KB",294,null],[13,"CSIZE_32KB","","5: Cache Size is 32 KB",294,null],[13,"CSIZE_64KB","","6: Cache Size is 64 KB",294,null],[4,"CLSIZE_A","","Cache Line Size",null,null],[13,"CLSIZE_4B","","0: Cache Line Size is 4 bytes",295,null],[13,"CLSIZE_8B","","1: Cache Line Size is 8 bytes",295,null],[13,"CLSIZE_16B","","2: Cache Line Size is 16 bytes",295,null],[13,"CLSIZE_32B","","3: Cache Line Size is 32 bytes",295,null],[13,"CLSIZE_64B","","4: Cache Line Size is 64 bytes",295,null],[13,"CLSIZE_128B","","5: Cache Line Size is 128 bytes",295,null],[6,"R","","Reader of register TYPE",null,null],[6,"GCLK_R","","Reader of field `GCLK`",null,null],[6,"RRP_R","","Reader of field `RRP`",null,null],[6,"WAYNUM_R","","Reader of field `WAYNUM`",null,null],[6,"LCKDOWN_R","","Reader of field `LCKDOWN`",null,null],[6,"CSIZE_R","","Reader of field `CSIZE`",null,null],[6,"CLSIZE_R","","Reader of field `CLSIZE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["waynum_a",4]]]],[11,"is_dmapped","","Checks if the value of the field is `DMAPPED`",6,[[]]],[11,"is_arch2way","","Checks if the value of the field is `ARCH2WAY`",6,[[]]],[11,"is_arch4way","","Checks if the value of the field is `ARCH4WAY`",6,[[]]],[11,"variant","atsamd51g::cmcc::type_","Get enumerated values variant",296,[[],[["variant",4],["waynum_a",4]]]],[11,"is_dmapped","","Checks if the value of the field is `DMAPPED`",296,[[]]],[11,"is_arch2way","","Checks if the value of the field is `ARCH2WAY`",296,[[]]],[11,"is_arch4way","","Checks if the value of the field is `ARCH4WAY`",296,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["csize_a",4],["variant",4]]]],[11,"is_csize_1kb","","Checks if the value of the field is `CSIZE_1KB`",6,[[]]],[11,"is_csize_2kb","","Checks if the value of the field is `CSIZE_2KB`",6,[[]]],[11,"is_csize_4kb","","Checks if the value of the field is `CSIZE_4KB`",6,[[]]],[11,"is_csize_8kb","","Checks if the value of the field is `CSIZE_8KB`",6,[[]]],[11,"is_csize_16kb","","Checks if the value of the field is `CSIZE_16KB`",6,[[]]],[11,"is_csize_32kb","","Checks if the value of the field is `CSIZE_32KB`",6,[[]]],[11,"is_csize_64kb","","Checks if the value of the field is `CSIZE_64KB`",6,[[]]],[11,"variant","atsamd51g::cmcc::type_","Get enumerated values variant",297,[[],[["csize_a",4],["variant",4]]]],[11,"is_csize_1kb","","Checks if the value of the field is `CSIZE_1KB`",297,[[]]],[11,"is_csize_2kb","","Checks if the value of the field is `CSIZE_2KB`",297,[[]]],[11,"is_csize_4kb","","Checks if the value of the field is `CSIZE_4KB`",297,[[]]],[11,"is_csize_8kb","","Checks if the value of the field is `CSIZE_8KB`",297,[[]]],[11,"is_csize_16kb","","Checks if the value of the field is `CSIZE_16KB`",297,[[]]],[11,"is_csize_32kb","","Checks if the value of the field is `CSIZE_32KB`",297,[[]]],[11,"is_csize_64kb","","Checks if the value of the field is `CSIZE_64KB`",297,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["clsize_a",4],["variant",4]]]],[11,"is_clsize_4b","","Checks if the value of the field is `CLSIZE_4B`",6,[[]]],[11,"is_clsize_8b","","Checks if the value of the field is `CLSIZE_8B`",6,[[]]],[11,"is_clsize_16b","","Checks if the value of the field is `CLSIZE_16B`",6,[[]]],[11,"is_clsize_32b","","Checks if the value of the field is `CLSIZE_32B`",6,[[]]],[11,"is_clsize_64b","","Checks if the value of the field is `CLSIZE_64B`",6,[[]]],[11,"is_clsize_128b","","Checks if the value of the field is `CLSIZE_128B`",6,[[]]],[11,"variant","atsamd51g::cmcc::type_","Get enumerated values variant",298,[[],[["clsize_a",4],["variant",4]]]],[11,"is_clsize_4b","","Checks if the value of the field is `CLSIZE_4B`",298,[[]]],[11,"is_clsize_8b","","Checks if the value of the field is `CLSIZE_8B`",298,[[]]],[11,"is_clsize_16b","","Checks if the value of the field is `CLSIZE_16B`",298,[[]]],[11,"is_clsize_32b","","Checks if the value of the field is `CLSIZE_32B`",298,[[]]],[11,"is_clsize_64b","","Checks if the value of the field is `CLSIZE_64B`",298,[[]]],[11,"is_clsize_128b","","Checks if the value of the field is `CLSIZE_128B`",298,[[]]],[11,"gclk","atsamd51g::generic","Bit 1 - dynamic Clock Gating supported",6,[[],["gclk_r",6]]],[11,"rrp","","Bit 4 - Round Robin Policy supported",6,[[],["rrp_r",6]]],[11,"waynum","","Bits 5:6 - Number of Way",6,[[],["waynum_r",6]]],[11,"lckdown","","Bit 7 - Lock Down supported",6,[[],["lckdown_r",6]]],[11,"csize","","Bits 8:10 - Cache Size",6,[[],["csize_r",6]]],[11,"clsize","","Bits 11:13 - Cache Line Size",6,[[],["clsize_r",6]]],[11,"gclk","atsamd51g::cmcc::type_","Bit 1 - dynamic Clock Gating supported",299,[[],["gclk_r",6]]],[11,"rrp","","Bit 4 - Round Robin Policy supported",299,[[],["rrp_r",6]]],[11,"waynum","","Bits 5:6 - Number of Way",299,[[],["waynum_r",6]]],[11,"lckdown","","Bit 7 - Lock Down supported",299,[[],["lckdown_r",6]]],[11,"csize","","Bits 8:10 - Cache Size",299,[[],["csize_r",6]]],[11,"clsize","","Bits 11:13 - Cache Line Size",299,[[],["clsize_r",6]]],[0,"cfg","atsamd51g::cmcc","Cache Configuration Register",null,null],[3,"ICDIS_W","atsamd51g::cmcc::cfg","Write proxy for field `ICDIS`",null,null],[3,"DCDIS_W","","Write proxy for field `DCDIS`",null,null],[3,"CSIZESW_W","","Write proxy for field `CSIZESW`",null,null],[4,"CSIZESW_A","","Cache size configured by software",null,null],[13,"CONF_CSIZE_1KB","","0: The Cache Size is configured to 1KB",300,null],[13,"CONF_CSIZE_2KB","","1: The Cache Size is configured to 2KB",300,null],[13,"CONF_CSIZE_4KB","","2: The Cache Size is configured to 4KB",300,null],[13,"CONF_CSIZE_8KB","","3: The Cache Size is configured to 8KB",300,null],[13,"CONF_CSIZE_16KB","","4: The Cache Size is configured to 16KB",300,null],[13,"CONF_CSIZE_32KB","","5: The Cache Size is configured to 32KB",300,null],[13,"CONF_CSIZE_64KB","","6: The Cache Size is configured to 64KB",300,null],[6,"R","","Reader of register CFG",null,null],[6,"W","","Writer for register CFG",null,null],[6,"ICDIS_R","","Reader of field `ICDIS`",null,null],[6,"DCDIS_R","","Reader of field `DCDIS`",null,null],[6,"CSIZESW_R","","Reader of field `CSIZESW`",null,null],[11,"set_bit","","Sets the field bit",301,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",301,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",301,[[],["w",6]]],[11,"set_bit","","Sets the field bit",302,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",302,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",302,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["csizesw_a",4],["variant",4]]]],[11,"is_conf_csize_1kb","","Checks if the value of the field is `CONF_CSIZE_1KB`",6,[[]]],[11,"is_conf_csize_2kb","","Checks if the value of the field is `CONF_CSIZE_2KB`",6,[[]]],[11,"is_conf_csize_4kb","","Checks if the value of the field is `CONF_CSIZE_4KB`",6,[[]]],[11,"is_conf_csize_8kb","","Checks if the value of the field is `CONF_CSIZE_8KB`",6,[[]]],[11,"is_conf_csize_16kb","","Checks if the value of the field is `CONF_CSIZE_16KB`",6,[[]]],[11,"is_conf_csize_32kb","","Checks if the value of the field is `CONF_CSIZE_32KB`",6,[[]]],[11,"is_conf_csize_64kb","","Checks if the value of the field is `CONF_CSIZE_64KB`",6,[[]]],[11,"variant","atsamd51g::cmcc::cfg","Get enumerated values variant",303,[[],[["csizesw_a",4],["variant",4]]]],[11,"is_conf_csize_1kb","","Checks if the value of the field is `CONF_CSIZE_1KB`",303,[[]]],[11,"is_conf_csize_2kb","","Checks if the value of the field is `CONF_CSIZE_2KB`",303,[[]]],[11,"is_conf_csize_4kb","","Checks if the value of the field is `CONF_CSIZE_4KB`",303,[[]]],[11,"is_conf_csize_8kb","","Checks if the value of the field is `CONF_CSIZE_8KB`",303,[[]]],[11,"is_conf_csize_16kb","","Checks if the value of the field is `CONF_CSIZE_16KB`",303,[[]]],[11,"is_conf_csize_32kb","","Checks if the value of the field is `CONF_CSIZE_32KB`",303,[[]]],[11,"is_conf_csize_64kb","","Checks if the value of the field is `CONF_CSIZE_64KB`",303,[[]]],[11,"variant","","Writes `variant` to the field",304,[[["csizesw_a",4]],["w",6]]],[11,"conf_csize_1kb","","The Cache Size is configured to 1KB",304,[[],["w",6]]],[11,"conf_csize_2kb","","The Cache Size is configured to 2KB",304,[[],["w",6]]],[11,"conf_csize_4kb","","The Cache Size is configured to 4KB",304,[[],["w",6]]],[11,"conf_csize_8kb","","The Cache Size is configured to 8KB",304,[[],["w",6]]],[11,"conf_csize_16kb","","The Cache Size is configured to 16KB",304,[[],["w",6]]],[11,"conf_csize_32kb","","The Cache Size is configured to 32KB",304,[[],["w",6]]],[11,"conf_csize_64kb","","The Cache Size is configured to 64KB",304,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",304,[[],["w",6]]],[11,"icdis","atsamd51g::generic","Bit 1 - Instruction Cache Disable",6,[[],["icdis_r",6]]],[11,"dcdis","","Bit 2 - Data Cache Disable",6,[[],["dcdis_r",6]]],[11,"csizesw","","Bits 4:6 - Cache size configured by software",6,[[],["csizesw_r",6]]],[11,"icdis","atsamd51g::cmcc::cfg","Bit 1 - Instruction Cache Disable",305,[[],["icdis_r",6]]],[11,"dcdis","","Bit 2 - Data Cache Disable",305,[[],["dcdis_r",6]]],[11,"csizesw","","Bits 4:6 - Cache size configured by software",305,[[],["csizesw_r",6]]],[11,"icdis","atsamd51g::generic","Bit 1 - Instruction Cache Disable",7,[[],["icdis_w",3]]],[11,"dcdis","","Bit 2 - Data Cache Disable",7,[[],["dcdis_w",3]]],[11,"csizesw","","Bits 4:6 - Cache size configured by software",7,[[],["csizesw_w",3]]],[11,"icdis","atsamd51g::cmcc::cfg","Bit 1 - Instruction Cache Disable",306,[[],["icdis_w",3]]],[11,"dcdis","","Bit 2 - Data Cache Disable",306,[[],["dcdis_w",3]]],[11,"csizesw","","Bits 4:6 - Cache size configured by software",306,[[],["csizesw_w",3]]],[0,"ctrl","atsamd51g::cmcc","Cache Control Register",null,null],[3,"CEN_W","atsamd51g::cmcc::ctrl","Write proxy for field `CEN`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",307,[[],["w",6]]],[11,"cen","atsamd51g::generic","Bit 0 - Cache Controller Enable",7,[[],["cen_w",3]]],[11,"cen","atsamd51g::cmcc::ctrl","Bit 0 - Cache Controller Enable",308,[[],["cen_w",3]]],[0,"sr","atsamd51g::cmcc","Cache Status Register",null,null],[6,"R","atsamd51g::cmcc::sr","Reader of register SR",null,null],[6,"CSTS_R","","Reader of field `CSTS`",null,null],[11,"csts","atsamd51g::generic","Bit 0 - Cache Controller Status",6,[[],["csts_r",6]]],[11,"csts","atsamd51g::cmcc::sr","Bit 0 - Cache Controller Status",309,[[],["csts_r",6]]],[0,"lckway","atsamd51g::cmcc","Cache Lock per Way Register",null,null],[3,"LCKWAY_W","atsamd51g::cmcc::lckway","Write proxy for field `LCKWAY`",null,null],[6,"R","","Reader of register LCKWAY",null,null],[6,"W","","Writer for register LCKWAY",null,null],[6,"LCKWAY_R","","Reader of field `LCKWAY`",null,null],[11,"bits","","Writes raw bits to the field",310,[[],["w",6]]],[11,"lckway","atsamd51g::generic","Bits 0:3 - Lockdown way Register",6,[[],["lckway_r",6]]],[11,"lckway","atsamd51g::cmcc::lckway","Bits 0:3 - Lockdown way Register",311,[[],["lckway_r",6]]],[11,"lckway","atsamd51g::generic","Bits 0:3 - Lockdown way Register",7,[[],["lckway_w",3]]],[11,"lckway","atsamd51g::cmcc::lckway","Bits 0:3 - Lockdown way Register",312,[[],["lckway_w",3]]],[0,"maint0","atsamd51g::cmcc","Cache Maintenance Register 0",null,null],[3,"INVALL_W","atsamd51g::cmcc::maint0","Write proxy for field `INVALL`",null,null],[6,"W","","Writer for register MAINT0",null,null],[11,"set_bit","","Sets the field bit",313,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",313,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",313,[[],["w",6]]],[11,"invall","atsamd51g::generic","Bit 0 - Cache Controller invalidate All",7,[[],["invall_w",3]]],[11,"invall","atsamd51g::cmcc::maint0","Bit 0 - Cache Controller invalidate All",314,[[],["invall_w",3]]],[0,"maint1","atsamd51g::cmcc","Cache Maintenance Register 1",null,null],[3,"INDEX_W","atsamd51g::cmcc::maint1","Write proxy for field `INDEX`",null,null],[3,"WAY_W","","Write proxy for field `WAY`",null,null],[4,"WAY_AW","","Invalidate Way",null,null],[13,"WAY0","","0: Way 0 is selection for index invalidation",315,null],[13,"WAY1","","1: Way 1 is selection for index invalidation",315,null],[13,"WAY2","","2: Way 2 is selection for index invalidation",315,null],[13,"WAY3","","3: Way 3 is selection for index invalidation",315,null],[6,"W","","Writer for register MAINT1",null,null],[11,"bits","","Writes raw bits to the field",316,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",317,[[["way_aw",4]],["w",6]]],[11,"way0","","Way 0 is selection for index invalidation",317,[[],["w",6]]],[11,"way1","","Way 1 is selection for index invalidation",317,[[],["w",6]]],[11,"way2","","Way 2 is selection for index invalidation",317,[[],["w",6]]],[11,"way3","","Way 3 is selection for index invalidation",317,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",317,[[],["w",6]]],[11,"index","atsamd51g::generic","Bits 4:11 - Invalidate Index",7,[[],["index_w",3]]],[11,"way","","Bits 28:31 - Invalidate Way",7,[[],["way_w",3]]],[11,"index","atsamd51g::cmcc::maint1","Bits 4:11 - Invalidate Index",318,[[],["index_w",3]]],[11,"way","","Bits 28:31 - Invalidate Way",318,[[],["way_w",3]]],[0,"mcfg","atsamd51g::cmcc","Cache Monitor Configuration Register",null,null],[3,"MODE_W","atsamd51g::cmcc::mcfg","Write proxy for field `MODE`",null,null],[4,"MODE_A","","Cache Controller Monitor Counter Mode",null,null],[13,"CYCLE_COUNT","","0: Cycle counter",319,null],[13,"IHIT_COUNT","","1: Instruction hit counter",319,null],[13,"DHIT_COUNT","","2: Data hit counter",319,null],[6,"R","","Reader of register MCFG",null,null],[6,"W","","Writer for register MCFG",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_cycle_count","","Checks if the value of the field is `CYCLE_COUNT`",6,[[]]],[11,"is_ihit_count","","Checks if the value of the field is `IHIT_COUNT`",6,[[]]],[11,"is_dhit_count","","Checks if the value of the field is `DHIT_COUNT`",6,[[]]],[11,"variant","atsamd51g::cmcc::mcfg","Get enumerated values variant",320,[[],[["variant",4],["mode_a",4]]]],[11,"is_cycle_count","","Checks if the value of the field is `CYCLE_COUNT`",320,[[]]],[11,"is_ihit_count","","Checks if the value of the field is `IHIT_COUNT`",320,[[]]],[11,"is_dhit_count","","Checks if the value of the field is `DHIT_COUNT`",320,[[]]],[11,"variant","","Writes `variant` to the field",321,[[["mode_a",4]],["w",6]]],[11,"cycle_count","","Cycle counter",321,[[],["w",6]]],[11,"ihit_count","","Instruction hit counter",321,[[],["w",6]]],[11,"dhit_count","","Data hit counter",321,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",321,[[],["w",6]]],[11,"mode","atsamd51g::generic","Bits 0:1 - Cache Controller Monitor Counter Mode",6,[[],["mode_r",6]]],[11,"mode","atsamd51g::cmcc::mcfg","Bits 0:1 - Cache Controller Monitor Counter Mode",322,[[],["mode_r",6]]],[11,"mode","atsamd51g::generic","Bits 0:1 - Cache Controller Monitor Counter Mode",7,[[],["mode_w",3]]],[11,"mode","atsamd51g::cmcc::mcfg","Bits 0:1 - Cache Controller Monitor Counter Mode",323,[[],["mode_w",3]]],[0,"men","atsamd51g::cmcc","Cache Monitor Enable Register",null,null],[3,"MENABLE_W","atsamd51g::cmcc::men","Write proxy for field `MENABLE`",null,null],[6,"R","","Reader of register MEN",null,null],[6,"W","","Writer for register MEN",null,null],[6,"MENABLE_R","","Reader of field `MENABLE`",null,null],[11,"set_bit","","Sets the field bit",324,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",324,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",324,[[],["w",6]]],[11,"menable","atsamd51g::generic","Bit 0 - Cache Controller Monitor Enable",6,[[],["menable_r",6]]],[11,"menable","atsamd51g::cmcc::men","Bit 0 - Cache Controller Monitor Enable",325,[[],["menable_r",6]]],[11,"menable","atsamd51g::generic","Bit 0 - Cache Controller Monitor Enable",7,[[],["menable_w",3]]],[11,"menable","atsamd51g::cmcc::men","Bit 0 - Cache Controller Monitor Enable",326,[[],["menable_w",3]]],[0,"mctrl","atsamd51g::cmcc","Cache Monitor Control Register",null,null],[3,"SWRST_W","atsamd51g::cmcc::mctrl","Write proxy for field `SWRST`",null,null],[6,"W","","Writer for register MCTRL",null,null],[11,"set_bit","","Sets the field bit",327,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",327,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",327,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Cache Controller Software Reset",7,[[],["swrst_w",3]]],[11,"swrst","atsamd51g::cmcc::mctrl","Bit 0 - Cache Controller Software Reset",328,[[],["swrst_w",3]]],[0,"msr","atsamd51g::cmcc","Cache Monitor Status Register",null,null],[6,"R","atsamd51g::cmcc::msr","Reader of register MSR",null,null],[6,"EVENT_CNT_R","","Reader of field `EVENT_CNT`",null,null],[11,"event_cnt","atsamd51g::generic","Bits 0:31 - Monitor Event Counter",6,[[],["event_cnt_r",6]]],[11,"event_cnt","atsamd51g::cmcc::msr","Bits 0:31 - Monitor Event Counter",329,[[],["event_cnt_r",6]]],[6,"TYPE","atsamd51g::cmcc","Cache Type Register",null,null],[6,"CFG","","Cache Configuration Register",null,null],[6,"CTRL","","Cache Control Register",null,null],[6,"SR","","Cache Status Register",null,null],[6,"LCKWAY","","Cache Lock per Way Register",null,null],[6,"MAINT0","","Cache Maintenance Register 0",null,null],[6,"MAINT1","","Cache Maintenance Register 1",null,null],[6,"MCFG","","Cache Monitor Configuration Register",null,null],[6,"MEN","","Cache Monitor Enable Register",null,null],[6,"MCTRL","","Cache Monitor Control Register",null,null],[6,"MSR","","Cache Monitor Status Register",null,null],[0,"dac","atsamd51g","Digital-to-Analog Converter",null,null],[3,"RegisterBlock","atsamd51g::dac","Register block",null,null],[12,"ctrla","","0x00 - Control A",330,null],[12,"ctrlb","","0x01 - Control B",330,null],[12,"evctrl","","0x02 - Event Control",330,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",330,null],[12,"intenset","","0x05 - Interrupt Enable Set",330,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",330,null],[12,"status","","0x07 - Status",330,null],[12,"syncbusy","","0x08 - Synchronization Busy",330,null],[12,"dacctrl","","0x0c - DAC n Control",330,null],[12,"data","","0x10 - DAC n Data",330,null],[12,"databuf","","0x14 - DAC n Data Buffer",330,null],[12,"dbgctrl","","0x18 - Debug Control",330,null],[12,"result","","0x1c - Filter Result",330,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::dac::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",331,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",331,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",331,[[],["w",6]]],[11,"set_bit","","Sets the field bit",332,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",332,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",332,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable DAC Controller",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::dac::ctrla","Bit 0 - Software Reset",333,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable DAC Controller",333,[[],["enable_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable DAC Controller",7,[[],["enable_w",3]]],[11,"swrst","atsamd51g::dac::ctrla","Bit 0 - Software Reset",334,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable DAC Controller",334,[[],["enable_w",3]]],[0,"ctrlb","atsamd51g::dac","Control B",null,null],[3,"DIFF_W","atsamd51g::dac::ctrlb","Write proxy for field `DIFF`",null,null],[3,"REFSEL_W","","Write proxy for field `REFSEL`",null,null],[4,"REFSEL_A","","Reference Selection for DAC0/1",null,null],[13,"VREFPU","","0: External reference unbuffered",335,null],[13,"VDDANA","","1: Analog supply",335,null],[13,"VREFPB","","2: External reference buffered",335,null],[13,"INTREF","","3: Internal bandgap reference",335,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"DIFF_R","","Reader of field `DIFF`",null,null],[6,"REFSEL_R","","Reader of field `REFSEL`",null,null],[11,"set_bit","","Sets the field bit",336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",336,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["refsel_a",4]]],[11,"is_vrefpu","","Checks if the value of the field is `VREFPU`",6,[[]]],[11,"is_vddana","","Checks if the value of the field is `VDDANA`",6,[[]]],[11,"is_vrefpb","","Checks if the value of the field is `VREFPB`",6,[[]]],[11,"is_intref","","Checks if the value of the field is `INTREF`",6,[[]]],[11,"variant","atsamd51g::dac::ctrlb","Get enumerated values variant",337,[[],["refsel_a",4]]],[11,"is_vrefpu","","Checks if the value of the field is `VREFPU`",337,[[]]],[11,"is_vddana","","Checks if the value of the field is `VDDANA`",337,[[]]],[11,"is_vrefpb","","Checks if the value of the field is `VREFPB`",337,[[]]],[11,"is_intref","","Checks if the value of the field is `INTREF`",337,[[]]],[11,"variant","","Writes `variant` to the field",338,[[["refsel_a",4]],["w",6]]],[11,"vrefpu","","External reference unbuffered",338,[[],["w",6]]],[11,"vddana","","Analog supply",338,[[],["w",6]]],[11,"vrefpb","","External reference buffered",338,[[],["w",6]]],[11,"intref","","Internal bandgap reference",338,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",338,[[],["w",6]]],[11,"diff","atsamd51g::generic","Bit 0 - Differential mode enable",6,[[],["diff_r",6]]],[11,"refsel","","Bits 1:2 - Reference Selection for DAC0/1",6,[[],["refsel_r",6]]],[11,"diff","atsamd51g::dac::ctrlb","Bit 0 - Differential mode enable",339,[[],["diff_r",6]]],[11,"refsel","","Bits 1:2 - Reference Selection for DAC0/1",339,[[],["refsel_r",6]]],[11,"diff","atsamd51g::generic","Bit 0 - Differential mode enable",7,[[],["diff_w",3]]],[11,"refsel","","Bits 1:2 - Reference Selection for DAC0/1",7,[[],["refsel_w",3]]],[11,"diff","atsamd51g::dac::ctrlb","Bit 0 - Differential mode enable",340,[[],["diff_w",3]]],[11,"refsel","","Bits 1:2 - Reference Selection for DAC0/1",340,[[],["refsel_w",3]]],[0,"evctrl","atsamd51g::dac","Event Control",null,null],[3,"STARTEI0_W","atsamd51g::dac::evctrl","Write proxy for field `STARTEI0`",null,null],[3,"STARTEI1_W","","Write proxy for field `STARTEI1`",null,null],[3,"EMPTYEO0_W","","Write proxy for field `EMPTYEO0`",null,null],[3,"EMPTYEO1_W","","Write proxy for field `EMPTYEO1`",null,null],[3,"INVEI0_W","","Write proxy for field `INVEI0`",null,null],[3,"INVEI1_W","","Write proxy for field `INVEI1`",null,null],[3,"RESRDYEO0_W","","Write proxy for field `RESRDYEO0`",null,null],[3,"RESRDYEO1_W","","Write proxy for field `RESRDYEO1`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"STARTEI0_R","","Reader of field `STARTEI0`",null,null],[6,"STARTEI1_R","","Reader of field `STARTEI1`",null,null],[6,"EMPTYEO0_R","","Reader of field `EMPTYEO0`",null,null],[6,"EMPTYEO1_R","","Reader of field `EMPTYEO1`",null,null],[6,"INVEI0_R","","Reader of field `INVEI0`",null,null],[6,"INVEI1_R","","Reader of field `INVEI1`",null,null],[6,"RESRDYEO0_R","","Reader of field `RESRDYEO0`",null,null],[6,"RESRDYEO1_R","","Reader of field `RESRDYEO1`",null,null],[11,"set_bit","","Sets the field bit",341,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",341,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",341,[[],["w",6]]],[11,"set_bit","","Sets the field bit",342,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",342,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",342,[[],["w",6]]],[11,"set_bit","","Sets the field bit",343,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",343,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",343,[[],["w",6]]],[11,"set_bit","","Sets the field bit",344,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",344,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",344,[[],["w",6]]],[11,"set_bit","","Sets the field bit",345,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",345,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",345,[[],["w",6]]],[11,"set_bit","","Sets the field bit",346,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",346,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",346,[[],["w",6]]],[11,"set_bit","","Sets the field bit",347,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",347,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",347,[[],["w",6]]],[11,"set_bit","","Sets the field bit",348,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",348,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",348,[[],["w",6]]],[11,"startei0","atsamd51g::generic","Bit 0 - Start Conversion Event Input DAC 0",6,[[],["startei0_r",6]]],[11,"startei1","","Bit 1 - Start Conversion Event Input DAC 1",6,[[],["startei1_r",6]]],[11,"emptyeo0","","Bit 2 - Data Buffer Empty Event Output DAC 0",6,[[],["emptyeo0_r",6]]],[11,"emptyeo1","","Bit 3 - Data Buffer Empty Event Output DAC 1",6,[[],["emptyeo1_r",6]]],[11,"invei0","","Bit 4 - Enable Invertion of DAC 0 input event",6,[[],["invei0_r",6]]],[11,"invei1","","Bit 5 - Enable Invertion of DAC 1 input event",6,[[],["invei1_r",6]]],[11,"resrdyeo0","","Bit 6 - Result Ready Event Output 0",6,[[],["resrdyeo0_r",6]]],[11,"resrdyeo1","","Bit 7 - Result Ready Event Output 1",6,[[],["resrdyeo1_r",6]]],[11,"startei0","atsamd51g::dac::evctrl","Bit 0 - Start Conversion Event Input DAC 0",349,[[],["startei0_r",6]]],[11,"startei1","","Bit 1 - Start Conversion Event Input DAC 1",349,[[],["startei1_r",6]]],[11,"emptyeo0","","Bit 2 - Data Buffer Empty Event Output DAC 0",349,[[],["emptyeo0_r",6]]],[11,"emptyeo1","","Bit 3 - Data Buffer Empty Event Output DAC 1",349,[[],["emptyeo1_r",6]]],[11,"invei0","","Bit 4 - Enable Invertion of DAC 0 input event",349,[[],["invei0_r",6]]],[11,"invei1","","Bit 5 - Enable Invertion of DAC 1 input event",349,[[],["invei1_r",6]]],[11,"resrdyeo0","","Bit 6 - Result Ready Event Output 0",349,[[],["resrdyeo0_r",6]]],[11,"resrdyeo1","","Bit 7 - Result Ready Event Output 1",349,[[],["resrdyeo1_r",6]]],[11,"startei0","atsamd51g::generic","Bit 0 - Start Conversion Event Input DAC 0",7,[[],["startei0_w",3]]],[11,"startei1","","Bit 1 - Start Conversion Event Input DAC 1",7,[[],["startei1_w",3]]],[11,"emptyeo0","","Bit 2 - Data Buffer Empty Event Output DAC 0",7,[[],["emptyeo0_w",3]]],[11,"emptyeo1","","Bit 3 - Data Buffer Empty Event Output DAC 1",7,[[],["emptyeo1_w",3]]],[11,"invei0","","Bit 4 - Enable Invertion of DAC 0 input event",7,[[],["invei0_w",3]]],[11,"invei1","","Bit 5 - Enable Invertion of DAC 1 input event",7,[[],["invei1_w",3]]],[11,"resrdyeo0","","Bit 6 - Result Ready Event Output 0",7,[[],["resrdyeo0_w",3]]],[11,"resrdyeo1","","Bit 7 - Result Ready Event Output 1",7,[[],["resrdyeo1_w",3]]],[11,"startei0","atsamd51g::dac::evctrl","Bit 0 - Start Conversion Event Input DAC 0",350,[[],["startei0_w",3]]],[11,"startei1","","Bit 1 - Start Conversion Event Input DAC 1",350,[[],["startei1_w",3]]],[11,"emptyeo0","","Bit 2 - Data Buffer Empty Event Output DAC 0",350,[[],["emptyeo0_w",3]]],[11,"emptyeo1","","Bit 3 - Data Buffer Empty Event Output DAC 1",350,[[],["emptyeo1_w",3]]],[11,"invei0","","Bit 4 - Enable Invertion of DAC 0 input event",350,[[],["invei0_w",3]]],[11,"invei1","","Bit 5 - Enable Invertion of DAC 1 input event",350,[[],["invei1_w",3]]],[11,"resrdyeo0","","Bit 6 - Result Ready Event Output 0",350,[[],["resrdyeo0_w",3]]],[11,"resrdyeo1","","Bit 7 - Result Ready Event Output 1",350,[[],["resrdyeo1_w",3]]],[0,"intenclr","atsamd51g::dac","Interrupt Enable Clear",null,null],[3,"UNDERRUN0_W","atsamd51g::dac::intenclr","Write proxy for field `UNDERRUN0`",null,null],[3,"UNDERRUN1_W","","Write proxy for field `UNDERRUN1`",null,null],[3,"EMPTY0_W","","Write proxy for field `EMPTY0`",null,null],[3,"EMPTY1_W","","Write proxy for field `EMPTY1`",null,null],[3,"RESRDY0_W","","Write proxy for field `RESRDY0`",null,null],[3,"RESRDY1_W","","Write proxy for field `RESRDY1`",null,null],[3,"OVERRUN0_W","","Write proxy for field `OVERRUN0`",null,null],[3,"OVERRUN1_W","","Write proxy for field `OVERRUN1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"UNDERRUN0_R","","Reader of field `UNDERRUN0`",null,null],[6,"UNDERRUN1_R","","Reader of field `UNDERRUN1`",null,null],[6,"EMPTY0_R","","Reader of field `EMPTY0`",null,null],[6,"EMPTY1_R","","Reader of field `EMPTY1`",null,null],[6,"RESRDY0_R","","Reader of field `RESRDY0`",null,null],[6,"RESRDY1_R","","Reader of field `RESRDY1`",null,null],[6,"OVERRUN0_R","","Reader of field `OVERRUN0`",null,null],[6,"OVERRUN1_R","","Reader of field `OVERRUN1`",null,null],[11,"set_bit","","Sets the field bit",351,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",351,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",351,[[],["w",6]]],[11,"set_bit","","Sets the field bit",352,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",352,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",352,[[],["w",6]]],[11,"set_bit","","Sets the field bit",353,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",353,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",353,[[],["w",6]]],[11,"set_bit","","Sets the field bit",354,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",354,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",354,[[],["w",6]]],[11,"set_bit","","Sets the field bit",355,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",355,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",355,[[],["w",6]]],[11,"set_bit","","Sets the field bit",356,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",356,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",356,[[],["w",6]]],[11,"set_bit","","Sets the field bit",357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",358,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",358,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",358,[[],["w",6]]],[11,"underrun0","atsamd51g::generic","Bit 0 - Underrun 0 Interrupt Enable",6,[[],["underrun0_r",6]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",6,[[],["underrun1_r",6]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",6,[[],["empty0_r",6]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",6,[[],["empty1_r",6]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",6,[[],["resrdy0_r",6]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",6,[[],["resrdy1_r",6]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",6,[[],["overrun0_r",6]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",6,[[],["overrun1_r",6]]],[11,"underrun0","atsamd51g::dac::intenclr","Bit 0 - Underrun 0 Interrupt Enable",359,[[],["underrun0_r",6]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",359,[[],["underrun1_r",6]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",359,[[],["empty0_r",6]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",359,[[],["empty1_r",6]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",359,[[],["resrdy0_r",6]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",359,[[],["resrdy1_r",6]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",359,[[],["overrun0_r",6]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",359,[[],["overrun1_r",6]]],[11,"underrun0","atsamd51g::generic","Bit 0 - Underrun 0 Interrupt Enable",7,[[],["underrun0_w",3]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",7,[[],["underrun1_w",3]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",7,[[],["empty0_w",3]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",7,[[],["empty1_w",3]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",7,[[],["resrdy0_w",3]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",7,[[],["resrdy1_w",3]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",7,[[],["overrun0_w",3]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",7,[[],["overrun1_w",3]]],[11,"underrun0","atsamd51g::dac::intenclr","Bit 0 - Underrun 0 Interrupt Enable",360,[[],["underrun0_w",3]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",360,[[],["underrun1_w",3]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",360,[[],["empty0_w",3]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",360,[[],["empty1_w",3]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",360,[[],["resrdy0_w",3]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",360,[[],["resrdy1_w",3]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",360,[[],["overrun0_w",3]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",360,[[],["overrun1_w",3]]],[0,"intenset","atsamd51g::dac","Interrupt Enable Set",null,null],[3,"UNDERRUN0_W","atsamd51g::dac::intenset","Write proxy for field `UNDERRUN0`",null,null],[3,"UNDERRUN1_W","","Write proxy for field `UNDERRUN1`",null,null],[3,"EMPTY0_W","","Write proxy for field `EMPTY0`",null,null],[3,"EMPTY1_W","","Write proxy for field `EMPTY1`",null,null],[3,"RESRDY0_W","","Write proxy for field `RESRDY0`",null,null],[3,"RESRDY1_W","","Write proxy for field `RESRDY1`",null,null],[3,"OVERRUN0_W","","Write proxy for field `OVERRUN0`",null,null],[3,"OVERRUN1_W","","Write proxy for field `OVERRUN1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"UNDERRUN0_R","","Reader of field `UNDERRUN0`",null,null],[6,"UNDERRUN1_R","","Reader of field `UNDERRUN1`",null,null],[6,"EMPTY0_R","","Reader of field `EMPTY0`",null,null],[6,"EMPTY1_R","","Reader of field `EMPTY1`",null,null],[6,"RESRDY0_R","","Reader of field `RESRDY0`",null,null],[6,"RESRDY1_R","","Reader of field `RESRDY1`",null,null],[6,"OVERRUN0_R","","Reader of field `OVERRUN0`",null,null],[6,"OVERRUN1_R","","Reader of field `OVERRUN1`",null,null],[11,"set_bit","","Sets the field bit",361,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",361,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",361,[[],["w",6]]],[11,"set_bit","","Sets the field bit",362,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",362,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",362,[[],["w",6]]],[11,"set_bit","","Sets the field bit",363,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",363,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",363,[[],["w",6]]],[11,"set_bit","","Sets the field bit",364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",365,[[],["w",6]]],[11,"set_bit","","Sets the field bit",366,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",366,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",366,[[],["w",6]]],[11,"set_bit","","Sets the field bit",367,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",367,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",367,[[],["w",6]]],[11,"set_bit","","Sets the field bit",368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",368,[[],["w",6]]],[11,"underrun0","atsamd51g::generic","Bit 0 - Underrun 0 Interrupt Enable",6,[[],["underrun0_r",6]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",6,[[],["underrun1_r",6]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",6,[[],["empty0_r",6]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",6,[[],["empty1_r",6]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",6,[[],["resrdy0_r",6]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",6,[[],["resrdy1_r",6]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",6,[[],["overrun0_r",6]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",6,[[],["overrun1_r",6]]],[11,"underrun0","atsamd51g::dac::intenset","Bit 0 - Underrun 0 Interrupt Enable",369,[[],["underrun0_r",6]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",369,[[],["underrun1_r",6]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",369,[[],["empty0_r",6]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",369,[[],["empty1_r",6]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",369,[[],["resrdy0_r",6]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",369,[[],["resrdy1_r",6]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",369,[[],["overrun0_r",6]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",369,[[],["overrun1_r",6]]],[11,"underrun0","atsamd51g::generic","Bit 0 - Underrun 0 Interrupt Enable",7,[[],["underrun0_w",3]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",7,[[],["underrun1_w",3]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",7,[[],["empty0_w",3]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",7,[[],["empty1_w",3]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",7,[[],["resrdy0_w",3]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",7,[[],["resrdy1_w",3]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",7,[[],["overrun0_w",3]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",7,[[],["overrun1_w",3]]],[11,"underrun0","atsamd51g::dac::intenset","Bit 0 - Underrun 0 Interrupt Enable",370,[[],["underrun0_w",3]]],[11,"underrun1","","Bit 1 - Underrun 1 Interrupt Enable",370,[[],["underrun1_w",3]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty Interrupt Enable",370,[[],["empty0_w",3]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty Interrupt Enable",370,[[],["empty1_w",3]]],[11,"resrdy0","","Bit 4 - Result 0 Ready Interrupt Enable",370,[[],["resrdy0_w",3]]],[11,"resrdy1","","Bit 5 - Result 1 Ready Interrupt Enable",370,[[],["resrdy1_w",3]]],[11,"overrun0","","Bit 6 - Overrun 0 Interrupt Enable",370,[[],["overrun0_w",3]]],[11,"overrun1","","Bit 7 - Overrun 1 Interrupt Enable",370,[[],["overrun1_w",3]]],[0,"intflag","atsamd51g::dac","Interrupt Flag Status and Clear",null,null],[3,"UNDERRUN0_W","atsamd51g::dac::intflag","Write proxy for field `UNDERRUN0`",null,null],[3,"UNDERRUN1_W","","Write proxy for field `UNDERRUN1`",null,null],[3,"EMPTY0_W","","Write proxy for field `EMPTY0`",null,null],[3,"EMPTY1_W","","Write proxy for field `EMPTY1`",null,null],[3,"RESRDY0_W","","Write proxy for field `RESRDY0`",null,null],[3,"RESRDY1_W","","Write proxy for field `RESRDY1`",null,null],[3,"OVERRUN0_W","","Write proxy for field `OVERRUN0`",null,null],[3,"OVERRUN1_W","","Write proxy for field `OVERRUN1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"UNDERRUN0_R","","Reader of field `UNDERRUN0`",null,null],[6,"UNDERRUN1_R","","Reader of field `UNDERRUN1`",null,null],[6,"EMPTY0_R","","Reader of field `EMPTY0`",null,null],[6,"EMPTY1_R","","Reader of field `EMPTY1`",null,null],[6,"RESRDY0_R","","Reader of field `RESRDY0`",null,null],[6,"RESRDY1_R","","Reader of field `RESRDY1`",null,null],[6,"OVERRUN0_R","","Reader of field `OVERRUN0`",null,null],[6,"OVERRUN1_R","","Reader of field `OVERRUN1`",null,null],[11,"set_bit","","Sets the field bit",371,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",371,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",371,[[],["w",6]]],[11,"set_bit","","Sets the field bit",372,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",372,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",372,[[],["w",6]]],[11,"set_bit","","Sets the field bit",373,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",373,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",373,[[],["w",6]]],[11,"set_bit","","Sets the field bit",374,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",374,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",374,[[],["w",6]]],[11,"set_bit","","Sets the field bit",375,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",375,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",375,[[],["w",6]]],[11,"set_bit","","Sets the field bit",376,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",376,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",376,[[],["w",6]]],[11,"set_bit","","Sets the field bit",377,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",377,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",377,[[],["w",6]]],[11,"set_bit","","Sets the field bit",378,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",378,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",378,[[],["w",6]]],[11,"underrun0","atsamd51g::generic","Bit 0 - Result 0 Underrun",6,[[],["underrun0_r",6]]],[11,"underrun1","","Bit 1 - Result 1 Underrun",6,[[],["underrun1_r",6]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty",6,[[],["empty0_r",6]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty",6,[[],["empty1_r",6]]],[11,"resrdy0","","Bit 4 - Result 0 Ready",6,[[],["resrdy0_r",6]]],[11,"resrdy1","","Bit 5 - Result 1 Ready",6,[[],["resrdy1_r",6]]],[11,"overrun0","","Bit 6 - Result 0 Overrun",6,[[],["overrun0_r",6]]],[11,"overrun1","","Bit 7 - Result 1 Overrun",6,[[],["overrun1_r",6]]],[11,"underrun0","atsamd51g::dac::intflag","Bit 0 - Result 0 Underrun",379,[[],["underrun0_r",6]]],[11,"underrun1","","Bit 1 - Result 1 Underrun",379,[[],["underrun1_r",6]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty",379,[[],["empty0_r",6]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty",379,[[],["empty1_r",6]]],[11,"resrdy0","","Bit 4 - Result 0 Ready",379,[[],["resrdy0_r",6]]],[11,"resrdy1","","Bit 5 - Result 1 Ready",379,[[],["resrdy1_r",6]]],[11,"overrun0","","Bit 6 - Result 0 Overrun",379,[[],["overrun0_r",6]]],[11,"overrun1","","Bit 7 - Result 1 Overrun",379,[[],["overrun1_r",6]]],[11,"underrun0","atsamd51g::generic","Bit 0 - Result 0 Underrun",7,[[],["underrun0_w",3]]],[11,"underrun1","","Bit 1 - Result 1 Underrun",7,[[],["underrun1_w",3]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty",7,[[],["empty0_w",3]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty",7,[[],["empty1_w",3]]],[11,"resrdy0","","Bit 4 - Result 0 Ready",7,[[],["resrdy0_w",3]]],[11,"resrdy1","","Bit 5 - Result 1 Ready",7,[[],["resrdy1_w",3]]],[11,"overrun0","","Bit 6 - Result 0 Overrun",7,[[],["overrun0_w",3]]],[11,"overrun1","","Bit 7 - Result 1 Overrun",7,[[],["overrun1_w",3]]],[11,"underrun0","atsamd51g::dac::intflag","Bit 0 - Result 0 Underrun",380,[[],["underrun0_w",3]]],[11,"underrun1","","Bit 1 - Result 1 Underrun",380,[[],["underrun1_w",3]]],[11,"empty0","","Bit 2 - Data Buffer 0 Empty",380,[[],["empty0_w",3]]],[11,"empty1","","Bit 3 - Data Buffer 1 Empty",380,[[],["empty1_w",3]]],[11,"resrdy0","","Bit 4 - Result 0 Ready",380,[[],["resrdy0_w",3]]],[11,"resrdy1","","Bit 5 - Result 1 Ready",380,[[],["resrdy1_w",3]]],[11,"overrun0","","Bit 6 - Result 0 Overrun",380,[[],["overrun0_w",3]]],[11,"overrun1","","Bit 7 - Result 1 Overrun",380,[[],["overrun1_w",3]]],[0,"status","atsamd51g::dac","Status",null,null],[6,"R","atsamd51g::dac::status","Reader of register STATUS",null,null],[6,"READY0_R","","Reader of field `READY0`",null,null],[6,"READY1_R","","Reader of field `READY1`",null,null],[6,"EOC0_R","","Reader of field `EOC0`",null,null],[6,"EOC1_R","","Reader of field `EOC1`",null,null],[11,"ready0","atsamd51g::generic","Bit 0 - DAC 0 Startup Ready",6,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - DAC 1 Startup Ready",6,[[],["ready1_r",6]]],[11,"eoc0","","Bit 2 - DAC 0 End of Conversion",6,[[],["eoc0_r",6]]],[11,"eoc1","","Bit 3 - DAC 1 End of Conversion",6,[[],["eoc1_r",6]]],[11,"ready0","atsamd51g::dac::status","Bit 0 - DAC 0 Startup Ready",381,[[],["ready0_r",6]]],[11,"ready1","","Bit 1 - DAC 1 Startup Ready",381,[[],["ready1_r",6]]],[11,"eoc0","","Bit 2 - DAC 0 End of Conversion",381,[[],["eoc0_r",6]]],[11,"eoc1","","Bit 3 - DAC 1 End of Conversion",381,[[],["eoc1_r",6]]],[0,"syncbusy","atsamd51g::dac","Synchronization Busy",null,null],[6,"R","atsamd51g::dac::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"DATA0_R","","Reader of field `DATA0`",null,null],[6,"DATA1_R","","Reader of field `DATA1`",null,null],[6,"DATABUF0_R","","Reader of field `DATABUF0`",null,null],[6,"DATABUF1_R","","Reader of field `DATABUF1`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - DAC Enable Status",6,[[],["enable_r",6]]],[11,"data0","","Bit 2 - Data DAC 0",6,[[],["data0_r",6]]],[11,"data1","","Bit 3 - Data DAC 1",6,[[],["data1_r",6]]],[11,"databuf0","","Bit 4 - Data Buffer DAC 0",6,[[],["databuf0_r",6]]],[11,"databuf1","","Bit 5 - Data Buffer DAC 1",6,[[],["databuf1_r",6]]],[11,"swrst","atsamd51g::dac::syncbusy","Bit 0 - Software Reset",382,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - DAC Enable Status",382,[[],["enable_r",6]]],[11,"data0","","Bit 2 - Data DAC 0",382,[[],["data0_r",6]]],[11,"data1","","Bit 3 - Data DAC 1",382,[[],["data1_r",6]]],[11,"databuf0","","Bit 4 - Data Buffer DAC 0",382,[[],["databuf0_r",6]]],[11,"databuf1","","Bit 5 - Data Buffer DAC 1",382,[[],["databuf1_r",6]]],[0,"dacctrl","atsamd51g::dac","DAC n Control",null,null],[3,"LEFTADJ_W","atsamd51g::dac::dacctrl","Write proxy for field `LEFTADJ`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"CCTRL_W","","Write proxy for field `CCTRL`",null,null],[3,"FEXT_W","","Write proxy for field `FEXT`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"DITHER_W","","Write proxy for field `DITHER`",null,null],[3,"REFRESH_W","","Write proxy for field `REFRESH`",null,null],[3,"OSR_W","","Write proxy for field `OSR`",null,null],[4,"CCTRL_A","","Current Control",null,null],[13,"CC100K","","0: 100kSPS",383,null],[13,"CC1M","","1: 500kSPS",383,null],[13,"CC12M","","2: 1MSPS",383,null],[4,"REFRESH_A","","Refresh period",null,null],[13,"REFRESH_0","","0: Do not Refresh",384,null],[13,"REFRESH_1","","1: Refresh every 30 us",384,null],[13,"REFRESH_2","","2: Refresh every 60 us",384,null],[13,"REFRESH_3","","3: Refresh every 90 us",384,null],[13,"REFRESH_4","","4: Refresh every 120 us",384,null],[13,"REFRESH_5","","5: Refresh every 150 us",384,null],[13,"REFRESH_6","","6: Refresh every 180 us",384,null],[13,"REFRESH_7","","7: Refresh every 210 us",384,null],[13,"REFRESH_8","","8: Refresh every 240 us",384,null],[13,"REFRESH_9","","9: Refresh every 270 us",384,null],[13,"REFRESH_10","","10: Refresh every 300 us",384,null],[13,"REFRESH_11","","11: Refresh every 330 us",384,null],[13,"REFRESH_12","","12: Refresh every 360 us",384,null],[13,"REFRESH_13","","13: Refresh every 390 us",384,null],[13,"REFRESH_14","","14: Refresh every 420 us",384,null],[13,"REFRESH_15","","15: Refresh every 450 us",384,null],[4,"OSR_A","","Sampling Rate",null,null],[13,"OSR_1","","0: No Over Sampling",385,null],[13,"OSR_2","","1: 2x Over Sampling Ratio",385,null],[13,"OSR_4","","2: 4x Over Sampling Ratio",385,null],[13,"OSR_8","","3: 8x Over Sampling Ratio",385,null],[13,"OSR_16","","4: 16x Over Sampling Ratio",385,null],[13,"OSR_32","","5: 32x Over Sampling Ratio",385,null],[6,"R","","Reader of register DACCTRL[%s]",null,null],[6,"W","","Writer for register DACCTRL[%s]",null,null],[6,"LEFTADJ_R","","Reader of field `LEFTADJ`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CCTRL_R","","Reader of field `CCTRL`",null,null],[6,"FEXT_R","","Reader of field `FEXT`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"REFRESH_R","","Reader of field `REFRESH`",null,null],[6,"OSR_R","","Reader of field `OSR`",null,null],[11,"set_bit","","Sets the field bit",386,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",386,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",386,[[],["w",6]]],[11,"set_bit","","Sets the field bit",387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",387,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cctrl_a",4],["variant",4]]]],[11,"is_cc100k","","Checks if the value of the field is `CC100K`",6,[[]]],[11,"is_cc1m","","Checks if the value of the field is `CC1M`",6,[[]]],[11,"is_cc12m","","Checks if the value of the field is `CC12M`",6,[[]]],[11,"variant","atsamd51g::dac::dacctrl","Get enumerated values variant",388,[[],[["cctrl_a",4],["variant",4]]]],[11,"is_cc100k","","Checks if the value of the field is `CC100K`",388,[[]]],[11,"is_cc1m","","Checks if the value of the field is `CC1M`",388,[[]]],[11,"is_cc12m","","Checks if the value of the field is `CC12M`",388,[[]]],[11,"variant","","Writes `variant` to the field",389,[[["cctrl_a",4]],["w",6]]],[11,"cc100k","","100kSPS",389,[[],["w",6]]],[11,"cc1m","","500kSPS",389,[[],["w",6]]],[11,"cc12m","","1MSPS",389,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",389,[[],["w",6]]],[11,"set_bit","","Sets the field bit",390,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",390,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",390,[[],["w",6]]],[11,"set_bit","","Sets the field bit",391,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",391,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",391,[[],["w",6]]],[11,"set_bit","","Sets the field bit",392,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",392,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",392,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["refresh_a",4]]],[11,"is_refresh_0","","Checks if the value of the field is `REFRESH_0`",6,[[]]],[11,"is_refresh_1","","Checks if the value of the field is `REFRESH_1`",6,[[]]],[11,"is_refresh_2","","Checks if the value of the field is `REFRESH_2`",6,[[]]],[11,"is_refresh_3","","Checks if the value of the field is `REFRESH_3`",6,[[]]],[11,"is_refresh_4","","Checks if the value of the field is `REFRESH_4`",6,[[]]],[11,"is_refresh_5","","Checks if the value of the field is `REFRESH_5`",6,[[]]],[11,"is_refresh_6","","Checks if the value of the field is `REFRESH_6`",6,[[]]],[11,"is_refresh_7","","Checks if the value of the field is `REFRESH_7`",6,[[]]],[11,"is_refresh_8","","Checks if the value of the field is `REFRESH_8`",6,[[]]],[11,"is_refresh_9","","Checks if the value of the field is `REFRESH_9`",6,[[]]],[11,"is_refresh_10","","Checks if the value of the field is `REFRESH_10`",6,[[]]],[11,"is_refresh_11","","Checks if the value of the field is `REFRESH_11`",6,[[]]],[11,"is_refresh_12","","Checks if the value of the field is `REFRESH_12`",6,[[]]],[11,"is_refresh_13","","Checks if the value of the field is `REFRESH_13`",6,[[]]],[11,"is_refresh_14","","Checks if the value of the field is `REFRESH_14`",6,[[]]],[11,"is_refresh_15","","Checks if the value of the field is `REFRESH_15`",6,[[]]],[11,"variant","atsamd51g::dac::dacctrl","Get enumerated values variant",393,[[],["refresh_a",4]]],[11,"is_refresh_0","","Checks if the value of the field is `REFRESH_0`",393,[[]]],[11,"is_refresh_1","","Checks if the value of the field is `REFRESH_1`",393,[[]]],[11,"is_refresh_2","","Checks if the value of the field is `REFRESH_2`",393,[[]]],[11,"is_refresh_3","","Checks if the value of the field is `REFRESH_3`",393,[[]]],[11,"is_refresh_4","","Checks if the value of the field is `REFRESH_4`",393,[[]]],[11,"is_refresh_5","","Checks if the value of the field is `REFRESH_5`",393,[[]]],[11,"is_refresh_6","","Checks if the value of the field is `REFRESH_6`",393,[[]]],[11,"is_refresh_7","","Checks if the value of the field is `REFRESH_7`",393,[[]]],[11,"is_refresh_8","","Checks if the value of the field is `REFRESH_8`",393,[[]]],[11,"is_refresh_9","","Checks if the value of the field is `REFRESH_9`",393,[[]]],[11,"is_refresh_10","","Checks if the value of the field is `REFRESH_10`",393,[[]]],[11,"is_refresh_11","","Checks if the value of the field is `REFRESH_11`",393,[[]]],[11,"is_refresh_12","","Checks if the value of the field is `REFRESH_12`",393,[[]]],[11,"is_refresh_13","","Checks if the value of the field is `REFRESH_13`",393,[[]]],[11,"is_refresh_14","","Checks if the value of the field is `REFRESH_14`",393,[[]]],[11,"is_refresh_15","","Checks if the value of the field is `REFRESH_15`",393,[[]]],[11,"variant","","Writes `variant` to the field",394,[[["refresh_a",4]],["w",6]]],[11,"refresh_0","","Do not Refresh",394,[[],["w",6]]],[11,"refresh_1","","Refresh every 30 us",394,[[],["w",6]]],[11,"refresh_2","","Refresh every 60 us",394,[[],["w",6]]],[11,"refresh_3","","Refresh every 90 us",394,[[],["w",6]]],[11,"refresh_4","","Refresh every 120 us",394,[[],["w",6]]],[11,"refresh_5","","Refresh every 150 us",394,[[],["w",6]]],[11,"refresh_6","","Refresh every 180 us",394,[[],["w",6]]],[11,"refresh_7","","Refresh every 210 us",394,[[],["w",6]]],[11,"refresh_8","","Refresh every 240 us",394,[[],["w",6]]],[11,"refresh_9","","Refresh every 270 us",394,[[],["w",6]]],[11,"refresh_10","","Refresh every 300 us",394,[[],["w",6]]],[11,"refresh_11","","Refresh every 330 us",394,[[],["w",6]]],[11,"refresh_12","","Refresh every 360 us",394,[[],["w",6]]],[11,"refresh_13","","Refresh every 390 us",394,[[],["w",6]]],[11,"refresh_14","","Refresh every 420 us",394,[[],["w",6]]],[11,"refresh_15","","Refresh every 450 us",394,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",394,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["osr_a",4],["variant",4]]]],[11,"is_osr_1","","Checks if the value of the field is `OSR_1`",6,[[]]],[11,"is_osr_2","","Checks if the value of the field is `OSR_2`",6,[[]]],[11,"is_osr_4","","Checks if the value of the field is `OSR_4`",6,[[]]],[11,"is_osr_8","","Checks if the value of the field is `OSR_8`",6,[[]]],[11,"is_osr_16","","Checks if the value of the field is `OSR_16`",6,[[]]],[11,"is_osr_32","","Checks if the value of the field is `OSR_32`",6,[[]]],[11,"variant","atsamd51g::dac::dacctrl","Get enumerated values variant",395,[[],[["osr_a",4],["variant",4]]]],[11,"is_osr_1","","Checks if the value of the field is `OSR_1`",395,[[]]],[11,"is_osr_2","","Checks if the value of the field is `OSR_2`",395,[[]]],[11,"is_osr_4","","Checks if the value of the field is `OSR_4`",395,[[]]],[11,"is_osr_8","","Checks if the value of the field is `OSR_8`",395,[[]]],[11,"is_osr_16","","Checks if the value of the field is `OSR_16`",395,[[]]],[11,"is_osr_32","","Checks if the value of the field is `OSR_32`",395,[[]]],[11,"variant","","Writes `variant` to the field",396,[[["osr_a",4]],["w",6]]],[11,"osr_1","","No Over Sampling",396,[[],["w",6]]],[11,"osr_2","","2x Over Sampling Ratio",396,[[],["w",6]]],[11,"osr_4","","4x Over Sampling Ratio",396,[[],["w",6]]],[11,"osr_8","","8x Over Sampling Ratio",396,[[],["w",6]]],[11,"osr_16","","16x Over Sampling Ratio",396,[[],["w",6]]],[11,"osr_32","","32x Over Sampling Ratio",396,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",396,[[],["w",6]]],[11,"leftadj","atsamd51g::generic","Bit 0 - Left Adjusted Data",6,[[],["leftadj_r",6]]],[11,"enable","","Bit 1 - Enable DAC0",6,[[],["enable_r",6]]],[11,"cctrl","","Bits 2:3 - Current Control",6,[[],["cctrl_r",6]]],[11,"fext","","Bit 5 - Standalone Filter",6,[[],["fext_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"dither","","Bit 7 - Dithering Mode",6,[[],["dither_r",6]]],[11,"refresh","","Bits 8:11 - Refresh period",6,[[],["refresh_r",6]]],[11,"osr","","Bits 13:15 - Sampling Rate",6,[[],["osr_r",6]]],[11,"leftadj","atsamd51g::dac::dacctrl","Bit 0 - Left Adjusted Data",397,[[],["leftadj_r",6]]],[11,"enable","","Bit 1 - Enable DAC0",397,[[],["enable_r",6]]],[11,"cctrl","","Bits 2:3 - Current Control",397,[[],["cctrl_r",6]]],[11,"fext","","Bit 5 - Standalone Filter",397,[[],["fext_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",397,[[],["runstdby_r",6]]],[11,"dither","","Bit 7 - Dithering Mode",397,[[],["dither_r",6]]],[11,"refresh","","Bits 8:11 - Refresh period",397,[[],["refresh_r",6]]],[11,"osr","","Bits 13:15 - Sampling Rate",397,[[],["osr_r",6]]],[11,"leftadj","atsamd51g::generic","Bit 0 - Left Adjusted Data",7,[[],["leftadj_w",3]]],[11,"enable","","Bit 1 - Enable DAC0",7,[[],["enable_w",3]]],[11,"cctrl","","Bits 2:3 - Current Control",7,[[],["cctrl_w",3]]],[11,"fext","","Bit 5 - Standalone Filter",7,[[],["fext_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"dither","","Bit 7 - Dithering Mode",7,[[],["dither_w",3]]],[11,"refresh","","Bits 8:11 - Refresh period",7,[[],["refresh_w",3]]],[11,"osr","","Bits 13:15 - Sampling Rate",7,[[],["osr_w",3]]],[11,"leftadj","atsamd51g::dac::dacctrl","Bit 0 - Left Adjusted Data",398,[[],["leftadj_w",3]]],[11,"enable","","Bit 1 - Enable DAC0",398,[[],["enable_w",3]]],[11,"cctrl","","Bits 2:3 - Current Control",398,[[],["cctrl_w",3]]],[11,"fext","","Bit 5 - Standalone Filter",398,[[],["fext_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",398,[[],["runstdby_w",3]]],[11,"dither","","Bit 7 - Dithering Mode",398,[[],["dither_w",3]]],[11,"refresh","","Bits 8:11 - Refresh period",398,[[],["refresh_w",3]]],[11,"osr","","Bits 13:15 - Sampling Rate",398,[[],["osr_w",3]]],[0,"data","atsamd51g::dac","DAC n Data",null,null],[3,"DATA_W","atsamd51g::dac::data","Write proxy for field `DATA`",null,null],[6,"W","","Writer for register DATA[%s]",null,null],[11,"bits","","Writes raw bits to the field",399,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:15 - DAC0 Data",7,[[],["data_w",3]]],[11,"data","atsamd51g::dac::data","Bits 0:15 - DAC0 Data",400,[[],["data_w",3]]],[0,"databuf","atsamd51g::dac","DAC n Data Buffer",null,null],[3,"DATABUF_W","atsamd51g::dac::databuf","Write proxy for field `DATABUF`",null,null],[6,"W","","Writer for register DATABUF[%s]",null,null],[11,"bits","","Writes raw bits to the field",401,[[],["w",6]]],[11,"databuf","atsamd51g::generic","Bits 0:15 - DAC0 Data Buffer",7,[[],["databuf_w",3]]],[11,"databuf","atsamd51g::dac::databuf","Bits 0:15 - DAC0 Data Buffer",402,[[],["databuf_w",3]]],[0,"dbgctrl","atsamd51g::dac","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::dac::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",403,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",403,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",403,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::dac::dbgctrl","Bit 0 - Debug Run",404,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::dac::dbgctrl","Bit 0 - Debug Run",405,[[],["dbgrun_w",3]]],[0,"result","atsamd51g::dac","Filter Result",null,null],[6,"R","atsamd51g::dac::result","Reader of register RESULT[%s]",null,null],[6,"RESULT_R","","Reader of field `RESULT`",null,null],[11,"result","atsamd51g::generic","Bits 0:15 - Filter Result",6,[[],["result_r",6]]],[11,"result","atsamd51g::dac::result","Bits 0:15 - Filter Result",406,[[],["result_r",6]]],[6,"CTRLA","atsamd51g::dac","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"DACCTRL","","DAC n Control",null,null],[6,"DATA","","DAC n Data",null,null],[6,"DATABUF","","DAC n Data Buffer",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"RESULT","","Filter Result",null,null],[0,"dmac","atsamd51g","Direct Memory Access Controller",null,null],[3,"RegisterBlock","atsamd51g::dmac","Register block",null,null],[12,"ctrl","","0x00 - Control",407,null],[12,"crcctrl","","0x02 - CRC Control",407,null],[12,"crcdatain","","0x04 - CRC Data Input",407,null],[12,"crcchksum","","0x08 - CRC Checksum",407,null],[12,"crcstatus","","0x0c - CRC Status",407,null],[12,"dbgctrl","","0x0d - Debug Control",407,null],[12,"swtrigctrl","","0x10 - Software Trigger Control",407,null],[12,"prictrl0","","0x14 - Priority Control 0",407,null],[12,"intpend","","0x20 - Interrupt Pending",407,null],[12,"intstatus","","0x24 - Interrupt Status",407,null],[12,"busych","","0x28 - Busy Channels",407,null],[12,"pendch","","0x2c - Pending Channels",407,null],[12,"active","","0x30 - Active Channel and Levels",407,null],[12,"baseaddr","","0x34 - Descriptor Memory Section Base Address",407,null],[12,"wrbaddr","","0x38 - Write-Back Memory Section Base Address",407,null],[12,"channel","","0x40 - CHANNEL[%s]",407,null],[3,"CHANNEL","","Register block",null,null],[12,"chctrla","","0x00 - Channel n Control A",408,null],[12,"chctrlb","","0x04 - Channel n Control B",408,null],[12,"chprilvl","","0x05 - Channel n Priority Level",408,null],[12,"chevctrl","","0x06 - Channel n Event Control",408,null],[12,"chintenclr","","0x0c - Channel n Interrupt Enable Clear",408,null],[12,"chintenset","","0x0d - Channel n Interrupt Enable Set",408,null],[12,"chintflag","","0x0e - Channel n Interrupt Flag Status and Clear",408,null],[12,"chstatus","","0x0f - Channel n Status",408,null],[0,"channel","","Register block CHANNEL[%s]",null,null],[0,"chctrla","atsamd51g::dmac::channel","Channel n Control A",null,null],[3,"SWRST_W","atsamd51g::dmac::channel::chctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"TRIGSRC_W","","Write proxy for field `TRIGSRC`",null,null],[3,"TRIGACT_W","","Write proxy for field `TRIGACT`",null,null],[3,"BURSTLEN_W","","Write proxy for field `BURSTLEN`",null,null],[3,"THRESHOLD_W","","Write proxy for field `THRESHOLD`",null,null],[4,"TRIGSRC_A","","Trigger Source",null,null],[13,"DISABLE","","0: Only software/event triggers",409,null],[13,"RTC_TIMESTAMP","","1: DMA RTC timestamp trigger",409,null],[13,"DSU_DCC0","","2: DMAC ID for DCC0 register",409,null],[13,"DSU_DCC1","","3: DMAC ID for DCC1 register",409,null],[13,"SERCOM0_RX","","4: Index of DMA RX trigger",409,null],[13,"SERCOM0_TX","","5: Index of DMA TX trigger",409,null],[13,"SERCOM1_RX","","6: Index of DMA RX trigger",409,null],[13,"SERCOM1_TX","","7: Index of DMA TX trigger",409,null],[13,"SERCOM2_RX","","8: Index of DMA RX trigger",409,null],[13,"SERCOM2_TX","","9: Index of DMA TX trigger",409,null],[13,"SERCOM3_RX","","10: Index of DMA RX trigger",409,null],[13,"SERCOM3_TX","","11: Index of DMA TX trigger",409,null],[13,"SERCOM4_RX","","12: Index of DMA RX trigger",409,null],[13,"SERCOM4_TX","","13: Index of DMA TX trigger",409,null],[13,"SERCOM5_RX","","14: Index of DMA RX trigger",409,null],[13,"SERCOM5_TX","","15: Index of DMA TX trigger",409,null],[13,"SERCOM6_RX","","16: Index of DMA RX trigger",409,null],[13,"SERCOM6_TX","","17: Index of DMA TX trigger",409,null],[13,"SERCOM7_RX","","18: Index of DMA RX trigger",409,null],[13,"SERCOM7_TX","","19: Index of DMA TX trigger",409,null],[13,"CAN0_DEBUG","","20: DMA CAN Debug Req",409,null],[13,"CAN1_DEBUG","","21: DMA CAN Debug Req",409,null],[13,"TCC0_OVF","","22: DMA overflow/underflow/retrigger trigger",409,null],[13,"TCC0_MC_0","","23: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC0_MC_1","","24: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC0_MC_2","","25: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC0_MC_3","","26: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC0_MC_4","","27: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC0_MC_5","","28: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC1_OVF","","29: DMA overflow/underflow/retrigger trigger",409,null],[13,"TCC1_MC_0","","30: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC1_MC_1","","31: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC1_MC_2","","32: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC1_MC_3","","33: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC2_OVF","","34: DMA overflow/underflow/retrigger trigger",409,null],[13,"TCC2_MC_0","","35: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC2_MC_1","","36: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC2_MC_2","","37: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC3_OVF","","38: DMA overflow/underflow/retrigger trigger",409,null],[13,"TCC3_MC_0","","39: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC3_MC_1","","40: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC4_OVF","","41: DMA overflow/underflow/retrigger trigger",409,null],[13,"TCC4_MC_0","","42: Indexes of DMA Match/Compare triggers",409,null],[13,"TCC4_MC_1","","43: Indexes of DMA Match/Compare triggers",409,null],[13,"TC0_OVF","","44: Indexes of DMA Overflow trigger",409,null],[13,"TC0_MC_0","","45: Indexes of DMA Match/Compare triggers",409,null],[13,"TC0_MC_1","","46: Indexes of DMA Match/Compare triggers",409,null],[13,"TC1_OVF","","47: Indexes of DMA Overflow trigger",409,null],[13,"TC1_MC_0","","48: Indexes of DMA Match/Compare triggers",409,null],[13,"TC1_MC_1","","49: Indexes of DMA Match/Compare triggers",409,null],[13,"TC2_OVF","","50: Indexes of DMA Overflow trigger",409,null],[13,"TC2_MC_0","","51: Indexes of DMA Match/Compare triggers",409,null],[13,"TC2_MC_1","","52: Indexes of DMA Match/Compare triggers",409,null],[13,"TC3_OVF","","53: Indexes of DMA Overflow trigger",409,null],[13,"TC3_MC_0","","54: Indexes of DMA Match/Compare triggers",409,null],[13,"TC3_MC_1","","55: Indexes of DMA Match/Compare triggers",409,null],[13,"TC4_OVF","","56: Indexes of DMA Overflow trigger",409,null],[13,"TC4_MC_0","","57: Indexes of DMA Match/Compare triggers",409,null],[13,"TC4_MC_1","","58: Indexes of DMA Match/Compare triggers",409,null],[13,"TC5_OVF","","59: Indexes of DMA Overflow trigger",409,null],[13,"TC5_MC_0","","60: Indexes of DMA Match/Compare triggers",409,null],[13,"TC5_MC_1","","61: Indexes of DMA Match/Compare triggers",409,null],[13,"TC6_OVF","","62: Indexes of DMA Overflow trigger",409,null],[13,"TC6_MC_0","","63: Indexes of DMA Match/Compare triggers",409,null],[13,"TC6_MC_1","","64: Indexes of DMA Match/Compare triggers",409,null],[13,"TC7_OVF","","65: Indexes of DMA Overflow trigger",409,null],[13,"TC7_MC_0","","66: Indexes of DMA Match/Compare triggers",409,null],[13,"TC7_MC_1","","67: Indexes of DMA Match/Compare triggers",409,null],[13,"ADC0_RESRDY","","68: index of DMA RESRDY trigger",409,null],[13,"ADC0_SEQ","","69: Index of DMA SEQ trigger",409,null],[13,"ADC1_RESRDY","","70: Index of DMA RESRDY trigger",409,null],[13,"ADC1_SEQ","","71: Index of DMA SEQ trigger",409,null],[13,"DAC_EMPTY_0","","72: DMA DAC Empty Req",409,null],[13,"DAC_EMPTY_1","","73: DMA DAC Empty Req",409,null],[13,"DAC_RESRDY_0","","74: DMA DAC Result Ready Req",409,null],[13,"DAC_RESRDY_1","","75: DMA DAC Result Ready Req",409,null],[13,"I2S_RX_0","","76: Indexes of DMA RX triggers",409,null],[13,"I2S_RX_1","","77: Indexes of DMA RX triggers",409,null],[13,"I2S_TX_0","","78: Indexes of DMA TX triggers",409,null],[13,"I2S_TX_1","","79: Indexes of DMA TX triggers",409,null],[13,"PCC_RX","","80: Indexes of PCC RX trigger",409,null],[13,"AES_WR","","81: DMA DATA Write trigger",409,null],[13,"AES_RD","","82: DMA DATA Read trigger",409,null],[13,"QSPI_RX","","83: Indexes of QSPI RX trigger",409,null],[13,"QSPI_TX","","84: Indexes of QSPI TX trigger",409,null],[4,"TRIGACT_A","","Trigger Action",null,null],[13,"BLOCK","","0: One trigger required for each block transfer",410,null],[13,"BURST","","2: One trigger required for each burst transfer",410,null],[13,"TRANSACTION","","3: One trigger required for each transaction",410,null],[4,"BURSTLEN_A","","Burst Length",null,null],[13,"SINGLE","","0: Single-beat burst length",411,null],[13,"_2BEAT","","1: 2-beats burst length",411,null],[13,"_3BEAT","","2: 3-beats burst length",411,null],[13,"_4BEAT","","3: 4-beats burst length",411,null],[13,"_5BEAT","","4: 5-beats burst length",411,null],[13,"_6BEAT","","5: 6-beats burst length",411,null],[13,"_7BEAT","","6: 7-beats burst length",411,null],[13,"_8BEAT","","7: 8-beats burst length",411,null],[13,"_9BEAT","","8: 9-beats burst length",411,null],[13,"_10BEAT","","9: 10-beats burst length",411,null],[13,"_11BEAT","","10: 11-beats burst length",411,null],[13,"_12BEAT","","11: 12-beats burst length",411,null],[13,"_13BEAT","","12: 13-beats burst length",411,null],[13,"_14BEAT","","13: 14-beats burst length",411,null],[13,"_15BEAT","","14: 15-beats burst length",411,null],[13,"_16BEAT","","15: 16-beats burst length",411,null],[4,"THRESHOLD_A","","FIFO Threshold",null,null],[13,"_1BEAT","","0: Destination write starts after each beat source address…",412,null],[13,"_2BEATS","","1: Destination write starts after 2-beats source address…",412,null],[13,"_4BEATS","","2: Destination write starts after 4-beats source address…",412,null],[13,"_8BEATS","","3: Destination write starts after 8-beats source address…",412,null],[6,"R","","Reader of register CHCTRLA",null,null],[6,"W","","Writer for register CHCTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"TRIGSRC_R","","Reader of field `TRIGSRC`",null,null],[6,"TRIGACT_R","","Reader of field `TRIGACT`",null,null],[6,"BURSTLEN_R","","Reader of field `BURSTLEN`",null,null],[6,"THRESHOLD_R","","Reader of field `THRESHOLD`",null,null],[11,"set_bit","","Sets the field bit",413,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",413,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",413,[[],["w",6]]],[11,"set_bit","","Sets the field bit",414,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",414,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",414,[[],["w",6]]],[11,"set_bit","","Sets the field bit",415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",415,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["trigsrc_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_rtc_timestamp","","Checks if the value of the field is `RTC_TIMESTAMP`",6,[[]]],[11,"is_dsu_dcc0","","Checks if the value of the field is `DSU_DCC0`",6,[[]]],[11,"is_dsu_dcc1","","Checks if the value of the field is `DSU_DCC1`",6,[[]]],[11,"is_sercom0_rx","","Checks if the value of the field is `SERCOM0_RX`",6,[[]]],[11,"is_sercom0_tx","","Checks if the value of the field is `SERCOM0_TX`",6,[[]]],[11,"is_sercom1_rx","","Checks if the value of the field is `SERCOM1_RX`",6,[[]]],[11,"is_sercom1_tx","","Checks if the value of the field is `SERCOM1_TX`",6,[[]]],[11,"is_sercom2_rx","","Checks if the value of the field is `SERCOM2_RX`",6,[[]]],[11,"is_sercom2_tx","","Checks if the value of the field is `SERCOM2_TX`",6,[[]]],[11,"is_sercom3_rx","","Checks if the value of the field is `SERCOM3_RX`",6,[[]]],[11,"is_sercom3_tx","","Checks if the value of the field is `SERCOM3_TX`",6,[[]]],[11,"is_sercom4_rx","","Checks if the value of the field is `SERCOM4_RX`",6,[[]]],[11,"is_sercom4_tx","","Checks if the value of the field is `SERCOM4_TX`",6,[[]]],[11,"is_sercom5_rx","","Checks if the value of the field is `SERCOM5_RX`",6,[[]]],[11,"is_sercom5_tx","","Checks if the value of the field is `SERCOM5_TX`",6,[[]]],[11,"is_sercom6_rx","","Checks if the value of the field is `SERCOM6_RX`",6,[[]]],[11,"is_sercom6_tx","","Checks if the value of the field is `SERCOM6_TX`",6,[[]]],[11,"is_sercom7_rx","","Checks if the value of the field is `SERCOM7_RX`",6,[[]]],[11,"is_sercom7_tx","","Checks if the value of the field is `SERCOM7_TX`",6,[[]]],[11,"is_can0_debug","","Checks if the value of the field is `CAN0_DEBUG`",6,[[]]],[11,"is_can1_debug","","Checks if the value of the field is `CAN1_DEBUG`",6,[[]]],[11,"is_tcc0_ovf","","Checks if the value of the field is `TCC0_OVF`",6,[[]]],[11,"is_tcc0_mc_0","","Checks if the value of the field is `TCC0_MC_0`",6,[[]]],[11,"is_tcc0_mc_1","","Checks if the value of the field is `TCC0_MC_1`",6,[[]]],[11,"is_tcc0_mc_2","","Checks if the value of the field is `TCC0_MC_2`",6,[[]]],[11,"is_tcc0_mc_3","","Checks if the value of the field is `TCC0_MC_3`",6,[[]]],[11,"is_tcc0_mc_4","","Checks if the value of the field is `TCC0_MC_4`",6,[[]]],[11,"is_tcc0_mc_5","","Checks if the value of the field is `TCC0_MC_5`",6,[[]]],[11,"is_tcc1_ovf","","Checks if the value of the field is `TCC1_OVF`",6,[[]]],[11,"is_tcc1_mc_0","","Checks if the value of the field is `TCC1_MC_0`",6,[[]]],[11,"is_tcc1_mc_1","","Checks if the value of the field is `TCC1_MC_1`",6,[[]]],[11,"is_tcc1_mc_2","","Checks if the value of the field is `TCC1_MC_2`",6,[[]]],[11,"is_tcc1_mc_3","","Checks if the value of the field is `TCC1_MC_3`",6,[[]]],[11,"is_tcc2_ovf","","Checks if the value of the field is `TCC2_OVF`",6,[[]]],[11,"is_tcc2_mc_0","","Checks if the value of the field is `TCC2_MC_0`",6,[[]]],[11,"is_tcc2_mc_1","","Checks if the value of the field is `TCC2_MC_1`",6,[[]]],[11,"is_tcc2_mc_2","","Checks if the value of the field is `TCC2_MC_2`",6,[[]]],[11,"is_tcc3_ovf","","Checks if the value of the field is `TCC3_OVF`",6,[[]]],[11,"is_tcc3_mc_0","","Checks if the value of the field is `TCC3_MC_0`",6,[[]]],[11,"is_tcc3_mc_1","","Checks if the value of the field is `TCC3_MC_1`",6,[[]]],[11,"is_tcc4_ovf","","Checks if the value of the field is `TCC4_OVF`",6,[[]]],[11,"is_tcc4_mc_0","","Checks if the value of the field is `TCC4_MC_0`",6,[[]]],[11,"is_tcc4_mc_1","","Checks if the value of the field is `TCC4_MC_1`",6,[[]]],[11,"is_tc0_ovf","","Checks if the value of the field is `TC0_OVF`",6,[[]]],[11,"is_tc0_mc_0","","Checks if the value of the field is `TC0_MC_0`",6,[[]]],[11,"is_tc0_mc_1","","Checks if the value of the field is `TC0_MC_1`",6,[[]]],[11,"is_tc1_ovf","","Checks if the value of the field is `TC1_OVF`",6,[[]]],[11,"is_tc1_mc_0","","Checks if the value of the field is `TC1_MC_0`",6,[[]]],[11,"is_tc1_mc_1","","Checks if the value of the field is `TC1_MC_1`",6,[[]]],[11,"is_tc2_ovf","","Checks if the value of the field is `TC2_OVF`",6,[[]]],[11,"is_tc2_mc_0","","Checks if the value of the field is `TC2_MC_0`",6,[[]]],[11,"is_tc2_mc_1","","Checks if the value of the field is `TC2_MC_1`",6,[[]]],[11,"is_tc3_ovf","","Checks if the value of the field is `TC3_OVF`",6,[[]]],[11,"is_tc3_mc_0","","Checks if the value of the field is `TC3_MC_0`",6,[[]]],[11,"is_tc3_mc_1","","Checks if the value of the field is `TC3_MC_1`",6,[[]]],[11,"is_tc4_ovf","","Checks if the value of the field is `TC4_OVF`",6,[[]]],[11,"is_tc4_mc_0","","Checks if the value of the field is `TC4_MC_0`",6,[[]]],[11,"is_tc4_mc_1","","Checks if the value of the field is `TC4_MC_1`",6,[[]]],[11,"is_tc5_ovf","","Checks if the value of the field is `TC5_OVF`",6,[[]]],[11,"is_tc5_mc_0","","Checks if the value of the field is `TC5_MC_0`",6,[[]]],[11,"is_tc5_mc_1","","Checks if the value of the field is `TC5_MC_1`",6,[[]]],[11,"is_tc6_ovf","","Checks if the value of the field is `TC6_OVF`",6,[[]]],[11,"is_tc6_mc_0","","Checks if the value of the field is `TC6_MC_0`",6,[[]]],[11,"is_tc6_mc_1","","Checks if the value of the field is `TC6_MC_1`",6,[[]]],[11,"is_tc7_ovf","","Checks if the value of the field is `TC7_OVF`",6,[[]]],[11,"is_tc7_mc_0","","Checks if the value of the field is `TC7_MC_0`",6,[[]]],[11,"is_tc7_mc_1","","Checks if the value of the field is `TC7_MC_1`",6,[[]]],[11,"is_adc0_resrdy","","Checks if the value of the field is `ADC0_RESRDY`",6,[[]]],[11,"is_adc0_seq","","Checks if the value of the field is `ADC0_SEQ`",6,[[]]],[11,"is_adc1_resrdy","","Checks if the value of the field is `ADC1_RESRDY`",6,[[]]],[11,"is_adc1_seq","","Checks if the value of the field is `ADC1_SEQ`",6,[[]]],[11,"is_dac_empty_0","","Checks if the value of the field is `DAC_EMPTY_0`",6,[[]]],[11,"is_dac_empty_1","","Checks if the value of the field is `DAC_EMPTY_1`",6,[[]]],[11,"is_dac_resrdy_0","","Checks if the value of the field is `DAC_RESRDY_0`",6,[[]]],[11,"is_dac_resrdy_1","","Checks if the value of the field is `DAC_RESRDY_1`",6,[[]]],[11,"is_i2s_rx_0","","Checks if the value of the field is `I2S_RX_0`",6,[[]]],[11,"is_i2s_rx_1","","Checks if the value of the field is `I2S_RX_1`",6,[[]]],[11,"is_i2s_tx_0","","Checks if the value of the field is `I2S_TX_0`",6,[[]]],[11,"is_i2s_tx_1","","Checks if the value of the field is `I2S_TX_1`",6,[[]]],[11,"is_pcc_rx","","Checks if the value of the field is `PCC_RX`",6,[[]]],[11,"is_aes_wr","","Checks if the value of the field is `AES_WR`",6,[[]]],[11,"is_aes_rd","","Checks if the value of the field is `AES_RD`",6,[[]]],[11,"is_qspi_rx","","Checks if the value of the field is `QSPI_RX`",6,[[]]],[11,"is_qspi_tx","","Checks if the value of the field is `QSPI_TX`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chctrla","Get enumerated values variant",416,[[],[["variant",4],["trigsrc_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",416,[[]]],[11,"is_rtc_timestamp","","Checks if the value of the field is `RTC_TIMESTAMP`",416,[[]]],[11,"is_dsu_dcc0","","Checks if the value of the field is `DSU_DCC0`",416,[[]]],[11,"is_dsu_dcc1","","Checks if the value of the field is `DSU_DCC1`",416,[[]]],[11,"is_sercom0_rx","","Checks if the value of the field is `SERCOM0_RX`",416,[[]]],[11,"is_sercom0_tx","","Checks if the value of the field is `SERCOM0_TX`",416,[[]]],[11,"is_sercom1_rx","","Checks if the value of the field is `SERCOM1_RX`",416,[[]]],[11,"is_sercom1_tx","","Checks if the value of the field is `SERCOM1_TX`",416,[[]]],[11,"is_sercom2_rx","","Checks if the value of the field is `SERCOM2_RX`",416,[[]]],[11,"is_sercom2_tx","","Checks if the value of the field is `SERCOM2_TX`",416,[[]]],[11,"is_sercom3_rx","","Checks if the value of the field is `SERCOM3_RX`",416,[[]]],[11,"is_sercom3_tx","","Checks if the value of the field is `SERCOM3_TX`",416,[[]]],[11,"is_sercom4_rx","","Checks if the value of the field is `SERCOM4_RX`",416,[[]]],[11,"is_sercom4_tx","","Checks if the value of the field is `SERCOM4_TX`",416,[[]]],[11,"is_sercom5_rx","","Checks if the value of the field is `SERCOM5_RX`",416,[[]]],[11,"is_sercom5_tx","","Checks if the value of the field is `SERCOM5_TX`",416,[[]]],[11,"is_sercom6_rx","","Checks if the value of the field is `SERCOM6_RX`",416,[[]]],[11,"is_sercom6_tx","","Checks if the value of the field is `SERCOM6_TX`",416,[[]]],[11,"is_sercom7_rx","","Checks if the value of the field is `SERCOM7_RX`",416,[[]]],[11,"is_sercom7_tx","","Checks if the value of the field is `SERCOM7_TX`",416,[[]]],[11,"is_can0_debug","","Checks if the value of the field is `CAN0_DEBUG`",416,[[]]],[11,"is_can1_debug","","Checks if the value of the field is `CAN1_DEBUG`",416,[[]]],[11,"is_tcc0_ovf","","Checks if the value of the field is `TCC0_OVF`",416,[[]]],[11,"is_tcc0_mc_0","","Checks if the value of the field is `TCC0_MC_0`",416,[[]]],[11,"is_tcc0_mc_1","","Checks if the value of the field is `TCC0_MC_1`",416,[[]]],[11,"is_tcc0_mc_2","","Checks if the value of the field is `TCC0_MC_2`",416,[[]]],[11,"is_tcc0_mc_3","","Checks if the value of the field is `TCC0_MC_3`",416,[[]]],[11,"is_tcc0_mc_4","","Checks if the value of the field is `TCC0_MC_4`",416,[[]]],[11,"is_tcc0_mc_5","","Checks if the value of the field is `TCC0_MC_5`",416,[[]]],[11,"is_tcc1_ovf","","Checks if the value of the field is `TCC1_OVF`",416,[[]]],[11,"is_tcc1_mc_0","","Checks if the value of the field is `TCC1_MC_0`",416,[[]]],[11,"is_tcc1_mc_1","","Checks if the value of the field is `TCC1_MC_1`",416,[[]]],[11,"is_tcc1_mc_2","","Checks if the value of the field is `TCC1_MC_2`",416,[[]]],[11,"is_tcc1_mc_3","","Checks if the value of the field is `TCC1_MC_3`",416,[[]]],[11,"is_tcc2_ovf","","Checks if the value of the field is `TCC2_OVF`",416,[[]]],[11,"is_tcc2_mc_0","","Checks if the value of the field is `TCC2_MC_0`",416,[[]]],[11,"is_tcc2_mc_1","","Checks if the value of the field is `TCC2_MC_1`",416,[[]]],[11,"is_tcc2_mc_2","","Checks if the value of the field is `TCC2_MC_2`",416,[[]]],[11,"is_tcc3_ovf","","Checks if the value of the field is `TCC3_OVF`",416,[[]]],[11,"is_tcc3_mc_0","","Checks if the value of the field is `TCC3_MC_0`",416,[[]]],[11,"is_tcc3_mc_1","","Checks if the value of the field is `TCC3_MC_1`",416,[[]]],[11,"is_tcc4_ovf","","Checks if the value of the field is `TCC4_OVF`",416,[[]]],[11,"is_tcc4_mc_0","","Checks if the value of the field is `TCC4_MC_0`",416,[[]]],[11,"is_tcc4_mc_1","","Checks if the value of the field is `TCC4_MC_1`",416,[[]]],[11,"is_tc0_ovf","","Checks if the value of the field is `TC0_OVF`",416,[[]]],[11,"is_tc0_mc_0","","Checks if the value of the field is `TC0_MC_0`",416,[[]]],[11,"is_tc0_mc_1","","Checks if the value of the field is `TC0_MC_1`",416,[[]]],[11,"is_tc1_ovf","","Checks if the value of the field is `TC1_OVF`",416,[[]]],[11,"is_tc1_mc_0","","Checks if the value of the field is `TC1_MC_0`",416,[[]]],[11,"is_tc1_mc_1","","Checks if the value of the field is `TC1_MC_1`",416,[[]]],[11,"is_tc2_ovf","","Checks if the value of the field is `TC2_OVF`",416,[[]]],[11,"is_tc2_mc_0","","Checks if the value of the field is `TC2_MC_0`",416,[[]]],[11,"is_tc2_mc_1","","Checks if the value of the field is `TC2_MC_1`",416,[[]]],[11,"is_tc3_ovf","","Checks if the value of the field is `TC3_OVF`",416,[[]]],[11,"is_tc3_mc_0","","Checks if the value of the field is `TC3_MC_0`",416,[[]]],[11,"is_tc3_mc_1","","Checks if the value of the field is `TC3_MC_1`",416,[[]]],[11,"is_tc4_ovf","","Checks if the value of the field is `TC4_OVF`",416,[[]]],[11,"is_tc4_mc_0","","Checks if the value of the field is `TC4_MC_0`",416,[[]]],[11,"is_tc4_mc_1","","Checks if the value of the field is `TC4_MC_1`",416,[[]]],[11,"is_tc5_ovf","","Checks if the value of the field is `TC5_OVF`",416,[[]]],[11,"is_tc5_mc_0","","Checks if the value of the field is `TC5_MC_0`",416,[[]]],[11,"is_tc5_mc_1","","Checks if the value of the field is `TC5_MC_1`",416,[[]]],[11,"is_tc6_ovf","","Checks if the value of the field is `TC6_OVF`",416,[[]]],[11,"is_tc6_mc_0","","Checks if the value of the field is `TC6_MC_0`",416,[[]]],[11,"is_tc6_mc_1","","Checks if the value of the field is `TC6_MC_1`",416,[[]]],[11,"is_tc7_ovf","","Checks if the value of the field is `TC7_OVF`",416,[[]]],[11,"is_tc7_mc_0","","Checks if the value of the field is `TC7_MC_0`",416,[[]]],[11,"is_tc7_mc_1","","Checks if the value of the field is `TC7_MC_1`",416,[[]]],[11,"is_adc0_resrdy","","Checks if the value of the field is `ADC0_RESRDY`",416,[[]]],[11,"is_adc0_seq","","Checks if the value of the field is `ADC0_SEQ`",416,[[]]],[11,"is_adc1_resrdy","","Checks if the value of the field is `ADC1_RESRDY`",416,[[]]],[11,"is_adc1_seq","","Checks if the value of the field is `ADC1_SEQ`",416,[[]]],[11,"is_dac_empty_0","","Checks if the value of the field is `DAC_EMPTY_0`",416,[[]]],[11,"is_dac_empty_1","","Checks if the value of the field is `DAC_EMPTY_1`",416,[[]]],[11,"is_dac_resrdy_0","","Checks if the value of the field is `DAC_RESRDY_0`",416,[[]]],[11,"is_dac_resrdy_1","","Checks if the value of the field is `DAC_RESRDY_1`",416,[[]]],[11,"is_i2s_rx_0","","Checks if the value of the field is `I2S_RX_0`",416,[[]]],[11,"is_i2s_rx_1","","Checks if the value of the field is `I2S_RX_1`",416,[[]]],[11,"is_i2s_tx_0","","Checks if the value of the field is `I2S_TX_0`",416,[[]]],[11,"is_i2s_tx_1","","Checks if the value of the field is `I2S_TX_1`",416,[[]]],[11,"is_pcc_rx","","Checks if the value of the field is `PCC_RX`",416,[[]]],[11,"is_aes_wr","","Checks if the value of the field is `AES_WR`",416,[[]]],[11,"is_aes_rd","","Checks if the value of the field is `AES_RD`",416,[[]]],[11,"is_qspi_rx","","Checks if the value of the field is `QSPI_RX`",416,[[]]],[11,"is_qspi_tx","","Checks if the value of the field is `QSPI_TX`",416,[[]]],[11,"variant","","Writes `variant` to the field",417,[[["trigsrc_a",4]],["w",6]]],[11,"disable","","Only software/event triggers",417,[[],["w",6]]],[11,"rtc_timestamp","","DMA RTC timestamp trigger",417,[[],["w",6]]],[11,"dsu_dcc0","","DMAC ID for DCC0 register",417,[[],["w",6]]],[11,"dsu_dcc1","","DMAC ID for DCC1 register",417,[[],["w",6]]],[11,"sercom0_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom0_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom1_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom1_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom2_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom2_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom3_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom3_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom4_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom4_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom5_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom5_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom6_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom6_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"sercom7_rx","","Index of DMA RX trigger",417,[[],["w",6]]],[11,"sercom7_tx","","Index of DMA TX trigger",417,[[],["w",6]]],[11,"can0_debug","","DMA CAN Debug Req",417,[[],["w",6]]],[11,"can1_debug","","DMA CAN Debug Req",417,[[],["w",6]]],[11,"tcc0_ovf","","DMA overflow/underflow/retrigger trigger",417,[[],["w",6]]],[11,"tcc0_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc0_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc0_mc_2","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc0_mc_3","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc0_mc_4","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc0_mc_5","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc1_ovf","","DMA overflow/underflow/retrigger trigger",417,[[],["w",6]]],[11,"tcc1_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc1_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc1_mc_2","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc1_mc_3","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc2_ovf","","DMA overflow/underflow/retrigger trigger",417,[[],["w",6]]],[11,"tcc2_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc2_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc2_mc_2","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc3_ovf","","DMA overflow/underflow/retrigger trigger",417,[[],["w",6]]],[11,"tcc3_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc3_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc4_ovf","","DMA overflow/underflow/retrigger trigger",417,[[],["w",6]]],[11,"tcc4_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tcc4_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc0_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc0_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc0_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc1_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc1_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc1_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc2_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc2_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc2_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc3_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc3_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc3_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc4_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc4_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc4_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc5_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc5_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc5_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc6_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc6_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc6_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc7_ovf","","Indexes of DMA Overflow trigger",417,[[],["w",6]]],[11,"tc7_mc_0","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"tc7_mc_1","","Indexes of DMA Match/Compare triggers",417,[[],["w",6]]],[11,"adc0_resrdy","","index of DMA RESRDY trigger",417,[[],["w",6]]],[11,"adc0_seq","","Index of DMA SEQ trigger",417,[[],["w",6]]],[11,"adc1_resrdy","","Index of DMA RESRDY trigger",417,[[],["w",6]]],[11,"adc1_seq","","Index of DMA SEQ trigger",417,[[],["w",6]]],[11,"dac_empty_0","","DMA DAC Empty Req",417,[[],["w",6]]],[11,"dac_empty_1","","DMA DAC Empty Req",417,[[],["w",6]]],[11,"dac_resrdy_0","","DMA DAC Result Ready Req",417,[[],["w",6]]],[11,"dac_resrdy_1","","DMA DAC Result Ready Req",417,[[],["w",6]]],[11,"i2s_rx_0","","Indexes of DMA RX triggers",417,[[],["w",6]]],[11,"i2s_rx_1","","Indexes of DMA RX triggers",417,[[],["w",6]]],[11,"i2s_tx_0","","Indexes of DMA TX triggers",417,[[],["w",6]]],[11,"i2s_tx_1","","Indexes of DMA TX triggers",417,[[],["w",6]]],[11,"pcc_rx","","Indexes of PCC RX trigger",417,[[],["w",6]]],[11,"aes_wr","","DMA DATA Write trigger",417,[[],["w",6]]],[11,"aes_rd","","DMA DATA Read trigger",417,[[],["w",6]]],[11,"qspi_rx","","Indexes of QSPI RX trigger",417,[[],["w",6]]],[11,"qspi_tx","","Indexes of QSPI TX trigger",417,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",417,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["trigact_a",4]]]],[11,"is_block","","Checks if the value of the field is `BLOCK`",6,[[]]],[11,"is_burst","","Checks if the value of the field is `BURST`",6,[[]]],[11,"is_transaction","","Checks if the value of the field is `TRANSACTION`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chctrla","Get enumerated values variant",418,[[],[["variant",4],["trigact_a",4]]]],[11,"is_block","","Checks if the value of the field is `BLOCK`",418,[[]]],[11,"is_burst","","Checks if the value of the field is `BURST`",418,[[]]],[11,"is_transaction","","Checks if the value of the field is `TRANSACTION`",418,[[]]],[11,"variant","","Writes `variant` to the field",419,[[["trigact_a",4]],["w",6]]],[11,"block","","One trigger required for each block transfer",419,[[],["w",6]]],[11,"burst","","One trigger required for each burst transfer",419,[[],["w",6]]],[11,"transaction","","One trigger required for each transaction",419,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",419,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["burstlen_a",4]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_2beat","","Checks if the value of the field is `_2BEAT`",6,[[]]],[11,"is_3beat","","Checks if the value of the field is `_3BEAT`",6,[[]]],[11,"is_4beat","","Checks if the value of the field is `_4BEAT`",6,[[]]],[11,"is_5beat","","Checks if the value of the field is `_5BEAT`",6,[[]]],[11,"is_6beat","","Checks if the value of the field is `_6BEAT`",6,[[]]],[11,"is_7beat","","Checks if the value of the field is `_7BEAT`",6,[[]]],[11,"is_8beat","","Checks if the value of the field is `_8BEAT`",6,[[]]],[11,"is_9beat","","Checks if the value of the field is `_9BEAT`",6,[[]]],[11,"is_10beat","","Checks if the value of the field is `_10BEAT`",6,[[]]],[11,"is_11beat","","Checks if the value of the field is `_11BEAT`",6,[[]]],[11,"is_12beat","","Checks if the value of the field is `_12BEAT`",6,[[]]],[11,"is_13beat","","Checks if the value of the field is `_13BEAT`",6,[[]]],[11,"is_14beat","","Checks if the value of the field is `_14BEAT`",6,[[]]],[11,"is_15beat","","Checks if the value of the field is `_15BEAT`",6,[[]]],[11,"is_16beat","","Checks if the value of the field is `_16BEAT`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chctrla","Get enumerated values variant",420,[[],["burstlen_a",4]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",420,[[]]],[11,"is_2beat","","Checks if the value of the field is `_2BEAT`",420,[[]]],[11,"is_3beat","","Checks if the value of the field is `_3BEAT`",420,[[]]],[11,"is_4beat","","Checks if the value of the field is `_4BEAT`",420,[[]]],[11,"is_5beat","","Checks if the value of the field is `_5BEAT`",420,[[]]],[11,"is_6beat","","Checks if the value of the field is `_6BEAT`",420,[[]]],[11,"is_7beat","","Checks if the value of the field is `_7BEAT`",420,[[]]],[11,"is_8beat","","Checks if the value of the field is `_8BEAT`",420,[[]]],[11,"is_9beat","","Checks if the value of the field is `_9BEAT`",420,[[]]],[11,"is_10beat","","Checks if the value of the field is `_10BEAT`",420,[[]]],[11,"is_11beat","","Checks if the value of the field is `_11BEAT`",420,[[]]],[11,"is_12beat","","Checks if the value of the field is `_12BEAT`",420,[[]]],[11,"is_13beat","","Checks if the value of the field is `_13BEAT`",420,[[]]],[11,"is_14beat","","Checks if the value of the field is `_14BEAT`",420,[[]]],[11,"is_15beat","","Checks if the value of the field is `_15BEAT`",420,[[]]],[11,"is_16beat","","Checks if the value of the field is `_16BEAT`",420,[[]]],[11,"variant","","Writes `variant` to the field",421,[[["burstlen_a",4]],["w",6]]],[11,"single","","Single-beat burst length",421,[[],["w",6]]],[11,"_2beat","","2-beats burst length",421,[[],["w",6]]],[11,"_3beat","","3-beats burst length",421,[[],["w",6]]],[11,"_4beat","","4-beats burst length",421,[[],["w",6]]],[11,"_5beat","","5-beats burst length",421,[[],["w",6]]],[11,"_6beat","","6-beats burst length",421,[[],["w",6]]],[11,"_7beat","","7-beats burst length",421,[[],["w",6]]],[11,"_8beat","","8-beats burst length",421,[[],["w",6]]],[11,"_9beat","","9-beats burst length",421,[[],["w",6]]],[11,"_10beat","","10-beats burst length",421,[[],["w",6]]],[11,"_11beat","","11-beats burst length",421,[[],["w",6]]],[11,"_12beat","","12-beats burst length",421,[[],["w",6]]],[11,"_13beat","","13-beats burst length",421,[[],["w",6]]],[11,"_14beat","","14-beats burst length",421,[[],["w",6]]],[11,"_15beat","","15-beats burst length",421,[[],["w",6]]],[11,"_16beat","","16-beats burst length",421,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",421,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["threshold_a",4]]],[11,"is_1beat","","Checks if the value of the field is `_1BEAT`",6,[[]]],[11,"is_2beats","","Checks if the value of the field is `_2BEATS`",6,[[]]],[11,"is_4beats","","Checks if the value of the field is `_4BEATS`",6,[[]]],[11,"is_8beats","","Checks if the value of the field is `_8BEATS`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chctrla","Get enumerated values variant",422,[[],["threshold_a",4]]],[11,"is_1beat","","Checks if the value of the field is `_1BEAT`",422,[[]]],[11,"is_2beats","","Checks if the value of the field is `_2BEATS`",422,[[]]],[11,"is_4beats","","Checks if the value of the field is `_4BEATS`",422,[[]]],[11,"is_8beats","","Checks if the value of the field is `_8BEATS`",422,[[]]],[11,"variant","","Writes `variant` to the field",423,[[["threshold_a",4]],["w",6]]],[11,"_1beat","","Destination write starts after each beat source address read",423,[[],["w",6]]],[11,"_2beats","","Destination write starts after 2-beats source address read",423,[[],["w",6]]],[11,"_4beats","","Destination write starts after 4-beats source address read",423,[[],["w",6]]],[11,"_8beats","","Destination write starts after 8-beats source address read",423,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",423,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Channel Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Channel Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Channel Run in Standby",6,[[],["runstdby_r",6]]],[11,"trigsrc","","Bits 8:14 - Trigger Source",6,[[],["trigsrc_r",6]]],[11,"trigact","","Bits 20:21 - Trigger Action",6,[[],["trigact_r",6]]],[11,"burstlen","","Bits 24:27 - Burst Length",6,[[],["burstlen_r",6]]],[11,"threshold","","Bits 28:29 - FIFO Threshold",6,[[],["threshold_r",6]]],[11,"swrst","atsamd51g::dmac::channel::chctrla","Bit 0 - Channel Software Reset",424,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Channel Enable",424,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Channel Run in Standby",424,[[],["runstdby_r",6]]],[11,"trigsrc","","Bits 8:14 - Trigger Source",424,[[],["trigsrc_r",6]]],[11,"trigact","","Bits 20:21 - Trigger Action",424,[[],["trigact_r",6]]],[11,"burstlen","","Bits 24:27 - Burst Length",424,[[],["burstlen_r",6]]],[11,"threshold","","Bits 28:29 - FIFO Threshold",424,[[],["threshold_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Channel Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Channel Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Channel Run in Standby",7,[[],["runstdby_w",3]]],[11,"trigsrc","","Bits 8:14 - Trigger Source",7,[[],["trigsrc_w",3]]],[11,"trigact","","Bits 20:21 - Trigger Action",7,[[],["trigact_w",3]]],[11,"burstlen","","Bits 24:27 - Burst Length",7,[[],["burstlen_w",3]]],[11,"threshold","","Bits 28:29 - FIFO Threshold",7,[[],["threshold_w",3]]],[11,"swrst","atsamd51g::dmac::channel::chctrla","Bit 0 - Channel Software Reset",425,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Channel Enable",425,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Channel Run in Standby",425,[[],["runstdby_w",3]]],[11,"trigsrc","","Bits 8:14 - Trigger Source",425,[[],["trigsrc_w",3]]],[11,"trigact","","Bits 20:21 - Trigger Action",425,[[],["trigact_w",3]]],[11,"burstlen","","Bits 24:27 - Burst Length",425,[[],["burstlen_w",3]]],[11,"threshold","","Bits 28:29 - FIFO Threshold",425,[[],["threshold_w",3]]],[0,"chctrlb","atsamd51g::dmac::channel","Channel n Control B",null,null],[3,"CMD_W","atsamd51g::dmac::channel::chctrlb","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Software Command",null,null],[13,"NOACT","","0: No action",426,null],[13,"SUSPEND","","1: Channel suspend operation",426,null],[13,"RESUME","","2: Channel resume operation",426,null],[6,"R","","Reader of register CHCTRLB",null,null],[6,"W","","Writer for register CHCTRLB",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chctrlb","Get enumerated values variant",427,[[],[["cmd_a",4],["variant",4]]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",427,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",427,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",427,[[]]],[11,"variant","","Writes `variant` to the field",428,[[["cmd_a",4]],["w",6]]],[11,"noact","","No action",428,[[],["w",6]]],[11,"suspend","","Channel suspend operation",428,[[],["w",6]]],[11,"resume","","Channel resume operation",428,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",428,[[],["w",6]]],[11,"cmd","atsamd51g::generic","Bits 0:1 - Software Command",6,[[],["cmd_r",6]]],[11,"cmd","atsamd51g::dmac::channel::chctrlb","Bits 0:1 - Software Command",429,[[],["cmd_r",6]]],[11,"cmd","atsamd51g::generic","Bits 0:1 - Software Command",7,[[],["cmd_w",3]]],[11,"cmd","atsamd51g::dmac::channel::chctrlb","Bits 0:1 - Software Command",430,[[],["cmd_w",3]]],[0,"chprilvl","atsamd51g::dmac::channel","Channel n Priority Level",null,null],[3,"PRILVL_W","atsamd51g::dmac::channel::chprilvl","Write proxy for field `PRILVL`",null,null],[4,"PRILVL_A","","Channel Priority Level",null,null],[13,"LVL0","","0: Channel Priority Level 0 (Lowest Level)",431,null],[13,"LVL1","","1: Channel Priority Level 1",431,null],[13,"LVL2","","2: Channel Priority Level 2",431,null],[13,"LVL3","","3: Channel Priority Level 3 (Highest Level)",431,null],[6,"R","","Reader of register CHPRILVL",null,null],[6,"W","","Writer for register CHPRILVL",null,null],[6,"PRILVL_R","","Reader of field `PRILVL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prilvl_a",4]]],[11,"is_lvl0","","Checks if the value of the field is `LVL0`",6,[[]]],[11,"is_lvl1","","Checks if the value of the field is `LVL1`",6,[[]]],[11,"is_lvl2","","Checks if the value of the field is `LVL2`",6,[[]]],[11,"is_lvl3","","Checks if the value of the field is `LVL3`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chprilvl","Get enumerated values variant",432,[[],["prilvl_a",4]]],[11,"is_lvl0","","Checks if the value of the field is `LVL0`",432,[[]]],[11,"is_lvl1","","Checks if the value of the field is `LVL1`",432,[[]]],[11,"is_lvl2","","Checks if the value of the field is `LVL2`",432,[[]]],[11,"is_lvl3","","Checks if the value of the field is `LVL3`",432,[[]]],[11,"variant","","Writes `variant` to the field",433,[[["prilvl_a",4]],["w",6]]],[11,"lvl0","","Channel Priority Level 0 (Lowest Level)",433,[[],["w",6]]],[11,"lvl1","","Channel Priority Level 1",433,[[],["w",6]]],[11,"lvl2","","Channel Priority Level 2",433,[[],["w",6]]],[11,"lvl3","","Channel Priority Level 3 (Highest Level)",433,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",433,[[],["w",6]]],[11,"prilvl","atsamd51g::generic","Bits 0:1 - Channel Priority Level",6,[[],["prilvl_r",6]]],[11,"prilvl","atsamd51g::dmac::channel::chprilvl","Bits 0:1 - Channel Priority Level",434,[[],["prilvl_r",6]]],[11,"prilvl","atsamd51g::generic","Bits 0:1 - Channel Priority Level",7,[[],["prilvl_w",3]]],[11,"prilvl","atsamd51g::dmac::channel::chprilvl","Bits 0:1 - Channel Priority Level",435,[[],["prilvl_w",3]]],[0,"chevctrl","atsamd51g::dmac::channel","Channel n Event Control",null,null],[3,"EVACT_W","atsamd51g::dmac::channel::chevctrl","Write proxy for field `EVACT`",null,null],[3,"EVOMODE_W","","Write proxy for field `EVOMODE`",null,null],[3,"EVIE_W","","Write proxy for field `EVIE`",null,null],[3,"EVOE_W","","Write proxy for field `EVOE`",null,null],[4,"EVACT_A","","Channel Event Input Action",null,null],[13,"NOACT","","0: No action",436,null],[13,"TRIG","","1: Transfer and periodic transfer trigger",436,null],[13,"CTRIG","","2: Conditional transfer trigger",436,null],[13,"CBLOCK","","3: Conditional block transfer",436,null],[13,"SUSPEND","","4: Channel suspend operation",436,null],[13,"RESUME","","5: Channel resume operation",436,null],[13,"SSKIP","","6: Skip next block suspend action",436,null],[13,"INCPRI","","7: Increase priority",436,null],[4,"EVOMODE_A","","Channel Event Output Mode",null,null],[13,"DEFAULT","","0: Block event output selection. Refer to BTCTRL.EVOSEL…",437,null],[13,"TRIGACT","","1: Ongoing trigger action",437,null],[6,"R","","Reader of register CHEVCTRL",null,null],[6,"W","","Writer for register CHEVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"EVOMODE_R","","Reader of field `EVOMODE`",null,null],[6,"EVIE_R","","Reader of field `EVIE`",null,null],[6,"EVOE_R","","Reader of field `EVOE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact_a",4]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",6,[[]]],[11,"is_trig","","Checks if the value of the field is `TRIG`",6,[[]]],[11,"is_ctrig","","Checks if the value of the field is `CTRIG`",6,[[]]],[11,"is_cblock","","Checks if the value of the field is `CBLOCK`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"is_sskip","","Checks if the value of the field is `SSKIP`",6,[[]]],[11,"is_incpri","","Checks if the value of the field is `INCPRI`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chevctrl","Get enumerated values variant",438,[[],["evact_a",4]]],[11,"is_noact","","Checks if the value of the field is `NOACT`",438,[[]]],[11,"is_trig","","Checks if the value of the field is `TRIG`",438,[[]]],[11,"is_ctrig","","Checks if the value of the field is `CTRIG`",438,[[]]],[11,"is_cblock","","Checks if the value of the field is `CBLOCK`",438,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",438,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",438,[[]]],[11,"is_sskip","","Checks if the value of the field is `SSKIP`",438,[[]]],[11,"is_incpri","","Checks if the value of the field is `INCPRI`",438,[[]]],[11,"variant","","Writes `variant` to the field",439,[[["evact_a",4]],["w",6]]],[11,"noact","","No action",439,[[],["w",6]]],[11,"trig","","Transfer and periodic transfer trigger",439,[[],["w",6]]],[11,"ctrig","","Conditional transfer trigger",439,[[],["w",6]]],[11,"cblock","","Conditional block transfer",439,[[],["w",6]]],[11,"suspend","","Channel suspend operation",439,[[],["w",6]]],[11,"resume","","Channel resume operation",439,[[],["w",6]]],[11,"sskip","","Skip next block suspend action",439,[[],["w",6]]],[11,"incpri","","Increase priority",439,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",439,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["evomode_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_trigact","","Checks if the value of the field is `TRIGACT`",6,[[]]],[11,"variant","atsamd51g::dmac::channel::chevctrl","Get enumerated values variant",440,[[],[["evomode_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",440,[[]]],[11,"is_trigact","","Checks if the value of the field is `TRIGACT`",440,[[]]],[11,"variant","","Writes `variant` to the field",441,[[["evomode_a",4]],["w",6]]],[11,"default","","Block event output selection. Refer to BTCTRL.EVOSEL for…",441,[[],["w",6]]],[11,"trigact","","Ongoing trigger action",441,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",441,[[],["w",6]]],[11,"set_bit","","Sets the field bit",442,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",442,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",442,[[],["w",6]]],[11,"set_bit","","Sets the field bit",443,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",443,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",443,[[],["w",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Channel Event Input Action",6,[[],["evact_r",6]]],[11,"evomode","","Bits 4:5 - Channel Event Output Mode",6,[[],["evomode_r",6]]],[11,"evie","","Bit 6 - Channel Event Input Enable",6,[[],["evie_r",6]]],[11,"evoe","","Bit 7 - Channel Event Output Enable",6,[[],["evoe_r",6]]],[11,"evact","atsamd51g::dmac::channel::chevctrl","Bits 0:2 - Channel Event Input Action",444,[[],["evact_r",6]]],[11,"evomode","","Bits 4:5 - Channel Event Output Mode",444,[[],["evomode_r",6]]],[11,"evie","","Bit 6 - Channel Event Input Enable",444,[[],["evie_r",6]]],[11,"evoe","","Bit 7 - Channel Event Output Enable",444,[[],["evoe_r",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Channel Event Input Action",7,[[],["evact_w",3]]],[11,"evomode","","Bits 4:5 - Channel Event Output Mode",7,[[],["evomode_w",3]]],[11,"evie","","Bit 6 - Channel Event Input Enable",7,[[],["evie_w",3]]],[11,"evoe","","Bit 7 - Channel Event Output Enable",7,[[],["evoe_w",3]]],[11,"evact","atsamd51g::dmac::channel::chevctrl","Bits 0:2 - Channel Event Input Action",445,[[],["evact_w",3]]],[11,"evomode","","Bits 4:5 - Channel Event Output Mode",445,[[],["evomode_w",3]]],[11,"evie","","Bit 6 - Channel Event Input Enable",445,[[],["evie_w",3]]],[11,"evoe","","Bit 7 - Channel Event Output Enable",445,[[],["evoe_w",3]]],[0,"chintenclr","atsamd51g::dmac::channel","Channel n Interrupt Enable Clear",null,null],[3,"TERR_W","atsamd51g::dmac::channel::chintenclr","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTENCLR",null,null],[6,"W","","Writer for register CHINTENCLR",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",446,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",446,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",448,[[],["w",6]]],[11,"terr","atsamd51g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",6,[[],["susp_r",6]]],[11,"terr","atsamd51g::dmac::channel::chintenclr","Bit 0 - Channel Transfer Error Interrupt Enable",449,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",449,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",449,[[],["susp_r",6]]],[11,"terr","atsamd51g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",7,[[],["susp_w",3]]],[11,"terr","atsamd51g::dmac::channel::chintenclr","Bit 0 - Channel Transfer Error Interrupt Enable",450,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",450,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",450,[[],["susp_w",3]]],[0,"chintenset","atsamd51g::dmac::channel","Channel n Interrupt Enable Set",null,null],[3,"TERR_W","atsamd51g::dmac::channel::chintenset","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTENSET",null,null],[6,"W","","Writer for register CHINTENSET",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",452,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",452,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",453,[[],["w",6]]],[11,"terr","atsamd51g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",6,[[],["susp_r",6]]],[11,"terr","atsamd51g::dmac::channel::chintenset","Bit 0 - Channel Transfer Error Interrupt Enable",454,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",454,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",454,[[],["susp_r",6]]],[11,"terr","atsamd51g::generic","Bit 0 - Channel Transfer Error Interrupt Enable",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",7,[[],["susp_w",3]]],[11,"terr","atsamd51g::dmac::channel::chintenset","Bit 0 - Channel Transfer Error Interrupt Enable",455,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete Interrupt Enable",455,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend Interrupt Enable",455,[[],["susp_w",3]]],[0,"chintflag","atsamd51g::dmac::channel","Channel n Interrupt Flag Status and Clear",null,null],[3,"TERR_W","atsamd51g::dmac::channel::chintflag","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[6,"R","","Reader of register CHINTFLAG",null,null],[6,"W","","Writer for register CHINTFLAG",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[11,"set_bit","","Sets the field bit",456,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",456,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",456,[[],["w",6]]],[11,"set_bit","","Sets the field bit",457,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",457,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",457,[[],["w",6]]],[11,"set_bit","","Sets the field bit",458,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",458,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",458,[[],["w",6]]],[11,"terr","atsamd51g::generic","Bit 0 - Channel Transfer Error",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend",6,[[],["susp_r",6]]],[11,"terr","atsamd51g::dmac::channel::chintflag","Bit 0 - Channel Transfer Error",459,[[],["terr_r",6]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",459,[[],["tcmpl_r",6]]],[11,"susp","","Bit 2 - Channel Suspend",459,[[],["susp_r",6]]],[11,"terr","atsamd51g::generic","Bit 0 - Channel Transfer Error",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend",7,[[],["susp_w",3]]],[11,"terr","atsamd51g::dmac::channel::chintflag","Bit 0 - Channel Transfer Error",460,[[],["terr_w",3]]],[11,"tcmpl","","Bit 1 - Channel Transfer Complete",460,[[],["tcmpl_w",3]]],[11,"susp","","Bit 2 - Channel Suspend",460,[[],["susp_w",3]]],[0,"chstatus","atsamd51g::dmac::channel","Channel n Status",null,null],[3,"PEND_W","atsamd51g::dmac::channel::chstatus","Write proxy for field `PEND`",null,null],[3,"BUSY_W","","Write proxy for field `BUSY`",null,null],[3,"FERR_W","","Write proxy for field `FERR`",null,null],[3,"CRCERR_W","","Write proxy for field `CRCERR`",null,null],[6,"R","","Reader of register CHSTATUS",null,null],[6,"W","","Writer for register CHSTATUS",null,null],[6,"PEND_R","","Reader of field `PEND`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"CRCERR_R","","Reader of field `CRCERR`",null,null],[11,"set_bit","","Sets the field bit",461,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",461,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",461,[[],["w",6]]],[11,"set_bit","","Sets the field bit",462,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",462,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",462,[[],["w",6]]],[11,"set_bit","","Sets the field bit",463,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",463,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",463,[[],["w",6]]],[11,"set_bit","","Sets the field bit",464,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",464,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",464,[[],["w",6]]],[11,"pend","atsamd51g::generic","Bit 0 - Channel Pending",6,[[],["pend_r",6]]],[11,"busy","","Bit 1 - Channel Busy",6,[[],["busy_r",6]]],[11,"ferr","","Bit 2 - Channel Fetch Error",6,[[],["ferr_r",6]]],[11,"crcerr","","Bit 3 - Channel CRC Error",6,[[],["crcerr_r",6]]],[11,"pend","atsamd51g::dmac::channel::chstatus","Bit 0 - Channel Pending",465,[[],["pend_r",6]]],[11,"busy","","Bit 1 - Channel Busy",465,[[],["busy_r",6]]],[11,"ferr","","Bit 2 - Channel Fetch Error",465,[[],["ferr_r",6]]],[11,"crcerr","","Bit 3 - Channel CRC Error",465,[[],["crcerr_r",6]]],[11,"pend","atsamd51g::generic","Bit 0 - Channel Pending",7,[[],["pend_w",3]]],[11,"busy","","Bit 1 - Channel Busy",7,[[],["busy_w",3]]],[11,"ferr","","Bit 2 - Channel Fetch Error",7,[[],["ferr_w",3]]],[11,"crcerr","","Bit 3 - Channel CRC Error",7,[[],["crcerr_w",3]]],[11,"pend","atsamd51g::dmac::channel::chstatus","Bit 0 - Channel Pending",466,[[],["pend_w",3]]],[11,"busy","","Bit 1 - Channel Busy",466,[[],["busy_w",3]]],[11,"ferr","","Bit 2 - Channel Fetch Error",466,[[],["ferr_w",3]]],[11,"crcerr","","Bit 3 - Channel CRC Error",466,[[],["crcerr_w",3]]],[6,"CHCTRLA","atsamd51g::dmac::channel","Channel n Control A",null,null],[6,"CHCTRLB","","Channel n Control B",null,null],[6,"CHPRILVL","","Channel n Priority Level",null,null],[6,"CHEVCTRL","","Channel n Event Control",null,null],[6,"CHINTENCLR","","Channel n Interrupt Enable Clear",null,null],[6,"CHINTENSET","","Channel n Interrupt Enable Set",null,null],[6,"CHINTFLAG","","Channel n Interrupt Flag Status and Clear",null,null],[6,"CHSTATUS","","Channel n Status",null,null],[0,"ctrl","atsamd51g::dmac","Control",null,null],[3,"SWRST_W","atsamd51g::dmac::ctrl","Write proxy for field `SWRST`",null,null],[3,"DMAENABLE_W","","Write proxy for field `DMAENABLE`",null,null],[3,"LVLEN0_W","","Write proxy for field `LVLEN0`",null,null],[3,"LVLEN1_W","","Write proxy for field `LVLEN1`",null,null],[3,"LVLEN2_W","","Write proxy for field `LVLEN2`",null,null],[3,"LVLEN3_W","","Write proxy for field `LVLEN3`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"DMAENABLE_R","","Reader of field `DMAENABLE`",null,null],[6,"LVLEN0_R","","Reader of field `LVLEN0`",null,null],[6,"LVLEN1_R","","Reader of field `LVLEN1`",null,null],[6,"LVLEN2_R","","Reader of field `LVLEN2`",null,null],[6,"LVLEN3_R","","Reader of field `LVLEN3`",null,null],[11,"set_bit","","Sets the field bit",467,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",467,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",468,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",468,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",468,[[],["w",6]]],[11,"set_bit","","Sets the field bit",469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",469,[[],["w",6]]],[11,"set_bit","","Sets the field bit",470,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",470,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",470,[[],["w",6]]],[11,"set_bit","","Sets the field bit",471,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",471,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",471,[[],["w",6]]],[11,"set_bit","","Sets the field bit",472,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",472,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",472,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"dmaenable","","Bit 1 - DMA Enable",6,[[],["dmaenable_r",6]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",6,[[],["lvlen0_r",6]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",6,[[],["lvlen1_r",6]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",6,[[],["lvlen2_r",6]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",6,[[],["lvlen3_r",6]]],[11,"swrst","atsamd51g::dmac::ctrl","Bit 0 - Software Reset",473,[[],["swrst_r",6]]],[11,"dmaenable","","Bit 1 - DMA Enable",473,[[],["dmaenable_r",6]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",473,[[],["lvlen0_r",6]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",473,[[],["lvlen1_r",6]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",473,[[],["lvlen2_r",6]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",473,[[],["lvlen3_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"dmaenable","","Bit 1 - DMA Enable",7,[[],["dmaenable_w",3]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",7,[[],["lvlen0_w",3]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",7,[[],["lvlen1_w",3]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",7,[[],["lvlen2_w",3]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",7,[[],["lvlen3_w",3]]],[11,"swrst","atsamd51g::dmac::ctrl","Bit 0 - Software Reset",474,[[],["swrst_w",3]]],[11,"dmaenable","","Bit 1 - DMA Enable",474,[[],["dmaenable_w",3]]],[11,"lvlen0","","Bit 8 - Priority Level 0 Enable",474,[[],["lvlen0_w",3]]],[11,"lvlen1","","Bit 9 - Priority Level 1 Enable",474,[[],["lvlen1_w",3]]],[11,"lvlen2","","Bit 10 - Priority Level 2 Enable",474,[[],["lvlen2_w",3]]],[11,"lvlen3","","Bit 11 - Priority Level 3 Enable",474,[[],["lvlen3_w",3]]],[0,"crcctrl","atsamd51g::dmac","CRC Control",null,null],[3,"CRCBEATSIZE_W","atsamd51g::dmac::crcctrl","Write proxy for field `CRCBEATSIZE`",null,null],[3,"CRCPOLY_W","","Write proxy for field `CRCPOLY`",null,null],[3,"CRCSRC_W","","Write proxy for field `CRCSRC`",null,null],[3,"CRCMODE_W","","Write proxy for field `CRCMODE`",null,null],[4,"CRCBEATSIZE_A","","CRC Beat Size",null,null],[13,"BYTE","","0: 8-bit bus transfer",475,null],[13,"HWORD","","1: 16-bit bus transfer",475,null],[13,"WORD","","2: 32-bit bus transfer",475,null],[4,"CRCPOLY_A","","CRC Polynomial Type",null,null],[13,"CRC16","","0: CRC-16 (CRC-CCITT)",476,null],[13,"CRC32","","1: CRC32 (IEEE 802.3)",476,null],[4,"CRCSRC_A","","CRC Input Source",null,null],[13,"DISABLE","","0: CRC Disabled",477,null],[13,"IO","","1: I/O interface",477,null],[4,"CRCMODE_A","","CRC Operating Mode",null,null],[13,"DEFAULT","","0: Default operating mode",478,null],[13,"CRCMON","","2: Memory CRC monitor operating mode",478,null],[13,"CRCGEN","","3: Memory CRC generation operating mode",478,null],[6,"R","","Reader of register CRCCTRL",null,null],[6,"W","","Writer for register CRCCTRL",null,null],[6,"CRCBEATSIZE_R","","Reader of field `CRCBEATSIZE`",null,null],[6,"CRCPOLY_R","","Reader of field `CRCPOLY`",null,null],[6,"CRCSRC_R","","Reader of field `CRCSRC`",null,null],[6,"CRCMODE_R","","Reader of field `CRCMODE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["crcbeatsize_a",4]]]],[11,"is_byte","","Checks if the value of the field is `BYTE`",6,[[]]],[11,"is_hword","","Checks if the value of the field is `HWORD`",6,[[]]],[11,"is_word","","Checks if the value of the field is `WORD`",6,[[]]],[11,"variant","atsamd51g::dmac::crcctrl","Get enumerated values variant",479,[[],[["variant",4],["crcbeatsize_a",4]]]],[11,"is_byte","","Checks if the value of the field is `BYTE`",479,[[]]],[11,"is_hword","","Checks if the value of the field is `HWORD`",479,[[]]],[11,"is_word","","Checks if the value of the field is `WORD`",479,[[]]],[11,"variant","","Writes `variant` to the field",480,[[["crcbeatsize_a",4]],["w",6]]],[11,"byte","","8-bit bus transfer",480,[[],["w",6]]],[11,"hword","","16-bit bus transfer",480,[[],["w",6]]],[11,"word","","32-bit bus transfer",480,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",480,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["crcpoly_a",4]]]],[11,"is_crc16","","Checks if the value of the field is `CRC16`",6,[[]]],[11,"is_crc32","","Checks if the value of the field is `CRC32`",6,[[]]],[11,"variant","atsamd51g::dmac::crcctrl","Get enumerated values variant",481,[[],[["variant",4],["crcpoly_a",4]]]],[11,"is_crc16","","Checks if the value of the field is `CRC16`",481,[[]]],[11,"is_crc32","","Checks if the value of the field is `CRC32`",481,[[]]],[11,"variant","","Writes `variant` to the field",482,[[["crcpoly_a",4]],["w",6]]],[11,"crc16","","CRC-16 (CRC-CCITT)",482,[[],["w",6]]],[11,"crc32","","CRC32 (IEEE 802.3)",482,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",482,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["crcsrc_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",6,[[]]],[11,"variant","atsamd51g::dmac::crcctrl","Get enumerated values variant",483,[[],[["variant",4],["crcsrc_a",4]]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",483,[[]]],[11,"is_io","","Checks if the value of the field is `IO`",483,[[]]],[11,"variant","","Writes `variant` to the field",484,[[["crcsrc_a",4]],["w",6]]],[11,"disable","","CRC Disabled",484,[[],["w",6]]],[11,"io","","I/O interface",484,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",484,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["crcmode_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_crcmon","","Checks if the value of the field is `CRCMON`",6,[[]]],[11,"is_crcgen","","Checks if the value of the field is `CRCGEN`",6,[[]]],[11,"variant","atsamd51g::dmac::crcctrl","Get enumerated values variant",485,[[],[["crcmode_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",485,[[]]],[11,"is_crcmon","","Checks if the value of the field is `CRCMON`",485,[[]]],[11,"is_crcgen","","Checks if the value of the field is `CRCGEN`",485,[[]]],[11,"variant","","Writes `variant` to the field",486,[[["crcmode_a",4]],["w",6]]],[11,"default","","Default operating mode",486,[[],["w",6]]],[11,"crcmon","","Memory CRC monitor operating mode",486,[[],["w",6]]],[11,"crcgen","","Memory CRC generation operating mode",486,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",486,[[],["w",6]]],[11,"crcbeatsize","atsamd51g::generic","Bits 0:1 - CRC Beat Size",6,[[],["crcbeatsize_r",6]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",6,[[],["crcpoly_r",6]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",6,[[],["crcsrc_r",6]]],[11,"crcmode","","Bits 14:15 - CRC Operating Mode",6,[[],["crcmode_r",6]]],[11,"crcbeatsize","atsamd51g::dmac::crcctrl","Bits 0:1 - CRC Beat Size",487,[[],["crcbeatsize_r",6]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",487,[[],["crcpoly_r",6]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",487,[[],["crcsrc_r",6]]],[11,"crcmode","","Bits 14:15 - CRC Operating Mode",487,[[],["crcmode_r",6]]],[11,"crcbeatsize","atsamd51g::generic","Bits 0:1 - CRC Beat Size",7,[[],["crcbeatsize_w",3]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",7,[[],["crcpoly_w",3]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",7,[[],["crcsrc_w",3]]],[11,"crcmode","","Bits 14:15 - CRC Operating Mode",7,[[],["crcmode_w",3]]],[11,"crcbeatsize","atsamd51g::dmac::crcctrl","Bits 0:1 - CRC Beat Size",488,[[],["crcbeatsize_w",3]]],[11,"crcpoly","","Bits 2:3 - CRC Polynomial Type",488,[[],["crcpoly_w",3]]],[11,"crcsrc","","Bits 8:13 - CRC Input Source",488,[[],["crcsrc_w",3]]],[11,"crcmode","","Bits 14:15 - CRC Operating Mode",488,[[],["crcmode_w",3]]],[0,"crcdatain","atsamd51g::dmac","CRC Data Input",null,null],[3,"CRCDATAIN_W","atsamd51g::dmac::crcdatain","Write proxy for field `CRCDATAIN`",null,null],[6,"R","","Reader of register CRCDATAIN",null,null],[6,"W","","Writer for register CRCDATAIN",null,null],[6,"CRCDATAIN_R","","Reader of field `CRCDATAIN`",null,null],[11,"bits","","Writes raw bits to the field",489,[[],["w",6]]],[11,"crcdatain","atsamd51g::generic","Bits 0:31 - CRC Data Input",6,[[],["crcdatain_r",6]]],[11,"crcdatain","atsamd51g::dmac::crcdatain","Bits 0:31 - CRC Data Input",490,[[],["crcdatain_r",6]]],[11,"crcdatain","atsamd51g::generic","Bits 0:31 - CRC Data Input",7,[[],["crcdatain_w",3]]],[11,"crcdatain","atsamd51g::dmac::crcdatain","Bits 0:31 - CRC Data Input",491,[[],["crcdatain_w",3]]],[0,"crcchksum","atsamd51g::dmac","CRC Checksum",null,null],[3,"CRCCHKSUM_W","atsamd51g::dmac::crcchksum","Write proxy for field `CRCCHKSUM`",null,null],[6,"R","","Reader of register CRCCHKSUM",null,null],[6,"W","","Writer for register CRCCHKSUM",null,null],[6,"CRCCHKSUM_R","","Reader of field `CRCCHKSUM`",null,null],[11,"bits","","Writes raw bits to the field",492,[[],["w",6]]],[11,"crcchksum","atsamd51g::generic","Bits 0:31 - CRC Checksum",6,[[],["crcchksum_r",6]]],[11,"crcchksum","atsamd51g::dmac::crcchksum","Bits 0:31 - CRC Checksum",493,[[],["crcchksum_r",6]]],[11,"crcchksum","atsamd51g::generic","Bits 0:31 - CRC Checksum",7,[[],["crcchksum_w",3]]],[11,"crcchksum","atsamd51g::dmac::crcchksum","Bits 0:31 - CRC Checksum",494,[[],["crcchksum_w",3]]],[0,"crcstatus","atsamd51g::dmac","CRC Status",null,null],[3,"CRCBUSY_W","atsamd51g::dmac::crcstatus","Write proxy for field `CRCBUSY`",null,null],[3,"CRCZERO_W","","Write proxy for field `CRCZERO`",null,null],[3,"CRCERR_W","","Write proxy for field `CRCERR`",null,null],[6,"R","","Reader of register CRCSTATUS",null,null],[6,"W","","Writer for register CRCSTATUS",null,null],[6,"CRCBUSY_R","","Reader of field `CRCBUSY`",null,null],[6,"CRCZERO_R","","Reader of field `CRCZERO`",null,null],[6,"CRCERR_R","","Reader of field `CRCERR`",null,null],[11,"set_bit","","Sets the field bit",495,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",495,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",495,[[],["w",6]]],[11,"set_bit","","Sets the field bit",496,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",496,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",496,[[],["w",6]]],[11,"set_bit","","Sets the field bit",497,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",497,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",497,[[],["w",6]]],[11,"crcbusy","atsamd51g::generic","Bit 0 - CRC Module Busy",6,[[],["crcbusy_r",6]]],[11,"crczero","","Bit 1 - CRC Zero",6,[[],["crczero_r",6]]],[11,"crcerr","","Bit 2 - CRC Error",6,[[],["crcerr_r",6]]],[11,"crcbusy","atsamd51g::dmac::crcstatus","Bit 0 - CRC Module Busy",498,[[],["crcbusy_r",6]]],[11,"crczero","","Bit 1 - CRC Zero",498,[[],["crczero_r",6]]],[11,"crcerr","","Bit 2 - CRC Error",498,[[],["crcerr_r",6]]],[11,"crcbusy","atsamd51g::generic","Bit 0 - CRC Module Busy",7,[[],["crcbusy_w",3]]],[11,"crczero","","Bit 1 - CRC Zero",7,[[],["crczero_w",3]]],[11,"crcerr","","Bit 2 - CRC Error",7,[[],["crcerr_w",3]]],[11,"crcbusy","atsamd51g::dmac::crcstatus","Bit 0 - CRC Module Busy",499,[[],["crcbusy_w",3]]],[11,"crczero","","Bit 1 - CRC Zero",499,[[],["crczero_w",3]]],[11,"crcerr","","Bit 2 - CRC Error",499,[[],["crcerr_w",3]]],[0,"dbgctrl","atsamd51g::dmac","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::dmac::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",500,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",500,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",500,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::dmac::dbgctrl","Bit 0 - Debug Run",501,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::dmac::dbgctrl","Bit 0 - Debug Run",502,[[],["dbgrun_w",3]]],[0,"swtrigctrl","atsamd51g::dmac","Software Trigger Control",null,null],[3,"SWTRIG0_W","atsamd51g::dmac::swtrigctrl","Write proxy for field `SWTRIG0`",null,null],[3,"SWTRIG1_W","","Write proxy for field `SWTRIG1`",null,null],[3,"SWTRIG2_W","","Write proxy for field `SWTRIG2`",null,null],[3,"SWTRIG3_W","","Write proxy for field `SWTRIG3`",null,null],[3,"SWTRIG4_W","","Write proxy for field `SWTRIG4`",null,null],[3,"SWTRIG5_W","","Write proxy for field `SWTRIG5`",null,null],[3,"SWTRIG6_W","","Write proxy for field `SWTRIG6`",null,null],[3,"SWTRIG7_W","","Write proxy for field `SWTRIG7`",null,null],[3,"SWTRIG8_W","","Write proxy for field `SWTRIG8`",null,null],[3,"SWTRIG9_W","","Write proxy for field `SWTRIG9`",null,null],[3,"SWTRIG10_W","","Write proxy for field `SWTRIG10`",null,null],[3,"SWTRIG11_W","","Write proxy for field `SWTRIG11`",null,null],[3,"SWTRIG12_W","","Write proxy for field `SWTRIG12`",null,null],[3,"SWTRIG13_W","","Write proxy for field `SWTRIG13`",null,null],[3,"SWTRIG14_W","","Write proxy for field `SWTRIG14`",null,null],[3,"SWTRIG15_W","","Write proxy for field `SWTRIG15`",null,null],[3,"SWTRIG16_W","","Write proxy for field `SWTRIG16`",null,null],[3,"SWTRIG17_W","","Write proxy for field `SWTRIG17`",null,null],[3,"SWTRIG18_W","","Write proxy for field `SWTRIG18`",null,null],[3,"SWTRIG19_W","","Write proxy for field `SWTRIG19`",null,null],[3,"SWTRIG20_W","","Write proxy for field `SWTRIG20`",null,null],[3,"SWTRIG21_W","","Write proxy for field `SWTRIG21`",null,null],[3,"SWTRIG22_W","","Write proxy for field `SWTRIG22`",null,null],[3,"SWTRIG23_W","","Write proxy for field `SWTRIG23`",null,null],[3,"SWTRIG24_W","","Write proxy for field `SWTRIG24`",null,null],[3,"SWTRIG25_W","","Write proxy for field `SWTRIG25`",null,null],[3,"SWTRIG26_W","","Write proxy for field `SWTRIG26`",null,null],[3,"SWTRIG27_W","","Write proxy for field `SWTRIG27`",null,null],[3,"SWTRIG28_W","","Write proxy for field `SWTRIG28`",null,null],[3,"SWTRIG29_W","","Write proxy for field `SWTRIG29`",null,null],[3,"SWTRIG30_W","","Write proxy for field `SWTRIG30`",null,null],[3,"SWTRIG31_W","","Write proxy for field `SWTRIG31`",null,null],[6,"R","","Reader of register SWTRIGCTRL",null,null],[6,"W","","Writer for register SWTRIGCTRL",null,null],[6,"SWTRIG0_R","","Reader of field `SWTRIG0`",null,null],[6,"SWTRIG1_R","","Reader of field `SWTRIG1`",null,null],[6,"SWTRIG2_R","","Reader of field `SWTRIG2`",null,null],[6,"SWTRIG3_R","","Reader of field `SWTRIG3`",null,null],[6,"SWTRIG4_R","","Reader of field `SWTRIG4`",null,null],[6,"SWTRIG5_R","","Reader of field `SWTRIG5`",null,null],[6,"SWTRIG6_R","","Reader of field `SWTRIG6`",null,null],[6,"SWTRIG7_R","","Reader of field `SWTRIG7`",null,null],[6,"SWTRIG8_R","","Reader of field `SWTRIG8`",null,null],[6,"SWTRIG9_R","","Reader of field `SWTRIG9`",null,null],[6,"SWTRIG10_R","","Reader of field `SWTRIG10`",null,null],[6,"SWTRIG11_R","","Reader of field `SWTRIG11`",null,null],[6,"SWTRIG12_R","","Reader of field `SWTRIG12`",null,null],[6,"SWTRIG13_R","","Reader of field `SWTRIG13`",null,null],[6,"SWTRIG14_R","","Reader of field `SWTRIG14`",null,null],[6,"SWTRIG15_R","","Reader of field `SWTRIG15`",null,null],[6,"SWTRIG16_R","","Reader of field `SWTRIG16`",null,null],[6,"SWTRIG17_R","","Reader of field `SWTRIG17`",null,null],[6,"SWTRIG18_R","","Reader of field `SWTRIG18`",null,null],[6,"SWTRIG19_R","","Reader of field `SWTRIG19`",null,null],[6,"SWTRIG20_R","","Reader of field `SWTRIG20`",null,null],[6,"SWTRIG21_R","","Reader of field `SWTRIG21`",null,null],[6,"SWTRIG22_R","","Reader of field `SWTRIG22`",null,null],[6,"SWTRIG23_R","","Reader of field `SWTRIG23`",null,null],[6,"SWTRIG24_R","","Reader of field `SWTRIG24`",null,null],[6,"SWTRIG25_R","","Reader of field `SWTRIG25`",null,null],[6,"SWTRIG26_R","","Reader of field `SWTRIG26`",null,null],[6,"SWTRIG27_R","","Reader of field `SWTRIG27`",null,null],[6,"SWTRIG28_R","","Reader of field `SWTRIG28`",null,null],[6,"SWTRIG29_R","","Reader of field `SWTRIG29`",null,null],[6,"SWTRIG30_R","","Reader of field `SWTRIG30`",null,null],[6,"SWTRIG31_R","","Reader of field `SWTRIG31`",null,null],[11,"set_bit","","Sets the field bit",503,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",503,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",503,[[],["w",6]]],[11,"set_bit","","Sets the field bit",504,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",504,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",504,[[],["w",6]]],[11,"set_bit","","Sets the field bit",505,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",505,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",505,[[],["w",6]]],[11,"set_bit","","Sets the field bit",506,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",506,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",506,[[],["w",6]]],[11,"set_bit","","Sets the field bit",507,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",507,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",507,[[],["w",6]]],[11,"set_bit","","Sets the field bit",508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",508,[[],["w",6]]],[11,"set_bit","","Sets the field bit",509,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",509,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",509,[[],["w",6]]],[11,"set_bit","","Sets the field bit",510,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",510,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",510,[[],["w",6]]],[11,"set_bit","","Sets the field bit",511,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",511,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",511,[[],["w",6]]],[11,"set_bit","","Sets the field bit",512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",513,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",513,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",513,[[],["w",6]]],[11,"set_bit","","Sets the field bit",514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",514,[[],["w",6]]],[11,"set_bit","","Sets the field bit",515,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",515,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",515,[[],["w",6]]],[11,"set_bit","","Sets the field bit",516,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",516,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",516,[[],["w",6]]],[11,"set_bit","","Sets the field bit",517,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",517,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",517,[[],["w",6]]],[11,"set_bit","","Sets the field bit",518,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",518,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",518,[[],["w",6]]],[11,"set_bit","","Sets the field bit",519,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",519,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",519,[[],["w",6]]],[11,"set_bit","","Sets the field bit",520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",520,[[],["w",6]]],[11,"set_bit","","Sets the field bit",521,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",521,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",521,[[],["w",6]]],[11,"set_bit","","Sets the field bit",522,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",522,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",522,[[],["w",6]]],[11,"set_bit","","Sets the field bit",523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",523,[[],["w",6]]],[11,"set_bit","","Sets the field bit",524,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",524,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",524,[[],["w",6]]],[11,"set_bit","","Sets the field bit",525,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",525,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",525,[[],["w",6]]],[11,"set_bit","","Sets the field bit",526,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",526,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",526,[[],["w",6]]],[11,"set_bit","","Sets the field bit",527,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",527,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",527,[[],["w",6]]],[11,"set_bit","","Sets the field bit",528,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",528,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",528,[[],["w",6]]],[11,"set_bit","","Sets the field bit",529,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",529,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",529,[[],["w",6]]],[11,"set_bit","","Sets the field bit",530,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",530,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",530,[[],["w",6]]],[11,"set_bit","","Sets the field bit",531,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",531,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",531,[[],["w",6]]],[11,"set_bit","","Sets the field bit",532,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",532,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",532,[[],["w",6]]],[11,"set_bit","","Sets the field bit",533,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",533,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",533,[[],["w",6]]],[11,"set_bit","","Sets the field bit",534,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",534,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",534,[[],["w",6]]],[11,"swtrig0","atsamd51g::generic","Bit 0 - Channel 0 Software Trigger",6,[[],["swtrig0_r",6]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",6,[[],["swtrig1_r",6]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",6,[[],["swtrig2_r",6]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",6,[[],["swtrig3_r",6]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",6,[[],["swtrig4_r",6]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",6,[[],["swtrig5_r",6]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",6,[[],["swtrig6_r",6]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",6,[[],["swtrig7_r",6]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",6,[[],["swtrig8_r",6]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",6,[[],["swtrig9_r",6]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",6,[[],["swtrig10_r",6]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",6,[[],["swtrig11_r",6]]],[11,"swtrig12","","Bit 12 - Channel 12 Software Trigger",6,[[],["swtrig12_r",6]]],[11,"swtrig13","","Bit 13 - Channel 13 Software Trigger",6,[[],["swtrig13_r",6]]],[11,"swtrig14","","Bit 14 - Channel 14 Software Trigger",6,[[],["swtrig14_r",6]]],[11,"swtrig15","","Bit 15 - Channel 15 Software Trigger",6,[[],["swtrig15_r",6]]],[11,"swtrig16","","Bit 16 - Channel 16 Software Trigger",6,[[],["swtrig16_r",6]]],[11,"swtrig17","","Bit 17 - Channel 17 Software Trigger",6,[[],["swtrig17_r",6]]],[11,"swtrig18","","Bit 18 - Channel 18 Software Trigger",6,[[],["swtrig18_r",6]]],[11,"swtrig19","","Bit 19 - Channel 19 Software Trigger",6,[[],["swtrig19_r",6]]],[11,"swtrig20","","Bit 20 - Channel 20 Software Trigger",6,[[],["swtrig20_r",6]]],[11,"swtrig21","","Bit 21 - Channel 21 Software Trigger",6,[[],["swtrig21_r",6]]],[11,"swtrig22","","Bit 22 - Channel 22 Software Trigger",6,[[],["swtrig22_r",6]]],[11,"swtrig23","","Bit 23 - Channel 23 Software Trigger",6,[[],["swtrig23_r",6]]],[11,"swtrig24","","Bit 24 - Channel 24 Software Trigger",6,[[],["swtrig24_r",6]]],[11,"swtrig25","","Bit 25 - Channel 25 Software Trigger",6,[[],["swtrig25_r",6]]],[11,"swtrig26","","Bit 26 - Channel 26 Software Trigger",6,[[],["swtrig26_r",6]]],[11,"swtrig27","","Bit 27 - Channel 27 Software Trigger",6,[[],["swtrig27_r",6]]],[11,"swtrig28","","Bit 28 - Channel 28 Software Trigger",6,[[],["swtrig28_r",6]]],[11,"swtrig29","","Bit 29 - Channel 29 Software Trigger",6,[[],["swtrig29_r",6]]],[11,"swtrig30","","Bit 30 - Channel 30 Software Trigger",6,[[],["swtrig30_r",6]]],[11,"swtrig31","","Bit 31 - Channel 31 Software Trigger",6,[[],["swtrig31_r",6]]],[11,"swtrig0","atsamd51g::dmac::swtrigctrl","Bit 0 - Channel 0 Software Trigger",535,[[],["swtrig0_r",6]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",535,[[],["swtrig1_r",6]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",535,[[],["swtrig2_r",6]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",535,[[],["swtrig3_r",6]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",535,[[],["swtrig4_r",6]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",535,[[],["swtrig5_r",6]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",535,[[],["swtrig6_r",6]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",535,[[],["swtrig7_r",6]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",535,[[],["swtrig8_r",6]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",535,[[],["swtrig9_r",6]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",535,[[],["swtrig10_r",6]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",535,[[],["swtrig11_r",6]]],[11,"swtrig12","","Bit 12 - Channel 12 Software Trigger",535,[[],["swtrig12_r",6]]],[11,"swtrig13","","Bit 13 - Channel 13 Software Trigger",535,[[],["swtrig13_r",6]]],[11,"swtrig14","","Bit 14 - Channel 14 Software Trigger",535,[[],["swtrig14_r",6]]],[11,"swtrig15","","Bit 15 - Channel 15 Software Trigger",535,[[],["swtrig15_r",6]]],[11,"swtrig16","","Bit 16 - Channel 16 Software Trigger",535,[[],["swtrig16_r",6]]],[11,"swtrig17","","Bit 17 - Channel 17 Software Trigger",535,[[],["swtrig17_r",6]]],[11,"swtrig18","","Bit 18 - Channel 18 Software Trigger",535,[[],["swtrig18_r",6]]],[11,"swtrig19","","Bit 19 - Channel 19 Software Trigger",535,[[],["swtrig19_r",6]]],[11,"swtrig20","","Bit 20 - Channel 20 Software Trigger",535,[[],["swtrig20_r",6]]],[11,"swtrig21","","Bit 21 - Channel 21 Software Trigger",535,[[],["swtrig21_r",6]]],[11,"swtrig22","","Bit 22 - Channel 22 Software Trigger",535,[[],["swtrig22_r",6]]],[11,"swtrig23","","Bit 23 - Channel 23 Software Trigger",535,[[],["swtrig23_r",6]]],[11,"swtrig24","","Bit 24 - Channel 24 Software Trigger",535,[[],["swtrig24_r",6]]],[11,"swtrig25","","Bit 25 - Channel 25 Software Trigger",535,[[],["swtrig25_r",6]]],[11,"swtrig26","","Bit 26 - Channel 26 Software Trigger",535,[[],["swtrig26_r",6]]],[11,"swtrig27","","Bit 27 - Channel 27 Software Trigger",535,[[],["swtrig27_r",6]]],[11,"swtrig28","","Bit 28 - Channel 28 Software Trigger",535,[[],["swtrig28_r",6]]],[11,"swtrig29","","Bit 29 - Channel 29 Software Trigger",535,[[],["swtrig29_r",6]]],[11,"swtrig30","","Bit 30 - Channel 30 Software Trigger",535,[[],["swtrig30_r",6]]],[11,"swtrig31","","Bit 31 - Channel 31 Software Trigger",535,[[],["swtrig31_r",6]]],[11,"swtrig0","atsamd51g::generic","Bit 0 - Channel 0 Software Trigger",7,[[],["swtrig0_w",3]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",7,[[],["swtrig1_w",3]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",7,[[],["swtrig2_w",3]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",7,[[],["swtrig3_w",3]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",7,[[],["swtrig4_w",3]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",7,[[],["swtrig5_w",3]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",7,[[],["swtrig6_w",3]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",7,[[],["swtrig7_w",3]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",7,[[],["swtrig8_w",3]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",7,[[],["swtrig9_w",3]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",7,[[],["swtrig10_w",3]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",7,[[],["swtrig11_w",3]]],[11,"swtrig12","","Bit 12 - Channel 12 Software Trigger",7,[[],["swtrig12_w",3]]],[11,"swtrig13","","Bit 13 - Channel 13 Software Trigger",7,[[],["swtrig13_w",3]]],[11,"swtrig14","","Bit 14 - Channel 14 Software Trigger",7,[[],["swtrig14_w",3]]],[11,"swtrig15","","Bit 15 - Channel 15 Software Trigger",7,[[],["swtrig15_w",3]]],[11,"swtrig16","","Bit 16 - Channel 16 Software Trigger",7,[[],["swtrig16_w",3]]],[11,"swtrig17","","Bit 17 - Channel 17 Software Trigger",7,[[],["swtrig17_w",3]]],[11,"swtrig18","","Bit 18 - Channel 18 Software Trigger",7,[[],["swtrig18_w",3]]],[11,"swtrig19","","Bit 19 - Channel 19 Software Trigger",7,[[],["swtrig19_w",3]]],[11,"swtrig20","","Bit 20 - Channel 20 Software Trigger",7,[[],["swtrig20_w",3]]],[11,"swtrig21","","Bit 21 - Channel 21 Software Trigger",7,[[],["swtrig21_w",3]]],[11,"swtrig22","","Bit 22 - Channel 22 Software Trigger",7,[[],["swtrig22_w",3]]],[11,"swtrig23","","Bit 23 - Channel 23 Software Trigger",7,[[],["swtrig23_w",3]]],[11,"swtrig24","","Bit 24 - Channel 24 Software Trigger",7,[[],["swtrig24_w",3]]],[11,"swtrig25","","Bit 25 - Channel 25 Software Trigger",7,[[],["swtrig25_w",3]]],[11,"swtrig26","","Bit 26 - Channel 26 Software Trigger",7,[[],["swtrig26_w",3]]],[11,"swtrig27","","Bit 27 - Channel 27 Software Trigger",7,[[],["swtrig27_w",3]]],[11,"swtrig28","","Bit 28 - Channel 28 Software Trigger",7,[[],["swtrig28_w",3]]],[11,"swtrig29","","Bit 29 - Channel 29 Software Trigger",7,[[],["swtrig29_w",3]]],[11,"swtrig30","","Bit 30 - Channel 30 Software Trigger",7,[[],["swtrig30_w",3]]],[11,"swtrig31","","Bit 31 - Channel 31 Software Trigger",7,[[],["swtrig31_w",3]]],[11,"swtrig0","atsamd51g::dmac::swtrigctrl","Bit 0 - Channel 0 Software Trigger",536,[[],["swtrig0_w",3]]],[11,"swtrig1","","Bit 1 - Channel 1 Software Trigger",536,[[],["swtrig1_w",3]]],[11,"swtrig2","","Bit 2 - Channel 2 Software Trigger",536,[[],["swtrig2_w",3]]],[11,"swtrig3","","Bit 3 - Channel 3 Software Trigger",536,[[],["swtrig3_w",3]]],[11,"swtrig4","","Bit 4 - Channel 4 Software Trigger",536,[[],["swtrig4_w",3]]],[11,"swtrig5","","Bit 5 - Channel 5 Software Trigger",536,[[],["swtrig5_w",3]]],[11,"swtrig6","","Bit 6 - Channel 6 Software Trigger",536,[[],["swtrig6_w",3]]],[11,"swtrig7","","Bit 7 - Channel 7 Software Trigger",536,[[],["swtrig7_w",3]]],[11,"swtrig8","","Bit 8 - Channel 8 Software Trigger",536,[[],["swtrig8_w",3]]],[11,"swtrig9","","Bit 9 - Channel 9 Software Trigger",536,[[],["swtrig9_w",3]]],[11,"swtrig10","","Bit 10 - Channel 10 Software Trigger",536,[[],["swtrig10_w",3]]],[11,"swtrig11","","Bit 11 - Channel 11 Software Trigger",536,[[],["swtrig11_w",3]]],[11,"swtrig12","","Bit 12 - Channel 12 Software Trigger",536,[[],["swtrig12_w",3]]],[11,"swtrig13","","Bit 13 - Channel 13 Software Trigger",536,[[],["swtrig13_w",3]]],[11,"swtrig14","","Bit 14 - Channel 14 Software Trigger",536,[[],["swtrig14_w",3]]],[11,"swtrig15","","Bit 15 - Channel 15 Software Trigger",536,[[],["swtrig15_w",3]]],[11,"swtrig16","","Bit 16 - Channel 16 Software Trigger",536,[[],["swtrig16_w",3]]],[11,"swtrig17","","Bit 17 - Channel 17 Software Trigger",536,[[],["swtrig17_w",3]]],[11,"swtrig18","","Bit 18 - Channel 18 Software Trigger",536,[[],["swtrig18_w",3]]],[11,"swtrig19","","Bit 19 - Channel 19 Software Trigger",536,[[],["swtrig19_w",3]]],[11,"swtrig20","","Bit 20 - Channel 20 Software Trigger",536,[[],["swtrig20_w",3]]],[11,"swtrig21","","Bit 21 - Channel 21 Software Trigger",536,[[],["swtrig21_w",3]]],[11,"swtrig22","","Bit 22 - Channel 22 Software Trigger",536,[[],["swtrig22_w",3]]],[11,"swtrig23","","Bit 23 - Channel 23 Software Trigger",536,[[],["swtrig23_w",3]]],[11,"swtrig24","","Bit 24 - Channel 24 Software Trigger",536,[[],["swtrig24_w",3]]],[11,"swtrig25","","Bit 25 - Channel 25 Software Trigger",536,[[],["swtrig25_w",3]]],[11,"swtrig26","","Bit 26 - Channel 26 Software Trigger",536,[[],["swtrig26_w",3]]],[11,"swtrig27","","Bit 27 - Channel 27 Software Trigger",536,[[],["swtrig27_w",3]]],[11,"swtrig28","","Bit 28 - Channel 28 Software Trigger",536,[[],["swtrig28_w",3]]],[11,"swtrig29","","Bit 29 - Channel 29 Software Trigger",536,[[],["swtrig29_w",3]]],[11,"swtrig30","","Bit 30 - Channel 30 Software Trigger",536,[[],["swtrig30_w",3]]],[11,"swtrig31","","Bit 31 - Channel 31 Software Trigger",536,[[],["swtrig31_w",3]]],[0,"prictrl0","atsamd51g::dmac","Priority Control 0",null,null],[3,"LVLPRI0_W","atsamd51g::dmac::prictrl0","Write proxy for field `LVLPRI0`",null,null],[3,"QOS0_W","","Write proxy for field `QOS0`",null,null],[3,"RRLVLEN0_W","","Write proxy for field `RRLVLEN0`",null,null],[3,"LVLPRI1_W","","Write proxy for field `LVLPRI1`",null,null],[3,"QOS1_W","","Write proxy for field `QOS1`",null,null],[3,"RRLVLEN1_W","","Write proxy for field `RRLVLEN1`",null,null],[3,"LVLPRI2_W","","Write proxy for field `LVLPRI2`",null,null],[3,"QOS2_W","","Write proxy for field `QOS2`",null,null],[3,"RRLVLEN2_W","","Write proxy for field `RRLVLEN2`",null,null],[3,"LVLPRI3_W","","Write proxy for field `LVLPRI3`",null,null],[3,"QOS3_W","","Write proxy for field `QOS3`",null,null],[3,"RRLVLEN3_W","","Write proxy for field `RRLVLEN3`",null,null],[4,"QOS0_A","","Level 0 Quality of Service",null,null],[13,"REGULAR","","0: Regular delivery",537,null],[13,"SHORTAGE","","1: Bandwidth shortage",537,null],[13,"SENSITIVE","","2: Latency sensitive",537,null],[13,"CRITICAL","","3: Latency critical",537,null],[4,"QOS1_A","","Level 1 Quality of Service",null,null],[13,"REGULAR","","0: Regular delivery",538,null],[13,"SHORTAGE","","1: Bandwidth shortage",538,null],[13,"SENSITIVE","","2: Latency sensitive",538,null],[13,"CRITICAL","","3: Latency critical",538,null],[4,"QOS2_A","","Level 2 Quality of Service",null,null],[13,"REGULAR","","0: Regular delivery",539,null],[13,"SHORTAGE","","1: Bandwidth shortage",539,null],[13,"SENSITIVE","","2: Latency sensitive",539,null],[13,"CRITICAL","","3: Latency critical",539,null],[4,"QOS3_A","","Level 3 Quality of Service",null,null],[13,"REGULAR","","0: Regular delivery",540,null],[13,"SHORTAGE","","1: Bandwidth shortage",540,null],[13,"SENSITIVE","","2: Latency sensitive",540,null],[13,"CRITICAL","","3: Latency critical",540,null],[6,"R","","Reader of register PRICTRL0",null,null],[6,"W","","Writer for register PRICTRL0",null,null],[6,"LVLPRI0_R","","Reader of field `LVLPRI0`",null,null],[6,"QOS0_R","","Reader of field `QOS0`",null,null],[6,"RRLVLEN0_R","","Reader of field `RRLVLEN0`",null,null],[6,"LVLPRI1_R","","Reader of field `LVLPRI1`",null,null],[6,"QOS1_R","","Reader of field `QOS1`",null,null],[6,"RRLVLEN1_R","","Reader of field `RRLVLEN1`",null,null],[6,"LVLPRI2_R","","Reader of field `LVLPRI2`",null,null],[6,"QOS2_R","","Reader of field `QOS2`",null,null],[6,"RRLVLEN2_R","","Reader of field `RRLVLEN2`",null,null],[6,"LVLPRI3_R","","Reader of field `LVLPRI3`",null,null],[6,"QOS3_R","","Reader of field `QOS3`",null,null],[6,"RRLVLEN3_R","","Reader of field `RRLVLEN3`",null,null],[11,"bits","","Writes raw bits to the field",541,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["qos0_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",6,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",6,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",6,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",6,[[]]],[11,"variant","atsamd51g::dmac::prictrl0","Get enumerated values variant",542,[[],["qos0_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",542,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",542,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",542,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",542,[[]]],[11,"variant","","Writes `variant` to the field",543,[[["qos0_a",4]],["w",6]]],[11,"regular","","Regular delivery",543,[[],["w",6]]],[11,"shortage","","Bandwidth shortage",543,[[],["w",6]]],[11,"sensitive","","Latency sensitive",543,[[],["w",6]]],[11,"critical","","Latency critical",543,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",543,[[],["w",6]]],[11,"set_bit","","Sets the field bit",544,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",544,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",544,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",545,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["qos1_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",6,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",6,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",6,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",6,[[]]],[11,"variant","atsamd51g::dmac::prictrl0","Get enumerated values variant",546,[[],["qos1_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",546,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",546,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",546,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",546,[[]]],[11,"variant","","Writes `variant` to the field",547,[[["qos1_a",4]],["w",6]]],[11,"regular","","Regular delivery",547,[[],["w",6]]],[11,"shortage","","Bandwidth shortage",547,[[],["w",6]]],[11,"sensitive","","Latency sensitive",547,[[],["w",6]]],[11,"critical","","Latency critical",547,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",547,[[],["w",6]]],[11,"set_bit","","Sets the field bit",548,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",548,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",548,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",549,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["qos2_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",6,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",6,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",6,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",6,[[]]],[11,"variant","atsamd51g::dmac::prictrl0","Get enumerated values variant",550,[[],["qos2_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",550,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",550,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",550,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",550,[[]]],[11,"variant","","Writes `variant` to the field",551,[[["qos2_a",4]],["w",6]]],[11,"regular","","Regular delivery",551,[[],["w",6]]],[11,"shortage","","Bandwidth shortage",551,[[],["w",6]]],[11,"sensitive","","Latency sensitive",551,[[],["w",6]]],[11,"critical","","Latency critical",551,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",552,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",553,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["qos3_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",6,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",6,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",6,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",6,[[]]],[11,"variant","atsamd51g::dmac::prictrl0","Get enumerated values variant",554,[[],["qos3_a",4]]],[11,"is_regular","","Checks if the value of the field is `REGULAR`",554,[[]]],[11,"is_shortage","","Checks if the value of the field is `SHORTAGE`",554,[[]]],[11,"is_sensitive","","Checks if the value of the field is `SENSITIVE`",554,[[]]],[11,"is_critical","","Checks if the value of the field is `CRITICAL`",554,[[]]],[11,"variant","","Writes `variant` to the field",555,[[["qos3_a",4]],["w",6]]],[11,"regular","","Regular delivery",555,[[],["w",6]]],[11,"shortage","","Bandwidth shortage",555,[[],["w",6]]],[11,"sensitive","","Latency sensitive",555,[[],["w",6]]],[11,"critical","","Latency critical",555,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",555,[[],["w",6]]],[11,"set_bit","","Sets the field bit",556,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",556,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",556,[[],["w",6]]],[11,"lvlpri0","atsamd51g::generic","Bits 0:4 - Level 0 Channel Priority Number",6,[[],["lvlpri0_r",6]]],[11,"qos0","","Bits 5:6 - Level 0 Quality of Service",6,[[],["qos0_r",6]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",6,[[],["rrlvlen0_r",6]]],[11,"lvlpri1","","Bits 8:12 - Level 1 Channel Priority Number",6,[[],["lvlpri1_r",6]]],[11,"qos1","","Bits 13:14 - Level 1 Quality of Service",6,[[],["qos1_r",6]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",6,[[],["rrlvlen1_r",6]]],[11,"lvlpri2","","Bits 16:20 - Level 2 Channel Priority Number",6,[[],["lvlpri2_r",6]]],[11,"qos2","","Bits 21:22 - Level 2 Quality of Service",6,[[],["qos2_r",6]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",6,[[],["rrlvlen2_r",6]]],[11,"lvlpri3","","Bits 24:28 - Level 3 Channel Priority Number",6,[[],["lvlpri3_r",6]]],[11,"qos3","","Bits 29:30 - Level 3 Quality of Service",6,[[],["qos3_r",6]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",6,[[],["rrlvlen3_r",6]]],[11,"lvlpri0","atsamd51g::dmac::prictrl0","Bits 0:4 - Level 0 Channel Priority Number",557,[[],["lvlpri0_r",6]]],[11,"qos0","","Bits 5:6 - Level 0 Quality of Service",557,[[],["qos0_r",6]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",557,[[],["rrlvlen0_r",6]]],[11,"lvlpri1","","Bits 8:12 - Level 1 Channel Priority Number",557,[[],["lvlpri1_r",6]]],[11,"qos1","","Bits 13:14 - Level 1 Quality of Service",557,[[],["qos1_r",6]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",557,[[],["rrlvlen1_r",6]]],[11,"lvlpri2","","Bits 16:20 - Level 2 Channel Priority Number",557,[[],["lvlpri2_r",6]]],[11,"qos2","","Bits 21:22 - Level 2 Quality of Service",557,[[],["qos2_r",6]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",557,[[],["rrlvlen2_r",6]]],[11,"lvlpri3","","Bits 24:28 - Level 3 Channel Priority Number",557,[[],["lvlpri3_r",6]]],[11,"qos3","","Bits 29:30 - Level 3 Quality of Service",557,[[],["qos3_r",6]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",557,[[],["rrlvlen3_r",6]]],[11,"lvlpri0","atsamd51g::generic","Bits 0:4 - Level 0 Channel Priority Number",7,[[],["lvlpri0_w",3]]],[11,"qos0","","Bits 5:6 - Level 0 Quality of Service",7,[[],["qos0_w",3]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",7,[[],["rrlvlen0_w",3]]],[11,"lvlpri1","","Bits 8:12 - Level 1 Channel Priority Number",7,[[],["lvlpri1_w",3]]],[11,"qos1","","Bits 13:14 - Level 1 Quality of Service",7,[[],["qos1_w",3]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",7,[[],["rrlvlen1_w",3]]],[11,"lvlpri2","","Bits 16:20 - Level 2 Channel Priority Number",7,[[],["lvlpri2_w",3]]],[11,"qos2","","Bits 21:22 - Level 2 Quality of Service",7,[[],["qos2_w",3]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",7,[[],["rrlvlen2_w",3]]],[11,"lvlpri3","","Bits 24:28 - Level 3 Channel Priority Number",7,[[],["lvlpri3_w",3]]],[11,"qos3","","Bits 29:30 - Level 3 Quality of Service",7,[[],["qos3_w",3]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",7,[[],["rrlvlen3_w",3]]],[11,"lvlpri0","atsamd51g::dmac::prictrl0","Bits 0:4 - Level 0 Channel Priority Number",558,[[],["lvlpri0_w",3]]],[11,"qos0","","Bits 5:6 - Level 0 Quality of Service",558,[[],["qos0_w",3]]],[11,"rrlvlen0","","Bit 7 - Level 0 Round-Robin Scheduling Enable",558,[[],["rrlvlen0_w",3]]],[11,"lvlpri1","","Bits 8:12 - Level 1 Channel Priority Number",558,[[],["lvlpri1_w",3]]],[11,"qos1","","Bits 13:14 - Level 1 Quality of Service",558,[[],["qos1_w",3]]],[11,"rrlvlen1","","Bit 15 - Level 1 Round-Robin Scheduling Enable",558,[[],["rrlvlen1_w",3]]],[11,"lvlpri2","","Bits 16:20 - Level 2 Channel Priority Number",558,[[],["lvlpri2_w",3]]],[11,"qos2","","Bits 21:22 - Level 2 Quality of Service",558,[[],["qos2_w",3]]],[11,"rrlvlen2","","Bit 23 - Level 2 Round-Robin Scheduling Enable",558,[[],["rrlvlen2_w",3]]],[11,"lvlpri3","","Bits 24:28 - Level 3 Channel Priority Number",558,[[],["lvlpri3_w",3]]],[11,"qos3","","Bits 29:30 - Level 3 Quality of Service",558,[[],["qos3_w",3]]],[11,"rrlvlen3","","Bit 31 - Level 3 Round-Robin Scheduling Enable",558,[[],["rrlvlen3_w",3]]],[0,"intpend","atsamd51g::dmac","Interrupt Pending",null,null],[3,"ID_W","atsamd51g::dmac::intpend","Write proxy for field `ID`",null,null],[3,"TERR_W","","Write proxy for field `TERR`",null,null],[3,"TCMPL_W","","Write proxy for field `TCMPL`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[3,"CRCERR_W","","Write proxy for field `CRCERR`",null,null],[3,"FERR_W","","Write proxy for field `FERR`",null,null],[3,"BUSY_W","","Write proxy for field `BUSY`",null,null],[3,"PEND_W","","Write proxy for field `PEND`",null,null],[6,"R","","Reader of register INTPEND",null,null],[6,"W","","Writer for register INTPEND",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"TERR_R","","Reader of field `TERR`",null,null],[6,"TCMPL_R","","Reader of field `TCMPL`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"CRCERR_R","","Reader of field `CRCERR`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"PEND_R","","Reader of field `PEND`",null,null],[11,"bits","","Writes raw bits to the field",559,[[],["w",6]]],[11,"set_bit","","Sets the field bit",560,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",560,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",560,[[],["w",6]]],[11,"set_bit","","Sets the field bit",561,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",561,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",561,[[],["w",6]]],[11,"set_bit","","Sets the field bit",562,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",562,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",562,[[],["w",6]]],[11,"set_bit","","Sets the field bit",563,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",563,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",563,[[],["w",6]]],[11,"set_bit","","Sets the field bit",564,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",564,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",564,[[],["w",6]]],[11,"set_bit","","Sets the field bit",565,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",565,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",565,[[],["w",6]]],[11,"set_bit","","Sets the field bit",566,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",566,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",566,[[],["w",6]]],[11,"id","atsamd51g::generic","Bits 0:4 - Channel ID",6,[[],["id_r",6]]],[11,"terr","","Bit 8 - Transfer Error",6,[[],["terr_r",6]]],[11,"tcmpl","","Bit 9 - Transfer Complete",6,[[],["tcmpl_r",6]]],[11,"susp","","Bit 10 - Channel Suspend",6,[[],["susp_r",6]]],[11,"crcerr","","Bit 12 - CRC Error",6,[[],["crcerr_r",6]]],[11,"ferr","","Bit 13 - Fetch Error",6,[[],["ferr_r",6]]],[11,"busy","","Bit 14 - Busy",6,[[],["busy_r",6]]],[11,"pend","","Bit 15 - Pending",6,[[],["pend_r",6]]],[11,"id","atsamd51g::dmac::intpend","Bits 0:4 - Channel ID",567,[[],["id_r",6]]],[11,"terr","","Bit 8 - Transfer Error",567,[[],["terr_r",6]]],[11,"tcmpl","","Bit 9 - Transfer Complete",567,[[],["tcmpl_r",6]]],[11,"susp","","Bit 10 - Channel Suspend",567,[[],["susp_r",6]]],[11,"crcerr","","Bit 12 - CRC Error",567,[[],["crcerr_r",6]]],[11,"ferr","","Bit 13 - Fetch Error",567,[[],["ferr_r",6]]],[11,"busy","","Bit 14 - Busy",567,[[],["busy_r",6]]],[11,"pend","","Bit 15 - Pending",567,[[],["pend_r",6]]],[11,"id","atsamd51g::generic","Bits 0:4 - Channel ID",7,[[],["id_w",3]]],[11,"terr","","Bit 8 - Transfer Error",7,[[],["terr_w",3]]],[11,"tcmpl","","Bit 9 - Transfer Complete",7,[[],["tcmpl_w",3]]],[11,"susp","","Bit 10 - Channel Suspend",7,[[],["susp_w",3]]],[11,"crcerr","","Bit 12 - CRC Error",7,[[],["crcerr_w",3]]],[11,"ferr","","Bit 13 - Fetch Error",7,[[],["ferr_w",3]]],[11,"busy","","Bit 14 - Busy",7,[[],["busy_w",3]]],[11,"pend","","Bit 15 - Pending",7,[[],["pend_w",3]]],[11,"id","atsamd51g::dmac::intpend","Bits 0:4 - Channel ID",568,[[],["id_w",3]]],[11,"terr","","Bit 8 - Transfer Error",568,[[],["terr_w",3]]],[11,"tcmpl","","Bit 9 - Transfer Complete",568,[[],["tcmpl_w",3]]],[11,"susp","","Bit 10 - Channel Suspend",568,[[],["susp_w",3]]],[11,"crcerr","","Bit 12 - CRC Error",568,[[],["crcerr_w",3]]],[11,"ferr","","Bit 13 - Fetch Error",568,[[],["ferr_w",3]]],[11,"busy","","Bit 14 - Busy",568,[[],["busy_w",3]]],[11,"pend","","Bit 15 - Pending",568,[[],["pend_w",3]]],[0,"intstatus","atsamd51g::dmac","Interrupt Status",null,null],[6,"R","atsamd51g::dmac::intstatus","Reader of register INTSTATUS",null,null],[6,"CHINT0_R","","Reader of field `CHINT0`",null,null],[6,"CHINT1_R","","Reader of field `CHINT1`",null,null],[6,"CHINT2_R","","Reader of field `CHINT2`",null,null],[6,"CHINT3_R","","Reader of field `CHINT3`",null,null],[6,"CHINT4_R","","Reader of field `CHINT4`",null,null],[6,"CHINT5_R","","Reader of field `CHINT5`",null,null],[6,"CHINT6_R","","Reader of field `CHINT6`",null,null],[6,"CHINT7_R","","Reader of field `CHINT7`",null,null],[6,"CHINT8_R","","Reader of field `CHINT8`",null,null],[6,"CHINT9_R","","Reader of field `CHINT9`",null,null],[6,"CHINT10_R","","Reader of field `CHINT10`",null,null],[6,"CHINT11_R","","Reader of field `CHINT11`",null,null],[6,"CHINT12_R","","Reader of field `CHINT12`",null,null],[6,"CHINT13_R","","Reader of field `CHINT13`",null,null],[6,"CHINT14_R","","Reader of field `CHINT14`",null,null],[6,"CHINT15_R","","Reader of field `CHINT15`",null,null],[6,"CHINT16_R","","Reader of field `CHINT16`",null,null],[6,"CHINT17_R","","Reader of field `CHINT17`",null,null],[6,"CHINT18_R","","Reader of field `CHINT18`",null,null],[6,"CHINT19_R","","Reader of field `CHINT19`",null,null],[6,"CHINT20_R","","Reader of field `CHINT20`",null,null],[6,"CHINT21_R","","Reader of field `CHINT21`",null,null],[6,"CHINT22_R","","Reader of field `CHINT22`",null,null],[6,"CHINT23_R","","Reader of field `CHINT23`",null,null],[6,"CHINT24_R","","Reader of field `CHINT24`",null,null],[6,"CHINT25_R","","Reader of field `CHINT25`",null,null],[6,"CHINT26_R","","Reader of field `CHINT26`",null,null],[6,"CHINT27_R","","Reader of field `CHINT27`",null,null],[6,"CHINT28_R","","Reader of field `CHINT28`",null,null],[6,"CHINT29_R","","Reader of field `CHINT29`",null,null],[6,"CHINT30_R","","Reader of field `CHINT30`",null,null],[6,"CHINT31_R","","Reader of field `CHINT31`",null,null],[11,"chint0","atsamd51g::generic","Bit 0 - Channel 0 Pending Interrupt",6,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",6,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",6,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",6,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",6,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",6,[[],["chint5_r",6]]],[11,"chint6","","Bit 6 - Channel 6 Pending Interrupt",6,[[],["chint6_r",6]]],[11,"chint7","","Bit 7 - Channel 7 Pending Interrupt",6,[[],["chint7_r",6]]],[11,"chint8","","Bit 8 - Channel 8 Pending Interrupt",6,[[],["chint8_r",6]]],[11,"chint9","","Bit 9 - Channel 9 Pending Interrupt",6,[[],["chint9_r",6]]],[11,"chint10","","Bit 10 - Channel 10 Pending Interrupt",6,[[],["chint10_r",6]]],[11,"chint11","","Bit 11 - Channel 11 Pending Interrupt",6,[[],["chint11_r",6]]],[11,"chint12","","Bit 12 - Channel 12 Pending Interrupt",6,[[],["chint12_r",6]]],[11,"chint13","","Bit 13 - Channel 13 Pending Interrupt",6,[[],["chint13_r",6]]],[11,"chint14","","Bit 14 - Channel 14 Pending Interrupt",6,[[],["chint14_r",6]]],[11,"chint15","","Bit 15 - Channel 15 Pending Interrupt",6,[[],["chint15_r",6]]],[11,"chint16","","Bit 16 - Channel 16 Pending Interrupt",6,[[],["chint16_r",6]]],[11,"chint17","","Bit 17 - Channel 17 Pending Interrupt",6,[[],["chint17_r",6]]],[11,"chint18","","Bit 18 - Channel 18 Pending Interrupt",6,[[],["chint18_r",6]]],[11,"chint19","","Bit 19 - Channel 19 Pending Interrupt",6,[[],["chint19_r",6]]],[11,"chint20","","Bit 20 - Channel 20 Pending Interrupt",6,[[],["chint20_r",6]]],[11,"chint21","","Bit 21 - Channel 21 Pending Interrupt",6,[[],["chint21_r",6]]],[11,"chint22","","Bit 22 - Channel 22 Pending Interrupt",6,[[],["chint22_r",6]]],[11,"chint23","","Bit 23 - Channel 23 Pending Interrupt",6,[[],["chint23_r",6]]],[11,"chint24","","Bit 24 - Channel 24 Pending Interrupt",6,[[],["chint24_r",6]]],[11,"chint25","","Bit 25 - Channel 25 Pending Interrupt",6,[[],["chint25_r",6]]],[11,"chint26","","Bit 26 - Channel 26 Pending Interrupt",6,[[],["chint26_r",6]]],[11,"chint27","","Bit 27 - Channel 27 Pending Interrupt",6,[[],["chint27_r",6]]],[11,"chint28","","Bit 28 - Channel 28 Pending Interrupt",6,[[],["chint28_r",6]]],[11,"chint29","","Bit 29 - Channel 29 Pending Interrupt",6,[[],["chint29_r",6]]],[11,"chint30","","Bit 30 - Channel 30 Pending Interrupt",6,[[],["chint30_r",6]]],[11,"chint31","","Bit 31 - Channel 31 Pending Interrupt",6,[[],["chint31_r",6]]],[11,"chint0","atsamd51g::dmac::intstatus","Bit 0 - Channel 0 Pending Interrupt",569,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",569,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",569,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",569,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",569,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",569,[[],["chint5_r",6]]],[11,"chint6","","Bit 6 - Channel 6 Pending Interrupt",569,[[],["chint6_r",6]]],[11,"chint7","","Bit 7 - Channel 7 Pending Interrupt",569,[[],["chint7_r",6]]],[11,"chint8","","Bit 8 - Channel 8 Pending Interrupt",569,[[],["chint8_r",6]]],[11,"chint9","","Bit 9 - Channel 9 Pending Interrupt",569,[[],["chint9_r",6]]],[11,"chint10","","Bit 10 - Channel 10 Pending Interrupt",569,[[],["chint10_r",6]]],[11,"chint11","","Bit 11 - Channel 11 Pending Interrupt",569,[[],["chint11_r",6]]],[11,"chint12","","Bit 12 - Channel 12 Pending Interrupt",569,[[],["chint12_r",6]]],[11,"chint13","","Bit 13 - Channel 13 Pending Interrupt",569,[[],["chint13_r",6]]],[11,"chint14","","Bit 14 - Channel 14 Pending Interrupt",569,[[],["chint14_r",6]]],[11,"chint15","","Bit 15 - Channel 15 Pending Interrupt",569,[[],["chint15_r",6]]],[11,"chint16","","Bit 16 - Channel 16 Pending Interrupt",569,[[],["chint16_r",6]]],[11,"chint17","","Bit 17 - Channel 17 Pending Interrupt",569,[[],["chint17_r",6]]],[11,"chint18","","Bit 18 - Channel 18 Pending Interrupt",569,[[],["chint18_r",6]]],[11,"chint19","","Bit 19 - Channel 19 Pending Interrupt",569,[[],["chint19_r",6]]],[11,"chint20","","Bit 20 - Channel 20 Pending Interrupt",569,[[],["chint20_r",6]]],[11,"chint21","","Bit 21 - Channel 21 Pending Interrupt",569,[[],["chint21_r",6]]],[11,"chint22","","Bit 22 - Channel 22 Pending Interrupt",569,[[],["chint22_r",6]]],[11,"chint23","","Bit 23 - Channel 23 Pending Interrupt",569,[[],["chint23_r",6]]],[11,"chint24","","Bit 24 - Channel 24 Pending Interrupt",569,[[],["chint24_r",6]]],[11,"chint25","","Bit 25 - Channel 25 Pending Interrupt",569,[[],["chint25_r",6]]],[11,"chint26","","Bit 26 - Channel 26 Pending Interrupt",569,[[],["chint26_r",6]]],[11,"chint27","","Bit 27 - Channel 27 Pending Interrupt",569,[[],["chint27_r",6]]],[11,"chint28","","Bit 28 - Channel 28 Pending Interrupt",569,[[],["chint28_r",6]]],[11,"chint29","","Bit 29 - Channel 29 Pending Interrupt",569,[[],["chint29_r",6]]],[11,"chint30","","Bit 30 - Channel 30 Pending Interrupt",569,[[],["chint30_r",6]]],[11,"chint31","","Bit 31 - Channel 31 Pending Interrupt",569,[[],["chint31_r",6]]],[0,"busych","atsamd51g::dmac","Busy Channels",null,null],[6,"R","atsamd51g::dmac::busych","Reader of register BUSYCH",null,null],[6,"BUSYCH0_R","","Reader of field `BUSYCH0`",null,null],[6,"BUSYCH1_R","","Reader of field `BUSYCH1`",null,null],[6,"BUSYCH2_R","","Reader of field `BUSYCH2`",null,null],[6,"BUSYCH3_R","","Reader of field `BUSYCH3`",null,null],[6,"BUSYCH4_R","","Reader of field `BUSYCH4`",null,null],[6,"BUSYCH5_R","","Reader of field `BUSYCH5`",null,null],[6,"BUSYCH6_R","","Reader of field `BUSYCH6`",null,null],[6,"BUSYCH7_R","","Reader of field `BUSYCH7`",null,null],[6,"BUSYCH8_R","","Reader of field `BUSYCH8`",null,null],[6,"BUSYCH9_R","","Reader of field `BUSYCH9`",null,null],[6,"BUSYCH10_R","","Reader of field `BUSYCH10`",null,null],[6,"BUSYCH11_R","","Reader of field `BUSYCH11`",null,null],[6,"BUSYCH12_R","","Reader of field `BUSYCH12`",null,null],[6,"BUSYCH13_R","","Reader of field `BUSYCH13`",null,null],[6,"BUSYCH14_R","","Reader of field `BUSYCH14`",null,null],[6,"BUSYCH15_R","","Reader of field `BUSYCH15`",null,null],[6,"BUSYCH16_R","","Reader of field `BUSYCH16`",null,null],[6,"BUSYCH17_R","","Reader of field `BUSYCH17`",null,null],[6,"BUSYCH18_R","","Reader of field `BUSYCH18`",null,null],[6,"BUSYCH19_R","","Reader of field `BUSYCH19`",null,null],[6,"BUSYCH20_R","","Reader of field `BUSYCH20`",null,null],[6,"BUSYCH21_R","","Reader of field `BUSYCH21`",null,null],[6,"BUSYCH22_R","","Reader of field `BUSYCH22`",null,null],[6,"BUSYCH23_R","","Reader of field `BUSYCH23`",null,null],[6,"BUSYCH24_R","","Reader of field `BUSYCH24`",null,null],[6,"BUSYCH25_R","","Reader of field `BUSYCH25`",null,null],[6,"BUSYCH26_R","","Reader of field `BUSYCH26`",null,null],[6,"BUSYCH27_R","","Reader of field `BUSYCH27`",null,null],[6,"BUSYCH28_R","","Reader of field `BUSYCH28`",null,null],[6,"BUSYCH29_R","","Reader of field `BUSYCH29`",null,null],[6,"BUSYCH30_R","","Reader of field `BUSYCH30`",null,null],[6,"BUSYCH31_R","","Reader of field `BUSYCH31`",null,null],[11,"busych0","atsamd51g::generic","Bit 0 - Busy Channel 0",6,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",6,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",6,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",6,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",6,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",6,[[],["busych5_r",6]]],[11,"busych6","","Bit 6 - Busy Channel 6",6,[[],["busych6_r",6]]],[11,"busych7","","Bit 7 - Busy Channel 7",6,[[],["busych7_r",6]]],[11,"busych8","","Bit 8 - Busy Channel 8",6,[[],["busych8_r",6]]],[11,"busych9","","Bit 9 - Busy Channel 9",6,[[],["busych9_r",6]]],[11,"busych10","","Bit 10 - Busy Channel 10",6,[[],["busych10_r",6]]],[11,"busych11","","Bit 11 - Busy Channel 11",6,[[],["busych11_r",6]]],[11,"busych12","","Bit 12 - Busy Channel 12",6,[[],["busych12_r",6]]],[11,"busych13","","Bit 13 - Busy Channel 13",6,[[],["busych13_r",6]]],[11,"busych14","","Bit 14 - Busy Channel 14",6,[[],["busych14_r",6]]],[11,"busych15","","Bit 15 - Busy Channel 15",6,[[],["busych15_r",6]]],[11,"busych16","","Bit 16 - Busy Channel 16",6,[[],["busych16_r",6]]],[11,"busych17","","Bit 17 - Busy Channel 17",6,[[],["busych17_r",6]]],[11,"busych18","","Bit 18 - Busy Channel 18",6,[[],["busych18_r",6]]],[11,"busych19","","Bit 19 - Busy Channel 19",6,[[],["busych19_r",6]]],[11,"busych20","","Bit 20 - Busy Channel 20",6,[[],["busych20_r",6]]],[11,"busych21","","Bit 21 - Busy Channel 21",6,[[],["busych21_r",6]]],[11,"busych22","","Bit 22 - Busy Channel 22",6,[[],["busych22_r",6]]],[11,"busych23","","Bit 23 - Busy Channel 23",6,[[],["busych23_r",6]]],[11,"busych24","","Bit 24 - Busy Channel 24",6,[[],["busych24_r",6]]],[11,"busych25","","Bit 25 - Busy Channel 25",6,[[],["busych25_r",6]]],[11,"busych26","","Bit 26 - Busy Channel 26",6,[[],["busych26_r",6]]],[11,"busych27","","Bit 27 - Busy Channel 27",6,[[],["busych27_r",6]]],[11,"busych28","","Bit 28 - Busy Channel 28",6,[[],["busych28_r",6]]],[11,"busych29","","Bit 29 - Busy Channel 29",6,[[],["busych29_r",6]]],[11,"busych30","","Bit 30 - Busy Channel 30",6,[[],["busych30_r",6]]],[11,"busych31","","Bit 31 - Busy Channel 31",6,[[],["busych31_r",6]]],[11,"busych0","atsamd51g::dmac::busych","Bit 0 - Busy Channel 0",570,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",570,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",570,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",570,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",570,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",570,[[],["busych5_r",6]]],[11,"busych6","","Bit 6 - Busy Channel 6",570,[[],["busych6_r",6]]],[11,"busych7","","Bit 7 - Busy Channel 7",570,[[],["busych7_r",6]]],[11,"busych8","","Bit 8 - Busy Channel 8",570,[[],["busych8_r",6]]],[11,"busych9","","Bit 9 - Busy Channel 9",570,[[],["busych9_r",6]]],[11,"busych10","","Bit 10 - Busy Channel 10",570,[[],["busych10_r",6]]],[11,"busych11","","Bit 11 - Busy Channel 11",570,[[],["busych11_r",6]]],[11,"busych12","","Bit 12 - Busy Channel 12",570,[[],["busych12_r",6]]],[11,"busych13","","Bit 13 - Busy Channel 13",570,[[],["busych13_r",6]]],[11,"busych14","","Bit 14 - Busy Channel 14",570,[[],["busych14_r",6]]],[11,"busych15","","Bit 15 - Busy Channel 15",570,[[],["busych15_r",6]]],[11,"busych16","","Bit 16 - Busy Channel 16",570,[[],["busych16_r",6]]],[11,"busych17","","Bit 17 - Busy Channel 17",570,[[],["busych17_r",6]]],[11,"busych18","","Bit 18 - Busy Channel 18",570,[[],["busych18_r",6]]],[11,"busych19","","Bit 19 - Busy Channel 19",570,[[],["busych19_r",6]]],[11,"busych20","","Bit 20 - Busy Channel 20",570,[[],["busych20_r",6]]],[11,"busych21","","Bit 21 - Busy Channel 21",570,[[],["busych21_r",6]]],[11,"busych22","","Bit 22 - Busy Channel 22",570,[[],["busych22_r",6]]],[11,"busych23","","Bit 23 - Busy Channel 23",570,[[],["busych23_r",6]]],[11,"busych24","","Bit 24 - Busy Channel 24",570,[[],["busych24_r",6]]],[11,"busych25","","Bit 25 - Busy Channel 25",570,[[],["busych25_r",6]]],[11,"busych26","","Bit 26 - Busy Channel 26",570,[[],["busych26_r",6]]],[11,"busych27","","Bit 27 - Busy Channel 27",570,[[],["busych27_r",6]]],[11,"busych28","","Bit 28 - Busy Channel 28",570,[[],["busych28_r",6]]],[11,"busych29","","Bit 29 - Busy Channel 29",570,[[],["busych29_r",6]]],[11,"busych30","","Bit 30 - Busy Channel 30",570,[[],["busych30_r",6]]],[11,"busych31","","Bit 31 - Busy Channel 31",570,[[],["busych31_r",6]]],[0,"pendch","atsamd51g::dmac","Pending Channels",null,null],[6,"R","atsamd51g::dmac::pendch","Reader of register PENDCH",null,null],[6,"PENDCH0_R","","Reader of field `PENDCH0`",null,null],[6,"PENDCH1_R","","Reader of field `PENDCH1`",null,null],[6,"PENDCH2_R","","Reader of field `PENDCH2`",null,null],[6,"PENDCH3_R","","Reader of field `PENDCH3`",null,null],[6,"PENDCH4_R","","Reader of field `PENDCH4`",null,null],[6,"PENDCH5_R","","Reader of field `PENDCH5`",null,null],[6,"PENDCH6_R","","Reader of field `PENDCH6`",null,null],[6,"PENDCH7_R","","Reader of field `PENDCH7`",null,null],[6,"PENDCH8_R","","Reader of field `PENDCH8`",null,null],[6,"PENDCH9_R","","Reader of field `PENDCH9`",null,null],[6,"PENDCH10_R","","Reader of field `PENDCH10`",null,null],[6,"PENDCH11_R","","Reader of field `PENDCH11`",null,null],[6,"PENDCH12_R","","Reader of field `PENDCH12`",null,null],[6,"PENDCH13_R","","Reader of field `PENDCH13`",null,null],[6,"PENDCH14_R","","Reader of field `PENDCH14`",null,null],[6,"PENDCH15_R","","Reader of field `PENDCH15`",null,null],[6,"PENDCH16_R","","Reader of field `PENDCH16`",null,null],[6,"PENDCH17_R","","Reader of field `PENDCH17`",null,null],[6,"PENDCH18_R","","Reader of field `PENDCH18`",null,null],[6,"PENDCH19_R","","Reader of field `PENDCH19`",null,null],[6,"PENDCH20_R","","Reader of field `PENDCH20`",null,null],[6,"PENDCH21_R","","Reader of field `PENDCH21`",null,null],[6,"PENDCH22_R","","Reader of field `PENDCH22`",null,null],[6,"PENDCH23_R","","Reader of field `PENDCH23`",null,null],[6,"PENDCH24_R","","Reader of field `PENDCH24`",null,null],[6,"PENDCH25_R","","Reader of field `PENDCH25`",null,null],[6,"PENDCH26_R","","Reader of field `PENDCH26`",null,null],[6,"PENDCH27_R","","Reader of field `PENDCH27`",null,null],[6,"PENDCH28_R","","Reader of field `PENDCH28`",null,null],[6,"PENDCH29_R","","Reader of field `PENDCH29`",null,null],[6,"PENDCH30_R","","Reader of field `PENDCH30`",null,null],[6,"PENDCH31_R","","Reader of field `PENDCH31`",null,null],[11,"pendch0","atsamd51g::generic","Bit 0 - Pending Channel 0",6,[[],["pendch0_r",6]]],[11,"pendch1","","Bit 1 - Pending Channel 1",6,[[],["pendch1_r",6]]],[11,"pendch2","","Bit 2 - Pending Channel 2",6,[[],["pendch2_r",6]]],[11,"pendch3","","Bit 3 - Pending Channel 3",6,[[],["pendch3_r",6]]],[11,"pendch4","","Bit 4 - Pending Channel 4",6,[[],["pendch4_r",6]]],[11,"pendch5","","Bit 5 - Pending Channel 5",6,[[],["pendch5_r",6]]],[11,"pendch6","","Bit 6 - Pending Channel 6",6,[[],["pendch6_r",6]]],[11,"pendch7","","Bit 7 - Pending Channel 7",6,[[],["pendch7_r",6]]],[11,"pendch8","","Bit 8 - Pending Channel 8",6,[[],["pendch8_r",6]]],[11,"pendch9","","Bit 9 - Pending Channel 9",6,[[],["pendch9_r",6]]],[11,"pendch10","","Bit 10 - Pending Channel 10",6,[[],["pendch10_r",6]]],[11,"pendch11","","Bit 11 - Pending Channel 11",6,[[],["pendch11_r",6]]],[11,"pendch12","","Bit 12 - Pending Channel 12",6,[[],["pendch12_r",6]]],[11,"pendch13","","Bit 13 - Pending Channel 13",6,[[],["pendch13_r",6]]],[11,"pendch14","","Bit 14 - Pending Channel 14",6,[[],["pendch14_r",6]]],[11,"pendch15","","Bit 15 - Pending Channel 15",6,[[],["pendch15_r",6]]],[11,"pendch16","","Bit 16 - Pending Channel 16",6,[[],["pendch16_r",6]]],[11,"pendch17","","Bit 17 - Pending Channel 17",6,[[],["pendch17_r",6]]],[11,"pendch18","","Bit 18 - Pending Channel 18",6,[[],["pendch18_r",6]]],[11,"pendch19","","Bit 19 - Pending Channel 19",6,[[],["pendch19_r",6]]],[11,"pendch20","","Bit 20 - Pending Channel 20",6,[[],["pendch20_r",6]]],[11,"pendch21","","Bit 21 - Pending Channel 21",6,[[],["pendch21_r",6]]],[11,"pendch22","","Bit 22 - Pending Channel 22",6,[[],["pendch22_r",6]]],[11,"pendch23","","Bit 23 - Pending Channel 23",6,[[],["pendch23_r",6]]],[11,"pendch24","","Bit 24 - Pending Channel 24",6,[[],["pendch24_r",6]]],[11,"pendch25","","Bit 25 - Pending Channel 25",6,[[],["pendch25_r",6]]],[11,"pendch26","","Bit 26 - Pending Channel 26",6,[[],["pendch26_r",6]]],[11,"pendch27","","Bit 27 - Pending Channel 27",6,[[],["pendch27_r",6]]],[11,"pendch28","","Bit 28 - Pending Channel 28",6,[[],["pendch28_r",6]]],[11,"pendch29","","Bit 29 - Pending Channel 29",6,[[],["pendch29_r",6]]],[11,"pendch30","","Bit 30 - Pending Channel 30",6,[[],["pendch30_r",6]]],[11,"pendch31","","Bit 31 - Pending Channel 31",6,[[],["pendch31_r",6]]],[11,"pendch0","atsamd51g::dmac::pendch","Bit 0 - Pending Channel 0",571,[[],["pendch0_r",6]]],[11,"pendch1","","Bit 1 - Pending Channel 1",571,[[],["pendch1_r",6]]],[11,"pendch2","","Bit 2 - Pending Channel 2",571,[[],["pendch2_r",6]]],[11,"pendch3","","Bit 3 - Pending Channel 3",571,[[],["pendch3_r",6]]],[11,"pendch4","","Bit 4 - Pending Channel 4",571,[[],["pendch4_r",6]]],[11,"pendch5","","Bit 5 - Pending Channel 5",571,[[],["pendch5_r",6]]],[11,"pendch6","","Bit 6 - Pending Channel 6",571,[[],["pendch6_r",6]]],[11,"pendch7","","Bit 7 - Pending Channel 7",571,[[],["pendch7_r",6]]],[11,"pendch8","","Bit 8 - Pending Channel 8",571,[[],["pendch8_r",6]]],[11,"pendch9","","Bit 9 - Pending Channel 9",571,[[],["pendch9_r",6]]],[11,"pendch10","","Bit 10 - Pending Channel 10",571,[[],["pendch10_r",6]]],[11,"pendch11","","Bit 11 - Pending Channel 11",571,[[],["pendch11_r",6]]],[11,"pendch12","","Bit 12 - Pending Channel 12",571,[[],["pendch12_r",6]]],[11,"pendch13","","Bit 13 - Pending Channel 13",571,[[],["pendch13_r",6]]],[11,"pendch14","","Bit 14 - Pending Channel 14",571,[[],["pendch14_r",6]]],[11,"pendch15","","Bit 15 - Pending Channel 15",571,[[],["pendch15_r",6]]],[11,"pendch16","","Bit 16 - Pending Channel 16",571,[[],["pendch16_r",6]]],[11,"pendch17","","Bit 17 - Pending Channel 17",571,[[],["pendch17_r",6]]],[11,"pendch18","","Bit 18 - Pending Channel 18",571,[[],["pendch18_r",6]]],[11,"pendch19","","Bit 19 - Pending Channel 19",571,[[],["pendch19_r",6]]],[11,"pendch20","","Bit 20 - Pending Channel 20",571,[[],["pendch20_r",6]]],[11,"pendch21","","Bit 21 - Pending Channel 21",571,[[],["pendch21_r",6]]],[11,"pendch22","","Bit 22 - Pending Channel 22",571,[[],["pendch22_r",6]]],[11,"pendch23","","Bit 23 - Pending Channel 23",571,[[],["pendch23_r",6]]],[11,"pendch24","","Bit 24 - Pending Channel 24",571,[[],["pendch24_r",6]]],[11,"pendch25","","Bit 25 - Pending Channel 25",571,[[],["pendch25_r",6]]],[11,"pendch26","","Bit 26 - Pending Channel 26",571,[[],["pendch26_r",6]]],[11,"pendch27","","Bit 27 - Pending Channel 27",571,[[],["pendch27_r",6]]],[11,"pendch28","","Bit 28 - Pending Channel 28",571,[[],["pendch28_r",6]]],[11,"pendch29","","Bit 29 - Pending Channel 29",571,[[],["pendch29_r",6]]],[11,"pendch30","","Bit 30 - Pending Channel 30",571,[[],["pendch30_r",6]]],[11,"pendch31","","Bit 31 - Pending Channel 31",571,[[],["pendch31_r",6]]],[0,"active","atsamd51g::dmac","Active Channel and Levels",null,null],[6,"R","atsamd51g::dmac::active","Reader of register ACTIVE",null,null],[6,"LVLEX0_R","","Reader of field `LVLEX0`",null,null],[6,"LVLEX1_R","","Reader of field `LVLEX1`",null,null],[6,"LVLEX2_R","","Reader of field `LVLEX2`",null,null],[6,"LVLEX3_R","","Reader of field `LVLEX3`",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"ABUSY_R","","Reader of field `ABUSY`",null,null],[6,"BTCNT_R","","Reader of field `BTCNT`",null,null],[11,"lvlex0","atsamd51g::generic","Bit 0 - Level 0 Channel Trigger Request Executing",6,[[],["lvlex0_r",6]]],[11,"lvlex1","","Bit 1 - Level 1 Channel Trigger Request Executing",6,[[],["lvlex1_r",6]]],[11,"lvlex2","","Bit 2 - Level 2 Channel Trigger Request Executing",6,[[],["lvlex2_r",6]]],[11,"lvlex3","","Bit 3 - Level 3 Channel Trigger Request Executing",6,[[],["lvlex3_r",6]]],[11,"id","","Bits 8:12 - Active Channel ID",6,[[],["id_r",6]]],[11,"abusy","","Bit 15 - Active Channel Busy",6,[[],["abusy_r",6]]],[11,"btcnt","","Bits 16:31 - Active Channel Block Transfer Count",6,[[],["btcnt_r",6]]],[11,"lvlex0","atsamd51g::dmac::active","Bit 0 - Level 0 Channel Trigger Request Executing",572,[[],["lvlex0_r",6]]],[11,"lvlex1","","Bit 1 - Level 1 Channel Trigger Request Executing",572,[[],["lvlex1_r",6]]],[11,"lvlex2","","Bit 2 - Level 2 Channel Trigger Request Executing",572,[[],["lvlex2_r",6]]],[11,"lvlex3","","Bit 3 - Level 3 Channel Trigger Request Executing",572,[[],["lvlex3_r",6]]],[11,"id","","Bits 8:12 - Active Channel ID",572,[[],["id_r",6]]],[11,"abusy","","Bit 15 - Active Channel Busy",572,[[],["abusy_r",6]]],[11,"btcnt","","Bits 16:31 - Active Channel Block Transfer Count",572,[[],["btcnt_r",6]]],[0,"baseaddr","atsamd51g::dmac","Descriptor Memory Section Base Address",null,null],[3,"BASEADDR_W","atsamd51g::dmac::baseaddr","Write proxy for field `BASEADDR`",null,null],[6,"R","","Reader of register BASEADDR",null,null],[6,"W","","Writer for register BASEADDR",null,null],[6,"BASEADDR_R","","Reader of field `BASEADDR`",null,null],[11,"bits","","Writes raw bits to the field",573,[[],["w",6]]],[11,"baseaddr","atsamd51g::generic","Bits 0:31 - Descriptor Memory Base Address",6,[[],["baseaddr_r",6]]],[11,"baseaddr","atsamd51g::dmac::baseaddr","Bits 0:31 - Descriptor Memory Base Address",574,[[],["baseaddr_r",6]]],[11,"baseaddr","atsamd51g::generic","Bits 0:31 - Descriptor Memory Base Address",7,[[],["baseaddr_w",3]]],[11,"baseaddr","atsamd51g::dmac::baseaddr","Bits 0:31 - Descriptor Memory Base Address",575,[[],["baseaddr_w",3]]],[0,"wrbaddr","atsamd51g::dmac","Write-Back Memory Section Base Address",null,null],[3,"WRBADDR_W","atsamd51g::dmac::wrbaddr","Write proxy for field `WRBADDR`",null,null],[6,"R","","Reader of register WRBADDR",null,null],[6,"W","","Writer for register WRBADDR",null,null],[6,"WRBADDR_R","","Reader of field `WRBADDR`",null,null],[11,"bits","","Writes raw bits to the field",576,[[],["w",6]]],[11,"wrbaddr","atsamd51g::generic","Bits 0:31 - Write-Back Memory Base Address",6,[[],["wrbaddr_r",6]]],[11,"wrbaddr","atsamd51g::dmac::wrbaddr","Bits 0:31 - Write-Back Memory Base Address",577,[[],["wrbaddr_r",6]]],[11,"wrbaddr","atsamd51g::generic","Bits 0:31 - Write-Back Memory Base Address",7,[[],["wrbaddr_w",3]]],[11,"wrbaddr","atsamd51g::dmac::wrbaddr","Bits 0:31 - Write-Back Memory Base Address",578,[[],["wrbaddr_w",3]]],[6,"CTRL","atsamd51g::dmac","Control",null,null],[6,"CRCCTRL","","CRC Control",null,null],[6,"CRCDATAIN","","CRC Data Input",null,null],[6,"CRCCHKSUM","","CRC Checksum",null,null],[6,"CRCSTATUS","","CRC Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SWTRIGCTRL","","Software Trigger Control",null,null],[6,"PRICTRL0","","Priority Control 0",null,null],[6,"INTPEND","","Interrupt Pending",null,null],[6,"INTSTATUS","","Interrupt Status",null,null],[6,"BUSYCH","","Busy Channels",null,null],[6,"PENDCH","","Pending Channels",null,null],[6,"ACTIVE","","Active Channel and Levels",null,null],[6,"BASEADDR","","Descriptor Memory Section Base Address",null,null],[6,"WRBADDR","","Write-Back Memory Section Base Address",null,null],[0,"dsu","atsamd51g","Device Service Unit",null,null],[3,"RegisterBlock","atsamd51g::dsu","Register block",null,null],[12,"ctrl","","0x00 - Control",579,null],[12,"statusa","","0x01 - Status A",579,null],[12,"statusb","","0x02 - Status B",579,null],[12,"addr","","0x04 - Address",579,null],[12,"length","","0x08 - Length",579,null],[12,"data","","0x0c - Data",579,null],[12,"dcc","","0x10 - Debug Communication Channel n",579,null],[12,"did","","0x18 - Device Identification",579,null],[12,"cfg","","0x1c - Configuration",579,null],[12,"dcfg","","0xf0 - Device Configuration",579,null],[12,"entry0","","0x1000 - CoreSight ROM Table Entry 0",579,null],[12,"entry1","","0x1004 - CoreSight ROM Table Entry 1",579,null],[12,"end","","0x1008 - CoreSight ROM Table End",579,null],[12,"memtype","","0x1fcc - CoreSight ROM Table Memory Type",579,null],[12,"pid4","","0x1fd0 - Peripheral Identification 4",579,null],[12,"pid5","","0x1fd4 - Peripheral Identification 5",579,null],[12,"pid6","","0x1fd8 - Peripheral Identification 6",579,null],[12,"pid7","","0x1fdc - Peripheral Identification 7",579,null],[12,"pid0","","0x1fe0 - Peripheral Identification 0",579,null],[12,"pid1","","0x1fe4 - Peripheral Identification 1",579,null],[12,"pid2","","0x1fe8 - Peripheral Identification 2",579,null],[12,"pid3","","0x1fec - Peripheral Identification 3",579,null],[12,"cid0","","0x1ff0 - Component Identification 0",579,null],[12,"cid1","","0x1ff4 - Component Identification 1",579,null],[12,"cid2","","0x1ff8 - Component Identification 2",579,null],[12,"cid3","","0x1ffc - Component Identification 3",579,null],[0,"ctrl","","Control",null,null],[3,"SWRST_W","atsamd51g::dsu::ctrl","Write proxy for field `SWRST`",null,null],[3,"CRC_W","","Write proxy for field `CRC`",null,null],[3,"MBIST_W","","Write proxy for field `MBIST`",null,null],[3,"CE_W","","Write proxy for field `CE`",null,null],[3,"ARR_W","","Write proxy for field `ARR`",null,null],[3,"SMSA_W","","Write proxy for field `SMSA`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",580,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",580,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",580,[[],["w",6]]],[11,"set_bit","","Sets the field bit",581,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",581,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",581,[[],["w",6]]],[11,"set_bit","","Sets the field bit",582,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",582,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",582,[[],["w",6]]],[11,"set_bit","","Sets the field bit",583,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",583,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",583,[[],["w",6]]],[11,"set_bit","","Sets the field bit",584,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",584,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",584,[[],["w",6]]],[11,"set_bit","","Sets the field bit",585,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",585,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",585,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"crc","","Bit 2 - 32-bit Cyclic Redundancy Code",7,[[],["crc_w",3]]],[11,"mbist","","Bit 3 - Memory built-in self-test",7,[[],["mbist_w",3]]],[11,"ce","","Bit 4 - Chip-Erase",7,[[],["ce_w",3]]],[11,"arr","","Bit 6 - Auxiliary Row Read",7,[[],["arr_w",3]]],[11,"smsa","","Bit 7 - Start Memory Stream Access",7,[[],["smsa_w",3]]],[11,"swrst","atsamd51g::dsu::ctrl","Bit 0 - Software Reset",586,[[],["swrst_w",3]]],[11,"crc","","Bit 2 - 32-bit Cyclic Redundancy Code",586,[[],["crc_w",3]]],[11,"mbist","","Bit 3 - Memory built-in self-test",586,[[],["mbist_w",3]]],[11,"ce","","Bit 4 - Chip-Erase",586,[[],["ce_w",3]]],[11,"arr","","Bit 6 - Auxiliary Row Read",586,[[],["arr_w",3]]],[11,"smsa","","Bit 7 - Start Memory Stream Access",586,[[],["smsa_w",3]]],[0,"statusa","atsamd51g::dsu","Status A",null,null],[3,"DONE_W","atsamd51g::dsu::statusa","Write proxy for field `DONE`",null,null],[3,"CRSTEXT_W","","Write proxy for field `CRSTEXT`",null,null],[3,"BERR_W","","Write proxy for field `BERR`",null,null],[3,"FAIL_W","","Write proxy for field `FAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[6,"R","","Reader of register STATUSA",null,null],[6,"W","","Writer for register STATUSA",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[6,"CRSTEXT_R","","Reader of field `CRSTEXT`",null,null],[6,"BERR_R","","Reader of field `BERR`",null,null],[6,"FAIL_R","","Reader of field `FAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[11,"set_bit","","Sets the field bit",587,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",587,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",587,[[],["w",6]]],[11,"set_bit","","Sets the field bit",588,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",588,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",588,[[],["w",6]]],[11,"set_bit","","Sets the field bit",589,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",589,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",589,[[],["w",6]]],[11,"set_bit","","Sets the field bit",590,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",590,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",590,[[],["w",6]]],[11,"set_bit","","Sets the field bit",591,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",591,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",591,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Done",6,[[],["done_r",6]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",6,[[],["crstext_r",6]]],[11,"berr","","Bit 2 - Bus Error",6,[[],["berr_r",6]]],[11,"fail","","Bit 3 - Failure",6,[[],["fail_r",6]]],[11,"perr","","Bit 4 - Protection Error",6,[[],["perr_r",6]]],[11,"done","atsamd51g::dsu::statusa","Bit 0 - Done",592,[[],["done_r",6]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",592,[[],["crstext_r",6]]],[11,"berr","","Bit 2 - Bus Error",592,[[],["berr_r",6]]],[11,"fail","","Bit 3 - Failure",592,[[],["fail_r",6]]],[11,"perr","","Bit 4 - Protection Error",592,[[],["perr_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Done",7,[[],["done_w",3]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",7,[[],["crstext_w",3]]],[11,"berr","","Bit 2 - Bus Error",7,[[],["berr_w",3]]],[11,"fail","","Bit 3 - Failure",7,[[],["fail_w",3]]],[11,"perr","","Bit 4 - Protection Error",7,[[],["perr_w",3]]],[11,"done","atsamd51g::dsu::statusa","Bit 0 - Done",593,[[],["done_w",3]]],[11,"crstext","","Bit 1 - CPU Reset Phase Extension",593,[[],["crstext_w",3]]],[11,"berr","","Bit 2 - Bus Error",593,[[],["berr_w",3]]],[11,"fail","","Bit 3 - Failure",593,[[],["fail_w",3]]],[11,"perr","","Bit 4 - Protection Error",593,[[],["perr_w",3]]],[0,"statusb","atsamd51g::dsu","Status B",null,null],[6,"R","atsamd51g::dsu::statusb","Reader of register STATUSB",null,null],[6,"PROT_R","","Reader of field `PROT`",null,null],[6,"DBGPRES_R","","Reader of field `DBGPRES`",null,null],[6,"DCCD0_R","","Reader of field `DCCD0`",null,null],[6,"DCCD1_R","","Reader of field `DCCD1`",null,null],[6,"HPE_R","","Reader of field `HPE`",null,null],[6,"CELCK_R","","Reader of field `CELCK`",null,null],[6,"TDCCD0_R","","Reader of field `TDCCD0`",null,null],[6,"TDCCD1_R","","Reader of field `TDCCD1`",null,null],[11,"prot","atsamd51g::generic","Bit 0 - Protected",6,[[],["prot_r",6]]],[11,"dbgpres","","Bit 1 - Debugger Present",6,[[],["dbgpres_r",6]]],[11,"dccd0","","Bit 2 - Debug Communication Channel 0 Dirty",6,[[],["dccd0_r",6]]],[11,"dccd1","","Bit 3 - Debug Communication Channel 1 Dirty",6,[[],["dccd1_r",6]]],[11,"hpe","","Bit 4 - Hot-Plugging Enable",6,[[],["hpe_r",6]]],[11,"celck","","Bit 5 - Chip Erase Locked",6,[[],["celck_r",6]]],[11,"tdccd0","","Bit 6 - Test Debug Communication Channel 0 Dirty",6,[[],["tdccd0_r",6]]],[11,"tdccd1","","Bit 7 - Test Debug Communication Channel 1 Dirty",6,[[],["tdccd1_r",6]]],[11,"prot","atsamd51g::dsu::statusb","Bit 0 - Protected",594,[[],["prot_r",6]]],[11,"dbgpres","","Bit 1 - Debugger Present",594,[[],["dbgpres_r",6]]],[11,"dccd0","","Bit 2 - Debug Communication Channel 0 Dirty",594,[[],["dccd0_r",6]]],[11,"dccd1","","Bit 3 - Debug Communication Channel 1 Dirty",594,[[],["dccd1_r",6]]],[11,"hpe","","Bit 4 - Hot-Plugging Enable",594,[[],["hpe_r",6]]],[11,"celck","","Bit 5 - Chip Erase Locked",594,[[],["celck_r",6]]],[11,"tdccd0","","Bit 6 - Test Debug Communication Channel 0 Dirty",594,[[],["tdccd0_r",6]]],[11,"tdccd1","","Bit 7 - Test Debug Communication Channel 1 Dirty",594,[[],["tdccd1_r",6]]],[0,"addr","atsamd51g::dsu","Address",null,null],[3,"AMOD_W","atsamd51g::dsu::addr","Write proxy for field `AMOD`",null,null],[3,"ADDR_W","","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"AMOD_R","","Reader of field `AMOD`",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",595,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",596,[[],["w",6]]],[11,"amod","atsamd51g::generic","Bits 0:1 - Access Mode",6,[[],["amod_r",6]]],[11,"addr","","Bits 2:31 - Address",6,[[],["addr_r",6]]],[11,"amod","atsamd51g::dsu::addr","Bits 0:1 - Access Mode",597,[[],["amod_r",6]]],[11,"addr","","Bits 2:31 - Address",597,[[],["addr_r",6]]],[11,"amod","atsamd51g::generic","Bits 0:1 - Access Mode",7,[[],["amod_w",3]]],[11,"addr","","Bits 2:31 - Address",7,[[],["addr_w",3]]],[11,"amod","atsamd51g::dsu::addr","Bits 0:1 - Access Mode",598,[[],["amod_w",3]]],[11,"addr","","Bits 2:31 - Address",598,[[],["addr_w",3]]],[0,"length","atsamd51g::dsu","Length",null,null],[3,"LENGTH_W","atsamd51g::dsu::length","Write proxy for field `LENGTH`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"bits","","Writes raw bits to the field",599,[[],["w",6]]],[11,"length","atsamd51g::generic","Bits 2:31 - Length",6,[[],["length_r",6]]],[11,"length","atsamd51g::dsu::length","Bits 2:31 - Length",600,[[],["length_r",6]]],[11,"length","atsamd51g::generic","Bits 2:31 - Length",7,[[],["length_w",3]]],[11,"length","atsamd51g::dsu::length","Bits 2:31 - Length",601,[[],["length_w",3]]],[0,"data","atsamd51g::dsu","Data",null,null],[3,"DATA_W","atsamd51g::dsu::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",602,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data",6,[[],["data_r",6]]],[11,"data","atsamd51g::dsu::data","Bits 0:31 - Data",603,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data",7,[[],["data_w",3]]],[11,"data","atsamd51g::dsu::data","Bits 0:31 - Data",604,[[],["data_w",3]]],[0,"dcc","atsamd51g::dsu","Debug Communication Channel n",null,null],[3,"DATA_W","atsamd51g::dsu::dcc","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DCC[%s]",null,null],[6,"W","","Writer for register DCC[%s]",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",605,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data",6,[[],["data_r",6]]],[11,"data","atsamd51g::dsu::dcc","Bits 0:31 - Data",606,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data",7,[[],["data_w",3]]],[11,"data","atsamd51g::dsu::dcc","Bits 0:31 - Data",607,[[],["data_w",3]]],[0,"did","atsamd51g::dsu","Device Identification",null,null],[4,"SERIES_A","atsamd51g::dsu::did","Series",null,null],[13,"_0","","0: Cortex-M0+ processor, basic feature set",608,null],[13,"_1","","1: Cortex-M0+ processor, USB",608,null],[4,"FAMILY_A","","Family",null,null],[13,"_0","","0: General purpose microcontroller",609,null],[13,"_1","","1: PicoPower",609,null],[4,"PROCESSOR_A","","Processor",null,null],[13,"CM0P","","1: Cortex-M0+",610,null],[13,"CM23","","2: Cortex-M23",610,null],[13,"CM3","","3: Cortex-M3",610,null],[13,"CM4","","5: Cortex-M4",610,null],[13,"CM4F","","6: Cortex-M4 with FPU",610,null],[13,"CM33","","7: Cortex-M33",610,null],[6,"R","","Reader of register DID",null,null],[6,"DEVSEL_R","","Reader of field `DEVSEL`",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[6,"DIE_R","","Reader of field `DIE`",null,null],[6,"SERIES_R","","Reader of field `SERIES`",null,null],[6,"FAMILY_R","","Reader of field `FAMILY`",null,null],[6,"PROCESSOR_R","","Reader of field `PROCESSOR`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["series_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"variant","atsamd51g::dsu::did","Get enumerated values variant",611,[[],[["variant",4],["series_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",611,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",611,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["family_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"variant","atsamd51g::dsu::did","Get enumerated values variant",612,[[],[["variant",4],["family_a",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",612,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",612,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["processor_a",4]]]],[11,"is_cm0p","","Checks if the value of the field is `CM0P`",6,[[]]],[11,"is_cm23","","Checks if the value of the field is `CM23`",6,[[]]],[11,"is_cm3","","Checks if the value of the field is `CM3`",6,[[]]],[11,"is_cm4","","Checks if the value of the field is `CM4`",6,[[]]],[11,"is_cm4f","","Checks if the value of the field is `CM4F`",6,[[]]],[11,"is_cm33","","Checks if the value of the field is `CM33`",6,[[]]],[11,"variant","atsamd51g::dsu::did","Get enumerated values variant",613,[[],[["variant",4],["processor_a",4]]]],[11,"is_cm0p","","Checks if the value of the field is `CM0P`",613,[[]]],[11,"is_cm23","","Checks if the value of the field is `CM23`",613,[[]]],[11,"is_cm3","","Checks if the value of the field is `CM3`",613,[[]]],[11,"is_cm4","","Checks if the value of the field is `CM4`",613,[[]]],[11,"is_cm4f","","Checks if the value of the field is `CM4F`",613,[[]]],[11,"is_cm33","","Checks if the value of the field is `CM33`",613,[[]]],[11,"devsel","atsamd51g::generic","Bits 0:7 - Device Select",6,[[],["devsel_r",6]]],[11,"revision","","Bits 8:11 - Revision Number",6,[[],["revision_r",6]]],[11,"die","","Bits 12:15 - Die Number",6,[[],["die_r",6]]],[11,"series","","Bits 16:21 - Series",6,[[],["series_r",6]]],[11,"family","","Bits 23:27 - Family",6,[[],["family_r",6]]],[11,"processor","","Bits 28:31 - Processor",6,[[],["processor_r",6]]],[11,"devsel","atsamd51g::dsu::did","Bits 0:7 - Device Select",614,[[],["devsel_r",6]]],[11,"revision","","Bits 8:11 - Revision Number",614,[[],["revision_r",6]]],[11,"die","","Bits 12:15 - Die Number",614,[[],["die_r",6]]],[11,"series","","Bits 16:21 - Series",614,[[],["series_r",6]]],[11,"family","","Bits 23:27 - Family",614,[[],["family_r",6]]],[11,"processor","","Bits 28:31 - Processor",614,[[],["processor_r",6]]],[0,"cfg","atsamd51g::dsu","Configuration",null,null],[3,"LQOS_W","atsamd51g::dsu::cfg","Write proxy for field `LQOS`",null,null],[3,"DCCDMALEVEL_W","","Write proxy for field `DCCDMALEVEL`",null,null],[3,"ETBRAMEN_W","","Write proxy for field `ETBRAMEN`",null,null],[4,"DCCDMALEVEL_A","","DMA Trigger Level",null,null],[13,"EMPTY","","0: Trigger rises when DCC is empty",615,null],[13,"FULL","","1: Trigger rises when DCC is full",615,null],[6,"R","","Reader of register CFG",null,null],[6,"W","","Writer for register CFG",null,null],[6,"LQOS_R","","Reader of field `LQOS`",null,null],[6,"DCCDMALEVEL_R","","Reader of field `DCCDMALEVEL`",null,null],[6,"ETBRAMEN_R","","Reader of field `ETBRAMEN`",null,null],[11,"bits","","Writes raw bits to the field",616,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["dccdmalevel_a",4]]]],[11,"is_empty","","Checks if the value of the field is `EMPTY`",6,[[]]],[11,"is_full","","Checks if the value of the field is `FULL`",6,[[]]],[11,"variant","atsamd51g::dsu::cfg","Get enumerated values variant",617,[[],[["variant",4],["dccdmalevel_a",4]]]],[11,"is_empty","","Checks if the value of the field is `EMPTY`",617,[[]]],[11,"is_full","","Checks if the value of the field is `FULL`",617,[[]]],[11,"variant","","Writes `variant` to the field",618,[[["dccdmalevel_a",4]],["w",6]]],[11,"empty","","Trigger rises when DCC is empty",618,[[],["w",6]]],[11,"full","","Trigger rises when DCC is full",618,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",619,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",619,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",619,[[],["w",6]]],[11,"lqos","atsamd51g::generic","Bits 0:1 - Latency Quality Of Service",6,[[],["lqos_r",6]]],[11,"dccdmalevel","","Bits 2:3 - DMA Trigger Level",6,[[],["dccdmalevel_r",6]]],[11,"etbramen","","Bit 4 - Trace Control",6,[[],["etbramen_r",6]]],[11,"lqos","atsamd51g::dsu::cfg","Bits 0:1 - Latency Quality Of Service",620,[[],["lqos_r",6]]],[11,"dccdmalevel","","Bits 2:3 - DMA Trigger Level",620,[[],["dccdmalevel_r",6]]],[11,"etbramen","","Bit 4 - Trace Control",620,[[],["etbramen_r",6]]],[11,"lqos","atsamd51g::generic","Bits 0:1 - Latency Quality Of Service",7,[[],["lqos_w",3]]],[11,"dccdmalevel","","Bits 2:3 - DMA Trigger Level",7,[[],["dccdmalevel_w",3]]],[11,"etbramen","","Bit 4 - Trace Control",7,[[],["etbramen_w",3]]],[11,"lqos","atsamd51g::dsu::cfg","Bits 0:1 - Latency Quality Of Service",621,[[],["lqos_w",3]]],[11,"dccdmalevel","","Bits 2:3 - DMA Trigger Level",621,[[],["dccdmalevel_w",3]]],[11,"etbramen","","Bit 4 - Trace Control",621,[[],["etbramen_w",3]]],[0,"dcfg","atsamd51g::dsu","Device Configuration",null,null],[3,"DCFG_W","atsamd51g::dsu::dcfg","Write proxy for field `DCFG`",null,null],[6,"R","","Reader of register DCFG[%s]",null,null],[6,"W","","Writer for register DCFG[%s]",null,null],[6,"DCFG_R","","Reader of field `DCFG`",null,null],[11,"bits","","Writes raw bits to the field",622,[[],["w",6]]],[11,"dcfg","atsamd51g::generic","Bits 0:31 - Device Configuration",6,[[],["dcfg_r",6]]],[11,"dcfg","atsamd51g::dsu::dcfg","Bits 0:31 - Device Configuration",623,[[],["dcfg_r",6]]],[11,"dcfg","atsamd51g::generic","Bits 0:31 - Device Configuration",7,[[],["dcfg_w",3]]],[11,"dcfg","atsamd51g::dsu::dcfg","Bits 0:31 - Device Configuration",624,[[],["dcfg_w",3]]],[0,"entry0","atsamd51g::dsu","CoreSight ROM Table Entry 0",null,null],[6,"R","atsamd51g::dsu::entry0","Reader of register ENTRY0",null,null],[6,"EPRES_R","","Reader of field `EPRES`",null,null],[6,"FMT_R","","Reader of field `FMT`",null,null],[6,"ADDOFF_R","","Reader of field `ADDOFF`",null,null],[11,"epres","atsamd51g::generic","Bit 0 - Entry Present",6,[[],["epres_r",6]]],[11,"fmt","","Bit 1 - Format",6,[[],["fmt_r",6]]],[11,"addoff","","Bits 12:31 - Address Offset",6,[[],["addoff_r",6]]],[11,"epres","atsamd51g::dsu::entry0","Bit 0 - Entry Present",625,[[],["epres_r",6]]],[11,"fmt","","Bit 1 - Format",625,[[],["fmt_r",6]]],[11,"addoff","","Bits 12:31 - Address Offset",625,[[],["addoff_r",6]]],[0,"entry1","atsamd51g::dsu","CoreSight ROM Table Entry 1",null,null],[6,"R","atsamd51g::dsu::entry1","Reader of register ENTRY1",null,null],[0,"end","atsamd51g::dsu","CoreSight ROM Table End",null,null],[6,"R","atsamd51g::dsu::end","Reader of register END",null,null],[6,"END_R","","Reader of field `END`",null,null],[11,"end","atsamd51g::generic","Bits 0:31 - End Marker",6,[[],["end_r",6]]],[11,"end","atsamd51g::dsu::end","Bits 0:31 - End Marker",626,[[],["end_r",6]]],[0,"memtype","atsamd51g::dsu","CoreSight ROM Table Memory Type",null,null],[6,"R","atsamd51g::dsu::memtype","Reader of register MEMTYPE",null,null],[6,"SMEMP_R","","Reader of field `SMEMP`",null,null],[11,"smemp","atsamd51g::generic","Bit 0 - System Memory Present",6,[[],["smemp_r",6]]],[11,"smemp","atsamd51g::dsu::memtype","Bit 0 - System Memory Present",627,[[],["smemp_r",6]]],[0,"pid4","atsamd51g::dsu","Peripheral Identification 4",null,null],[6,"R","atsamd51g::dsu::pid4","Reader of register PID4",null,null],[6,"JEPCC_R","","Reader of field `JEPCC`",null,null],[6,"FKBC_R","","Reader of field `FKBC`",null,null],[11,"jepcc","atsamd51g::generic","Bits 0:3 - JEP-106 Continuation Code",6,[[],["jepcc_r",6]]],[11,"fkbc","","Bits 4:7 - 4KB count",6,[[],["fkbc_r",6]]],[11,"jepcc","atsamd51g::dsu::pid4","Bits 0:3 - JEP-106 Continuation Code",628,[[],["jepcc_r",6]]],[11,"fkbc","","Bits 4:7 - 4KB count",628,[[],["fkbc_r",6]]],[0,"pid5","atsamd51g::dsu","Peripheral Identification 5",null,null],[6,"R","atsamd51g::dsu::pid5","Reader of register PID5",null,null],[0,"pid6","atsamd51g::dsu","Peripheral Identification 6",null,null],[6,"R","atsamd51g::dsu::pid6","Reader of register PID6",null,null],[0,"pid7","atsamd51g::dsu","Peripheral Identification 7",null,null],[6,"R","atsamd51g::dsu::pid7","Reader of register PID7",null,null],[0,"pid0","atsamd51g::dsu","Peripheral Identification 0",null,null],[6,"R","atsamd51g::dsu::pid0","Reader of register PID0",null,null],[6,"PARTNBL_R","","Reader of field `PARTNBL`",null,null],[11,"partnbl","atsamd51g::generic","Bits 0:7 - Part Number Low",6,[[],["partnbl_r",6]]],[11,"partnbl","atsamd51g::dsu::pid0","Bits 0:7 - Part Number Low",629,[[],["partnbl_r",6]]],[0,"pid1","atsamd51g::dsu","Peripheral Identification 1",null,null],[6,"R","atsamd51g::dsu::pid1","Reader of register PID1",null,null],[6,"PARTNBH_R","","Reader of field `PARTNBH`",null,null],[6,"JEPIDCL_R","","Reader of field `JEPIDCL`",null,null],[11,"partnbh","atsamd51g::generic","Bits 0:3 - Part Number High",6,[[],["partnbh_r",6]]],[11,"jepidcl","","Bits 4:7 - Low part of the JEP-106 Identity Code",6,[[],["jepidcl_r",6]]],[11,"partnbh","atsamd51g::dsu::pid1","Bits 0:3 - Part Number High",630,[[],["partnbh_r",6]]],[11,"jepidcl","","Bits 4:7 - Low part of the JEP-106 Identity Code",630,[[],["jepidcl_r",6]]],[0,"pid2","atsamd51g::dsu","Peripheral Identification 2",null,null],[6,"R","atsamd51g::dsu::pid2","Reader of register PID2",null,null],[6,"JEPIDCH_R","","Reader of field `JEPIDCH`",null,null],[6,"JEPU_R","","Reader of field `JEPU`",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[11,"jepidch","atsamd51g::generic","Bits 0:2 - JEP-106 Identity Code High",6,[[],["jepidch_r",6]]],[11,"jepu","","Bit 3 - JEP-106 Identity Code is used",6,[[],["jepu_r",6]]],[11,"revision","","Bits 4:7 - Revision Number",6,[[],["revision_r",6]]],[11,"jepidch","atsamd51g::dsu::pid2","Bits 0:2 - JEP-106 Identity Code High",631,[[],["jepidch_r",6]]],[11,"jepu","","Bit 3 - JEP-106 Identity Code is used",631,[[],["jepu_r",6]]],[11,"revision","","Bits 4:7 - Revision Number",631,[[],["revision_r",6]]],[0,"pid3","atsamd51g::dsu","Peripheral Identification 3",null,null],[6,"R","atsamd51g::dsu::pid3","Reader of register PID3",null,null],[6,"CUSMOD_R","","Reader of field `CUSMOD`",null,null],[6,"REVAND_R","","Reader of field `REVAND`",null,null],[11,"cusmod","atsamd51g::generic","Bits 0:3 - ARM CUSMOD",6,[[],["cusmod_r",6]]],[11,"revand","","Bits 4:7 - Revision Number",6,[[],["revand_r",6]]],[11,"cusmod","atsamd51g::dsu::pid3","Bits 0:3 - ARM CUSMOD",632,[[],["cusmod_r",6]]],[11,"revand","","Bits 4:7 - Revision Number",632,[[],["revand_r",6]]],[0,"cid0","atsamd51g::dsu","Component Identification 0",null,null],[6,"R","atsamd51g::dsu::cid0","Reader of register CID0",null,null],[6,"PREAMBLEB0_R","","Reader of field `PREAMBLEB0`",null,null],[11,"preambleb0","atsamd51g::generic","Bits 0:7 - Preamble Byte 0",6,[[],["preambleb0_r",6]]],[11,"preambleb0","atsamd51g::dsu::cid0","Bits 0:7 - Preamble Byte 0",633,[[],["preambleb0_r",6]]],[0,"cid1","atsamd51g::dsu","Component Identification 1",null,null],[6,"R","atsamd51g::dsu::cid1","Reader of register CID1",null,null],[6,"PREAMBLE_R","","Reader of field `PREAMBLE`",null,null],[6,"CCLASS_R","","Reader of field `CCLASS`",null,null],[11,"preamble","atsamd51g::generic","Bits 0:3 - Preamble",6,[[],["preamble_r",6]]],[11,"cclass","","Bits 4:7 - Component Class",6,[[],["cclass_r",6]]],[11,"preamble","atsamd51g::dsu::cid1","Bits 0:3 - Preamble",634,[[],["preamble_r",6]]],[11,"cclass","","Bits 4:7 - Component Class",634,[[],["cclass_r",6]]],[0,"cid2","atsamd51g::dsu","Component Identification 2",null,null],[6,"R","atsamd51g::dsu::cid2","Reader of register CID2",null,null],[6,"PREAMBLEB2_R","","Reader of field `PREAMBLEB2`",null,null],[11,"preambleb2","atsamd51g::generic","Bits 0:7 - Preamble Byte 2",6,[[],["preambleb2_r",6]]],[11,"preambleb2","atsamd51g::dsu::cid2","Bits 0:7 - Preamble Byte 2",635,[[],["preambleb2_r",6]]],[0,"cid3","atsamd51g::dsu","Component Identification 3",null,null],[6,"R","atsamd51g::dsu::cid3","Reader of register CID3",null,null],[6,"PREAMBLEB3_R","","Reader of field `PREAMBLEB3`",null,null],[11,"preambleb3","atsamd51g::generic","Bits 0:7 - Preamble Byte 3",6,[[],["preambleb3_r",6]]],[11,"preambleb3","atsamd51g::dsu::cid3","Bits 0:7 - Preamble Byte 3",636,[[],["preambleb3_r",6]]],[6,"CTRL","atsamd51g::dsu","Control",null,null],[6,"STATUSA","","Status A",null,null],[6,"STATUSB","","Status B",null,null],[6,"ADDR","","Address",null,null],[6,"LENGTH","","Length",null,null],[6,"DATA","","Data",null,null],[6,"DCC","","Debug Communication Channel n",null,null],[6,"DID","","Device Identification",null,null],[6,"CFG","","Configuration",null,null],[6,"DCFG","","Device Configuration",null,null],[6,"ENTRY0","","CoreSight ROM Table Entry 0",null,null],[6,"ENTRY1","","CoreSight ROM Table Entry 1",null,null],[6,"END","","CoreSight ROM Table End",null,null],[6,"MEMTYPE","","CoreSight ROM Table Memory Type",null,null],[6,"PID4","","Peripheral Identification 4",null,null],[6,"PID5","","Peripheral Identification 5",null,null],[6,"PID6","","Peripheral Identification 6",null,null],[6,"PID7","","Peripheral Identification 7",null,null],[6,"PID0","","Peripheral Identification 0",null,null],[6,"PID1","","Peripheral Identification 1",null,null],[6,"PID2","","Peripheral Identification 2",null,null],[6,"PID3","","Peripheral Identification 3",null,null],[6,"CID0","","Component Identification 0",null,null],[6,"CID1","","Component Identification 1",null,null],[6,"CID2","","Component Identification 2",null,null],[6,"CID3","","Component Identification 3",null,null],[0,"eic","atsamd51g","External Interrupt Controller",null,null],[3,"RegisterBlock","atsamd51g::eic","Register block",null,null],[12,"ctrla","","0x00 - Control A",637,null],[12,"nmictrl","","0x01 - Non-Maskable Interrupt Control",637,null],[12,"nmiflag","","0x02 - Non-Maskable Interrupt Flag Status and Clear",637,null],[12,"syncbusy","","0x04 - Synchronization Busy",637,null],[12,"evctrl","","0x08 - Event Control",637,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",637,null],[12,"intenset","","0x10 - Interrupt Enable Set",637,null],[12,"intflag","","0x14 - Interrupt Flag Status and Clear",637,null],[12,"asynch","","0x18 - External Interrupt Asynchronous Mode",637,null],[12,"config","","0x1c - External Interrupt Sense Configuration",637,null],[12,"debouncen","","0x30 - Debouncer Enable",637,null],[12,"dprescaler","","0x34 - Debouncer Prescaler",637,null],[12,"pinstate","","0x38 - Pin State",637,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::eic::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"CKSEL_W","","Write proxy for field `CKSEL`",null,null],[4,"CKSEL_A","","Clock Selection",null,null],[13,"CLK_GCLK","","0: Clocked by GCLK",638,null],[13,"CLK_ULP32K","","1: Clocked by ULP32K",638,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CKSEL_R","","Reader of field `CKSEL`",null,null],[11,"set_bit","","Sets the field bit",639,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",639,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",639,[[],["w",6]]],[11,"set_bit","","Sets the field bit",640,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",640,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",640,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cksel_a",4]]],[11,"is_clk_gclk","","Checks if the value of the field is `CLK_GCLK`",6,[[]]],[11,"is_clk_ulp32k","","Checks if the value of the field is `CLK_ULP32K`",6,[[]]],[11,"variant","atsamd51g::eic::ctrla","Get enumerated values variant",641,[[],["cksel_a",4]]],[11,"is_clk_gclk","","Checks if the value of the field is `CLK_GCLK`",641,[[]]],[11,"is_clk_ulp32k","","Checks if the value of the field is `CLK_ULP32K`",641,[[]]],[11,"variant","","Writes `variant` to the field",642,[[["cksel_a",4]],["w",6]]],[11,"clk_gclk","","Clocked by GCLK",642,[[],["w",6]]],[11,"clk_ulp32k","","Clocked by ULP32K",642,[[],["w",6]]],[11,"set_bit","","Sets the field bit",642,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",642,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",642,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"cksel","","Bit 4 - Clock Selection",6,[[],["cksel_r",6]]],[11,"swrst","atsamd51g::eic::ctrla","Bit 0 - Software Reset",643,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",643,[[],["enable_r",6]]],[11,"cksel","","Bit 4 - Clock Selection",643,[[],["cksel_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"cksel","","Bit 4 - Clock Selection",7,[[],["cksel_w",3]]],[11,"swrst","atsamd51g::eic::ctrla","Bit 0 - Software Reset",644,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",644,[[],["enable_w",3]]],[11,"cksel","","Bit 4 - Clock Selection",644,[[],["cksel_w",3]]],[0,"nmictrl","atsamd51g::eic","Non-Maskable Interrupt Control",null,null],[3,"NMISENSE_W","atsamd51g::eic::nmictrl","Write proxy for field `NMISENSE`",null,null],[3,"NMIFILTEN_W","","Write proxy for field `NMIFILTEN`",null,null],[3,"NMIASYNCH_W","","Write proxy for field `NMIASYNCH`",null,null],[4,"NMISENSE_A","","Non-Maskable Interrupt Sense Configuration",null,null],[13,"NONE","","0: No detection",645,null],[13,"RISE","","1: Rising-edge detection",645,null],[13,"FALL","","2: Falling-edge detection",645,null],[13,"BOTH","","3: Both-edges detection",645,null],[13,"HIGH","","4: High-level detection",645,null],[13,"LOW","","5: Low-level detection",645,null],[4,"NMIASYNCH_A","","Asynchronous Edge Detection Mode",null,null],[13,"SYNC","","0: Edge detection is clock synchronously operated",646,null],[13,"ASYNC","","1: Edge detection is clock asynchronously operated",646,null],[6,"R","","Reader of register NMICTRL",null,null],[6,"W","","Writer for register NMICTRL",null,null],[6,"NMISENSE_R","","Reader of field `NMISENSE`",null,null],[6,"NMIFILTEN_R","","Reader of field `NMIFILTEN`",null,null],[6,"NMIASYNCH_R","","Reader of field `NMIASYNCH`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["nmisense_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::nmictrl","Get enumerated values variant",647,[[],[["variant",4],["nmisense_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",647,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",647,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",647,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",647,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",647,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",647,[[]]],[11,"variant","","Writes `variant` to the field",648,[[["nmisense_a",4]],["w",6]]],[11,"none","","No detection",648,[[],["w",6]]],[11,"rise","","Rising-edge detection",648,[[],["w",6]]],[11,"fall","","Falling-edge detection",648,[[],["w",6]]],[11,"both","","Both-edges detection",648,[[],["w",6]]],[11,"high","","High-level detection",648,[[],["w",6]]],[11,"low","","Low-level detection",648,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",649,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",649,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",649,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["nmiasynch_a",4]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"variant","atsamd51g::eic::nmictrl","Get enumerated values variant",650,[[],["nmiasynch_a",4]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",650,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",650,[[]]],[11,"variant","","Writes `variant` to the field",651,[[["nmiasynch_a",4]],["w",6]]],[11,"sync","","Edge detection is clock synchronously operated",651,[[],["w",6]]],[11,"async_","","Edge detection is clock asynchronously operated",651,[[],["w",6]]],[11,"set_bit","","Sets the field bit",651,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",651,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",651,[[],["w",6]]],[11,"nmisense","atsamd51g::generic","Bits 0:2 - Non-Maskable Interrupt Sense Configuration",6,[[],["nmisense_r",6]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",6,[[],["nmifilten_r",6]]],[11,"nmiasynch","","Bit 4 - Asynchronous Edge Detection Mode",6,[[],["nmiasynch_r",6]]],[11,"nmisense","atsamd51g::eic::nmictrl","Bits 0:2 - Non-Maskable Interrupt Sense Configuration",652,[[],["nmisense_r",6]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",652,[[],["nmifilten_r",6]]],[11,"nmiasynch","","Bit 4 - Asynchronous Edge Detection Mode",652,[[],["nmiasynch_r",6]]],[11,"nmisense","atsamd51g::generic","Bits 0:2 - Non-Maskable Interrupt Sense Configuration",7,[[],["nmisense_w",3]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",7,[[],["nmifilten_w",3]]],[11,"nmiasynch","","Bit 4 - Asynchronous Edge Detection Mode",7,[[],["nmiasynch_w",3]]],[11,"nmisense","atsamd51g::eic::nmictrl","Bits 0:2 - Non-Maskable Interrupt Sense Configuration",653,[[],["nmisense_w",3]]],[11,"nmifilten","","Bit 3 - Non-Maskable Interrupt Filter Enable",653,[[],["nmifilten_w",3]]],[11,"nmiasynch","","Bit 4 - Asynchronous Edge Detection Mode",653,[[],["nmiasynch_w",3]]],[0,"nmiflag","atsamd51g::eic","Non-Maskable Interrupt Flag Status and Clear",null,null],[3,"NMI_W","atsamd51g::eic::nmiflag","Write proxy for field `NMI`",null,null],[6,"R","","Reader of register NMIFLAG",null,null],[6,"W","","Writer for register NMIFLAG",null,null],[6,"NMI_R","","Reader of field `NMI`",null,null],[11,"set_bit","","Sets the field bit",654,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",654,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",654,[[],["w",6]]],[11,"nmi","atsamd51g::generic","Bit 0 - Non-Maskable Interrupt",6,[[],["nmi_r",6]]],[11,"nmi","atsamd51g::eic::nmiflag","Bit 0 - Non-Maskable Interrupt",655,[[],["nmi_r",6]]],[11,"nmi","atsamd51g::generic","Bit 0 - Non-Maskable Interrupt",7,[[],["nmi_w",3]]],[11,"nmi","atsamd51g::eic::nmiflag","Bit 0 - Non-Maskable Interrupt",656,[[],["nmi_w",3]]],[0,"syncbusy","atsamd51g::eic","Synchronization Busy",null,null],[6,"R","atsamd51g::eic::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy Status",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy Status",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::eic::syncbusy","Bit 0 - Software Reset Synchronization Busy Status",657,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy Status",657,[[],["enable_r",6]]],[0,"evctrl","atsamd51g::eic","Event Control",null,null],[3,"EXTINTEO_W","atsamd51g::eic::evctrl","Write proxy for field `EXTINTEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EXTINTEO_R","","Reader of field `EXTINTEO`",null,null],[11,"bits","","Writes raw bits to the field",658,[[],["w",6]]],[11,"extinteo","atsamd51g::generic","Bits 0:15 - External Interrupt Event Output Enable",6,[[],["extinteo_r",6]]],[11,"extinteo","atsamd51g::eic::evctrl","Bits 0:15 - External Interrupt Event Output Enable",659,[[],["extinteo_r",6]]],[11,"extinteo","atsamd51g::generic","Bits 0:15 - External Interrupt Event Output Enable",7,[[],["extinteo_w",3]]],[11,"extinteo","atsamd51g::eic::evctrl","Bits 0:15 - External Interrupt Event Output Enable",660,[[],["extinteo_w",3]]],[0,"intenclr","atsamd51g::eic","Interrupt Enable Clear",null,null],[3,"EXTINT_W","atsamd51g::eic::intenclr","Write proxy for field `EXTINT`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"EXTINT_R","","Reader of field `EXTINT`",null,null],[11,"bits","","Writes raw bits to the field",661,[[],["w",6]]],[11,"extint","atsamd51g::generic","Bits 0:15 - External Interrupt Enable",6,[[],["extint_r",6]]],[11,"extint","atsamd51g::eic::intenclr","Bits 0:15 - External Interrupt Enable",662,[[],["extint_r",6]]],[11,"extint","atsamd51g::generic","Bits 0:15 - External Interrupt Enable",7,[[],["extint_w",3]]],[11,"extint","atsamd51g::eic::intenclr","Bits 0:15 - External Interrupt Enable",663,[[],["extint_w",3]]],[0,"intenset","atsamd51g::eic","Interrupt Enable Set",null,null],[3,"EXTINT_W","atsamd51g::eic::intenset","Write proxy for field `EXTINT`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"EXTINT_R","","Reader of field `EXTINT`",null,null],[11,"bits","","Writes raw bits to the field",664,[[],["w",6]]],[11,"extint","atsamd51g::generic","Bits 0:15 - External Interrupt Enable",6,[[],["extint_r",6]]],[11,"extint","atsamd51g::eic::intenset","Bits 0:15 - External Interrupt Enable",665,[[],["extint_r",6]]],[11,"extint","atsamd51g::generic","Bits 0:15 - External Interrupt Enable",7,[[],["extint_w",3]]],[11,"extint","atsamd51g::eic::intenset","Bits 0:15 - External Interrupt Enable",666,[[],["extint_w",3]]],[0,"intflag","atsamd51g::eic","Interrupt Flag Status and Clear",null,null],[3,"EXTINT_W","atsamd51g::eic::intflag","Write proxy for field `EXTINT`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"EXTINT_R","","Reader of field `EXTINT`",null,null],[11,"bits","","Writes raw bits to the field",667,[[],["w",6]]],[11,"extint","atsamd51g::generic","Bits 0:15 - External Interrupt",6,[[],["extint_r",6]]],[11,"extint","atsamd51g::eic::intflag","Bits 0:15 - External Interrupt",668,[[],["extint_r",6]]],[11,"extint","atsamd51g::generic","Bits 0:15 - External Interrupt",7,[[],["extint_w",3]]],[11,"extint","atsamd51g::eic::intflag","Bits 0:15 - External Interrupt",669,[[],["extint_w",3]]],[0,"asynch","atsamd51g::eic","External Interrupt Asynchronous Mode",null,null],[3,"ASYNCH_W","atsamd51g::eic::asynch","Write proxy for field `ASYNCH`",null,null],[4,"ASYNCH_A","","Asynchronous Edge Detection Mode",null,null],[13,"SYNC","","0: Edge detection is clock synchronously operated",670,null],[13,"ASYNC","","1: Edge detection is clock asynchronously operated",670,null],[6,"R","","Reader of register ASYNCH",null,null],[6,"W","","Writer for register ASYNCH",null,null],[6,"ASYNCH_R","","Reader of field `ASYNCH`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["asynch_a",4],["variant",4]]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"variant","atsamd51g::eic::asynch","Get enumerated values variant",671,[[],[["asynch_a",4],["variant",4]]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",671,[[]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",671,[[]]],[11,"variant","","Writes `variant` to the field",672,[[["asynch_a",4]],["w",6]]],[11,"sync","","Edge detection is clock synchronously operated",672,[[],["w",6]]],[11,"async_","","Edge detection is clock asynchronously operated",672,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",672,[[],["w",6]]],[11,"asynch","atsamd51g::generic","Bits 0:15 - Asynchronous Edge Detection Mode",6,[[],["asynch_r",6]]],[11,"asynch","atsamd51g::eic::asynch","Bits 0:15 - Asynchronous Edge Detection Mode",673,[[],["asynch_r",6]]],[11,"asynch","atsamd51g::generic","Bits 0:15 - Asynchronous Edge Detection Mode",7,[[],["asynch_w",3]]],[11,"asynch","atsamd51g::eic::asynch","Bits 0:15 - Asynchronous Edge Detection Mode",674,[[],["asynch_w",3]]],[0,"config","atsamd51g::eic","External Interrupt Sense Configuration",null,null],[3,"SENSE0_W","atsamd51g::eic::config","Write proxy for field `SENSE0`",null,null],[3,"FILTEN0_W","","Write proxy for field `FILTEN0`",null,null],[3,"SENSE1_W","","Write proxy for field `SENSE1`",null,null],[3,"FILTEN1_W","","Write proxy for field `FILTEN1`",null,null],[3,"SENSE2_W","","Write proxy for field `SENSE2`",null,null],[3,"FILTEN2_W","","Write proxy for field `FILTEN2`",null,null],[3,"SENSE3_W","","Write proxy for field `SENSE3`",null,null],[3,"FILTEN3_W","","Write proxy for field `FILTEN3`",null,null],[3,"SENSE4_W","","Write proxy for field `SENSE4`",null,null],[3,"FILTEN4_W","","Write proxy for field `FILTEN4`",null,null],[3,"SENSE5_W","","Write proxy for field `SENSE5`",null,null],[3,"FILTEN5_W","","Write proxy for field `FILTEN5`",null,null],[3,"SENSE6_W","","Write proxy for field `SENSE6`",null,null],[3,"FILTEN6_W","","Write proxy for field `FILTEN6`",null,null],[3,"SENSE7_W","","Write proxy for field `SENSE7`",null,null],[3,"FILTEN7_W","","Write proxy for field `FILTEN7`",null,null],[4,"SENSE0_A","","Input Sense Configuration 0",null,null],[13,"NONE","","0: No detection",675,null],[13,"RISE","","1: Rising edge detection",675,null],[13,"FALL","","2: Falling edge detection",675,null],[13,"BOTH","","3: Both edges detection",675,null],[13,"HIGH","","4: High level detection",675,null],[13,"LOW","","5: Low level detection",675,null],[4,"SENSE1_A","","Input Sense Configuration 1",null,null],[13,"NONE","","0: No detection",676,null],[13,"RISE","","1: Rising edge detection",676,null],[13,"FALL","","2: Falling edge detection",676,null],[13,"BOTH","","3: Both edges detection",676,null],[13,"HIGH","","4: High level detection",676,null],[13,"LOW","","5: Low level detection",676,null],[4,"SENSE2_A","","Input Sense Configuration 2",null,null],[13,"NONE","","0: No detection",677,null],[13,"RISE","","1: Rising edge detection",677,null],[13,"FALL","","2: Falling edge detection",677,null],[13,"BOTH","","3: Both edges detection",677,null],[13,"HIGH","","4: High level detection",677,null],[13,"LOW","","5: Low level detection",677,null],[4,"SENSE3_A","","Input Sense Configuration 3",null,null],[13,"NONE","","0: No detection",678,null],[13,"RISE","","1: Rising edge detection",678,null],[13,"FALL","","2: Falling edge detection",678,null],[13,"BOTH","","3: Both edges detection",678,null],[13,"HIGH","","4: High level detection",678,null],[13,"LOW","","5: Low level detection",678,null],[4,"SENSE4_A","","Input Sense Configuration 4",null,null],[13,"NONE","","0: No detection",679,null],[13,"RISE","","1: Rising edge detection",679,null],[13,"FALL","","2: Falling edge detection",679,null],[13,"BOTH","","3: Both edges detection",679,null],[13,"HIGH","","4: High level detection",679,null],[13,"LOW","","5: Low level detection",679,null],[4,"SENSE5_A","","Input Sense Configuration 5",null,null],[13,"NONE","","0: No detection",680,null],[13,"RISE","","1: Rising edge detection",680,null],[13,"FALL","","2: Falling edge detection",680,null],[13,"BOTH","","3: Both edges detection",680,null],[13,"HIGH","","4: High level detection",680,null],[13,"LOW","","5: Low level detection",680,null],[4,"SENSE6_A","","Input Sense Configuration 6",null,null],[13,"NONE","","0: No detection",681,null],[13,"RISE","","1: Rising edge detection",681,null],[13,"FALL","","2: Falling edge detection",681,null],[13,"BOTH","","3: Both edges detection",681,null],[13,"HIGH","","4: High level detection",681,null],[13,"LOW","","5: Low level detection",681,null],[4,"SENSE7_A","","Input Sense Configuration 7",null,null],[13,"NONE","","0: No detection",682,null],[13,"RISE","","1: Rising edge detection",682,null],[13,"FALL","","2: Falling edge detection",682,null],[13,"BOTH","","3: Both edges detection",682,null],[13,"HIGH","","4: High level detection",682,null],[13,"LOW","","5: Low level detection",682,null],[6,"R","","Reader of register CONFIG[%s]",null,null],[6,"W","","Writer for register CONFIG[%s]",null,null],[6,"SENSE0_R","","Reader of field `SENSE0`",null,null],[6,"FILTEN0_R","","Reader of field `FILTEN0`",null,null],[6,"SENSE1_R","","Reader of field `SENSE1`",null,null],[6,"FILTEN1_R","","Reader of field `FILTEN1`",null,null],[6,"SENSE2_R","","Reader of field `SENSE2`",null,null],[6,"FILTEN2_R","","Reader of field `FILTEN2`",null,null],[6,"SENSE3_R","","Reader of field `SENSE3`",null,null],[6,"FILTEN3_R","","Reader of field `FILTEN3`",null,null],[6,"SENSE4_R","","Reader of field `SENSE4`",null,null],[6,"FILTEN4_R","","Reader of field `FILTEN4`",null,null],[6,"SENSE5_R","","Reader of field `SENSE5`",null,null],[6,"FILTEN5_R","","Reader of field `FILTEN5`",null,null],[6,"SENSE6_R","","Reader of field `SENSE6`",null,null],[6,"FILTEN6_R","","Reader of field `FILTEN6`",null,null],[6,"SENSE7_R","","Reader of field `SENSE7`",null,null],[6,"FILTEN7_R","","Reader of field `FILTEN7`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense0_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",683,[[],[["variant",4],["sense0_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",683,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",683,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",683,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",683,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",683,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",683,[[]]],[11,"variant","","Writes `variant` to the field",684,[[["sense0_a",4]],["w",6]]],[11,"none","","No detection",684,[[],["w",6]]],[11,"rise","","Rising edge detection",684,[[],["w",6]]],[11,"fall","","Falling edge detection",684,[[],["w",6]]],[11,"both","","Both edges detection",684,[[],["w",6]]],[11,"high","","High level detection",684,[[],["w",6]]],[11,"low","","Low level detection",684,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",684,[[],["w",6]]],[11,"set_bit","","Sets the field bit",685,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",685,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",685,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense1_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",686,[[],[["variant",4],["sense1_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",686,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",686,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",686,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",686,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",686,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",686,[[]]],[11,"variant","","Writes `variant` to the field",687,[[["sense1_a",4]],["w",6]]],[11,"none","","No detection",687,[[],["w",6]]],[11,"rise","","Rising edge detection",687,[[],["w",6]]],[11,"fall","","Falling edge detection",687,[[],["w",6]]],[11,"both","","Both edges detection",687,[[],["w",6]]],[11,"high","","High level detection",687,[[],["w",6]]],[11,"low","","Low level detection",687,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",687,[[],["w",6]]],[11,"set_bit","","Sets the field bit",688,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",688,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",688,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense2_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",689,[[],[["variant",4],["sense2_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",689,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",689,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",689,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",689,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",689,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",689,[[]]],[11,"variant","","Writes `variant` to the field",690,[[["sense2_a",4]],["w",6]]],[11,"none","","No detection",690,[[],["w",6]]],[11,"rise","","Rising edge detection",690,[[],["w",6]]],[11,"fall","","Falling edge detection",690,[[],["w",6]]],[11,"both","","Both edges detection",690,[[],["w",6]]],[11,"high","","High level detection",690,[[],["w",6]]],[11,"low","","Low level detection",690,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",690,[[],["w",6]]],[11,"set_bit","","Sets the field bit",691,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",691,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",691,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense3_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",692,[[],[["variant",4],["sense3_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",692,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",692,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",692,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",692,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",692,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",692,[[]]],[11,"variant","","Writes `variant` to the field",693,[[["sense3_a",4]],["w",6]]],[11,"none","","No detection",693,[[],["w",6]]],[11,"rise","","Rising edge detection",693,[[],["w",6]]],[11,"fall","","Falling edge detection",693,[[],["w",6]]],[11,"both","","Both edges detection",693,[[],["w",6]]],[11,"high","","High level detection",693,[[],["w",6]]],[11,"low","","Low level detection",693,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",693,[[],["w",6]]],[11,"set_bit","","Sets the field bit",694,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",694,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",694,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["sense4_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",695,[[],[["sense4_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",695,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",695,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",695,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",695,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",695,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",695,[[]]],[11,"variant","","Writes `variant` to the field",696,[[["sense4_a",4]],["w",6]]],[11,"none","","No detection",696,[[],["w",6]]],[11,"rise","","Rising edge detection",696,[[],["w",6]]],[11,"fall","","Falling edge detection",696,[[],["w",6]]],[11,"both","","Both edges detection",696,[[],["w",6]]],[11,"high","","High level detection",696,[[],["w",6]]],[11,"low","","Low level detection",696,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",696,[[],["w",6]]],[11,"set_bit","","Sets the field bit",697,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",697,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",697,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense5_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",698,[[],[["variant",4],["sense5_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",698,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",698,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",698,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",698,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",698,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",698,[[]]],[11,"variant","","Writes `variant` to the field",699,[[["sense5_a",4]],["w",6]]],[11,"none","","No detection",699,[[],["w",6]]],[11,"rise","","Rising edge detection",699,[[],["w",6]]],[11,"fall","","Falling edge detection",699,[[],["w",6]]],[11,"both","","Both edges detection",699,[[],["w",6]]],[11,"high","","High level detection",699,[[],["w",6]]],[11,"low","","Low level detection",699,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",699,[[],["w",6]]],[11,"set_bit","","Sets the field bit",700,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",700,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",700,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["sense6_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",701,[[],[["sense6_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",701,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",701,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",701,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",701,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",701,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",701,[[]]],[11,"variant","","Writes `variant` to the field",702,[[["sense6_a",4]],["w",6]]],[11,"none","","No detection",702,[[],["w",6]]],[11,"rise","","Rising edge detection",702,[[],["w",6]]],[11,"fall","","Falling edge detection",702,[[],["w",6]]],[11,"both","","Both edges detection",702,[[],["w",6]]],[11,"high","","High level detection",702,[[],["w",6]]],[11,"low","","Low level detection",702,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",702,[[],["w",6]]],[11,"set_bit","","Sets the field bit",703,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",703,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",703,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sense7_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",6,[[]]],[11,"variant","atsamd51g::eic::config","Get enumerated values variant",704,[[],[["variant",4],["sense7_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",704,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",704,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",704,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",704,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",704,[[]]],[11,"is_low","","Checks if the value of the field is `LOW`",704,[[]]],[11,"variant","","Writes `variant` to the field",705,[[["sense7_a",4]],["w",6]]],[11,"none","","No detection",705,[[],["w",6]]],[11,"rise","","Rising edge detection",705,[[],["w",6]]],[11,"fall","","Falling edge detection",705,[[],["w",6]]],[11,"both","","Both edges detection",705,[[],["w",6]]],[11,"high","","High level detection",705,[[],["w",6]]],[11,"low","","Low level detection",705,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",705,[[],["w",6]]],[11,"set_bit","","Sets the field bit",706,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",706,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",706,[[],["w",6]]],[11,"sense0","atsamd51g::generic","Bits 0:2 - Input Sense Configuration 0",6,[[],["sense0_r",6]]],[11,"filten0","","Bit 3 - Filter Enable 0",6,[[],["filten0_r",6]]],[11,"sense1","","Bits 4:6 - Input Sense Configuration 1",6,[[],["sense1_r",6]]],[11,"filten1","","Bit 7 - Filter Enable 1",6,[[],["filten1_r",6]]],[11,"sense2","","Bits 8:10 - Input Sense Configuration 2",6,[[],["sense2_r",6]]],[11,"filten2","","Bit 11 - Filter Enable 2",6,[[],["filten2_r",6]]],[11,"sense3","","Bits 12:14 - Input Sense Configuration 3",6,[[],["sense3_r",6]]],[11,"filten3","","Bit 15 - Filter Enable 3",6,[[],["filten3_r",6]]],[11,"sense4","","Bits 16:18 - Input Sense Configuration 4",6,[[],["sense4_r",6]]],[11,"filten4","","Bit 19 - Filter Enable 4",6,[[],["filten4_r",6]]],[11,"sense5","","Bits 20:22 - Input Sense Configuration 5",6,[[],["sense5_r",6]]],[11,"filten5","","Bit 23 - Filter Enable 5",6,[[],["filten5_r",6]]],[11,"sense6","","Bits 24:26 - Input Sense Configuration 6",6,[[],["sense6_r",6]]],[11,"filten6","","Bit 27 - Filter Enable 6",6,[[],["filten6_r",6]]],[11,"sense7","","Bits 28:30 - Input Sense Configuration 7",6,[[],["sense7_r",6]]],[11,"filten7","","Bit 31 - Filter Enable 7",6,[[],["filten7_r",6]]],[11,"sense0","atsamd51g::eic::config","Bits 0:2 - Input Sense Configuration 0",707,[[],["sense0_r",6]]],[11,"filten0","","Bit 3 - Filter Enable 0",707,[[],["filten0_r",6]]],[11,"sense1","","Bits 4:6 - Input Sense Configuration 1",707,[[],["sense1_r",6]]],[11,"filten1","","Bit 7 - Filter Enable 1",707,[[],["filten1_r",6]]],[11,"sense2","","Bits 8:10 - Input Sense Configuration 2",707,[[],["sense2_r",6]]],[11,"filten2","","Bit 11 - Filter Enable 2",707,[[],["filten2_r",6]]],[11,"sense3","","Bits 12:14 - Input Sense Configuration 3",707,[[],["sense3_r",6]]],[11,"filten3","","Bit 15 - Filter Enable 3",707,[[],["filten3_r",6]]],[11,"sense4","","Bits 16:18 - Input Sense Configuration 4",707,[[],["sense4_r",6]]],[11,"filten4","","Bit 19 - Filter Enable 4",707,[[],["filten4_r",6]]],[11,"sense5","","Bits 20:22 - Input Sense Configuration 5",707,[[],["sense5_r",6]]],[11,"filten5","","Bit 23 - Filter Enable 5",707,[[],["filten5_r",6]]],[11,"sense6","","Bits 24:26 - Input Sense Configuration 6",707,[[],["sense6_r",6]]],[11,"filten6","","Bit 27 - Filter Enable 6",707,[[],["filten6_r",6]]],[11,"sense7","","Bits 28:30 - Input Sense Configuration 7",707,[[],["sense7_r",6]]],[11,"filten7","","Bit 31 - Filter Enable 7",707,[[],["filten7_r",6]]],[11,"sense0","atsamd51g::generic","Bits 0:2 - Input Sense Configuration 0",7,[[],["sense0_w",3]]],[11,"filten0","","Bit 3 - Filter Enable 0",7,[[],["filten0_w",3]]],[11,"sense1","","Bits 4:6 - Input Sense Configuration 1",7,[[],["sense1_w",3]]],[11,"filten1","","Bit 7 - Filter Enable 1",7,[[],["filten1_w",3]]],[11,"sense2","","Bits 8:10 - Input Sense Configuration 2",7,[[],["sense2_w",3]]],[11,"filten2","","Bit 11 - Filter Enable 2",7,[[],["filten2_w",3]]],[11,"sense3","","Bits 12:14 - Input Sense Configuration 3",7,[[],["sense3_w",3]]],[11,"filten3","","Bit 15 - Filter Enable 3",7,[[],["filten3_w",3]]],[11,"sense4","","Bits 16:18 - Input Sense Configuration 4",7,[[],["sense4_w",3]]],[11,"filten4","","Bit 19 - Filter Enable 4",7,[[],["filten4_w",3]]],[11,"sense5","","Bits 20:22 - Input Sense Configuration 5",7,[[],["sense5_w",3]]],[11,"filten5","","Bit 23 - Filter Enable 5",7,[[],["filten5_w",3]]],[11,"sense6","","Bits 24:26 - Input Sense Configuration 6",7,[[],["sense6_w",3]]],[11,"filten6","","Bit 27 - Filter Enable 6",7,[[],["filten6_w",3]]],[11,"sense7","","Bits 28:30 - Input Sense Configuration 7",7,[[],["sense7_w",3]]],[11,"filten7","","Bit 31 - Filter Enable 7",7,[[],["filten7_w",3]]],[11,"sense0","atsamd51g::eic::config","Bits 0:2 - Input Sense Configuration 0",708,[[],["sense0_w",3]]],[11,"filten0","","Bit 3 - Filter Enable 0",708,[[],["filten0_w",3]]],[11,"sense1","","Bits 4:6 - Input Sense Configuration 1",708,[[],["sense1_w",3]]],[11,"filten1","","Bit 7 - Filter Enable 1",708,[[],["filten1_w",3]]],[11,"sense2","","Bits 8:10 - Input Sense Configuration 2",708,[[],["sense2_w",3]]],[11,"filten2","","Bit 11 - Filter Enable 2",708,[[],["filten2_w",3]]],[11,"sense3","","Bits 12:14 - Input Sense Configuration 3",708,[[],["sense3_w",3]]],[11,"filten3","","Bit 15 - Filter Enable 3",708,[[],["filten3_w",3]]],[11,"sense4","","Bits 16:18 - Input Sense Configuration 4",708,[[],["sense4_w",3]]],[11,"filten4","","Bit 19 - Filter Enable 4",708,[[],["filten4_w",3]]],[11,"sense5","","Bits 20:22 - Input Sense Configuration 5",708,[[],["sense5_w",3]]],[11,"filten5","","Bit 23 - Filter Enable 5",708,[[],["filten5_w",3]]],[11,"sense6","","Bits 24:26 - Input Sense Configuration 6",708,[[],["sense6_w",3]]],[11,"filten6","","Bit 27 - Filter Enable 6",708,[[],["filten6_w",3]]],[11,"sense7","","Bits 28:30 - Input Sense Configuration 7",708,[[],["sense7_w",3]]],[11,"filten7","","Bit 31 - Filter Enable 7",708,[[],["filten7_w",3]]],[0,"debouncen","atsamd51g::eic","Debouncer Enable",null,null],[3,"DEBOUNCEN_W","atsamd51g::eic::debouncen","Write proxy for field `DEBOUNCEN`",null,null],[6,"R","","Reader of register DEBOUNCEN",null,null],[6,"W","","Writer for register DEBOUNCEN",null,null],[6,"DEBOUNCEN_R","","Reader of field `DEBOUNCEN`",null,null],[11,"bits","","Writes raw bits to the field",709,[[],["w",6]]],[11,"debouncen","atsamd51g::generic","Bits 0:15 - Debouncer Enable",6,[[],["debouncen_r",6]]],[11,"debouncen","atsamd51g::eic::debouncen","Bits 0:15 - Debouncer Enable",710,[[],["debouncen_r",6]]],[11,"debouncen","atsamd51g::generic","Bits 0:15 - Debouncer Enable",7,[[],["debouncen_w",3]]],[11,"debouncen","atsamd51g::eic::debouncen","Bits 0:15 - Debouncer Enable",711,[[],["debouncen_w",3]]],[0,"dprescaler","atsamd51g::eic","Debouncer Prescaler",null,null],[3,"PRESCALER0_W","atsamd51g::eic::dprescaler","Write proxy for field `PRESCALER0`",null,null],[3,"STATES0_W","","Write proxy for field `STATES0`",null,null],[3,"PRESCALER1_W","","Write proxy for field `PRESCALER1`",null,null],[3,"STATES1_W","","Write proxy for field `STATES1`",null,null],[3,"TICKON_W","","Write proxy for field `TICKON`",null,null],[4,"PRESCALER0_A","","Debouncer Prescaler",null,null],[13,"DIV2","","0: EIC clock divided by 2",712,null],[13,"DIV4","","1: EIC clock divided by 4",712,null],[13,"DIV8","","2: EIC clock divided by 8",712,null],[13,"DIV16","","3: EIC clock divided by 16",712,null],[13,"DIV32","","4: EIC clock divided by 32",712,null],[13,"DIV64","","5: EIC clock divided by 64",712,null],[13,"DIV128","","6: EIC clock divided by 128",712,null],[13,"DIV256","","7: EIC clock divided by 256",712,null],[4,"STATES0_A","","Debouncer number of states",null,null],[13,"LFREQ3","","0: 3 low frequency samples",713,null],[13,"LFREQ7","","1: 7 low frequency samples",713,null],[4,"PRESCALER1_A","","Debouncer Prescaler",null,null],[13,"DIV2","","0: EIC clock divided by 2",714,null],[13,"DIV4","","1: EIC clock divided by 4",714,null],[13,"DIV8","","2: EIC clock divided by 8",714,null],[13,"DIV16","","3: EIC clock divided by 16",714,null],[13,"DIV32","","4: EIC clock divided by 32",714,null],[13,"DIV64","","5: EIC clock divided by 64",714,null],[13,"DIV128","","6: EIC clock divided by 128",714,null],[13,"DIV256","","7: EIC clock divided by 256",714,null],[4,"STATES1_A","","Debouncer number of states",null,null],[13,"LFREQ3","","0: 3 low frequency samples",715,null],[13,"LFREQ7","","1: 7 low frequency samples",715,null],[4,"TICKON_A","","Pin Sampler frequency selection",null,null],[13,"CLK_GCLK_EIC","","0: Clocked by GCLK",716,null],[13,"CLK_LFREQ","","1: Clocked by Low Frequency Clock",716,null],[6,"R","","Reader of register DPRESCALER",null,null],[6,"W","","Writer for register DPRESCALER",null,null],[6,"PRESCALER0_R","","Reader of field `PRESCALER0`",null,null],[6,"STATES0_R","","Reader of field `STATES0`",null,null],[6,"PRESCALER1_R","","Reader of field `PRESCALER1`",null,null],[6,"STATES1_R","","Reader of field `STATES1`",null,null],[6,"TICKON_R","","Reader of field `TICKON`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler0_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::eic::dprescaler","Get enumerated values variant",717,[[],["prescaler0_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",717,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",717,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",717,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",717,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",717,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",717,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",717,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",717,[[]]],[11,"variant","","Writes `variant` to the field",718,[[["prescaler0_a",4]],["w",6]]],[11,"div2","","EIC clock divided by 2",718,[[],["w",6]]],[11,"div4","","EIC clock divided by 4",718,[[],["w",6]]],[11,"div8","","EIC clock divided by 8",718,[[],["w",6]]],[11,"div16","","EIC clock divided by 16",718,[[],["w",6]]],[11,"div32","","EIC clock divided by 32",718,[[],["w",6]]],[11,"div64","","EIC clock divided by 64",718,[[],["w",6]]],[11,"div128","","EIC clock divided by 128",718,[[],["w",6]]],[11,"div256","","EIC clock divided by 256",718,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",718,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["states0_a",4]]],[11,"is_lfreq3","","Checks if the value of the field is `LFREQ3`",6,[[]]],[11,"is_lfreq7","","Checks if the value of the field is `LFREQ7`",6,[[]]],[11,"variant","atsamd51g::eic::dprescaler","Get enumerated values variant",719,[[],["states0_a",4]]],[11,"is_lfreq3","","Checks if the value of the field is `LFREQ3`",719,[[]]],[11,"is_lfreq7","","Checks if the value of the field is `LFREQ7`",719,[[]]],[11,"variant","","Writes `variant` to the field",720,[[["states0_a",4]],["w",6]]],[11,"lfreq3","","3 low frequency samples",720,[[],["w",6]]],[11,"lfreq7","","7 low frequency samples",720,[[],["w",6]]],[11,"set_bit","","Sets the field bit",720,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",720,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",720,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler1_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::eic::dprescaler","Get enumerated values variant",721,[[],["prescaler1_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",721,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",721,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",721,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",721,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",721,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",721,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",721,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",721,[[]]],[11,"variant","","Writes `variant` to the field",722,[[["prescaler1_a",4]],["w",6]]],[11,"div2","","EIC clock divided by 2",722,[[],["w",6]]],[11,"div4","","EIC clock divided by 4",722,[[],["w",6]]],[11,"div8","","EIC clock divided by 8",722,[[],["w",6]]],[11,"div16","","EIC clock divided by 16",722,[[],["w",6]]],[11,"div32","","EIC clock divided by 32",722,[[],["w",6]]],[11,"div64","","EIC clock divided by 64",722,[[],["w",6]]],[11,"div128","","EIC clock divided by 128",722,[[],["w",6]]],[11,"div256","","EIC clock divided by 256",722,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",722,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["states1_a",4]]],[11,"is_lfreq3","","Checks if the value of the field is `LFREQ3`",6,[[]]],[11,"is_lfreq7","","Checks if the value of the field is `LFREQ7`",6,[[]]],[11,"variant","atsamd51g::eic::dprescaler","Get enumerated values variant",723,[[],["states1_a",4]]],[11,"is_lfreq3","","Checks if the value of the field is `LFREQ3`",723,[[]]],[11,"is_lfreq7","","Checks if the value of the field is `LFREQ7`",723,[[]]],[11,"variant","","Writes `variant` to the field",724,[[["states1_a",4]],["w",6]]],[11,"lfreq3","","3 low frequency samples",724,[[],["w",6]]],[11,"lfreq7","","7 low frequency samples",724,[[],["w",6]]],[11,"set_bit","","Sets the field bit",724,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",724,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",724,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["tickon_a",4]]],[11,"is_clk_gclk_eic","","Checks if the value of the field is `CLK_GCLK_EIC`",6,[[]]],[11,"is_clk_lfreq","","Checks if the value of the field is `CLK_LFREQ`",6,[[]]],[11,"variant","atsamd51g::eic::dprescaler","Get enumerated values variant",725,[[],["tickon_a",4]]],[11,"is_clk_gclk_eic","","Checks if the value of the field is `CLK_GCLK_EIC`",725,[[]]],[11,"is_clk_lfreq","","Checks if the value of the field is `CLK_LFREQ`",725,[[]]],[11,"variant","","Writes `variant` to the field",726,[[["tickon_a",4]],["w",6]]],[11,"clk_gclk_eic","","Clocked by GCLK",726,[[],["w",6]]],[11,"clk_lfreq","","Clocked by Low Frequency Clock",726,[[],["w",6]]],[11,"set_bit","","Sets the field bit",726,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",726,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",726,[[],["w",6]]],[11,"prescaler0","atsamd51g::generic","Bits 0:2 - Debouncer Prescaler",6,[[],["prescaler0_r",6]]],[11,"states0","","Bit 3 - Debouncer number of states",6,[[],["states0_r",6]]],[11,"prescaler1","","Bits 4:6 - Debouncer Prescaler",6,[[],["prescaler1_r",6]]],[11,"states1","","Bit 7 - Debouncer number of states",6,[[],["states1_r",6]]],[11,"tickon","","Bit 16 - Pin Sampler frequency selection",6,[[],["tickon_r",6]]],[11,"prescaler0","atsamd51g::eic::dprescaler","Bits 0:2 - Debouncer Prescaler",727,[[],["prescaler0_r",6]]],[11,"states0","","Bit 3 - Debouncer number of states",727,[[],["states0_r",6]]],[11,"prescaler1","","Bits 4:6 - Debouncer Prescaler",727,[[],["prescaler1_r",6]]],[11,"states1","","Bit 7 - Debouncer number of states",727,[[],["states1_r",6]]],[11,"tickon","","Bit 16 - Pin Sampler frequency selection",727,[[],["tickon_r",6]]],[11,"prescaler0","atsamd51g::generic","Bits 0:2 - Debouncer Prescaler",7,[[],["prescaler0_w",3]]],[11,"states0","","Bit 3 - Debouncer number of states",7,[[],["states0_w",3]]],[11,"prescaler1","","Bits 4:6 - Debouncer Prescaler",7,[[],["prescaler1_w",3]]],[11,"states1","","Bit 7 - Debouncer number of states",7,[[],["states1_w",3]]],[11,"tickon","","Bit 16 - Pin Sampler frequency selection",7,[[],["tickon_w",3]]],[11,"prescaler0","atsamd51g::eic::dprescaler","Bits 0:2 - Debouncer Prescaler",728,[[],["prescaler0_w",3]]],[11,"states0","","Bit 3 - Debouncer number of states",728,[[],["states0_w",3]]],[11,"prescaler1","","Bits 4:6 - Debouncer Prescaler",728,[[],["prescaler1_w",3]]],[11,"states1","","Bit 7 - Debouncer number of states",728,[[],["states1_w",3]]],[11,"tickon","","Bit 16 - Pin Sampler frequency selection",728,[[],["tickon_w",3]]],[0,"pinstate","atsamd51g::eic","Pin State",null,null],[6,"R","atsamd51g::eic::pinstate","Reader of register PINSTATE",null,null],[6,"PINSTATE_R","","Reader of field `PINSTATE`",null,null],[11,"pinstate","atsamd51g::generic","Bits 0:15 - Pin State",6,[[],["pinstate_r",6]]],[11,"pinstate","atsamd51g::eic::pinstate","Bits 0:15 - Pin State",729,[[],["pinstate_r",6]]],[6,"CTRLA","atsamd51g::eic","Control A",null,null],[6,"NMICTRL","","Non-Maskable Interrupt Control",null,null],[6,"NMIFLAG","","Non-Maskable Interrupt Flag Status and Clear",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"ASYNCH","","External Interrupt Asynchronous Mode",null,null],[6,"CONFIG","","External Interrupt Sense Configuration",null,null],[6,"DEBOUNCEN","","Debouncer Enable",null,null],[6,"DPRESCALER","","Debouncer Prescaler",null,null],[6,"PINSTATE","","Pin State",null,null],[0,"evsys","atsamd51g","Event System Interface",null,null],[3,"RegisterBlock","atsamd51g::evsys","Register block",null,null],[12,"ctrla","","0x00 - Control",730,null],[12,"swevt","","0x04 - Software Event",730,null],[12,"prictrl","","0x08 - Priority Control",730,null],[12,"intpend","","0x10 - Channel Pending Interrupt",730,null],[12,"intstatus","","0x14 - Interrupt Status",730,null],[12,"busych","","0x18 - Busy Channels",730,null],[12,"readyusr","","0x1c - Ready Users",730,null],[12,"channel","","0x20 - CHANNEL[%s]",730,null],[12,"user","","0x120 - User Multiplexer n",730,null],[3,"CHANNEL","","Register block",null,null],[12,"channel","","0x00 - Channel n Control",731,null],[12,"chintenclr","","0x04 - Channel n Interrupt Enable Clear",731,null],[12,"chintenset","","0x05 - Channel n Interrupt Enable Set",731,null],[12,"chintflag","","0x06 - Channel n Interrupt Flag Status and Clear",731,null],[12,"chstatus","","0x07 - Channel n Status",731,null],[0,"channel","","Register block CHANNEL[%s]",null,null],[0,"channel","atsamd51g::evsys::channel","Channel n Control",null,null],[3,"EVGEN_W","atsamd51g::evsys::channel::channel","Write proxy for field `EVGEN`",null,null],[3,"PATH_W","","Write proxy for field `PATH`",null,null],[3,"EDGSEL_W","","Write proxy for field `EDGSEL`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[4,"PATH_A","","Path Selection",null,null],[13,"SYNCHRONOUS","","0: Synchronous path",732,null],[13,"RESYNCHRONIZED","","1: Resynchronized path",732,null],[13,"ASYNCHRONOUS","","2: Asynchronous path",732,null],[4,"EDGSEL_A","","Edge Detection Selection",null,null],[13,"NO_EVT_OUTPUT","","0: No event output when using the resynchronized or…",733,null],[13,"RISING_EDGE","","1: Event detection only on the rising edge of the signal…",733,null],[13,"FALLING_EDGE","","2: Event detection only on the falling edge of the signal…",733,null],[13,"BOTH_EDGES","","3: Event detection on rising and falling edges of the…",733,null],[6,"R","","Reader of register CHANNEL",null,null],[6,"W","","Writer for register CHANNEL",null,null],[6,"EVGEN_R","","Reader of field `EVGEN`",null,null],[6,"PATH_R","","Reader of field `PATH`",null,null],[6,"EDGSEL_R","","Reader of field `EDGSEL`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[11,"bits","","Writes raw bits to the field",734,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["path_a",4],["variant",4]]]],[11,"is_synchronous","","Checks if the value of the field is `SYNCHRONOUS`",6,[[]]],[11,"is_resynchronized","","Checks if the value of the field is `RESYNCHRONIZED`",6,[[]]],[11,"is_asynchronous","","Checks if the value of the field is `ASYNCHRONOUS`",6,[[]]],[11,"variant","atsamd51g::evsys::channel::channel","Get enumerated values variant",735,[[],[["path_a",4],["variant",4]]]],[11,"is_synchronous","","Checks if the value of the field is `SYNCHRONOUS`",735,[[]]],[11,"is_resynchronized","","Checks if the value of the field is `RESYNCHRONIZED`",735,[[]]],[11,"is_asynchronous","","Checks if the value of the field is `ASYNCHRONOUS`",735,[[]]],[11,"variant","","Writes `variant` to the field",736,[[["path_a",4]],["w",6]]],[11,"synchronous","","Synchronous path",736,[[],["w",6]]],[11,"resynchronized","","Resynchronized path",736,[[],["w",6]]],[11,"asynchronous","","Asynchronous path",736,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",736,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["edgsel_a",4]]],[11,"is_no_evt_output","","Checks if the value of the field is `NO_EVT_OUTPUT`",6,[[]]],[11,"is_rising_edge","","Checks if the value of the field is `RISING_EDGE`",6,[[]]],[11,"is_falling_edge","","Checks if the value of the field is `FALLING_EDGE`",6,[[]]],[11,"is_both_edges","","Checks if the value of the field is `BOTH_EDGES`",6,[[]]],[11,"variant","atsamd51g::evsys::channel::channel","Get enumerated values variant",737,[[],["edgsel_a",4]]],[11,"is_no_evt_output","","Checks if the value of the field is `NO_EVT_OUTPUT`",737,[[]]],[11,"is_rising_edge","","Checks if the value of the field is `RISING_EDGE`",737,[[]]],[11,"is_falling_edge","","Checks if the value of the field is `FALLING_EDGE`",737,[[]]],[11,"is_both_edges","","Checks if the value of the field is `BOTH_EDGES`",737,[[]]],[11,"variant","","Writes `variant` to the field",738,[[["edgsel_a",4]],["w",6]]],[11,"no_evt_output","","No event output when using the resynchronized or…",738,[[],["w",6]]],[11,"rising_edge","","Event detection only on the rising edge of the signal from…",738,[[],["w",6]]],[11,"falling_edge","","Event detection only on the falling edge of the signal…",738,[[],["w",6]]],[11,"both_edges","","Event detection on rising and falling edges of the signal…",738,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",738,[[],["w",6]]],[11,"set_bit","","Sets the field bit",739,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",739,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",739,[[],["w",6]]],[11,"set_bit","","Sets the field bit",740,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",740,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",740,[[],["w",6]]],[11,"evgen","atsamd51g::generic","Bits 0:6 - Event Generator Selection",6,[[],["evgen_r",6]]],[11,"path","","Bits 8:9 - Path Selection",6,[[],["path_r",6]]],[11,"edgsel","","Bits 10:11 - Edge Detection Selection",6,[[],["edgsel_r",6]]],[11,"runstdby","","Bit 14 - Run in standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 15 - Generic Clock On Demand",6,[[],["ondemand_r",6]]],[11,"evgen","atsamd51g::evsys::channel::channel","Bits 0:6 - Event Generator Selection",741,[[],["evgen_r",6]]],[11,"path","","Bits 8:9 - Path Selection",741,[[],["path_r",6]]],[11,"edgsel","","Bits 10:11 - Edge Detection Selection",741,[[],["edgsel_r",6]]],[11,"runstdby","","Bit 14 - Run in standby",741,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 15 - Generic Clock On Demand",741,[[],["ondemand_r",6]]],[11,"evgen","atsamd51g::generic","Bits 0:6 - Event Generator Selection",7,[[],["evgen_w",3]]],[11,"path","","Bits 8:9 - Path Selection",7,[[],["path_w",3]]],[11,"edgsel","","Bits 10:11 - Edge Detection Selection",7,[[],["edgsel_w",3]]],[11,"runstdby","","Bit 14 - Run in standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 15 - Generic Clock On Demand",7,[[],["ondemand_w",3]]],[11,"evgen","atsamd51g::evsys::channel::channel","Bits 0:6 - Event Generator Selection",742,[[],["evgen_w",3]]],[11,"path","","Bits 8:9 - Path Selection",742,[[],["path_w",3]]],[11,"edgsel","","Bits 10:11 - Edge Detection Selection",742,[[],["edgsel_w",3]]],[11,"runstdby","","Bit 14 - Run in standby",742,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 15 - Generic Clock On Demand",742,[[],["ondemand_w",3]]],[0,"chintenclr","atsamd51g::evsys::channel","Channel n Interrupt Enable Clear",null,null],[3,"OVR_W","atsamd51g::evsys::channel::chintenclr","Write proxy for field `OVR`",null,null],[3,"EVD_W","","Write proxy for field `EVD`",null,null],[6,"R","","Reader of register CHINTENCLR",null,null],[6,"W","","Writer for register CHINTENCLR",null,null],[6,"OVR_R","","Reader of field `OVR`",null,null],[6,"EVD_R","","Reader of field `EVD`",null,null],[11,"set_bit","","Sets the field bit",743,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",743,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",743,[[],["w",6]]],[11,"set_bit","","Sets the field bit",744,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",744,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",744,[[],["w",6]]],[11,"ovr","atsamd51g::generic","Bit 0 - Channel Overrun Interrupt Disable",6,[[],["ovr_r",6]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Disable",6,[[],["evd_r",6]]],[11,"ovr","atsamd51g::evsys::channel::chintenclr","Bit 0 - Channel Overrun Interrupt Disable",745,[[],["ovr_r",6]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Disable",745,[[],["evd_r",6]]],[11,"ovr","atsamd51g::generic","Bit 0 - Channel Overrun Interrupt Disable",7,[[],["ovr_w",3]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Disable",7,[[],["evd_w",3]]],[11,"ovr","atsamd51g::evsys::channel::chintenclr","Bit 0 - Channel Overrun Interrupt Disable",746,[[],["ovr_w",3]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Disable",746,[[],["evd_w",3]]],[0,"chintenset","atsamd51g::evsys::channel","Channel n Interrupt Enable Set",null,null],[3,"OVR_W","atsamd51g::evsys::channel::chintenset","Write proxy for field `OVR`",null,null],[3,"EVD_W","","Write proxy for field `EVD`",null,null],[6,"R","","Reader of register CHINTENSET",null,null],[6,"W","","Writer for register CHINTENSET",null,null],[6,"OVR_R","","Reader of field `OVR`",null,null],[6,"EVD_R","","Reader of field `EVD`",null,null],[11,"set_bit","","Sets the field bit",747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",748,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",748,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",748,[[],["w",6]]],[11,"ovr","atsamd51g::generic","Bit 0 - Channel Overrun Interrupt Enable",6,[[],["ovr_r",6]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Enable",6,[[],["evd_r",6]]],[11,"ovr","atsamd51g::evsys::channel::chintenset","Bit 0 - Channel Overrun Interrupt Enable",749,[[],["ovr_r",6]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Enable",749,[[],["evd_r",6]]],[11,"ovr","atsamd51g::generic","Bit 0 - Channel Overrun Interrupt Enable",7,[[],["ovr_w",3]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Enable",7,[[],["evd_w",3]]],[11,"ovr","atsamd51g::evsys::channel::chintenset","Bit 0 - Channel Overrun Interrupt Enable",750,[[],["ovr_w",3]]],[11,"evd","","Bit 1 - Channel Event Detected Interrupt Enable",750,[[],["evd_w",3]]],[0,"chintflag","atsamd51g::evsys::channel","Channel n Interrupt Flag Status and Clear",null,null],[3,"OVR_W","atsamd51g::evsys::channel::chintflag","Write proxy for field `OVR`",null,null],[3,"EVD_W","","Write proxy for field `EVD`",null,null],[6,"R","","Reader of register CHINTFLAG",null,null],[6,"W","","Writer for register CHINTFLAG",null,null],[6,"OVR_R","","Reader of field `OVR`",null,null],[6,"EVD_R","","Reader of field `EVD`",null,null],[11,"set_bit","","Sets the field bit",751,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",751,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",751,[[],["w",6]]],[11,"set_bit","","Sets the field bit",752,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",752,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",752,[[],["w",6]]],[11,"ovr","atsamd51g::generic","Bit 0 - Channel Overrun",6,[[],["ovr_r",6]]],[11,"evd","","Bit 1 - Channel Event Detected",6,[[],["evd_r",6]]],[11,"ovr","atsamd51g::evsys::channel::chintflag","Bit 0 - Channel Overrun",753,[[],["ovr_r",6]]],[11,"evd","","Bit 1 - Channel Event Detected",753,[[],["evd_r",6]]],[11,"ovr","atsamd51g::generic","Bit 0 - Channel Overrun",7,[[],["ovr_w",3]]],[11,"evd","","Bit 1 - Channel Event Detected",7,[[],["evd_w",3]]],[11,"ovr","atsamd51g::evsys::channel::chintflag","Bit 0 - Channel Overrun",754,[[],["ovr_w",3]]],[11,"evd","","Bit 1 - Channel Event Detected",754,[[],["evd_w",3]]],[0,"chstatus","atsamd51g::evsys::channel","Channel n Status",null,null],[6,"R","atsamd51g::evsys::channel::chstatus","Reader of register CHSTATUS",null,null],[6,"RDYUSR_R","","Reader of field `RDYUSR`",null,null],[6,"BUSYCH_R","","Reader of field `BUSYCH`",null,null],[11,"rdyusr","atsamd51g::generic","Bit 0 - Ready User",6,[[],["rdyusr_r",6]]],[11,"busych","","Bit 1 - Busy Channel",6,[[],["busych_r",6]]],[11,"rdyusr","atsamd51g::evsys::channel::chstatus","Bit 0 - Ready User",755,[[],["rdyusr_r",6]]],[11,"busych","","Bit 1 - Busy Channel",755,[[],["busych_r",6]]],[6,"CHANNEL","atsamd51g::evsys::channel","Channel n Control",null,null],[6,"CHINTENCLR","","Channel n Interrupt Enable Clear",null,null],[6,"CHINTENSET","","Channel n Interrupt Enable Set",null,null],[6,"CHINTFLAG","","Channel n Interrupt Flag Status and Clear",null,null],[6,"CHSTATUS","","Channel n Status",null,null],[0,"ctrla","atsamd51g::evsys","Control",null,null],[3,"SWRST_W","atsamd51g::evsys::ctrla","Write proxy for field `SWRST`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[11,"set_bit","","Sets the field bit",756,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",756,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",756,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"swrst","atsamd51g::evsys::ctrla","Bit 0 - Software Reset",757,[[],["swrst_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"swrst","atsamd51g::evsys::ctrla","Bit 0 - Software Reset",758,[[],["swrst_w",3]]],[0,"swevt","atsamd51g::evsys","Software Event",null,null],[3,"CHANNEL0_W","atsamd51g::evsys::swevt","Write proxy for field `CHANNEL0`",null,null],[3,"CHANNEL1_W","","Write proxy for field `CHANNEL1`",null,null],[3,"CHANNEL2_W","","Write proxy for field `CHANNEL2`",null,null],[3,"CHANNEL3_W","","Write proxy for field `CHANNEL3`",null,null],[3,"CHANNEL4_W","","Write proxy for field `CHANNEL4`",null,null],[3,"CHANNEL5_W","","Write proxy for field `CHANNEL5`",null,null],[3,"CHANNEL6_W","","Write proxy for field `CHANNEL6`",null,null],[3,"CHANNEL7_W","","Write proxy for field `CHANNEL7`",null,null],[3,"CHANNEL8_W","","Write proxy for field `CHANNEL8`",null,null],[3,"CHANNEL9_W","","Write proxy for field `CHANNEL9`",null,null],[3,"CHANNEL10_W","","Write proxy for field `CHANNEL10`",null,null],[3,"CHANNEL11_W","","Write proxy for field `CHANNEL11`",null,null],[3,"CHANNEL12_W","","Write proxy for field `CHANNEL12`",null,null],[3,"CHANNEL13_W","","Write proxy for field `CHANNEL13`",null,null],[3,"CHANNEL14_W","","Write proxy for field `CHANNEL14`",null,null],[3,"CHANNEL15_W","","Write proxy for field `CHANNEL15`",null,null],[3,"CHANNEL16_W","","Write proxy for field `CHANNEL16`",null,null],[3,"CHANNEL17_W","","Write proxy for field `CHANNEL17`",null,null],[3,"CHANNEL18_W","","Write proxy for field `CHANNEL18`",null,null],[3,"CHANNEL19_W","","Write proxy for field `CHANNEL19`",null,null],[3,"CHANNEL20_W","","Write proxy for field `CHANNEL20`",null,null],[3,"CHANNEL21_W","","Write proxy for field `CHANNEL21`",null,null],[3,"CHANNEL22_W","","Write proxy for field `CHANNEL22`",null,null],[3,"CHANNEL23_W","","Write proxy for field `CHANNEL23`",null,null],[3,"CHANNEL24_W","","Write proxy for field `CHANNEL24`",null,null],[3,"CHANNEL25_W","","Write proxy for field `CHANNEL25`",null,null],[3,"CHANNEL26_W","","Write proxy for field `CHANNEL26`",null,null],[3,"CHANNEL27_W","","Write proxy for field `CHANNEL27`",null,null],[3,"CHANNEL28_W","","Write proxy for field `CHANNEL28`",null,null],[3,"CHANNEL29_W","","Write proxy for field `CHANNEL29`",null,null],[3,"CHANNEL30_W","","Write proxy for field `CHANNEL30`",null,null],[3,"CHANNEL31_W","","Write proxy for field `CHANNEL31`",null,null],[6,"W","","Writer for register SWEVT",null,null],[11,"set_bit","","Sets the field bit",759,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",759,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",759,[[],["w",6]]],[11,"set_bit","","Sets the field bit",760,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",760,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",760,[[],["w",6]]],[11,"set_bit","","Sets the field bit",761,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",761,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",761,[[],["w",6]]],[11,"set_bit","","Sets the field bit",762,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",762,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",762,[[],["w",6]]],[11,"set_bit","","Sets the field bit",763,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",763,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",763,[[],["w",6]]],[11,"set_bit","","Sets the field bit",764,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",764,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",764,[[],["w",6]]],[11,"set_bit","","Sets the field bit",765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",765,[[],["w",6]]],[11,"set_bit","","Sets the field bit",766,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",766,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",766,[[],["w",6]]],[11,"set_bit","","Sets the field bit",767,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",767,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",767,[[],["w",6]]],[11,"set_bit","","Sets the field bit",768,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",768,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",768,[[],["w",6]]],[11,"set_bit","","Sets the field bit",769,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",769,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",769,[[],["w",6]]],[11,"set_bit","","Sets the field bit",770,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",770,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",770,[[],["w",6]]],[11,"set_bit","","Sets the field bit",771,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",771,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",771,[[],["w",6]]],[11,"set_bit","","Sets the field bit",772,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",772,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",772,[[],["w",6]]],[11,"set_bit","","Sets the field bit",773,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",773,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",773,[[],["w",6]]],[11,"set_bit","","Sets the field bit",774,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",774,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",774,[[],["w",6]]],[11,"set_bit","","Sets the field bit",775,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",775,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",775,[[],["w",6]]],[11,"set_bit","","Sets the field bit",776,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",776,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",776,[[],["w",6]]],[11,"set_bit","","Sets the field bit",777,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",777,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",777,[[],["w",6]]],[11,"set_bit","","Sets the field bit",778,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",778,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",778,[[],["w",6]]],[11,"set_bit","","Sets the field bit",779,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",779,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",779,[[],["w",6]]],[11,"set_bit","","Sets the field bit",780,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",780,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",780,[[],["w",6]]],[11,"set_bit","","Sets the field bit",781,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",781,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",781,[[],["w",6]]],[11,"set_bit","","Sets the field bit",782,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",782,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",782,[[],["w",6]]],[11,"set_bit","","Sets the field bit",783,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",783,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",783,[[],["w",6]]],[11,"set_bit","","Sets the field bit",784,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",784,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",784,[[],["w",6]]],[11,"set_bit","","Sets the field bit",785,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",785,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",785,[[],["w",6]]],[11,"set_bit","","Sets the field bit",786,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",786,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",786,[[],["w",6]]],[11,"set_bit","","Sets the field bit",787,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",787,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",787,[[],["w",6]]],[11,"set_bit","","Sets the field bit",788,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",788,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",788,[[],["w",6]]],[11,"set_bit","","Sets the field bit",789,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",789,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",789,[[],["w",6]]],[11,"set_bit","","Sets the field bit",790,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",790,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",790,[[],["w",6]]],[11,"channel0","atsamd51g::generic","Bit 0 - Channel 0 Software Selection",7,[[],["channel0_w",3]]],[11,"channel1","","Bit 1 - Channel 1 Software Selection",7,[[],["channel1_w",3]]],[11,"channel2","","Bit 2 - Channel 2 Software Selection",7,[[],["channel2_w",3]]],[11,"channel3","","Bit 3 - Channel 3 Software Selection",7,[[],["channel3_w",3]]],[11,"channel4","","Bit 4 - Channel 4 Software Selection",7,[[],["channel4_w",3]]],[11,"channel5","","Bit 5 - Channel 5 Software Selection",7,[[],["channel5_w",3]]],[11,"channel6","","Bit 6 - Channel 6 Software Selection",7,[[],["channel6_w",3]]],[11,"channel7","","Bit 7 - Channel 7 Software Selection",7,[[],["channel7_w",3]]],[11,"channel8","","Bit 8 - Channel 8 Software Selection",7,[[],["channel8_w",3]]],[11,"channel9","","Bit 9 - Channel 9 Software Selection",7,[[],["channel9_w",3]]],[11,"channel10","","Bit 10 - Channel 10 Software Selection",7,[[],["channel10_w",3]]],[11,"channel11","","Bit 11 - Channel 11 Software Selection",7,[[],["channel11_w",3]]],[11,"channel12","","Bit 12 - Channel 12 Software Selection",7,[[],["channel12_w",3]]],[11,"channel13","","Bit 13 - Channel 13 Software Selection",7,[[],["channel13_w",3]]],[11,"channel14","","Bit 14 - Channel 14 Software Selection",7,[[],["channel14_w",3]]],[11,"channel15","","Bit 15 - Channel 15 Software Selection",7,[[],["channel15_w",3]]],[11,"channel16","","Bit 16 - Channel 16 Software Selection",7,[[],["channel16_w",3]]],[11,"channel17","","Bit 17 - Channel 17 Software Selection",7,[[],["channel17_w",3]]],[11,"channel18","","Bit 18 - Channel 18 Software Selection",7,[[],["channel18_w",3]]],[11,"channel19","","Bit 19 - Channel 19 Software Selection",7,[[],["channel19_w",3]]],[11,"channel20","","Bit 20 - Channel 20 Software Selection",7,[[],["channel20_w",3]]],[11,"channel21","","Bit 21 - Channel 21 Software Selection",7,[[],["channel21_w",3]]],[11,"channel22","","Bit 22 - Channel 22 Software Selection",7,[[],["channel22_w",3]]],[11,"channel23","","Bit 23 - Channel 23 Software Selection",7,[[],["channel23_w",3]]],[11,"channel24","","Bit 24 - Channel 24 Software Selection",7,[[],["channel24_w",3]]],[11,"channel25","","Bit 25 - Channel 25 Software Selection",7,[[],["channel25_w",3]]],[11,"channel26","","Bit 26 - Channel 26 Software Selection",7,[[],["channel26_w",3]]],[11,"channel27","","Bit 27 - Channel 27 Software Selection",7,[[],["channel27_w",3]]],[11,"channel28","","Bit 28 - Channel 28 Software Selection",7,[[],["channel28_w",3]]],[11,"channel29","","Bit 29 - Channel 29 Software Selection",7,[[],["channel29_w",3]]],[11,"channel30","","Bit 30 - Channel 30 Software Selection",7,[[],["channel30_w",3]]],[11,"channel31","","Bit 31 - Channel 31 Software Selection",7,[[],["channel31_w",3]]],[11,"channel0","atsamd51g::evsys::swevt","Bit 0 - Channel 0 Software Selection",791,[[],["channel0_w",3]]],[11,"channel1","","Bit 1 - Channel 1 Software Selection",791,[[],["channel1_w",3]]],[11,"channel2","","Bit 2 - Channel 2 Software Selection",791,[[],["channel2_w",3]]],[11,"channel3","","Bit 3 - Channel 3 Software Selection",791,[[],["channel3_w",3]]],[11,"channel4","","Bit 4 - Channel 4 Software Selection",791,[[],["channel4_w",3]]],[11,"channel5","","Bit 5 - Channel 5 Software Selection",791,[[],["channel5_w",3]]],[11,"channel6","","Bit 6 - Channel 6 Software Selection",791,[[],["channel6_w",3]]],[11,"channel7","","Bit 7 - Channel 7 Software Selection",791,[[],["channel7_w",3]]],[11,"channel8","","Bit 8 - Channel 8 Software Selection",791,[[],["channel8_w",3]]],[11,"channel9","","Bit 9 - Channel 9 Software Selection",791,[[],["channel9_w",3]]],[11,"channel10","","Bit 10 - Channel 10 Software Selection",791,[[],["channel10_w",3]]],[11,"channel11","","Bit 11 - Channel 11 Software Selection",791,[[],["channel11_w",3]]],[11,"channel12","","Bit 12 - Channel 12 Software Selection",791,[[],["channel12_w",3]]],[11,"channel13","","Bit 13 - Channel 13 Software Selection",791,[[],["channel13_w",3]]],[11,"channel14","","Bit 14 - Channel 14 Software Selection",791,[[],["channel14_w",3]]],[11,"channel15","","Bit 15 - Channel 15 Software Selection",791,[[],["channel15_w",3]]],[11,"channel16","","Bit 16 - Channel 16 Software Selection",791,[[],["channel16_w",3]]],[11,"channel17","","Bit 17 - Channel 17 Software Selection",791,[[],["channel17_w",3]]],[11,"channel18","","Bit 18 - Channel 18 Software Selection",791,[[],["channel18_w",3]]],[11,"channel19","","Bit 19 - Channel 19 Software Selection",791,[[],["channel19_w",3]]],[11,"channel20","","Bit 20 - Channel 20 Software Selection",791,[[],["channel20_w",3]]],[11,"channel21","","Bit 21 - Channel 21 Software Selection",791,[[],["channel21_w",3]]],[11,"channel22","","Bit 22 - Channel 22 Software Selection",791,[[],["channel22_w",3]]],[11,"channel23","","Bit 23 - Channel 23 Software Selection",791,[[],["channel23_w",3]]],[11,"channel24","","Bit 24 - Channel 24 Software Selection",791,[[],["channel24_w",3]]],[11,"channel25","","Bit 25 - Channel 25 Software Selection",791,[[],["channel25_w",3]]],[11,"channel26","","Bit 26 - Channel 26 Software Selection",791,[[],["channel26_w",3]]],[11,"channel27","","Bit 27 - Channel 27 Software Selection",791,[[],["channel27_w",3]]],[11,"channel28","","Bit 28 - Channel 28 Software Selection",791,[[],["channel28_w",3]]],[11,"channel29","","Bit 29 - Channel 29 Software Selection",791,[[],["channel29_w",3]]],[11,"channel30","","Bit 30 - Channel 30 Software Selection",791,[[],["channel30_w",3]]],[11,"channel31","","Bit 31 - Channel 31 Software Selection",791,[[],["channel31_w",3]]],[0,"prictrl","atsamd51g::evsys","Priority Control",null,null],[3,"PRI_W","atsamd51g::evsys::prictrl","Write proxy for field `PRI`",null,null],[3,"RREN_W","","Write proxy for field `RREN`",null,null],[6,"R","","Reader of register PRICTRL",null,null],[6,"W","","Writer for register PRICTRL",null,null],[6,"PRI_R","","Reader of field `PRI`",null,null],[6,"RREN_R","","Reader of field `RREN`",null,null],[11,"bits","","Writes raw bits to the field",792,[[],["w",6]]],[11,"set_bit","","Sets the field bit",793,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",793,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",793,[[],["w",6]]],[11,"pri","atsamd51g::generic","Bits 0:3 - Channel Priority Number",6,[[],["pri_r",6]]],[11,"rren","","Bit 7 - Round-Robin Scheduling Enable",6,[[],["rren_r",6]]],[11,"pri","atsamd51g::evsys::prictrl","Bits 0:3 - Channel Priority Number",794,[[],["pri_r",6]]],[11,"rren","","Bit 7 - Round-Robin Scheduling Enable",794,[[],["rren_r",6]]],[11,"pri","atsamd51g::generic","Bits 0:3 - Channel Priority Number",7,[[],["pri_w",3]]],[11,"rren","","Bit 7 - Round-Robin Scheduling Enable",7,[[],["rren_w",3]]],[11,"pri","atsamd51g::evsys::prictrl","Bits 0:3 - Channel Priority Number",795,[[],["pri_w",3]]],[11,"rren","","Bit 7 - Round-Robin Scheduling Enable",795,[[],["rren_w",3]]],[0,"intpend","atsamd51g::evsys","Channel Pending Interrupt",null,null],[3,"ID_W","atsamd51g::evsys::intpend","Write proxy for field `ID`",null,null],[3,"OVR_W","","Write proxy for field `OVR`",null,null],[3,"EVD_W","","Write proxy for field `EVD`",null,null],[3,"READY_W","","Write proxy for field `READY`",null,null],[3,"BUSY_W","","Write proxy for field `BUSY`",null,null],[6,"R","","Reader of register INTPEND",null,null],[6,"W","","Writer for register INTPEND",null,null],[6,"ID_R","","Reader of field `ID`",null,null],[6,"OVR_R","","Reader of field `OVR`",null,null],[6,"EVD_R","","Reader of field `EVD`",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[11,"bits","","Writes raw bits to the field",796,[[],["w",6]]],[11,"set_bit","","Sets the field bit",797,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",797,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",798,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",798,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",798,[[],["w",6]]],[11,"set_bit","","Sets the field bit",799,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",799,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",799,[[],["w",6]]],[11,"set_bit","","Sets the field bit",800,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",800,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",800,[[],["w",6]]],[11,"id","atsamd51g::generic","Bits 0:3 - Channel ID",6,[[],["id_r",6]]],[11,"ovr","","Bit 8 - Channel Overrun",6,[[],["ovr_r",6]]],[11,"evd","","Bit 9 - Channel Event Detected",6,[[],["evd_r",6]]],[11,"ready","","Bit 14 - Ready",6,[[],["ready_r",6]]],[11,"busy","","Bit 15 - Busy",6,[[],["busy_r",6]]],[11,"id","atsamd51g::evsys::intpend","Bits 0:3 - Channel ID",801,[[],["id_r",6]]],[11,"ovr","","Bit 8 - Channel Overrun",801,[[],["ovr_r",6]]],[11,"evd","","Bit 9 - Channel Event Detected",801,[[],["evd_r",6]]],[11,"ready","","Bit 14 - Ready",801,[[],["ready_r",6]]],[11,"busy","","Bit 15 - Busy",801,[[],["busy_r",6]]],[11,"id","atsamd51g::generic","Bits 0:3 - Channel ID",7,[[],["id_w",3]]],[11,"ovr","","Bit 8 - Channel Overrun",7,[[],["ovr_w",3]]],[11,"evd","","Bit 9 - Channel Event Detected",7,[[],["evd_w",3]]],[11,"ready","","Bit 14 - Ready",7,[[],["ready_w",3]]],[11,"busy","","Bit 15 - Busy",7,[[],["busy_w",3]]],[11,"id","atsamd51g::evsys::intpend","Bits 0:3 - Channel ID",802,[[],["id_w",3]]],[11,"ovr","","Bit 8 - Channel Overrun",802,[[],["ovr_w",3]]],[11,"evd","","Bit 9 - Channel Event Detected",802,[[],["evd_w",3]]],[11,"ready","","Bit 14 - Ready",802,[[],["ready_w",3]]],[11,"busy","","Bit 15 - Busy",802,[[],["busy_w",3]]],[0,"intstatus","atsamd51g::evsys","Interrupt Status",null,null],[6,"R","atsamd51g::evsys::intstatus","Reader of register INTSTATUS",null,null],[6,"CHINT0_R","","Reader of field `CHINT0`",null,null],[6,"CHINT1_R","","Reader of field `CHINT1`",null,null],[6,"CHINT2_R","","Reader of field `CHINT2`",null,null],[6,"CHINT3_R","","Reader of field `CHINT3`",null,null],[6,"CHINT4_R","","Reader of field `CHINT4`",null,null],[6,"CHINT5_R","","Reader of field `CHINT5`",null,null],[6,"CHINT6_R","","Reader of field `CHINT6`",null,null],[6,"CHINT7_R","","Reader of field `CHINT7`",null,null],[6,"CHINT8_R","","Reader of field `CHINT8`",null,null],[6,"CHINT9_R","","Reader of field `CHINT9`",null,null],[6,"CHINT10_R","","Reader of field `CHINT10`",null,null],[6,"CHINT11_R","","Reader of field `CHINT11`",null,null],[11,"chint0","atsamd51g::generic","Bit 0 - Channel 0 Pending Interrupt",6,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",6,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",6,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",6,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",6,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",6,[[],["chint5_r",6]]],[11,"chint6","","Bit 6 - Channel 6 Pending Interrupt",6,[[],["chint6_r",6]]],[11,"chint7","","Bit 7 - Channel 7 Pending Interrupt",6,[[],["chint7_r",6]]],[11,"chint8","","Bit 8 - Channel 8 Pending Interrupt",6,[[],["chint8_r",6]]],[11,"chint9","","Bit 9 - Channel 9 Pending Interrupt",6,[[],["chint9_r",6]]],[11,"chint10","","Bit 10 - Channel 10 Pending Interrupt",6,[[],["chint10_r",6]]],[11,"chint11","","Bit 11 - Channel 11 Pending Interrupt",6,[[],["chint11_r",6]]],[11,"chint0","atsamd51g::evsys::intstatus","Bit 0 - Channel 0 Pending Interrupt",803,[[],["chint0_r",6]]],[11,"chint1","","Bit 1 - Channel 1 Pending Interrupt",803,[[],["chint1_r",6]]],[11,"chint2","","Bit 2 - Channel 2 Pending Interrupt",803,[[],["chint2_r",6]]],[11,"chint3","","Bit 3 - Channel 3 Pending Interrupt",803,[[],["chint3_r",6]]],[11,"chint4","","Bit 4 - Channel 4 Pending Interrupt",803,[[],["chint4_r",6]]],[11,"chint5","","Bit 5 - Channel 5 Pending Interrupt",803,[[],["chint5_r",6]]],[11,"chint6","","Bit 6 - Channel 6 Pending Interrupt",803,[[],["chint6_r",6]]],[11,"chint7","","Bit 7 - Channel 7 Pending Interrupt",803,[[],["chint7_r",6]]],[11,"chint8","","Bit 8 - Channel 8 Pending Interrupt",803,[[],["chint8_r",6]]],[11,"chint9","","Bit 9 - Channel 9 Pending Interrupt",803,[[],["chint9_r",6]]],[11,"chint10","","Bit 10 - Channel 10 Pending Interrupt",803,[[],["chint10_r",6]]],[11,"chint11","","Bit 11 - Channel 11 Pending Interrupt",803,[[],["chint11_r",6]]],[0,"busych","atsamd51g::evsys","Busy Channels",null,null],[6,"R","atsamd51g::evsys::busych","Reader of register BUSYCH",null,null],[6,"BUSYCH0_R","","Reader of field `BUSYCH0`",null,null],[6,"BUSYCH1_R","","Reader of field `BUSYCH1`",null,null],[6,"BUSYCH2_R","","Reader of field `BUSYCH2`",null,null],[6,"BUSYCH3_R","","Reader of field `BUSYCH3`",null,null],[6,"BUSYCH4_R","","Reader of field `BUSYCH4`",null,null],[6,"BUSYCH5_R","","Reader of field `BUSYCH5`",null,null],[6,"BUSYCH6_R","","Reader of field `BUSYCH6`",null,null],[6,"BUSYCH7_R","","Reader of field `BUSYCH7`",null,null],[6,"BUSYCH8_R","","Reader of field `BUSYCH8`",null,null],[6,"BUSYCH9_R","","Reader of field `BUSYCH9`",null,null],[6,"BUSYCH10_R","","Reader of field `BUSYCH10`",null,null],[6,"BUSYCH11_R","","Reader of field `BUSYCH11`",null,null],[11,"busych0","atsamd51g::generic","Bit 0 - Busy Channel 0",6,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",6,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",6,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",6,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",6,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",6,[[],["busych5_r",6]]],[11,"busych6","","Bit 6 - Busy Channel 6",6,[[],["busych6_r",6]]],[11,"busych7","","Bit 7 - Busy Channel 7",6,[[],["busych7_r",6]]],[11,"busych8","","Bit 8 - Busy Channel 8",6,[[],["busych8_r",6]]],[11,"busych9","","Bit 9 - Busy Channel 9",6,[[],["busych9_r",6]]],[11,"busych10","","Bit 10 - Busy Channel 10",6,[[],["busych10_r",6]]],[11,"busych11","","Bit 11 - Busy Channel 11",6,[[],["busych11_r",6]]],[11,"busych0","atsamd51g::evsys::busych","Bit 0 - Busy Channel 0",804,[[],["busych0_r",6]]],[11,"busych1","","Bit 1 - Busy Channel 1",804,[[],["busych1_r",6]]],[11,"busych2","","Bit 2 - Busy Channel 2",804,[[],["busych2_r",6]]],[11,"busych3","","Bit 3 - Busy Channel 3",804,[[],["busych3_r",6]]],[11,"busych4","","Bit 4 - Busy Channel 4",804,[[],["busych4_r",6]]],[11,"busych5","","Bit 5 - Busy Channel 5",804,[[],["busych5_r",6]]],[11,"busych6","","Bit 6 - Busy Channel 6",804,[[],["busych6_r",6]]],[11,"busych7","","Bit 7 - Busy Channel 7",804,[[],["busych7_r",6]]],[11,"busych8","","Bit 8 - Busy Channel 8",804,[[],["busych8_r",6]]],[11,"busych9","","Bit 9 - Busy Channel 9",804,[[],["busych9_r",6]]],[11,"busych10","","Bit 10 - Busy Channel 10",804,[[],["busych10_r",6]]],[11,"busych11","","Bit 11 - Busy Channel 11",804,[[],["busych11_r",6]]],[0,"readyusr","atsamd51g::evsys","Ready Users",null,null],[6,"R","atsamd51g::evsys::readyusr","Reader of register READYUSR",null,null],[6,"READYUSR0_R","","Reader of field `READYUSR0`",null,null],[6,"READYUSR1_R","","Reader of field `READYUSR1`",null,null],[6,"READYUSR2_R","","Reader of field `READYUSR2`",null,null],[6,"READYUSR3_R","","Reader of field `READYUSR3`",null,null],[6,"READYUSR4_R","","Reader of field `READYUSR4`",null,null],[6,"READYUSR5_R","","Reader of field `READYUSR5`",null,null],[6,"READYUSR6_R","","Reader of field `READYUSR6`",null,null],[6,"READYUSR7_R","","Reader of field `READYUSR7`",null,null],[6,"READYUSR8_R","","Reader of field `READYUSR8`",null,null],[6,"READYUSR9_R","","Reader of field `READYUSR9`",null,null],[6,"READYUSR10_R","","Reader of field `READYUSR10`",null,null],[6,"READYUSR11_R","","Reader of field `READYUSR11`",null,null],[11,"readyusr0","atsamd51g::generic","Bit 0 - Ready User for Channel 0",6,[[],["readyusr0_r",6]]],[11,"readyusr1","","Bit 1 - Ready User for Channel 1",6,[[],["readyusr1_r",6]]],[11,"readyusr2","","Bit 2 - Ready User for Channel 2",6,[[],["readyusr2_r",6]]],[11,"readyusr3","","Bit 3 - Ready User for Channel 3",6,[[],["readyusr3_r",6]]],[11,"readyusr4","","Bit 4 - Ready User for Channel 4",6,[[],["readyusr4_r",6]]],[11,"readyusr5","","Bit 5 - Ready User for Channel 5",6,[[],["readyusr5_r",6]]],[11,"readyusr6","","Bit 6 - Ready User for Channel 6",6,[[],["readyusr6_r",6]]],[11,"readyusr7","","Bit 7 - Ready User for Channel 7",6,[[],["readyusr7_r",6]]],[11,"readyusr8","","Bit 8 - Ready User for Channel 8",6,[[],["readyusr8_r",6]]],[11,"readyusr9","","Bit 9 - Ready User for Channel 9",6,[[],["readyusr9_r",6]]],[11,"readyusr10","","Bit 10 - Ready User for Channel 10",6,[[],["readyusr10_r",6]]],[11,"readyusr11","","Bit 11 - Ready User for Channel 11",6,[[],["readyusr11_r",6]]],[11,"readyusr0","atsamd51g::evsys::readyusr","Bit 0 - Ready User for Channel 0",805,[[],["readyusr0_r",6]]],[11,"readyusr1","","Bit 1 - Ready User for Channel 1",805,[[],["readyusr1_r",6]]],[11,"readyusr2","","Bit 2 - Ready User for Channel 2",805,[[],["readyusr2_r",6]]],[11,"readyusr3","","Bit 3 - Ready User for Channel 3",805,[[],["readyusr3_r",6]]],[11,"readyusr4","","Bit 4 - Ready User for Channel 4",805,[[],["readyusr4_r",6]]],[11,"readyusr5","","Bit 5 - Ready User for Channel 5",805,[[],["readyusr5_r",6]]],[11,"readyusr6","","Bit 6 - Ready User for Channel 6",805,[[],["readyusr6_r",6]]],[11,"readyusr7","","Bit 7 - Ready User for Channel 7",805,[[],["readyusr7_r",6]]],[11,"readyusr8","","Bit 8 - Ready User for Channel 8",805,[[],["readyusr8_r",6]]],[11,"readyusr9","","Bit 9 - Ready User for Channel 9",805,[[],["readyusr9_r",6]]],[11,"readyusr10","","Bit 10 - Ready User for Channel 10",805,[[],["readyusr10_r",6]]],[11,"readyusr11","","Bit 11 - Ready User for Channel 11",805,[[],["readyusr11_r",6]]],[0,"user","atsamd51g::evsys","User Multiplexer n",null,null],[3,"CHANNEL_W","atsamd51g::evsys::user","Write proxy for field `CHANNEL`",null,null],[6,"R","","Reader of register USER[%s]",null,null],[6,"W","","Writer for register USER[%s]",null,null],[6,"CHANNEL_R","","Reader of field `CHANNEL`",null,null],[11,"bits","","Writes raw bits to the field",806,[[],["w",6]]],[11,"channel","atsamd51g::generic","Bits 0:5 - Channel Event Selection",6,[[],["channel_r",6]]],[11,"channel","atsamd51g::evsys::user","Bits 0:5 - Channel Event Selection",807,[[],["channel_r",6]]],[11,"channel","atsamd51g::generic","Bits 0:5 - Channel Event Selection",7,[[],["channel_w",3]]],[11,"channel","atsamd51g::evsys::user","Bits 0:5 - Channel Event Selection",808,[[],["channel_w",3]]],[6,"CTRLA","atsamd51g::evsys","Control",null,null],[6,"SWEVT","","Software Event",null,null],[6,"PRICTRL","","Priority Control",null,null],[6,"INTPEND","","Channel Pending Interrupt",null,null],[6,"INTSTATUS","","Interrupt Status",null,null],[6,"BUSYCH","","Busy Channels",null,null],[6,"READYUSR","","Ready Users",null,null],[6,"USER","","User Multiplexer n",null,null],[0,"freqm","atsamd51g","Frequency Meter",null,null],[3,"RegisterBlock","atsamd51g::freqm","Register block",null,null],[12,"ctrla","","0x00 - Control A Register",809,null],[12,"ctrlb","","0x01 - Control B Register",809,null],[12,"cfga","","0x02 - Config A register",809,null],[12,"intenclr","","0x08 - Interrupt Enable Clear Register",809,null],[12,"intenset","","0x09 - Interrupt Enable Set Register",809,null],[12,"intflag","","0x0a - Interrupt Flag Register",809,null],[12,"status","","0x0b - Status Register",809,null],[12,"syncbusy","","0x0c - Synchronization Busy Register",809,null],[12,"value","","0x10 - Count Value Register",809,null],[0,"ctrla","","Control A Register",null,null],[3,"SWRST_W","atsamd51g::freqm::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"set_bit","","Sets the field bit",810,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",810,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",810,[[],["w",6]]],[11,"set_bit","","Sets the field bit",811,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",811,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",811,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::freqm::ctrla","Bit 0 - Software Reset",812,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",812,[[],["enable_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"swrst","atsamd51g::freqm::ctrla","Bit 0 - Software Reset",813,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",813,[[],["enable_w",3]]],[0,"ctrlb","atsamd51g::freqm","Control B Register",null,null],[3,"START_W","atsamd51g::freqm::ctrlb","Write proxy for field `START`",null,null],[6,"W","","Writer for register CTRLB",null,null],[11,"set_bit","","Sets the field bit",814,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",814,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",814,[[],["w",6]]],[11,"start","atsamd51g::generic","Bit 0 - Start Measurement",7,[[],["start_w",3]]],[11,"start","atsamd51g::freqm::ctrlb","Bit 0 - Start Measurement",815,[[],["start_w",3]]],[0,"cfga","atsamd51g::freqm","Config A register",null,null],[3,"REFNUM_W","atsamd51g::freqm::cfga","Write proxy for field `REFNUM`",null,null],[6,"R","","Reader of register CFGA",null,null],[6,"W","","Writer for register CFGA",null,null],[6,"REFNUM_R","","Reader of field `REFNUM`",null,null],[11,"bits","","Writes raw bits to the field",816,[[],["w",6]]],[11,"refnum","atsamd51g::generic","Bits 0:7 - Number of Reference Clock Cycles",6,[[],["refnum_r",6]]],[11,"refnum","atsamd51g::freqm::cfga","Bits 0:7 - Number of Reference Clock Cycles",817,[[],["refnum_r",6]]],[11,"refnum","atsamd51g::generic","Bits 0:7 - Number of Reference Clock Cycles",7,[[],["refnum_w",3]]],[11,"refnum","atsamd51g::freqm::cfga","Bits 0:7 - Number of Reference Clock Cycles",818,[[],["refnum_w",3]]],[0,"intenclr","atsamd51g::freqm","Interrupt Enable Clear Register",null,null],[3,"DONE_W","atsamd51g::freqm::intenclr","Write proxy for field `DONE`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[11,"set_bit","","Sets the field bit",819,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",819,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",819,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Measurement Done Interrupt Enable",6,[[],["done_r",6]]],[11,"done","atsamd51g::freqm::intenclr","Bit 0 - Measurement Done Interrupt Enable",820,[[],["done_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Measurement Done Interrupt Enable",7,[[],["done_w",3]]],[11,"done","atsamd51g::freqm::intenclr","Bit 0 - Measurement Done Interrupt Enable",821,[[],["done_w",3]]],[0,"intenset","atsamd51g::freqm","Interrupt Enable Set Register",null,null],[3,"DONE_W","atsamd51g::freqm::intenset","Write proxy for field `DONE`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[11,"set_bit","","Sets the field bit",822,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",822,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",822,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Measurement Done Interrupt Enable",6,[[],["done_r",6]]],[11,"done","atsamd51g::freqm::intenset","Bit 0 - Measurement Done Interrupt Enable",823,[[],["done_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Measurement Done Interrupt Enable",7,[[],["done_w",3]]],[11,"done","atsamd51g::freqm::intenset","Bit 0 - Measurement Done Interrupt Enable",824,[[],["done_w",3]]],[0,"intflag","atsamd51g::freqm","Interrupt Flag Register",null,null],[3,"DONE_W","atsamd51g::freqm::intflag","Write proxy for field `DONE`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[11,"set_bit","","Sets the field bit",825,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",825,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",825,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Measurement Done",6,[[],["done_r",6]]],[11,"done","atsamd51g::freqm::intflag","Bit 0 - Measurement Done",826,[[],["done_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Measurement Done",7,[[],["done_w",3]]],[11,"done","atsamd51g::freqm::intflag","Bit 0 - Measurement Done",827,[[],["done_w",3]]],[0,"status","atsamd51g::freqm","Status Register",null,null],[3,"BUSY_W","atsamd51g::freqm::status","Write proxy for field `BUSY`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",828,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",828,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",828,[[],["w",6]]],[11,"set_bit","","Sets the field bit",829,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",829,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",829,[[],["w",6]]],[11,"busy","atsamd51g::generic","Bit 0 - FREQM Status",6,[[],["busy_r",6]]],[11,"ovf","","Bit 1 - Sticky Count Value Overflow",6,[[],["ovf_r",6]]],[11,"busy","atsamd51g::freqm::status","Bit 0 - FREQM Status",830,[[],["busy_r",6]]],[11,"ovf","","Bit 1 - Sticky Count Value Overflow",830,[[],["ovf_r",6]]],[11,"busy","atsamd51g::generic","Bit 0 - FREQM Status",7,[[],["busy_w",3]]],[11,"ovf","","Bit 1 - Sticky Count Value Overflow",7,[[],["ovf_w",3]]],[11,"busy","atsamd51g::freqm::status","Bit 0 - FREQM Status",831,[[],["busy_w",3]]],[11,"ovf","","Bit 1 - Sticky Count Value Overflow",831,[[],["ovf_w",3]]],[0,"syncbusy","atsamd51g::freqm","Synchronization Busy Register",null,null],[6,"R","atsamd51g::freqm::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::freqm::syncbusy","Bit 0 - Software Reset",832,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",832,[[],["enable_r",6]]],[0,"value","atsamd51g::freqm","Count Value Register",null,null],[6,"R","atsamd51g::freqm::value","Reader of register VALUE",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[11,"value","atsamd51g::generic","Bits 0:23 - Measurement Value",6,[[],["value_r",6]]],[11,"value","atsamd51g::freqm::value","Bits 0:23 - Measurement Value",833,[[],["value_r",6]]],[6,"CTRLA","atsamd51g::freqm","Control A Register",null,null],[6,"CTRLB","","Control B Register",null,null],[6,"CFGA","","Config A register",null,null],[6,"INTENCLR","","Interrupt Enable Clear Register",null,null],[6,"INTENSET","","Interrupt Enable Set Register",null,null],[6,"INTFLAG","","Interrupt Flag Register",null,null],[6,"STATUS","","Status Register",null,null],[6,"SYNCBUSY","","Synchronization Busy Register",null,null],[6,"VALUE","","Count Value Register",null,null],[0,"gclk","atsamd51g","Generic Clock Generator",null,null],[3,"RegisterBlock","atsamd51g::gclk","Register block",null,null],[12,"ctrla","","0x00 - Control",834,null],[12,"syncbusy","","0x04 - Synchronization Busy",834,null],[12,"genctrl","","0x20 - Generic Clock Generator Control",834,null],[12,"pchctrl","","0x80 - Peripheral Clock Control",834,null],[0,"ctrla","","Control",null,null],[3,"SWRST_W","atsamd51g::gclk::ctrla","Write proxy for field `SWRST`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[11,"set_bit","","Sets the field bit",835,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",835,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",835,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"swrst","atsamd51g::gclk::ctrla","Bit 0 - Software Reset",836,[[],["swrst_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"swrst","atsamd51g::gclk::ctrla","Bit 0 - Software Reset",837,[[],["swrst_w",3]]],[0,"syncbusy","atsamd51g::gclk","Synchronization Busy",null,null],[4,"GENCTRL_A","atsamd51g::gclk::syncbusy","Generic Clock Generator Control n Synchronization Busy bits",null,null],[13,"GCLK0","","1: Generic clock generator 0",838,null],[13,"GCLK1","","2: Generic clock generator 1",838,null],[13,"GCLK2","","4: Generic clock generator 2",838,null],[13,"GCLK3","","8: Generic clock generator 3",838,null],[13,"GCLK4","","16: Generic clock generator 4",838,null],[13,"GCLK5","","32: Generic clock generator 5",838,null],[13,"GCLK6","","64: Generic clock generator 6",838,null],[13,"GCLK7","","128: Generic clock generator 7",838,null],[13,"GCLK8","","256: Generic clock generator 8",838,null],[13,"GCLK9","","512: Generic clock generator 9",838,null],[13,"GCLK10","","1024: Generic clock generator 10",838,null],[13,"GCLK11","","2048: Generic clock generator 11",838,null],[6,"R","","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"GENCTRL_R","","Reader of field `GENCTRL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["genctrl_a",4],["variant",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",6,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",6,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",6,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",6,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",6,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",6,[[]]],[11,"is_gclk6","","Checks if the value of the field is `GCLK6`",6,[[]]],[11,"is_gclk7","","Checks if the value of the field is `GCLK7`",6,[[]]],[11,"is_gclk8","","Checks if the value of the field is `GCLK8`",6,[[]]],[11,"is_gclk9","","Checks if the value of the field is `GCLK9`",6,[[]]],[11,"is_gclk10","","Checks if the value of the field is `GCLK10`",6,[[]]],[11,"is_gclk11","","Checks if the value of the field is `GCLK11`",6,[[]]],[11,"variant","atsamd51g::gclk::syncbusy","Get enumerated values variant",839,[[],[["genctrl_a",4],["variant",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",839,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",839,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",839,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",839,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",839,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",839,[[]]],[11,"is_gclk6","","Checks if the value of the field is `GCLK6`",839,[[]]],[11,"is_gclk7","","Checks if the value of the field is `GCLK7`",839,[[]]],[11,"is_gclk8","","Checks if the value of the field is `GCLK8`",839,[[]]],[11,"is_gclk9","","Checks if the value of the field is `GCLK9`",839,[[]]],[11,"is_gclk10","","Checks if the value of the field is `GCLK10`",839,[[]]],[11,"is_gclk11","","Checks if the value of the field is `GCLK11`",839,[[]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchroniation Busy bit",6,[[],["swrst_r",6]]],[11,"genctrl","","Bits 2:13 - Generic Clock Generator Control n…",6,[[],["genctrl_r",6]]],[11,"swrst","atsamd51g::gclk::syncbusy","Bit 0 - Software Reset Synchroniation Busy bit",840,[[],["swrst_r",6]]],[11,"genctrl","","Bits 2:13 - Generic Clock Generator Control n…",840,[[],["genctrl_r",6]]],[0,"genctrl","atsamd51g::gclk","Generic Clock Generator Control",null,null],[3,"SRC_W","atsamd51g::gclk::genctrl","Write proxy for field `SRC`",null,null],[3,"GENEN_W","","Write proxy for field `GENEN`",null,null],[3,"IDC_W","","Write proxy for field `IDC`",null,null],[3,"OOV_W","","Write proxy for field `OOV`",null,null],[3,"OE_W","","Write proxy for field `OE`",null,null],[3,"DIVSEL_W","","Write proxy for field `DIVSEL`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"DIV_W","","Write proxy for field `DIV`",null,null],[4,"SRC_A","","Source Select",null,null],[13,"XOSC0","","0: XOSC0 oscillator output",841,null],[13,"XOSC1","","1: XOSC1 oscillator output",841,null],[13,"GCLKIN","","2: Generator input pad",841,null],[13,"GCLKGEN1","","3: Generic clock generator 1 output",841,null],[13,"OSCULP32K","","4: OSCULP32K oscillator output",841,null],[13,"XOSC32K","","5: XOSC32K oscillator output",841,null],[13,"DFLL","","6: DFLL output",841,null],[13,"DPLL0","","7: DPLL0 output",841,null],[13,"DPLL1","","8: DPLL1 output",841,null],[4,"DIVSEL_A","","Divide Selection",null,null],[13,"DIV1","","0: Divide input directly by divider factor",842,null],[13,"DIV2","","1: Divide input by 2^(divider factor+ 1)",842,null],[6,"R","","Reader of register GENCTRL[%s]",null,null],[6,"W","","Writer for register GENCTRL[%s]",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"GENEN_R","","Reader of field `GENEN`",null,null],[6,"IDC_R","","Reader of field `IDC`",null,null],[6,"OOV_R","","Reader of field `OOV`",null,null],[6,"OE_R","","Reader of field `OE`",null,null],[6,"DIVSEL_R","","Reader of field `DIVSEL`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["src_a",4],["variant",4]]]],[11,"is_xosc0","","Checks if the value of the field is `XOSC0`",6,[[]]],[11,"is_xosc1","","Checks if the value of the field is `XOSC1`",6,[[]]],[11,"is_gclkin","","Checks if the value of the field is `GCLKIN`",6,[[]]],[11,"is_gclkgen1","","Checks if the value of the field is `GCLKGEN1`",6,[[]]],[11,"is_osculp32k","","Checks if the value of the field is `OSCULP32K`",6,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",6,[[]]],[11,"is_dfll","","Checks if the value of the field is `DFLL`",6,[[]]],[11,"is_dpll0","","Checks if the value of the field is `DPLL0`",6,[[]]],[11,"is_dpll1","","Checks if the value of the field is `DPLL1`",6,[[]]],[11,"variant","atsamd51g::gclk::genctrl","Get enumerated values variant",843,[[],[["src_a",4],["variant",4]]]],[11,"is_xosc0","","Checks if the value of the field is `XOSC0`",843,[[]]],[11,"is_xosc1","","Checks if the value of the field is `XOSC1`",843,[[]]],[11,"is_gclkin","","Checks if the value of the field is `GCLKIN`",843,[[]]],[11,"is_gclkgen1","","Checks if the value of the field is `GCLKGEN1`",843,[[]]],[11,"is_osculp32k","","Checks if the value of the field is `OSCULP32K`",843,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",843,[[]]],[11,"is_dfll","","Checks if the value of the field is `DFLL`",843,[[]]],[11,"is_dpll0","","Checks if the value of the field is `DPLL0`",843,[[]]],[11,"is_dpll1","","Checks if the value of the field is `DPLL1`",843,[[]]],[11,"variant","","Writes `variant` to the field",844,[[["src_a",4]],["w",6]]],[11,"xosc0","","XOSC0 oscillator output",844,[[],["w",6]]],[11,"xosc1","","XOSC1 oscillator output",844,[[],["w",6]]],[11,"gclkin","","Generator input pad",844,[[],["w",6]]],[11,"gclkgen1","","Generic clock generator 1 output",844,[[],["w",6]]],[11,"osculp32k","","OSCULP32K oscillator output",844,[[],["w",6]]],[11,"xosc32k","","XOSC32K oscillator output",844,[[],["w",6]]],[11,"dfll","","DFLL output",844,[[],["w",6]]],[11,"dpll0","","DPLL0 output",844,[[],["w",6]]],[11,"dpll1","","DPLL1 output",844,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",844,[[],["w",6]]],[11,"set_bit","","Sets the field bit",845,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",845,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",845,[[],["w",6]]],[11,"set_bit","","Sets the field bit",846,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",846,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",846,[[],["w",6]]],[11,"set_bit","","Sets the field bit",847,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",847,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",847,[[],["w",6]]],[11,"set_bit","","Sets the field bit",848,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",848,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",848,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["divsel_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"variant","atsamd51g::gclk::genctrl","Get enumerated values variant",849,[[],["divsel_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",849,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",849,[[]]],[11,"variant","","Writes `variant` to the field",850,[[["divsel_a",4]],["w",6]]],[11,"div1","","Divide input directly by divider factor",850,[[],["w",6]]],[11,"div2","","Divide input by 2^(divider factor+ 1)",850,[[],["w",6]]],[11,"set_bit","","Sets the field bit",850,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",850,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",850,[[],["w",6]]],[11,"set_bit","","Sets the field bit",851,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",851,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",851,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",852,[[],["w",6]]],[11,"src","atsamd51g::generic","Bits 0:3 - Source Select",6,[[],["src_r",6]]],[11,"genen","","Bit 8 - Generic Clock Generator Enable",6,[[],["genen_r",6]]],[11,"idc","","Bit 9 - Improve Duty Cycle",6,[[],["idc_r",6]]],[11,"oov","","Bit 10 - Output Off Value",6,[[],["oov_r",6]]],[11,"oe","","Bit 11 - Output Enable",6,[[],["oe_r",6]]],[11,"divsel","","Bit 12 - Divide Selection",6,[[],["divsel_r",6]]],[11,"runstdby","","Bit 13 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"div","","Bits 16:31 - Division Factor",6,[[],["div_r",6]]],[11,"src","atsamd51g::gclk::genctrl","Bits 0:3 - Source Select",853,[[],["src_r",6]]],[11,"genen","","Bit 8 - Generic Clock Generator Enable",853,[[],["genen_r",6]]],[11,"idc","","Bit 9 - Improve Duty Cycle",853,[[],["idc_r",6]]],[11,"oov","","Bit 10 - Output Off Value",853,[[],["oov_r",6]]],[11,"oe","","Bit 11 - Output Enable",853,[[],["oe_r",6]]],[11,"divsel","","Bit 12 - Divide Selection",853,[[],["divsel_r",6]]],[11,"runstdby","","Bit 13 - Run in Standby",853,[[],["runstdby_r",6]]],[11,"div","","Bits 16:31 - Division Factor",853,[[],["div_r",6]]],[11,"src","atsamd51g::generic","Bits 0:3 - Source Select",7,[[],["src_w",3]]],[11,"genen","","Bit 8 - Generic Clock Generator Enable",7,[[],["genen_w",3]]],[11,"idc","","Bit 9 - Improve Duty Cycle",7,[[],["idc_w",3]]],[11,"oov","","Bit 10 - Output Off Value",7,[[],["oov_w",3]]],[11,"oe","","Bit 11 - Output Enable",7,[[],["oe_w",3]]],[11,"divsel","","Bit 12 - Divide Selection",7,[[],["divsel_w",3]]],[11,"runstdby","","Bit 13 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"div","","Bits 16:31 - Division Factor",7,[[],["div_w",3]]],[11,"src","atsamd51g::gclk::genctrl","Bits 0:3 - Source Select",854,[[],["src_w",3]]],[11,"genen","","Bit 8 - Generic Clock Generator Enable",854,[[],["genen_w",3]]],[11,"idc","","Bit 9 - Improve Duty Cycle",854,[[],["idc_w",3]]],[11,"oov","","Bit 10 - Output Off Value",854,[[],["oov_w",3]]],[11,"oe","","Bit 11 - Output Enable",854,[[],["oe_w",3]]],[11,"divsel","","Bit 12 - Divide Selection",854,[[],["divsel_w",3]]],[11,"runstdby","","Bit 13 - Run in Standby",854,[[],["runstdby_w",3]]],[11,"div","","Bits 16:31 - Division Factor",854,[[],["div_w",3]]],[0,"pchctrl","atsamd51g::gclk","Peripheral Clock Control",null,null],[3,"GEN_W","atsamd51g::gclk::pchctrl","Write proxy for field `GEN`",null,null],[3,"CHEN_W","","Write proxy for field `CHEN`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[4,"GEN_A","","Generic Clock Generator",null,null],[13,"GCLK0","","0: Generic clock generator 0",855,null],[13,"GCLK1","","1: Generic clock generator 1",855,null],[13,"GCLK2","","2: Generic clock generator 2",855,null],[13,"GCLK3","","3: Generic clock generator 3",855,null],[13,"GCLK4","","4: Generic clock generator 4",855,null],[13,"GCLK5","","5: Generic clock generator 5",855,null],[13,"GCLK6","","6: Generic clock generator 6",855,null],[13,"GCLK7","","7: Generic clock generator 7",855,null],[13,"GCLK8","","8: Generic clock generator 8",855,null],[13,"GCLK9","","9: Generic clock generator 9",855,null],[13,"GCLK10","","10: Generic clock generator 10",855,null],[13,"GCLK11","","11: Generic clock generator 11",855,null],[6,"R","","Reader of register PCHCTRL[%s]",null,null],[6,"W","","Writer for register PCHCTRL[%s]",null,null],[6,"GEN_R","","Reader of field `GEN`",null,null],[6,"CHEN_R","","Reader of field `CHEN`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["gen_a",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",6,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",6,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",6,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",6,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",6,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",6,[[]]],[11,"is_gclk6","","Checks if the value of the field is `GCLK6`",6,[[]]],[11,"is_gclk7","","Checks if the value of the field is `GCLK7`",6,[[]]],[11,"is_gclk8","","Checks if the value of the field is `GCLK8`",6,[[]]],[11,"is_gclk9","","Checks if the value of the field is `GCLK9`",6,[[]]],[11,"is_gclk10","","Checks if the value of the field is `GCLK10`",6,[[]]],[11,"is_gclk11","","Checks if the value of the field is `GCLK11`",6,[[]]],[11,"variant","atsamd51g::gclk::pchctrl","Get enumerated values variant",856,[[],[["variant",4],["gen_a",4]]]],[11,"is_gclk0","","Checks if the value of the field is `GCLK0`",856,[[]]],[11,"is_gclk1","","Checks if the value of the field is `GCLK1`",856,[[]]],[11,"is_gclk2","","Checks if the value of the field is `GCLK2`",856,[[]]],[11,"is_gclk3","","Checks if the value of the field is `GCLK3`",856,[[]]],[11,"is_gclk4","","Checks if the value of the field is `GCLK4`",856,[[]]],[11,"is_gclk5","","Checks if the value of the field is `GCLK5`",856,[[]]],[11,"is_gclk6","","Checks if the value of the field is `GCLK6`",856,[[]]],[11,"is_gclk7","","Checks if the value of the field is `GCLK7`",856,[[]]],[11,"is_gclk8","","Checks if the value of the field is `GCLK8`",856,[[]]],[11,"is_gclk9","","Checks if the value of the field is `GCLK9`",856,[[]]],[11,"is_gclk10","","Checks if the value of the field is `GCLK10`",856,[[]]],[11,"is_gclk11","","Checks if the value of the field is `GCLK11`",856,[[]]],[11,"variant","","Writes `variant` to the field",857,[[["gen_a",4]],["w",6]]],[11,"gclk0","","Generic clock generator 0",857,[[],["w",6]]],[11,"gclk1","","Generic clock generator 1",857,[[],["w",6]]],[11,"gclk2","","Generic clock generator 2",857,[[],["w",6]]],[11,"gclk3","","Generic clock generator 3",857,[[],["w",6]]],[11,"gclk4","","Generic clock generator 4",857,[[],["w",6]]],[11,"gclk5","","Generic clock generator 5",857,[[],["w",6]]],[11,"gclk6","","Generic clock generator 6",857,[[],["w",6]]],[11,"gclk7","","Generic clock generator 7",857,[[],["w",6]]],[11,"gclk8","","Generic clock generator 8",857,[[],["w",6]]],[11,"gclk9","","Generic clock generator 9",857,[[],["w",6]]],[11,"gclk10","","Generic clock generator 10",857,[[],["w",6]]],[11,"gclk11","","Generic clock generator 11",857,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",857,[[],["w",6]]],[11,"set_bit","","Sets the field bit",858,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",858,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",858,[[],["w",6]]],[11,"set_bit","","Sets the field bit",859,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",859,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",859,[[],["w",6]]],[11,"gen","atsamd51g::generic","Bits 0:3 - Generic Clock Generator",6,[[],["gen_r",6]]],[11,"chen","","Bit 6 - Channel Enable",6,[[],["chen_r",6]]],[11,"wrtlock","","Bit 7 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"gen","atsamd51g::gclk::pchctrl","Bits 0:3 - Generic Clock Generator",860,[[],["gen_r",6]]],[11,"chen","","Bit 6 - Channel Enable",860,[[],["chen_r",6]]],[11,"wrtlock","","Bit 7 - Write Lock",860,[[],["wrtlock_r",6]]],[11,"gen","atsamd51g::generic","Bits 0:3 - Generic Clock Generator",7,[[],["gen_w",3]]],[11,"chen","","Bit 6 - Channel Enable",7,[[],["chen_w",3]]],[11,"wrtlock","","Bit 7 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"gen","atsamd51g::gclk::pchctrl","Bits 0:3 - Generic Clock Generator",861,[[],["gen_w",3]]],[11,"chen","","Bit 6 - Channel Enable",861,[[],["chen_w",3]]],[11,"wrtlock","","Bit 7 - Write Lock",861,[[],["wrtlock_w",3]]],[6,"CTRLA","atsamd51g::gclk","Control",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"GENCTRL","","Generic Clock Generator Control",null,null],[6,"PCHCTRL","","Peripheral Clock Control",null,null],[0,"hmatrix","atsamd51g","HSB Matrix",null,null],[3,"RegisterBlock","atsamd51g::hmatrix","Register block",null,null],[12,"prs","","0x80 - PRS[%s]",862,null],[3,"PRS","","Register block",null,null],[12,"pras","","0x00 - Priority A for Slave",863,null],[12,"prbs","","0x04 - Priority B for Slave",863,null],[0,"prs","","Register block PRS[%s]",null,null],[0,"pras","atsamd51g::hmatrix::prs","Priority A for Slave",null,null],[6,"R","atsamd51g::hmatrix::prs::pras","Reader of register PRAS",null,null],[6,"W","","Writer for register PRAS",null,null],[0,"prbs","atsamd51g::hmatrix::prs","Priority B for Slave",null,null],[6,"R","atsamd51g::hmatrix::prs::prbs","Reader of register PRBS",null,null],[6,"W","","Writer for register PRBS",null,null],[6,"PRAS","atsamd51g::hmatrix::prs","Priority A for Slave",null,null],[6,"PRBS","","Priority B for Slave",null,null],[0,"icm","atsamd51g","Integrity Check Monitor",null,null],[3,"RegisterBlock","atsamd51g::icm","Register block",null,null],[12,"cfg","","0x00 - Configuration",864,null],[12,"ctrl","","0x04 - Control",864,null],[12,"sr","","0x08 - Status",864,null],[12,"ier","","0x10 - Interrupt Enable",864,null],[12,"idr","","0x14 - Interrupt Disable",864,null],[12,"imr","","0x18 - Interrupt Mask",864,null],[12,"isr","","0x1c - Interrupt Status",864,null],[12,"uasr","","0x20 - Undefined Access Status",864,null],[12,"dscr","","0x30 - Region Descriptor Area Start Address",864,null],[12,"hash","","0x34 - Region Hash Area Start Address",864,null],[12,"uihval","","0x38 - User Initial Hash Value n",864,null],[0,"cfg","","Configuration",null,null],[3,"WBDIS_W","atsamd51g::icm::cfg","Write proxy for field `WBDIS`",null,null],[3,"EOMDIS_W","","Write proxy for field `EOMDIS`",null,null],[3,"SLBDIS_W","","Write proxy for field `SLBDIS`",null,null],[3,"BBC_W","","Write proxy for field `BBC`",null,null],[3,"ASCD_W","","Write proxy for field `ASCD`",null,null],[3,"DUALBUFF_W","","Write proxy for field `DUALBUFF`",null,null],[3,"UIHASH_W","","Write proxy for field `UIHASH`",null,null],[3,"UALGO_W","","Write proxy for field `UALGO`",null,null],[3,"HAPROT_W","","Write proxy for field `HAPROT`",null,null],[3,"DAPROT_W","","Write proxy for field `DAPROT`",null,null],[4,"UALGO_A","","User SHA Algorithm",null,null],[13,"SHA1","","0: SHA1 Algorithm",865,null],[13,"SHA256","","1: SHA256 Algorithm",865,null],[13,"SHA224","","4: SHA224 Algorithm",865,null],[6,"R","","Reader of register CFG",null,null],[6,"W","","Writer for register CFG",null,null],[6,"WBDIS_R","","Reader of field `WBDIS`",null,null],[6,"EOMDIS_R","","Reader of field `EOMDIS`",null,null],[6,"SLBDIS_R","","Reader of field `SLBDIS`",null,null],[6,"BBC_R","","Reader of field `BBC`",null,null],[6,"ASCD_R","","Reader of field `ASCD`",null,null],[6,"DUALBUFF_R","","Reader of field `DUALBUFF`",null,null],[6,"UIHASH_R","","Reader of field `UIHASH`",null,null],[6,"UALGO_R","","Reader of field `UALGO`",null,null],[6,"HAPROT_R","","Reader of field `HAPROT`",null,null],[6,"DAPROT_R","","Reader of field `DAPROT`",null,null],[11,"set_bit","","Sets the field bit",866,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",866,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",866,[[],["w",6]]],[11,"set_bit","","Sets the field bit",867,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",867,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",867,[[],["w",6]]],[11,"set_bit","","Sets the field bit",868,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",868,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",868,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",869,[[],["w",6]]],[11,"set_bit","","Sets the field bit",870,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",870,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",870,[[],["w",6]]],[11,"set_bit","","Sets the field bit",871,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",871,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",871,[[],["w",6]]],[11,"set_bit","","Sets the field bit",872,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",872,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",872,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["ualgo_a",4]]]],[11,"is_sha1","","Checks if the value of the field is `SHA1`",6,[[]]],[11,"is_sha256","","Checks if the value of the field is `SHA256`",6,[[]]],[11,"is_sha224","","Checks if the value of the field is `SHA224`",6,[[]]],[11,"variant","atsamd51g::icm::cfg","Get enumerated values variant",873,[[],[["variant",4],["ualgo_a",4]]]],[11,"is_sha1","","Checks if the value of the field is `SHA1`",873,[[]]],[11,"is_sha256","","Checks if the value of the field is `SHA256`",873,[[]]],[11,"is_sha224","","Checks if the value of the field is `SHA224`",873,[[]]],[11,"variant","","Writes `variant` to the field",874,[[["ualgo_a",4]],["w",6]]],[11,"sha1","","SHA1 Algorithm",874,[[],["w",6]]],[11,"sha256","","SHA256 Algorithm",874,[[],["w",6]]],[11,"sha224","","SHA224 Algorithm",874,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",874,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",875,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",876,[[],["w",6]]],[11,"wbdis","atsamd51g::generic","Bit 0 - Write Back Disable",6,[[],["wbdis_r",6]]],[11,"eomdis","","Bit 1 - End of Monitoring Disable",6,[[],["eomdis_r",6]]],[11,"slbdis","","Bit 2 - Secondary List Branching Disable",6,[[],["slbdis_r",6]]],[11,"bbc","","Bits 4:7 - Bus Burden Control",6,[[],["bbc_r",6]]],[11,"ascd","","Bit 8 - Automatic Switch To Compare Digest",6,[[],["ascd_r",6]]],[11,"dualbuff","","Bit 9 - Dual Input Buffer",6,[[],["dualbuff_r",6]]],[11,"uihash","","Bit 12 - User Initial Hash Value",6,[[],["uihash_r",6]]],[11,"ualgo","","Bits 13:15 - User SHA Algorithm",6,[[],["ualgo_r",6]]],[11,"haprot","","Bits 16:21 - Region Hash Area Protection",6,[[],["haprot_r",6]]],[11,"daprot","","Bits 24:29 - Region Descriptor Area Protection",6,[[],["daprot_r",6]]],[11,"wbdis","atsamd51g::icm::cfg","Bit 0 - Write Back Disable",877,[[],["wbdis_r",6]]],[11,"eomdis","","Bit 1 - End of Monitoring Disable",877,[[],["eomdis_r",6]]],[11,"slbdis","","Bit 2 - Secondary List Branching Disable",877,[[],["slbdis_r",6]]],[11,"bbc","","Bits 4:7 - Bus Burden Control",877,[[],["bbc_r",6]]],[11,"ascd","","Bit 8 - Automatic Switch To Compare Digest",877,[[],["ascd_r",6]]],[11,"dualbuff","","Bit 9 - Dual Input Buffer",877,[[],["dualbuff_r",6]]],[11,"uihash","","Bit 12 - User Initial Hash Value",877,[[],["uihash_r",6]]],[11,"ualgo","","Bits 13:15 - User SHA Algorithm",877,[[],["ualgo_r",6]]],[11,"haprot","","Bits 16:21 - Region Hash Area Protection",877,[[],["haprot_r",6]]],[11,"daprot","","Bits 24:29 - Region Descriptor Area Protection",877,[[],["daprot_r",6]]],[11,"wbdis","atsamd51g::generic","Bit 0 - Write Back Disable",7,[[],["wbdis_w",3]]],[11,"eomdis","","Bit 1 - End of Monitoring Disable",7,[[],["eomdis_w",3]]],[11,"slbdis","","Bit 2 - Secondary List Branching Disable",7,[[],["slbdis_w",3]]],[11,"bbc","","Bits 4:7 - Bus Burden Control",7,[[],["bbc_w",3]]],[11,"ascd","","Bit 8 - Automatic Switch To Compare Digest",7,[[],["ascd_w",3]]],[11,"dualbuff","","Bit 9 - Dual Input Buffer",7,[[],["dualbuff_w",3]]],[11,"uihash","","Bit 12 - User Initial Hash Value",7,[[],["uihash_w",3]]],[11,"ualgo","","Bits 13:15 - User SHA Algorithm",7,[[],["ualgo_w",3]]],[11,"haprot","","Bits 16:21 - Region Hash Area Protection",7,[[],["haprot_w",3]]],[11,"daprot","","Bits 24:29 - Region Descriptor Area Protection",7,[[],["daprot_w",3]]],[11,"wbdis","atsamd51g::icm::cfg","Bit 0 - Write Back Disable",878,[[],["wbdis_w",3]]],[11,"eomdis","","Bit 1 - End of Monitoring Disable",878,[[],["eomdis_w",3]]],[11,"slbdis","","Bit 2 - Secondary List Branching Disable",878,[[],["slbdis_w",3]]],[11,"bbc","","Bits 4:7 - Bus Burden Control",878,[[],["bbc_w",3]]],[11,"ascd","","Bit 8 - Automatic Switch To Compare Digest",878,[[],["ascd_w",3]]],[11,"dualbuff","","Bit 9 - Dual Input Buffer",878,[[],["dualbuff_w",3]]],[11,"uihash","","Bit 12 - User Initial Hash Value",878,[[],["uihash_w",3]]],[11,"ualgo","","Bits 13:15 - User SHA Algorithm",878,[[],["ualgo_w",3]]],[11,"haprot","","Bits 16:21 - Region Hash Area Protection",878,[[],["haprot_w",3]]],[11,"daprot","","Bits 24:29 - Region Descriptor Area Protection",878,[[],["daprot_w",3]]],[0,"ctrl","atsamd51g::icm","Control",null,null],[3,"ENABLE_W","atsamd51g::icm::ctrl","Write proxy for field `ENABLE`",null,null],[3,"DISABLE_W","","Write proxy for field `DISABLE`",null,null],[3,"SWRST_W","","Write proxy for field `SWRST`",null,null],[3,"REHASH_W","","Write proxy for field `REHASH`",null,null],[3,"RMDIS_W","","Write proxy for field `RMDIS`",null,null],[3,"RMEN_W","","Write proxy for field `RMEN`",null,null],[6,"W","","Writer for register CTRL",null,null],[11,"set_bit","","Sets the field bit",879,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",879,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",879,[[],["w",6]]],[11,"set_bit","","Sets the field bit",880,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",880,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",880,[[],["w",6]]],[11,"set_bit","","Sets the field bit",881,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",881,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",881,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",882,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",883,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",884,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 0 - ICM Enable",7,[[],["enable_w",3]]],[11,"disable","","Bit 1 - ICM Disable Register",7,[[],["disable_w",3]]],[11,"swrst","","Bit 2 - Software Reset",7,[[],["swrst_w",3]]],[11,"rehash","","Bits 4:7 - Recompute Internal Hash",7,[[],["rehash_w",3]]],[11,"rmdis","","Bits 8:11 - Region Monitoring Disable",7,[[],["rmdis_w",3]]],[11,"rmen","","Bits 12:15 - Region Monitoring Enable",7,[[],["rmen_w",3]]],[11,"enable","atsamd51g::icm::ctrl","Bit 0 - ICM Enable",885,[[],["enable_w",3]]],[11,"disable","","Bit 1 - ICM Disable Register",885,[[],["disable_w",3]]],[11,"swrst","","Bit 2 - Software Reset",885,[[],["swrst_w",3]]],[11,"rehash","","Bits 4:7 - Recompute Internal Hash",885,[[],["rehash_w",3]]],[11,"rmdis","","Bits 8:11 - Region Monitoring Disable",885,[[],["rmdis_w",3]]],[11,"rmen","","Bits 12:15 - Region Monitoring Enable",885,[[],["rmen_w",3]]],[0,"sr","atsamd51g::icm","Status",null,null],[6,"R","atsamd51g::icm::sr","Reader of register SR",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RAWRMDIS_R","","Reader of field `RAWRMDIS`",null,null],[6,"RMDIS_R","","Reader of field `RMDIS`",null,null],[11,"enable","atsamd51g::generic","Bit 0 - ICM Controller Enable Register",6,[[],["enable_r",6]]],[11,"rawrmdis","","Bits 8:11 - RAW Region Monitoring Disabled Status",6,[[],["rawrmdis_r",6]]],[11,"rmdis","","Bits 12:15 - Region Monitoring Disabled Status",6,[[],["rmdis_r",6]]],[11,"enable","atsamd51g::icm::sr","Bit 0 - ICM Controller Enable Register",886,[[],["enable_r",6]]],[11,"rawrmdis","","Bits 8:11 - RAW Region Monitoring Disabled Status",886,[[],["rawrmdis_r",6]]],[11,"rmdis","","Bits 12:15 - Region Monitoring Disabled Status",886,[[],["rmdis_r",6]]],[0,"ier","atsamd51g::icm","Interrupt Enable",null,null],[3,"RHC_W","atsamd51g::icm::ier","Write proxy for field `RHC`",null,null],[3,"RDM_W","","Write proxy for field `RDM`",null,null],[3,"RBE_W","","Write proxy for field `RBE`",null,null],[3,"RWC_W","","Write proxy for field `RWC`",null,null],[3,"REC_W","","Write proxy for field `REC`",null,null],[3,"RSU_W","","Write proxy for field `RSU`",null,null],[3,"URAD_W","","Write proxy for field `URAD`",null,null],[6,"W","","Writer for register IER",null,null],[11,"bits","","Writes raw bits to the field",887,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",888,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",889,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",890,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",891,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",892,[[],["w",6]]],[11,"set_bit","","Sets the field bit",893,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",893,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",893,[[],["w",6]]],[11,"rhc","atsamd51g::generic","Bits 0:3 - Region Hash Completed Interrupt Enable",7,[[],["rhc_w",3]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch Interrupt Enable",7,[[],["rdm_w",3]]],[11,"rbe","","Bits 8:11 - Region Bus Error Interrupt Enable",7,[[],["rbe_w",3]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition detected Interrupt Enable",7,[[],["rwc_w",3]]],[11,"rec","","Bits 16:19 - Region End bit Condition Detected Interrupt…",7,[[],["rec_w",3]]],[11,"rsu","","Bits 20:23 - Region Status Updated Interrupt Disable",7,[[],["rsu_w",3]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Interrupt…",7,[[],["urad_w",3]]],[11,"rhc","atsamd51g::icm::ier","Bits 0:3 - Region Hash Completed Interrupt Enable",894,[[],["rhc_w",3]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch Interrupt Enable",894,[[],["rdm_w",3]]],[11,"rbe","","Bits 8:11 - Region Bus Error Interrupt Enable",894,[[],["rbe_w",3]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition detected Interrupt Enable",894,[[],["rwc_w",3]]],[11,"rec","","Bits 16:19 - Region End bit Condition Detected Interrupt…",894,[[],["rec_w",3]]],[11,"rsu","","Bits 20:23 - Region Status Updated Interrupt Disable",894,[[],["rsu_w",3]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Interrupt…",894,[[],["urad_w",3]]],[0,"idr","atsamd51g::icm","Interrupt Disable",null,null],[3,"RHC_W","atsamd51g::icm::idr","Write proxy for field `RHC`",null,null],[3,"RDM_W","","Write proxy for field `RDM`",null,null],[3,"RBE_W","","Write proxy for field `RBE`",null,null],[3,"RWC_W","","Write proxy for field `RWC`",null,null],[3,"REC_W","","Write proxy for field `REC`",null,null],[3,"RSU_W","","Write proxy for field `RSU`",null,null],[3,"URAD_W","","Write proxy for field `URAD`",null,null],[6,"W","","Writer for register IDR",null,null],[11,"bits","","Writes raw bits to the field",895,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",896,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",897,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",898,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",899,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",900,[[],["w",6]]],[11,"set_bit","","Sets the field bit",901,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",901,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",901,[[],["w",6]]],[11,"rhc","atsamd51g::generic","Bits 0:3 - Region Hash Completed Interrupt Disable",7,[[],["rhc_w",3]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch Interrupt Disable",7,[[],["rdm_w",3]]],[11,"rbe","","Bits 8:11 - Region Bus Error Interrupt Disable",7,[[],["rbe_w",3]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition Detected Interrupt…",7,[[],["rwc_w",3]]],[11,"rec","","Bits 16:19 - Region End bit Condition detected Interrupt…",7,[[],["rec_w",3]]],[11,"rsu","","Bits 20:23 - Region Status Updated Interrupt Disable",7,[[],["rsu_w",3]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Interrupt…",7,[[],["urad_w",3]]],[11,"rhc","atsamd51g::icm::idr","Bits 0:3 - Region Hash Completed Interrupt Disable",902,[[],["rhc_w",3]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch Interrupt Disable",902,[[],["rdm_w",3]]],[11,"rbe","","Bits 8:11 - Region Bus Error Interrupt Disable",902,[[],["rbe_w",3]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition Detected Interrupt…",902,[[],["rwc_w",3]]],[11,"rec","","Bits 16:19 - Region End bit Condition detected Interrupt…",902,[[],["rec_w",3]]],[11,"rsu","","Bits 20:23 - Region Status Updated Interrupt Disable",902,[[],["rsu_w",3]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Interrupt…",902,[[],["urad_w",3]]],[0,"imr","atsamd51g::icm","Interrupt Mask",null,null],[6,"R","atsamd51g::icm::imr","Reader of register IMR",null,null],[6,"RHC_R","","Reader of field `RHC`",null,null],[6,"RDM_R","","Reader of field `RDM`",null,null],[6,"RBE_R","","Reader of field `RBE`",null,null],[6,"RWC_R","","Reader of field `RWC`",null,null],[6,"REC_R","","Reader of field `REC`",null,null],[6,"RSU_R","","Reader of field `RSU`",null,null],[6,"URAD_R","","Reader of field `URAD`",null,null],[11,"rhc","atsamd51g::generic","Bits 0:3 - Region Hash Completed Interrupt Mask",6,[[],["rhc_r",6]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch Interrupt Mask",6,[[],["rdm_r",6]]],[11,"rbe","","Bits 8:11 - Region Bus Error Interrupt Mask",6,[[],["rbe_r",6]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition Detected Interrupt Mask",6,[[],["rwc_r",6]]],[11,"rec","","Bits 16:19 - Region End bit Condition Detected Interrupt…",6,[[],["rec_r",6]]],[11,"rsu","","Bits 20:23 - Region Status Updated Interrupt Mask",6,[[],["rsu_r",6]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Interrupt Mask",6,[[],["urad_r",6]]],[11,"rhc","atsamd51g::icm::imr","Bits 0:3 - Region Hash Completed Interrupt Mask",903,[[],["rhc_r",6]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch Interrupt Mask",903,[[],["rdm_r",6]]],[11,"rbe","","Bits 8:11 - Region Bus Error Interrupt Mask",903,[[],["rbe_r",6]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition Detected Interrupt Mask",903,[[],["rwc_r",6]]],[11,"rec","","Bits 16:19 - Region End bit Condition Detected Interrupt…",903,[[],["rec_r",6]]],[11,"rsu","","Bits 20:23 - Region Status Updated Interrupt Mask",903,[[],["rsu_r",6]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Interrupt Mask",903,[[],["urad_r",6]]],[0,"isr","atsamd51g::icm","Interrupt Status",null,null],[6,"R","atsamd51g::icm::isr","Reader of register ISR",null,null],[6,"RHC_R","","Reader of field `RHC`",null,null],[6,"RDM_R","","Reader of field `RDM`",null,null],[6,"RBE_R","","Reader of field `RBE`",null,null],[6,"RWC_R","","Reader of field `RWC`",null,null],[6,"REC_R","","Reader of field `REC`",null,null],[6,"RSU_R","","Reader of field `RSU`",null,null],[6,"URAD_R","","Reader of field `URAD`",null,null],[11,"rhc","atsamd51g::generic","Bits 0:3 - Region Hash Completed",6,[[],["rhc_r",6]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch",6,[[],["rdm_r",6]]],[11,"rbe","","Bits 8:11 - Region Bus Error",6,[[],["rbe_r",6]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition Detected",6,[[],["rwc_r",6]]],[11,"rec","","Bits 16:19 - Region End bit Condition Detected",6,[[],["rec_r",6]]],[11,"rsu","","Bits 20:23 - Region Status Updated Detected",6,[[],["rsu_r",6]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Status",6,[[],["urad_r",6]]],[11,"rhc","atsamd51g::icm::isr","Bits 0:3 - Region Hash Completed",904,[[],["rhc_r",6]]],[11,"rdm","","Bits 4:7 - Region Digest Mismatch",904,[[],["rdm_r",6]]],[11,"rbe","","Bits 8:11 - Region Bus Error",904,[[],["rbe_r",6]]],[11,"rwc","","Bits 12:15 - Region Wrap Condition Detected",904,[[],["rwc_r",6]]],[11,"rec","","Bits 16:19 - Region End bit Condition Detected",904,[[],["rec_r",6]]],[11,"rsu","","Bits 20:23 - Region Status Updated Detected",904,[[],["rsu_r",6]]],[11,"urad","","Bit 24 - Undefined Register Access Detection Status",904,[[],["urad_r",6]]],[0,"uasr","atsamd51g::icm","Undefined Access Status",null,null],[4,"URAT_A","atsamd51g::icm::uasr","Undefined Register Access Trace",null,null],[13,"UNSPEC_STRUCT_MEMBER","","0: Unspecified structure member set to one detected when…",905,null],[13,"CFG_MODIFIED","","1: CFG modified during active monitoring",905,null],[13,"DSCR_MODIFIED","","2: DSCR modified during active monitoring",905,null],[13,"HASH_MODIFIED","","3: HASH modified during active monitoring",905,null],[13,"READ_ACCESS","","4: Write-only register read access",905,null],[6,"R","","Reader of register UASR",null,null],[6,"URAT_R","","Reader of field `URAT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["urat_a",4],["variant",4]]]],[11,"is_unspec_struct_member","","Checks if the value of the field is `UNSPEC_STRUCT_MEMBER`",6,[[]]],[11,"is_cfg_modified","","Checks if the value of the field is `CFG_MODIFIED`",6,[[]]],[11,"is_dscr_modified","","Checks if the value of the field is `DSCR_MODIFIED`",6,[[]]],[11,"is_hash_modified","","Checks if the value of the field is `HASH_MODIFIED`",6,[[]]],[11,"is_read_access","","Checks if the value of the field is `READ_ACCESS`",6,[[]]],[11,"variant","atsamd51g::icm::uasr","Get enumerated values variant",906,[[],[["urat_a",4],["variant",4]]]],[11,"is_unspec_struct_member","","Checks if the value of the field is `UNSPEC_STRUCT_MEMBER`",906,[[]]],[11,"is_cfg_modified","","Checks if the value of the field is `CFG_MODIFIED`",906,[[]]],[11,"is_dscr_modified","","Checks if the value of the field is `DSCR_MODIFIED`",906,[[]]],[11,"is_hash_modified","","Checks if the value of the field is `HASH_MODIFIED`",906,[[]]],[11,"is_read_access","","Checks if the value of the field is `READ_ACCESS`",906,[[]]],[11,"urat","atsamd51g::generic","Bits 0:2 - Undefined Register Access Trace",6,[[],["urat_r",6]]],[11,"urat","atsamd51g::icm::uasr","Bits 0:2 - Undefined Register Access Trace",907,[[],["urat_r",6]]],[0,"dscr","atsamd51g::icm","Region Descriptor Area Start Address",null,null],[3,"DASA_W","atsamd51g::icm::dscr","Write proxy for field `DASA`",null,null],[6,"R","","Reader of register DSCR",null,null],[6,"W","","Writer for register DSCR",null,null],[6,"DASA_R","","Reader of field `DASA`",null,null],[11,"bits","","Writes raw bits to the field",908,[[],["w",6]]],[11,"dasa","atsamd51g::generic","Bits 6:31 - Descriptor Area Start Address",6,[[],["dasa_r",6]]],[11,"dasa","atsamd51g::icm::dscr","Bits 6:31 - Descriptor Area Start Address",909,[[],["dasa_r",6]]],[11,"dasa","atsamd51g::generic","Bits 6:31 - Descriptor Area Start Address",7,[[],["dasa_w",3]]],[11,"dasa","atsamd51g::icm::dscr","Bits 6:31 - Descriptor Area Start Address",910,[[],["dasa_w",3]]],[0,"hash","atsamd51g::icm","Region Hash Area Start Address",null,null],[3,"HASA_W","atsamd51g::icm::hash","Write proxy for field `HASA`",null,null],[6,"R","","Reader of register HASH",null,null],[6,"W","","Writer for register HASH",null,null],[6,"HASA_R","","Reader of field `HASA`",null,null],[11,"bits","","Writes raw bits to the field",911,[[],["w",6]]],[11,"hasa","atsamd51g::generic","Bits 7:31 - Hash Area Start Address",6,[[],["hasa_r",6]]],[11,"hasa","atsamd51g::icm::hash","Bits 7:31 - Hash Area Start Address",912,[[],["hasa_r",6]]],[11,"hasa","atsamd51g::generic","Bits 7:31 - Hash Area Start Address",7,[[],["hasa_w",3]]],[11,"hasa","atsamd51g::icm::hash","Bits 7:31 - Hash Area Start Address",913,[[],["hasa_w",3]]],[0,"uihval","atsamd51g::icm","User Initial Hash Value n",null,null],[3,"VAL_W","atsamd51g::icm::uihval","Write proxy for field `VAL`",null,null],[6,"W","","Writer for register UIHVAL[%s]",null,null],[11,"bits","","Writes raw bits to the field",914,[[],["w",6]]],[11,"val","atsamd51g::generic","Bits 0:31 - Initial Hash Value",7,[[],["val_w",3]]],[11,"val","atsamd51g::icm::uihval","Bits 0:31 - Initial Hash Value",915,[[],["val_w",3]]],[6,"CFG","atsamd51g::icm","Configuration",null,null],[6,"CTRL","","Control",null,null],[6,"SR","","Status",null,null],[6,"IER","","Interrupt Enable",null,null],[6,"IDR","","Interrupt Disable",null,null],[6,"IMR","","Interrupt Mask",null,null],[6,"ISR","","Interrupt Status",null,null],[6,"UASR","","Undefined Access Status",null,null],[6,"DSCR","","Region Descriptor Area Start Address",null,null],[6,"HASH","","Region Hash Area Start Address",null,null],[6,"UIHVAL","","User Initial Hash Value n",null,null],[0,"mclk","atsamd51g","Main Clock",null,null],[3,"RegisterBlock","atsamd51g::mclk","Register block",null,null],[12,"intenclr","","0x01 - Interrupt Enable Clear",916,null],[12,"intenset","","0x02 - Interrupt Enable Set",916,null],[12,"intflag","","0x03 - Interrupt Flag Status and Clear",916,null],[12,"hsdiv","","0x04 - HS Clock Division",916,null],[12,"cpudiv","","0x05 - CPU Clock Division",916,null],[12,"ahbmask","","0x10 - AHB Mask",916,null],[12,"apbamask","","0x14 - APBA Mask",916,null],[12,"apbbmask","","0x18 - APBB Mask",916,null],[12,"apbcmask","","0x1c - APBC Mask",916,null],[12,"apbdmask","","0x20 - APBD Mask",916,null],[0,"intenclr","","Interrupt Enable Clear",null,null],[3,"CKRDY_W","atsamd51g::mclk::intenclr","Write proxy for field `CKRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[11,"set_bit","","Sets the field bit",917,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",917,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",917,[[],["w",6]]],[11,"ckrdy","atsamd51g::generic","Bit 0 - Clock Ready Interrupt Enable",6,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd51g::mclk::intenclr","Bit 0 - Clock Ready Interrupt Enable",918,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd51g::generic","Bit 0 - Clock Ready Interrupt Enable",7,[[],["ckrdy_w",3]]],[11,"ckrdy","atsamd51g::mclk::intenclr","Bit 0 - Clock Ready Interrupt Enable",919,[[],["ckrdy_w",3]]],[0,"intenset","atsamd51g::mclk","Interrupt Enable Set",null,null],[3,"CKRDY_W","atsamd51g::mclk::intenset","Write proxy for field `CKRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[11,"set_bit","","Sets the field bit",920,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",920,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",920,[[],["w",6]]],[11,"ckrdy","atsamd51g::generic","Bit 0 - Clock Ready Interrupt Enable",6,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd51g::mclk::intenset","Bit 0 - Clock Ready Interrupt Enable",921,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd51g::generic","Bit 0 - Clock Ready Interrupt Enable",7,[[],["ckrdy_w",3]]],[11,"ckrdy","atsamd51g::mclk::intenset","Bit 0 - Clock Ready Interrupt Enable",922,[[],["ckrdy_w",3]]],[0,"intflag","atsamd51g::mclk","Interrupt Flag Status and Clear",null,null],[3,"CKRDY_W","atsamd51g::mclk::intflag","Write proxy for field `CKRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"CKRDY_R","","Reader of field `CKRDY`",null,null],[11,"set_bit","","Sets the field bit",923,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",923,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",923,[[],["w",6]]],[11,"ckrdy","atsamd51g::generic","Bit 0 - Clock Ready",6,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd51g::mclk::intflag","Bit 0 - Clock Ready",924,[[],["ckrdy_r",6]]],[11,"ckrdy","atsamd51g::generic","Bit 0 - Clock Ready",7,[[],["ckrdy_w",3]]],[11,"ckrdy","atsamd51g::mclk::intflag","Bit 0 - Clock Ready",925,[[],["ckrdy_w",3]]],[0,"hsdiv","atsamd51g::mclk","HS Clock Division",null,null],[4,"DIV_A","atsamd51g::mclk::hsdiv","CPU Clock Division Factor",null,null],[13,"DIV1","","1: Divide by 1",926,null],[6,"R","","Reader of register HSDIV",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["div_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"variant","atsamd51g::mclk::hsdiv","Get enumerated values variant",927,[[],[["variant",4],["div_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",927,[[]]],[11,"div","atsamd51g::generic","Bits 0:7 - CPU Clock Division Factor",6,[[],["div_r",6]]],[11,"div","atsamd51g::mclk::hsdiv","Bits 0:7 - CPU Clock Division Factor",928,[[],["div_r",6]]],[0,"cpudiv","atsamd51g::mclk","CPU Clock Division",null,null],[3,"DIV_W","atsamd51g::mclk::cpudiv","Write proxy for field `DIV`",null,null],[4,"DIV_A","","Low-Power Clock Division Factor",null,null],[13,"DIV1","","1: Divide by 1",929,null],[13,"DIV2","","2: Divide by 2",929,null],[13,"DIV4","","4: Divide by 4",929,null],[13,"DIV8","","8: Divide by 8",929,null],[13,"DIV16","","16: Divide by 16",929,null],[13,"DIV32","","32: Divide by 32",929,null],[13,"DIV64","","64: Divide by 64",929,null],[13,"DIV128","","128: Divide by 128",929,null],[6,"R","","Reader of register CPUDIV",null,null],[6,"W","","Writer for register CPUDIV",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["div_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd51g::mclk::cpudiv","Get enumerated values variant",930,[[],[["variant",4],["div_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",930,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",930,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",930,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",930,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",930,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",930,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",930,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",930,[[]]],[11,"variant","","Writes `variant` to the field",931,[[["div_a",4]],["w",6]]],[11,"div1","","Divide by 1",931,[[],["w",6]]],[11,"div2","","Divide by 2",931,[[],["w",6]]],[11,"div4","","Divide by 4",931,[[],["w",6]]],[11,"div8","","Divide by 8",931,[[],["w",6]]],[11,"div16","","Divide by 16",931,[[],["w",6]]],[11,"div32","","Divide by 32",931,[[],["w",6]]],[11,"div64","","Divide by 64",931,[[],["w",6]]],[11,"div128","","Divide by 128",931,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",931,[[],["w",6]]],[11,"div","atsamd51g::generic","Bits 0:7 - Low-Power Clock Division Factor",6,[[],["div_r",6]]],[11,"div","atsamd51g::mclk::cpudiv","Bits 0:7 - Low-Power Clock Division Factor",932,[[],["div_r",6]]],[11,"div","atsamd51g::generic","Bits 0:7 - Low-Power Clock Division Factor",7,[[],["div_w",3]]],[11,"div","atsamd51g::mclk::cpudiv","Bits 0:7 - Low-Power Clock Division Factor",933,[[],["div_w",3]]],[0,"ahbmask","atsamd51g::mclk","AHB Mask",null,null],[3,"HPB0__W","atsamd51g::mclk::ahbmask","Write proxy for field `HPB0_`",null,null],[3,"HPB1__W","","Write proxy for field `HPB1_`",null,null],[3,"HPB2__W","","Write proxy for field `HPB2_`",null,null],[3,"HPB3__W","","Write proxy for field `HPB3_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"HMATRIX__W","","Write proxy for field `HMATRIX_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"HSRAM__W","","Write proxy for field `HSRAM_`",null,null],[3,"CMCC__W","","Write proxy for field `CMCC_`",null,null],[3,"DMAC__W","","Write proxy for field `DMAC_`",null,null],[3,"USB__W","","Write proxy for field `USB_`",null,null],[3,"BKUPRAM__W","","Write proxy for field `BKUPRAM_`",null,null],[3,"PAC__W","","Write proxy for field `PAC_`",null,null],[3,"QSPI__W","","Write proxy for field `QSPI_`",null,null],[3,"SDHC0__W","","Write proxy for field `SDHC0_`",null,null],[3,"ICM__W","","Write proxy for field `ICM_`",null,null],[3,"PUKCC__W","","Write proxy for field `PUKCC_`",null,null],[3,"QSPI_2X__W","","Write proxy for field `QSPI_2X_`",null,null],[3,"NVMCTRL_SMEEPROM__W","","Write proxy for field `NVMCTRL_SMEEPROM_`",null,null],[3,"NVMCTRL_CACHE__W","","Write proxy for field `NVMCTRL_CACHE_`",null,null],[6,"R","","Reader of register AHBMASK",null,null],[6,"W","","Writer for register AHBMASK",null,null],[6,"HPB0__R","","Reader of field `HPB0_`",null,null],[6,"HPB1__R","","Reader of field `HPB1_`",null,null],[6,"HPB2__R","","Reader of field `HPB2_`",null,null],[6,"HPB3__R","","Reader of field `HPB3_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"HMATRIX__R","","Reader of field `HMATRIX_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"HSRAM__R","","Reader of field `HSRAM_`",null,null],[6,"CMCC__R","","Reader of field `CMCC_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[6,"BKUPRAM__R","","Reader of field `BKUPRAM_`",null,null],[6,"PAC__R","","Reader of field `PAC_`",null,null],[6,"QSPI__R","","Reader of field `QSPI_`",null,null],[6,"SDHC0__R","","Reader of field `SDHC0_`",null,null],[6,"ICM__R","","Reader of field `ICM_`",null,null],[6,"PUKCC__R","","Reader of field `PUKCC_`",null,null],[6,"QSPI_2X__R","","Reader of field `QSPI_2X_`",null,null],[6,"NVMCTRL_SMEEPROM__R","","Reader of field `NVMCTRL_SMEEPROM_`",null,null],[6,"NVMCTRL_CACHE__R","","Reader of field `NVMCTRL_CACHE_`",null,null],[11,"set_bit","","Sets the field bit",934,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",934,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",934,[[],["w",6]]],[11,"set_bit","","Sets the field bit",935,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",935,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",935,[[],["w",6]]],[11,"set_bit","","Sets the field bit",936,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",936,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",936,[[],["w",6]]],[11,"set_bit","","Sets the field bit",937,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",937,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",937,[[],["w",6]]],[11,"set_bit","","Sets the field bit",938,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",938,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",938,[[],["w",6]]],[11,"set_bit","","Sets the field bit",939,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",939,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",939,[[],["w",6]]],[11,"set_bit","","Sets the field bit",940,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",940,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",940,[[],["w",6]]],[11,"set_bit","","Sets the field bit",941,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",941,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",941,[[],["w",6]]],[11,"set_bit","","Sets the field bit",942,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",942,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",942,[[],["w",6]]],[11,"set_bit","","Sets the field bit",943,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",943,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",943,[[],["w",6]]],[11,"set_bit","","Sets the field bit",944,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",944,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",944,[[],["w",6]]],[11,"set_bit","","Sets the field bit",945,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",945,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",945,[[],["w",6]]],[11,"set_bit","","Sets the field bit",946,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",946,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",946,[[],["w",6]]],[11,"set_bit","","Sets the field bit",947,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",947,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",947,[[],["w",6]]],[11,"set_bit","","Sets the field bit",948,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",948,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",948,[[],["w",6]]],[11,"set_bit","","Sets the field bit",949,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",949,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",949,[[],["w",6]]],[11,"set_bit","","Sets the field bit",950,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",950,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",950,[[],["w",6]]],[11,"set_bit","","Sets the field bit",951,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",951,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",951,[[],["w",6]]],[11,"set_bit","","Sets the field bit",952,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",952,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",952,[[],["w",6]]],[11,"set_bit","","Sets the field bit",953,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",953,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",953,[[],["w",6]]],[11,"hpb0_","atsamd51g::generic","Bit 0 - HPB0 AHB Clock Mask",6,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",6,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",6,[[],["hpb2__r",6]]],[11,"hpb3_","","Bit 3 - HPB3 AHB Clock Mask",6,[[],["hpb3__r",6]]],[11,"dsu_","","Bit 4 - DSU AHB Clock Mask",6,[[],["dsu__r",6]]],[11,"hmatrix_","","Bit 5 - HMATRIX AHB Clock Mask",6,[[],["hmatrix__r",6]]],[11,"nvmctrl_","","Bit 6 - NVMCTRL AHB Clock Mask",6,[[],["nvmctrl__r",6]]],[11,"hsram_","","Bit 7 - HSRAM AHB Clock Mask",6,[[],["hsram__r",6]]],[11,"cmcc_","","Bit 8 - CMCC AHB Clock Mask",6,[[],["cmcc__r",6]]],[11,"dmac_","","Bit 9 - DMAC AHB Clock Mask",6,[[],["dmac__r",6]]],[11,"usb_","","Bit 10 - USB AHB Clock Mask",6,[[],["usb__r",6]]],[11,"bkupram_","","Bit 11 - BKUPRAM AHB Clock Mask",6,[[],["bkupram__r",6]]],[11,"pac_","","Bit 12 - PAC AHB Clock Mask",6,[[],["pac__r",6]]],[11,"qspi_","","Bit 13 - QSPI AHB Clock Mask",6,[[],["qspi__r",6]]],[11,"sdhc0_","","Bit 15 - SDHC0 AHB Clock Mask",6,[[],["sdhc0__r",6]]],[11,"icm_","","Bit 19 - ICM AHB Clock Mask",6,[[],["icm__r",6]]],[11,"pukcc_","","Bit 20 - PUKCC AHB Clock Mask",6,[[],["pukcc__r",6]]],[11,"qspi_2x_","","Bit 21 - QSPI_2X AHB Clock Mask",6,[[],["qspi_2x__r",6]]],[11,"nvmctrl_smeeprom_","","Bit 22 - NVMCTRL_SMEEPROM AHB Clock Mask",6,[[],["nvmctrl_smeeprom__r",6]]],[11,"nvmctrl_cache_","","Bit 23 - NVMCTRL_CACHE AHB Clock Mask",6,[[],["nvmctrl_cache__r",6]]],[11,"hpb0_","atsamd51g::mclk::ahbmask","Bit 0 - HPB0 AHB Clock Mask",954,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",954,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",954,[[],["hpb2__r",6]]],[11,"hpb3_","","Bit 3 - HPB3 AHB Clock Mask",954,[[],["hpb3__r",6]]],[11,"dsu_","","Bit 4 - DSU AHB Clock Mask",954,[[],["dsu__r",6]]],[11,"hmatrix_","","Bit 5 - HMATRIX AHB Clock Mask",954,[[],["hmatrix__r",6]]],[11,"nvmctrl_","","Bit 6 - NVMCTRL AHB Clock Mask",954,[[],["nvmctrl__r",6]]],[11,"hsram_","","Bit 7 - HSRAM AHB Clock Mask",954,[[],["hsram__r",6]]],[11,"cmcc_","","Bit 8 - CMCC AHB Clock Mask",954,[[],["cmcc__r",6]]],[11,"dmac_","","Bit 9 - DMAC AHB Clock Mask",954,[[],["dmac__r",6]]],[11,"usb_","","Bit 10 - USB AHB Clock Mask",954,[[],["usb__r",6]]],[11,"bkupram_","","Bit 11 - BKUPRAM AHB Clock Mask",954,[[],["bkupram__r",6]]],[11,"pac_","","Bit 12 - PAC AHB Clock Mask",954,[[],["pac__r",6]]],[11,"qspi_","","Bit 13 - QSPI AHB Clock Mask",954,[[],["qspi__r",6]]],[11,"sdhc0_","","Bit 15 - SDHC0 AHB Clock Mask",954,[[],["sdhc0__r",6]]],[11,"icm_","","Bit 19 - ICM AHB Clock Mask",954,[[],["icm__r",6]]],[11,"pukcc_","","Bit 20 - PUKCC AHB Clock Mask",954,[[],["pukcc__r",6]]],[11,"qspi_2x_","","Bit 21 - QSPI_2X AHB Clock Mask",954,[[],["qspi_2x__r",6]]],[11,"nvmctrl_smeeprom_","","Bit 22 - NVMCTRL_SMEEPROM AHB Clock Mask",954,[[],["nvmctrl_smeeprom__r",6]]],[11,"nvmctrl_cache_","","Bit 23 - NVMCTRL_CACHE AHB Clock Mask",954,[[],["nvmctrl_cache__r",6]]],[11,"hpb0_","atsamd51g::generic","Bit 0 - HPB0 AHB Clock Mask",7,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",7,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",7,[[],["hpb2__w",3]]],[11,"hpb3_","","Bit 3 - HPB3 AHB Clock Mask",7,[[],["hpb3__w",3]]],[11,"dsu_","","Bit 4 - DSU AHB Clock Mask",7,[[],["dsu__w",3]]],[11,"hmatrix_","","Bit 5 - HMATRIX AHB Clock Mask",7,[[],["hmatrix__w",3]]],[11,"nvmctrl_","","Bit 6 - NVMCTRL AHB Clock Mask",7,[[],["nvmctrl__w",3]]],[11,"hsram_","","Bit 7 - HSRAM AHB Clock Mask",7,[[],["hsram__w",3]]],[11,"cmcc_","","Bit 8 - CMCC AHB Clock Mask",7,[[],["cmcc__w",3]]],[11,"dmac_","","Bit 9 - DMAC AHB Clock Mask",7,[[],["dmac__w",3]]],[11,"usb_","","Bit 10 - USB AHB Clock Mask",7,[[],["usb__w",3]]],[11,"bkupram_","","Bit 11 - BKUPRAM AHB Clock Mask",7,[[],["bkupram__w",3]]],[11,"pac_","","Bit 12 - PAC AHB Clock Mask",7,[[],["pac__w",3]]],[11,"qspi_","","Bit 13 - QSPI AHB Clock Mask",7,[[],["qspi__w",3]]],[11,"sdhc0_","","Bit 15 - SDHC0 AHB Clock Mask",7,[[],["sdhc0__w",3]]],[11,"icm_","","Bit 19 - ICM AHB Clock Mask",7,[[],["icm__w",3]]],[11,"pukcc_","","Bit 20 - PUKCC AHB Clock Mask",7,[[],["pukcc__w",3]]],[11,"qspi_2x_","","Bit 21 - QSPI_2X AHB Clock Mask",7,[[],["qspi_2x__w",3]]],[11,"nvmctrl_smeeprom_","","Bit 22 - NVMCTRL_SMEEPROM AHB Clock Mask",7,[[],["nvmctrl_smeeprom__w",3]]],[11,"nvmctrl_cache_","","Bit 23 - NVMCTRL_CACHE AHB Clock Mask",7,[[],["nvmctrl_cache__w",3]]],[11,"hpb0_","atsamd51g::mclk::ahbmask","Bit 0 - HPB0 AHB Clock Mask",955,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 1 - HPB1 AHB Clock Mask",955,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 2 - HPB2 AHB Clock Mask",955,[[],["hpb2__w",3]]],[11,"hpb3_","","Bit 3 - HPB3 AHB Clock Mask",955,[[],["hpb3__w",3]]],[11,"dsu_","","Bit 4 - DSU AHB Clock Mask",955,[[],["dsu__w",3]]],[11,"hmatrix_","","Bit 5 - HMATRIX AHB Clock Mask",955,[[],["hmatrix__w",3]]],[11,"nvmctrl_","","Bit 6 - NVMCTRL AHB Clock Mask",955,[[],["nvmctrl__w",3]]],[11,"hsram_","","Bit 7 - HSRAM AHB Clock Mask",955,[[],["hsram__w",3]]],[11,"cmcc_","","Bit 8 - CMCC AHB Clock Mask",955,[[],["cmcc__w",3]]],[11,"dmac_","","Bit 9 - DMAC AHB Clock Mask",955,[[],["dmac__w",3]]],[11,"usb_","","Bit 10 - USB AHB Clock Mask",955,[[],["usb__w",3]]],[11,"bkupram_","","Bit 11 - BKUPRAM AHB Clock Mask",955,[[],["bkupram__w",3]]],[11,"pac_","","Bit 12 - PAC AHB Clock Mask",955,[[],["pac__w",3]]],[11,"qspi_","","Bit 13 - QSPI AHB Clock Mask",955,[[],["qspi__w",3]]],[11,"sdhc0_","","Bit 15 - SDHC0 AHB Clock Mask",955,[[],["sdhc0__w",3]]],[11,"icm_","","Bit 19 - ICM AHB Clock Mask",955,[[],["icm__w",3]]],[11,"pukcc_","","Bit 20 - PUKCC AHB Clock Mask",955,[[],["pukcc__w",3]]],[11,"qspi_2x_","","Bit 21 - QSPI_2X AHB Clock Mask",955,[[],["qspi_2x__w",3]]],[11,"nvmctrl_smeeprom_","","Bit 22 - NVMCTRL_SMEEPROM AHB Clock Mask",955,[[],["nvmctrl_smeeprom__w",3]]],[11,"nvmctrl_cache_","","Bit 23 - NVMCTRL_CACHE AHB Clock Mask",955,[[],["nvmctrl_cache__w",3]]],[0,"apbamask","atsamd51g::mclk","APBA Mask",null,null],[3,"PAC__W","atsamd51g::mclk::apbamask","Write proxy for field `PAC_`",null,null],[3,"PM__W","","Write proxy for field `PM_`",null,null],[3,"MCLK__W","","Write proxy for field `MCLK_`",null,null],[3,"RSTC__W","","Write proxy for field `RSTC_`",null,null],[3,"OSCCTRL__W","","Write proxy for field `OSCCTRL_`",null,null],[3,"OSC32KCTRL__W","","Write proxy for field `OSC32KCTRL_`",null,null],[3,"SUPC__W","","Write proxy for field `SUPC_`",null,null],[3,"GCLK__W","","Write proxy for field `GCLK_`",null,null],[3,"WDT__W","","Write proxy for field `WDT_`",null,null],[3,"RTC__W","","Write proxy for field `RTC_`",null,null],[3,"EIC__W","","Write proxy for field `EIC_`",null,null],[3,"FREQM__W","","Write proxy for field `FREQM_`",null,null],[3,"SERCOM0__W","","Write proxy for field `SERCOM0_`",null,null],[3,"SERCOM1__W","","Write proxy for field `SERCOM1_`",null,null],[3,"TC0__W","","Write proxy for field `TC0_`",null,null],[3,"TC1__W","","Write proxy for field `TC1_`",null,null],[6,"R","","Reader of register APBAMASK",null,null],[6,"W","","Writer for register APBAMASK",null,null],[6,"PAC__R","","Reader of field `PAC_`",null,null],[6,"PM__R","","Reader of field `PM_`",null,null],[6,"MCLK__R","","Reader of field `MCLK_`",null,null],[6,"RSTC__R","","Reader of field `RSTC_`",null,null],[6,"OSCCTRL__R","","Reader of field `OSCCTRL_`",null,null],[6,"OSC32KCTRL__R","","Reader of field `OSC32KCTRL_`",null,null],[6,"SUPC__R","","Reader of field `SUPC_`",null,null],[6,"GCLK__R","","Reader of field `GCLK_`",null,null],[6,"WDT__R","","Reader of field `WDT_`",null,null],[6,"RTC__R","","Reader of field `RTC_`",null,null],[6,"EIC__R","","Reader of field `EIC_`",null,null],[6,"FREQM__R","","Reader of field `FREQM_`",null,null],[6,"SERCOM0__R","","Reader of field `SERCOM0_`",null,null],[6,"SERCOM1__R","","Reader of field `SERCOM1_`",null,null],[6,"TC0__R","","Reader of field `TC0_`",null,null],[6,"TC1__R","","Reader of field `TC1_`",null,null],[11,"set_bit","","Sets the field bit",956,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",956,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",956,[[],["w",6]]],[11,"set_bit","","Sets the field bit",957,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",957,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",957,[[],["w",6]]],[11,"set_bit","","Sets the field bit",958,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",958,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",958,[[],["w",6]]],[11,"set_bit","","Sets the field bit",959,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",959,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",959,[[],["w",6]]],[11,"set_bit","","Sets the field bit",960,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",960,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",960,[[],["w",6]]],[11,"set_bit","","Sets the field bit",961,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",961,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",961,[[],["w",6]]],[11,"set_bit","","Sets the field bit",962,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",962,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",962,[[],["w",6]]],[11,"set_bit","","Sets the field bit",963,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",963,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",963,[[],["w",6]]],[11,"set_bit","","Sets the field bit",964,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",964,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",964,[[],["w",6]]],[11,"set_bit","","Sets the field bit",965,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",965,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",965,[[],["w",6]]],[11,"set_bit","","Sets the field bit",966,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",966,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",966,[[],["w",6]]],[11,"set_bit","","Sets the field bit",967,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",967,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",967,[[],["w",6]]],[11,"set_bit","","Sets the field bit",968,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",968,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",968,[[],["w",6]]],[11,"set_bit","","Sets the field bit",969,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",969,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",969,[[],["w",6]]],[11,"set_bit","","Sets the field bit",970,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",970,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",970,[[],["w",6]]],[11,"set_bit","","Sets the field bit",971,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",971,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",971,[[],["w",6]]],[11,"pac_","atsamd51g::generic","Bit 0 - PAC APB Clock Enable",6,[[],["pac__r",6]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",6,[[],["pm__r",6]]],[11,"mclk_","","Bit 2 - MCLK APB Clock Enable",6,[[],["mclk__r",6]]],[11,"rstc_","","Bit 3 - RSTC APB Clock Enable",6,[[],["rstc__r",6]]],[11,"oscctrl_","","Bit 4 - OSCCTRL APB Clock Enable",6,[[],["oscctrl__r",6]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL APB Clock Enable",6,[[],["osc32kctrl__r",6]]],[11,"supc_","","Bit 6 - SUPC APB Clock Enable",6,[[],["supc__r",6]]],[11,"gclk_","","Bit 7 - GCLK APB Clock Enable",6,[[],["gclk__r",6]]],[11,"wdt_","","Bit 8 - WDT APB Clock Enable",6,[[],["wdt__r",6]]],[11,"rtc_","","Bit 9 - RTC APB Clock Enable",6,[[],["rtc__r",6]]],[11,"eic_","","Bit 10 - EIC APB Clock Enable",6,[[],["eic__r",6]]],[11,"freqm_","","Bit 11 - FREQM APB Clock Enable",6,[[],["freqm__r",6]]],[11,"sercom0_","","Bit 12 - SERCOM0 APB Clock Enable",6,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 13 - SERCOM1 APB Clock Enable",6,[[],["sercom1__r",6]]],[11,"tc0_","","Bit 14 - TC0 APB Clock Enable",6,[[],["tc0__r",6]]],[11,"tc1_","","Bit 15 - TC1 APB Clock Enable",6,[[],["tc1__r",6]]],[11,"pac_","atsamd51g::mclk::apbamask","Bit 0 - PAC APB Clock Enable",972,[[],["pac__r",6]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",972,[[],["pm__r",6]]],[11,"mclk_","","Bit 2 - MCLK APB Clock Enable",972,[[],["mclk__r",6]]],[11,"rstc_","","Bit 3 - RSTC APB Clock Enable",972,[[],["rstc__r",6]]],[11,"oscctrl_","","Bit 4 - OSCCTRL APB Clock Enable",972,[[],["oscctrl__r",6]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL APB Clock Enable",972,[[],["osc32kctrl__r",6]]],[11,"supc_","","Bit 6 - SUPC APB Clock Enable",972,[[],["supc__r",6]]],[11,"gclk_","","Bit 7 - GCLK APB Clock Enable",972,[[],["gclk__r",6]]],[11,"wdt_","","Bit 8 - WDT APB Clock Enable",972,[[],["wdt__r",6]]],[11,"rtc_","","Bit 9 - RTC APB Clock Enable",972,[[],["rtc__r",6]]],[11,"eic_","","Bit 10 - EIC APB Clock Enable",972,[[],["eic__r",6]]],[11,"freqm_","","Bit 11 - FREQM APB Clock Enable",972,[[],["freqm__r",6]]],[11,"sercom0_","","Bit 12 - SERCOM0 APB Clock Enable",972,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 13 - SERCOM1 APB Clock Enable",972,[[],["sercom1__r",6]]],[11,"tc0_","","Bit 14 - TC0 APB Clock Enable",972,[[],["tc0__r",6]]],[11,"tc1_","","Bit 15 - TC1 APB Clock Enable",972,[[],["tc1__r",6]]],[11,"pac_","atsamd51g::generic","Bit 0 - PAC APB Clock Enable",7,[[],["pac__w",3]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",7,[[],["pm__w",3]]],[11,"mclk_","","Bit 2 - MCLK APB Clock Enable",7,[[],["mclk__w",3]]],[11,"rstc_","","Bit 3 - RSTC APB Clock Enable",7,[[],["rstc__w",3]]],[11,"oscctrl_","","Bit 4 - OSCCTRL APB Clock Enable",7,[[],["oscctrl__w",3]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL APB Clock Enable",7,[[],["osc32kctrl__w",3]]],[11,"supc_","","Bit 6 - SUPC APB Clock Enable",7,[[],["supc__w",3]]],[11,"gclk_","","Bit 7 - GCLK APB Clock Enable",7,[[],["gclk__w",3]]],[11,"wdt_","","Bit 8 - WDT APB Clock Enable",7,[[],["wdt__w",3]]],[11,"rtc_","","Bit 9 - RTC APB Clock Enable",7,[[],["rtc__w",3]]],[11,"eic_","","Bit 10 - EIC APB Clock Enable",7,[[],["eic__w",3]]],[11,"freqm_","","Bit 11 - FREQM APB Clock Enable",7,[[],["freqm__w",3]]],[11,"sercom0_","","Bit 12 - SERCOM0 APB Clock Enable",7,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 13 - SERCOM1 APB Clock Enable",7,[[],["sercom1__w",3]]],[11,"tc0_","","Bit 14 - TC0 APB Clock Enable",7,[[],["tc0__w",3]]],[11,"tc1_","","Bit 15 - TC1 APB Clock Enable",7,[[],["tc1__w",3]]],[11,"pac_","atsamd51g::mclk::apbamask","Bit 0 - PAC APB Clock Enable",973,[[],["pac__w",3]]],[11,"pm_","","Bit 1 - PM APB Clock Enable",973,[[],["pm__w",3]]],[11,"mclk_","","Bit 2 - MCLK APB Clock Enable",973,[[],["mclk__w",3]]],[11,"rstc_","","Bit 3 - RSTC APB Clock Enable",973,[[],["rstc__w",3]]],[11,"oscctrl_","","Bit 4 - OSCCTRL APB Clock Enable",973,[[],["oscctrl__w",3]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL APB Clock Enable",973,[[],["osc32kctrl__w",3]]],[11,"supc_","","Bit 6 - SUPC APB Clock Enable",973,[[],["supc__w",3]]],[11,"gclk_","","Bit 7 - GCLK APB Clock Enable",973,[[],["gclk__w",3]]],[11,"wdt_","","Bit 8 - WDT APB Clock Enable",973,[[],["wdt__w",3]]],[11,"rtc_","","Bit 9 - RTC APB Clock Enable",973,[[],["rtc__w",3]]],[11,"eic_","","Bit 10 - EIC APB Clock Enable",973,[[],["eic__w",3]]],[11,"freqm_","","Bit 11 - FREQM APB Clock Enable",973,[[],["freqm__w",3]]],[11,"sercom0_","","Bit 12 - SERCOM0 APB Clock Enable",973,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 13 - SERCOM1 APB Clock Enable",973,[[],["sercom1__w",3]]],[11,"tc0_","","Bit 14 - TC0 APB Clock Enable",973,[[],["tc0__w",3]]],[11,"tc1_","","Bit 15 - TC1 APB Clock Enable",973,[[],["tc1__w",3]]],[0,"apbbmask","atsamd51g::mclk","APBB Mask",null,null],[3,"USB__W","atsamd51g::mclk::apbbmask","Write proxy for field `USB_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"PORT__W","","Write proxy for field `PORT_`",null,null],[3,"HMATRIX__W","","Write proxy for field `HMATRIX_`",null,null],[3,"EVSYS__W","","Write proxy for field `EVSYS_`",null,null],[3,"SERCOM2__W","","Write proxy for field `SERCOM2_`",null,null],[3,"SERCOM3__W","","Write proxy for field `SERCOM3_`",null,null],[3,"TCC0__W","","Write proxy for field `TCC0_`",null,null],[3,"TCC1__W","","Write proxy for field `TCC1_`",null,null],[3,"TC2__W","","Write proxy for field `TC2_`",null,null],[3,"TC3__W","","Write proxy for field `TC3_`",null,null],[3,"RAMECC__W","","Write proxy for field `RAMECC_`",null,null],[6,"R","","Reader of register APBBMASK",null,null],[6,"W","","Writer for register APBBMASK",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"PORT__R","","Reader of field `PORT_`",null,null],[6,"HMATRIX__R","","Reader of field `HMATRIX_`",null,null],[6,"EVSYS__R","","Reader of field `EVSYS_`",null,null],[6,"SERCOM2__R","","Reader of field `SERCOM2_`",null,null],[6,"SERCOM3__R","","Reader of field `SERCOM3_`",null,null],[6,"TCC0__R","","Reader of field `TCC0_`",null,null],[6,"TCC1__R","","Reader of field `TCC1_`",null,null],[6,"TC2__R","","Reader of field `TC2_`",null,null],[6,"TC3__R","","Reader of field `TC3_`",null,null],[6,"RAMECC__R","","Reader of field `RAMECC_`",null,null],[11,"set_bit","","Sets the field bit",974,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",974,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",974,[[],["w",6]]],[11,"set_bit","","Sets the field bit",975,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",975,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",975,[[],["w",6]]],[11,"set_bit","","Sets the field bit",976,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",976,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",976,[[],["w",6]]],[11,"set_bit","","Sets the field bit",977,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",977,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",977,[[],["w",6]]],[11,"set_bit","","Sets the field bit",978,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",978,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",978,[[],["w",6]]],[11,"set_bit","","Sets the field bit",979,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",979,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",979,[[],["w",6]]],[11,"set_bit","","Sets the field bit",980,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",980,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",980,[[],["w",6]]],[11,"set_bit","","Sets the field bit",981,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",981,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",981,[[],["w",6]]],[11,"set_bit","","Sets the field bit",982,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",982,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",982,[[],["w",6]]],[11,"set_bit","","Sets the field bit",983,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",983,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",983,[[],["w",6]]],[11,"set_bit","","Sets the field bit",984,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",984,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",984,[[],["w",6]]],[11,"set_bit","","Sets the field bit",985,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",985,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",985,[[],["w",6]]],[11,"set_bit","","Sets the field bit",986,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",986,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",986,[[],["w",6]]],[11,"usb_","atsamd51g::generic","Bit 0 - USB APB Clock Enable",6,[[],["usb__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",6,[[],["nvmctrl__r",6]]],[11,"port_","","Bit 4 - PORT APB Clock Enable",6,[[],["port__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",6,[[],["hmatrix__r",6]]],[11,"evsys_","","Bit 7 - EVSYS APB Clock Enable",6,[[],["evsys__r",6]]],[11,"sercom2_","","Bit 9 - SERCOM2 APB Clock Enable",6,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 10 - SERCOM3 APB Clock Enable",6,[[],["sercom3__r",6]]],[11,"tcc0_","","Bit 11 - TCC0 APB Clock Enable",6,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 12 - TCC1 APB Clock Enable",6,[[],["tcc1__r",6]]],[11,"tc2_","","Bit 13 - TC2 APB Clock Enable",6,[[],["tc2__r",6]]],[11,"tc3_","","Bit 14 - TC3 APB Clock Enable",6,[[],["tc3__r",6]]],[11,"ramecc_","","Bit 16 - RAMECC APB Clock Enable",6,[[],["ramecc__r",6]]],[11,"usb_","atsamd51g::mclk::apbbmask","Bit 0 - USB APB Clock Enable",987,[[],["usb__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",987,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",987,[[],["nvmctrl__r",6]]],[11,"port_","","Bit 4 - PORT APB Clock Enable",987,[[],["port__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",987,[[],["hmatrix__r",6]]],[11,"evsys_","","Bit 7 - EVSYS APB Clock Enable",987,[[],["evsys__r",6]]],[11,"sercom2_","","Bit 9 - SERCOM2 APB Clock Enable",987,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 10 - SERCOM3 APB Clock Enable",987,[[],["sercom3__r",6]]],[11,"tcc0_","","Bit 11 - TCC0 APB Clock Enable",987,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 12 - TCC1 APB Clock Enable",987,[[],["tcc1__r",6]]],[11,"tc2_","","Bit 13 - TC2 APB Clock Enable",987,[[],["tc2__r",6]]],[11,"tc3_","","Bit 14 - TC3 APB Clock Enable",987,[[],["tc3__r",6]]],[11,"ramecc_","","Bit 16 - RAMECC APB Clock Enable",987,[[],["ramecc__r",6]]],[11,"usb_","atsamd51g::generic","Bit 0 - USB APB Clock Enable",7,[[],["usb__w",3]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",7,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",7,[[],["nvmctrl__w",3]]],[11,"port_","","Bit 4 - PORT APB Clock Enable",7,[[],["port__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",7,[[],["hmatrix__w",3]]],[11,"evsys_","","Bit 7 - EVSYS APB Clock Enable",7,[[],["evsys__w",3]]],[11,"sercom2_","","Bit 9 - SERCOM2 APB Clock Enable",7,[[],["sercom2__w",3]]],[11,"sercom3_","","Bit 10 - SERCOM3 APB Clock Enable",7,[[],["sercom3__w",3]]],[11,"tcc0_","","Bit 11 - TCC0 APB Clock Enable",7,[[],["tcc0__w",3]]],[11,"tcc1_","","Bit 12 - TCC1 APB Clock Enable",7,[[],["tcc1__w",3]]],[11,"tc2_","","Bit 13 - TC2 APB Clock Enable",7,[[],["tc2__w",3]]],[11,"tc3_","","Bit 14 - TC3 APB Clock Enable",7,[[],["tc3__w",3]]],[11,"ramecc_","","Bit 16 - RAMECC APB Clock Enable",7,[[],["ramecc__w",3]]],[11,"usb_","atsamd51g::mclk::apbbmask","Bit 0 - USB APB Clock Enable",988,[[],["usb__w",3]]],[11,"dsu_","","Bit 1 - DSU APB Clock Enable",988,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Clock Enable",988,[[],["nvmctrl__w",3]]],[11,"port_","","Bit 4 - PORT APB Clock Enable",988,[[],["port__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Clock Enable",988,[[],["hmatrix__w",3]]],[11,"evsys_","","Bit 7 - EVSYS APB Clock Enable",988,[[],["evsys__w",3]]],[11,"sercom2_","","Bit 9 - SERCOM2 APB Clock Enable",988,[[],["sercom2__w",3]]],[11,"sercom3_","","Bit 10 - SERCOM3 APB Clock Enable",988,[[],["sercom3__w",3]]],[11,"tcc0_","","Bit 11 - TCC0 APB Clock Enable",988,[[],["tcc0__w",3]]],[11,"tcc1_","","Bit 12 - TCC1 APB Clock Enable",988,[[],["tcc1__w",3]]],[11,"tc2_","","Bit 13 - TC2 APB Clock Enable",988,[[],["tc2__w",3]]],[11,"tc3_","","Bit 14 - TC3 APB Clock Enable",988,[[],["tc3__w",3]]],[11,"ramecc_","","Bit 16 - RAMECC APB Clock Enable",988,[[],["ramecc__w",3]]],[0,"apbcmask","atsamd51g::mclk","APBC Mask",null,null],[3,"TCC2__W","atsamd51g::mclk::apbcmask","Write proxy for field `TCC2_`",null,null],[3,"PDEC__W","","Write proxy for field `PDEC_`",null,null],[3,"AC__W","","Write proxy for field `AC_`",null,null],[3,"AES__W","","Write proxy for field `AES_`",null,null],[3,"TRNG__W","","Write proxy for field `TRNG_`",null,null],[3,"ICM__W","","Write proxy for field `ICM_`",null,null],[3,"QSPI__W","","Write proxy for field `QSPI_`",null,null],[3,"CCL__W","","Write proxy for field `CCL_`",null,null],[6,"R","","Reader of register APBCMASK",null,null],[6,"W","","Writer for register APBCMASK",null,null],[6,"TCC2__R","","Reader of field `TCC2_`",null,null],[6,"PDEC__R","","Reader of field `PDEC_`",null,null],[6,"AC__R","","Reader of field `AC_`",null,null],[6,"AES__R","","Reader of field `AES_`",null,null],[6,"TRNG__R","","Reader of field `TRNG_`",null,null],[6,"ICM__R","","Reader of field `ICM_`",null,null],[6,"QSPI__R","","Reader of field `QSPI_`",null,null],[6,"CCL__R","","Reader of field `CCL_`",null,null],[11,"set_bit","","Sets the field bit",989,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",989,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",989,[[],["w",6]]],[11,"set_bit","","Sets the field bit",990,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",990,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",990,[[],["w",6]]],[11,"set_bit","","Sets the field bit",991,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",991,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",991,[[],["w",6]]],[11,"set_bit","","Sets the field bit",992,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",992,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",992,[[],["w",6]]],[11,"set_bit","","Sets the field bit",993,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",993,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",993,[[],["w",6]]],[11,"set_bit","","Sets the field bit",994,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",994,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",994,[[],["w",6]]],[11,"set_bit","","Sets the field bit",995,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",995,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",995,[[],["w",6]]],[11,"set_bit","","Sets the field bit",996,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",996,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",996,[[],["w",6]]],[11,"tcc2_","atsamd51g::generic","Bit 3 - TCC2 APB Clock Enable",6,[[],["tcc2__r",6]]],[11,"pdec_","","Bit 7 - PDEC APB Clock Enable",6,[[],["pdec__r",6]]],[11,"ac_","","Bit 8 - AC APB Clock Enable",6,[[],["ac__r",6]]],[11,"aes_","","Bit 9 - AES APB Clock Enable",6,[[],["aes__r",6]]],[11,"trng_","","Bit 10 - TRNG APB Clock Enable",6,[[],["trng__r",6]]],[11,"icm_","","Bit 11 - ICM APB Clock Enable",6,[[],["icm__r",6]]],[11,"qspi_","","Bit 13 - QSPI APB Clock Enable",6,[[],["qspi__r",6]]],[11,"ccl_","","Bit 14 - CCL APB Clock Enable",6,[[],["ccl__r",6]]],[11,"tcc2_","atsamd51g::mclk::apbcmask","Bit 3 - TCC2 APB Clock Enable",997,[[],["tcc2__r",6]]],[11,"pdec_","","Bit 7 - PDEC APB Clock Enable",997,[[],["pdec__r",6]]],[11,"ac_","","Bit 8 - AC APB Clock Enable",997,[[],["ac__r",6]]],[11,"aes_","","Bit 9 - AES APB Clock Enable",997,[[],["aes__r",6]]],[11,"trng_","","Bit 10 - TRNG APB Clock Enable",997,[[],["trng__r",6]]],[11,"icm_","","Bit 11 - ICM APB Clock Enable",997,[[],["icm__r",6]]],[11,"qspi_","","Bit 13 - QSPI APB Clock Enable",997,[[],["qspi__r",6]]],[11,"ccl_","","Bit 14 - CCL APB Clock Enable",997,[[],["ccl__r",6]]],[11,"tcc2_","atsamd51g::generic","Bit 3 - TCC2 APB Clock Enable",7,[[],["tcc2__w",3]]],[11,"pdec_","","Bit 7 - PDEC APB Clock Enable",7,[[],["pdec__w",3]]],[11,"ac_","","Bit 8 - AC APB Clock Enable",7,[[],["ac__w",3]]],[11,"aes_","","Bit 9 - AES APB Clock Enable",7,[[],["aes__w",3]]],[11,"trng_","","Bit 10 - TRNG APB Clock Enable",7,[[],["trng__w",3]]],[11,"icm_","","Bit 11 - ICM APB Clock Enable",7,[[],["icm__w",3]]],[11,"qspi_","","Bit 13 - QSPI APB Clock Enable",7,[[],["qspi__w",3]]],[11,"ccl_","","Bit 14 - CCL APB Clock Enable",7,[[],["ccl__w",3]]],[11,"tcc2_","atsamd51g::mclk::apbcmask","Bit 3 - TCC2 APB Clock Enable",998,[[],["tcc2__w",3]]],[11,"pdec_","","Bit 7 - PDEC APB Clock Enable",998,[[],["pdec__w",3]]],[11,"ac_","","Bit 8 - AC APB Clock Enable",998,[[],["ac__w",3]]],[11,"aes_","","Bit 9 - AES APB Clock Enable",998,[[],["aes__w",3]]],[11,"trng_","","Bit 10 - TRNG APB Clock Enable",998,[[],["trng__w",3]]],[11,"icm_","","Bit 11 - ICM APB Clock Enable",998,[[],["icm__w",3]]],[11,"qspi_","","Bit 13 - QSPI APB Clock Enable",998,[[],["qspi__w",3]]],[11,"ccl_","","Bit 14 - CCL APB Clock Enable",998,[[],["ccl__w",3]]],[0,"apbdmask","atsamd51g::mclk","APBD Mask",null,null],[3,"SERCOM4__W","atsamd51g::mclk::apbdmask","Write proxy for field `SERCOM4_`",null,null],[3,"SERCOM5__W","","Write proxy for field `SERCOM5_`",null,null],[3,"ADC0__W","","Write proxy for field `ADC0_`",null,null],[3,"ADC1__W","","Write proxy for field `ADC1_`",null,null],[3,"DAC__W","","Write proxy for field `DAC_`",null,null],[3,"PCC__W","","Write proxy for field `PCC_`",null,null],[6,"R","","Reader of register APBDMASK",null,null],[6,"W","","Writer for register APBDMASK",null,null],[6,"SERCOM4__R","","Reader of field `SERCOM4_`",null,null],[6,"SERCOM5__R","","Reader of field `SERCOM5_`",null,null],[6,"ADC0__R","","Reader of field `ADC0_`",null,null],[6,"ADC1__R","","Reader of field `ADC1_`",null,null],[6,"DAC__R","","Reader of field `DAC_`",null,null],[6,"PCC__R","","Reader of field `PCC_`",null,null],[11,"set_bit","","Sets the field bit",999,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",999,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",999,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1000,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1000,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1000,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1001,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1001,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1001,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1002,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1002,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1002,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1003,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1003,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1003,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1004,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1004,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1004,[[],["w",6]]],[11,"sercom4_","atsamd51g::generic","Bit 0 - SERCOM4 APB Clock Enable",6,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 1 - SERCOM5 APB Clock Enable",6,[[],["sercom5__r",6]]],[11,"adc0_","","Bit 7 - ADC0 APB Clock Enable",6,[[],["adc0__r",6]]],[11,"adc1_","","Bit 8 - ADC1 APB Clock Enable",6,[[],["adc1__r",6]]],[11,"dac_","","Bit 9 - DAC APB Clock Enable",6,[[],["dac__r",6]]],[11,"pcc_","","Bit 11 - PCC APB Clock Enable",6,[[],["pcc__r",6]]],[11,"sercom4_","atsamd51g::mclk::apbdmask","Bit 0 - SERCOM4 APB Clock Enable",1005,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 1 - SERCOM5 APB Clock Enable",1005,[[],["sercom5__r",6]]],[11,"adc0_","","Bit 7 - ADC0 APB Clock Enable",1005,[[],["adc0__r",6]]],[11,"adc1_","","Bit 8 - ADC1 APB Clock Enable",1005,[[],["adc1__r",6]]],[11,"dac_","","Bit 9 - DAC APB Clock Enable",1005,[[],["dac__r",6]]],[11,"pcc_","","Bit 11 - PCC APB Clock Enable",1005,[[],["pcc__r",6]]],[11,"sercom4_","atsamd51g::generic","Bit 0 - SERCOM4 APB Clock Enable",7,[[],["sercom4__w",3]]],[11,"sercom5_","","Bit 1 - SERCOM5 APB Clock Enable",7,[[],["sercom5__w",3]]],[11,"adc0_","","Bit 7 - ADC0 APB Clock Enable",7,[[],["adc0__w",3]]],[11,"adc1_","","Bit 8 - ADC1 APB Clock Enable",7,[[],["adc1__w",3]]],[11,"dac_","","Bit 9 - DAC APB Clock Enable",7,[[],["dac__w",3]]],[11,"pcc_","","Bit 11 - PCC APB Clock Enable",7,[[],["pcc__w",3]]],[11,"sercom4_","atsamd51g::mclk::apbdmask","Bit 0 - SERCOM4 APB Clock Enable",1006,[[],["sercom4__w",3]]],[11,"sercom5_","","Bit 1 - SERCOM5 APB Clock Enable",1006,[[],["sercom5__w",3]]],[11,"adc0_","","Bit 7 - ADC0 APB Clock Enable",1006,[[],["adc0__w",3]]],[11,"adc1_","","Bit 8 - ADC1 APB Clock Enable",1006,[[],["adc1__w",3]]],[11,"dac_","","Bit 9 - DAC APB Clock Enable",1006,[[],["dac__w",3]]],[11,"pcc_","","Bit 11 - PCC APB Clock Enable",1006,[[],["pcc__w",3]]],[6,"INTENCLR","atsamd51g::mclk","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"HSDIV","","HS Clock Division",null,null],[6,"CPUDIV","","CPU Clock Division",null,null],[6,"AHBMASK","","AHB Mask",null,null],[6,"APBAMASK","","APBA Mask",null,null],[6,"APBBMASK","","APBB Mask",null,null],[6,"APBCMASK","","APBC Mask",null,null],[6,"APBDMASK","","APBD Mask",null,null],[0,"nvmctrl","atsamd51g","Non-Volatile Memory Controller",null,null],[3,"RegisterBlock","atsamd51g::nvmctrl","Register block",null,null],[12,"ctrla","","0x00 - Control A",1007,null],[12,"ctrlb","","0x04 - Control B",1007,null],[12,"param","","0x08 - NVM Parameter",1007,null],[12,"intenclr","","0x0c - Interrupt Enable Clear",1007,null],[12,"intenset","","0x0e - Interrupt Enable Set",1007,null],[12,"intflag","","0x10 - Interrupt Flag Status and Clear",1007,null],[12,"status","","0x12 - Status",1007,null],[12,"addr","","0x14 - Address",1007,null],[12,"runlock","","0x18 - Lock Section",1007,null],[12,"pbldata","","0x1c - Page Buffer Load Data x",1007,null],[12,"eccerr","","0x24 - ECC Error Status Register",1007,null],[12,"dbgctrl","","0x28 - Debug Control",1007,null],[12,"seecfg","","0x2a - SmartEEPROM Configuration Register",1007,null],[12,"seestat","","0x2c - SmartEEPROM Status Register",1007,null],[0,"ctrla","","Control A",null,null],[3,"AUTOWS_W","atsamd51g::nvmctrl::ctrla","Write proxy for field `AUTOWS`",null,null],[3,"SUSPEN_W","","Write proxy for field `SUSPEN`",null,null],[3,"WMODE_W","","Write proxy for field `WMODE`",null,null],[3,"PRM_W","","Write proxy for field `PRM`",null,null],[3,"RWS_W","","Write proxy for field `RWS`",null,null],[3,"AHBNS0_W","","Write proxy for field `AHBNS0`",null,null],[3,"AHBNS1_W","","Write proxy for field `AHBNS1`",null,null],[3,"CACHEDIS0_W","","Write proxy for field `CACHEDIS0`",null,null],[3,"CACHEDIS1_W","","Write proxy for field `CACHEDIS1`",null,null],[4,"WMODE_A","","Write Mode",null,null],[13,"MAN","","0: Manual Write",1008,null],[13,"ADW","","1: Automatic Double Word Write",1008,null],[13,"AQW","","2: Automatic Quad Word",1008,null],[13,"AP","","3: Automatic Page Write",1008,null],[4,"PRM_A","","Power Reduction Mode during Sleep",null,null],[13,"SEMIAUTO","","0: NVM block enters low-power mode when entering standby…",1009,null],[13,"FULLAUTO","","1: NVM block enters low-power mode when entering standby…",1009,null],[13,"MANUAL","","3: NVM block does not enter low-power mode when entering…",1009,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"AUTOWS_R","","Reader of field `AUTOWS`",null,null],[6,"SUSPEN_R","","Reader of field `SUSPEN`",null,null],[6,"WMODE_R","","Reader of field `WMODE`",null,null],[6,"PRM_R","","Reader of field `PRM`",null,null],[6,"RWS_R","","Reader of field `RWS`",null,null],[6,"AHBNS0_R","","Reader of field `AHBNS0`",null,null],[6,"AHBNS1_R","","Reader of field `AHBNS1`",null,null],[6,"CACHEDIS0_R","","Reader of field `CACHEDIS0`",null,null],[6,"CACHEDIS1_R","","Reader of field `CACHEDIS1`",null,null],[11,"set_bit","","Sets the field bit",1010,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1010,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1010,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1011,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1011,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1011,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wmode_a",4]]],[11,"is_man","","Checks if the value of the field is `MAN`",6,[[]]],[11,"is_adw","","Checks if the value of the field is `ADW`",6,[[]]],[11,"is_aqw","","Checks if the value of the field is `AQW`",6,[[]]],[11,"is_ap","","Checks if the value of the field is `AP`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::ctrla","Get enumerated values variant",1012,[[],["wmode_a",4]]],[11,"is_man","","Checks if the value of the field is `MAN`",1012,[[]]],[11,"is_adw","","Checks if the value of the field is `ADW`",1012,[[]]],[11,"is_aqw","","Checks if the value of the field is `AQW`",1012,[[]]],[11,"is_ap","","Checks if the value of the field is `AP`",1012,[[]]],[11,"variant","","Writes `variant` to the field",1013,[[["wmode_a",4]],["w",6]]],[11,"man","","Manual Write",1013,[[],["w",6]]],[11,"adw","","Automatic Double Word Write",1013,[[],["w",6]]],[11,"aqw","","Automatic Quad Word",1013,[[],["w",6]]],[11,"ap","","Automatic Page Write",1013,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1013,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["prm_a",4]]]],[11,"is_semiauto","","Checks if the value of the field is `SEMIAUTO`",6,[[]]],[11,"is_fullauto","","Checks if the value of the field is `FULLAUTO`",6,[[]]],[11,"is_manual","","Checks if the value of the field is `MANUAL`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::ctrla","Get enumerated values variant",1014,[[],[["variant",4],["prm_a",4]]]],[11,"is_semiauto","","Checks if the value of the field is `SEMIAUTO`",1014,[[]]],[11,"is_fullauto","","Checks if the value of the field is `FULLAUTO`",1014,[[]]],[11,"is_manual","","Checks if the value of the field is `MANUAL`",1014,[[]]],[11,"variant","","Writes `variant` to the field",1015,[[["prm_a",4]],["w",6]]],[11,"semiauto","","NVM block enters low-power mode when entering standby…",1015,[[],["w",6]]],[11,"fullauto","","NVM block enters low-power mode when entering standby…",1015,[[],["w",6]]],[11,"manual","","NVM block does not enter low-power mode when entering…",1015,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1015,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1016,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1017,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1017,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1017,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1018,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1018,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1018,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1019,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1019,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1019,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1020,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1020,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1020,[[],["w",6]]],[11,"autows","atsamd51g::generic","Bit 2 - Auto Wait State Enable",6,[[],["autows_r",6]]],[11,"suspen","","Bit 3 - Suspend Enable",6,[[],["suspen_r",6]]],[11,"wmode","","Bits 4:5 - Write Mode",6,[[],["wmode_r",6]]],[11,"prm","","Bits 6:7 - Power Reduction Mode during Sleep",6,[[],["prm_r",6]]],[11,"rws","","Bits 8:11 - NVM Read Wait States",6,[[],["rws_r",6]]],[11,"ahbns0","","Bit 12 - Force AHB0 access to NONSEQ, burst transfers are…",6,[[],["ahbns0_r",6]]],[11,"ahbns1","","Bit 13 - Force AHB1 access to NONSEQ, burst transfers are…",6,[[],["ahbns1_r",6]]],[11,"cachedis0","","Bit 14 - AHB0 Cache Disable",6,[[],["cachedis0_r",6]]],[11,"cachedis1","","Bit 15 - AHB1 Cache Disable",6,[[],["cachedis1_r",6]]],[11,"autows","atsamd51g::nvmctrl::ctrla","Bit 2 - Auto Wait State Enable",1021,[[],["autows_r",6]]],[11,"suspen","","Bit 3 - Suspend Enable",1021,[[],["suspen_r",6]]],[11,"wmode","","Bits 4:5 - Write Mode",1021,[[],["wmode_r",6]]],[11,"prm","","Bits 6:7 - Power Reduction Mode during Sleep",1021,[[],["prm_r",6]]],[11,"rws","","Bits 8:11 - NVM Read Wait States",1021,[[],["rws_r",6]]],[11,"ahbns0","","Bit 12 - Force AHB0 access to NONSEQ, burst transfers are…",1021,[[],["ahbns0_r",6]]],[11,"ahbns1","","Bit 13 - Force AHB1 access to NONSEQ, burst transfers are…",1021,[[],["ahbns1_r",6]]],[11,"cachedis0","","Bit 14 - AHB0 Cache Disable",1021,[[],["cachedis0_r",6]]],[11,"cachedis1","","Bit 15 - AHB1 Cache Disable",1021,[[],["cachedis1_r",6]]],[11,"autows","atsamd51g::generic","Bit 2 - Auto Wait State Enable",7,[[],["autows_w",3]]],[11,"suspen","","Bit 3 - Suspend Enable",7,[[],["suspen_w",3]]],[11,"wmode","","Bits 4:5 - Write Mode",7,[[],["wmode_w",3]]],[11,"prm","","Bits 6:7 - Power Reduction Mode during Sleep",7,[[],["prm_w",3]]],[11,"rws","","Bits 8:11 - NVM Read Wait States",7,[[],["rws_w",3]]],[11,"ahbns0","","Bit 12 - Force AHB0 access to NONSEQ, burst transfers are…",7,[[],["ahbns0_w",3]]],[11,"ahbns1","","Bit 13 - Force AHB1 access to NONSEQ, burst transfers are…",7,[[],["ahbns1_w",3]]],[11,"cachedis0","","Bit 14 - AHB0 Cache Disable",7,[[],["cachedis0_w",3]]],[11,"cachedis1","","Bit 15 - AHB1 Cache Disable",7,[[],["cachedis1_w",3]]],[11,"autows","atsamd51g::nvmctrl::ctrla","Bit 2 - Auto Wait State Enable",1022,[[],["autows_w",3]]],[11,"suspen","","Bit 3 - Suspend Enable",1022,[[],["suspen_w",3]]],[11,"wmode","","Bits 4:5 - Write Mode",1022,[[],["wmode_w",3]]],[11,"prm","","Bits 6:7 - Power Reduction Mode during Sleep",1022,[[],["prm_w",3]]],[11,"rws","","Bits 8:11 - NVM Read Wait States",1022,[[],["rws_w",3]]],[11,"ahbns0","","Bit 12 - Force AHB0 access to NONSEQ, burst transfers are…",1022,[[],["ahbns0_w",3]]],[11,"ahbns1","","Bit 13 - Force AHB1 access to NONSEQ, burst transfers are…",1022,[[],["ahbns1_w",3]]],[11,"cachedis0","","Bit 14 - AHB0 Cache Disable",1022,[[],["cachedis0_w",3]]],[11,"cachedis1","","Bit 15 - AHB1 Cache Disable",1022,[[],["cachedis1_w",3]]],[0,"ctrlb","atsamd51g::nvmctrl","Control B",null,null],[3,"CMD_W","atsamd51g::nvmctrl::ctrlb","Write proxy for field `CMD`",null,null],[3,"CMDEX_W","","Write proxy for field `CMDEX`",null,null],[4,"CMD_AW","","Command",null,null],[13,"EP","","0: Erase Page - Only supported in the USER and AUX pages.",1023,null],[13,"EB","","1: Erase Block - Erases the block addressed by the ADDR…",1023,null],[13,"WP","","3: Write Page - Writes the contents of the page buffer to…",1023,null],[13,"WQW","","4: Write Quad Word - Writes a 128-bit word at the location…",1023,null],[13,"SWRST","","16: Software Reset - Power-Cycle the NVM memory and replay…",1023,null],[13,"LR","","17: Lock Region - Locks the region containing the address…",1023,null],[13,"UR","","18: Unlock Region - Unlocks the region containing the…",1023,null],[13,"SPRM","","19: Sets the power reduction mode.",1023,null],[13,"CPRM","","20: Clears the power reduction mode.",1023,null],[13,"PBC","","21: Page Buffer Clear - Clears the page buffer.",1023,null],[13,"SSB","","22: Set Security Bit",1023,null],[13,"BKSWRST","","23: Bank swap and system reset, if SMEE is used also…",1023,null],[13,"CELCK","","24: Chip Erase Lock - DSU.CE command is not available",1023,null],[13,"CEULCK","","25: Chip Erase Unlock - DSU.CE command is available",1023,null],[13,"SBPDIS","","26: Sets STATUS.BPDIS, Boot loader protection is discarded…",1023,null],[13,"CBPDIS","","27: Clears STATUS.BPDIS, Boot loader protection is not…",1023,null],[13,"ASEES0","","48: Activate SmartEEPROM Sector 0, deactivate Sector 1",1023,null],[13,"ASEES1","","49: Activate SmartEEPROM Sector 1, deactivate Sector 0",1023,null],[13,"SEERALOC","","50: Starts SmartEEPROM sector reallocation algorithm",1023,null],[13,"SEEFLUSH","","51: Flush SMEE data when in buffered mode",1023,null],[13,"LSEE","","52: Lock access to SmartEEPROM data from any mean",1023,null],[13,"USEE","","53: Unlock access to SmartEEPROM data",1023,null],[13,"LSEER","","54: Lock access to the SmartEEPROM Register Address Space…",1023,null],[13,"USEER","","55: Unlock access to the SmartEEPROM Register Address…",1023,null],[4,"CMDEX_AW","","Command Execution",null,null],[13,"KEY","","165: Execution Key",1024,null],[6,"W","","Writer for register CTRLB",null,null],[11,"variant","","Writes `variant` to the field",1025,[[["cmd_aw",4]],["w",6]]],[11,"ep","","Erase Page - Only supported in the USER and AUX pages.",1025,[[],["w",6]]],[11,"eb","","Erase Block - Erases the block addressed by the ADDR…",1025,[[],["w",6]]],[11,"wp","","Write Page - Writes the contents of the page buffer to the…",1025,[[],["w",6]]],[11,"wqw","","Write Quad Word - Writes a 128-bit word at the location…",1025,[[],["w",6]]],[11,"swrst","","Software Reset - Power-Cycle the NVM memory and replay the…",1025,[[],["w",6]]],[11,"lr","","Lock Region - Locks the region containing the address…",1025,[[],["w",6]]],[11,"ur","","Unlock Region - Unlocks the region containing the address…",1025,[[],["w",6]]],[11,"sprm","","Sets the power reduction mode.",1025,[[],["w",6]]],[11,"cprm","","Clears the power reduction mode.",1025,[[],["w",6]]],[11,"pbc","","Page Buffer Clear - Clears the page buffer.",1025,[[],["w",6]]],[11,"ssb","","Set Security Bit",1025,[[],["w",6]]],[11,"bkswrst","","Bank swap and system reset, if SMEE is used also…",1025,[[],["w",6]]],[11,"celck","","Chip Erase Lock - DSU.CE command is not available",1025,[[],["w",6]]],[11,"ceulck","","Chip Erase Unlock - DSU.CE command is available",1025,[[],["w",6]]],[11,"sbpdis","","Sets STATUS.BPDIS, Boot loader protection is discarded…",1025,[[],["w",6]]],[11,"cbpdis","","Clears STATUS.BPDIS, Boot loader protection is not discarded",1025,[[],["w",6]]],[11,"asees0","","Activate SmartEEPROM Sector 0, deactivate Sector 1",1025,[[],["w",6]]],[11,"asees1","","Activate SmartEEPROM Sector 1, deactivate Sector 0",1025,[[],["w",6]]],[11,"seeraloc","","Starts SmartEEPROM sector reallocation algorithm",1025,[[],["w",6]]],[11,"seeflush","","Flush SMEE data when in buffered mode",1025,[[],["w",6]]],[11,"lsee","","Lock access to SmartEEPROM data from any mean",1025,[[],["w",6]]],[11,"usee","","Unlock access to SmartEEPROM data",1025,[[],["w",6]]],[11,"lseer","","Lock access to the SmartEEPROM Register Address Space…",1025,[[],["w",6]]],[11,"useer","","Unlock access to the SmartEEPROM Register Address Space…",1025,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1025,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",1026,[[["cmdex_aw",4]],["w",6]]],[11,"key","","Execution Key",1026,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1026,[[],["w",6]]],[11,"cmd","atsamd51g::generic","Bits 0:6 - Command",7,[[],["cmd_w",3]]],[11,"cmdex","","Bits 8:15 - Command Execution",7,[[],["cmdex_w",3]]],[11,"cmd","atsamd51g::nvmctrl::ctrlb","Bits 0:6 - Command",1027,[[],["cmd_w",3]]],[11,"cmdex","","Bits 8:15 - Command Execution",1027,[[],["cmdex_w",3]]],[0,"param","atsamd51g::nvmctrl","NVM Parameter",null,null],[4,"PSZ_A","atsamd51g::nvmctrl::param","Page Size",null,null],[13,"_8","","0: 8 bytes",1028,null],[13,"_16","","1: 16 bytes",1028,null],[13,"_32","","2: 32 bytes",1028,null],[13,"_64","","3: 64 bytes",1028,null],[13,"_128","","4: 128 bytes",1028,null],[13,"_256","","5: 256 bytes",1028,null],[13,"_512","","6: 512 bytes",1028,null],[13,"_1024","","7: 1024 bytes",1028,null],[6,"R","","Reader of register PARAM",null,null],[6,"NVMP_R","","Reader of field `NVMP`",null,null],[6,"PSZ_R","","Reader of field `PSZ`",null,null],[6,"SEE_R","","Reader of field `SEE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["psz_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",6,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",6,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::param","Get enumerated values variant",1029,[[],["psz_a",4]]],[11,"is_8","","Checks if the value of the field is `_8`",1029,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",1029,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",1029,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",1029,[[]]],[11,"is_128","","Checks if the value of the field is `_128`",1029,[[]]],[11,"is_256","","Checks if the value of the field is `_256`",1029,[[]]],[11,"is_512","","Checks if the value of the field is `_512`",1029,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",1029,[[]]],[11,"nvmp","atsamd51g::generic","Bits 0:15 - NVM Pages",6,[[],["nvmp_r",6]]],[11,"psz","","Bits 16:18 - Page Size",6,[[],["psz_r",6]]],[11,"see","","Bit 31 - SmartEEPROM Supported",6,[[],["see_r",6]]],[11,"nvmp","atsamd51g::nvmctrl::param","Bits 0:15 - NVM Pages",1030,[[],["nvmp_r",6]]],[11,"psz","","Bits 16:18 - Page Size",1030,[[],["psz_r",6]]],[11,"see","","Bit 31 - SmartEEPROM Supported",1030,[[],["see_r",6]]],[0,"intenclr","atsamd51g::nvmctrl","Interrupt Enable Clear",null,null],[3,"DONE_W","atsamd51g::nvmctrl::intenclr","Write proxy for field `DONE`",null,null],[3,"ADDRE_W","","Write proxy for field `ADDRE`",null,null],[3,"PROGE_W","","Write proxy for field `PROGE`",null,null],[3,"LOCKE_W","","Write proxy for field `LOCKE`",null,null],[3,"ECCSE_W","","Write proxy for field `ECCSE`",null,null],[3,"ECCDE_W","","Write proxy for field `ECCDE`",null,null],[3,"NVME_W","","Write proxy for field `NVME`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[3,"SEESFULL_W","","Write proxy for field `SEESFULL`",null,null],[3,"SEESOVF_W","","Write proxy for field `SEESOVF`",null,null],[3,"SEEWRC_W","","Write proxy for field `SEEWRC`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[6,"ADDRE_R","","Reader of field `ADDRE`",null,null],[6,"PROGE_R","","Reader of field `PROGE`",null,null],[6,"LOCKE_R","","Reader of field `LOCKE`",null,null],[6,"ECCSE_R","","Reader of field `ECCSE`",null,null],[6,"ECCDE_R","","Reader of field `ECCDE`",null,null],[6,"NVME_R","","Reader of field `NVME`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"SEESFULL_R","","Reader of field `SEESFULL`",null,null],[6,"SEESOVF_R","","Reader of field `SEESOVF`",null,null],[6,"SEEWRC_R","","Reader of field `SEEWRC`",null,null],[11,"set_bit","","Sets the field bit",1031,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1031,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1031,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1032,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1032,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1032,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1033,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1033,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1033,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1034,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1034,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1034,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1035,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1035,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1036,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1037,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1037,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1037,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1038,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1038,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1038,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1039,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1039,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1040,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1041,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1041,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1041,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Command Done Interrupt Clear",6,[[],["done_r",6]]],[11,"addre","","Bit 1 - Address Error",6,[[],["addre_r",6]]],[11,"proge","","Bit 2 - Programming Error Interrupt Clear",6,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Interrupt Clear",6,[[],["locke_r",6]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Clear",6,[[],["eccse_r",6]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Clear",6,[[],["eccde_r",6]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Clear",6,[[],["nvme_r",6]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Clear",6,[[],["susp_r",6]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Clear",6,[[],["seesfull_r",6]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Clear",6,[[],["seesovf_r",6]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Clear",6,[[],["seewrc_r",6]]],[11,"done","atsamd51g::nvmctrl::intenclr","Bit 0 - Command Done Interrupt Clear",1042,[[],["done_r",6]]],[11,"addre","","Bit 1 - Address Error",1042,[[],["addre_r",6]]],[11,"proge","","Bit 2 - Programming Error Interrupt Clear",1042,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Interrupt Clear",1042,[[],["locke_r",6]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Clear",1042,[[],["eccse_r",6]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Clear",1042,[[],["eccde_r",6]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Clear",1042,[[],["nvme_r",6]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Clear",1042,[[],["susp_r",6]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Clear",1042,[[],["seesfull_r",6]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Clear",1042,[[],["seesovf_r",6]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Clear",1042,[[],["seewrc_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Command Done Interrupt Clear",7,[[],["done_w",3]]],[11,"addre","","Bit 1 - Address Error",7,[[],["addre_w",3]]],[11,"proge","","Bit 2 - Programming Error Interrupt Clear",7,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Interrupt Clear",7,[[],["locke_w",3]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Clear",7,[[],["eccse_w",3]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Clear",7,[[],["eccde_w",3]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Clear",7,[[],["nvme_w",3]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Clear",7,[[],["susp_w",3]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Clear",7,[[],["seesfull_w",3]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Clear",7,[[],["seesovf_w",3]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Clear",7,[[],["seewrc_w",3]]],[11,"done","atsamd51g::nvmctrl::intenclr","Bit 0 - Command Done Interrupt Clear",1043,[[],["done_w",3]]],[11,"addre","","Bit 1 - Address Error",1043,[[],["addre_w",3]]],[11,"proge","","Bit 2 - Programming Error Interrupt Clear",1043,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Interrupt Clear",1043,[[],["locke_w",3]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Clear",1043,[[],["eccse_w",3]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Clear",1043,[[],["eccde_w",3]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Clear",1043,[[],["nvme_w",3]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Clear",1043,[[],["susp_w",3]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Clear",1043,[[],["seesfull_w",3]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Clear",1043,[[],["seesovf_w",3]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Clear",1043,[[],["seewrc_w",3]]],[0,"intenset","atsamd51g::nvmctrl","Interrupt Enable Set",null,null],[3,"DONE_W","atsamd51g::nvmctrl::intenset","Write proxy for field `DONE`",null,null],[3,"ADDRE_W","","Write proxy for field `ADDRE`",null,null],[3,"PROGE_W","","Write proxy for field `PROGE`",null,null],[3,"LOCKE_W","","Write proxy for field `LOCKE`",null,null],[3,"ECCSE_W","","Write proxy for field `ECCSE`",null,null],[3,"ECCDE_W","","Write proxy for field `ECCDE`",null,null],[3,"NVME_W","","Write proxy for field `NVME`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[3,"SEESFULL_W","","Write proxy for field `SEESFULL`",null,null],[3,"SEESOVF_W","","Write proxy for field `SEESOVF`",null,null],[3,"SEEWRC_W","","Write proxy for field `SEEWRC`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[6,"ADDRE_R","","Reader of field `ADDRE`",null,null],[6,"PROGE_R","","Reader of field `PROGE`",null,null],[6,"LOCKE_R","","Reader of field `LOCKE`",null,null],[6,"ECCSE_R","","Reader of field `ECCSE`",null,null],[6,"ECCDE_R","","Reader of field `ECCDE`",null,null],[6,"NVME_R","","Reader of field `NVME`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"SEESFULL_R","","Reader of field `SEESFULL`",null,null],[6,"SEESOVF_R","","Reader of field `SEESOVF`",null,null],[6,"SEEWRC_R","","Reader of field `SEEWRC`",null,null],[11,"set_bit","","Sets the field bit",1044,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1044,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1044,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1045,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1045,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1045,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1046,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1046,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1046,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1047,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1047,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1047,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1048,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1048,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1048,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1049,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1049,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1049,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1050,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1050,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1050,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1051,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1051,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1051,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1052,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1052,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1052,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1053,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1053,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1053,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1054,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1054,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1054,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Command Done Interrupt Enable",6,[[],["done_r",6]]],[11,"addre","","Bit 1 - Address Error Interrupt Enable",6,[[],["addre_r",6]]],[11,"proge","","Bit 2 - Programming Error Interrupt Enable",6,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Interrupt Enable",6,[[],["locke_r",6]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Enable",6,[[],["eccse_r",6]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Enable",6,[[],["eccde_r",6]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Enable",6,[[],["nvme_r",6]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Enable",6,[[],["susp_r",6]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Enable",6,[[],["seesfull_r",6]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Enable",6,[[],["seesovf_r",6]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Enable",6,[[],["seewrc_r",6]]],[11,"done","atsamd51g::nvmctrl::intenset","Bit 0 - Command Done Interrupt Enable",1055,[[],["done_r",6]]],[11,"addre","","Bit 1 - Address Error Interrupt Enable",1055,[[],["addre_r",6]]],[11,"proge","","Bit 2 - Programming Error Interrupt Enable",1055,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error Interrupt Enable",1055,[[],["locke_r",6]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Enable",1055,[[],["eccse_r",6]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Enable",1055,[[],["eccde_r",6]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Enable",1055,[[],["nvme_r",6]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Enable",1055,[[],["susp_r",6]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Enable",1055,[[],["seesfull_r",6]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Enable",1055,[[],["seesovf_r",6]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Enable",1055,[[],["seewrc_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Command Done Interrupt Enable",7,[[],["done_w",3]]],[11,"addre","","Bit 1 - Address Error Interrupt Enable",7,[[],["addre_w",3]]],[11,"proge","","Bit 2 - Programming Error Interrupt Enable",7,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Interrupt Enable",7,[[],["locke_w",3]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Enable",7,[[],["eccse_w",3]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Enable",7,[[],["eccde_w",3]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Enable",7,[[],["nvme_w",3]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Enable",7,[[],["susp_w",3]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Enable",7,[[],["seesfull_w",3]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Enable",7,[[],["seesovf_w",3]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Enable",7,[[],["seewrc_w",3]]],[11,"done","atsamd51g::nvmctrl::intenset","Bit 0 - Command Done Interrupt Enable",1056,[[],["done_w",3]]],[11,"addre","","Bit 1 - Address Error Interrupt Enable",1056,[[],["addre_w",3]]],[11,"proge","","Bit 2 - Programming Error Interrupt Enable",1056,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error Interrupt Enable",1056,[[],["locke_w",3]]],[11,"eccse","","Bit 4 - ECC Single Error Interrupt Enable",1056,[[],["eccse_w",3]]],[11,"eccde","","Bit 5 - ECC Dual Error Interrupt Enable",1056,[[],["eccde_w",3]]],[11,"nvme","","Bit 6 - NVM Error Interrupt Enable",1056,[[],["nvme_w",3]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Interrupt Enable",1056,[[],["susp_w",3]]],[11,"seesfull","","Bit 8 - Active SEES Full Interrupt Enable",1056,[[],["seesfull_w",3]]],[11,"seesovf","","Bit 9 - Active SEES Overflow Interrupt Enable",1056,[[],["seesovf_w",3]]],[11,"seewrc","","Bit 10 - SEE Write Completed Interrupt Enable",1056,[[],["seewrc_w",3]]],[0,"intflag","atsamd51g::nvmctrl","Interrupt Flag Status and Clear",null,null],[3,"DONE_W","atsamd51g::nvmctrl::intflag","Write proxy for field `DONE`",null,null],[3,"ADDRE_W","","Write proxy for field `ADDRE`",null,null],[3,"PROGE_W","","Write proxy for field `PROGE`",null,null],[3,"LOCKE_W","","Write proxy for field `LOCKE`",null,null],[3,"ECCSE_W","","Write proxy for field `ECCSE`",null,null],[3,"ECCDE_W","","Write proxy for field `ECCDE`",null,null],[3,"NVME_W","","Write proxy for field `NVME`",null,null],[3,"SUSP_W","","Write proxy for field `SUSP`",null,null],[3,"SEESFULL_W","","Write proxy for field `SEESFULL`",null,null],[3,"SEESOVF_W","","Write proxy for field `SEESOVF`",null,null],[3,"SEEWRC_W","","Write proxy for field `SEEWRC`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DONE_R","","Reader of field `DONE`",null,null],[6,"ADDRE_R","","Reader of field `ADDRE`",null,null],[6,"PROGE_R","","Reader of field `PROGE`",null,null],[6,"LOCKE_R","","Reader of field `LOCKE`",null,null],[6,"ECCSE_R","","Reader of field `ECCSE`",null,null],[6,"ECCDE_R","","Reader of field `ECCDE`",null,null],[6,"NVME_R","","Reader of field `NVME`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"SEESFULL_R","","Reader of field `SEESFULL`",null,null],[6,"SEESOVF_R","","Reader of field `SEESOVF`",null,null],[6,"SEEWRC_R","","Reader of field `SEEWRC`",null,null],[11,"set_bit","","Sets the field bit",1057,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1057,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1057,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1058,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1058,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1058,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1059,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1059,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1059,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1060,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1060,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1060,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1061,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1061,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1061,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1062,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1062,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1062,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1063,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1063,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1063,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1064,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1064,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1064,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1065,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1065,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1065,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1066,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1066,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1066,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1067,[[],["w",6]]],[11,"done","atsamd51g::generic","Bit 0 - Command Done",6,[[],["done_r",6]]],[11,"addre","","Bit 1 - Address Error",6,[[],["addre_r",6]]],[11,"proge","","Bit 2 - Programming Error",6,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error",6,[[],["locke_r",6]]],[11,"eccse","","Bit 4 - ECC Single Error",6,[[],["eccse_r",6]]],[11,"eccde","","Bit 5 - ECC Dual Error",6,[[],["eccde_r",6]]],[11,"nvme","","Bit 6 - NVM Error",6,[[],["nvme_r",6]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Operation",6,[[],["susp_r",6]]],[11,"seesfull","","Bit 8 - Active SEES Full",6,[[],["seesfull_r",6]]],[11,"seesovf","","Bit 9 - Active SEES Overflow",6,[[],["seesovf_r",6]]],[11,"seewrc","","Bit 10 - SEE Write Completed",6,[[],["seewrc_r",6]]],[11,"done","atsamd51g::nvmctrl::intflag","Bit 0 - Command Done",1068,[[],["done_r",6]]],[11,"addre","","Bit 1 - Address Error",1068,[[],["addre_r",6]]],[11,"proge","","Bit 2 - Programming Error",1068,[[],["proge_r",6]]],[11,"locke","","Bit 3 - Lock Error",1068,[[],["locke_r",6]]],[11,"eccse","","Bit 4 - ECC Single Error",1068,[[],["eccse_r",6]]],[11,"eccde","","Bit 5 - ECC Dual Error",1068,[[],["eccde_r",6]]],[11,"nvme","","Bit 6 - NVM Error",1068,[[],["nvme_r",6]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Operation",1068,[[],["susp_r",6]]],[11,"seesfull","","Bit 8 - Active SEES Full",1068,[[],["seesfull_r",6]]],[11,"seesovf","","Bit 9 - Active SEES Overflow",1068,[[],["seesovf_r",6]]],[11,"seewrc","","Bit 10 - SEE Write Completed",1068,[[],["seewrc_r",6]]],[11,"done","atsamd51g::generic","Bit 0 - Command Done",7,[[],["done_w",3]]],[11,"addre","","Bit 1 - Address Error",7,[[],["addre_w",3]]],[11,"proge","","Bit 2 - Programming Error",7,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error",7,[[],["locke_w",3]]],[11,"eccse","","Bit 4 - ECC Single Error",7,[[],["eccse_w",3]]],[11,"eccde","","Bit 5 - ECC Dual Error",7,[[],["eccde_w",3]]],[11,"nvme","","Bit 6 - NVM Error",7,[[],["nvme_w",3]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Operation",7,[[],["susp_w",3]]],[11,"seesfull","","Bit 8 - Active SEES Full",7,[[],["seesfull_w",3]]],[11,"seesovf","","Bit 9 - Active SEES Overflow",7,[[],["seesovf_w",3]]],[11,"seewrc","","Bit 10 - SEE Write Completed",7,[[],["seewrc_w",3]]],[11,"done","atsamd51g::nvmctrl::intflag","Bit 0 - Command Done",1069,[[],["done_w",3]]],[11,"addre","","Bit 1 - Address Error",1069,[[],["addre_w",3]]],[11,"proge","","Bit 2 - Programming Error",1069,[[],["proge_w",3]]],[11,"locke","","Bit 3 - Lock Error",1069,[[],["locke_w",3]]],[11,"eccse","","Bit 4 - ECC Single Error",1069,[[],["eccse_w",3]]],[11,"eccde","","Bit 5 - ECC Dual Error",1069,[[],["eccde_w",3]]],[11,"nvme","","Bit 6 - NVM Error",1069,[[],["nvme_w",3]]],[11,"susp","","Bit 7 - Suspended Write Or Erase Operation",1069,[[],["susp_w",3]]],[11,"seesfull","","Bit 8 - Active SEES Full",1069,[[],["seesfull_w",3]]],[11,"seesovf","","Bit 9 - Active SEES Overflow",1069,[[],["seesovf_w",3]]],[11,"seewrc","","Bit 10 - SEE Write Completed",1069,[[],["seewrc_w",3]]],[0,"status","atsamd51g::nvmctrl","Status",null,null],[4,"BOOTPROT_A","atsamd51g::nvmctrl::status","Boot Loader Protection Size",null,null],[13,"_0","","15: 0 kbytes",1070,null],[13,"_8","","14: 8 kbytes",1070,null],[13,"_16","","13: 16 kbytes",1070,null],[13,"_24","","12: 24 kbytes",1070,null],[13,"_32","","11: 32 kbytes",1070,null],[13,"_40","","10: 40 kbytes",1070,null],[13,"_48","","9: 48 kbytes",1070,null],[13,"_56","","8: 56 kbytes",1070,null],[13,"_64","","7: 64 kbytes",1070,null],[13,"_72","","6: 72 kbytes",1070,null],[13,"_80","","5: 80 kbytes",1070,null],[13,"_88","","4: 88 kbytes",1070,null],[13,"_96","","3: 96 kbytes",1070,null],[13,"_104","","2: 104 kbytes",1070,null],[13,"_112","","1: 112 kbytes",1070,null],[13,"_120","","0: 120 kbytes",1070,null],[6,"R","","Reader of register STATUS",null,null],[6,"READY_R","","Reader of field `READY`",null,null],[6,"PRM_R","","Reader of field `PRM`",null,null],[6,"LOAD_R","","Reader of field `LOAD`",null,null],[6,"SUSP_R","","Reader of field `SUSP`",null,null],[6,"AFIRST_R","","Reader of field `AFIRST`",null,null],[6,"BPDIS_R","","Reader of field `BPDIS`",null,null],[6,"BOOTPROT_R","","Reader of field `BOOTPROT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bootprot_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",6,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",6,[[]]],[11,"is_24","","Checks if the value of the field is `_24`",6,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",6,[[]]],[11,"is_40","","Checks if the value of the field is `_40`",6,[[]]],[11,"is_48","","Checks if the value of the field is `_48`",6,[[]]],[11,"is_56","","Checks if the value of the field is `_56`",6,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",6,[[]]],[11,"is_72","","Checks if the value of the field is `_72`",6,[[]]],[11,"is_80","","Checks if the value of the field is `_80`",6,[[]]],[11,"is_88","","Checks if the value of the field is `_88`",6,[[]]],[11,"is_96","","Checks if the value of the field is `_96`",6,[[]]],[11,"is_104","","Checks if the value of the field is `_104`",6,[[]]],[11,"is_112","","Checks if the value of the field is `_112`",6,[[]]],[11,"is_120","","Checks if the value of the field is `_120`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::status","Get enumerated values variant",1071,[[],["bootprot_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",1071,[[]]],[11,"is_8","","Checks if the value of the field is `_8`",1071,[[]]],[11,"is_16","","Checks if the value of the field is `_16`",1071,[[]]],[11,"is_24","","Checks if the value of the field is `_24`",1071,[[]]],[11,"is_32","","Checks if the value of the field is `_32`",1071,[[]]],[11,"is_40","","Checks if the value of the field is `_40`",1071,[[]]],[11,"is_48","","Checks if the value of the field is `_48`",1071,[[]]],[11,"is_56","","Checks if the value of the field is `_56`",1071,[[]]],[11,"is_64","","Checks if the value of the field is `_64`",1071,[[]]],[11,"is_72","","Checks if the value of the field is `_72`",1071,[[]]],[11,"is_80","","Checks if the value of the field is `_80`",1071,[[]]],[11,"is_88","","Checks if the value of the field is `_88`",1071,[[]]],[11,"is_96","","Checks if the value of the field is `_96`",1071,[[]]],[11,"is_104","","Checks if the value of the field is `_104`",1071,[[]]],[11,"is_112","","Checks if the value of the field is `_112`",1071,[[]]],[11,"is_120","","Checks if the value of the field is `_120`",1071,[[]]],[11,"ready","atsamd51g::generic","Bit 0 - Ready to accept a command",6,[[],["ready_r",6]]],[11,"prm","","Bit 1 - Power Reduction Mode",6,[[],["prm_r",6]]],[11,"load","","Bit 2 - NVM Page Buffer Active Loading",6,[[],["load_r",6]]],[11,"susp","","Bit 3 - NVM Write Or Erase Operation Is Suspended",6,[[],["susp_r",6]]],[11,"afirst","","Bit 4 - BANKA First",6,[[],["afirst_r",6]]],[11,"bpdis","","Bit 5 - Boot Loader Protection Disable",6,[[],["bpdis_r",6]]],[11,"bootprot","","Bits 8:11 - Boot Loader Protection Size",6,[[],["bootprot_r",6]]],[11,"ready","atsamd51g::nvmctrl::status","Bit 0 - Ready to accept a command",1072,[[],["ready_r",6]]],[11,"prm","","Bit 1 - Power Reduction Mode",1072,[[],["prm_r",6]]],[11,"load","","Bit 2 - NVM Page Buffer Active Loading",1072,[[],["load_r",6]]],[11,"susp","","Bit 3 - NVM Write Or Erase Operation Is Suspended",1072,[[],["susp_r",6]]],[11,"afirst","","Bit 4 - BANKA First",1072,[[],["afirst_r",6]]],[11,"bpdis","","Bit 5 - Boot Loader Protection Disable",1072,[[],["bpdis_r",6]]],[11,"bootprot","","Bits 8:11 - Boot Loader Protection Size",1072,[[],["bootprot_r",6]]],[0,"addr","atsamd51g::nvmctrl","Address",null,null],[3,"ADDR_W","atsamd51g::nvmctrl::addr","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",1073,[[],["w",6]]],[11,"addr","atsamd51g::generic","Bits 0:23 - NVM Address",6,[[],["addr_r",6]]],[11,"addr","atsamd51g::nvmctrl::addr","Bits 0:23 - NVM Address",1074,[[],["addr_r",6]]],[11,"addr","atsamd51g::generic","Bits 0:23 - NVM Address",7,[[],["addr_w",3]]],[11,"addr","atsamd51g::nvmctrl::addr","Bits 0:23 - NVM Address",1075,[[],["addr_w",3]]],[0,"runlock","atsamd51g::nvmctrl","Lock Section",null,null],[6,"R","atsamd51g::nvmctrl::runlock","Reader of register RUNLOCK",null,null],[6,"RUNLOCK_R","","Reader of field `RUNLOCK`",null,null],[11,"runlock","atsamd51g::generic","Bits 0:31 - Region Un-Lock Bits",6,[[],["runlock_r",6]]],[11,"runlock","atsamd51g::nvmctrl::runlock","Bits 0:31 - Region Un-Lock Bits",1076,[[],["runlock_r",6]]],[0,"pbldata","atsamd51g::nvmctrl","Page Buffer Load Data x",null,null],[6,"R","atsamd51g::nvmctrl::pbldata","Reader of register PBLDATA[%s]",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"data","atsamd51g::generic","Bits 0:31 - Page Buffer Data",6,[[],["data_r",6]]],[11,"data","atsamd51g::nvmctrl::pbldata","Bits 0:31 - Page Buffer Data",1077,[[],["data_r",6]]],[0,"eccerr","atsamd51g::nvmctrl","ECC Error Status Register",null,null],[4,"TYPEL_A","atsamd51g::nvmctrl::eccerr","Low Double-Word Error Type",null,null],[13,"NONE","","0: No Error Detected Since Last Read",1078,null],[13,"SINGLE","","1: At Least One Single Error Detected Since last Read",1078,null],[13,"DUAL","","2: At Least One Dual Error Detected Since Last Read",1078,null],[4,"TYPEH_A","","High Double-Word Error Type",null,null],[13,"NONE","","0: No Error Detected Since Last Read",1079,null],[13,"SINGLE","","1: At Least One Single Error Detected Since last Read",1079,null],[13,"DUAL","","2: At Least One Dual Error Detected Since Last Read",1079,null],[6,"R","","Reader of register ECCERR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"TYPEL_R","","Reader of field `TYPEL`",null,null],[6,"TYPEH_R","","Reader of field `TYPEH`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["typel_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::eccerr","Get enumerated values variant",1080,[[],[["variant",4],["typel_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1080,[[]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",1080,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",1080,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["typeh_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::eccerr","Get enumerated values variant",1081,[[],[["typeh_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1081,[[]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",1081,[[]]],[11,"is_dual","","Checks if the value of the field is `DUAL`",1081,[[]]],[11,"addr","atsamd51g::generic","Bits 0:23 - Error Address",6,[[],["addr_r",6]]],[11,"typel","","Bits 28:29 - Low Double-Word Error Type",6,[[],["typel_r",6]]],[11,"typeh","","Bits 30:31 - High Double-Word Error Type",6,[[],["typeh_r",6]]],[11,"addr","atsamd51g::nvmctrl::eccerr","Bits 0:23 - Error Address",1082,[[],["addr_r",6]]],[11,"typel","","Bits 28:29 - Low Double-Word Error Type",1082,[[],["typel_r",6]]],[11,"typeh","","Bits 30:31 - High Double-Word Error Type",1082,[[],["typeh_r",6]]],[0,"dbgctrl","atsamd51g::nvmctrl","Debug Control",null,null],[3,"ECCDIS_W","atsamd51g::nvmctrl::dbgctrl","Write proxy for field `ECCDIS`",null,null],[3,"ECCELOG_W","","Write proxy for field `ECCELOG`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"ECCDIS_R","","Reader of field `ECCDIS`",null,null],[6,"ECCELOG_R","","Reader of field `ECCELOG`",null,null],[11,"set_bit","","Sets the field bit",1083,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1083,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1083,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1084,[[],["w",6]]],[11,"eccdis","atsamd51g::generic","Bit 0 - Debugger ECC Read Disable",6,[[],["eccdis_r",6]]],[11,"eccelog","","Bit 1 - Debugger ECC Error Tracking Mode",6,[[],["eccelog_r",6]]],[11,"eccdis","atsamd51g::nvmctrl::dbgctrl","Bit 0 - Debugger ECC Read Disable",1085,[[],["eccdis_r",6]]],[11,"eccelog","","Bit 1 - Debugger ECC Error Tracking Mode",1085,[[],["eccelog_r",6]]],[11,"eccdis","atsamd51g::generic","Bit 0 - Debugger ECC Read Disable",7,[[],["eccdis_w",3]]],[11,"eccelog","","Bit 1 - Debugger ECC Error Tracking Mode",7,[[],["eccelog_w",3]]],[11,"eccdis","atsamd51g::nvmctrl::dbgctrl","Bit 0 - Debugger ECC Read Disable",1086,[[],["eccdis_w",3]]],[11,"eccelog","","Bit 1 - Debugger ECC Error Tracking Mode",1086,[[],["eccelog_w",3]]],[0,"seecfg","atsamd51g::nvmctrl","SmartEEPROM Configuration Register",null,null],[3,"WMODE_W","atsamd51g::nvmctrl::seecfg","Write proxy for field `WMODE`",null,null],[3,"APRDIS_W","","Write proxy for field `APRDIS`",null,null],[4,"WMODE_A","","Write Mode",null,null],[13,"UNBUFFERED","","0: A NVM write command is issued after each write in the…",1087,null],[13,"BUFFERED","","1: A NVM write command is issued when a write to a new…",1087,null],[6,"R","","Reader of register SEECFG",null,null],[6,"W","","Writer for register SEECFG",null,null],[6,"WMODE_R","","Reader of field `WMODE`",null,null],[6,"APRDIS_R","","Reader of field `APRDIS`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wmode_a",4]]],[11,"is_unbuffered","","Checks if the value of the field is `UNBUFFERED`",6,[[]]],[11,"is_buffered","","Checks if the value of the field is `BUFFERED`",6,[[]]],[11,"variant","atsamd51g::nvmctrl::seecfg","Get enumerated values variant",1088,[[],["wmode_a",4]]],[11,"is_unbuffered","","Checks if the value of the field is `UNBUFFERED`",1088,[[]]],[11,"is_buffered","","Checks if the value of the field is `BUFFERED`",1088,[[]]],[11,"variant","","Writes `variant` to the field",1089,[[["wmode_a",4]],["w",6]]],[11,"unbuffered","","A NVM write command is issued after each write in the…",1089,[[],["w",6]]],[11,"buffered","","A NVM write command is issued when a write to a new page…",1089,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1089,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1089,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1089,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1090,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1090,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1090,[[],["w",6]]],[11,"wmode","atsamd51g::generic","Bit 0 - Write Mode",6,[[],["wmode_r",6]]],[11,"aprdis","","Bit 1 - Automatic Page Reallocation Disable",6,[[],["aprdis_r",6]]],[11,"wmode","atsamd51g::nvmctrl::seecfg","Bit 0 - Write Mode",1091,[[],["wmode_r",6]]],[11,"aprdis","","Bit 1 - Automatic Page Reallocation Disable",1091,[[],["aprdis_r",6]]],[11,"wmode","atsamd51g::generic","Bit 0 - Write Mode",7,[[],["wmode_w",3]]],[11,"aprdis","","Bit 1 - Automatic Page Reallocation Disable",7,[[],["aprdis_w",3]]],[11,"wmode","atsamd51g::nvmctrl::seecfg","Bit 0 - Write Mode",1092,[[],["wmode_w",3]]],[11,"aprdis","","Bit 1 - Automatic Page Reallocation Disable",1092,[[],["aprdis_w",3]]],[0,"seestat","atsamd51g::nvmctrl","SmartEEPROM Status Register",null,null],[6,"R","atsamd51g::nvmctrl::seestat","Reader of register SEESTAT",null,null],[6,"ASEES_R","","Reader of field `ASEES`",null,null],[6,"LOAD_R","","Reader of field `LOAD`",null,null],[6,"BUSY_R","","Reader of field `BUSY`",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"RLOCK_R","","Reader of field `RLOCK`",null,null],[6,"SBLK_R","","Reader of field `SBLK`",null,null],[6,"PSZ_R","","Reader of field `PSZ`",null,null],[11,"asees","atsamd51g::generic","Bit 0 - Active SmartEEPROM Sector",6,[[],["asees_r",6]]],[11,"load","","Bit 1 - Page Buffer Loaded",6,[[],["load_r",6]]],[11,"busy","","Bit 2 - Busy",6,[[],["busy_r",6]]],[11,"lock","","Bit 3 - SmartEEPROM Write Access Is Locked",6,[[],["lock_r",6]]],[11,"rlock","","Bit 4 - SmartEEPROM Write Access To Register Address Space…",6,[[],["rlock_r",6]]],[11,"sblk","","Bits 8:11 - Blocks Number In a Sector",6,[[],["sblk_r",6]]],[11,"psz","","Bits 16:18 - SmartEEPROM Page Size",6,[[],["psz_r",6]]],[11,"asees","atsamd51g::nvmctrl::seestat","Bit 0 - Active SmartEEPROM Sector",1093,[[],["asees_r",6]]],[11,"load","","Bit 1 - Page Buffer Loaded",1093,[[],["load_r",6]]],[11,"busy","","Bit 2 - Busy",1093,[[],["busy_r",6]]],[11,"lock","","Bit 3 - SmartEEPROM Write Access Is Locked",1093,[[],["lock_r",6]]],[11,"rlock","","Bit 4 - SmartEEPROM Write Access To Register Address Space…",1093,[[],["rlock_r",6]]],[11,"sblk","","Bits 8:11 - Blocks Number In a Sector",1093,[[],["sblk_r",6]]],[11,"psz","","Bits 16:18 - SmartEEPROM Page Size",1093,[[],["psz_r",6]]],[6,"CTRLA","atsamd51g::nvmctrl","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"PARAM","","NVM Parameter",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"ADDR","","Address",null,null],[6,"RUNLOCK","","Lock Section",null,null],[6,"PBLDATA","","Page Buffer Load Data x",null,null],[6,"ECCERR","","ECC Error Status Register",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SEECFG","","SmartEEPROM Configuration Register",null,null],[6,"SEESTAT","","SmartEEPROM Status Register",null,null],[0,"oscctrl","atsamd51g","Oscillators Control",null,null],[3,"RegisterBlock","atsamd51g::oscctrl","Register block",null,null],[12,"evctrl","","0x00 - Event Control",1094,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",1094,null],[12,"intenset","","0x08 - Interrupt Enable Set",1094,null],[12,"intflag","","0x0c - Interrupt Flag Status and Clear",1094,null],[12,"status","","0x10 - Status",1094,null],[12,"xoscctrl","","0x14 - External Multipurpose Crystal Oscillator Control",1094,null],[12,"dfllctrla","","0x1c - DFLL48M Control A",1094,null],[12,"dfllctrlb","","0x20 - DFLL48M Control B",1094,null],[12,"dfllval","","0x24 - DFLL48M Value",1094,null],[12,"dfllmul","","0x28 - DFLL48M Multiplier",1094,null],[12,"dfllsync","","0x2c - DFLL48M Synchronization",1094,null],[12,"dpll","","0x30 - DPLL[%s]",1094,null],[3,"DPLL","","Register block",null,null],[12,"dpllctrla","","0x00 - DPLL Control A",1095,null],[12,"dpllratio","","0x04 - DPLL Ratio Control",1095,null],[12,"dpllctrlb","","0x08 - DPLL Control B",1095,null],[12,"dpllsyncbusy","","0x0c - DPLL Synchronization Busy",1095,null],[12,"dpllstatus","","0x10 - DPLL Status",1095,null],[0,"dpll","","Register block DPLL[%s]",null,null],[0,"dpllctrla","atsamd51g::oscctrl::dpll","DPLL Control A",null,null],[3,"ENABLE_W","atsamd51g::oscctrl::dpll::dpllctrla","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[6,"R","","Reader of register DPLLCTRLA",null,null],[6,"W","","Writer for register DPLLCTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[11,"set_bit","","Sets the field bit",1096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1097,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1098,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1098,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1098,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - DPLL Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"enable","atsamd51g::oscctrl::dpll::dpllctrla","Bit 1 - DPLL Enable",1099,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1099,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1099,[[],["ondemand_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - DPLL Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"enable","atsamd51g::oscctrl::dpll::dpllctrla","Bit 1 - DPLL Enable",1100,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1100,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1100,[[],["ondemand_w",3]]],[0,"dpllratio","atsamd51g::oscctrl::dpll","DPLL Ratio Control",null,null],[3,"LDR_W","atsamd51g::oscctrl::dpll::dpllratio","Write proxy for field `LDR`",null,null],[3,"LDRFRAC_W","","Write proxy for field `LDRFRAC`",null,null],[6,"R","","Reader of register DPLLRATIO",null,null],[6,"W","","Writer for register DPLLRATIO",null,null],[6,"LDR_R","","Reader of field `LDR`",null,null],[6,"LDRFRAC_R","","Reader of field `LDRFRAC`",null,null],[11,"bits","","Writes raw bits to the field",1101,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1102,[[],["w",6]]],[11,"ldr","atsamd51g::generic","Bits 0:12 - Loop Divider Ratio",6,[[],["ldr_r",6]]],[11,"ldrfrac","","Bits 16:20 - Loop Divider Ratio Fractional Part",6,[[],["ldrfrac_r",6]]],[11,"ldr","atsamd51g::oscctrl::dpll::dpllratio","Bits 0:12 - Loop Divider Ratio",1103,[[],["ldr_r",6]]],[11,"ldrfrac","","Bits 16:20 - Loop Divider Ratio Fractional Part",1103,[[],["ldrfrac_r",6]]],[11,"ldr","atsamd51g::generic","Bits 0:12 - Loop Divider Ratio",7,[[],["ldr_w",3]]],[11,"ldrfrac","","Bits 16:20 - Loop Divider Ratio Fractional Part",7,[[],["ldrfrac_w",3]]],[11,"ldr","atsamd51g::oscctrl::dpll::dpllratio","Bits 0:12 - Loop Divider Ratio",1104,[[],["ldr_w",3]]],[11,"ldrfrac","","Bits 16:20 - Loop Divider Ratio Fractional Part",1104,[[],["ldrfrac_w",3]]],[0,"dpllctrlb","atsamd51g::oscctrl::dpll","DPLL Control B",null,null],[3,"FILTER_W","atsamd51g::oscctrl::dpll::dpllctrlb","Write proxy for field `FILTER`",null,null],[3,"WUF_W","","Write proxy for field `WUF`",null,null],[3,"REFCLK_W","","Write proxy for field `REFCLK`",null,null],[3,"LTIME_W","","Write proxy for field `LTIME`",null,null],[3,"LBYPASS_W","","Write proxy for field `LBYPASS`",null,null],[3,"DCOFILTER_W","","Write proxy for field `DCOFILTER`",null,null],[3,"DCOEN_W","","Write proxy for field `DCOEN`",null,null],[3,"DIV_W","","Write proxy for field `DIV`",null,null],[4,"FILTER_A","","Proportional Integral Filter Selection",null,null],[13,"FILTER1","","0: Bandwidth = 92.7Khz and Damping Factor = 0.76",1105,null],[13,"FILTER2","","1: Bandwidth = 131Khz and Damping Factor = 1.08",1105,null],[13,"FILTER3","","2: Bandwidth = 46.4Khz and Damping Factor = 0.38",1105,null],[13,"FILTER4","","3: Bandwidth = 65.6Khz and Damping Factor = 0.54",1105,null],[13,"FILTER5","","4: Bandwidth = 131Khz and Damping Factor = 0.56",1105,null],[13,"FILTER6","","5: Bandwidth = 185Khz and Damping Factor = 0.79",1105,null],[13,"FILTER7","","6: Bandwidth = 65.6Khz and Damping Factor = 0.28",1105,null],[13,"FILTER8","","7: Bandwidth = 92.7Khz and Damping Factor = 0.39",1105,null],[13,"FILTER9","","8: Bandwidth = 46.4Khz and Damping Factor = 1.49",1105,null],[13,"FILTER10","","9: Bandwidth = 65.6Khz and Damping Factor = 2.11",1105,null],[13,"FILTER11","","10: Bandwidth = 23.2Khz and Damping Factor = 0.75",1105,null],[13,"FILTER12","","11: Bandwidth = 32.8Khz and Damping Factor = 1.06",1105,null],[13,"FILTER13","","12: Bandwidth = 65.6Khz and Damping Factor = 1.07",1105,null],[13,"FILTER14","","13: Bandwidth = 92.7Khz and Damping Factor = 1.51",1105,null],[13,"FILTER15","","14: Bandwidth = 32.8Khz and Damping Factor = 0.53",1105,null],[13,"FILTER16","","15: Bandwidth = 46.4Khz and Damping Factor = 0.75",1105,null],[4,"REFCLK_A","","Reference Clock Selection",null,null],[13,"GCLK","","0: Dedicated GCLK clock reference",1106,null],[13,"XOSC32","","1: XOSC32K clock reference",1106,null],[13,"XOSC0","","2: XOSC0 clock reference",1106,null],[13,"XOSC1","","3: XOSC1 clock reference",1106,null],[4,"LTIME_A","","Lock Time",null,null],[13,"DEFAULT","","0: No time-out. Automatic lock",1107,null],[13,"_800US","","4: Time-out if no lock within 800us",1107,null],[13,"_900US","","5: Time-out if no lock within 900us",1107,null],[13,"_1MS","","6: Time-out if no lock within 1ms",1107,null],[13,"_1P1MS","","7: Time-out if no lock within 1.1ms",1107,null],[4,"DCOFILTER_A","","Sigma-Delta DCO Filter Selection",null,null],[13,"FILTER1","","0: Capacitor(pF) = 0.5 and Bandwidth Fn (MHz) = 3.21",1108,null],[13,"FILTER2","","1: Capacitor(pF) = 1 and Bandwidth Fn (MHz) = 1.6",1108,null],[13,"FILTER3","","2: Capacitor(pF) = 1.5 and Bandwidth Fn (MHz) = 1.1",1108,null],[13,"FILTER4","","3: Capacitor(pF) = 2 and Bandwidth Fn (MHz) = 0.8",1108,null],[13,"FILTER5","","4: Capacitor(pF) = 2.5 and Bandwidth Fn (MHz) = 0.64",1108,null],[13,"FILTER6","","5: Capacitor(pF) = 3 and Bandwidth Fn (MHz) = 0.55",1108,null],[13,"FILTER7","","6: Capacitor(pF) = 3.5 and Bandwidth Fn (MHz) = 0.45",1108,null],[13,"FILTER8","","7: Capacitor(pF) = 4 and Bandwidth Fn (MHz) = 0.4",1108,null],[6,"R","","Reader of register DPLLCTRLB",null,null],[6,"W","","Writer for register DPLLCTRLB",null,null],[6,"FILTER_R","","Reader of field `FILTER`",null,null],[6,"WUF_R","","Reader of field `WUF`",null,null],[6,"REFCLK_R","","Reader of field `REFCLK`",null,null],[6,"LTIME_R","","Reader of field `LTIME`",null,null],[6,"LBYPASS_R","","Reader of field `LBYPASS`",null,null],[6,"DCOFILTER_R","","Reader of field `DCOFILTER`",null,null],[6,"DCOEN_R","","Reader of field `DCOEN`",null,null],[6,"DIV_R","","Reader of field `DIV`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["filter_a",4]]],[11,"is_filter1","","Checks if the value of the field is `FILTER1`",6,[[]]],[11,"is_filter2","","Checks if the value of the field is `FILTER2`",6,[[]]],[11,"is_filter3","","Checks if the value of the field is `FILTER3`",6,[[]]],[11,"is_filter4","","Checks if the value of the field is `FILTER4`",6,[[]]],[11,"is_filter5","","Checks if the value of the field is `FILTER5`",6,[[]]],[11,"is_filter6","","Checks if the value of the field is `FILTER6`",6,[[]]],[11,"is_filter7","","Checks if the value of the field is `FILTER7`",6,[[]]],[11,"is_filter8","","Checks if the value of the field is `FILTER8`",6,[[]]],[11,"is_filter9","","Checks if the value of the field is `FILTER9`",6,[[]]],[11,"is_filter10","","Checks if the value of the field is `FILTER10`",6,[[]]],[11,"is_filter11","","Checks if the value of the field is `FILTER11`",6,[[]]],[11,"is_filter12","","Checks if the value of the field is `FILTER12`",6,[[]]],[11,"is_filter13","","Checks if the value of the field is `FILTER13`",6,[[]]],[11,"is_filter14","","Checks if the value of the field is `FILTER14`",6,[[]]],[11,"is_filter15","","Checks if the value of the field is `FILTER15`",6,[[]]],[11,"is_filter16","","Checks if the value of the field is `FILTER16`",6,[[]]],[11,"variant","atsamd51g::oscctrl::dpll::dpllctrlb","Get enumerated values variant",1109,[[],["filter_a",4]]],[11,"is_filter1","","Checks if the value of the field is `FILTER1`",1109,[[]]],[11,"is_filter2","","Checks if the value of the field is `FILTER2`",1109,[[]]],[11,"is_filter3","","Checks if the value of the field is `FILTER3`",1109,[[]]],[11,"is_filter4","","Checks if the value of the field is `FILTER4`",1109,[[]]],[11,"is_filter5","","Checks if the value of the field is `FILTER5`",1109,[[]]],[11,"is_filter6","","Checks if the value of the field is `FILTER6`",1109,[[]]],[11,"is_filter7","","Checks if the value of the field is `FILTER7`",1109,[[]]],[11,"is_filter8","","Checks if the value of the field is `FILTER8`",1109,[[]]],[11,"is_filter9","","Checks if the value of the field is `FILTER9`",1109,[[]]],[11,"is_filter10","","Checks if the value of the field is `FILTER10`",1109,[[]]],[11,"is_filter11","","Checks if the value of the field is `FILTER11`",1109,[[]]],[11,"is_filter12","","Checks if the value of the field is `FILTER12`",1109,[[]]],[11,"is_filter13","","Checks if the value of the field is `FILTER13`",1109,[[]]],[11,"is_filter14","","Checks if the value of the field is `FILTER14`",1109,[[]]],[11,"is_filter15","","Checks if the value of the field is `FILTER15`",1109,[[]]],[11,"is_filter16","","Checks if the value of the field is `FILTER16`",1109,[[]]],[11,"variant","","Writes `variant` to the field",1110,[[["filter_a",4]],["w",6]]],[11,"filter1","","Bandwidth = 92.7Khz and Damping Factor = 0.76",1110,[[],["w",6]]],[11,"filter2","","Bandwidth = 131Khz and Damping Factor = 1.08",1110,[[],["w",6]]],[11,"filter3","","Bandwidth = 46.4Khz and Damping Factor = 0.38",1110,[[],["w",6]]],[11,"filter4","","Bandwidth = 65.6Khz and Damping Factor = 0.54",1110,[[],["w",6]]],[11,"filter5","","Bandwidth = 131Khz and Damping Factor = 0.56",1110,[[],["w",6]]],[11,"filter6","","Bandwidth = 185Khz and Damping Factor = 0.79",1110,[[],["w",6]]],[11,"filter7","","Bandwidth = 65.6Khz and Damping Factor = 0.28",1110,[[],["w",6]]],[11,"filter8","","Bandwidth = 92.7Khz and Damping Factor = 0.39",1110,[[],["w",6]]],[11,"filter9","","Bandwidth = 46.4Khz and Damping Factor = 1.49",1110,[[],["w",6]]],[11,"filter10","","Bandwidth = 65.6Khz and Damping Factor = 2.11",1110,[[],["w",6]]],[11,"filter11","","Bandwidth = 23.2Khz and Damping Factor = 0.75",1110,[[],["w",6]]],[11,"filter12","","Bandwidth = 32.8Khz and Damping Factor = 1.06",1110,[[],["w",6]]],[11,"filter13","","Bandwidth = 65.6Khz and Damping Factor = 1.07",1110,[[],["w",6]]],[11,"filter14","","Bandwidth = 92.7Khz and Damping Factor = 1.51",1110,[[],["w",6]]],[11,"filter15","","Bandwidth = 32.8Khz and Damping Factor = 0.53",1110,[[],["w",6]]],[11,"filter16","","Bandwidth = 46.4Khz and Damping Factor = 0.75",1110,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1110,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1111,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1111,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1111,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["refclk_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_xosc32","","Checks if the value of the field is `XOSC32`",6,[[]]],[11,"is_xosc0","","Checks if the value of the field is `XOSC0`",6,[[]]],[11,"is_xosc1","","Checks if the value of the field is `XOSC1`",6,[[]]],[11,"variant","atsamd51g::oscctrl::dpll::dpllctrlb","Get enumerated values variant",1112,[[],[["refclk_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",1112,[[]]],[11,"is_xosc32","","Checks if the value of the field is `XOSC32`",1112,[[]]],[11,"is_xosc0","","Checks if the value of the field is `XOSC0`",1112,[[]]],[11,"is_xosc1","","Checks if the value of the field is `XOSC1`",1112,[[]]],[11,"variant","","Writes `variant` to the field",1113,[[["refclk_a",4]],["w",6]]],[11,"gclk","","Dedicated GCLK clock reference",1113,[[],["w",6]]],[11,"xosc32","","XOSC32K clock reference",1113,[[],["w",6]]],[11,"xosc0","","XOSC0 clock reference",1113,[[],["w",6]]],[11,"xosc1","","XOSC1 clock reference",1113,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1113,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["ltime_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_800us","","Checks if the value of the field is `_800US`",6,[[]]],[11,"is_900us","","Checks if the value of the field is `_900US`",6,[[]]],[11,"is_1ms","","Checks if the value of the field is `_1MS`",6,[[]]],[11,"is_1p1ms","","Checks if the value of the field is `_1P1MS`",6,[[]]],[11,"variant","atsamd51g::oscctrl::dpll::dpllctrlb","Get enumerated values variant",1114,[[],[["ltime_a",4],["variant",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",1114,[[]]],[11,"is_800us","","Checks if the value of the field is `_800US`",1114,[[]]],[11,"is_900us","","Checks if the value of the field is `_900US`",1114,[[]]],[11,"is_1ms","","Checks if the value of the field is `_1MS`",1114,[[]]],[11,"is_1p1ms","","Checks if the value of the field is `_1P1MS`",1114,[[]]],[11,"variant","","Writes `variant` to the field",1115,[[["ltime_a",4]],["w",6]]],[11,"default","","No time-out. Automatic lock",1115,[[],["w",6]]],[11,"_800us","","Time-out if no lock within 800us",1115,[[],["w",6]]],[11,"_900us","","Time-out if no lock within 900us",1115,[[],["w",6]]],[11,"_1ms","","Time-out if no lock within 1ms",1115,[[],["w",6]]],[11,"_1p1ms","","Time-out if no lock within 1.1ms",1115,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1115,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1116,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1116,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1116,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dcofilter_a",4]]],[11,"is_filter1","","Checks if the value of the field is `FILTER1`",6,[[]]],[11,"is_filter2","","Checks if the value of the field is `FILTER2`",6,[[]]],[11,"is_filter3","","Checks if the value of the field is `FILTER3`",6,[[]]],[11,"is_filter4","","Checks if the value of the field is `FILTER4`",6,[[]]],[11,"is_filter5","","Checks if the value of the field is `FILTER5`",6,[[]]],[11,"is_filter6","","Checks if the value of the field is `FILTER6`",6,[[]]],[11,"is_filter7","","Checks if the value of the field is `FILTER7`",6,[[]]],[11,"is_filter8","","Checks if the value of the field is `FILTER8`",6,[[]]],[11,"variant","atsamd51g::oscctrl::dpll::dpllctrlb","Get enumerated values variant",1117,[[],["dcofilter_a",4]]],[11,"is_filter1","","Checks if the value of the field is `FILTER1`",1117,[[]]],[11,"is_filter2","","Checks if the value of the field is `FILTER2`",1117,[[]]],[11,"is_filter3","","Checks if the value of the field is `FILTER3`",1117,[[]]],[11,"is_filter4","","Checks if the value of the field is `FILTER4`",1117,[[]]],[11,"is_filter5","","Checks if the value of the field is `FILTER5`",1117,[[]]],[11,"is_filter6","","Checks if the value of the field is `FILTER6`",1117,[[]]],[11,"is_filter7","","Checks if the value of the field is `FILTER7`",1117,[[]]],[11,"is_filter8","","Checks if the value of the field is `FILTER8`",1117,[[]]],[11,"variant","","Writes `variant` to the field",1118,[[["dcofilter_a",4]],["w",6]]],[11,"filter1","","Capacitor(pF) = 0.5 and Bandwidth Fn (MHz) = 3.21",1118,[[],["w",6]]],[11,"filter2","","Capacitor(pF) = 1 and Bandwidth Fn (MHz) = 1.6",1118,[[],["w",6]]],[11,"filter3","","Capacitor(pF) = 1.5 and Bandwidth Fn (MHz) = 1.1",1118,[[],["w",6]]],[11,"filter4","","Capacitor(pF) = 2 and Bandwidth Fn (MHz) = 0.8",1118,[[],["w",6]]],[11,"filter5","","Capacitor(pF) = 2.5 and Bandwidth Fn (MHz) = 0.64",1118,[[],["w",6]]],[11,"filter6","","Capacitor(pF) = 3 and Bandwidth Fn (MHz) = 0.55",1118,[[],["w",6]]],[11,"filter7","","Capacitor(pF) = 3.5 and Bandwidth Fn (MHz) = 0.45",1118,[[],["w",6]]],[11,"filter8","","Capacitor(pF) = 4 and Bandwidth Fn (MHz) = 0.4",1118,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1118,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1119,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1119,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1119,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1120,[[],["w",6]]],[11,"filter","atsamd51g::generic","Bits 0:3 - Proportional Integral Filter Selection",6,[[],["filter_r",6]]],[11,"wuf","","Bit 4 - Wake Up Fast",6,[[],["wuf_r",6]]],[11,"refclk","","Bits 5:7 - Reference Clock Selection",6,[[],["refclk_r",6]]],[11,"ltime","","Bits 8:10 - Lock Time",6,[[],["ltime_r",6]]],[11,"lbypass","","Bit 11 - Lock Bypass",6,[[],["lbypass_r",6]]],[11,"dcofilter","","Bits 12:14 - Sigma-Delta DCO Filter Selection",6,[[],["dcofilter_r",6]]],[11,"dcoen","","Bit 15 - DCO Filter Enable",6,[[],["dcoen_r",6]]],[11,"div","","Bits 16:26 - Clock Divider",6,[[],["div_r",6]]],[11,"filter","atsamd51g::oscctrl::dpll::dpllctrlb","Bits 0:3 - Proportional Integral Filter Selection",1121,[[],["filter_r",6]]],[11,"wuf","","Bit 4 - Wake Up Fast",1121,[[],["wuf_r",6]]],[11,"refclk","","Bits 5:7 - Reference Clock Selection",1121,[[],["refclk_r",6]]],[11,"ltime","","Bits 8:10 - Lock Time",1121,[[],["ltime_r",6]]],[11,"lbypass","","Bit 11 - Lock Bypass",1121,[[],["lbypass_r",6]]],[11,"dcofilter","","Bits 12:14 - Sigma-Delta DCO Filter Selection",1121,[[],["dcofilter_r",6]]],[11,"dcoen","","Bit 15 - DCO Filter Enable",1121,[[],["dcoen_r",6]]],[11,"div","","Bits 16:26 - Clock Divider",1121,[[],["div_r",6]]],[11,"filter","atsamd51g::generic","Bits 0:3 - Proportional Integral Filter Selection",7,[[],["filter_w",3]]],[11,"wuf","","Bit 4 - Wake Up Fast",7,[[],["wuf_w",3]]],[11,"refclk","","Bits 5:7 - Reference Clock Selection",7,[[],["refclk_w",3]]],[11,"ltime","","Bits 8:10 - Lock Time",7,[[],["ltime_w",3]]],[11,"lbypass","","Bit 11 - Lock Bypass",7,[[],["lbypass_w",3]]],[11,"dcofilter","","Bits 12:14 - Sigma-Delta DCO Filter Selection",7,[[],["dcofilter_w",3]]],[11,"dcoen","","Bit 15 - DCO Filter Enable",7,[[],["dcoen_w",3]]],[11,"div","","Bits 16:26 - Clock Divider",7,[[],["div_w",3]]],[11,"filter","atsamd51g::oscctrl::dpll::dpllctrlb","Bits 0:3 - Proportional Integral Filter Selection",1122,[[],["filter_w",3]]],[11,"wuf","","Bit 4 - Wake Up Fast",1122,[[],["wuf_w",3]]],[11,"refclk","","Bits 5:7 - Reference Clock Selection",1122,[[],["refclk_w",3]]],[11,"ltime","","Bits 8:10 - Lock Time",1122,[[],["ltime_w",3]]],[11,"lbypass","","Bit 11 - Lock Bypass",1122,[[],["lbypass_w",3]]],[11,"dcofilter","","Bits 12:14 - Sigma-Delta DCO Filter Selection",1122,[[],["dcofilter_w",3]]],[11,"dcoen","","Bit 15 - DCO Filter Enable",1122,[[],["dcoen_w",3]]],[11,"div","","Bits 16:26 - Clock Divider",1122,[[],["div_w",3]]],[0,"dpllsyncbusy","atsamd51g::oscctrl::dpll","DPLL Synchronization Busy",null,null],[6,"R","atsamd51g::oscctrl::dpll::dpllsyncbusy","Reader of register DPLLSYNCBUSY",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"DPLLRATIO_R","","Reader of field `DPLLRATIO`",null,null],[11,"enable","atsamd51g::generic","Bit 1 - DPLL Enable Synchronization Status",6,[[],["enable_r",6]]],[11,"dpllratio","","Bit 2 - DPLL Loop Divider Ratio Synchronization Status",6,[[],["dpllratio_r",6]]],[11,"enable","atsamd51g::oscctrl::dpll::dpllsyncbusy","Bit 1 - DPLL Enable Synchronization Status",1123,[[],["enable_r",6]]],[11,"dpllratio","","Bit 2 - DPLL Loop Divider Ratio Synchronization Status",1123,[[],["dpllratio_r",6]]],[0,"dpllstatus","atsamd51g::oscctrl::dpll","DPLL Status",null,null],[6,"R","atsamd51g::oscctrl::dpll::dpllstatus","Reader of register DPLLSTATUS",null,null],[6,"LOCK_R","","Reader of field `LOCK`",null,null],[6,"CLKRDY_R","","Reader of field `CLKRDY`",null,null],[11,"lock","atsamd51g::generic","Bit 0 - DPLL Lock Status",6,[[],["lock_r",6]]],[11,"clkrdy","","Bit 1 - DPLL Clock Ready",6,[[],["clkrdy_r",6]]],[11,"lock","atsamd51g::oscctrl::dpll::dpllstatus","Bit 0 - DPLL Lock Status",1124,[[],["lock_r",6]]],[11,"clkrdy","","Bit 1 - DPLL Clock Ready",1124,[[],["clkrdy_r",6]]],[6,"DPLLCTRLA","atsamd51g::oscctrl::dpll","DPLL Control A",null,null],[6,"DPLLRATIO","","DPLL Ratio Control",null,null],[6,"DPLLCTRLB","","DPLL Control B",null,null],[6,"DPLLSYNCBUSY","","DPLL Synchronization Busy",null,null],[6,"DPLLSTATUS","","DPLL Status",null,null],[0,"evctrl","atsamd51g::oscctrl","Event Control",null,null],[3,"CFDEO0_W","atsamd51g::oscctrl::evctrl","Write proxy for field `CFDEO0`",null,null],[3,"CFDEO1_W","","Write proxy for field `CFDEO1`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"CFDEO0_R","","Reader of field `CFDEO0`",null,null],[6,"CFDEO1_R","","Reader of field `CFDEO1`",null,null],[11,"set_bit","","Sets the field bit",1125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1126,[[],["w",6]]],[11,"cfdeo0","atsamd51g::generic","Bit 0 - Clock 0 Failure Detector Event Output Enable",6,[[],["cfdeo0_r",6]]],[11,"cfdeo1","","Bit 1 - Clock 1 Failure Detector Event Output Enable",6,[[],["cfdeo1_r",6]]],[11,"cfdeo0","atsamd51g::oscctrl::evctrl","Bit 0 - Clock 0 Failure Detector Event Output Enable",1127,[[],["cfdeo0_r",6]]],[11,"cfdeo1","","Bit 1 - Clock 1 Failure Detector Event Output Enable",1127,[[],["cfdeo1_r",6]]],[11,"cfdeo0","atsamd51g::generic","Bit 0 - Clock 0 Failure Detector Event Output Enable",7,[[],["cfdeo0_w",3]]],[11,"cfdeo1","","Bit 1 - Clock 1 Failure Detector Event Output Enable",7,[[],["cfdeo1_w",3]]],[11,"cfdeo0","atsamd51g::oscctrl::evctrl","Bit 0 - Clock 0 Failure Detector Event Output Enable",1128,[[],["cfdeo0_w",3]]],[11,"cfdeo1","","Bit 1 - Clock 1 Failure Detector Event Output Enable",1128,[[],["cfdeo1_w",3]]],[0,"intenclr","atsamd51g::oscctrl","Interrupt Enable Clear",null,null],[3,"XOSCRDY0_W","atsamd51g::oscctrl::intenclr","Write proxy for field `XOSCRDY0`",null,null],[3,"XOSCRDY1_W","","Write proxy for field `XOSCRDY1`",null,null],[3,"XOSCFAIL0_W","","Write proxy for field `XOSCFAIL0`",null,null],[3,"XOSCFAIL1_W","","Write proxy for field `XOSCFAIL1`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"DPLL0LCKR_W","","Write proxy for field `DPLL0LCKR`",null,null],[3,"DPLL0LCKF_W","","Write proxy for field `DPLL0LCKF`",null,null],[3,"DPLL0LTO_W","","Write proxy for field `DPLL0LTO`",null,null],[3,"DPLL0LDRTO_W","","Write proxy for field `DPLL0LDRTO`",null,null],[3,"DPLL1LCKR_W","","Write proxy for field `DPLL1LCKR`",null,null],[3,"DPLL1LCKF_W","","Write proxy for field `DPLL1LCKF`",null,null],[3,"DPLL1LTO_W","","Write proxy for field `DPLL1LTO`",null,null],[3,"DPLL1LDRTO_W","","Write proxy for field `DPLL1LDRTO`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"XOSCRDY0_R","","Reader of field `XOSCRDY0`",null,null],[6,"XOSCRDY1_R","","Reader of field `XOSCRDY1`",null,null],[6,"XOSCFAIL0_R","","Reader of field `XOSCFAIL0`",null,null],[6,"XOSCFAIL1_R","","Reader of field `XOSCFAIL1`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"DPLL0LCKR_R","","Reader of field `DPLL0LCKR`",null,null],[6,"DPLL0LCKF_R","","Reader of field `DPLL0LCKF`",null,null],[6,"DPLL0LTO_R","","Reader of field `DPLL0LTO`",null,null],[6,"DPLL0LDRTO_R","","Reader of field `DPLL0LDRTO`",null,null],[6,"DPLL1LCKR_R","","Reader of field `DPLL1LCKR`",null,null],[6,"DPLL1LCKF_R","","Reader of field `DPLL1LCKF`",null,null],[6,"DPLL1LTO_R","","Reader of field `DPLL1LTO`",null,null],[6,"DPLL1LDRTO_R","","Reader of field `DPLL1LDRTO`",null,null],[11,"set_bit","","Sets the field bit",1129,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1129,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1129,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1130,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1130,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1130,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1131,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1131,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1131,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1132,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1132,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1132,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1133,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1133,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1133,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1134,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1134,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1134,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1135,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1135,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1135,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1136,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1136,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1136,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1138,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1139,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1139,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1139,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1140,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1140,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1140,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1141,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1142,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1142,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1142,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1143,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1143,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1144,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1145,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1145,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1145,[[],["w",6]]],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready Interrupt Enable",6,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",6,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",6,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",6,[[],["xoscfail1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",6,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",6,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",6,[[],["dpll0lckf_r",6]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",6,[[],["dpll0lto_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",6,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",6,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",6,[[],["dpll1lckf_r",6]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",6,[[],["dpll1lto_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",6,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::oscctrl::intenclr","Bit 0 - XOSC 0 Ready Interrupt Enable",1146,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",1146,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",1146,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",1146,[[],["xoscfail1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",1146,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",1146,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",1146,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",1146,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",1146,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",1146,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",1146,[[],["dpll0lckf_r",6]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",1146,[[],["dpll0lto_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",1146,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",1146,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",1146,[[],["dpll1lckf_r",6]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",1146,[[],["dpll1lto_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",1146,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready Interrupt Enable",7,[[],["xoscrdy0_w",3]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",7,[[],["xoscrdy1_w",3]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",7,[[],["xoscfail0_w",3]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",7,[[],["xoscfail1_w",3]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",7,[[],["dfllrcs_w",3]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",7,[[],["dpll0lckr_w",3]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",7,[[],["dpll0lckf_w",3]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",7,[[],["dpll0lto_w",3]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",7,[[],["dpll0ldrto_w",3]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",7,[[],["dpll1lckr_w",3]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",7,[[],["dpll1lckf_w",3]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",7,[[],["dpll1lto_w",3]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",7,[[],["dpll1ldrto_w",3]]],[11,"xoscrdy0","atsamd51g::oscctrl::intenclr","Bit 0 - XOSC 0 Ready Interrupt Enable",1147,[[],["xoscrdy0_w",3]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",1147,[[],["xoscrdy1_w",3]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",1147,[[],["xoscfail0_w",3]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",1147,[[],["xoscfail1_w",3]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",1147,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",1147,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",1147,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",1147,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",1147,[[],["dfllrcs_w",3]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",1147,[[],["dpll0lckr_w",3]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",1147,[[],["dpll0lckf_w",3]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",1147,[[],["dpll0lto_w",3]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",1147,[[],["dpll0ldrto_w",3]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",1147,[[],["dpll1lckr_w",3]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",1147,[[],["dpll1lckf_w",3]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",1147,[[],["dpll1lto_w",3]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",1147,[[],["dpll1ldrto_w",3]]],[0,"intenset","atsamd51g::oscctrl","Interrupt Enable Set",null,null],[3,"XOSCRDY0_W","atsamd51g::oscctrl::intenset","Write proxy for field `XOSCRDY0`",null,null],[3,"XOSCRDY1_W","","Write proxy for field `XOSCRDY1`",null,null],[3,"XOSCFAIL0_W","","Write proxy for field `XOSCFAIL0`",null,null],[3,"XOSCFAIL1_W","","Write proxy for field `XOSCFAIL1`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"DPLL0LCKR_W","","Write proxy for field `DPLL0LCKR`",null,null],[3,"DPLL0LCKF_W","","Write proxy for field `DPLL0LCKF`",null,null],[3,"DPLL0LTO_W","","Write proxy for field `DPLL0LTO`",null,null],[3,"DPLL0LDRTO_W","","Write proxy for field `DPLL0LDRTO`",null,null],[3,"DPLL1LCKR_W","","Write proxy for field `DPLL1LCKR`",null,null],[3,"DPLL1LCKF_W","","Write proxy for field `DPLL1LCKF`",null,null],[3,"DPLL1LTO_W","","Write proxy for field `DPLL1LTO`",null,null],[3,"DPLL1LDRTO_W","","Write proxy for field `DPLL1LDRTO`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"XOSCRDY0_R","","Reader of field `XOSCRDY0`",null,null],[6,"XOSCRDY1_R","","Reader of field `XOSCRDY1`",null,null],[6,"XOSCFAIL0_R","","Reader of field `XOSCFAIL0`",null,null],[6,"XOSCFAIL1_R","","Reader of field `XOSCFAIL1`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"DPLL0LCKR_R","","Reader of field `DPLL0LCKR`",null,null],[6,"DPLL0LCKF_R","","Reader of field `DPLL0LCKF`",null,null],[6,"DPLL0LTO_R","","Reader of field `DPLL0LTO`",null,null],[6,"DPLL0LDRTO_R","","Reader of field `DPLL0LDRTO`",null,null],[6,"DPLL1LCKR_R","","Reader of field `DPLL1LCKR`",null,null],[6,"DPLL1LCKF_R","","Reader of field `DPLL1LCKF`",null,null],[6,"DPLL1LTO_R","","Reader of field `DPLL1LTO`",null,null],[6,"DPLL1LDRTO_R","","Reader of field `DPLL1LDRTO`",null,null],[11,"set_bit","","Sets the field bit",1148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1149,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1150,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1150,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1150,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1151,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1151,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1151,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1152,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1152,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1152,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1156,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1157,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1157,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1157,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1158,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1158,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1158,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1159,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1159,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1159,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1160,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1160,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1160,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1161,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1161,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1161,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1162,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1162,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1162,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1163,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1163,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1163,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1164,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1164,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1164,[[],["w",6]]],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready Interrupt Enable",6,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",6,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",6,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",6,[[],["xoscfail1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",6,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",6,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",6,[[],["dpll0lckf_r",6]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",6,[[],["dpll0lto_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",6,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",6,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",6,[[],["dpll1lckf_r",6]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",6,[[],["dpll1lto_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",6,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::oscctrl::intenset","Bit 0 - XOSC 0 Ready Interrupt Enable",1165,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",1165,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",1165,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",1165,[[],["xoscfail1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",1165,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",1165,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",1165,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",1165,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",1165,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",1165,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",1165,[[],["dpll0lckf_r",6]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",1165,[[],["dpll0lto_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",1165,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",1165,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",1165,[[],["dpll1lckf_r",6]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",1165,[[],["dpll1lto_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",1165,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready Interrupt Enable",7,[[],["xoscrdy0_w",3]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",7,[[],["xoscrdy1_w",3]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",7,[[],["xoscfail0_w",3]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",7,[[],["xoscfail1_w",3]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",7,[[],["dfllrcs_w",3]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",7,[[],["dpll0lckr_w",3]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",7,[[],["dpll0lckf_w",3]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",7,[[],["dpll0lto_w",3]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",7,[[],["dpll0ldrto_w",3]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",7,[[],["dpll1lckr_w",3]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",7,[[],["dpll1lckf_w",3]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",7,[[],["dpll1lto_w",3]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",7,[[],["dpll1ldrto_w",3]]],[11,"xoscrdy0","atsamd51g::oscctrl::intenset","Bit 0 - XOSC 0 Ready Interrupt Enable",1166,[[],["xoscrdy0_w",3]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready Interrupt Enable",1166,[[],["xoscrdy1_w",3]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector Interrupt Enable",1166,[[],["xoscfail0_w",3]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector Interrupt Enable",1166,[[],["xoscfail1_w",3]]],[11,"dfllrdy","","Bit 8 - DFLL Ready Interrupt Enable",1166,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds Interrupt Enable",1166,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine Interrupt Enable",1166,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse Interrupt Enable",1166,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped Interrupt Enable",1166,[[],["dfllrcs_w",3]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise Interrupt Enable",1166,[[],["dpll0lckr_w",3]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall Interrupt Enable",1166,[[],["dpll0lckf_w",3]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout Interrupt Enable",1166,[[],["dpll0lto_w",3]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete…",1166,[[],["dpll0ldrto_w",3]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise Interrupt Enable",1166,[[],["dpll1lckr_w",3]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall Interrupt Enable",1166,[[],["dpll1lckf_w",3]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout Interrupt Enable",1166,[[],["dpll1lto_w",3]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete…",1166,[[],["dpll1ldrto_w",3]]],[0,"intflag","atsamd51g::oscctrl","Interrupt Flag Status and Clear",null,null],[3,"XOSCRDY0_W","atsamd51g::oscctrl::intflag","Write proxy for field `XOSCRDY0`",null,null],[3,"XOSCRDY1_W","","Write proxy for field `XOSCRDY1`",null,null],[3,"XOSCFAIL0_W","","Write proxy for field `XOSCFAIL0`",null,null],[3,"XOSCFAIL1_W","","Write proxy for field `XOSCFAIL1`",null,null],[3,"DFLLRDY_W","","Write proxy for field `DFLLRDY`",null,null],[3,"DFLLOOB_W","","Write proxy for field `DFLLOOB`",null,null],[3,"DFLLLCKF_W","","Write proxy for field `DFLLLCKF`",null,null],[3,"DFLLLCKC_W","","Write proxy for field `DFLLLCKC`",null,null],[3,"DFLLRCS_W","","Write proxy for field `DFLLRCS`",null,null],[3,"DPLL0LCKR_W","","Write proxy for field `DPLL0LCKR`",null,null],[3,"DPLL0LCKF_W","","Write proxy for field `DPLL0LCKF`",null,null],[3,"DPLL0LTO_W","","Write proxy for field `DPLL0LTO`",null,null],[3,"DPLL0LDRTO_W","","Write proxy for field `DPLL0LDRTO`",null,null],[3,"DPLL1LCKR_W","","Write proxy for field `DPLL1LCKR`",null,null],[3,"DPLL1LCKF_W","","Write proxy for field `DPLL1LCKF`",null,null],[3,"DPLL1LTO_W","","Write proxy for field `DPLL1LTO`",null,null],[3,"DPLL1LDRTO_W","","Write proxy for field `DPLL1LDRTO`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"XOSCRDY0_R","","Reader of field `XOSCRDY0`",null,null],[6,"XOSCRDY1_R","","Reader of field `XOSCRDY1`",null,null],[6,"XOSCFAIL0_R","","Reader of field `XOSCFAIL0`",null,null],[6,"XOSCFAIL1_R","","Reader of field `XOSCFAIL1`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"DPLL0LCKR_R","","Reader of field `DPLL0LCKR`",null,null],[6,"DPLL0LCKF_R","","Reader of field `DPLL0LCKF`",null,null],[6,"DPLL0LTO_R","","Reader of field `DPLL0LTO`",null,null],[6,"DPLL0LDRTO_R","","Reader of field `DPLL0LDRTO`",null,null],[6,"DPLL1LCKR_R","","Reader of field `DPLL1LCKR`",null,null],[6,"DPLL1LCKF_R","","Reader of field `DPLL1LCKF`",null,null],[6,"DPLL1LTO_R","","Reader of field `DPLL1LTO`",null,null],[6,"DPLL1LDRTO_R","","Reader of field `DPLL1LDRTO`",null,null],[11,"set_bit","","Sets the field bit",1167,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1167,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1167,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1168,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1168,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1168,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1169,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1169,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1169,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1170,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1170,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1170,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1171,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1171,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1171,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1172,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1172,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1172,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1173,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1173,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1173,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1174,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1174,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1174,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1175,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1175,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1175,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1176,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1176,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1176,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1177,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1177,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1177,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1178,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1178,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1178,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1179,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1179,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1179,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1180,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1180,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1180,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1181,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1181,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1183,[[],["w",6]]],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready",6,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready",6,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector",6,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector",6,[[],["xoscfail1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped",6,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise",6,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall",6,[[],["dpll0lckf_r",6]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout",6,[[],["dpll0lto_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete",6,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise",6,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall",6,[[],["dpll1lckf_r",6]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout",6,[[],["dpll1lto_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete",6,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::oscctrl::intflag","Bit 0 - XOSC 0 Ready",1184,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready",1184,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector",1184,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector",1184,[[],["xoscfail1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready",1184,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds",1184,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine",1184,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse",1184,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped",1184,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise",1184,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall",1184,[[],["dpll0lckf_r",6]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout",1184,[[],["dpll0lto_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete",1184,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise",1184,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall",1184,[[],["dpll1lckf_r",6]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout",1184,[[],["dpll1lto_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete",1184,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready",7,[[],["xoscrdy0_w",3]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready",7,[[],["xoscrdy1_w",3]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector",7,[[],["xoscfail0_w",3]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector",7,[[],["xoscfail1_w",3]]],[11,"dfllrdy","","Bit 8 - DFLL Ready",7,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds",7,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine",7,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse",7,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped",7,[[],["dfllrcs_w",3]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise",7,[[],["dpll0lckr_w",3]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall",7,[[],["dpll0lckf_w",3]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout",7,[[],["dpll0lto_w",3]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete",7,[[],["dpll0ldrto_w",3]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise",7,[[],["dpll1lckr_w",3]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall",7,[[],["dpll1lckf_w",3]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout",7,[[],["dpll1lto_w",3]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete",7,[[],["dpll1ldrto_w",3]]],[11,"xoscrdy0","atsamd51g::oscctrl::intflag","Bit 0 - XOSC 0 Ready",1185,[[],["xoscrdy0_w",3]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready",1185,[[],["xoscrdy1_w",3]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector",1185,[[],["xoscfail0_w",3]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector",1185,[[],["xoscfail1_w",3]]],[11,"dfllrdy","","Bit 8 - DFLL Ready",1185,[[],["dfllrdy_w",3]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds",1185,[[],["dflloob_w",3]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine",1185,[[],["dflllckf_w",3]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse",1185,[[],["dflllckc_w",3]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped",1185,[[],["dfllrcs_w",3]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise",1185,[[],["dpll0lckr_w",3]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall",1185,[[],["dpll0lckf_w",3]]],[11,"dpll0lto","","Bit 18 - DPLL0 Lock Timeout",1185,[[],["dpll0lto_w",3]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete",1185,[[],["dpll0ldrto_w",3]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise",1185,[[],["dpll1lckr_w",3]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall",1185,[[],["dpll1lckf_w",3]]],[11,"dpll1lto","","Bit 26 - DPLL1 Lock Timeout",1185,[[],["dpll1lto_w",3]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete",1185,[[],["dpll1ldrto_w",3]]],[0,"status","atsamd51g::oscctrl","Status",null,null],[6,"R","atsamd51g::oscctrl::status","Reader of register STATUS",null,null],[6,"XOSCRDY0_R","","Reader of field `XOSCRDY0`",null,null],[6,"XOSCRDY1_R","","Reader of field `XOSCRDY1`",null,null],[6,"XOSCFAIL0_R","","Reader of field `XOSCFAIL0`",null,null],[6,"XOSCFAIL1_R","","Reader of field `XOSCFAIL1`",null,null],[6,"XOSCCKSW0_R","","Reader of field `XOSCCKSW0`",null,null],[6,"XOSCCKSW1_R","","Reader of field `XOSCCKSW1`",null,null],[6,"DFLLRDY_R","","Reader of field `DFLLRDY`",null,null],[6,"DFLLOOB_R","","Reader of field `DFLLOOB`",null,null],[6,"DFLLLCKF_R","","Reader of field `DFLLLCKF`",null,null],[6,"DFLLLCKC_R","","Reader of field `DFLLLCKC`",null,null],[6,"DFLLRCS_R","","Reader of field `DFLLRCS`",null,null],[6,"DPLL0LCKR_R","","Reader of field `DPLL0LCKR`",null,null],[6,"DPLL0LCKF_R","","Reader of field `DPLL0LCKF`",null,null],[6,"DPLL0TO_R","","Reader of field `DPLL0TO`",null,null],[6,"DPLL0LDRTO_R","","Reader of field `DPLL0LDRTO`",null,null],[6,"DPLL1LCKR_R","","Reader of field `DPLL1LCKR`",null,null],[6,"DPLL1LCKF_R","","Reader of field `DPLL1LCKF`",null,null],[6,"DPLL1TO_R","","Reader of field `DPLL1TO`",null,null],[6,"DPLL1LDRTO_R","","Reader of field `DPLL1LDRTO`",null,null],[11,"xoscrdy0","atsamd51g::generic","Bit 0 - XOSC 0 Ready",6,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready",6,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector",6,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector",6,[[],["xoscfail1_r",6]]],[11,"xosccksw0","","Bit 4 - XOSC 0 Clock Switch",6,[[],["xosccksw0_r",6]]],[11,"xosccksw1","","Bit 5 - XOSC 1 Clock Switch",6,[[],["xosccksw1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready",6,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds",6,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine",6,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse",6,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped",6,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise",6,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall",6,[[],["dpll0lckf_r",6]]],[11,"dpll0to","","Bit 18 - DPLL0 Timeout",6,[[],["dpll0to_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete",6,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise",6,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall",6,[[],["dpll1lckf_r",6]]],[11,"dpll1to","","Bit 26 - DPLL1 Timeout",6,[[],["dpll1to_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete",6,[[],["dpll1ldrto_r",6]]],[11,"xoscrdy0","atsamd51g::oscctrl::status","Bit 0 - XOSC 0 Ready",1186,[[],["xoscrdy0_r",6]]],[11,"xoscrdy1","","Bit 1 - XOSC 1 Ready",1186,[[],["xoscrdy1_r",6]]],[11,"xoscfail0","","Bit 2 - XOSC 0 Clock Failure Detector",1186,[[],["xoscfail0_r",6]]],[11,"xoscfail1","","Bit 3 - XOSC 1 Clock Failure Detector",1186,[[],["xoscfail1_r",6]]],[11,"xosccksw0","","Bit 4 - XOSC 0 Clock Switch",1186,[[],["xosccksw0_r",6]]],[11,"xosccksw1","","Bit 5 - XOSC 1 Clock Switch",1186,[[],["xosccksw1_r",6]]],[11,"dfllrdy","","Bit 8 - DFLL Ready",1186,[[],["dfllrdy_r",6]]],[11,"dflloob","","Bit 9 - DFLL Out Of Bounds",1186,[[],["dflloob_r",6]]],[11,"dflllckf","","Bit 10 - DFLL Lock Fine",1186,[[],["dflllckf_r",6]]],[11,"dflllckc","","Bit 11 - DFLL Lock Coarse",1186,[[],["dflllckc_r",6]]],[11,"dfllrcs","","Bit 12 - DFLL Reference Clock Stopped",1186,[[],["dfllrcs_r",6]]],[11,"dpll0lckr","","Bit 16 - DPLL0 Lock Rise",1186,[[],["dpll0lckr_r",6]]],[11,"dpll0lckf","","Bit 17 - DPLL0 Lock Fall",1186,[[],["dpll0lckf_r",6]]],[11,"dpll0to","","Bit 18 - DPLL0 Timeout",1186,[[],["dpll0to_r",6]]],[11,"dpll0ldrto","","Bit 19 - DPLL0 Loop Divider Ratio Update Complete",1186,[[],["dpll0ldrto_r",6]]],[11,"dpll1lckr","","Bit 24 - DPLL1 Lock Rise",1186,[[],["dpll1lckr_r",6]]],[11,"dpll1lckf","","Bit 25 - DPLL1 Lock Fall",1186,[[],["dpll1lckf_r",6]]],[11,"dpll1to","","Bit 26 - DPLL1 Timeout",1186,[[],["dpll1to_r",6]]],[11,"dpll1ldrto","","Bit 27 - DPLL1 Loop Divider Ratio Update Complete",1186,[[],["dpll1ldrto_r",6]]],[0,"xoscctrl","atsamd51g::oscctrl","External Multipurpose Crystal Oscillator Control",null,null],[3,"ENABLE_W","atsamd51g::oscctrl::xoscctrl","Write proxy for field `ENABLE`",null,null],[3,"XTALEN_W","","Write proxy for field `XTALEN`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"LOWBUFGAIN_W","","Write proxy for field `LOWBUFGAIN`",null,null],[3,"IPTAT_W","","Write proxy for field `IPTAT`",null,null],[3,"IMULT_W","","Write proxy for field `IMULT`",null,null],[3,"ENALC_W","","Write proxy for field `ENALC`",null,null],[3,"CFDEN_W","","Write proxy for field `CFDEN`",null,null],[3,"SWBEN_W","","Write proxy for field `SWBEN`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[3,"CFDPRESC_W","","Write proxy for field `CFDPRESC`",null,null],[4,"STARTUP_A","","Start-Up Time",null,null],[13,"CYCLE1","","0: 31 us",1187,null],[13,"CYCLE2","","1: 61 us",1187,null],[13,"CYCLE4","","2: 122 us",1187,null],[13,"CYCLE8","","3: 244 us",1187,null],[13,"CYCLE16","","4: 488 us",1187,null],[13,"CYCLE32","","5: 977 us",1187,null],[13,"CYCLE64","","6: 1953 us",1187,null],[13,"CYCLE128","","7: 3906 us",1187,null],[13,"CYCLE256","","8: 7813 us",1187,null],[13,"CYCLE512","","9: 15625 us",1187,null],[13,"CYCLE1024","","10: 31250 us",1187,null],[13,"CYCLE2048","","11: 62500 us",1187,null],[13,"CYCLE4096","","12: 125000 us",1187,null],[13,"CYCLE8192","","13: 250000 us",1187,null],[13,"CYCLE16384","","14: 500000 us",1187,null],[13,"CYCLE32768","","15: 1000000 us",1187,null],[4,"CFDPRESC_A","","Clock Failure Detector Prescaler",null,null],[13,"DIV1","","0: 48 MHz",1188,null],[13,"DIV2","","1: 24 MHz",1188,null],[13,"DIV4","","2: 12 MHz",1188,null],[13,"DIV8","","3: 6 MHz",1188,null],[13,"DIV16","","4: 3 MHz",1188,null],[13,"DIV32","","5: 1.5 MHz",1188,null],[13,"DIV64","","6: 0.75 MHz",1188,null],[13,"DIV128","","7: 0.3125 MHz",1188,null],[6,"R","","Reader of register XOSCCTRL[%s]",null,null],[6,"W","","Writer for register XOSCCTRL[%s]",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"XTALEN_R","","Reader of field `XTALEN`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"LOWBUFGAIN_R","","Reader of field `LOWBUFGAIN`",null,null],[6,"IPTAT_R","","Reader of field `IPTAT`",null,null],[6,"IMULT_R","","Reader of field `IMULT`",null,null],[6,"ENALC_R","","Reader of field `ENALC`",null,null],[6,"CFDEN_R","","Reader of field `CFDEN`",null,null],[6,"SWBEN_R","","Reader of field `SWBEN`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[6,"CFDPRESC_R","","Reader of field `CFDPRESC`",null,null],[11,"set_bit","","Sets the field bit",1189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1191,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1192,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1192,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1192,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1193,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1193,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1193,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1194,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1195,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1196,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1196,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1196,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1197,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1197,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1197,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1198,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1198,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1198,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["startup_a",4]]],[11,"is_cycle1","","Checks if the value of the field is `CYCLE1`",6,[[]]],[11,"is_cycle2","","Checks if the value of the field is `CYCLE2`",6,[[]]],[11,"is_cycle4","","Checks if the value of the field is `CYCLE4`",6,[[]]],[11,"is_cycle8","","Checks if the value of the field is `CYCLE8`",6,[[]]],[11,"is_cycle16","","Checks if the value of the field is `CYCLE16`",6,[[]]],[11,"is_cycle32","","Checks if the value of the field is `CYCLE32`",6,[[]]],[11,"is_cycle64","","Checks if the value of the field is `CYCLE64`",6,[[]]],[11,"is_cycle128","","Checks if the value of the field is `CYCLE128`",6,[[]]],[11,"is_cycle256","","Checks if the value of the field is `CYCLE256`",6,[[]]],[11,"is_cycle512","","Checks if the value of the field is `CYCLE512`",6,[[]]],[11,"is_cycle1024","","Checks if the value of the field is `CYCLE1024`",6,[[]]],[11,"is_cycle2048","","Checks if the value of the field is `CYCLE2048`",6,[[]]],[11,"is_cycle4096","","Checks if the value of the field is `CYCLE4096`",6,[[]]],[11,"is_cycle8192","","Checks if the value of the field is `CYCLE8192`",6,[[]]],[11,"is_cycle16384","","Checks if the value of the field is `CYCLE16384`",6,[[]]],[11,"is_cycle32768","","Checks if the value of the field is `CYCLE32768`",6,[[]]],[11,"variant","atsamd51g::oscctrl::xoscctrl","Get enumerated values variant",1199,[[],["startup_a",4]]],[11,"is_cycle1","","Checks if the value of the field is `CYCLE1`",1199,[[]]],[11,"is_cycle2","","Checks if the value of the field is `CYCLE2`",1199,[[]]],[11,"is_cycle4","","Checks if the value of the field is `CYCLE4`",1199,[[]]],[11,"is_cycle8","","Checks if the value of the field is `CYCLE8`",1199,[[]]],[11,"is_cycle16","","Checks if the value of the field is `CYCLE16`",1199,[[]]],[11,"is_cycle32","","Checks if the value of the field is `CYCLE32`",1199,[[]]],[11,"is_cycle64","","Checks if the value of the field is `CYCLE64`",1199,[[]]],[11,"is_cycle128","","Checks if the value of the field is `CYCLE128`",1199,[[]]],[11,"is_cycle256","","Checks if the value of the field is `CYCLE256`",1199,[[]]],[11,"is_cycle512","","Checks if the value of the field is `CYCLE512`",1199,[[]]],[11,"is_cycle1024","","Checks if the value of the field is `CYCLE1024`",1199,[[]]],[11,"is_cycle2048","","Checks if the value of the field is `CYCLE2048`",1199,[[]]],[11,"is_cycle4096","","Checks if the value of the field is `CYCLE4096`",1199,[[]]],[11,"is_cycle8192","","Checks if the value of the field is `CYCLE8192`",1199,[[]]],[11,"is_cycle16384","","Checks if the value of the field is `CYCLE16384`",1199,[[]]],[11,"is_cycle32768","","Checks if the value of the field is `CYCLE32768`",1199,[[]]],[11,"variant","","Writes `variant` to the field",1200,[[["startup_a",4]],["w",6]]],[11,"cycle1","","31 us",1200,[[],["w",6]]],[11,"cycle2","","61 us",1200,[[],["w",6]]],[11,"cycle4","","122 us",1200,[[],["w",6]]],[11,"cycle8","","244 us",1200,[[],["w",6]]],[11,"cycle16","","488 us",1200,[[],["w",6]]],[11,"cycle32","","977 us",1200,[[],["w",6]]],[11,"cycle64","","1953 us",1200,[[],["w",6]]],[11,"cycle128","","3906 us",1200,[[],["w",6]]],[11,"cycle256","","7813 us",1200,[[],["w",6]]],[11,"cycle512","","15625 us",1200,[[],["w",6]]],[11,"cycle1024","","31250 us",1200,[[],["w",6]]],[11,"cycle2048","","62500 us",1200,[[],["w",6]]],[11,"cycle4096","","125000 us",1200,[[],["w",6]]],[11,"cycle8192","","250000 us",1200,[[],["w",6]]],[11,"cycle16384","","500000 us",1200,[[],["w",6]]],[11,"cycle32768","","1000000 us",1200,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1200,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cfdpresc_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"variant","atsamd51g::oscctrl::xoscctrl","Get enumerated values variant",1201,[[],[["variant",4],["cfdpresc_a",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1201,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1201,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1201,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1201,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1201,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1201,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1201,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1201,[[]]],[11,"variant","","Writes `variant` to the field",1202,[[["cfdpresc_a",4]],["w",6]]],[11,"div1","","48 MHz",1202,[[],["w",6]]],[11,"div2","","24 MHz",1202,[[],["w",6]]],[11,"div4","","12 MHz",1202,[[],["w",6]]],[11,"div8","","6 MHz",1202,[[],["w",6]]],[11,"div16","","3 MHz",1202,[[],["w",6]]],[11,"div32","","1.5 MHz",1202,[[],["w",6]]],[11,"div64","","0.75 MHz",1202,[[],["w",6]]],[11,"div128","","0.3125 MHz",1202,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1202,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",6,[[],["xtalen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"lowbufgain","","Bit 8 - Low Buffer Gain Enable",6,[[],["lowbufgain_r",6]]],[11,"iptat","","Bits 9:10 - Oscillator Current Reference",6,[[],["iptat_r",6]]],[11,"imult","","Bits 11:14 - Oscillator Current Multiplier",6,[[],["imult_r",6]]],[11,"enalc","","Bit 15 - Automatic Loop Control Enable",6,[[],["enalc_r",6]]],[11,"cfden","","Bit 16 - Clock Failure Detector Enable",6,[[],["cfden_r",6]]],[11,"swben","","Bit 17 - Xosc Clock Switch Enable",6,[[],["swben_r",6]]],[11,"startup","","Bits 20:23 - Start-Up Time",6,[[],["startup_r",6]]],[11,"cfdpresc","","Bits 24:27 - Clock Failure Detector Prescaler",6,[[],["cfdpresc_r",6]]],[11,"enable","atsamd51g::oscctrl::xoscctrl","Bit 1 - Oscillator Enable",1203,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1203,[[],["xtalen_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1203,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1203,[[],["ondemand_r",6]]],[11,"lowbufgain","","Bit 8 - Low Buffer Gain Enable",1203,[[],["lowbufgain_r",6]]],[11,"iptat","","Bits 9:10 - Oscillator Current Reference",1203,[[],["iptat_r",6]]],[11,"imult","","Bits 11:14 - Oscillator Current Multiplier",1203,[[],["imult_r",6]]],[11,"enalc","","Bit 15 - Automatic Loop Control Enable",1203,[[],["enalc_r",6]]],[11,"cfden","","Bit 16 - Clock Failure Detector Enable",1203,[[],["cfden_r",6]]],[11,"swben","","Bit 17 - Xosc Clock Switch Enable",1203,[[],["swben_r",6]]],[11,"startup","","Bits 20:23 - Start-Up Time",1203,[[],["startup_r",6]]],[11,"cfdpresc","","Bits 24:27 - Clock Failure Detector Prescaler",1203,[[],["cfdpresc_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",7,[[],["xtalen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"lowbufgain","","Bit 8 - Low Buffer Gain Enable",7,[[],["lowbufgain_w",3]]],[11,"iptat","","Bits 9:10 - Oscillator Current Reference",7,[[],["iptat_w",3]]],[11,"imult","","Bits 11:14 - Oscillator Current Multiplier",7,[[],["imult_w",3]]],[11,"enalc","","Bit 15 - Automatic Loop Control Enable",7,[[],["enalc_w",3]]],[11,"cfden","","Bit 16 - Clock Failure Detector Enable",7,[[],["cfden_w",3]]],[11,"swben","","Bit 17 - Xosc Clock Switch Enable",7,[[],["swben_w",3]]],[11,"startup","","Bits 20:23 - Start-Up Time",7,[[],["startup_w",3]]],[11,"cfdpresc","","Bits 24:27 - Clock Failure Detector Prescaler",7,[[],["cfdpresc_w",3]]],[11,"enable","atsamd51g::oscctrl::xoscctrl","Bit 1 - Oscillator Enable",1204,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1204,[[],["xtalen_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1204,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1204,[[],["ondemand_w",3]]],[11,"lowbufgain","","Bit 8 - Low Buffer Gain Enable",1204,[[],["lowbufgain_w",3]]],[11,"iptat","","Bits 9:10 - Oscillator Current Reference",1204,[[],["iptat_w",3]]],[11,"imult","","Bits 11:14 - Oscillator Current Multiplier",1204,[[],["imult_w",3]]],[11,"enalc","","Bit 15 - Automatic Loop Control Enable",1204,[[],["enalc_w",3]]],[11,"cfden","","Bit 16 - Clock Failure Detector Enable",1204,[[],["cfden_w",3]]],[11,"swben","","Bit 17 - Xosc Clock Switch Enable",1204,[[],["swben_w",3]]],[11,"startup","","Bits 20:23 - Start-Up Time",1204,[[],["startup_w",3]]],[11,"cfdpresc","","Bits 24:27 - Clock Failure Detector Prescaler",1204,[[],["cfdpresc_w",3]]],[0,"dfllctrla","atsamd51g::oscctrl","DFLL48M Control A",null,null],[3,"ENABLE_W","atsamd51g::oscctrl::dfllctrla","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[6,"R","","Reader of register DFLLCTRLA",null,null],[6,"W","","Writer for register DFLLCTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[11,"set_bit","","Sets the field bit",1205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1205,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1206,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1206,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1206,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1207,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1207,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1207,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - DFLL Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"enable","atsamd51g::oscctrl::dfllctrla","Bit 1 - DFLL Enable",1208,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1208,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1208,[[],["ondemand_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - DFLL Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"enable","atsamd51g::oscctrl::dfllctrla","Bit 1 - DFLL Enable",1209,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1209,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1209,[[],["ondemand_w",3]]],[0,"dfllctrlb","atsamd51g::oscctrl","DFLL48M Control B",null,null],[3,"MODE_W","atsamd51g::oscctrl::dfllctrlb","Write proxy for field `MODE`",null,null],[3,"STABLE_W","","Write proxy for field `STABLE`",null,null],[3,"LLAW_W","","Write proxy for field `LLAW`",null,null],[3,"USBCRM_W","","Write proxy for field `USBCRM`",null,null],[3,"CCDIS_W","","Write proxy for field `CCDIS`",null,null],[3,"QLDIS_W","","Write proxy for field `QLDIS`",null,null],[3,"BPLCKC_W","","Write proxy for field `BPLCKC`",null,null],[3,"WAITLOCK_W","","Write proxy for field `WAITLOCK`",null,null],[6,"R","","Reader of register DFLLCTRLB",null,null],[6,"W","","Writer for register DFLLCTRLB",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"STABLE_R","","Reader of field `STABLE`",null,null],[6,"LLAW_R","","Reader of field `LLAW`",null,null],[6,"USBCRM_R","","Reader of field `USBCRM`",null,null],[6,"CCDIS_R","","Reader of field `CCDIS`",null,null],[6,"QLDIS_R","","Reader of field `QLDIS`",null,null],[6,"BPLCKC_R","","Reader of field `BPLCKC`",null,null],[6,"WAITLOCK_R","","Reader of field `WAITLOCK`",null,null],[11,"set_bit","","Sets the field bit",1210,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1210,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1211,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1212,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1212,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1212,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1213,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1213,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1213,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1214,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1214,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1214,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1215,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1215,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1215,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1216,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1216,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1216,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1217,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1217,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1217,[[],["w",6]]],[11,"mode","atsamd51g::generic","Bit 0 - Operating Mode Selection",6,[[],["mode_r",6]]],[11,"stable","","Bit 1 - Stable DFLL Frequency",6,[[],["stable_r",6]]],[11,"llaw","","Bit 2 - Lose Lock After Wake",6,[[],["llaw_r",6]]],[11,"usbcrm","","Bit 3 - USB Clock Recovery Mode",6,[[],["usbcrm_r",6]]],[11,"ccdis","","Bit 4 - Chill Cycle Disable",6,[[],["ccdis_r",6]]],[11,"qldis","","Bit 5 - Quick Lock Disable",6,[[],["qldis_r",6]]],[11,"bplckc","","Bit 6 - Bypass Coarse Lock",6,[[],["bplckc_r",6]]],[11,"waitlock","","Bit 7 - Wait Lock",6,[[],["waitlock_r",6]]],[11,"mode","atsamd51g::oscctrl::dfllctrlb","Bit 0 - Operating Mode Selection",1218,[[],["mode_r",6]]],[11,"stable","","Bit 1 - Stable DFLL Frequency",1218,[[],["stable_r",6]]],[11,"llaw","","Bit 2 - Lose Lock After Wake",1218,[[],["llaw_r",6]]],[11,"usbcrm","","Bit 3 - USB Clock Recovery Mode",1218,[[],["usbcrm_r",6]]],[11,"ccdis","","Bit 4 - Chill Cycle Disable",1218,[[],["ccdis_r",6]]],[11,"qldis","","Bit 5 - Quick Lock Disable",1218,[[],["qldis_r",6]]],[11,"bplckc","","Bit 6 - Bypass Coarse Lock",1218,[[],["bplckc_r",6]]],[11,"waitlock","","Bit 7 - Wait Lock",1218,[[],["waitlock_r",6]]],[11,"mode","atsamd51g::generic","Bit 0 - Operating Mode Selection",7,[[],["mode_w",3]]],[11,"stable","","Bit 1 - Stable DFLL Frequency",7,[[],["stable_w",3]]],[11,"llaw","","Bit 2 - Lose Lock After Wake",7,[[],["llaw_w",3]]],[11,"usbcrm","","Bit 3 - USB Clock Recovery Mode",7,[[],["usbcrm_w",3]]],[11,"ccdis","","Bit 4 - Chill Cycle Disable",7,[[],["ccdis_w",3]]],[11,"qldis","","Bit 5 - Quick Lock Disable",7,[[],["qldis_w",3]]],[11,"bplckc","","Bit 6 - Bypass Coarse Lock",7,[[],["bplckc_w",3]]],[11,"waitlock","","Bit 7 - Wait Lock",7,[[],["waitlock_w",3]]],[11,"mode","atsamd51g::oscctrl::dfllctrlb","Bit 0 - Operating Mode Selection",1219,[[],["mode_w",3]]],[11,"stable","","Bit 1 - Stable DFLL Frequency",1219,[[],["stable_w",3]]],[11,"llaw","","Bit 2 - Lose Lock After Wake",1219,[[],["llaw_w",3]]],[11,"usbcrm","","Bit 3 - USB Clock Recovery Mode",1219,[[],["usbcrm_w",3]]],[11,"ccdis","","Bit 4 - Chill Cycle Disable",1219,[[],["ccdis_w",3]]],[11,"qldis","","Bit 5 - Quick Lock Disable",1219,[[],["qldis_w",3]]],[11,"bplckc","","Bit 6 - Bypass Coarse Lock",1219,[[],["bplckc_w",3]]],[11,"waitlock","","Bit 7 - Wait Lock",1219,[[],["waitlock_w",3]]],[0,"dfllval","atsamd51g::oscctrl","DFLL48M Value",null,null],[3,"FINE_W","atsamd51g::oscctrl::dfllval","Write proxy for field `FINE`",null,null],[3,"COARSE_W","","Write proxy for field `COARSE`",null,null],[3,"DIFF_W","","Write proxy for field `DIFF`",null,null],[6,"R","","Reader of register DFLLVAL",null,null],[6,"W","","Writer for register DFLLVAL",null,null],[6,"FINE_R","","Reader of field `FINE`",null,null],[6,"COARSE_R","","Reader of field `COARSE`",null,null],[6,"DIFF_R","","Reader of field `DIFF`",null,null],[11,"bits","","Writes raw bits to the field",1220,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1221,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1222,[[],["w",6]]],[11,"fine","atsamd51g::generic","Bits 0:7 - Fine Value",6,[[],["fine_r",6]]],[11,"coarse","","Bits 10:15 - Coarse Value",6,[[],["coarse_r",6]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",6,[[],["diff_r",6]]],[11,"fine","atsamd51g::oscctrl::dfllval","Bits 0:7 - Fine Value",1223,[[],["fine_r",6]]],[11,"coarse","","Bits 10:15 - Coarse Value",1223,[[],["coarse_r",6]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",1223,[[],["diff_r",6]]],[11,"fine","atsamd51g::generic","Bits 0:7 - Fine Value",7,[[],["fine_w",3]]],[11,"coarse","","Bits 10:15 - Coarse Value",7,[[],["coarse_w",3]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",7,[[],["diff_w",3]]],[11,"fine","atsamd51g::oscctrl::dfllval","Bits 0:7 - Fine Value",1224,[[],["fine_w",3]]],[11,"coarse","","Bits 10:15 - Coarse Value",1224,[[],["coarse_w",3]]],[11,"diff","","Bits 16:31 - Multiplication Ratio Difference",1224,[[],["diff_w",3]]],[0,"dfllmul","atsamd51g::oscctrl","DFLL48M Multiplier",null,null],[3,"MUL_W","atsamd51g::oscctrl::dfllmul","Write proxy for field `MUL`",null,null],[3,"FSTEP_W","","Write proxy for field `FSTEP`",null,null],[3,"CSTEP_W","","Write proxy for field `CSTEP`",null,null],[6,"R","","Reader of register DFLLMUL",null,null],[6,"W","","Writer for register DFLLMUL",null,null],[6,"MUL_R","","Reader of field `MUL`",null,null],[6,"FSTEP_R","","Reader of field `FSTEP`",null,null],[6,"CSTEP_R","","Reader of field `CSTEP`",null,null],[11,"bits","","Writes raw bits to the field",1225,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1226,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1227,[[],["w",6]]],[11,"mul","atsamd51g::generic","Bits 0:15 - DFLL Multiply Factor",6,[[],["mul_r",6]]],[11,"fstep","","Bits 16:23 - Fine Maximum Step",6,[[],["fstep_r",6]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",6,[[],["cstep_r",6]]],[11,"mul","atsamd51g::oscctrl::dfllmul","Bits 0:15 - DFLL Multiply Factor",1228,[[],["mul_r",6]]],[11,"fstep","","Bits 16:23 - Fine Maximum Step",1228,[[],["fstep_r",6]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",1228,[[],["cstep_r",6]]],[11,"mul","atsamd51g::generic","Bits 0:15 - DFLL Multiply Factor",7,[[],["mul_w",3]]],[11,"fstep","","Bits 16:23 - Fine Maximum Step",7,[[],["fstep_w",3]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",7,[[],["cstep_w",3]]],[11,"mul","atsamd51g::oscctrl::dfllmul","Bits 0:15 - DFLL Multiply Factor",1229,[[],["mul_w",3]]],[11,"fstep","","Bits 16:23 - Fine Maximum Step",1229,[[],["fstep_w",3]]],[11,"cstep","","Bits 26:31 - Coarse Maximum Step",1229,[[],["cstep_w",3]]],[0,"dfllsync","atsamd51g::oscctrl","DFLL48M Synchronization",null,null],[3,"ENABLE_W","atsamd51g::oscctrl::dfllsync","Write proxy for field `ENABLE`",null,null],[3,"DFLLCTRLB_W","","Write proxy for field `DFLLCTRLB`",null,null],[3,"DFLLVAL_W","","Write proxy for field `DFLLVAL`",null,null],[3,"DFLLMUL_W","","Write proxy for field `DFLLMUL`",null,null],[6,"R","","Reader of register DFLLSYNC",null,null],[6,"W","","Writer for register DFLLSYNC",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"DFLLCTRLB_R","","Reader of field `DFLLCTRLB`",null,null],[6,"DFLLVAL_R","","Reader of field `DFLLVAL`",null,null],[6,"DFLLMUL_R","","Reader of field `DFLLMUL`",null,null],[11,"set_bit","","Sets the field bit",1230,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1230,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1230,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1231,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1231,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1231,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1232,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1232,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1232,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1233,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1233,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1233,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - ENABLE Synchronization Busy",6,[[],["enable_r",6]]],[11,"dfllctrlb","","Bit 2 - DFLLCTRLB Synchronization Busy",6,[[],["dfllctrlb_r",6]]],[11,"dfllval","","Bit 3 - DFLLVAL Synchronization Busy",6,[[],["dfllval_r",6]]],[11,"dfllmul","","Bit 4 - DFLLMUL Synchronization Busy",6,[[],["dfllmul_r",6]]],[11,"enable","atsamd51g::oscctrl::dfllsync","Bit 1 - ENABLE Synchronization Busy",1234,[[],["enable_r",6]]],[11,"dfllctrlb","","Bit 2 - DFLLCTRLB Synchronization Busy",1234,[[],["dfllctrlb_r",6]]],[11,"dfllval","","Bit 3 - DFLLVAL Synchronization Busy",1234,[[],["dfllval_r",6]]],[11,"dfllmul","","Bit 4 - DFLLMUL Synchronization Busy",1234,[[],["dfllmul_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - ENABLE Synchronization Busy",7,[[],["enable_w",3]]],[11,"dfllctrlb","","Bit 2 - DFLLCTRLB Synchronization Busy",7,[[],["dfllctrlb_w",3]]],[11,"dfllval","","Bit 3 - DFLLVAL Synchronization Busy",7,[[],["dfllval_w",3]]],[11,"dfllmul","","Bit 4 - DFLLMUL Synchronization Busy",7,[[],["dfllmul_w",3]]],[11,"enable","atsamd51g::oscctrl::dfllsync","Bit 1 - ENABLE Synchronization Busy",1235,[[],["enable_w",3]]],[11,"dfllctrlb","","Bit 2 - DFLLCTRLB Synchronization Busy",1235,[[],["dfllctrlb_w",3]]],[11,"dfllval","","Bit 3 - DFLLVAL Synchronization Busy",1235,[[],["dfllval_w",3]]],[11,"dfllmul","","Bit 4 - DFLLMUL Synchronization Busy",1235,[[],["dfllmul_w",3]]],[6,"EVCTRL","atsamd51g::oscctrl","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"XOSCCTRL","","External Multipurpose Crystal Oscillator Control",null,null],[6,"DFLLCTRLA","","DFLL48M Control A",null,null],[6,"DFLLCTRLB","","DFLL48M Control B",null,null],[6,"DFLLVAL","","DFLL48M Value",null,null],[6,"DFLLMUL","","DFLL48M Multiplier",null,null],[6,"DFLLSYNC","","DFLL48M Synchronization",null,null],[0,"osc32kctrl","atsamd51g","32kHz Oscillators Control",null,null],[3,"RegisterBlock","atsamd51g::osc32kctrl","Register block",null,null],[12,"intenclr","","0x00 - Interrupt Enable Clear",1236,null],[12,"intenset","","0x04 - Interrupt Enable Set",1236,null],[12,"intflag","","0x08 - Interrupt Flag Status and Clear",1236,null],[12,"status","","0x0c - Power and Clocks Status",1236,null],[12,"rtcctrl","","0x10 - RTC Clock Selection",1236,null],[12,"xosc32k","","0x14 - 32kHz External Crystal Oscillator (XOSC32K) Control",1236,null],[12,"cfdctrl","","0x16 - Clock Failure Detector Control",1236,null],[12,"evctrl","","0x17 - Event Control",1236,null],[12,"osculp32k","","0x1c - 32kHz Ultra Low Power Internal Oscillator…",1236,null],[0,"intenclr","","Interrupt Enable Clear",null,null],[3,"XOSC32KRDY_W","atsamd51g::osc32kctrl::intenclr","Write proxy for field `XOSC32KRDY`",null,null],[3,"XOSC32KFAIL_W","","Write proxy for field `XOSC32KFAIL`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"XOSC32KFAIL_R","","Reader of field `XOSC32KFAIL`",null,null],[11,"set_bit","","Sets the field bit",1237,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1237,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1237,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1238,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1238,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1238,[[],["w",6]]],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready Interrupt Enable",6,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",6,[[],["xosc32kfail_r",6]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::intenclr","Bit 0 - XOSC32K Ready Interrupt Enable",1239,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",1239,[[],["xosc32kfail_r",6]]],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready Interrupt Enable",7,[[],["xosc32krdy_w",3]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",7,[[],["xosc32kfail_w",3]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::intenclr","Bit 0 - XOSC32K Ready Interrupt Enable",1240,[[],["xosc32krdy_w",3]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",1240,[[],["xosc32kfail_w",3]]],[0,"intenset","atsamd51g::osc32kctrl","Interrupt Enable Set",null,null],[3,"XOSC32KRDY_W","atsamd51g::osc32kctrl::intenset","Write proxy for field `XOSC32KRDY`",null,null],[3,"XOSC32KFAIL_W","","Write proxy for field `XOSC32KFAIL`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"XOSC32KFAIL_R","","Reader of field `XOSC32KFAIL`",null,null],[11,"set_bit","","Sets the field bit",1241,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1241,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1241,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1242,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1242,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1242,[[],["w",6]]],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready Interrupt Enable",6,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",6,[[],["xosc32kfail_r",6]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::intenset","Bit 0 - XOSC32K Ready Interrupt Enable",1243,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",1243,[[],["xosc32kfail_r",6]]],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready Interrupt Enable",7,[[],["xosc32krdy_w",3]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",7,[[],["xosc32kfail_w",3]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::intenset","Bit 0 - XOSC32K Ready Interrupt Enable",1244,[[],["xosc32krdy_w",3]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector Interrupt Enable",1244,[[],["xosc32kfail_w",3]]],[0,"intflag","atsamd51g::osc32kctrl","Interrupt Flag Status and Clear",null,null],[3,"XOSC32KRDY_W","atsamd51g::osc32kctrl::intflag","Write proxy for field `XOSC32KRDY`",null,null],[3,"XOSC32KFAIL_W","","Write proxy for field `XOSC32KFAIL`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"XOSC32KFAIL_R","","Reader of field `XOSC32KFAIL`",null,null],[11,"set_bit","","Sets the field bit",1245,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1245,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1245,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1246,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1246,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1246,[[],["w",6]]],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready",6,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector",6,[[],["xosc32kfail_r",6]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::intflag","Bit 0 - XOSC32K Ready",1247,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector",1247,[[],["xosc32kfail_r",6]]],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready",7,[[],["xosc32krdy_w",3]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector",7,[[],["xosc32kfail_w",3]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::intflag","Bit 0 - XOSC32K Ready",1248,[[],["xosc32krdy_w",3]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector",1248,[[],["xosc32kfail_w",3]]],[0,"status","atsamd51g::osc32kctrl","Power and Clocks Status",null,null],[6,"R","atsamd51g::osc32kctrl::status","Reader of register STATUS",null,null],[6,"XOSC32KRDY_R","","Reader of field `XOSC32KRDY`",null,null],[6,"XOSC32KFAIL_R","","Reader of field `XOSC32KFAIL`",null,null],[6,"XOSC32KSW_R","","Reader of field `XOSC32KSW`",null,null],[11,"xosc32krdy","atsamd51g::generic","Bit 0 - XOSC32K Ready",6,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector",6,[[],["xosc32kfail_r",6]]],[11,"xosc32ksw","","Bit 3 - XOSC32K Clock switch",6,[[],["xosc32ksw_r",6]]],[11,"xosc32krdy","atsamd51g::osc32kctrl::status","Bit 0 - XOSC32K Ready",1249,[[],["xosc32krdy_r",6]]],[11,"xosc32kfail","","Bit 2 - XOSC32K Clock Failure Detector",1249,[[],["xosc32kfail_r",6]]],[11,"xosc32ksw","","Bit 3 - XOSC32K Clock switch",1249,[[],["xosc32ksw_r",6]]],[0,"rtcctrl","atsamd51g::osc32kctrl","RTC Clock Selection",null,null],[3,"RTCSEL_W","atsamd51g::osc32kctrl::rtcctrl","Write proxy for field `RTCSEL`",null,null],[4,"RTCSEL_A","","RTC Clock Selection",null,null],[13,"ULP1K","","0: 1.024kHz from 32kHz internal ULP oscillator",1250,null],[13,"ULP32K","","1: 32.768kHz from 32kHz internal ULP oscillator",1250,null],[13,"XOSC1K","","4: 1.024kHz from 32.768kHz internal oscillator",1250,null],[13,"XOSC32K","","5: 32.768kHz from 32.768kHz external crystal oscillator",1250,null],[6,"R","","Reader of register RTCCTRL",null,null],[6,"W","","Writer for register RTCCTRL",null,null],[6,"RTCSEL_R","","Reader of field `RTCSEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["rtcsel_a",4]]]],[11,"is_ulp1k","","Checks if the value of the field is `ULP1K`",6,[[]]],[11,"is_ulp32k","","Checks if the value of the field is `ULP32K`",6,[[]]],[11,"is_xosc1k","","Checks if the value of the field is `XOSC1K`",6,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",6,[[]]],[11,"variant","atsamd51g::osc32kctrl::rtcctrl","Get enumerated values variant",1251,[[],[["variant",4],["rtcsel_a",4]]]],[11,"is_ulp1k","","Checks if the value of the field is `ULP1K`",1251,[[]]],[11,"is_ulp32k","","Checks if the value of the field is `ULP32K`",1251,[[]]],[11,"is_xosc1k","","Checks if the value of the field is `XOSC1K`",1251,[[]]],[11,"is_xosc32k","","Checks if the value of the field is `XOSC32K`",1251,[[]]],[11,"variant","","Writes `variant` to the field",1252,[[["rtcsel_a",4]],["w",6]]],[11,"ulp1k","","1.024kHz from 32kHz internal ULP oscillator",1252,[[],["w",6]]],[11,"ulp32k","","32.768kHz from 32kHz internal ULP oscillator",1252,[[],["w",6]]],[11,"xosc1k","","1.024kHz from 32.768kHz internal oscillator",1252,[[],["w",6]]],[11,"xosc32k","","32.768kHz from 32.768kHz external crystal oscillator",1252,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1252,[[],["w",6]]],[11,"rtcsel","atsamd51g::generic","Bits 0:2 - RTC Clock Selection",6,[[],["rtcsel_r",6]]],[11,"rtcsel","atsamd51g::osc32kctrl::rtcctrl","Bits 0:2 - RTC Clock Selection",1253,[[],["rtcsel_r",6]]],[11,"rtcsel","atsamd51g::generic","Bits 0:2 - RTC Clock Selection",7,[[],["rtcsel_w",3]]],[11,"rtcsel","atsamd51g::osc32kctrl::rtcctrl","Bits 0:2 - RTC Clock Selection",1254,[[],["rtcsel_w",3]]],[0,"xosc32k","atsamd51g::osc32kctrl","32kHz External Crystal Oscillator (XOSC32K) Control",null,null],[3,"ENABLE_W","atsamd51g::osc32kctrl::xosc32k","Write proxy for field `ENABLE`",null,null],[3,"XTALEN_W","","Write proxy for field `XTALEN`",null,null],[3,"EN32K_W","","Write proxy for field `EN32K`",null,null],[3,"EN1K_W","","Write proxy for field `EN1K`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"STARTUP_W","","Write proxy for field `STARTUP`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[3,"CGM_W","","Write proxy for field `CGM`",null,null],[4,"STARTUP_A","","Oscillator Start-Up Time",null,null],[13,"CYCLE2048","","0: 62.6 ms",1255,null],[13,"CYCLE4096","","1: 125 ms",1255,null],[13,"CYCLE16384","","2: 500 ms",1255,null],[13,"CYCLE32768","","3: 1000 ms",1255,null],[13,"CYCLE65536","","4: 2000 ms",1255,null],[13,"CYCLE131072","","5: 4000 ms",1255,null],[13,"CYCLE262144","","6: 8000 ms",1255,null],[4,"CGM_A","","Control Gain Mode",null,null],[13,"XT","","1: Standard mode",1256,null],[13,"HS","","2: High Speed mode",1256,null],[6,"R","","Reader of register XOSC32K",null,null],[6,"W","","Writer for register XOSC32K",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"XTALEN_R","","Reader of field `XTALEN`",null,null],[6,"EN32K_R","","Reader of field `EN32K`",null,null],[6,"EN1K_R","","Reader of field `EN1K`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"STARTUP_R","","Reader of field `STARTUP`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[6,"CGM_R","","Reader of field `CGM`",null,null],[11,"set_bit","","Sets the field bit",1257,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1257,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1257,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1258,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1258,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1258,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1259,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1259,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1259,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1260,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1260,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1260,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1261,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1261,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1261,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1262,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1262,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1262,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["startup_a",4]]]],[11,"is_cycle2048","","Checks if the value of the field is `CYCLE2048`",6,[[]]],[11,"is_cycle4096","","Checks if the value of the field is `CYCLE4096`",6,[[]]],[11,"is_cycle16384","","Checks if the value of the field is `CYCLE16384`",6,[[]]],[11,"is_cycle32768","","Checks if the value of the field is `CYCLE32768`",6,[[]]],[11,"is_cycle65536","","Checks if the value of the field is `CYCLE65536`",6,[[]]],[11,"is_cycle131072","","Checks if the value of the field is `CYCLE131072`",6,[[]]],[11,"is_cycle262144","","Checks if the value of the field is `CYCLE262144`",6,[[]]],[11,"variant","atsamd51g::osc32kctrl::xosc32k","Get enumerated values variant",1263,[[],[["variant",4],["startup_a",4]]]],[11,"is_cycle2048","","Checks if the value of the field is `CYCLE2048`",1263,[[]]],[11,"is_cycle4096","","Checks if the value of the field is `CYCLE4096`",1263,[[]]],[11,"is_cycle16384","","Checks if the value of the field is `CYCLE16384`",1263,[[]]],[11,"is_cycle32768","","Checks if the value of the field is `CYCLE32768`",1263,[[]]],[11,"is_cycle65536","","Checks if the value of the field is `CYCLE65536`",1263,[[]]],[11,"is_cycle131072","","Checks if the value of the field is `CYCLE131072`",1263,[[]]],[11,"is_cycle262144","","Checks if the value of the field is `CYCLE262144`",1263,[[]]],[11,"variant","","Writes `variant` to the field",1264,[[["startup_a",4]],["w",6]]],[11,"cycle2048","","62.6 ms",1264,[[],["w",6]]],[11,"cycle4096","","125 ms",1264,[[],["w",6]]],[11,"cycle16384","","500 ms",1264,[[],["w",6]]],[11,"cycle32768","","1000 ms",1264,[[],["w",6]]],[11,"cycle65536","","2000 ms",1264,[[],["w",6]]],[11,"cycle131072","","4000 ms",1264,[[],["w",6]]],[11,"cycle262144","","8000 ms",1264,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1264,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1265,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1265,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1265,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cgm_a",4],["variant",4]]]],[11,"is_xt","","Checks if the value of the field is `XT`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"variant","atsamd51g::osc32kctrl::xosc32k","Get enumerated values variant",1266,[[],[["cgm_a",4],["variant",4]]]],[11,"is_xt","","Checks if the value of the field is `XT`",1266,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",1266,[[]]],[11,"variant","","Writes `variant` to the field",1267,[[["cgm_a",4]],["w",6]]],[11,"xt","","Standard mode",1267,[[],["w",6]]],[11,"hs","","High Speed mode",1267,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1267,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Oscillator Enable",6,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",6,[[],["xtalen_r",6]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",6,[[],["en32k_r",6]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",6,[[],["en1k_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",6,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",6,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"cgm","","Bits 13:14 - Control Gain Mode",6,[[],["cgm_r",6]]],[11,"enable","atsamd51g::osc32kctrl::xosc32k","Bit 1 - Oscillator Enable",1268,[[],["enable_r",6]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1268,[[],["xtalen_r",6]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",1268,[[],["en32k_r",6]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",1268,[[],["en1k_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1268,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Control",1268,[[],["ondemand_r",6]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1268,[[],["startup_r",6]]],[11,"wrtlock","","Bit 12 - Write Lock",1268,[[],["wrtlock_r",6]]],[11,"cgm","","Bits 13:14 - Control Gain Mode",1268,[[],["cgm_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Oscillator Enable",7,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",7,[[],["xtalen_w",3]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",7,[[],["en32k_w",3]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",7,[[],["en1k_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",7,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",7,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"cgm","","Bits 13:14 - Control Gain Mode",7,[[],["cgm_w",3]]],[11,"enable","atsamd51g::osc32kctrl::xosc32k","Bit 1 - Oscillator Enable",1269,[[],["enable_w",3]]],[11,"xtalen","","Bit 2 - Crystal Oscillator Enable",1269,[[],["xtalen_w",3]]],[11,"en32k","","Bit 3 - 32kHz Output Enable",1269,[[],["en32k_w",3]]],[11,"en1k","","Bit 4 - 1kHz Output Enable",1269,[[],["en1k_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1269,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Control",1269,[[],["ondemand_w",3]]],[11,"startup","","Bits 8:10 - Oscillator Start-Up Time",1269,[[],["startup_w",3]]],[11,"wrtlock","","Bit 12 - Write Lock",1269,[[],["wrtlock_w",3]]],[11,"cgm","","Bits 13:14 - Control Gain Mode",1269,[[],["cgm_w",3]]],[0,"cfdctrl","atsamd51g::osc32kctrl","Clock Failure Detector Control",null,null],[3,"CFDEN_W","atsamd51g::osc32kctrl::cfdctrl","Write proxy for field `CFDEN`",null,null],[3,"SWBACK_W","","Write proxy for field `SWBACK`",null,null],[3,"CFDPRESC_W","","Write proxy for field `CFDPRESC`",null,null],[6,"R","","Reader of register CFDCTRL",null,null],[6,"W","","Writer for register CFDCTRL",null,null],[6,"CFDEN_R","","Reader of field `CFDEN`",null,null],[6,"SWBACK_R","","Reader of field `SWBACK`",null,null],[6,"CFDPRESC_R","","Reader of field `CFDPRESC`",null,null],[11,"set_bit","","Sets the field bit",1270,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1270,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1270,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1271,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1271,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1271,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1272,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1272,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1272,[[],["w",6]]],[11,"cfden","atsamd51g::generic","Bit 0 - Clock Failure Detector Enable",6,[[],["cfden_r",6]]],[11,"swback","","Bit 1 - Clock Switch Back",6,[[],["swback_r",6]]],[11,"cfdpresc","","Bit 2 - Clock Failure Detector Prescaler",6,[[],["cfdpresc_r",6]]],[11,"cfden","atsamd51g::osc32kctrl::cfdctrl","Bit 0 - Clock Failure Detector Enable",1273,[[],["cfden_r",6]]],[11,"swback","","Bit 1 - Clock Switch Back",1273,[[],["swback_r",6]]],[11,"cfdpresc","","Bit 2 - Clock Failure Detector Prescaler",1273,[[],["cfdpresc_r",6]]],[11,"cfden","atsamd51g::generic","Bit 0 - Clock Failure Detector Enable",7,[[],["cfden_w",3]]],[11,"swback","","Bit 1 - Clock Switch Back",7,[[],["swback_w",3]]],[11,"cfdpresc","","Bit 2 - Clock Failure Detector Prescaler",7,[[],["cfdpresc_w",3]]],[11,"cfden","atsamd51g::osc32kctrl::cfdctrl","Bit 0 - Clock Failure Detector Enable",1274,[[],["cfden_w",3]]],[11,"swback","","Bit 1 - Clock Switch Back",1274,[[],["swback_w",3]]],[11,"cfdpresc","","Bit 2 - Clock Failure Detector Prescaler",1274,[[],["cfdpresc_w",3]]],[0,"evctrl","atsamd51g::osc32kctrl","Event Control",null,null],[3,"CFDEO_W","atsamd51g::osc32kctrl::evctrl","Write proxy for field `CFDEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"CFDEO_R","","Reader of field `CFDEO`",null,null],[11,"set_bit","","Sets the field bit",1275,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1275,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1275,[[],["w",6]]],[11,"cfdeo","atsamd51g::generic","Bit 0 - Clock Failure Detector Event Output Enable",6,[[],["cfdeo_r",6]]],[11,"cfdeo","atsamd51g::osc32kctrl::evctrl","Bit 0 - Clock Failure Detector Event Output Enable",1276,[[],["cfdeo_r",6]]],[11,"cfdeo","atsamd51g::generic","Bit 0 - Clock Failure Detector Event Output Enable",7,[[],["cfdeo_w",3]]],[11,"cfdeo","atsamd51g::osc32kctrl::evctrl","Bit 0 - Clock Failure Detector Event Output Enable",1277,[[],["cfdeo_w",3]]],[0,"osculp32k","atsamd51g::osc32kctrl","32kHz Ultra Low Power Internal Oscillator (OSCULP32K)…",null,null],[3,"EN32K_W","atsamd51g::osc32kctrl::osculp32k","Write proxy for field `EN32K`",null,null],[3,"EN1K_W","","Write proxy for field `EN1K`",null,null],[3,"CALIB_W","","Write proxy for field `CALIB`",null,null],[3,"WRTLOCK_W","","Write proxy for field `WRTLOCK`",null,null],[6,"R","","Reader of register OSCULP32K",null,null],[6,"W","","Writer for register OSCULP32K",null,null],[6,"EN32K_R","","Reader of field `EN32K`",null,null],[6,"EN1K_R","","Reader of field `EN1K`",null,null],[6,"CALIB_R","","Reader of field `CALIB`",null,null],[6,"WRTLOCK_R","","Reader of field `WRTLOCK`",null,null],[11,"set_bit","","Sets the field bit",1278,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1278,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1278,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1279,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1279,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1279,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1280,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1281,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1281,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1281,[[],["w",6]]],[11,"en32k","atsamd51g::generic","Bit 1 - Enable Out 32k",6,[[],["en32k_r",6]]],[11,"en1k","","Bit 2 - Enable Out 1k",6,[[],["en1k_r",6]]],[11,"calib","","Bits 8:13 - Oscillator Calibration",6,[[],["calib_r",6]]],[11,"wrtlock","","Bit 15 - Write Lock",6,[[],["wrtlock_r",6]]],[11,"en32k","atsamd51g::osc32kctrl::osculp32k","Bit 1 - Enable Out 32k",1282,[[],["en32k_r",6]]],[11,"en1k","","Bit 2 - Enable Out 1k",1282,[[],["en1k_r",6]]],[11,"calib","","Bits 8:13 - Oscillator Calibration",1282,[[],["calib_r",6]]],[11,"wrtlock","","Bit 15 - Write Lock",1282,[[],["wrtlock_r",6]]],[11,"en32k","atsamd51g::generic","Bit 1 - Enable Out 32k",7,[[],["en32k_w",3]]],[11,"en1k","","Bit 2 - Enable Out 1k",7,[[],["en1k_w",3]]],[11,"calib","","Bits 8:13 - Oscillator Calibration",7,[[],["calib_w",3]]],[11,"wrtlock","","Bit 15 - Write Lock",7,[[],["wrtlock_w",3]]],[11,"en32k","atsamd51g::osc32kctrl::osculp32k","Bit 1 - Enable Out 32k",1283,[[],["en32k_w",3]]],[11,"en1k","","Bit 2 - Enable Out 1k",1283,[[],["en1k_w",3]]],[11,"calib","","Bits 8:13 - Oscillator Calibration",1283,[[],["calib_w",3]]],[11,"wrtlock","","Bit 15 - Write Lock",1283,[[],["wrtlock_w",3]]],[6,"INTENCLR","atsamd51g::osc32kctrl","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Power and Clocks Status",null,null],[6,"RTCCTRL","","RTC Clock Selection",null,null],[6,"XOSC32K","","32kHz External Crystal Oscillator (XOSC32K) Control",null,null],[6,"CFDCTRL","","Clock Failure Detector Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"OSCULP32K","","32kHz Ultra Low Power Internal Oscillator (OSCULP32K)…",null,null],[0,"pac","atsamd51g","Peripheral Access Controller",null,null],[3,"RegisterBlock","atsamd51g::pac","Register block",null,null],[12,"wrctrl","","0x00 - Write control",1284,null],[12,"evctrl","","0x04 - Event control",1284,null],[12,"intenclr","","0x08 - Interrupt enable clear",1284,null],[12,"intenset","","0x09 - Interrupt enable set",1284,null],[12,"intflagahb","","0x10 - Bridge interrupt flag status",1284,null],[12,"intflaga","","0x14 - Peripheral interrupt flag status - Bridge A",1284,null],[12,"intflagb","","0x18 - Peripheral interrupt flag status - Bridge B",1284,null],[12,"intflagc","","0x1c - Peripheral interrupt flag status - Bridge C",1284,null],[12,"intflagd","","0x20 - Peripheral interrupt flag status - Bridge D",1284,null],[12,"statusa","","0x34 - Peripheral write protection status - Bridge A",1284,null],[12,"statusb","","0x38 - Peripheral write protection status - Bridge B",1284,null],[12,"statusc","","0x3c - Peripheral write protection status - Bridge C",1284,null],[12,"statusd","","0x40 - Peripheral write protection status - Bridge D",1284,null],[0,"wrctrl","","Write control",null,null],[3,"PERID_W","atsamd51g::pac::wrctrl","Write proxy for field `PERID`",null,null],[3,"KEY_W","","Write proxy for field `KEY`",null,null],[4,"KEY_A","","Peripheral access control key",null,null],[13,"OFF","","0: No action",1285,null],[13,"CLR","","1: Clear protection",1285,null],[13,"SET","","2: Set protection",1285,null],[13,"SETLCK","","3: Set and lock protection",1285,null],[6,"R","","Reader of register WRCTRL",null,null],[6,"W","","Writer for register WRCTRL",null,null],[6,"PERID_R","","Reader of field `PERID`",null,null],[6,"KEY_R","","Reader of field `KEY`",null,null],[11,"bits","","Writes raw bits to the field",1286,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["key_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_clr","","Checks if the value of the field is `CLR`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_setlck","","Checks if the value of the field is `SETLCK`",6,[[]]],[11,"variant","atsamd51g::pac::wrctrl","Get enumerated values variant",1287,[[],[["key_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1287,[[]]],[11,"is_clr","","Checks if the value of the field is `CLR`",1287,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",1287,[[]]],[11,"is_setlck","","Checks if the value of the field is `SETLCK`",1287,[[]]],[11,"variant","","Writes `variant` to the field",1288,[[["key_a",4]],["w",6]]],[11,"off","","No action",1288,[[],["w",6]]],[11,"clr","","Clear protection",1288,[[],["w",6]]],[11,"set","","Set protection",1288,[[],["w",6]]],[11,"setlck","","Set and lock protection",1288,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1288,[[],["w",6]]],[11,"perid","atsamd51g::generic","Bits 0:15 - Peripheral identifier",6,[[],["perid_r",6]]],[11,"key","","Bits 16:23 - Peripheral access control key",6,[[],["key_r",6]]],[11,"perid","atsamd51g::pac::wrctrl","Bits 0:15 - Peripheral identifier",1289,[[],["perid_r",6]]],[11,"key","","Bits 16:23 - Peripheral access control key",1289,[[],["key_r",6]]],[11,"perid","atsamd51g::generic","Bits 0:15 - Peripheral identifier",7,[[],["perid_w",3]]],[11,"key","","Bits 16:23 - Peripheral access control key",7,[[],["key_w",3]]],[11,"perid","atsamd51g::pac::wrctrl","Bits 0:15 - Peripheral identifier",1290,[[],["perid_w",3]]],[11,"key","","Bits 16:23 - Peripheral access control key",1290,[[],["key_w",3]]],[0,"evctrl","atsamd51g::pac","Event control",null,null],[3,"ERREO_W","atsamd51g::pac::evctrl","Write proxy for field `ERREO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"ERREO_R","","Reader of field `ERREO`",null,null],[11,"set_bit","","Sets the field bit",1291,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1291,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1291,[[],["w",6]]],[11,"erreo","atsamd51g::generic","Bit 0 - Peripheral acess error event output",6,[[],["erreo_r",6]]],[11,"erreo","atsamd51g::pac::evctrl","Bit 0 - Peripheral acess error event output",1292,[[],["erreo_r",6]]],[11,"erreo","atsamd51g::generic","Bit 0 - Peripheral acess error event output",7,[[],["erreo_w",3]]],[11,"erreo","atsamd51g::pac::evctrl","Bit 0 - Peripheral acess error event output",1293,[[],["erreo_w",3]]],[0,"intenclr","atsamd51g::pac","Interrupt enable clear",null,null],[3,"ERR_W","atsamd51g::pac::intenclr","Write proxy for field `ERR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[11,"set_bit","","Sets the field bit",1294,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1294,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1294,[[],["w",6]]],[11,"err","atsamd51g::generic","Bit 0 - Peripheral access error interrupt disable",6,[[],["err_r",6]]],[11,"err","atsamd51g::pac::intenclr","Bit 0 - Peripheral access error interrupt disable",1295,[[],["err_r",6]]],[11,"err","atsamd51g::generic","Bit 0 - Peripheral access error interrupt disable",7,[[],["err_w",3]]],[11,"err","atsamd51g::pac::intenclr","Bit 0 - Peripheral access error interrupt disable",1296,[[],["err_w",3]]],[0,"intenset","atsamd51g::pac","Interrupt enable set",null,null],[3,"ERR_W","atsamd51g::pac::intenset","Write proxy for field `ERR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[11,"set_bit","","Sets the field bit",1297,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1297,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1297,[[],["w",6]]],[11,"err","atsamd51g::generic","Bit 0 - Peripheral access error interrupt enable",6,[[],["err_r",6]]],[11,"err","atsamd51g::pac::intenset","Bit 0 - Peripheral access error interrupt enable",1298,[[],["err_r",6]]],[11,"err","atsamd51g::generic","Bit 0 - Peripheral access error interrupt enable",7,[[],["err_w",3]]],[11,"err","atsamd51g::pac::intenset","Bit 0 - Peripheral access error interrupt enable",1299,[[],["err_w",3]]],[0,"intflagahb","atsamd51g::pac","Bridge interrupt flag status",null,null],[3,"FLASH__W","atsamd51g::pac::intflagahb","Write proxy for field `FLASH_`",null,null],[3,"FLASH_ALT__W","","Write proxy for field `FLASH_ALT_`",null,null],[3,"SEEPROM__W","","Write proxy for field `SEEPROM_`",null,null],[3,"RAMCM4S__W","","Write proxy for field `RAMCM4S_`",null,null],[3,"RAMPPPDSU__W","","Write proxy for field `RAMPPPDSU_`",null,null],[3,"RAMDMAWR__W","","Write proxy for field `RAMDMAWR_`",null,null],[3,"RAMDMACICM__W","","Write proxy for field `RAMDMACICM_`",null,null],[3,"HPB0__W","","Write proxy for field `HPB0_`",null,null],[3,"HPB1__W","","Write proxy for field `HPB1_`",null,null],[3,"HPB2__W","","Write proxy for field `HPB2_`",null,null],[3,"HPB3__W","","Write proxy for field `HPB3_`",null,null],[3,"PUKCC__W","","Write proxy for field `PUKCC_`",null,null],[3,"SDHC0__W","","Write proxy for field `SDHC0_`",null,null],[3,"QSPI__W","","Write proxy for field `QSPI_`",null,null],[3,"BKUPRAM__W","","Write proxy for field `BKUPRAM_`",null,null],[6,"R","","Reader of register INTFLAGAHB",null,null],[6,"W","","Writer for register INTFLAGAHB",null,null],[6,"FLASH__R","","Reader of field `FLASH_`",null,null],[6,"FLASH_ALT__R","","Reader of field `FLASH_ALT_`",null,null],[6,"SEEPROM__R","","Reader of field `SEEPROM_`",null,null],[6,"RAMCM4S__R","","Reader of field `RAMCM4S_`",null,null],[6,"RAMPPPDSU__R","","Reader of field `RAMPPPDSU_`",null,null],[6,"RAMDMAWR__R","","Reader of field `RAMDMAWR_`",null,null],[6,"RAMDMACICM__R","","Reader of field `RAMDMACICM_`",null,null],[6,"HPB0__R","","Reader of field `HPB0_`",null,null],[6,"HPB1__R","","Reader of field `HPB1_`",null,null],[6,"HPB2__R","","Reader of field `HPB2_`",null,null],[6,"HPB3__R","","Reader of field `HPB3_`",null,null],[6,"PUKCC__R","","Reader of field `PUKCC_`",null,null],[6,"SDHC0__R","","Reader of field `SDHC0_`",null,null],[6,"QSPI__R","","Reader of field `QSPI_`",null,null],[6,"BKUPRAM__R","","Reader of field `BKUPRAM_`",null,null],[11,"set_bit","","Sets the field bit",1300,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1300,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1300,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1301,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1301,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1301,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1302,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1302,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1302,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1303,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1303,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1303,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1304,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1304,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1304,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1305,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1305,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1305,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1306,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1306,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1306,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1307,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1308,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1308,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1308,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1310,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1310,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1310,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1311,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1311,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1311,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1312,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1312,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1312,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1313,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1313,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1313,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1314,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1314,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1314,[[],["w",6]]],[11,"flash_","atsamd51g::generic","Bit 0 - FLASH",6,[[],["flash__r",6]]],[11,"flash_alt_","","Bit 1 - FLASH_ALT",6,[[],["flash_alt__r",6]]],[11,"seeprom_","","Bit 2 - SEEPROM",6,[[],["seeprom__r",6]]],[11,"ramcm4s_","","Bit 3 - RAMCM4S",6,[[],["ramcm4s__r",6]]],[11,"rampppdsu_","","Bit 4 - RAMPPPDSU",6,[[],["rampppdsu__r",6]]],[11,"ramdmawr_","","Bit 5 - RAMDMAWR",6,[[],["ramdmawr__r",6]]],[11,"ramdmacicm_","","Bit 6 - RAMDMACICM",6,[[],["ramdmacicm__r",6]]],[11,"hpb0_","","Bit 7 - HPB0",6,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 8 - HPB1",6,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 9 - HPB2",6,[[],["hpb2__r",6]]],[11,"hpb3_","","Bit 10 - HPB3",6,[[],["hpb3__r",6]]],[11,"pukcc_","","Bit 11 - PUKCC",6,[[],["pukcc__r",6]]],[11,"sdhc0_","","Bit 12 - SDHC0",6,[[],["sdhc0__r",6]]],[11,"qspi_","","Bit 14 - QSPI",6,[[],["qspi__r",6]]],[11,"bkupram_","","Bit 15 - BKUPRAM",6,[[],["bkupram__r",6]]],[11,"flash_","atsamd51g::pac::intflagahb","Bit 0 - FLASH",1315,[[],["flash__r",6]]],[11,"flash_alt_","","Bit 1 - FLASH_ALT",1315,[[],["flash_alt__r",6]]],[11,"seeprom_","","Bit 2 - SEEPROM",1315,[[],["seeprom__r",6]]],[11,"ramcm4s_","","Bit 3 - RAMCM4S",1315,[[],["ramcm4s__r",6]]],[11,"rampppdsu_","","Bit 4 - RAMPPPDSU",1315,[[],["rampppdsu__r",6]]],[11,"ramdmawr_","","Bit 5 - RAMDMAWR",1315,[[],["ramdmawr__r",6]]],[11,"ramdmacicm_","","Bit 6 - RAMDMACICM",1315,[[],["ramdmacicm__r",6]]],[11,"hpb0_","","Bit 7 - HPB0",1315,[[],["hpb0__r",6]]],[11,"hpb1_","","Bit 8 - HPB1",1315,[[],["hpb1__r",6]]],[11,"hpb2_","","Bit 9 - HPB2",1315,[[],["hpb2__r",6]]],[11,"hpb3_","","Bit 10 - HPB3",1315,[[],["hpb3__r",6]]],[11,"pukcc_","","Bit 11 - PUKCC",1315,[[],["pukcc__r",6]]],[11,"sdhc0_","","Bit 12 - SDHC0",1315,[[],["sdhc0__r",6]]],[11,"qspi_","","Bit 14 - QSPI",1315,[[],["qspi__r",6]]],[11,"bkupram_","","Bit 15 - BKUPRAM",1315,[[],["bkupram__r",6]]],[11,"flash_","atsamd51g::generic","Bit 0 - FLASH",7,[[],["flash__w",3]]],[11,"flash_alt_","","Bit 1 - FLASH_ALT",7,[[],["flash_alt__w",3]]],[11,"seeprom_","","Bit 2 - SEEPROM",7,[[],["seeprom__w",3]]],[11,"ramcm4s_","","Bit 3 - RAMCM4S",7,[[],["ramcm4s__w",3]]],[11,"rampppdsu_","","Bit 4 - RAMPPPDSU",7,[[],["rampppdsu__w",3]]],[11,"ramdmawr_","","Bit 5 - RAMDMAWR",7,[[],["ramdmawr__w",3]]],[11,"ramdmacicm_","","Bit 6 - RAMDMACICM",7,[[],["ramdmacicm__w",3]]],[11,"hpb0_","","Bit 7 - HPB0",7,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 8 - HPB1",7,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 9 - HPB2",7,[[],["hpb2__w",3]]],[11,"hpb3_","","Bit 10 - HPB3",7,[[],["hpb3__w",3]]],[11,"pukcc_","","Bit 11 - PUKCC",7,[[],["pukcc__w",3]]],[11,"sdhc0_","","Bit 12 - SDHC0",7,[[],["sdhc0__w",3]]],[11,"qspi_","","Bit 14 - QSPI",7,[[],["qspi__w",3]]],[11,"bkupram_","","Bit 15 - BKUPRAM",7,[[],["bkupram__w",3]]],[11,"flash_","atsamd51g::pac::intflagahb","Bit 0 - FLASH",1316,[[],["flash__w",3]]],[11,"flash_alt_","","Bit 1 - FLASH_ALT",1316,[[],["flash_alt__w",3]]],[11,"seeprom_","","Bit 2 - SEEPROM",1316,[[],["seeprom__w",3]]],[11,"ramcm4s_","","Bit 3 - RAMCM4S",1316,[[],["ramcm4s__w",3]]],[11,"rampppdsu_","","Bit 4 - RAMPPPDSU",1316,[[],["rampppdsu__w",3]]],[11,"ramdmawr_","","Bit 5 - RAMDMAWR",1316,[[],["ramdmawr__w",3]]],[11,"ramdmacicm_","","Bit 6 - RAMDMACICM",1316,[[],["ramdmacicm__w",3]]],[11,"hpb0_","","Bit 7 - HPB0",1316,[[],["hpb0__w",3]]],[11,"hpb1_","","Bit 8 - HPB1",1316,[[],["hpb1__w",3]]],[11,"hpb2_","","Bit 9 - HPB2",1316,[[],["hpb2__w",3]]],[11,"hpb3_","","Bit 10 - HPB3",1316,[[],["hpb3__w",3]]],[11,"pukcc_","","Bit 11 - PUKCC",1316,[[],["pukcc__w",3]]],[11,"sdhc0_","","Bit 12 - SDHC0",1316,[[],["sdhc0__w",3]]],[11,"qspi_","","Bit 14 - QSPI",1316,[[],["qspi__w",3]]],[11,"bkupram_","","Bit 15 - BKUPRAM",1316,[[],["bkupram__w",3]]],[0,"intflaga","atsamd51g::pac","Peripheral interrupt flag status - Bridge A",null,null],[3,"PAC__W","atsamd51g::pac::intflaga","Write proxy for field `PAC_`",null,null],[3,"PM__W","","Write proxy for field `PM_`",null,null],[3,"MCLK__W","","Write proxy for field `MCLK_`",null,null],[3,"RSTC__W","","Write proxy for field `RSTC_`",null,null],[3,"OSCCTRL__W","","Write proxy for field `OSCCTRL_`",null,null],[3,"OSC32KCTRL__W","","Write proxy for field `OSC32KCTRL_`",null,null],[3,"SUPC__W","","Write proxy for field `SUPC_`",null,null],[3,"GCLK__W","","Write proxy for field `GCLK_`",null,null],[3,"WDT__W","","Write proxy for field `WDT_`",null,null],[3,"RTC__W","","Write proxy for field `RTC_`",null,null],[3,"EIC__W","","Write proxy for field `EIC_`",null,null],[3,"FREQM__W","","Write proxy for field `FREQM_`",null,null],[3,"SERCOM0__W","","Write proxy for field `SERCOM0_`",null,null],[3,"SERCOM1__W","","Write proxy for field `SERCOM1_`",null,null],[3,"TC0__W","","Write proxy for field `TC0_`",null,null],[3,"TC1__W","","Write proxy for field `TC1_`",null,null],[6,"R","","Reader of register INTFLAGA",null,null],[6,"W","","Writer for register INTFLAGA",null,null],[6,"PAC__R","","Reader of field `PAC_`",null,null],[6,"PM__R","","Reader of field `PM_`",null,null],[6,"MCLK__R","","Reader of field `MCLK_`",null,null],[6,"RSTC__R","","Reader of field `RSTC_`",null,null],[6,"OSCCTRL__R","","Reader of field `OSCCTRL_`",null,null],[6,"OSC32KCTRL__R","","Reader of field `OSC32KCTRL_`",null,null],[6,"SUPC__R","","Reader of field `SUPC_`",null,null],[6,"GCLK__R","","Reader of field `GCLK_`",null,null],[6,"WDT__R","","Reader of field `WDT_`",null,null],[6,"RTC__R","","Reader of field `RTC_`",null,null],[6,"EIC__R","","Reader of field `EIC_`",null,null],[6,"FREQM__R","","Reader of field `FREQM_`",null,null],[6,"SERCOM0__R","","Reader of field `SERCOM0_`",null,null],[6,"SERCOM1__R","","Reader of field `SERCOM1_`",null,null],[6,"TC0__R","","Reader of field `TC0_`",null,null],[6,"TC1__R","","Reader of field `TC1_`",null,null],[11,"set_bit","","Sets the field bit",1317,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1317,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1317,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1318,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1318,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1318,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1319,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1319,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1319,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1320,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1320,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1321,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1321,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1321,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1322,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1322,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1322,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1323,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1323,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1323,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1324,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1324,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1324,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1325,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1325,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1325,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1326,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1326,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1326,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1327,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1327,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1327,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1328,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1328,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1328,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1329,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1329,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1329,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1330,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1330,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1330,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1331,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1331,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1331,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1332,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1332,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1332,[[],["w",6]]],[11,"pac_","atsamd51g::generic","Bit 0 - PAC",6,[[],["pac__r",6]]],[11,"pm_","","Bit 1 - PM",6,[[],["pm__r",6]]],[11,"mclk_","","Bit 2 - MCLK",6,[[],["mclk__r",6]]],[11,"rstc_","","Bit 3 - RSTC",6,[[],["rstc__r",6]]],[11,"oscctrl_","","Bit 4 - OSCCTRL",6,[[],["oscctrl__r",6]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL",6,[[],["osc32kctrl__r",6]]],[11,"supc_","","Bit 6 - SUPC",6,[[],["supc__r",6]]],[11,"gclk_","","Bit 7 - GCLK",6,[[],["gclk__r",6]]],[11,"wdt_","","Bit 8 - WDT",6,[[],["wdt__r",6]]],[11,"rtc_","","Bit 9 - RTC",6,[[],["rtc__r",6]]],[11,"eic_","","Bit 10 - EIC",6,[[],["eic__r",6]]],[11,"freqm_","","Bit 11 - FREQM",6,[[],["freqm__r",6]]],[11,"sercom0_","","Bit 12 - SERCOM0",6,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 13 - SERCOM1",6,[[],["sercom1__r",6]]],[11,"tc0_","","Bit 14 - TC0",6,[[],["tc0__r",6]]],[11,"tc1_","","Bit 15 - TC1",6,[[],["tc1__r",6]]],[11,"pac_","atsamd51g::pac::intflaga","Bit 0 - PAC",1333,[[],["pac__r",6]]],[11,"pm_","","Bit 1 - PM",1333,[[],["pm__r",6]]],[11,"mclk_","","Bit 2 - MCLK",1333,[[],["mclk__r",6]]],[11,"rstc_","","Bit 3 - RSTC",1333,[[],["rstc__r",6]]],[11,"oscctrl_","","Bit 4 - OSCCTRL",1333,[[],["oscctrl__r",6]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL",1333,[[],["osc32kctrl__r",6]]],[11,"supc_","","Bit 6 - SUPC",1333,[[],["supc__r",6]]],[11,"gclk_","","Bit 7 - GCLK",1333,[[],["gclk__r",6]]],[11,"wdt_","","Bit 8 - WDT",1333,[[],["wdt__r",6]]],[11,"rtc_","","Bit 9 - RTC",1333,[[],["rtc__r",6]]],[11,"eic_","","Bit 10 - EIC",1333,[[],["eic__r",6]]],[11,"freqm_","","Bit 11 - FREQM",1333,[[],["freqm__r",6]]],[11,"sercom0_","","Bit 12 - SERCOM0",1333,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 13 - SERCOM1",1333,[[],["sercom1__r",6]]],[11,"tc0_","","Bit 14 - TC0",1333,[[],["tc0__r",6]]],[11,"tc1_","","Bit 15 - TC1",1333,[[],["tc1__r",6]]],[11,"pac_","atsamd51g::generic","Bit 0 - PAC",7,[[],["pac__w",3]]],[11,"pm_","","Bit 1 - PM",7,[[],["pm__w",3]]],[11,"mclk_","","Bit 2 - MCLK",7,[[],["mclk__w",3]]],[11,"rstc_","","Bit 3 - RSTC",7,[[],["rstc__w",3]]],[11,"oscctrl_","","Bit 4 - OSCCTRL",7,[[],["oscctrl__w",3]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL",7,[[],["osc32kctrl__w",3]]],[11,"supc_","","Bit 6 - SUPC",7,[[],["supc__w",3]]],[11,"gclk_","","Bit 7 - GCLK",7,[[],["gclk__w",3]]],[11,"wdt_","","Bit 8 - WDT",7,[[],["wdt__w",3]]],[11,"rtc_","","Bit 9 - RTC",7,[[],["rtc__w",3]]],[11,"eic_","","Bit 10 - EIC",7,[[],["eic__w",3]]],[11,"freqm_","","Bit 11 - FREQM",7,[[],["freqm__w",3]]],[11,"sercom0_","","Bit 12 - SERCOM0",7,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 13 - SERCOM1",7,[[],["sercom1__w",3]]],[11,"tc0_","","Bit 14 - TC0",7,[[],["tc0__w",3]]],[11,"tc1_","","Bit 15 - TC1",7,[[],["tc1__w",3]]],[11,"pac_","atsamd51g::pac::intflaga","Bit 0 - PAC",1334,[[],["pac__w",3]]],[11,"pm_","","Bit 1 - PM",1334,[[],["pm__w",3]]],[11,"mclk_","","Bit 2 - MCLK",1334,[[],["mclk__w",3]]],[11,"rstc_","","Bit 3 - RSTC",1334,[[],["rstc__w",3]]],[11,"oscctrl_","","Bit 4 - OSCCTRL",1334,[[],["oscctrl__w",3]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL",1334,[[],["osc32kctrl__w",3]]],[11,"supc_","","Bit 6 - SUPC",1334,[[],["supc__w",3]]],[11,"gclk_","","Bit 7 - GCLK",1334,[[],["gclk__w",3]]],[11,"wdt_","","Bit 8 - WDT",1334,[[],["wdt__w",3]]],[11,"rtc_","","Bit 9 - RTC",1334,[[],["rtc__w",3]]],[11,"eic_","","Bit 10 - EIC",1334,[[],["eic__w",3]]],[11,"freqm_","","Bit 11 - FREQM",1334,[[],["freqm__w",3]]],[11,"sercom0_","","Bit 12 - SERCOM0",1334,[[],["sercom0__w",3]]],[11,"sercom1_","","Bit 13 - SERCOM1",1334,[[],["sercom1__w",3]]],[11,"tc0_","","Bit 14 - TC0",1334,[[],["tc0__w",3]]],[11,"tc1_","","Bit 15 - TC1",1334,[[],["tc1__w",3]]],[0,"intflagb","atsamd51g::pac","Peripheral interrupt flag status - Bridge B",null,null],[3,"USB__W","atsamd51g::pac::intflagb","Write proxy for field `USB_`",null,null],[3,"DSU__W","","Write proxy for field `DSU_`",null,null],[3,"NVMCTRL__W","","Write proxy for field `NVMCTRL_`",null,null],[3,"CMCC__W","","Write proxy for field `CMCC_`",null,null],[3,"PORT__W","","Write proxy for field `PORT_`",null,null],[3,"DMAC__W","","Write proxy for field `DMAC_`",null,null],[3,"HMATRIX__W","","Write proxy for field `HMATRIX_`",null,null],[3,"EVSYS__W","","Write proxy for field `EVSYS_`",null,null],[3,"SERCOM2__W","","Write proxy for field `SERCOM2_`",null,null],[3,"SERCOM3__W","","Write proxy for field `SERCOM3_`",null,null],[3,"TCC0__W","","Write proxy for field `TCC0_`",null,null],[3,"TCC1__W","","Write proxy for field `TCC1_`",null,null],[3,"TC2__W","","Write proxy for field `TC2_`",null,null],[3,"TC3__W","","Write proxy for field `TC3_`",null,null],[3,"RAMECC__W","","Write proxy for field `RAMECC_`",null,null],[6,"R","","Reader of register INTFLAGB",null,null],[6,"W","","Writer for register INTFLAGB",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"CMCC__R","","Reader of field `CMCC_`",null,null],[6,"PORT__R","","Reader of field `PORT_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"HMATRIX__R","","Reader of field `HMATRIX_`",null,null],[6,"EVSYS__R","","Reader of field `EVSYS_`",null,null],[6,"SERCOM2__R","","Reader of field `SERCOM2_`",null,null],[6,"SERCOM3__R","","Reader of field `SERCOM3_`",null,null],[6,"TCC0__R","","Reader of field `TCC0_`",null,null],[6,"TCC1__R","","Reader of field `TCC1_`",null,null],[6,"TC2__R","","Reader of field `TC2_`",null,null],[6,"TC3__R","","Reader of field `TC3_`",null,null],[6,"RAMECC__R","","Reader of field `RAMECC_`",null,null],[11,"set_bit","","Sets the field bit",1335,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1335,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1335,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1336,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1337,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1337,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1337,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1338,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1339,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1339,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1339,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1340,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1340,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1340,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1341,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1341,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1341,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1342,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1342,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1342,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1343,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1343,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1343,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1344,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1344,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1344,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1345,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1345,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1345,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1346,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1346,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1346,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1347,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1347,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1347,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1348,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1348,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1348,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1349,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1349,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1349,[[],["w",6]]],[11,"usb_","atsamd51g::generic","Bit 0 - USB",6,[[],["usb__r",6]]],[11,"dsu_","","Bit 1 - DSU",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL",6,[[],["nvmctrl__r",6]]],[11,"cmcc_","","Bit 3 - CMCC",6,[[],["cmcc__r",6]]],[11,"port_","","Bit 4 - PORT",6,[[],["port__r",6]]],[11,"dmac_","","Bit 5 - DMAC",6,[[],["dmac__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX",6,[[],["hmatrix__r",6]]],[11,"evsys_","","Bit 7 - EVSYS",6,[[],["evsys__r",6]]],[11,"sercom2_","","Bit 9 - SERCOM2",6,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 10 - SERCOM3",6,[[],["sercom3__r",6]]],[11,"tcc0_","","Bit 11 - TCC0",6,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 12 - TCC1",6,[[],["tcc1__r",6]]],[11,"tc2_","","Bit 13 - TC2",6,[[],["tc2__r",6]]],[11,"tc3_","","Bit 14 - TC3",6,[[],["tc3__r",6]]],[11,"ramecc_","","Bit 16 - RAMECC",6,[[],["ramecc__r",6]]],[11,"usb_","atsamd51g::pac::intflagb","Bit 0 - USB",1350,[[],["usb__r",6]]],[11,"dsu_","","Bit 1 - DSU",1350,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL",1350,[[],["nvmctrl__r",6]]],[11,"cmcc_","","Bit 3 - CMCC",1350,[[],["cmcc__r",6]]],[11,"port_","","Bit 4 - PORT",1350,[[],["port__r",6]]],[11,"dmac_","","Bit 5 - DMAC",1350,[[],["dmac__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX",1350,[[],["hmatrix__r",6]]],[11,"evsys_","","Bit 7 - EVSYS",1350,[[],["evsys__r",6]]],[11,"sercom2_","","Bit 9 - SERCOM2",1350,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 10 - SERCOM3",1350,[[],["sercom3__r",6]]],[11,"tcc0_","","Bit 11 - TCC0",1350,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 12 - TCC1",1350,[[],["tcc1__r",6]]],[11,"tc2_","","Bit 13 - TC2",1350,[[],["tc2__r",6]]],[11,"tc3_","","Bit 14 - TC3",1350,[[],["tc3__r",6]]],[11,"ramecc_","","Bit 16 - RAMECC",1350,[[],["ramecc__r",6]]],[11,"usb_","atsamd51g::generic","Bit 0 - USB",7,[[],["usb__w",3]]],[11,"dsu_","","Bit 1 - DSU",7,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL",7,[[],["nvmctrl__w",3]]],[11,"cmcc_","","Bit 3 - CMCC",7,[[],["cmcc__w",3]]],[11,"port_","","Bit 4 - PORT",7,[[],["port__w",3]]],[11,"dmac_","","Bit 5 - DMAC",7,[[],["dmac__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX",7,[[],["hmatrix__w",3]]],[11,"evsys_","","Bit 7 - EVSYS",7,[[],["evsys__w",3]]],[11,"sercom2_","","Bit 9 - SERCOM2",7,[[],["sercom2__w",3]]],[11,"sercom3_","","Bit 10 - SERCOM3",7,[[],["sercom3__w",3]]],[11,"tcc0_","","Bit 11 - TCC0",7,[[],["tcc0__w",3]]],[11,"tcc1_","","Bit 12 - TCC1",7,[[],["tcc1__w",3]]],[11,"tc2_","","Bit 13 - TC2",7,[[],["tc2__w",3]]],[11,"tc3_","","Bit 14 - TC3",7,[[],["tc3__w",3]]],[11,"ramecc_","","Bit 16 - RAMECC",7,[[],["ramecc__w",3]]],[11,"usb_","atsamd51g::pac::intflagb","Bit 0 - USB",1351,[[],["usb__w",3]]],[11,"dsu_","","Bit 1 - DSU",1351,[[],["dsu__w",3]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL",1351,[[],["nvmctrl__w",3]]],[11,"cmcc_","","Bit 3 - CMCC",1351,[[],["cmcc__w",3]]],[11,"port_","","Bit 4 - PORT",1351,[[],["port__w",3]]],[11,"dmac_","","Bit 5 - DMAC",1351,[[],["dmac__w",3]]],[11,"hmatrix_","","Bit 6 - HMATRIX",1351,[[],["hmatrix__w",3]]],[11,"evsys_","","Bit 7 - EVSYS",1351,[[],["evsys__w",3]]],[11,"sercom2_","","Bit 9 - SERCOM2",1351,[[],["sercom2__w",3]]],[11,"sercom3_","","Bit 10 - SERCOM3",1351,[[],["sercom3__w",3]]],[11,"tcc0_","","Bit 11 - TCC0",1351,[[],["tcc0__w",3]]],[11,"tcc1_","","Bit 12 - TCC1",1351,[[],["tcc1__w",3]]],[11,"tc2_","","Bit 13 - TC2",1351,[[],["tc2__w",3]]],[11,"tc3_","","Bit 14 - TC3",1351,[[],["tc3__w",3]]],[11,"ramecc_","","Bit 16 - RAMECC",1351,[[],["ramecc__w",3]]],[0,"intflagc","atsamd51g::pac","Peripheral interrupt flag status - Bridge C",null,null],[3,"TCC2__W","atsamd51g::pac::intflagc","Write proxy for field `TCC2_`",null,null],[3,"PDEC__W","","Write proxy for field `PDEC_`",null,null],[3,"AC__W","","Write proxy for field `AC_`",null,null],[3,"AES__W","","Write proxy for field `AES_`",null,null],[3,"TRNG__W","","Write proxy for field `TRNG_`",null,null],[3,"ICM__W","","Write proxy for field `ICM_`",null,null],[3,"PUKCC__W","","Write proxy for field `PUKCC_`",null,null],[3,"QSPI__W","","Write proxy for field `QSPI_`",null,null],[3,"CCL__W","","Write proxy for field `CCL_`",null,null],[6,"R","","Reader of register INTFLAGC",null,null],[6,"W","","Writer for register INTFLAGC",null,null],[6,"TCC2__R","","Reader of field `TCC2_`",null,null],[6,"PDEC__R","","Reader of field `PDEC_`",null,null],[6,"AC__R","","Reader of field `AC_`",null,null],[6,"AES__R","","Reader of field `AES_`",null,null],[6,"TRNG__R","","Reader of field `TRNG_`",null,null],[6,"ICM__R","","Reader of field `ICM_`",null,null],[6,"PUKCC__R","","Reader of field `PUKCC_`",null,null],[6,"QSPI__R","","Reader of field `QSPI_`",null,null],[6,"CCL__R","","Reader of field `CCL_`",null,null],[11,"set_bit","","Sets the field bit",1352,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1352,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1352,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1353,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1353,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1353,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1354,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1354,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1354,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1355,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1355,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1355,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1356,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1356,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1356,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1358,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1358,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1358,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1359,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1359,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1359,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1360,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1360,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1360,[[],["w",6]]],[11,"tcc2_","atsamd51g::generic","Bit 3 - TCC2",6,[[],["tcc2__r",6]]],[11,"pdec_","","Bit 7 - PDEC",6,[[],["pdec__r",6]]],[11,"ac_","","Bit 8 - AC",6,[[],["ac__r",6]]],[11,"aes_","","Bit 9 - AES",6,[[],["aes__r",6]]],[11,"trng_","","Bit 10 - TRNG",6,[[],["trng__r",6]]],[11,"icm_","","Bit 11 - ICM",6,[[],["icm__r",6]]],[11,"pukcc_","","Bit 12 - PUKCC",6,[[],["pukcc__r",6]]],[11,"qspi_","","Bit 13 - QSPI",6,[[],["qspi__r",6]]],[11,"ccl_","","Bit 14 - CCL",6,[[],["ccl__r",6]]],[11,"tcc2_","atsamd51g::pac::intflagc","Bit 3 - TCC2",1361,[[],["tcc2__r",6]]],[11,"pdec_","","Bit 7 - PDEC",1361,[[],["pdec__r",6]]],[11,"ac_","","Bit 8 - AC",1361,[[],["ac__r",6]]],[11,"aes_","","Bit 9 - AES",1361,[[],["aes__r",6]]],[11,"trng_","","Bit 10 - TRNG",1361,[[],["trng__r",6]]],[11,"icm_","","Bit 11 - ICM",1361,[[],["icm__r",6]]],[11,"pukcc_","","Bit 12 - PUKCC",1361,[[],["pukcc__r",6]]],[11,"qspi_","","Bit 13 - QSPI",1361,[[],["qspi__r",6]]],[11,"ccl_","","Bit 14 - CCL",1361,[[],["ccl__r",6]]],[11,"tcc2_","atsamd51g::generic","Bit 3 - TCC2",7,[[],["tcc2__w",3]]],[11,"pdec_","","Bit 7 - PDEC",7,[[],["pdec__w",3]]],[11,"ac_","","Bit 8 - AC",7,[[],["ac__w",3]]],[11,"aes_","","Bit 9 - AES",7,[[],["aes__w",3]]],[11,"trng_","","Bit 10 - TRNG",7,[[],["trng__w",3]]],[11,"icm_","","Bit 11 - ICM",7,[[],["icm__w",3]]],[11,"pukcc_","","Bit 12 - PUKCC",7,[[],["pukcc__w",3]]],[11,"qspi_","","Bit 13 - QSPI",7,[[],["qspi__w",3]]],[11,"ccl_","","Bit 14 - CCL",7,[[],["ccl__w",3]]],[11,"tcc2_","atsamd51g::pac::intflagc","Bit 3 - TCC2",1362,[[],["tcc2__w",3]]],[11,"pdec_","","Bit 7 - PDEC",1362,[[],["pdec__w",3]]],[11,"ac_","","Bit 8 - AC",1362,[[],["ac__w",3]]],[11,"aes_","","Bit 9 - AES",1362,[[],["aes__w",3]]],[11,"trng_","","Bit 10 - TRNG",1362,[[],["trng__w",3]]],[11,"icm_","","Bit 11 - ICM",1362,[[],["icm__w",3]]],[11,"pukcc_","","Bit 12 - PUKCC",1362,[[],["pukcc__w",3]]],[11,"qspi_","","Bit 13 - QSPI",1362,[[],["qspi__w",3]]],[11,"ccl_","","Bit 14 - CCL",1362,[[],["ccl__w",3]]],[0,"intflagd","atsamd51g::pac","Peripheral interrupt flag status - Bridge D",null,null],[3,"SERCOM4__W","atsamd51g::pac::intflagd","Write proxy for field `SERCOM4_`",null,null],[3,"SERCOM5__W","","Write proxy for field `SERCOM5_`",null,null],[3,"ADC0__W","","Write proxy for field `ADC0_`",null,null],[3,"ADC1__W","","Write proxy for field `ADC1_`",null,null],[3,"DAC__W","","Write proxy for field `DAC_`",null,null],[3,"PCC__W","","Write proxy for field `PCC_`",null,null],[6,"R","","Reader of register INTFLAGD",null,null],[6,"W","","Writer for register INTFLAGD",null,null],[6,"SERCOM4__R","","Reader of field `SERCOM4_`",null,null],[6,"SERCOM5__R","","Reader of field `SERCOM5_`",null,null],[6,"ADC0__R","","Reader of field `ADC0_`",null,null],[6,"ADC1__R","","Reader of field `ADC1_`",null,null],[6,"DAC__R","","Reader of field `DAC_`",null,null],[6,"PCC__R","","Reader of field `PCC_`",null,null],[11,"set_bit","","Sets the field bit",1363,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1363,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1363,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1365,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1366,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1366,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1366,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1367,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1367,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1367,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1368,[[],["w",6]]],[11,"sercom4_","atsamd51g::generic","Bit 0 - SERCOM4",6,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 1 - SERCOM5",6,[[],["sercom5__r",6]]],[11,"adc0_","","Bit 7 - ADC0",6,[[],["adc0__r",6]]],[11,"adc1_","","Bit 8 - ADC1",6,[[],["adc1__r",6]]],[11,"dac_","","Bit 9 - DAC",6,[[],["dac__r",6]]],[11,"pcc_","","Bit 11 - PCC",6,[[],["pcc__r",6]]],[11,"sercom4_","atsamd51g::pac::intflagd","Bit 0 - SERCOM4",1369,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 1 - SERCOM5",1369,[[],["sercom5__r",6]]],[11,"adc0_","","Bit 7 - ADC0",1369,[[],["adc0__r",6]]],[11,"adc1_","","Bit 8 - ADC1",1369,[[],["adc1__r",6]]],[11,"dac_","","Bit 9 - DAC",1369,[[],["dac__r",6]]],[11,"pcc_","","Bit 11 - PCC",1369,[[],["pcc__r",6]]],[11,"sercom4_","atsamd51g::generic","Bit 0 - SERCOM4",7,[[],["sercom4__w",3]]],[11,"sercom5_","","Bit 1 - SERCOM5",7,[[],["sercom5__w",3]]],[11,"adc0_","","Bit 7 - ADC0",7,[[],["adc0__w",3]]],[11,"adc1_","","Bit 8 - ADC1",7,[[],["adc1__w",3]]],[11,"dac_","","Bit 9 - DAC",7,[[],["dac__w",3]]],[11,"pcc_","","Bit 11 - PCC",7,[[],["pcc__w",3]]],[11,"sercom4_","atsamd51g::pac::intflagd","Bit 0 - SERCOM4",1370,[[],["sercom4__w",3]]],[11,"sercom5_","","Bit 1 - SERCOM5",1370,[[],["sercom5__w",3]]],[11,"adc0_","","Bit 7 - ADC0",1370,[[],["adc0__w",3]]],[11,"adc1_","","Bit 8 - ADC1",1370,[[],["adc1__w",3]]],[11,"dac_","","Bit 9 - DAC",1370,[[],["dac__w",3]]],[11,"pcc_","","Bit 11 - PCC",1370,[[],["pcc__w",3]]],[0,"statusa","atsamd51g::pac","Peripheral write protection status - Bridge A",null,null],[6,"R","atsamd51g::pac::statusa","Reader of register STATUSA",null,null],[6,"PAC__R","","Reader of field `PAC_`",null,null],[6,"PM__R","","Reader of field `PM_`",null,null],[6,"MCLK__R","","Reader of field `MCLK_`",null,null],[6,"RSTC__R","","Reader of field `RSTC_`",null,null],[6,"OSCCTRL__R","","Reader of field `OSCCTRL_`",null,null],[6,"OSC32KCTRL__R","","Reader of field `OSC32KCTRL_`",null,null],[6,"SUPC__R","","Reader of field `SUPC_`",null,null],[6,"GCLK__R","","Reader of field `GCLK_`",null,null],[6,"WDT__R","","Reader of field `WDT_`",null,null],[6,"RTC__R","","Reader of field `RTC_`",null,null],[6,"EIC__R","","Reader of field `EIC_`",null,null],[6,"FREQM__R","","Reader of field `FREQM_`",null,null],[6,"SERCOM0__R","","Reader of field `SERCOM0_`",null,null],[6,"SERCOM1__R","","Reader of field `SERCOM1_`",null,null],[6,"TC0__R","","Reader of field `TC0_`",null,null],[6,"TC1__R","","Reader of field `TC1_`",null,null],[11,"pac_","atsamd51g::generic","Bit 0 - PAC APB Protect Enable",6,[[],["pac__r",6]]],[11,"pm_","","Bit 1 - PM APB Protect Enable",6,[[],["pm__r",6]]],[11,"mclk_","","Bit 2 - MCLK APB Protect Enable",6,[[],["mclk__r",6]]],[11,"rstc_","","Bit 3 - RSTC APB Protect Enable",6,[[],["rstc__r",6]]],[11,"oscctrl_","","Bit 4 - OSCCTRL APB Protect Enable",6,[[],["oscctrl__r",6]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL APB Protect Enable",6,[[],["osc32kctrl__r",6]]],[11,"supc_","","Bit 6 - SUPC APB Protect Enable",6,[[],["supc__r",6]]],[11,"gclk_","","Bit 7 - GCLK APB Protect Enable",6,[[],["gclk__r",6]]],[11,"wdt_","","Bit 8 - WDT APB Protect Enable",6,[[],["wdt__r",6]]],[11,"rtc_","","Bit 9 - RTC APB Protect Enable",6,[[],["rtc__r",6]]],[11,"eic_","","Bit 10 - EIC APB Protect Enable",6,[[],["eic__r",6]]],[11,"freqm_","","Bit 11 - FREQM APB Protect Enable",6,[[],["freqm__r",6]]],[11,"sercom0_","","Bit 12 - SERCOM0 APB Protect Enable",6,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 13 - SERCOM1 APB Protect Enable",6,[[],["sercom1__r",6]]],[11,"tc0_","","Bit 14 - TC0 APB Protect Enable",6,[[],["tc0__r",6]]],[11,"tc1_","","Bit 15 - TC1 APB Protect Enable",6,[[],["tc1__r",6]]],[11,"pac_","atsamd51g::pac::statusa","Bit 0 - PAC APB Protect Enable",1371,[[],["pac__r",6]]],[11,"pm_","","Bit 1 - PM APB Protect Enable",1371,[[],["pm__r",6]]],[11,"mclk_","","Bit 2 - MCLK APB Protect Enable",1371,[[],["mclk__r",6]]],[11,"rstc_","","Bit 3 - RSTC APB Protect Enable",1371,[[],["rstc__r",6]]],[11,"oscctrl_","","Bit 4 - OSCCTRL APB Protect Enable",1371,[[],["oscctrl__r",6]]],[11,"osc32kctrl_","","Bit 5 - OSC32KCTRL APB Protect Enable",1371,[[],["osc32kctrl__r",6]]],[11,"supc_","","Bit 6 - SUPC APB Protect Enable",1371,[[],["supc__r",6]]],[11,"gclk_","","Bit 7 - GCLK APB Protect Enable",1371,[[],["gclk__r",6]]],[11,"wdt_","","Bit 8 - WDT APB Protect Enable",1371,[[],["wdt__r",6]]],[11,"rtc_","","Bit 9 - RTC APB Protect Enable",1371,[[],["rtc__r",6]]],[11,"eic_","","Bit 10 - EIC APB Protect Enable",1371,[[],["eic__r",6]]],[11,"freqm_","","Bit 11 - FREQM APB Protect Enable",1371,[[],["freqm__r",6]]],[11,"sercom0_","","Bit 12 - SERCOM0 APB Protect Enable",1371,[[],["sercom0__r",6]]],[11,"sercom1_","","Bit 13 - SERCOM1 APB Protect Enable",1371,[[],["sercom1__r",6]]],[11,"tc0_","","Bit 14 - TC0 APB Protect Enable",1371,[[],["tc0__r",6]]],[11,"tc1_","","Bit 15 - TC1 APB Protect Enable",1371,[[],["tc1__r",6]]],[0,"statusb","atsamd51g::pac","Peripheral write protection status - Bridge B",null,null],[6,"R","atsamd51g::pac::statusb","Reader of register STATUSB",null,null],[6,"USB__R","","Reader of field `USB_`",null,null],[6,"DSU__R","","Reader of field `DSU_`",null,null],[6,"NVMCTRL__R","","Reader of field `NVMCTRL_`",null,null],[6,"CMCC__R","","Reader of field `CMCC_`",null,null],[6,"PORT__R","","Reader of field `PORT_`",null,null],[6,"DMAC__R","","Reader of field `DMAC_`",null,null],[6,"HMATRIX__R","","Reader of field `HMATRIX_`",null,null],[6,"EVSYS__R","","Reader of field `EVSYS_`",null,null],[6,"SERCOM2__R","","Reader of field `SERCOM2_`",null,null],[6,"SERCOM3__R","","Reader of field `SERCOM3_`",null,null],[6,"TCC0__R","","Reader of field `TCC0_`",null,null],[6,"TCC1__R","","Reader of field `TCC1_`",null,null],[6,"TC2__R","","Reader of field `TC2_`",null,null],[6,"TC3__R","","Reader of field `TC3_`",null,null],[6,"RAMECC__R","","Reader of field `RAMECC_`",null,null],[11,"usb_","atsamd51g::generic","Bit 0 - USB APB Protect Enable",6,[[],["usb__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Protect Enable",6,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Protect Enable",6,[[],["nvmctrl__r",6]]],[11,"cmcc_","","Bit 3 - CMCC APB Protect Enable",6,[[],["cmcc__r",6]]],[11,"port_","","Bit 4 - PORT APB Protect Enable",6,[[],["port__r",6]]],[11,"dmac_","","Bit 5 - DMAC APB Protect Enable",6,[[],["dmac__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Protect Enable",6,[[],["hmatrix__r",6]]],[11,"evsys_","","Bit 7 - EVSYS APB Protect Enable",6,[[],["evsys__r",6]]],[11,"sercom2_","","Bit 9 - SERCOM2 APB Protect Enable",6,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 10 - SERCOM3 APB Protect Enable",6,[[],["sercom3__r",6]]],[11,"tcc0_","","Bit 11 - TCC0 APB Protect Enable",6,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 12 - TCC1 APB Protect Enable",6,[[],["tcc1__r",6]]],[11,"tc2_","","Bit 13 - TC2 APB Protect Enable",6,[[],["tc2__r",6]]],[11,"tc3_","","Bit 14 - TC3 APB Protect Enable",6,[[],["tc3__r",6]]],[11,"ramecc_","","Bit 16 - RAMECC APB Protect Enable",6,[[],["ramecc__r",6]]],[11,"usb_","atsamd51g::pac::statusb","Bit 0 - USB APB Protect Enable",1372,[[],["usb__r",6]]],[11,"dsu_","","Bit 1 - DSU APB Protect Enable",1372,[[],["dsu__r",6]]],[11,"nvmctrl_","","Bit 2 - NVMCTRL APB Protect Enable",1372,[[],["nvmctrl__r",6]]],[11,"cmcc_","","Bit 3 - CMCC APB Protect Enable",1372,[[],["cmcc__r",6]]],[11,"port_","","Bit 4 - PORT APB Protect Enable",1372,[[],["port__r",6]]],[11,"dmac_","","Bit 5 - DMAC APB Protect Enable",1372,[[],["dmac__r",6]]],[11,"hmatrix_","","Bit 6 - HMATRIX APB Protect Enable",1372,[[],["hmatrix__r",6]]],[11,"evsys_","","Bit 7 - EVSYS APB Protect Enable",1372,[[],["evsys__r",6]]],[11,"sercom2_","","Bit 9 - SERCOM2 APB Protect Enable",1372,[[],["sercom2__r",6]]],[11,"sercom3_","","Bit 10 - SERCOM3 APB Protect Enable",1372,[[],["sercom3__r",6]]],[11,"tcc0_","","Bit 11 - TCC0 APB Protect Enable",1372,[[],["tcc0__r",6]]],[11,"tcc1_","","Bit 12 - TCC1 APB Protect Enable",1372,[[],["tcc1__r",6]]],[11,"tc2_","","Bit 13 - TC2 APB Protect Enable",1372,[[],["tc2__r",6]]],[11,"tc3_","","Bit 14 - TC3 APB Protect Enable",1372,[[],["tc3__r",6]]],[11,"ramecc_","","Bit 16 - RAMECC APB Protect Enable",1372,[[],["ramecc__r",6]]],[0,"statusc","atsamd51g::pac","Peripheral write protection status - Bridge C",null,null],[6,"R","atsamd51g::pac::statusc","Reader of register STATUSC",null,null],[6,"TCC2__R","","Reader of field `TCC2_`",null,null],[6,"PDEC__R","","Reader of field `PDEC_`",null,null],[6,"AC__R","","Reader of field `AC_`",null,null],[6,"AES__R","","Reader of field `AES_`",null,null],[6,"TRNG__R","","Reader of field `TRNG_`",null,null],[6,"ICM__R","","Reader of field `ICM_`",null,null],[6,"PUKCC__R","","Reader of field `PUKCC_`",null,null],[6,"QSPI__R","","Reader of field `QSPI_`",null,null],[6,"CCL__R","","Reader of field `CCL_`",null,null],[11,"tcc2_","atsamd51g::generic","Bit 3 - TCC2 APB Protect Enable",6,[[],["tcc2__r",6]]],[11,"pdec_","","Bit 7 - PDEC APB Protect Enable",6,[[],["pdec__r",6]]],[11,"ac_","","Bit 8 - AC APB Protect Enable",6,[[],["ac__r",6]]],[11,"aes_","","Bit 9 - AES APB Protect Enable",6,[[],["aes__r",6]]],[11,"trng_","","Bit 10 - TRNG APB Protect Enable",6,[[],["trng__r",6]]],[11,"icm_","","Bit 11 - ICM APB Protect Enable",6,[[],["icm__r",6]]],[11,"pukcc_","","Bit 12 - PUKCC APB Protect Enable",6,[[],["pukcc__r",6]]],[11,"qspi_","","Bit 13 - QSPI APB Protect Enable",6,[[],["qspi__r",6]]],[11,"ccl_","","Bit 14 - CCL APB Protect Enable",6,[[],["ccl__r",6]]],[11,"tcc2_","atsamd51g::pac::statusc","Bit 3 - TCC2 APB Protect Enable",1373,[[],["tcc2__r",6]]],[11,"pdec_","","Bit 7 - PDEC APB Protect Enable",1373,[[],["pdec__r",6]]],[11,"ac_","","Bit 8 - AC APB Protect Enable",1373,[[],["ac__r",6]]],[11,"aes_","","Bit 9 - AES APB Protect Enable",1373,[[],["aes__r",6]]],[11,"trng_","","Bit 10 - TRNG APB Protect Enable",1373,[[],["trng__r",6]]],[11,"icm_","","Bit 11 - ICM APB Protect Enable",1373,[[],["icm__r",6]]],[11,"pukcc_","","Bit 12 - PUKCC APB Protect Enable",1373,[[],["pukcc__r",6]]],[11,"qspi_","","Bit 13 - QSPI APB Protect Enable",1373,[[],["qspi__r",6]]],[11,"ccl_","","Bit 14 - CCL APB Protect Enable",1373,[[],["ccl__r",6]]],[0,"statusd","atsamd51g::pac","Peripheral write protection status - Bridge D",null,null],[6,"R","atsamd51g::pac::statusd","Reader of register STATUSD",null,null],[6,"SERCOM4__R","","Reader of field `SERCOM4_`",null,null],[6,"SERCOM5__R","","Reader of field `SERCOM5_`",null,null],[6,"ADC0__R","","Reader of field `ADC0_`",null,null],[6,"ADC1__R","","Reader of field `ADC1_`",null,null],[6,"DAC__R","","Reader of field `DAC_`",null,null],[6,"PCC__R","","Reader of field `PCC_`",null,null],[11,"sercom4_","atsamd51g::generic","Bit 0 - SERCOM4 APB Protect Enable",6,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 1 - SERCOM5 APB Protect Enable",6,[[],["sercom5__r",6]]],[11,"adc0_","","Bit 7 - ADC0 APB Protect Enable",6,[[],["adc0__r",6]]],[11,"adc1_","","Bit 8 - ADC1 APB Protect Enable",6,[[],["adc1__r",6]]],[11,"dac_","","Bit 9 - DAC APB Protect Enable",6,[[],["dac__r",6]]],[11,"pcc_","","Bit 11 - PCC APB Protect Enable",6,[[],["pcc__r",6]]],[11,"sercom4_","atsamd51g::pac::statusd","Bit 0 - SERCOM4 APB Protect Enable",1374,[[],["sercom4__r",6]]],[11,"sercom5_","","Bit 1 - SERCOM5 APB Protect Enable",1374,[[],["sercom5__r",6]]],[11,"adc0_","","Bit 7 - ADC0 APB Protect Enable",1374,[[],["adc0__r",6]]],[11,"adc1_","","Bit 8 - ADC1 APB Protect Enable",1374,[[],["adc1__r",6]]],[11,"dac_","","Bit 9 - DAC APB Protect Enable",1374,[[],["dac__r",6]]],[11,"pcc_","","Bit 11 - PCC APB Protect Enable",1374,[[],["pcc__r",6]]],[6,"WRCTRL","atsamd51g::pac","Write control",null,null],[6,"EVCTRL","","Event control",null,null],[6,"INTENCLR","","Interrupt enable clear",null,null],[6,"INTENSET","","Interrupt enable set",null,null],[6,"INTFLAGAHB","","Bridge interrupt flag status",null,null],[6,"INTFLAGA","","Peripheral interrupt flag status - Bridge A",null,null],[6,"INTFLAGB","","Peripheral interrupt flag status - Bridge B",null,null],[6,"INTFLAGC","","Peripheral interrupt flag status - Bridge C",null,null],[6,"INTFLAGD","","Peripheral interrupt flag status - Bridge D",null,null],[6,"STATUSA","","Peripheral write protection status - Bridge A",null,null],[6,"STATUSB","","Peripheral write protection status - Bridge B",null,null],[6,"STATUSC","","Peripheral write protection status - Bridge C",null,null],[6,"STATUSD","","Peripheral write protection status - Bridge D",null,null],[0,"pcc","atsamd51g","Parallel Capture Controller",null,null],[3,"RegisterBlock","atsamd51g::pcc","Register block",null,null],[12,"mr","","0x00 - Mode Register",1375,null],[12,"ier","","0x04 - Interrupt Enable Register",1375,null],[12,"idr","","0x08 - Interrupt Disable Register",1375,null],[12,"imr","","0x0c - Interrupt Mask Register",1375,null],[12,"isr","","0x10 - Interrupt Status Register",1375,null],[12,"rhr","","0x14 - Reception Holding Register",1375,null],[12,"wpmr","","0xe0 - Write Protection Mode Register",1375,null],[12,"wpsr","","0xe4 - Write Protection Status Register",1375,null],[0,"mr","","Mode Register",null,null],[3,"PCEN_W","atsamd51g::pcc::mr","Write proxy for field `PCEN`",null,null],[3,"DSIZE_W","","Write proxy for field `DSIZE`",null,null],[3,"SCALE_W","","Write proxy for field `SCALE`",null,null],[3,"ALWYS_W","","Write proxy for field `ALWYS`",null,null],[3,"HALFS_W","","Write proxy for field `HALFS`",null,null],[3,"FRSTS_W","","Write proxy for field `FRSTS`",null,null],[3,"ISIZE_W","","Write proxy for field `ISIZE`",null,null],[3,"CID_W","","Write proxy for field `CID`",null,null],[6,"R","","Reader of register MR",null,null],[6,"W","","Writer for register MR",null,null],[6,"PCEN_R","","Reader of field `PCEN`",null,null],[6,"DSIZE_R","","Reader of field `DSIZE`",null,null],[6,"SCALE_R","","Reader of field `SCALE`",null,null],[6,"ALWYS_R","","Reader of field `ALWYS`",null,null],[6,"HALFS_R","","Reader of field `HALFS`",null,null],[6,"FRSTS_R","","Reader of field `FRSTS`",null,null],[6,"ISIZE_R","","Reader of field `ISIZE`",null,null],[6,"CID_R","","Reader of field `CID`",null,null],[11,"set_bit","","Sets the field bit",1376,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1376,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1376,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1377,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1378,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1378,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1378,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1379,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1379,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1379,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1380,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1380,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1380,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1381,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1381,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1381,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1382,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1383,[[],["w",6]]],[11,"pcen","atsamd51g::generic","Bit 0 - Parallel Capture Enable",6,[[],["pcen_r",6]]],[11,"dsize","","Bits 4:5 - Data size",6,[[],["dsize_r",6]]],[11,"scale","","Bit 8 - Scale data",6,[[],["scale_r",6]]],[11,"alwys","","Bit 9 - Always Sampling",6,[[],["alwys_r",6]]],[11,"halfs","","Bit 10 - Half Sampling",6,[[],["halfs_r",6]]],[11,"frsts","","Bit 11 - First sample",6,[[],["frsts_r",6]]],[11,"isize","","Bits 16:18 - Input Data Size",6,[[],["isize_r",6]]],[11,"cid","","Bits 30:31 - Clear If Disabled",6,[[],["cid_r",6]]],[11,"pcen","atsamd51g::pcc::mr","Bit 0 - Parallel Capture Enable",1384,[[],["pcen_r",6]]],[11,"dsize","","Bits 4:5 - Data size",1384,[[],["dsize_r",6]]],[11,"scale","","Bit 8 - Scale data",1384,[[],["scale_r",6]]],[11,"alwys","","Bit 9 - Always Sampling",1384,[[],["alwys_r",6]]],[11,"halfs","","Bit 10 - Half Sampling",1384,[[],["halfs_r",6]]],[11,"frsts","","Bit 11 - First sample",1384,[[],["frsts_r",6]]],[11,"isize","","Bits 16:18 - Input Data Size",1384,[[],["isize_r",6]]],[11,"cid","","Bits 30:31 - Clear If Disabled",1384,[[],["cid_r",6]]],[11,"pcen","atsamd51g::generic","Bit 0 - Parallel Capture Enable",7,[[],["pcen_w",3]]],[11,"dsize","","Bits 4:5 - Data size",7,[[],["dsize_w",3]]],[11,"scale","","Bit 8 - Scale data",7,[[],["scale_w",3]]],[11,"alwys","","Bit 9 - Always Sampling",7,[[],["alwys_w",3]]],[11,"halfs","","Bit 10 - Half Sampling",7,[[],["halfs_w",3]]],[11,"frsts","","Bit 11 - First sample",7,[[],["frsts_w",3]]],[11,"isize","","Bits 16:18 - Input Data Size",7,[[],["isize_w",3]]],[11,"cid","","Bits 30:31 - Clear If Disabled",7,[[],["cid_w",3]]],[11,"pcen","atsamd51g::pcc::mr","Bit 0 - Parallel Capture Enable",1385,[[],["pcen_w",3]]],[11,"dsize","","Bits 4:5 - Data size",1385,[[],["dsize_w",3]]],[11,"scale","","Bit 8 - Scale data",1385,[[],["scale_w",3]]],[11,"alwys","","Bit 9 - Always Sampling",1385,[[],["alwys_w",3]]],[11,"halfs","","Bit 10 - Half Sampling",1385,[[],["halfs_w",3]]],[11,"frsts","","Bit 11 - First sample",1385,[[],["frsts_w",3]]],[11,"isize","","Bits 16:18 - Input Data Size",1385,[[],["isize_w",3]]],[11,"cid","","Bits 30:31 - Clear If Disabled",1385,[[],["cid_w",3]]],[0,"ier","atsamd51g::pcc","Interrupt Enable Register",null,null],[3,"DRDY_W","atsamd51g::pcc::ier","Write proxy for field `DRDY`",null,null],[3,"OVRE_W","","Write proxy for field `OVRE`",null,null],[6,"W","","Writer for register IER",null,null],[11,"set_bit","","Sets the field bit",1386,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1386,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1386,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1387,[[],["w",6]]],[11,"drdy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Enable",7,[[],["drdy_w",3]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Enable",7,[[],["ovre_w",3]]],[11,"drdy","atsamd51g::pcc::ier","Bit 0 - Data Ready Interrupt Enable",1388,[[],["drdy_w",3]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Enable",1388,[[],["ovre_w",3]]],[0,"idr","atsamd51g::pcc","Interrupt Disable Register",null,null],[3,"DRDY_W","atsamd51g::pcc::idr","Write proxy for field `DRDY`",null,null],[3,"OVRE_W","","Write proxy for field `OVRE`",null,null],[6,"W","","Writer for register IDR",null,null],[11,"set_bit","","Sets the field bit",1389,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1389,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1389,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1390,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1390,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1390,[[],["w",6]]],[11,"drdy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Disable",7,[[],["drdy_w",3]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Disable",7,[[],["ovre_w",3]]],[11,"drdy","atsamd51g::pcc::idr","Bit 0 - Data Ready Interrupt Disable",1391,[[],["drdy_w",3]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Disable",1391,[[],["ovre_w",3]]],[0,"imr","atsamd51g::pcc","Interrupt Mask Register",null,null],[6,"R","atsamd51g::pcc::imr","Reader of register IMR",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"OVRE_R","","Reader of field `OVRE`",null,null],[11,"drdy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Mask",6,[[],["drdy_r",6]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Mask",6,[[],["ovre_r",6]]],[11,"drdy","atsamd51g::pcc::imr","Bit 0 - Data Ready Interrupt Mask",1392,[[],["drdy_r",6]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Mask",1392,[[],["ovre_r",6]]],[0,"isr","atsamd51g::pcc","Interrupt Status Register",null,null],[6,"R","atsamd51g::pcc::isr","Reader of register ISR",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"OVRE_R","","Reader of field `OVRE`",null,null],[11,"drdy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Status",6,[[],["drdy_r",6]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Status",6,[[],["ovre_r",6]]],[11,"drdy","atsamd51g::pcc::isr","Bit 0 - Data Ready Interrupt Status",1393,[[],["drdy_r",6]]],[11,"ovre","","Bit 1 - Overrun Error Interrupt Status",1393,[[],["ovre_r",6]]],[0,"rhr","atsamd51g::pcc","Reception Holding Register",null,null],[6,"R","atsamd51g::pcc::rhr","Reader of register RHR",null,null],[6,"RDATA_R","","Reader of field `RDATA`",null,null],[11,"rdata","atsamd51g::generic","Bits 0:31 - Reception Data",6,[[],["rdata_r",6]]],[11,"rdata","atsamd51g::pcc::rhr","Bits 0:31 - Reception Data",1394,[[],["rdata_r",6]]],[0,"wpmr","atsamd51g::pcc","Write Protection Mode Register",null,null],[3,"WPEN_W","atsamd51g::pcc::wpmr","Write proxy for field `WPEN`",null,null],[3,"WPKEY_W","","Write proxy for field `WPKEY`",null,null],[6,"R","","Reader of register WPMR",null,null],[6,"W","","Writer for register WPMR",null,null],[6,"WPEN_R","","Reader of field `WPEN`",null,null],[6,"WPKEY_R","","Reader of field `WPKEY`",null,null],[11,"set_bit","","Sets the field bit",1395,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1395,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1395,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1396,[[],["w",6]]],[11,"wpen","atsamd51g::generic","Bit 0 - Write Protection Enable",6,[[],["wpen_r",6]]],[11,"wpkey","","Bits 8:31 - Write Protection Key",6,[[],["wpkey_r",6]]],[11,"wpen","atsamd51g::pcc::wpmr","Bit 0 - Write Protection Enable",1397,[[],["wpen_r",6]]],[11,"wpkey","","Bits 8:31 - Write Protection Key",1397,[[],["wpkey_r",6]]],[11,"wpen","atsamd51g::generic","Bit 0 - Write Protection Enable",7,[[],["wpen_w",3]]],[11,"wpkey","","Bits 8:31 - Write Protection Key",7,[[],["wpkey_w",3]]],[11,"wpen","atsamd51g::pcc::wpmr","Bit 0 - Write Protection Enable",1398,[[],["wpen_w",3]]],[11,"wpkey","","Bits 8:31 - Write Protection Key",1398,[[],["wpkey_w",3]]],[0,"wpsr","atsamd51g::pcc","Write Protection Status Register",null,null],[6,"R","atsamd51g::pcc::wpsr","Reader of register WPSR",null,null],[6,"WPVS_R","","Reader of field `WPVS`",null,null],[6,"WPVSRC_R","","Reader of field `WPVSRC`",null,null],[11,"wpvs","atsamd51g::generic","Bit 0 - Write Protection Violation Source",6,[[],["wpvs_r",6]]],[11,"wpvsrc","","Bits 8:23 - Write Protection Violation Status",6,[[],["wpvsrc_r",6]]],[11,"wpvs","atsamd51g::pcc::wpsr","Bit 0 - Write Protection Violation Source",1399,[[],["wpvs_r",6]]],[11,"wpvsrc","","Bits 8:23 - Write Protection Violation Status",1399,[[],["wpvsrc_r",6]]],[6,"MR","atsamd51g::pcc","Mode Register",null,null],[6,"IER","","Interrupt Enable Register",null,null],[6,"IDR","","Interrupt Disable Register",null,null],[6,"IMR","","Interrupt Mask Register",null,null],[6,"ISR","","Interrupt Status Register",null,null],[6,"RHR","","Reception Holding Register",null,null],[6,"WPMR","","Write Protection Mode Register",null,null],[6,"WPSR","","Write Protection Status Register",null,null],[0,"pdec","atsamd51g","Quadrature Decodeur",null,null],[3,"RegisterBlock","atsamd51g::pdec","Register block",null,null],[12,"ctrla","","0x00 - Control A",1400,null],[12,"ctrlbclr","","0x04 - Control B Clear",1400,null],[12,"ctrlbset","","0x05 - Control B Set",1400,null],[12,"evctrl","","0x06 - Event Control",1400,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",1400,null],[12,"intenset","","0x09 - Interrupt Enable Set",1400,null],[12,"intflag","","0x0a - Interrupt Flag Status and Clear",1400,null],[12,"status","","0x0c - Status",1400,null],[12,"dbgctrl","","0x0f - Debug Control",1400,null],[12,"syncbusy","","0x10 - Synchronization Status",1400,null],[12,"presc","","0x14 - Prescaler Value",1400,null],[12,"filter","","0x15 - Filter Value",1400,null],[12,"prescbuf","","0x18 - Prescaler Buffer Value",1400,null],[12,"filterbuf","","0x19 - Filter Buffer Value",1400,null],[12,"count","","0x1c - Counter Value",1400,null],[12,"cc","","0x20 - Channel n Compare Value",1400,null],[12,"ccbuf","","0x30 - Channel Compare Buffer Value",1400,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::pdec::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"CONF_W","","Write proxy for field `CONF`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"SWAP_W","","Write proxy for field `SWAP`",null,null],[3,"PEREN_W","","Write proxy for field `PEREN`",null,null],[3,"PINEN0_W","","Write proxy for field `PINEN0`",null,null],[3,"PINEN1_W","","Write proxy for field `PINEN1`",null,null],[3,"PINEN2_W","","Write proxy for field `PINEN2`",null,null],[3,"PINVEN0_W","","Write proxy for field `PINVEN0`",null,null],[3,"PINVEN1_W","","Write proxy for field `PINVEN1`",null,null],[3,"PINVEN2_W","","Write proxy for field `PINVEN2`",null,null],[3,"ANGULAR_W","","Write proxy for field `ANGULAR`",null,null],[3,"MAXCMP_W","","Write proxy for field `MAXCMP`",null,null],[4,"MODE_A","","Operation Mode",null,null],[13,"QDEC","","0: QDEC operating mode",1401,null],[13,"HALL","","1: HALL operating mode",1401,null],[13,"COUNTER","","2: COUNTER operating mode",1401,null],[4,"CONF_A","","PDEC Configuration",null,null],[13,"X4","","0: Quadrature decoder direction",1402,null],[13,"X4S","","1: Secure Quadrature decoder direction",1402,null],[13,"X2","","2: Decoder direction",1402,null],[13,"X2S","","3: Secure decoder direction",1402,null],[13,"AUTOC","","4: Auto correction mode",1402,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"CONF_R","","Reader of field `CONF`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"SWAP_R","","Reader of field `SWAP`",null,null],[6,"PEREN_R","","Reader of field `PEREN`",null,null],[6,"PINEN0_R","","Reader of field `PINEN0`",null,null],[6,"PINEN1_R","","Reader of field `PINEN1`",null,null],[6,"PINEN2_R","","Reader of field `PINEN2`",null,null],[6,"PINVEN0_R","","Reader of field `PINVEN0`",null,null],[6,"PINVEN1_R","","Reader of field `PINVEN1`",null,null],[6,"PINVEN2_R","","Reader of field `PINVEN2`",null,null],[6,"ANGULAR_R","","Reader of field `ANGULAR`",null,null],[6,"MAXCMP_R","","Reader of field `MAXCMP`",null,null],[11,"set_bit","","Sets the field bit",1403,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1403,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1403,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1404,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1404,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1404,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_qdec","","Checks if the value of the field is `QDEC`",6,[[]]],[11,"is_hall","","Checks if the value of the field is `HALL`",6,[[]]],[11,"is_counter","","Checks if the value of the field is `COUNTER`",6,[[]]],[11,"variant","atsamd51g::pdec::ctrla","Get enumerated values variant",1405,[[],[["mode_a",4],["variant",4]]]],[11,"is_qdec","","Checks if the value of the field is `QDEC`",1405,[[]]],[11,"is_hall","","Checks if the value of the field is `HALL`",1405,[[]]],[11,"is_counter","","Checks if the value of the field is `COUNTER`",1405,[[]]],[11,"variant","","Writes `variant` to the field",1406,[[["mode_a",4]],["w",6]]],[11,"qdec","","QDEC operating mode",1406,[[],["w",6]]],[11,"hall","","HALL operating mode",1406,[[],["w",6]]],[11,"counter","","COUNTER operating mode",1406,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1406,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1407,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1407,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1407,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["conf_a",4]]]],[11,"is_x4","","Checks if the value of the field is `X4`",6,[[]]],[11,"is_x4s","","Checks if the value of the field is `X4S`",6,[[]]],[11,"is_x2","","Checks if the value of the field is `X2`",6,[[]]],[11,"is_x2s","","Checks if the value of the field is `X2S`",6,[[]]],[11,"is_autoc","","Checks if the value of the field is `AUTOC`",6,[[]]],[11,"variant","atsamd51g::pdec::ctrla","Get enumerated values variant",1408,[[],[["variant",4],["conf_a",4]]]],[11,"is_x4","","Checks if the value of the field is `X4`",1408,[[]]],[11,"is_x4s","","Checks if the value of the field is `X4S`",1408,[[]]],[11,"is_x2","","Checks if the value of the field is `X2`",1408,[[]]],[11,"is_x2s","","Checks if the value of the field is `X2S`",1408,[[]]],[11,"is_autoc","","Checks if the value of the field is `AUTOC`",1408,[[]]],[11,"variant","","Writes `variant` to the field",1409,[[["conf_a",4]],["w",6]]],[11,"x4","","Quadrature decoder direction",1409,[[],["w",6]]],[11,"x4s","","Secure Quadrature decoder direction",1409,[[],["w",6]]],[11,"x2","","Decoder direction",1409,[[],["w",6]]],[11,"x2s","","Secure decoder direction",1409,[[],["w",6]]],[11,"autoc","","Auto correction mode",1409,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1409,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1410,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1410,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1410,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1411,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1411,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1411,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1412,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1412,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1412,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1413,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1413,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1413,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1414,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1414,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1414,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1415,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1416,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1416,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1416,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1417,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1417,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1417,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1418,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1418,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1418,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1419,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1420,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operation Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"conf","","Bits 8:10 - PDEC Configuration",6,[[],["conf_r",6]]],[11,"alock","","Bit 11 - Auto Lock",6,[[],["alock_r",6]]],[11,"swap","","Bit 14 - PDEC Phase A and B Swap",6,[[],["swap_r",6]]],[11,"peren","","Bit 15 - Period Enable",6,[[],["peren_r",6]]],[11,"pinen0","","Bit 16 - PDEC Input From Pin 0 Enable",6,[[],["pinen0_r",6]]],[11,"pinen1","","Bit 17 - PDEC Input From Pin 1 Enable",6,[[],["pinen1_r",6]]],[11,"pinen2","","Bit 18 - PDEC Input From Pin 2 Enable",6,[[],["pinen2_r",6]]],[11,"pinven0","","Bit 20 - IO Pin 0 Invert Enable",6,[[],["pinven0_r",6]]],[11,"pinven1","","Bit 21 - IO Pin 1 Invert Enable",6,[[],["pinven1_r",6]]],[11,"pinven2","","Bit 22 - IO Pin 2 Invert Enable",6,[[],["pinven2_r",6]]],[11,"angular","","Bits 24:26 - Angular Counter Length",6,[[],["angular_r",6]]],[11,"maxcmp","","Bits 28:31 - Maximum Consecutive Missing Pulses",6,[[],["maxcmp_r",6]]],[11,"swrst","atsamd51g::pdec::ctrla","Bit 0 - Software Reset",1421,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1421,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operation Mode",1421,[[],["mode_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",1421,[[],["runstdby_r",6]]],[11,"conf","","Bits 8:10 - PDEC Configuration",1421,[[],["conf_r",6]]],[11,"alock","","Bit 11 - Auto Lock",1421,[[],["alock_r",6]]],[11,"swap","","Bit 14 - PDEC Phase A and B Swap",1421,[[],["swap_r",6]]],[11,"peren","","Bit 15 - Period Enable",1421,[[],["peren_r",6]]],[11,"pinen0","","Bit 16 - PDEC Input From Pin 0 Enable",1421,[[],["pinen0_r",6]]],[11,"pinen1","","Bit 17 - PDEC Input From Pin 1 Enable",1421,[[],["pinen1_r",6]]],[11,"pinen2","","Bit 18 - PDEC Input From Pin 2 Enable",1421,[[],["pinen2_r",6]]],[11,"pinven0","","Bit 20 - IO Pin 0 Invert Enable",1421,[[],["pinven0_r",6]]],[11,"pinven1","","Bit 21 - IO Pin 1 Invert Enable",1421,[[],["pinven1_r",6]]],[11,"pinven2","","Bit 22 - IO Pin 2 Invert Enable",1421,[[],["pinven2_r",6]]],[11,"angular","","Bits 24:26 - Angular Counter Length",1421,[[],["angular_r",6]]],[11,"maxcmp","","Bits 28:31 - Maximum Consecutive Missing Pulses",1421,[[],["maxcmp_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operation Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"conf","","Bits 8:10 - PDEC Configuration",7,[[],["conf_w",3]]],[11,"alock","","Bit 11 - Auto Lock",7,[[],["alock_w",3]]],[11,"swap","","Bit 14 - PDEC Phase A and B Swap",7,[[],["swap_w",3]]],[11,"peren","","Bit 15 - Period Enable",7,[[],["peren_w",3]]],[11,"pinen0","","Bit 16 - PDEC Input From Pin 0 Enable",7,[[],["pinen0_w",3]]],[11,"pinen1","","Bit 17 - PDEC Input From Pin 1 Enable",7,[[],["pinen1_w",3]]],[11,"pinen2","","Bit 18 - PDEC Input From Pin 2 Enable",7,[[],["pinen2_w",3]]],[11,"pinven0","","Bit 20 - IO Pin 0 Invert Enable",7,[[],["pinven0_w",3]]],[11,"pinven1","","Bit 21 - IO Pin 1 Invert Enable",7,[[],["pinven1_w",3]]],[11,"pinven2","","Bit 22 - IO Pin 2 Invert Enable",7,[[],["pinven2_w",3]]],[11,"angular","","Bits 24:26 - Angular Counter Length",7,[[],["angular_w",3]]],[11,"maxcmp","","Bits 28:31 - Maximum Consecutive Missing Pulses",7,[[],["maxcmp_w",3]]],[11,"swrst","atsamd51g::pdec::ctrla","Bit 0 - Software Reset",1422,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1422,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operation Mode",1422,[[],["mode_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",1422,[[],["runstdby_w",3]]],[11,"conf","","Bits 8:10 - PDEC Configuration",1422,[[],["conf_w",3]]],[11,"alock","","Bit 11 - Auto Lock",1422,[[],["alock_w",3]]],[11,"swap","","Bit 14 - PDEC Phase A and B Swap",1422,[[],["swap_w",3]]],[11,"peren","","Bit 15 - Period Enable",1422,[[],["peren_w",3]]],[11,"pinen0","","Bit 16 - PDEC Input From Pin 0 Enable",1422,[[],["pinen0_w",3]]],[11,"pinen1","","Bit 17 - PDEC Input From Pin 1 Enable",1422,[[],["pinen1_w",3]]],[11,"pinen2","","Bit 18 - PDEC Input From Pin 2 Enable",1422,[[],["pinen2_w",3]]],[11,"pinven0","","Bit 20 - IO Pin 0 Invert Enable",1422,[[],["pinven0_w",3]]],[11,"pinven1","","Bit 21 - IO Pin 1 Invert Enable",1422,[[],["pinven1_w",3]]],[11,"pinven2","","Bit 22 - IO Pin 2 Invert Enable",1422,[[],["pinven2_w",3]]],[11,"angular","","Bits 24:26 - Angular Counter Length",1422,[[],["angular_w",3]]],[11,"maxcmp","","Bits 28:31 - Maximum Consecutive Missing Pulses",1422,[[],["maxcmp_w",3]]],[0,"ctrlbclr","atsamd51g::pdec","Control B Clear",null,null],[3,"LUPD_W","atsamd51g::pdec::ctrlbclr","Write proxy for field `LUPD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1423,null],[13,"RETRIGGER","","1: Force a counter restart or retrigger",1423,null],[13,"UPDATE","","2: Force update of double buffered registers",1423,null],[13,"READSYNC","","3: Force a read synchronization of COUNT",1423,null],[13,"START","","4: Start QDEC/HALL",1423,null],[13,"STOP","","5: Stop QDEC/HALL",1423,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1424,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1424,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1424,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd51g::pdec::ctrlbclr","Get enumerated values variant",1425,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1425,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1425,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",1425,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",1425,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1425,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1425,[[]]],[11,"variant","","Writes `variant` to the field",1426,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1426,[[],["w",6]]],[11,"retrigger","","Force a counter restart or retrigger",1426,[[],["w",6]]],[11,"update","","Force update of double buffered registers",1426,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",1426,[[],["w",6]]],[11,"start","","Start QDEC/HALL",1426,[[],["w",6]]],[11,"stop","","Stop QDEC/HALL",1426,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1426,[[],["w",6]]],[11,"lupd","atsamd51g::generic","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"lupd","atsamd51g::pdec::ctrlbclr","Bit 1 - Lock Update",1427,[[],["lupd_r",6]]],[11,"cmd","","Bits 5:7 - Command",1427,[[],["cmd_r",6]]],[11,"lupd","atsamd51g::generic","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"lupd","atsamd51g::pdec::ctrlbclr","Bit 1 - Lock Update",1428,[[],["lupd_w",3]]],[11,"cmd","","Bits 5:7 - Command",1428,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd51g::pdec","Control B Set",null,null],[3,"LUPD_W","atsamd51g::pdec::ctrlbset","Write proxy for field `LUPD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",1429,null],[13,"RETRIGGER","","1: Force a counter restart or retrigger",1429,null],[13,"UPDATE","","2: Force update of double buffered registers",1429,null],[13,"READSYNC","","3: Force a read synchronization of COUNT",1429,null],[13,"START","","4: Start QDEC/HALL",1429,null],[13,"STOP","","5: Stop QDEC/HALL",1429,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",1430,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1430,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1430,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd51g::pdec::ctrlbset","Get enumerated values variant",1431,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",1431,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1431,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",1431,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",1431,[[]]],[11,"is_start","","Checks if the value of the field is `START`",1431,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",1431,[[]]],[11,"variant","","Writes `variant` to the field",1432,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",1432,[[],["w",6]]],[11,"retrigger","","Force a counter restart or retrigger",1432,[[],["w",6]]],[11,"update","","Force update of double buffered registers",1432,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",1432,[[],["w",6]]],[11,"start","","Start QDEC/HALL",1432,[[],["w",6]]],[11,"stop","","Stop QDEC/HALL",1432,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1432,[[],["w",6]]],[11,"lupd","atsamd51g::generic","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"lupd","atsamd51g::pdec::ctrlbset","Bit 1 - Lock Update",1433,[[],["lupd_r",6]]],[11,"cmd","","Bits 5:7 - Command",1433,[[],["cmd_r",6]]],[11,"lupd","atsamd51g::generic","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"lupd","atsamd51g::pdec::ctrlbset","Bit 1 - Lock Update",1434,[[],["lupd_w",3]]],[11,"cmd","","Bits 5:7 - Command",1434,[[],["cmd_w",3]]],[0,"evctrl","atsamd51g::pdec","Event Control",null,null],[3,"EVACT_W","atsamd51g::pdec::evctrl","Write proxy for field `EVACT`",null,null],[3,"EVINV_W","","Write proxy for field `EVINV`",null,null],[3,"EVEI_W","","Write proxy for field `EVEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"ERREO_W","","Write proxy for field `ERREO`",null,null],[3,"DIREO_W","","Write proxy for field `DIREO`",null,null],[3,"VLCEO_W","","Write proxy for field `VLCEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",1435,null],[13,"RETRIGGER","","1: Start, restart or retrigger on event",1435,null],[13,"COUNT","","2: Count on event",1435,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"EVINV_R","","Reader of field `EVINV`",null,null],[6,"EVEI_R","","Reader of field `EVEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"ERREO_R","","Reader of field `ERREO`",null,null],[6,"DIREO_R","","Reader of field `DIREO`",null,null],[6,"VLCEO_R","","Reader of field `VLCEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["evact_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"variant","atsamd51g::pdec::evctrl","Get enumerated values variant",1436,[[],[["variant",4],["evact_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1436,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",1436,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",1436,[[]]],[11,"variant","","Writes `variant` to the field",1437,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",1437,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger on event",1437,[[],["w",6]]],[11,"count","","Count on event",1437,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1437,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1438,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1439,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1440,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1440,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1440,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1441,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1441,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1441,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1442,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1442,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1442,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1443,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1443,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1443,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1444,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1444,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1445,[[],["w",6]]],[11,"evact","atsamd51g::generic","Bits 0:1 - Event Action",6,[[],["evact_r",6]]],[11,"evinv","","Bits 2:4 - Inverted Event Input Enable",6,[[],["evinv_r",6]]],[11,"evei","","Bits 5:7 - Event Input Enable",6,[[],["evei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",6,[[],["ovfeo_r",6]]],[11,"erreo","","Bit 9 - Error Output Event Enable",6,[[],["erreo_r",6]]],[11,"direo","","Bit 10 - Direction Output Event Enable",6,[[],["direo_r",6]]],[11,"vlceo","","Bit 11 - Velocity Output Event Enable",6,[[],["vlceo_r",6]]],[11,"mceo0","","Bit 12 - Match Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::pdec::evctrl","Bits 0:1 - Event Action",1446,[[],["evact_r",6]]],[11,"evinv","","Bits 2:4 - Inverted Event Input Enable",1446,[[],["evinv_r",6]]],[11,"evei","","Bits 5:7 - Event Input Enable",1446,[[],["evei_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",1446,[[],["ovfeo_r",6]]],[11,"erreo","","Bit 9 - Error Output Event Enable",1446,[[],["erreo_r",6]]],[11,"direo","","Bit 10 - Direction Output Event Enable",1446,[[],["direo_r",6]]],[11,"vlceo","","Bit 11 - Velocity Output Event Enable",1446,[[],["vlceo_r",6]]],[11,"mceo0","","Bit 12 - Match Channel 0 Event Output Enable",1446,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - Match Channel 1 Event Output Enable",1446,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::generic","Bits 0:1 - Event Action",7,[[],["evact_w",3]]],[11,"evinv","","Bits 2:4 - Inverted Event Input Enable",7,[[],["evinv_w",3]]],[11,"evei","","Bits 5:7 - Event Input Enable",7,[[],["evei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",7,[[],["ovfeo_w",3]]],[11,"erreo","","Bit 9 - Error Output Event Enable",7,[[],["erreo_w",3]]],[11,"direo","","Bit 10 - Direction Output Event Enable",7,[[],["direo_w",3]]],[11,"vlceo","","Bit 11 - Velocity Output Event Enable",7,[[],["vlceo_w",3]]],[11,"mceo0","","Bit 12 - Match Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"evact","atsamd51g::pdec::evctrl","Bits 0:1 - Event Action",1447,[[],["evact_w",3]]],[11,"evinv","","Bits 2:4 - Inverted Event Input Enable",1447,[[],["evinv_w",3]]],[11,"evei","","Bits 5:7 - Event Input Enable",1447,[[],["evei_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",1447,[[],["ovfeo_w",3]]],[11,"erreo","","Bit 9 - Error Output Event Enable",1447,[[],["erreo_w",3]]],[11,"direo","","Bit 10 - Direction Output Event Enable",1447,[[],["direo_w",3]]],[11,"vlceo","","Bit 11 - Velocity Output Event Enable",1447,[[],["vlceo_w",3]]],[11,"mceo0","","Bit 12 - Match Channel 0 Event Output Enable",1447,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - Match Channel 1 Event Output Enable",1447,[[],["mceo1_w",3]]],[0,"intenclr","atsamd51g::pdec","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd51g::pdec::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DIR_W","","Write proxy for field `DIR`",null,null],[3,"VLC_W","","Write proxy for field `VLC`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"VLC_R","","Reader of field `VLC`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1448,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1449,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1449,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1449,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1450,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1450,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1450,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1452,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1452,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1453,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow/Underflow Interrupt Disable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Disable",6,[[],["err_r",6]]],[11,"dir","","Bit 2 - Direction Interrupt Disable",6,[[],["dir_r",6]]],[11,"vlc","","Bit 3 - Velocity Interrupt Disable",6,[[],["vlc_r",6]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Disable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Disable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::pdec::intenclr","Bit 0 - Overflow/Underflow Interrupt Disable",1454,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Disable",1454,[[],["err_r",6]]],[11,"dir","","Bit 2 - Direction Interrupt Disable",1454,[[],["dir_r",6]]],[11,"vlc","","Bit 3 - Velocity Interrupt Disable",1454,[[],["vlc_r",6]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Disable",1454,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Disable",1454,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow/Underflow Interrupt Disable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Disable",7,[[],["err_w",3]]],[11,"dir","","Bit 2 - Direction Interrupt Disable",7,[[],["dir_w",3]]],[11,"vlc","","Bit 3 - Velocity Interrupt Disable",7,[[],["vlc_w",3]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Disable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Disable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::pdec::intenclr","Bit 0 - Overflow/Underflow Interrupt Disable",1455,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Disable",1455,[[],["err_w",3]]],[11,"dir","","Bit 2 - Direction Interrupt Disable",1455,[[],["dir_w",3]]],[11,"vlc","","Bit 3 - Velocity Interrupt Disable",1455,[[],["vlc_w",3]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Disable",1455,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Disable",1455,[[],["mc1_w",3]]],[0,"intenset","atsamd51g::pdec","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd51g::pdec::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DIR_W","","Write proxy for field `DIR`",null,null],[3,"VLC_W","","Write proxy for field `VLC`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"VLC_R","","Reader of field `VLC`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1456,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1456,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1456,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1457,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1457,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1457,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1458,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1458,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1458,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1459,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1459,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1459,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1460,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1460,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1460,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1461,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1461,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1461,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow/Underflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"dir","","Bit 2 - Direction Interrupt Enable",6,[[],["dir_r",6]]],[11,"vlc","","Bit 3 - Velocity Interrupt Enable",6,[[],["vlc_r",6]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Enable",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::pdec::intenset","Bit 0 - Overflow/Underflow Interrupt Enable",1462,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error Interrupt Enable",1462,[[],["err_r",6]]],[11,"dir","","Bit 2 - Direction Interrupt Enable",1462,[[],["dir_r",6]]],[11,"vlc","","Bit 3 - Velocity Interrupt Enable",1462,[[],["vlc_r",6]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Enable",1462,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Enable",1462,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow/Underflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"dir","","Bit 2 - Direction Interrupt Enable",7,[[],["dir_w",3]]],[11,"vlc","","Bit 3 - Velocity Interrupt Enable",7,[[],["vlc_w",3]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Enable",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::pdec::intenset","Bit 0 - Overflow/Underflow Interrupt Enable",1463,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error Interrupt Enable",1463,[[],["err_w",3]]],[11,"dir","","Bit 2 - Direction Interrupt Enable",1463,[[],["dir_w",3]]],[11,"vlc","","Bit 3 - Velocity Interrupt Enable",1463,[[],["vlc_w",3]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match Enable",1463,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match Enable",1463,[[],["mc1_w",3]]],[0,"intflag","atsamd51g::pdec","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd51g::pdec::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"DIR_W","","Write proxy for field `DIR`",null,null],[3,"VLC_W","","Write proxy for field `VLC`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"VLC_R","","Reader of field `VLC`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",1464,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1464,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1464,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1465,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1465,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1465,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1466,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1466,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1466,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1467,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1467,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1468,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1468,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1468,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1469,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow/Underflow",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",6,[[],["err_r",6]]],[11,"dir","","Bit 2 - Direction Change",6,[[],["dir_r",6]]],[11,"vlc","","Bit 3 - Velocity",6,[[],["vlc_r",6]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::pdec::intflag","Bit 0 - Overflow/Underflow",1470,[[],["ovf_r",6]]],[11,"err","","Bit 1 - Error",1470,[[],["err_r",6]]],[11,"dir","","Bit 2 - Direction Change",1470,[[],["dir_r",6]]],[11,"vlc","","Bit 3 - Velocity",1470,[[],["vlc_r",6]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match",1470,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match",1470,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow/Underflow",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",7,[[],["err_w",3]]],[11,"dir","","Bit 2 - Direction Change",7,[[],["dir_w",3]]],[11,"vlc","","Bit 3 - Velocity",7,[[],["vlc_w",3]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::pdec::intflag","Bit 0 - Overflow/Underflow",1471,[[],["ovf_w",3]]],[11,"err","","Bit 1 - Error",1471,[[],["err_w",3]]],[11,"dir","","Bit 2 - Direction Change",1471,[[],["dir_w",3]]],[11,"vlc","","Bit 3 - Velocity",1471,[[],["vlc_w",3]]],[11,"mc0","","Bit 4 - Channel 0 Compare Match",1471,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - Channel 1 Compare Match",1471,[[],["mc1_w",3]]],[0,"status","atsamd51g::pdec","Status",null,null],[3,"QERR_W","atsamd51g::pdec::status","Write proxy for field `QERR`",null,null],[3,"IDXERR_W","","Write proxy for field `IDXERR`",null,null],[3,"MPERR_W","","Write proxy for field `MPERR`",null,null],[3,"WINERR_W","","Write proxy for field `WINERR`",null,null],[3,"HERR_W","","Write proxy for field `HERR`",null,null],[3,"STOP_W","","Write proxy for field `STOP`",null,null],[3,"DIR_W","","Write proxy for field `DIR`",null,null],[3,"PRESCBUFV_W","","Write proxy for field `PRESCBUFV`",null,null],[3,"FILTERBUFV_W","","Write proxy for field `FILTERBUFV`",null,null],[3,"CCBUFV0_W","","Write proxy for field `CCBUFV0`",null,null],[3,"CCBUFV1_W","","Write proxy for field `CCBUFV1`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"QERR_R","","Reader of field `QERR`",null,null],[6,"IDXERR_R","","Reader of field `IDXERR`",null,null],[6,"MPERR_R","","Reader of field `MPERR`",null,null],[6,"WINERR_R","","Reader of field `WINERR`",null,null],[6,"HERR_R","","Reader of field `HERR`",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"PRESCBUFV_R","","Reader of field `PRESCBUFV`",null,null],[6,"FILTERBUFV_R","","Reader of field `FILTERBUFV`",null,null],[6,"CCBUFV0_R","","Reader of field `CCBUFV0`",null,null],[6,"CCBUFV1_R","","Reader of field `CCBUFV1`",null,null],[11,"set_bit","","Sets the field bit",1472,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1472,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1472,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1473,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1473,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1473,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1474,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1474,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1474,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1475,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1475,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1475,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1476,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1476,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1476,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1477,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1477,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1477,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1478,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1478,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1478,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1479,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1479,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1479,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1480,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1480,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1480,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1481,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1481,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1481,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1482,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1482,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1482,[[],["w",6]]],[11,"qerr","atsamd51g::generic","Bit 0 - Quadrature Error Flag",6,[[],["qerr_r",6]]],[11,"idxerr","","Bit 1 - Index Error Flag",6,[[],["idxerr_r",6]]],[11,"mperr","","Bit 2 - Missing Pulse Error flag",6,[[],["mperr_r",6]]],[11,"winerr","","Bit 4 - Window Error Flag",6,[[],["winerr_r",6]]],[11,"herr","","Bit 5 - Hall Error Flag",6,[[],["herr_r",6]]],[11,"stop","","Bit 6 - Stop",6,[[],["stop_r",6]]],[11,"dir","","Bit 7 - Direction Status Flag",6,[[],["dir_r",6]]],[11,"prescbufv","","Bit 8 - Prescaler Buffer Valid",6,[[],["prescbufv_r",6]]],[11,"filterbufv","","Bit 9 - Filter Buffer Valid",6,[[],["filterbufv_r",6]]],[11,"ccbufv0","","Bit 12 - Compare Channel 0 Buffer Valid",6,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 13 - Compare Channel 1 Buffer Valid",6,[[],["ccbufv1_r",6]]],[11,"qerr","atsamd51g::pdec::status","Bit 0 - Quadrature Error Flag",1483,[[],["qerr_r",6]]],[11,"idxerr","","Bit 1 - Index Error Flag",1483,[[],["idxerr_r",6]]],[11,"mperr","","Bit 2 - Missing Pulse Error flag",1483,[[],["mperr_r",6]]],[11,"winerr","","Bit 4 - Window Error Flag",1483,[[],["winerr_r",6]]],[11,"herr","","Bit 5 - Hall Error Flag",1483,[[],["herr_r",6]]],[11,"stop","","Bit 6 - Stop",1483,[[],["stop_r",6]]],[11,"dir","","Bit 7 - Direction Status Flag",1483,[[],["dir_r",6]]],[11,"prescbufv","","Bit 8 - Prescaler Buffer Valid",1483,[[],["prescbufv_r",6]]],[11,"filterbufv","","Bit 9 - Filter Buffer Valid",1483,[[],["filterbufv_r",6]]],[11,"ccbufv0","","Bit 12 - Compare Channel 0 Buffer Valid",1483,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 13 - Compare Channel 1 Buffer Valid",1483,[[],["ccbufv1_r",6]]],[11,"qerr","atsamd51g::generic","Bit 0 - Quadrature Error Flag",7,[[],["qerr_w",3]]],[11,"idxerr","","Bit 1 - Index Error Flag",7,[[],["idxerr_w",3]]],[11,"mperr","","Bit 2 - Missing Pulse Error flag",7,[[],["mperr_w",3]]],[11,"winerr","","Bit 4 - Window Error Flag",7,[[],["winerr_w",3]]],[11,"herr","","Bit 5 - Hall Error Flag",7,[[],["herr_w",3]]],[11,"stop","","Bit 6 - Stop",7,[[],["stop_w",3]]],[11,"dir","","Bit 7 - Direction Status Flag",7,[[],["dir_w",3]]],[11,"prescbufv","","Bit 8 - Prescaler Buffer Valid",7,[[],["prescbufv_w",3]]],[11,"filterbufv","","Bit 9 - Filter Buffer Valid",7,[[],["filterbufv_w",3]]],[11,"ccbufv0","","Bit 12 - Compare Channel 0 Buffer Valid",7,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 13 - Compare Channel 1 Buffer Valid",7,[[],["ccbufv1_w",3]]],[11,"qerr","atsamd51g::pdec::status","Bit 0 - Quadrature Error Flag",1484,[[],["qerr_w",3]]],[11,"idxerr","","Bit 1 - Index Error Flag",1484,[[],["idxerr_w",3]]],[11,"mperr","","Bit 2 - Missing Pulse Error flag",1484,[[],["mperr_w",3]]],[11,"winerr","","Bit 4 - Window Error Flag",1484,[[],["winerr_w",3]]],[11,"herr","","Bit 5 - Hall Error Flag",1484,[[],["herr_w",3]]],[11,"stop","","Bit 6 - Stop",1484,[[],["stop_w",3]]],[11,"dir","","Bit 7 - Direction Status Flag",1484,[[],["dir_w",3]]],[11,"prescbufv","","Bit 8 - Prescaler Buffer Valid",1484,[[],["prescbufv_w",3]]],[11,"filterbufv","","Bit 9 - Filter Buffer Valid",1484,[[],["filterbufv_w",3]]],[11,"ccbufv0","","Bit 12 - Compare Channel 0 Buffer Valid",1484,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 13 - Compare Channel 1 Buffer Valid",1484,[[],["ccbufv1_w",3]]],[0,"dbgctrl","atsamd51g::pdec","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::pdec::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1485,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1485,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1485,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run Mode",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::pdec::dbgctrl","Bit 0 - Debug Run Mode",1486,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Run Mode",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::pdec::dbgctrl","Bit 0 - Debug Run Mode",1487,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::pdec","Synchronization Status",null,null],[6,"R","atsamd51g::pdec::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"PRESC_R","","Reader of field `PRESC`",null,null],[6,"FILTER_R","","Reader of field `FILTER`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Control B Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Synchronization Busy",6,[[],["status_r",6]]],[11,"presc","","Bit 4 - Prescaler Synchronization Busy",6,[[],["presc_r",6]]],[11,"filter","","Bit 5 - Filter Synchronization Busy",6,[[],["filter_r",6]]],[11,"count","","Bit 6 - Count Synchronization Busy",6,[[],["count_r",6]]],[11,"cc0","","Bit 7 - Compare Channel 0 Synchronization Busy",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 8 - Compare Channel 1 Synchronization Busy",6,[[],["cc1_r",6]]],[11,"swrst","atsamd51g::pdec::syncbusy","Bit 0 - Software Reset Synchronization Busy",1488,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",1488,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Control B Synchronization Busy",1488,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Synchronization Busy",1488,[[],["status_r",6]]],[11,"presc","","Bit 4 - Prescaler Synchronization Busy",1488,[[],["presc_r",6]]],[11,"filter","","Bit 5 - Filter Synchronization Busy",1488,[[],["filter_r",6]]],[11,"count","","Bit 6 - Count Synchronization Busy",1488,[[],["count_r",6]]],[11,"cc0","","Bit 7 - Compare Channel 0 Synchronization Busy",1488,[[],["cc0_r",6]]],[11,"cc1","","Bit 8 - Compare Channel 1 Synchronization Busy",1488,[[],["cc1_r",6]]],[0,"presc","atsamd51g::pdec","Prescaler Value",null,null],[3,"PRESC_W","atsamd51g::pdec::presc","Write proxy for field `PRESC`",null,null],[4,"PRESC_A","","Prescaler Value",null,null],[13,"DIV1","","0: No division",1489,null],[13,"DIV2","","1: Divide by 2",1489,null],[13,"DIV4","","2: Divide by 4",1489,null],[13,"DIV8","","3: Divide by 8",1489,null],[13,"DIV16","","4: Divide by 16",1489,null],[13,"DIV32","","5: Divide by 32",1489,null],[13,"DIV64","","6: Divide by 64",1489,null],[13,"DIV128","","7: Divide by 128",1489,null],[13,"DIV256","","8: Divide by 256",1489,null],[13,"DIV512","","9: Divide by 512",1489,null],[13,"DIV1024","","10: Divide by 1024",1489,null],[6,"R","","Reader of register PRESC",null,null],[6,"W","","Writer for register PRESC",null,null],[6,"PRESC_R","","Reader of field `PRESC`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["presc_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::pdec::presc","Get enumerated values variant",1490,[[],[["presc_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1490,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1490,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1490,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1490,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1490,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1490,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1490,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1490,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1490,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1490,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1490,[[]]],[11,"variant","","Writes `variant` to the field",1491,[[["presc_a",4]],["w",6]]],[11,"div1","","No division",1491,[[],["w",6]]],[11,"div2","","Divide by 2",1491,[[],["w",6]]],[11,"div4","","Divide by 4",1491,[[],["w",6]]],[11,"div8","","Divide by 8",1491,[[],["w",6]]],[11,"div16","","Divide by 16",1491,[[],["w",6]]],[11,"div32","","Divide by 32",1491,[[],["w",6]]],[11,"div64","","Divide by 64",1491,[[],["w",6]]],[11,"div128","","Divide by 128",1491,[[],["w",6]]],[11,"div256","","Divide by 256",1491,[[],["w",6]]],[11,"div512","","Divide by 512",1491,[[],["w",6]]],[11,"div1024","","Divide by 1024",1491,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1491,[[],["w",6]]],[11,"presc","atsamd51g::generic","Bits 0:3 - Prescaler Value",6,[[],["presc_r",6]]],[11,"presc","atsamd51g::pdec::presc","Bits 0:3 - Prescaler Value",1492,[[],["presc_r",6]]],[11,"presc","atsamd51g::generic","Bits 0:3 - Prescaler Value",7,[[],["presc_w",3]]],[11,"presc","atsamd51g::pdec::presc","Bits 0:3 - Prescaler Value",1493,[[],["presc_w",3]]],[0,"filter","atsamd51g::pdec","Filter Value",null,null],[3,"FILTER_W","atsamd51g::pdec::filter","Write proxy for field `FILTER`",null,null],[6,"R","","Reader of register FILTER",null,null],[6,"W","","Writer for register FILTER",null,null],[6,"FILTER_R","","Reader of field `FILTER`",null,null],[11,"bits","","Writes raw bits to the field",1494,[[],["w",6]]],[11,"filter","atsamd51g::generic","Bits 0:7 - Filter Value",6,[[],["filter_r",6]]],[11,"filter","atsamd51g::pdec::filter","Bits 0:7 - Filter Value",1495,[[],["filter_r",6]]],[11,"filter","atsamd51g::generic","Bits 0:7 - Filter Value",7,[[],["filter_w",3]]],[11,"filter","atsamd51g::pdec::filter","Bits 0:7 - Filter Value",1496,[[],["filter_w",3]]],[0,"prescbuf","atsamd51g::pdec","Prescaler Buffer Value",null,null],[3,"PRESCBUF_W","atsamd51g::pdec::prescbuf","Write proxy for field `PRESCBUF`",null,null],[4,"PRESCBUF_A","","Prescaler Buffer Value",null,null],[13,"DIV1","","0: No division",1497,null],[13,"DIV2","","1: Divide by 2",1497,null],[13,"DIV4","","2: Divide by 4",1497,null],[13,"DIV8","","3: Divide by 8",1497,null],[13,"DIV16","","4: Divide by 16",1497,null],[13,"DIV32","","5: Divide by 32",1497,null],[13,"DIV64","","6: Divide by 64",1497,null],[13,"DIV128","","7: Divide by 128",1497,null],[13,"DIV256","","8: Divide by 256",1497,null],[13,"DIV512","","9: Divide by 512",1497,null],[13,"DIV1024","","10: Divide by 1024",1497,null],[6,"R","","Reader of register PRESCBUF",null,null],[6,"W","","Writer for register PRESCBUF",null,null],[6,"PRESCBUF_R","","Reader of field `PRESCBUF`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["prescbuf_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::pdec::prescbuf","Get enumerated values variant",1498,[[],[["prescbuf_a",4],["variant",4]]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1498,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1498,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1498,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1498,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1498,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1498,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1498,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1498,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1498,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1498,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1498,[[]]],[11,"variant","","Writes `variant` to the field",1499,[[["prescbuf_a",4]],["w",6]]],[11,"div1","","No division",1499,[[],["w",6]]],[11,"div2","","Divide by 2",1499,[[],["w",6]]],[11,"div4","","Divide by 4",1499,[[],["w",6]]],[11,"div8","","Divide by 8",1499,[[],["w",6]]],[11,"div16","","Divide by 16",1499,[[],["w",6]]],[11,"div32","","Divide by 32",1499,[[],["w",6]]],[11,"div64","","Divide by 64",1499,[[],["w",6]]],[11,"div128","","Divide by 128",1499,[[],["w",6]]],[11,"div256","","Divide by 256",1499,[[],["w",6]]],[11,"div512","","Divide by 512",1499,[[],["w",6]]],[11,"div1024","","Divide by 1024",1499,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1499,[[],["w",6]]],[11,"prescbuf","atsamd51g::generic","Bits 0:3 - Prescaler Buffer Value",6,[[],["prescbuf_r",6]]],[11,"prescbuf","atsamd51g::pdec::prescbuf","Bits 0:3 - Prescaler Buffer Value",1500,[[],["prescbuf_r",6]]],[11,"prescbuf","atsamd51g::generic","Bits 0:3 - Prescaler Buffer Value",7,[[],["prescbuf_w",3]]],[11,"prescbuf","atsamd51g::pdec::prescbuf","Bits 0:3 - Prescaler Buffer Value",1501,[[],["prescbuf_w",3]]],[0,"filterbuf","atsamd51g::pdec","Filter Buffer Value",null,null],[3,"FILTERBUF_W","atsamd51g::pdec::filterbuf","Write proxy for field `FILTERBUF`",null,null],[6,"R","","Reader of register FILTERBUF",null,null],[6,"W","","Writer for register FILTERBUF",null,null],[6,"FILTERBUF_R","","Reader of field `FILTERBUF`",null,null],[11,"bits","","Writes raw bits to the field",1502,[[],["w",6]]],[11,"filterbuf","atsamd51g::generic","Bits 0:7 - Filter Buffer Value",6,[[],["filterbuf_r",6]]],[11,"filterbuf","atsamd51g::pdec::filterbuf","Bits 0:7 - Filter Buffer Value",1503,[[],["filterbuf_r",6]]],[11,"filterbuf","atsamd51g::generic","Bits 0:7 - Filter Buffer Value",7,[[],["filterbuf_w",3]]],[11,"filterbuf","atsamd51g::pdec::filterbuf","Bits 0:7 - Filter Buffer Value",1504,[[],["filterbuf_w",3]]],[0,"count","atsamd51g::pdec","Counter Value",null,null],[3,"COUNT_W","atsamd51g::pdec::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1505,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:15 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::pdec::count","Bits 0:15 - Counter Value",1506,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:15 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::pdec::count","Bits 0:15 - Counter Value",1507,[[],["count_w",3]]],[0,"cc","atsamd51g::pdec","Channel n Compare Value",null,null],[3,"CC_W","atsamd51g::pdec::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC[%s]",null,null],[6,"W","","Writer for register CC[%s]",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",1508,[[],["w",6]]],[11,"cc","atsamd51g::generic","Bits 0:15 - Channel Compare Value",6,[[],["cc_r",6]]],[11,"cc","atsamd51g::pdec::cc","Bits 0:15 - Channel Compare Value",1509,[[],["cc_r",6]]],[11,"cc","atsamd51g::generic","Bits 0:15 - Channel Compare Value",7,[[],["cc_w",3]]],[11,"cc","atsamd51g::pdec::cc","Bits 0:15 - Channel Compare Value",1510,[[],["cc_w",3]]],[0,"ccbuf","atsamd51g::pdec","Channel Compare Buffer Value",null,null],[3,"CCBUF_W","atsamd51g::pdec::ccbuf","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF[%s]",null,null],[6,"W","","Writer for register CCBUF[%s]",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",1511,[[],["w",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:15 - Channel Compare Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::pdec::ccbuf","Bits 0:15 - Channel Compare Buffer Value",1512,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:15 - Channel Compare Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ccbuf","atsamd51g::pdec::ccbuf","Bits 0:15 - Channel Compare Buffer Value",1513,[[],["ccbuf_w",3]]],[6,"CTRLA","atsamd51g::pdec","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","Synchronization Status",null,null],[6,"PRESC","","Prescaler Value",null,null],[6,"FILTER","","Filter Value",null,null],[6,"PRESCBUF","","Prescaler Buffer Value",null,null],[6,"FILTERBUF","","Filter Buffer Value",null,null],[6,"COUNT","","Counter Value",null,null],[6,"CC","","Channel n Compare Value",null,null],[6,"CCBUF","","Channel Compare Buffer Value",null,null],[0,"pm","atsamd51g","Power Manager",null,null],[3,"RegisterBlock","atsamd51g::pm","Register block",null,null],[12,"ctrla","","0x00 - Control A",1514,null],[12,"sleepcfg","","0x01 - Sleep Configuration",1514,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",1514,null],[12,"intenset","","0x05 - Interrupt Enable Set",1514,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",1514,null],[12,"stdbycfg","","0x08 - Standby Configuration",1514,null],[12,"hibcfg","","0x09 - Hibernate Configuration",1514,null],[12,"bkupcfg","","0x0a - Backup Configuration",1514,null],[12,"pwsakdly","","0x12 - Power Switch Acknowledge Delay",1514,null],[0,"ctrla","","Control A",null,null],[3,"IORET_W","atsamd51g::pm::ctrla","Write proxy for field `IORET`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"IORET_R","","Reader of field `IORET`",null,null],[11,"set_bit","","Sets the field bit",1515,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1515,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1515,[[],["w",6]]],[11,"ioret","atsamd51g::generic","Bit 2 - I/O Retention",6,[[],["ioret_r",6]]],[11,"ioret","atsamd51g::pm::ctrla","Bit 2 - I/O Retention",1516,[[],["ioret_r",6]]],[11,"ioret","atsamd51g::generic","Bit 2 - I/O Retention",7,[[],["ioret_w",3]]],[11,"ioret","atsamd51g::pm::ctrla","Bit 2 - I/O Retention",1517,[[],["ioret_w",3]]],[0,"sleepcfg","atsamd51g::pm","Sleep Configuration",null,null],[3,"SLEEPMODE_W","atsamd51g::pm::sleepcfg","Write proxy for field `SLEEPMODE`",null,null],[4,"SLEEPMODE_A","","Sleep Mode",null,null],[13,"IDLE","","2: CPU, AHBx, and APBx clocks are OFF",1518,null],[13,"STANDBY","","4: All Clocks are OFF",1518,null],[13,"HIBERNATE","","5: Backup domain is ON as well as some PDRAMs",1518,null],[13,"BACKUP","","6: Only Backup domain is powered ON",1518,null],[13,"OFF","","7: All power domains are powered OFF",1518,null],[6,"R","","Reader of register SLEEPCFG",null,null],[6,"W","","Writer for register SLEEPCFG",null,null],[6,"SLEEPMODE_R","","Reader of field `SLEEPMODE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sleepmode_a",4]]]],[11,"is_idle","","Checks if the value of the field is `IDLE`",6,[[]]],[11,"is_standby","","Checks if the value of the field is `STANDBY`",6,[[]]],[11,"is_hibernate","","Checks if the value of the field is `HIBERNATE`",6,[[]]],[11,"is_backup","","Checks if the value of the field is `BACKUP`",6,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"variant","atsamd51g::pm::sleepcfg","Get enumerated values variant",1519,[[],[["variant",4],["sleepmode_a",4]]]],[11,"is_idle","","Checks if the value of the field is `IDLE`",1519,[[]]],[11,"is_standby","","Checks if the value of the field is `STANDBY`",1519,[[]]],[11,"is_hibernate","","Checks if the value of the field is `HIBERNATE`",1519,[[]]],[11,"is_backup","","Checks if the value of the field is `BACKUP`",1519,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",1519,[[]]],[11,"variant","","Writes `variant` to the field",1520,[[["sleepmode_a",4]],["w",6]]],[11,"idle","","CPU, AHBx, and APBx clocks are OFF",1520,[[],["w",6]]],[11,"standby","","All Clocks are OFF",1520,[[],["w",6]]],[11,"hibernate","","Backup domain is ON as well as some PDRAMs",1520,[[],["w",6]]],[11,"backup","","Only Backup domain is powered ON",1520,[[],["w",6]]],[11,"off","","All power domains are powered OFF",1520,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1520,[[],["w",6]]],[11,"sleepmode","atsamd51g::generic","Bits 0:2 - Sleep Mode",6,[[],["sleepmode_r",6]]],[11,"sleepmode","atsamd51g::pm::sleepcfg","Bits 0:2 - Sleep Mode",1521,[[],["sleepmode_r",6]]],[11,"sleepmode","atsamd51g::generic","Bits 0:2 - Sleep Mode",7,[[],["sleepmode_w",3]]],[11,"sleepmode","atsamd51g::pm::sleepcfg","Bits 0:2 - Sleep Mode",1522,[[],["sleepmode_w",3]]],[0,"intenclr","atsamd51g::pm","Interrupt Enable Clear",null,null],[3,"SLEEPRDY_W","atsamd51g::pm::intenclr","Write proxy for field `SLEEPRDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"SLEEPRDY_R","","Reader of field `SLEEPRDY`",null,null],[11,"set_bit","","Sets the field bit",1523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1523,[[],["w",6]]],[11,"sleeprdy","atsamd51g::generic","Bit 0 - Sleep Mode Entry Ready Enable",6,[[],["sleeprdy_r",6]]],[11,"sleeprdy","atsamd51g::pm::intenclr","Bit 0 - Sleep Mode Entry Ready Enable",1524,[[],["sleeprdy_r",6]]],[11,"sleeprdy","atsamd51g::generic","Bit 0 - Sleep Mode Entry Ready Enable",7,[[],["sleeprdy_w",3]]],[11,"sleeprdy","atsamd51g::pm::intenclr","Bit 0 - Sleep Mode Entry Ready Enable",1525,[[],["sleeprdy_w",3]]],[0,"intenset","atsamd51g::pm","Interrupt Enable Set",null,null],[3,"SLEEPRDY_W","atsamd51g::pm::intenset","Write proxy for field `SLEEPRDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"SLEEPRDY_R","","Reader of field `SLEEPRDY`",null,null],[11,"set_bit","","Sets the field bit",1526,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1526,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1526,[[],["w",6]]],[11,"sleeprdy","atsamd51g::generic","Bit 0 - Sleep Mode Entry Ready Enable",6,[[],["sleeprdy_r",6]]],[11,"sleeprdy","atsamd51g::pm::intenset","Bit 0 - Sleep Mode Entry Ready Enable",1527,[[],["sleeprdy_r",6]]],[11,"sleeprdy","atsamd51g::generic","Bit 0 - Sleep Mode Entry Ready Enable",7,[[],["sleeprdy_w",3]]],[11,"sleeprdy","atsamd51g::pm::intenset","Bit 0 - Sleep Mode Entry Ready Enable",1528,[[],["sleeprdy_w",3]]],[0,"intflag","atsamd51g::pm","Interrupt Flag Status and Clear",null,null],[3,"SLEEPRDY_W","atsamd51g::pm::intflag","Write proxy for field `SLEEPRDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"SLEEPRDY_R","","Reader of field `SLEEPRDY`",null,null],[11,"set_bit","","Sets the field bit",1529,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1529,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1529,[[],["w",6]]],[11,"sleeprdy","atsamd51g::generic","Bit 0 - Sleep Mode Entry Ready",6,[[],["sleeprdy_r",6]]],[11,"sleeprdy","atsamd51g::pm::intflag","Bit 0 - Sleep Mode Entry Ready",1530,[[],["sleeprdy_r",6]]],[11,"sleeprdy","atsamd51g::generic","Bit 0 - Sleep Mode Entry Ready",7,[[],["sleeprdy_w",3]]],[11,"sleeprdy","atsamd51g::pm::intflag","Bit 0 - Sleep Mode Entry Ready",1531,[[],["sleeprdy_w",3]]],[0,"stdbycfg","atsamd51g::pm","Standby Configuration",null,null],[3,"RAMCFG_W","atsamd51g::pm::stdbycfg","Write proxy for field `RAMCFG`",null,null],[3,"FASTWKUP_W","","Write proxy for field `FASTWKUP`",null,null],[4,"RAMCFG_A","","Ram Configuration",null,null],[13,"RET","","0: All the system RAM is retained",1532,null],[13,"PARTIAL","","1: Only the first 32Kbytes of the system RAM is retained",1532,null],[13,"OFF","","2: All the system RAM is turned OFF",1532,null],[4,"FASTWKUP_A","","Fast Wakeup",null,null],[13,"NO","","0: Fast Wakeup is disabled",1533,null],[13,"NVM","","1: Fast Wakeup is enabled on NVM",1533,null],[13,"MAINVREG","","2: Fast Wakeup is enabled on the main voltage regulator…",1533,null],[13,"BOTH","","3: Fast Wakeup is enabled on both NVM and MAINVREG",1533,null],[6,"R","","Reader of register STDBYCFG",null,null],[6,"W","","Writer for register STDBYCFG",null,null],[6,"RAMCFG_R","","Reader of field `RAMCFG`",null,null],[6,"FASTWKUP_R","","Reader of field `FASTWKUP`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["ramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",6,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",6,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"variant","atsamd51g::pm::stdbycfg","Get enumerated values variant",1534,[[],[["variant",4],["ramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",1534,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",1534,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",1534,[[]]],[11,"variant","","Writes `variant` to the field",1535,[[["ramcfg_a",4]],["w",6]]],[11,"ret","","All the system RAM is retained",1535,[[],["w",6]]],[11,"partial","","Only the first 32Kbytes of the system RAM is retained",1535,[[],["w",6]]],[11,"off","","All the system RAM is turned OFF",1535,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1535,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["fastwkup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_nvm","","Checks if the value of the field is `NVM`",6,[[]]],[11,"is_mainvreg","","Checks if the value of the field is `MAINVREG`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd51g::pm::stdbycfg","Get enumerated values variant",1536,[[],["fastwkup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",1536,[[]]],[11,"is_nvm","","Checks if the value of the field is `NVM`",1536,[[]]],[11,"is_mainvreg","","Checks if the value of the field is `MAINVREG`",1536,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",1536,[[]]],[11,"variant","","Writes `variant` to the field",1537,[[["fastwkup_a",4]],["w",6]]],[11,"no","","Fast Wakeup is disabled",1537,[[],["w",6]]],[11,"nvm","","Fast Wakeup is enabled on NVM",1537,[[],["w",6]]],[11,"mainvreg","","Fast Wakeup is enabled on the main voltage regulator…",1537,[[],["w",6]]],[11,"both","","Fast Wakeup is enabled on both NVM and MAINVREG",1537,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1537,[[],["w",6]]],[11,"ramcfg","atsamd51g::generic","Bits 0:1 - Ram Configuration",6,[[],["ramcfg_r",6]]],[11,"fastwkup","","Bits 4:5 - Fast Wakeup",6,[[],["fastwkup_r",6]]],[11,"ramcfg","atsamd51g::pm::stdbycfg","Bits 0:1 - Ram Configuration",1538,[[],["ramcfg_r",6]]],[11,"fastwkup","","Bits 4:5 - Fast Wakeup",1538,[[],["fastwkup_r",6]]],[11,"ramcfg","atsamd51g::generic","Bits 0:1 - Ram Configuration",7,[[],["ramcfg_w",3]]],[11,"fastwkup","","Bits 4:5 - Fast Wakeup",7,[[],["fastwkup_w",3]]],[11,"ramcfg","atsamd51g::pm::stdbycfg","Bits 0:1 - Ram Configuration",1539,[[],["ramcfg_w",3]]],[11,"fastwkup","","Bits 4:5 - Fast Wakeup",1539,[[],["fastwkup_w",3]]],[0,"hibcfg","atsamd51g::pm","Hibernate Configuration",null,null],[3,"RAMCFG_W","atsamd51g::pm::hibcfg","Write proxy for field `RAMCFG`",null,null],[3,"BRAMCFG_W","","Write proxy for field `BRAMCFG`",null,null],[4,"RAMCFG_A","","Ram Configuration",null,null],[13,"RET","","0: All the system RAM is retained",1540,null],[13,"PARTIAL","","1: Only the first 32Kbytes of the system RAM is retained",1540,null],[13,"OFF","","2: All the system RAM is turned OFF",1540,null],[4,"BRAMCFG_A","","Backup Ram Configuration",null,null],[13,"RET","","0: All the backup RAM is retained",1541,null],[13,"PARTIAL","","1: Only the first 4Kbytes of the backup RAM is retained",1541,null],[13,"OFF","","2: All the backup RAM is turned OFF",1541,null],[6,"R","","Reader of register HIBCFG",null,null],[6,"W","","Writer for register HIBCFG",null,null],[6,"RAMCFG_R","","Reader of field `RAMCFG`",null,null],[6,"BRAMCFG_R","","Reader of field `BRAMCFG`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["ramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",6,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",6,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"variant","atsamd51g::pm::hibcfg","Get enumerated values variant",1542,[[],[["variant",4],["ramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",1542,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",1542,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",1542,[[]]],[11,"variant","","Writes `variant` to the field",1543,[[["ramcfg_a",4]],["w",6]]],[11,"ret","","All the system RAM is retained",1543,[[],["w",6]]],[11,"partial","","Only the first 32Kbytes of the system RAM is retained",1543,[[],["w",6]]],[11,"off","","All the system RAM is turned OFF",1543,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1543,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["bramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",6,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",6,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"variant","atsamd51g::pm::hibcfg","Get enumerated values variant",1544,[[],[["variant",4],["bramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",1544,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",1544,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",1544,[[]]],[11,"variant","","Writes `variant` to the field",1545,[[["bramcfg_a",4]],["w",6]]],[11,"ret","","All the backup RAM is retained",1545,[[],["w",6]]],[11,"partial","","Only the first 4Kbytes of the backup RAM is retained",1545,[[],["w",6]]],[11,"off","","All the backup RAM is turned OFF",1545,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1545,[[],["w",6]]],[11,"ramcfg","atsamd51g::generic","Bits 0:1 - Ram Configuration",6,[[],["ramcfg_r",6]]],[11,"bramcfg","","Bits 2:3 - Backup Ram Configuration",6,[[],["bramcfg_r",6]]],[11,"ramcfg","atsamd51g::pm::hibcfg","Bits 0:1 - Ram Configuration",1546,[[],["ramcfg_r",6]]],[11,"bramcfg","","Bits 2:3 - Backup Ram Configuration",1546,[[],["bramcfg_r",6]]],[11,"ramcfg","atsamd51g::generic","Bits 0:1 - Ram Configuration",7,[[],["ramcfg_w",3]]],[11,"bramcfg","","Bits 2:3 - Backup Ram Configuration",7,[[],["bramcfg_w",3]]],[11,"ramcfg","atsamd51g::pm::hibcfg","Bits 0:1 - Ram Configuration",1547,[[],["ramcfg_w",3]]],[11,"bramcfg","","Bits 2:3 - Backup Ram Configuration",1547,[[],["bramcfg_w",3]]],[0,"bkupcfg","atsamd51g::pm","Backup Configuration",null,null],[3,"BRAMCFG_W","atsamd51g::pm::bkupcfg","Write proxy for field `BRAMCFG`",null,null],[4,"BRAMCFG_A","","Ram Configuration",null,null],[13,"RET","","0: All the backup RAM is retained",1548,null],[13,"PARTIAL","","1: Only the first 4Kbytes of the backup RAM is retained",1548,null],[13,"OFF","","2: All the backup RAM is turned OFF",1548,null],[6,"R","","Reader of register BKUPCFG",null,null],[6,"W","","Writer for register BKUPCFG",null,null],[6,"BRAMCFG_R","","Reader of field `BRAMCFG`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["bramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",6,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",6,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"variant","atsamd51g::pm::bkupcfg","Get enumerated values variant",1549,[[],[["variant",4],["bramcfg_a",4]]]],[11,"is_ret","","Checks if the value of the field is `RET`",1549,[[]]],[11,"is_partial","","Checks if the value of the field is `PARTIAL`",1549,[[]]],[11,"is_off","","Checks if the value of the field is `OFF`",1549,[[]]],[11,"variant","","Writes `variant` to the field",1550,[[["bramcfg_a",4]],["w",6]]],[11,"ret","","All the backup RAM is retained",1550,[[],["w",6]]],[11,"partial","","Only the first 4Kbytes of the backup RAM is retained",1550,[[],["w",6]]],[11,"off","","All the backup RAM is turned OFF",1550,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1550,[[],["w",6]]],[11,"bramcfg","atsamd51g::generic","Bits 0:1 - Ram Configuration",6,[[],["bramcfg_r",6]]],[11,"bramcfg","atsamd51g::pm::bkupcfg","Bits 0:1 - Ram Configuration",1551,[[],["bramcfg_r",6]]],[11,"bramcfg","atsamd51g::generic","Bits 0:1 - Ram Configuration",7,[[],["bramcfg_w",3]]],[11,"bramcfg","atsamd51g::pm::bkupcfg","Bits 0:1 - Ram Configuration",1552,[[],["bramcfg_w",3]]],[0,"pwsakdly","atsamd51g::pm","Power Switch Acknowledge Delay",null,null],[3,"DLYVAL_W","atsamd51g::pm::pwsakdly","Write proxy for field `DLYVAL`",null,null],[3,"IGNACK_W","","Write proxy for field `IGNACK`",null,null],[6,"R","","Reader of register PWSAKDLY",null,null],[6,"W","","Writer for register PWSAKDLY",null,null],[6,"DLYVAL_R","","Reader of field `DLYVAL`",null,null],[6,"IGNACK_R","","Reader of field `IGNACK`",null,null],[11,"bits","","Writes raw bits to the field",1553,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1554,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1554,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1554,[[],["w",6]]],[11,"dlyval","atsamd51g::generic","Bits 0:6 - Delay Value",6,[[],["dlyval_r",6]]],[11,"ignack","","Bit 7 - Ignore Acknowledge",6,[[],["ignack_r",6]]],[11,"dlyval","atsamd51g::pm::pwsakdly","Bits 0:6 - Delay Value",1555,[[],["dlyval_r",6]]],[11,"ignack","","Bit 7 - Ignore Acknowledge",1555,[[],["ignack_r",6]]],[11,"dlyval","atsamd51g::generic","Bits 0:6 - Delay Value",7,[[],["dlyval_w",3]]],[11,"ignack","","Bit 7 - Ignore Acknowledge",7,[[],["ignack_w",3]]],[11,"dlyval","atsamd51g::pm::pwsakdly","Bits 0:6 - Delay Value",1556,[[],["dlyval_w",3]]],[11,"ignack","","Bit 7 - Ignore Acknowledge",1556,[[],["ignack_w",3]]],[6,"CTRLA","atsamd51g::pm","Control A",null,null],[6,"SLEEPCFG","","Sleep Configuration",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STDBYCFG","","Standby Configuration",null,null],[6,"HIBCFG","","Hibernate Configuration",null,null],[6,"BKUPCFG","","Backup Configuration",null,null],[6,"PWSAKDLY","","Power Switch Acknowledge Delay",null,null],[0,"port","atsamd51g","Port Module",null,null],[3,"RegisterBlock","atsamd51g::port","Register block",null,null],[12,"group0","","0x00 - GROUP[%s]",1557,null],[12,"group1","","0x80 - GROUP[%s]",1557,null],[3,"GROUP","","Register block",null,null],[12,"dir","","0x00 - Data Direction",1558,null],[12,"dirclr","","0x04 - Data Direction Clear",1558,null],[12,"dirset","","0x08 - Data Direction Set",1558,null],[12,"dirtgl","","0x0c - Data Direction Toggle",1558,null],[12,"out","","0x10 - Data Output Value",1558,null],[12,"outclr","","0x14 - Data Output Value Clear",1558,null],[12,"outset","","0x18 - Data Output Value Set",1558,null],[12,"outtgl","","0x1c - Data Output Value Toggle",1558,null],[12,"in_","","0x20 - Data Input Value",1558,null],[12,"ctrl","","0x24 - Control",1558,null],[12,"wrconfig","","0x28 - Write Configuration",1558,null],[12,"evctrl","","0x2c - Event Input Control",1558,null],[12,"pmux","","0x30 - Peripheral Multiplexing",1558,null],[12,"pincfg","","0x40 - Pin Configuration",1558,null],[0,"group","","Register block GROUP[%s]",null,null],[0,"dir","atsamd51g::port::group","Data Direction",null,null],[3,"DIR_W","atsamd51g::port::group::dir","Write proxy for field `DIR`",null,null],[6,"R","","Reader of register DIR",null,null],[6,"W","","Writer for register DIR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[11,"bits","","Writes raw bits to the field",1559,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bits 0:31 - Port Data Direction",6,[[],["dir_r",6]]],[11,"dir","atsamd51g::port::group::dir","Bits 0:31 - Port Data Direction",1560,[[],["dir_r",6]]],[11,"dir","atsamd51g::generic","Bits 0:31 - Port Data Direction",7,[[],["dir_w",3]]],[11,"dir","atsamd51g::port::group::dir","Bits 0:31 - Port Data Direction",1561,[[],["dir_w",3]]],[0,"dirclr","atsamd51g::port::group","Data Direction Clear",null,null],[3,"DIRCLR_W","atsamd51g::port::group::dirclr","Write proxy for field `DIRCLR`",null,null],[6,"R","","Reader of register DIRCLR",null,null],[6,"W","","Writer for register DIRCLR",null,null],[6,"DIRCLR_R","","Reader of field `DIRCLR`",null,null],[11,"bits","","Writes raw bits to the field",1562,[[],["w",6]]],[11,"dirclr","atsamd51g::generic","Bits 0:31 - Port Data Direction Clear",6,[[],["dirclr_r",6]]],[11,"dirclr","atsamd51g::port::group::dirclr","Bits 0:31 - Port Data Direction Clear",1563,[[],["dirclr_r",6]]],[11,"dirclr","atsamd51g::generic","Bits 0:31 - Port Data Direction Clear",7,[[],["dirclr_w",3]]],[11,"dirclr","atsamd51g::port::group::dirclr","Bits 0:31 - Port Data Direction Clear",1564,[[],["dirclr_w",3]]],[0,"dirset","atsamd51g::port::group","Data Direction Set",null,null],[3,"DIRSET_W","atsamd51g::port::group::dirset","Write proxy for field `DIRSET`",null,null],[6,"R","","Reader of register DIRSET",null,null],[6,"W","","Writer for register DIRSET",null,null],[6,"DIRSET_R","","Reader of field `DIRSET`",null,null],[11,"bits","","Writes raw bits to the field",1565,[[],["w",6]]],[11,"dirset","atsamd51g::generic","Bits 0:31 - Port Data Direction Set",6,[[],["dirset_r",6]]],[11,"dirset","atsamd51g::port::group::dirset","Bits 0:31 - Port Data Direction Set",1566,[[],["dirset_r",6]]],[11,"dirset","atsamd51g::generic","Bits 0:31 - Port Data Direction Set",7,[[],["dirset_w",3]]],[11,"dirset","atsamd51g::port::group::dirset","Bits 0:31 - Port Data Direction Set",1567,[[],["dirset_w",3]]],[0,"dirtgl","atsamd51g::port::group","Data Direction Toggle",null,null],[3,"DIRTGL_W","atsamd51g::port::group::dirtgl","Write proxy for field `DIRTGL`",null,null],[6,"R","","Reader of register DIRTGL",null,null],[6,"W","","Writer for register DIRTGL",null,null],[6,"DIRTGL_R","","Reader of field `DIRTGL`",null,null],[11,"bits","","Writes raw bits to the field",1568,[[],["w",6]]],[11,"dirtgl","atsamd51g::generic","Bits 0:31 - Port Data Direction Toggle",6,[[],["dirtgl_r",6]]],[11,"dirtgl","atsamd51g::port::group::dirtgl","Bits 0:31 - Port Data Direction Toggle",1569,[[],["dirtgl_r",6]]],[11,"dirtgl","atsamd51g::generic","Bits 0:31 - Port Data Direction Toggle",7,[[],["dirtgl_w",3]]],[11,"dirtgl","atsamd51g::port::group::dirtgl","Bits 0:31 - Port Data Direction Toggle",1570,[[],["dirtgl_w",3]]],[0,"out","atsamd51g::port::group","Data Output Value",null,null],[3,"OUT_W","atsamd51g::port::group::out","Write proxy for field `OUT`",null,null],[6,"R","","Reader of register OUT",null,null],[6,"W","","Writer for register OUT",null,null],[6,"OUT_R","","Reader of field `OUT`",null,null],[11,"bits","","Writes raw bits to the field",1571,[[],["w",6]]],[11,"out","atsamd51g::generic","Bits 0:31 - PORT Data Output Value",6,[[],["out_r",6]]],[11,"out","atsamd51g::port::group::out","Bits 0:31 - PORT Data Output Value",1572,[[],["out_r",6]]],[11,"out","atsamd51g::generic","Bits 0:31 - PORT Data Output Value",7,[[],["out_w",3]]],[11,"out","atsamd51g::port::group::out","Bits 0:31 - PORT Data Output Value",1573,[[],["out_w",3]]],[0,"outclr","atsamd51g::port::group","Data Output Value Clear",null,null],[3,"OUTCLR_W","atsamd51g::port::group::outclr","Write proxy for field `OUTCLR`",null,null],[6,"R","","Reader of register OUTCLR",null,null],[6,"W","","Writer for register OUTCLR",null,null],[6,"OUTCLR_R","","Reader of field `OUTCLR`",null,null],[11,"bits","","Writes raw bits to the field",1574,[[],["w",6]]],[11,"outclr","atsamd51g::generic","Bits 0:31 - PORT Data Output Value Clear",6,[[],["outclr_r",6]]],[11,"outclr","atsamd51g::port::group::outclr","Bits 0:31 - PORT Data Output Value Clear",1575,[[],["outclr_r",6]]],[11,"outclr","atsamd51g::generic","Bits 0:31 - PORT Data Output Value Clear",7,[[],["outclr_w",3]]],[11,"outclr","atsamd51g::port::group::outclr","Bits 0:31 - PORT Data Output Value Clear",1576,[[],["outclr_w",3]]],[0,"outset","atsamd51g::port::group","Data Output Value Set",null,null],[3,"OUTSET_W","atsamd51g::port::group::outset","Write proxy for field `OUTSET`",null,null],[6,"R","","Reader of register OUTSET",null,null],[6,"W","","Writer for register OUTSET",null,null],[6,"OUTSET_R","","Reader of field `OUTSET`",null,null],[11,"bits","","Writes raw bits to the field",1577,[[],["w",6]]],[11,"outset","atsamd51g::generic","Bits 0:31 - PORT Data Output Value Set",6,[[],["outset_r",6]]],[11,"outset","atsamd51g::port::group::outset","Bits 0:31 - PORT Data Output Value Set",1578,[[],["outset_r",6]]],[11,"outset","atsamd51g::generic","Bits 0:31 - PORT Data Output Value Set",7,[[],["outset_w",3]]],[11,"outset","atsamd51g::port::group::outset","Bits 0:31 - PORT Data Output Value Set",1579,[[],["outset_w",3]]],[0,"outtgl","atsamd51g::port::group","Data Output Value Toggle",null,null],[3,"OUTTGL_W","atsamd51g::port::group::outtgl","Write proxy for field `OUTTGL`",null,null],[6,"R","","Reader of register OUTTGL",null,null],[6,"W","","Writer for register OUTTGL",null,null],[6,"OUTTGL_R","","Reader of field `OUTTGL`",null,null],[11,"bits","","Writes raw bits to the field",1580,[[],["w",6]]],[11,"outtgl","atsamd51g::generic","Bits 0:31 - PORT Data Output Value Toggle",6,[[],["outtgl_r",6]]],[11,"outtgl","atsamd51g::port::group::outtgl","Bits 0:31 - PORT Data Output Value Toggle",1581,[[],["outtgl_r",6]]],[11,"outtgl","atsamd51g::generic","Bits 0:31 - PORT Data Output Value Toggle",7,[[],["outtgl_w",3]]],[11,"outtgl","atsamd51g::port::group::outtgl","Bits 0:31 - PORT Data Output Value Toggle",1582,[[],["outtgl_w",3]]],[0,"in_","atsamd51g::port::group","Data Input Value",null,null],[6,"R","atsamd51g::port::group::in_","Reader of register IN",null,null],[6,"IN_R","","Reader of field `IN`",null,null],[11,"in_","atsamd51g::generic","Bits 0:31 - PORT Data Input Value",6,[[],["in_r",6]]],[11,"in_","atsamd51g::port::group::in_","Bits 0:31 - PORT Data Input Value",1583,[[],["in_r",6]]],[0,"ctrl","atsamd51g::port::group","Control",null,null],[3,"SAMPLING_W","atsamd51g::port::group::ctrl","Write proxy for field `SAMPLING`",null,null],[6,"R","","Reader of register CTRL",null,null],[6,"W","","Writer for register CTRL",null,null],[6,"SAMPLING_R","","Reader of field `SAMPLING`",null,null],[11,"bits","","Writes raw bits to the field",1584,[[],["w",6]]],[11,"sampling","atsamd51g::generic","Bits 0:31 - Input Sampling Mode",6,[[],["sampling_r",6]]],[11,"sampling","atsamd51g::port::group::ctrl","Bits 0:31 - Input Sampling Mode",1585,[[],["sampling_r",6]]],[11,"sampling","atsamd51g::generic","Bits 0:31 - Input Sampling Mode",7,[[],["sampling_w",3]]],[11,"sampling","atsamd51g::port::group::ctrl","Bits 0:31 - Input Sampling Mode",1586,[[],["sampling_w",3]]],[0,"wrconfig","atsamd51g::port::group","Write Configuration",null,null],[3,"PINMASK_W","atsamd51g::port::group::wrconfig","Write proxy for field `PINMASK`",null,null],[3,"PMUXEN_W","","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[3,"PMUX_W","","Write proxy for field `PMUX`",null,null],[3,"WRPMUX_W","","Write proxy for field `WRPMUX`",null,null],[3,"WRPINCFG_W","","Write proxy for field `WRPINCFG`",null,null],[3,"HWSEL_W","","Write proxy for field `HWSEL`",null,null],[6,"W","","Writer for register WRCONFIG",null,null],[11,"bits","","Writes raw bits to the field",1587,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1588,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1588,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1588,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1589,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1589,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1589,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1590,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1590,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1590,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1591,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1591,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1591,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1592,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1593,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1593,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1593,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1594,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1594,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1594,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1595,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1595,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1595,[[],["w",6]]],[11,"pinmask","atsamd51g::generic","Bits 0:15 - Pin Mask for Multiple Pin Configuration",7,[[],["pinmask_w",3]]],[11,"pmuxen","","Bit 16 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 17 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 18 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 22 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmux","","Bits 24:27 - Peripheral Multiplexing",7,[[],["pmux_w",3]]],[11,"wrpmux","","Bit 28 - Write PMUX",7,[[],["wrpmux_w",3]]],[11,"wrpincfg","","Bit 30 - Write PINCFG",7,[[],["wrpincfg_w",3]]],[11,"hwsel","","Bit 31 - Half-Word Select",7,[[],["hwsel_w",3]]],[11,"pinmask","atsamd51g::port::group::wrconfig","Bits 0:15 - Pin Mask for Multiple Pin Configuration",1596,[[],["pinmask_w",3]]],[11,"pmuxen","","Bit 16 - Peripheral Multiplexer Enable",1596,[[],["pmuxen_w",3]]],[11,"inen","","Bit 17 - Input Enable",1596,[[],["inen_w",3]]],[11,"pullen","","Bit 18 - Pull Enable",1596,[[],["pullen_w",3]]],[11,"drvstr","","Bit 22 - Output Driver Strength Selection",1596,[[],["drvstr_w",3]]],[11,"pmux","","Bits 24:27 - Peripheral Multiplexing",1596,[[],["pmux_w",3]]],[11,"wrpmux","","Bit 28 - Write PMUX",1596,[[],["wrpmux_w",3]]],[11,"wrpincfg","","Bit 30 - Write PINCFG",1596,[[],["wrpincfg_w",3]]],[11,"hwsel","","Bit 31 - Half-Word Select",1596,[[],["hwsel_w",3]]],[0,"evctrl","atsamd51g::port::group","Event Input Control",null,null],[3,"PID0_W","atsamd51g::port::group::evctrl","Write proxy for field `PID0`",null,null],[3,"EVACT0_W","","Write proxy for field `EVACT0`",null,null],[3,"PORTEI0_W","","Write proxy for field `PORTEI0`",null,null],[3,"PID1_W","","Write proxy for field `PID1`",null,null],[3,"EVACT1_W","","Write proxy for field `EVACT1`",null,null],[3,"PORTEI1_W","","Write proxy for field `PORTEI1`",null,null],[3,"PID2_W","","Write proxy for field `PID2`",null,null],[3,"EVACT2_W","","Write proxy for field `EVACT2`",null,null],[3,"PORTEI2_W","","Write proxy for field `PORTEI2`",null,null],[3,"PID3_W","","Write proxy for field `PID3`",null,null],[3,"EVACT3_W","","Write proxy for field `EVACT3`",null,null],[3,"PORTEI3_W","","Write proxy for field `PORTEI3`",null,null],[4,"EVACT0_A","","PORT Event Action 0",null,null],[13,"OUT","","0: Event output to pin",1597,null],[13,"SET","","1: Set output register of pin on event",1597,null],[13,"CLR","","2: Clear output register of pin on event",1597,null],[13,"TGL","","3: Toggle output register of pin on event",1597,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PID0_R","","Reader of field `PID0`",null,null],[6,"EVACT0_R","","Reader of field `EVACT0`",null,null],[6,"PORTEI0_R","","Reader of field `PORTEI0`",null,null],[6,"PID1_R","","Reader of field `PID1`",null,null],[6,"EVACT1_R","","Reader of field `EVACT1`",null,null],[6,"PORTEI1_R","","Reader of field `PORTEI1`",null,null],[6,"PID2_R","","Reader of field `PID2`",null,null],[6,"EVACT2_R","","Reader of field `EVACT2`",null,null],[6,"PORTEI2_R","","Reader of field `PORTEI2`",null,null],[6,"PID3_R","","Reader of field `PID3`",null,null],[6,"EVACT3_R","","Reader of field `EVACT3`",null,null],[6,"PORTEI3_R","","Reader of field `PORTEI3`",null,null],[11,"bits","","Writes raw bits to the field",1598,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact0_a",4]]],[11,"is_out","","Checks if the value of the field is `OUT`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clr","","Checks if the value of the field is `CLR`",6,[[]]],[11,"is_tgl","","Checks if the value of the field is `TGL`",6,[[]]],[11,"variant","atsamd51g::port::group::evctrl","Get enumerated values variant",1599,[[],["evact0_a",4]]],[11,"is_out","","Checks if the value of the field is `OUT`",1599,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",1599,[[]]],[11,"is_clr","","Checks if the value of the field is `CLR`",1599,[[]]],[11,"is_tgl","","Checks if the value of the field is `TGL`",1599,[[]]],[11,"variant","","Writes `variant` to the field",1600,[[["evact0_a",4]],["w",6]]],[11,"out","","Event output to pin",1600,[[],["w",6]]],[11,"set","","Set output register of pin on event",1600,[[],["w",6]]],[11,"clr","","Clear output register of pin on event",1600,[[],["w",6]]],[11,"tgl","","Toggle output register of pin on event",1600,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1600,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1601,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1601,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1601,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1602,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1603,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1604,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1604,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1604,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1605,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1606,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1607,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1607,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1607,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1608,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1609,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1610,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1610,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1610,[[],["w",6]]],[11,"pid0","atsamd51g::generic","Bits 0:4 - PORT Event Pin Identifier 0",6,[[],["pid0_r",6]]],[11,"evact0","","Bits 5:6 - PORT Event Action 0",6,[[],["evact0_r",6]]],[11,"portei0","","Bit 7 - PORT Event Input Enable 0",6,[[],["portei0_r",6]]],[11,"pid1","","Bits 8:12 - PORT Event Pin Identifier 1",6,[[],["pid1_r",6]]],[11,"evact1","","Bits 13:14 - PORT Event Action 1",6,[[],["evact1_r",6]]],[11,"portei1","","Bit 15 - PORT Event Input Enable 1",6,[[],["portei1_r",6]]],[11,"pid2","","Bits 16:20 - PORT Event Pin Identifier 2",6,[[],["pid2_r",6]]],[11,"evact2","","Bits 21:22 - PORT Event Action 2",6,[[],["evact2_r",6]]],[11,"portei2","","Bit 23 - PORT Event Input Enable 2",6,[[],["portei2_r",6]]],[11,"pid3","","Bits 24:28 - PORT Event Pin Identifier 3",6,[[],["pid3_r",6]]],[11,"evact3","","Bits 29:30 - PORT Event Action 3",6,[[],["evact3_r",6]]],[11,"portei3","","Bit 31 - PORT Event Input Enable 3",6,[[],["portei3_r",6]]],[11,"pid0","atsamd51g::port::group::evctrl","Bits 0:4 - PORT Event Pin Identifier 0",1611,[[],["pid0_r",6]]],[11,"evact0","","Bits 5:6 - PORT Event Action 0",1611,[[],["evact0_r",6]]],[11,"portei0","","Bit 7 - PORT Event Input Enable 0",1611,[[],["portei0_r",6]]],[11,"pid1","","Bits 8:12 - PORT Event Pin Identifier 1",1611,[[],["pid1_r",6]]],[11,"evact1","","Bits 13:14 - PORT Event Action 1",1611,[[],["evact1_r",6]]],[11,"portei1","","Bit 15 - PORT Event Input Enable 1",1611,[[],["portei1_r",6]]],[11,"pid2","","Bits 16:20 - PORT Event Pin Identifier 2",1611,[[],["pid2_r",6]]],[11,"evact2","","Bits 21:22 - PORT Event Action 2",1611,[[],["evact2_r",6]]],[11,"portei2","","Bit 23 - PORT Event Input Enable 2",1611,[[],["portei2_r",6]]],[11,"pid3","","Bits 24:28 - PORT Event Pin Identifier 3",1611,[[],["pid3_r",6]]],[11,"evact3","","Bits 29:30 - PORT Event Action 3",1611,[[],["evact3_r",6]]],[11,"portei3","","Bit 31 - PORT Event Input Enable 3",1611,[[],["portei3_r",6]]],[11,"pid0","atsamd51g::generic","Bits 0:4 - PORT Event Pin Identifier 0",7,[[],["pid0_w",3]]],[11,"evact0","","Bits 5:6 - PORT Event Action 0",7,[[],["evact0_w",3]]],[11,"portei0","","Bit 7 - PORT Event Input Enable 0",7,[[],["portei0_w",3]]],[11,"pid1","","Bits 8:12 - PORT Event Pin Identifier 1",7,[[],["pid1_w",3]]],[11,"evact1","","Bits 13:14 - PORT Event Action 1",7,[[],["evact1_w",3]]],[11,"portei1","","Bit 15 - PORT Event Input Enable 1",7,[[],["portei1_w",3]]],[11,"pid2","","Bits 16:20 - PORT Event Pin Identifier 2",7,[[],["pid2_w",3]]],[11,"evact2","","Bits 21:22 - PORT Event Action 2",7,[[],["evact2_w",3]]],[11,"portei2","","Bit 23 - PORT Event Input Enable 2",7,[[],["portei2_w",3]]],[11,"pid3","","Bits 24:28 - PORT Event Pin Identifier 3",7,[[],["pid3_w",3]]],[11,"evact3","","Bits 29:30 - PORT Event Action 3",7,[[],["evact3_w",3]]],[11,"portei3","","Bit 31 - PORT Event Input Enable 3",7,[[],["portei3_w",3]]],[11,"pid0","atsamd51g::port::group::evctrl","Bits 0:4 - PORT Event Pin Identifier 0",1612,[[],["pid0_w",3]]],[11,"evact0","","Bits 5:6 - PORT Event Action 0",1612,[[],["evact0_w",3]]],[11,"portei0","","Bit 7 - PORT Event Input Enable 0",1612,[[],["portei0_w",3]]],[11,"pid1","","Bits 8:12 - PORT Event Pin Identifier 1",1612,[[],["pid1_w",3]]],[11,"evact1","","Bits 13:14 - PORT Event Action 1",1612,[[],["evact1_w",3]]],[11,"portei1","","Bit 15 - PORT Event Input Enable 1",1612,[[],["portei1_w",3]]],[11,"pid2","","Bits 16:20 - PORT Event Pin Identifier 2",1612,[[],["pid2_w",3]]],[11,"evact2","","Bits 21:22 - PORT Event Action 2",1612,[[],["evact2_w",3]]],[11,"portei2","","Bit 23 - PORT Event Input Enable 2",1612,[[],["portei2_w",3]]],[11,"pid3","","Bits 24:28 - PORT Event Pin Identifier 3",1612,[[],["pid3_w",3]]],[11,"evact3","","Bits 29:30 - PORT Event Action 3",1612,[[],["evact3_w",3]]],[11,"portei3","","Bit 31 - PORT Event Input Enable 3",1612,[[],["portei3_w",3]]],[0,"pmux","atsamd51g::port::group","Peripheral Multiplexing",null,null],[3,"PMUXE_W","atsamd51g::port::group::pmux","Write proxy for field `PMUXE`",null,null],[3,"PMUXO_W","","Write proxy for field `PMUXO`",null,null],[6,"R","","Reader of register PMUX[%s]",null,null],[6,"W","","Writer for register PMUX[%s]",null,null],[6,"PMUXE_R","","Reader of field `PMUXE`",null,null],[6,"PMUXO_R","","Reader of field `PMUXO`",null,null],[11,"bits","","Writes raw bits to the field",1613,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1614,[[],["w",6]]],[11,"pmuxe","atsamd51g::generic","Bits 0:3 - Peripheral Multiplexing for Even-Numbered Pin",6,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin",6,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd51g::port::group::pmux","Bits 0:3 - Peripheral Multiplexing for Even-Numbered Pin",1615,[[],["pmuxe_r",6]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin",1615,[[],["pmuxo_r",6]]],[11,"pmuxe","atsamd51g::generic","Bits 0:3 - Peripheral Multiplexing for Even-Numbered Pin",7,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin",7,[[],["pmuxo_w",3]]],[11,"pmuxe","atsamd51g::port::group::pmux","Bits 0:3 - Peripheral Multiplexing for Even-Numbered Pin",1616,[[],["pmuxe_w",3]]],[11,"pmuxo","","Bits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin",1616,[[],["pmuxo_w",3]]],[0,"pincfg","atsamd51g::port::group","Pin Configuration",null,null],[3,"PMUXEN_W","atsamd51g::port::group::pincfg","Write proxy for field `PMUXEN`",null,null],[3,"INEN_W","","Write proxy for field `INEN`",null,null],[3,"PULLEN_W","","Write proxy for field `PULLEN`",null,null],[3,"DRVSTR_W","","Write proxy for field `DRVSTR`",null,null],[6,"R","","Reader of register PINCFG[%s]",null,null],[6,"W","","Writer for register PINCFG[%s]",null,null],[6,"PMUXEN_R","","Reader of field `PMUXEN`",null,null],[6,"INEN_R","","Reader of field `INEN`",null,null],[6,"PULLEN_R","","Reader of field `PULLEN`",null,null],[6,"DRVSTR_R","","Reader of field `DRVSTR`",null,null],[11,"set_bit","","Sets the field bit",1617,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1617,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1617,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1619,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1619,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1619,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1620,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1620,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1620,[[],["w",6]]],[11,"pmuxen","atsamd51g::generic","Bit 0 - Peripheral Multiplexer Enable",6,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",6,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",6,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",6,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd51g::port::group::pincfg","Bit 0 - Peripheral Multiplexer Enable",1621,[[],["pmuxen_r",6]]],[11,"inen","","Bit 1 - Input Enable",1621,[[],["inen_r",6]]],[11,"pullen","","Bit 2 - Pull Enable",1621,[[],["pullen_r",6]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",1621,[[],["drvstr_r",6]]],[11,"pmuxen","atsamd51g::generic","Bit 0 - Peripheral Multiplexer Enable",7,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",7,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",7,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",7,[[],["drvstr_w",3]]],[11,"pmuxen","atsamd51g::port::group::pincfg","Bit 0 - Peripheral Multiplexer Enable",1622,[[],["pmuxen_w",3]]],[11,"inen","","Bit 1 - Input Enable",1622,[[],["inen_w",3]]],[11,"pullen","","Bit 2 - Pull Enable",1622,[[],["pullen_w",3]]],[11,"drvstr","","Bit 6 - Output Driver Strength Selection",1622,[[],["drvstr_w",3]]],[6,"DIR","atsamd51g::port::group","Data Direction",null,null],[6,"DIRCLR","","Data Direction Clear",null,null],[6,"DIRSET","","Data Direction Set",null,null],[6,"DIRTGL","","Data Direction Toggle",null,null],[6,"OUT","","Data Output Value",null,null],[6,"OUTCLR","","Data Output Value Clear",null,null],[6,"OUTSET","","Data Output Value Set",null,null],[6,"OUTTGL","","Data Output Value Toggle",null,null],[6,"IN","","Data Input Value",null,null],[6,"CTRL","","Control",null,null],[6,"WRCONFIG","","Write Configuration",null,null],[6,"EVCTRL","","Event Input Control",null,null],[6,"PMUX","","Peripheral Multiplexing",null,null],[6,"PINCFG","","Pin Configuration",null,null],[0,"qspi","atsamd51g","Quad SPI interface",null,null],[3,"RegisterBlock","atsamd51g::qspi","Register block",null,null],[12,"ctrla","","0x00 - Control A",1623,null],[12,"ctrlb","","0x04 - Control B",1623,null],[12,"baud","","0x08 - Baud Rate",1623,null],[12,"rxdata","","0x0c - Receive Data",1623,null],[12,"txdata","","0x10 - Transmit Data",1623,null],[12,"intenclr","","0x14 - Interrupt Enable Clear",1623,null],[12,"intenset","","0x18 - Interrupt Enable Set",1623,null],[12,"intflag","","0x1c - Interrupt Flag Status and Clear",1623,null],[12,"status","","0x20 - Status Register",1623,null],[12,"instraddr","","0x30 - Instruction Address",1623,null],[12,"instrctrl","","0x34 - Instruction Code",1623,null],[12,"instrframe","","0x38 - Instruction Frame",1623,null],[12,"scrambctrl","","0x40 - Scrambling Mode",1623,null],[12,"scrambkey","","0x44 - Scrambling Key",1623,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::qspi::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"LASTXFER_W","","Write proxy for field `LASTXFER`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"LASTXFER_R","","Reader of field `LASTXFER`",null,null],[11,"set_bit","","Sets the field bit",1624,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1624,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1624,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1625,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1625,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1625,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1626,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1626,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1626,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"lastxfer","","Bit 24 - Last Transfer",6,[[],["lastxfer_r",6]]],[11,"swrst","atsamd51g::qspi::ctrla","Bit 0 - Software Reset",1627,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1627,[[],["enable_r",6]]],[11,"lastxfer","","Bit 24 - Last Transfer",1627,[[],["lastxfer_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"lastxfer","","Bit 24 - Last Transfer",7,[[],["lastxfer_w",3]]],[11,"swrst","atsamd51g::qspi::ctrla","Bit 0 - Software Reset",1628,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1628,[[],["enable_w",3]]],[11,"lastxfer","","Bit 24 - Last Transfer",1628,[[],["lastxfer_w",3]]],[0,"ctrlb","atsamd51g::qspi","Control B",null,null],[3,"MODE_W","atsamd51g::qspi::ctrlb","Write proxy for field `MODE`",null,null],[3,"LOOPEN_W","","Write proxy for field `LOOPEN`",null,null],[3,"WDRBT_W","","Write proxy for field `WDRBT`",null,null],[3,"SMEMREG_W","","Write proxy for field `SMEMREG`",null,null],[3,"CSMODE_W","","Write proxy for field `CSMODE`",null,null],[3,"DATALEN_W","","Write proxy for field `DATALEN`",null,null],[3,"DLYBCT_W","","Write proxy for field `DLYBCT`",null,null],[3,"DLYCS_W","","Write proxy for field `DLYCS`",null,null],[4,"MODE_A","","Serial Memory Mode",null,null],[13,"SPI","","0: SPI operating mode",1629,null],[13,"MEMORY","","1: Serial Memory operating mode",1629,null],[4,"CSMODE_A","","Chip Select Mode",null,null],[13,"NORELOAD","","0: The chip select is deasserted if TD has not been…",1630,null],[13,"LASTXFER","","1: The chip select is deasserted when the bit LASTXFER is…",1630,null],[13,"SYSTEMATICALLY","","2: The chip select is deasserted systematically after each…",1630,null],[4,"DATALEN_A","","Data Length",null,null],[13,"_8BITS","","0: 8-bits transfer",1631,null],[13,"_9BITS","","1: 9 bits transfer",1631,null],[13,"_10BITS","","2: 10-bits transfer",1631,null],[13,"_11BITS","","3: 11-bits transfer",1631,null],[13,"_12BITS","","4: 12-bits transfer",1631,null],[13,"_13BITS","","5: 13-bits transfer",1631,null],[13,"_14BITS","","6: 14-bits transfer",1631,null],[13,"_15BITS","","7: 15-bits transfer",1631,null],[13,"_16BITS","","8: 16-bits transfer",1631,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"LOOPEN_R","","Reader of field `LOOPEN`",null,null],[6,"WDRBT_R","","Reader of field `WDRBT`",null,null],[6,"SMEMREG_R","","Reader of field `SMEMREG`",null,null],[6,"CSMODE_R","","Reader of field `CSMODE`",null,null],[6,"DATALEN_R","","Reader of field `DATALEN`",null,null],[6,"DLYBCT_R","","Reader of field `DLYBCT`",null,null],[6,"DLYCS_R","","Reader of field `DLYCS`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["mode_a",4]]],[11,"is_spi","","Checks if the value of the field is `SPI`",6,[[]]],[11,"is_memory","","Checks if the value of the field is `MEMORY`",6,[[]]],[11,"variant","atsamd51g::qspi::ctrlb","Get enumerated values variant",1632,[[],["mode_a",4]]],[11,"is_spi","","Checks if the value of the field is `SPI`",1632,[[]]],[11,"is_memory","","Checks if the value of the field is `MEMORY`",1632,[[]]],[11,"variant","","Writes `variant` to the field",1633,[[["mode_a",4]],["w",6]]],[11,"spi","","SPI operating mode",1633,[[],["w",6]]],[11,"memory","","Serial Memory operating mode",1633,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1633,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1633,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1633,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1634,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1634,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1634,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1635,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1635,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1635,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1636,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1636,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1636,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["csmode_a",4]]]],[11,"is_noreload","","Checks if the value of the field is `NORELOAD`",6,[[]]],[11,"is_lastxfer","","Checks if the value of the field is `LASTXFER`",6,[[]]],[11,"is_systematically","","Checks if the value of the field is `SYSTEMATICALLY`",6,[[]]],[11,"variant","atsamd51g::qspi::ctrlb","Get enumerated values variant",1637,[[],[["variant",4],["csmode_a",4]]]],[11,"is_noreload","","Checks if the value of the field is `NORELOAD`",1637,[[]]],[11,"is_lastxfer","","Checks if the value of the field is `LASTXFER`",1637,[[]]],[11,"is_systematically","","Checks if the value of the field is `SYSTEMATICALLY`",1637,[[]]],[11,"variant","","Writes `variant` to the field",1638,[[["csmode_a",4]],["w",6]]],[11,"noreload","","The chip select is deasserted if TD has not been reloaded…",1638,[[],["w",6]]],[11,"lastxfer","","The chip select is deasserted when the bit LASTXFER is…",1638,[[],["w",6]]],[11,"systematically","","The chip select is deasserted systematically after each…",1638,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1638,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["datalen_a",4]]]],[11,"is_8bits","","Checks if the value of the field is `_8BITS`",6,[[]]],[11,"is_9bits","","Checks if the value of the field is `_9BITS`",6,[[]]],[11,"is_10bits","","Checks if the value of the field is `_10BITS`",6,[[]]],[11,"is_11bits","","Checks if the value of the field is `_11BITS`",6,[[]]],[11,"is_12bits","","Checks if the value of the field is `_12BITS`",6,[[]]],[11,"is_13bits","","Checks if the value of the field is `_13BITS`",6,[[]]],[11,"is_14bits","","Checks if the value of the field is `_14BITS`",6,[[]]],[11,"is_15bits","","Checks if the value of the field is `_15BITS`",6,[[]]],[11,"is_16bits","","Checks if the value of the field is `_16BITS`",6,[[]]],[11,"variant","atsamd51g::qspi::ctrlb","Get enumerated values variant",1639,[[],[["variant",4],["datalen_a",4]]]],[11,"is_8bits","","Checks if the value of the field is `_8BITS`",1639,[[]]],[11,"is_9bits","","Checks if the value of the field is `_9BITS`",1639,[[]]],[11,"is_10bits","","Checks if the value of the field is `_10BITS`",1639,[[]]],[11,"is_11bits","","Checks if the value of the field is `_11BITS`",1639,[[]]],[11,"is_12bits","","Checks if the value of the field is `_12BITS`",1639,[[]]],[11,"is_13bits","","Checks if the value of the field is `_13BITS`",1639,[[]]],[11,"is_14bits","","Checks if the value of the field is `_14BITS`",1639,[[]]],[11,"is_15bits","","Checks if the value of the field is `_15BITS`",1639,[[]]],[11,"is_16bits","","Checks if the value of the field is `_16BITS`",1639,[[]]],[11,"variant","","Writes `variant` to the field",1640,[[["datalen_a",4]],["w",6]]],[11,"_8bits","","8-bits transfer",1640,[[],["w",6]]],[11,"_9bits","","9 bits transfer",1640,[[],["w",6]]],[11,"_10bits","","10-bits transfer",1640,[[],["w",6]]],[11,"_11bits","","11-bits transfer",1640,[[],["w",6]]],[11,"_12bits","","12-bits transfer",1640,[[],["w",6]]],[11,"_13bits","","13-bits transfer",1640,[[],["w",6]]],[11,"_14bits","","14-bits transfer",1640,[[],["w",6]]],[11,"_15bits","","15-bits transfer",1640,[[],["w",6]]],[11,"_16bits","","16-bits transfer",1640,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1640,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1641,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1642,[[],["w",6]]],[11,"mode","atsamd51g::generic","Bit 0 - Serial Memory Mode",6,[[],["mode_r",6]]],[11,"loopen","","Bit 1 - Local Loopback Enable",6,[[],["loopen_r",6]]],[11,"wdrbt","","Bit 2 - Wait Data Read Before Transfer",6,[[],["wdrbt_r",6]]],[11,"smemreg","","Bit 3 - Serial Memory reg",6,[[],["smemreg_r",6]]],[11,"csmode","","Bits 4:5 - Chip Select Mode",6,[[],["csmode_r",6]]],[11,"datalen","","Bits 8:11 - Data Length",6,[[],["datalen_r",6]]],[11,"dlybct","","Bits 16:23 - Delay Between Consecutive Transfers",6,[[],["dlybct_r",6]]],[11,"dlycs","","Bits 24:31 - Minimum Inactive CS Delay",6,[[],["dlycs_r",6]]],[11,"mode","atsamd51g::qspi::ctrlb","Bit 0 - Serial Memory Mode",1643,[[],["mode_r",6]]],[11,"loopen","","Bit 1 - Local Loopback Enable",1643,[[],["loopen_r",6]]],[11,"wdrbt","","Bit 2 - Wait Data Read Before Transfer",1643,[[],["wdrbt_r",6]]],[11,"smemreg","","Bit 3 - Serial Memory reg",1643,[[],["smemreg_r",6]]],[11,"csmode","","Bits 4:5 - Chip Select Mode",1643,[[],["csmode_r",6]]],[11,"datalen","","Bits 8:11 - Data Length",1643,[[],["datalen_r",6]]],[11,"dlybct","","Bits 16:23 - Delay Between Consecutive Transfers",1643,[[],["dlybct_r",6]]],[11,"dlycs","","Bits 24:31 - Minimum Inactive CS Delay",1643,[[],["dlycs_r",6]]],[11,"mode","atsamd51g::generic","Bit 0 - Serial Memory Mode",7,[[],["mode_w",3]]],[11,"loopen","","Bit 1 - Local Loopback Enable",7,[[],["loopen_w",3]]],[11,"wdrbt","","Bit 2 - Wait Data Read Before Transfer",7,[[],["wdrbt_w",3]]],[11,"smemreg","","Bit 3 - Serial Memory reg",7,[[],["smemreg_w",3]]],[11,"csmode","","Bits 4:5 - Chip Select Mode",7,[[],["csmode_w",3]]],[11,"datalen","","Bits 8:11 - Data Length",7,[[],["datalen_w",3]]],[11,"dlybct","","Bits 16:23 - Delay Between Consecutive Transfers",7,[[],["dlybct_w",3]]],[11,"dlycs","","Bits 24:31 - Minimum Inactive CS Delay",7,[[],["dlycs_w",3]]],[11,"mode","atsamd51g::qspi::ctrlb","Bit 0 - Serial Memory Mode",1644,[[],["mode_w",3]]],[11,"loopen","","Bit 1 - Local Loopback Enable",1644,[[],["loopen_w",3]]],[11,"wdrbt","","Bit 2 - Wait Data Read Before Transfer",1644,[[],["wdrbt_w",3]]],[11,"smemreg","","Bit 3 - Serial Memory reg",1644,[[],["smemreg_w",3]]],[11,"csmode","","Bits 4:5 - Chip Select Mode",1644,[[],["csmode_w",3]]],[11,"datalen","","Bits 8:11 - Data Length",1644,[[],["datalen_w",3]]],[11,"dlybct","","Bits 16:23 - Delay Between Consecutive Transfers",1644,[[],["dlybct_w",3]]],[11,"dlycs","","Bits 24:31 - Minimum Inactive CS Delay",1644,[[],["dlycs_w",3]]],[0,"baud","atsamd51g::qspi","Baud Rate",null,null],[3,"CPOL_W","atsamd51g::qspi::baud","Write proxy for field `CPOL`",null,null],[3,"CPHA_W","","Write proxy for field `CPHA`",null,null],[3,"BAUD_W","","Write proxy for field `BAUD`",null,null],[3,"DLYBS_W","","Write proxy for field `DLYBS`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"CPHA_R","","Reader of field `CPHA`",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"DLYBS_R","","Reader of field `DLYBS`",null,null],[11,"set_bit","","Sets the field bit",1645,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1645,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1645,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1646,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1646,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1646,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1647,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1648,[[],["w",6]]],[11,"cpol","atsamd51g::generic","Bit 0 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"cpha","","Bit 1 - Clock Phase",6,[[],["cpha_r",6]]],[11,"baud","","Bits 8:15 - Serial Clock Baud Rate",6,[[],["baud_r",6]]],[11,"dlybs","","Bits 16:23 - Delay Before SCK",6,[[],["dlybs_r",6]]],[11,"cpol","atsamd51g::qspi::baud","Bit 0 - Clock Polarity",1649,[[],["cpol_r",6]]],[11,"cpha","","Bit 1 - Clock Phase",1649,[[],["cpha_r",6]]],[11,"baud","","Bits 8:15 - Serial Clock Baud Rate",1649,[[],["baud_r",6]]],[11,"dlybs","","Bits 16:23 - Delay Before SCK",1649,[[],["dlybs_r",6]]],[11,"cpol","atsamd51g::generic","Bit 0 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"cpha","","Bit 1 - Clock Phase",7,[[],["cpha_w",3]]],[11,"baud","","Bits 8:15 - Serial Clock Baud Rate",7,[[],["baud_w",3]]],[11,"dlybs","","Bits 16:23 - Delay Before SCK",7,[[],["dlybs_w",3]]],[11,"cpol","atsamd51g::qspi::baud","Bit 0 - Clock Polarity",1650,[[],["cpol_w",3]]],[11,"cpha","","Bit 1 - Clock Phase",1650,[[],["cpha_w",3]]],[11,"baud","","Bits 8:15 - Serial Clock Baud Rate",1650,[[],["baud_w",3]]],[11,"dlybs","","Bits 16:23 - Delay Before SCK",1650,[[],["dlybs_w",3]]],[0,"rxdata","atsamd51g::qspi","Receive Data",null,null],[6,"R","atsamd51g::qspi::rxdata","Reader of register RXDATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"data","atsamd51g::generic","Bits 0:15 - Receive Data",6,[[],["data_r",6]]],[11,"data","atsamd51g::qspi::rxdata","Bits 0:15 - Receive Data",1651,[[],["data_r",6]]],[0,"txdata","atsamd51g::qspi","Transmit Data",null,null],[3,"DATA_W","atsamd51g::qspi::txdata","Write proxy for field `DATA`",null,null],[6,"W","","Writer for register TXDATA",null,null],[11,"bits","","Writes raw bits to the field",1652,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:15 - Transmit Data",7,[[],["data_w",3]]],[11,"data","atsamd51g::qspi::txdata","Bits 0:15 - Transmit Data",1653,[[],["data_w",3]]],[0,"intenclr","atsamd51g::qspi","Interrupt Enable Clear",null,null],[3,"RXC_W","atsamd51g::qspi::intenclr","Write proxy for field `RXC`",null,null],[3,"DRE_W","","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[3,"CSRISE_W","","Write proxy for field `CSRISE`",null,null],[3,"INSTREND_W","","Write proxy for field `INSTREND`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[6,"CSRISE_R","","Reader of field `CSRISE`",null,null],[6,"INSTREND_R","","Reader of field `INSTREND`",null,null],[11,"set_bit","","Sets the field bit",1654,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1654,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1654,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1655,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1655,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1655,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1656,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1656,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1656,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1657,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1657,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1657,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1658,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1658,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1658,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1659,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1659,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1659,[[],["w",6]]],[11,"rxc","atsamd51g::generic","Bit 0 - Receive Data Register Full Interrupt Disable",6,[[],["rxc_r",6]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"error","","Bit 3 - Overrun Error Interrupt Disable",6,[[],["error_r",6]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Disable",6,[[],["csrise_r",6]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Disable",6,[[],["instrend_r",6]]],[11,"rxc","atsamd51g::qspi::intenclr","Bit 0 - Receive Data Register Full Interrupt Disable",1660,[[],["rxc_r",6]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Disable",1660,[[],["dre_r",6]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Disable",1660,[[],["txc_r",6]]],[11,"error","","Bit 3 - Overrun Error Interrupt Disable",1660,[[],["error_r",6]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Disable",1660,[[],["csrise_r",6]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Disable",1660,[[],["instrend_r",6]]],[11,"rxc","atsamd51g::generic","Bit 0 - Receive Data Register Full Interrupt Disable",7,[[],["rxc_w",3]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"error","","Bit 3 - Overrun Error Interrupt Disable",7,[[],["error_w",3]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Disable",7,[[],["csrise_w",3]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Disable",7,[[],["instrend_w",3]]],[11,"rxc","atsamd51g::qspi::intenclr","Bit 0 - Receive Data Register Full Interrupt Disable",1661,[[],["rxc_w",3]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Disable",1661,[[],["dre_w",3]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Disable",1661,[[],["txc_w",3]]],[11,"error","","Bit 3 - Overrun Error Interrupt Disable",1661,[[],["error_w",3]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Disable",1661,[[],["csrise_w",3]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Disable",1661,[[],["instrend_w",3]]],[0,"intenset","atsamd51g::qspi","Interrupt Enable Set",null,null],[3,"RXC_W","atsamd51g::qspi::intenset","Write proxy for field `RXC`",null,null],[3,"DRE_W","","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[3,"CSRISE_W","","Write proxy for field `CSRISE`",null,null],[3,"INSTREND_W","","Write proxy for field `INSTREND`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[6,"CSRISE_R","","Reader of field `CSRISE`",null,null],[6,"INSTREND_R","","Reader of field `INSTREND`",null,null],[11,"set_bit","","Sets the field bit",1662,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1662,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1662,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1663,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1663,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1663,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1664,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1664,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1664,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1665,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1665,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1665,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1666,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1667,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1667,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1667,[[],["w",6]]],[11,"rxc","atsamd51g::generic","Bit 0 - Receive Data Register Full Interrupt Enable",6,[[],["rxc_r",6]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"error","","Bit 3 - Overrun Error Interrupt Enable",6,[[],["error_r",6]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Enable",6,[[],["csrise_r",6]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Enable",6,[[],["instrend_r",6]]],[11,"rxc","atsamd51g::qspi::intenset","Bit 0 - Receive Data Register Full Interrupt Enable",1668,[[],["rxc_r",6]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Enable",1668,[[],["dre_r",6]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Enable",1668,[[],["txc_r",6]]],[11,"error","","Bit 3 - Overrun Error Interrupt Enable",1668,[[],["error_r",6]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Enable",1668,[[],["csrise_r",6]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Enable",1668,[[],["instrend_r",6]]],[11,"rxc","atsamd51g::generic","Bit 0 - Receive Data Register Full Interrupt Enable",7,[[],["rxc_w",3]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"error","","Bit 3 - Overrun Error Interrupt Enable",7,[[],["error_w",3]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Enable",7,[[],["csrise_w",3]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Enable",7,[[],["instrend_w",3]]],[11,"rxc","atsamd51g::qspi::intenset","Bit 0 - Receive Data Register Full Interrupt Enable",1669,[[],["rxc_w",3]]],[11,"dre","","Bit 1 - Transmit Data Register Empty Interrupt Enable",1669,[[],["dre_w",3]]],[11,"txc","","Bit 2 - Transmission Complete Interrupt Enable",1669,[[],["txc_w",3]]],[11,"error","","Bit 3 - Overrun Error Interrupt Enable",1669,[[],["error_w",3]]],[11,"csrise","","Bit 8 - Chip Select Rise Interrupt Enable",1669,[[],["csrise_w",3]]],[11,"instrend","","Bit 10 - Instruction End Interrupt Enable",1669,[[],["instrend_w",3]]],[0,"intflag","atsamd51g::qspi","Interrupt Flag Status and Clear",null,null],[3,"RXC_W","atsamd51g::qspi::intflag","Write proxy for field `RXC`",null,null],[3,"DRE_W","","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[3,"CSRISE_W","","Write proxy for field `CSRISE`",null,null],[3,"INSTREND_W","","Write proxy for field `INSTREND`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[6,"CSRISE_R","","Reader of field `CSRISE`",null,null],[6,"INSTREND_R","","Reader of field `INSTREND`",null,null],[11,"set_bit","","Sets the field bit",1670,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1670,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1670,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1671,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1671,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1671,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1672,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1672,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1672,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1673,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1673,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1673,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1674,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1674,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1674,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1675,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1675,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1675,[[],["w",6]]],[11,"rxc","atsamd51g::generic","Bit 0 - Receive Data Register Full",6,[[],["rxc_r",6]]],[11,"dre","","Bit 1 - Transmit Data Register Empty",6,[[],["dre_r",6]]],[11,"txc","","Bit 2 - Transmission Complete",6,[[],["txc_r",6]]],[11,"error","","Bit 3 - Overrun Error",6,[[],["error_r",6]]],[11,"csrise","","Bit 8 - Chip Select Rise",6,[[],["csrise_r",6]]],[11,"instrend","","Bit 10 - Instruction End",6,[[],["instrend_r",6]]],[11,"rxc","atsamd51g::qspi::intflag","Bit 0 - Receive Data Register Full",1676,[[],["rxc_r",6]]],[11,"dre","","Bit 1 - Transmit Data Register Empty",1676,[[],["dre_r",6]]],[11,"txc","","Bit 2 - Transmission Complete",1676,[[],["txc_r",6]]],[11,"error","","Bit 3 - Overrun Error",1676,[[],["error_r",6]]],[11,"csrise","","Bit 8 - Chip Select Rise",1676,[[],["csrise_r",6]]],[11,"instrend","","Bit 10 - Instruction End",1676,[[],["instrend_r",6]]],[11,"rxc","atsamd51g::generic","Bit 0 - Receive Data Register Full",7,[[],["rxc_w",3]]],[11,"dre","","Bit 1 - Transmit Data Register Empty",7,[[],["dre_w",3]]],[11,"txc","","Bit 2 - Transmission Complete",7,[[],["txc_w",3]]],[11,"error","","Bit 3 - Overrun Error",7,[[],["error_w",3]]],[11,"csrise","","Bit 8 - Chip Select Rise",7,[[],["csrise_w",3]]],[11,"instrend","","Bit 10 - Instruction End",7,[[],["instrend_w",3]]],[11,"rxc","atsamd51g::qspi::intflag","Bit 0 - Receive Data Register Full",1677,[[],["rxc_w",3]]],[11,"dre","","Bit 1 - Transmit Data Register Empty",1677,[[],["dre_w",3]]],[11,"txc","","Bit 2 - Transmission Complete",1677,[[],["txc_w",3]]],[11,"error","","Bit 3 - Overrun Error",1677,[[],["error_w",3]]],[11,"csrise","","Bit 8 - Chip Select Rise",1677,[[],["csrise_w",3]]],[11,"instrend","","Bit 10 - Instruction End",1677,[[],["instrend_w",3]]],[0,"status","atsamd51g::qspi","Status Register",null,null],[6,"R","atsamd51g::qspi::status","Reader of register STATUS",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CSSTATUS_R","","Reader of field `CSSTATUS`",null,null],[11,"enable","atsamd51g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"csstatus","","Bit 9 - Chip Select",6,[[],["csstatus_r",6]]],[11,"enable","atsamd51g::qspi::status","Bit 1 - Enable",1678,[[],["enable_r",6]]],[11,"csstatus","","Bit 9 - Chip Select",1678,[[],["csstatus_r",6]]],[0,"instraddr","atsamd51g::qspi","Instruction Address",null,null],[3,"ADDR_W","atsamd51g::qspi::instraddr","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register INSTRADDR",null,null],[6,"W","","Writer for register INSTRADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",1679,[[],["w",6]]],[11,"addr","atsamd51g::generic","Bits 0:31 - Instruction Address",6,[[],["addr_r",6]]],[11,"addr","atsamd51g::qspi::instraddr","Bits 0:31 - Instruction Address",1680,[[],["addr_r",6]]],[11,"addr","atsamd51g::generic","Bits 0:31 - Instruction Address",7,[[],["addr_w",3]]],[11,"addr","atsamd51g::qspi::instraddr","Bits 0:31 - Instruction Address",1681,[[],["addr_w",3]]],[0,"instrctrl","atsamd51g::qspi","Instruction Code",null,null],[3,"INSTR_W","atsamd51g::qspi::instrctrl","Write proxy for field `INSTR`",null,null],[3,"OPTCODE_W","","Write proxy for field `OPTCODE`",null,null],[6,"R","","Reader of register INSTRCTRL",null,null],[6,"W","","Writer for register INSTRCTRL",null,null],[6,"INSTR_R","","Reader of field `INSTR`",null,null],[6,"OPTCODE_R","","Reader of field `OPTCODE`",null,null],[11,"bits","","Writes raw bits to the field",1682,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1683,[[],["w",6]]],[11,"instr","atsamd51g::generic","Bits 0:7 - Instruction Code",6,[[],["instr_r",6]]],[11,"optcode","","Bits 16:23 - Option Code",6,[[],["optcode_r",6]]],[11,"instr","atsamd51g::qspi::instrctrl","Bits 0:7 - Instruction Code",1684,[[],["instr_r",6]]],[11,"optcode","","Bits 16:23 - Option Code",1684,[[],["optcode_r",6]]],[11,"instr","atsamd51g::generic","Bits 0:7 - Instruction Code",7,[[],["instr_w",3]]],[11,"optcode","","Bits 16:23 - Option Code",7,[[],["optcode_w",3]]],[11,"instr","atsamd51g::qspi::instrctrl","Bits 0:7 - Instruction Code",1685,[[],["instr_w",3]]],[11,"optcode","","Bits 16:23 - Option Code",1685,[[],["optcode_w",3]]],[0,"instrframe","atsamd51g::qspi","Instruction Frame",null,null],[3,"WIDTH_W","atsamd51g::qspi::instrframe","Write proxy for field `WIDTH`",null,null],[3,"INSTREN_W","","Write proxy for field `INSTREN`",null,null],[3,"ADDREN_W","","Write proxy for field `ADDREN`",null,null],[3,"OPTCODEEN_W","","Write proxy for field `OPTCODEEN`",null,null],[3,"DATAEN_W","","Write proxy for field `DATAEN`",null,null],[3,"OPTCODELEN_W","","Write proxy for field `OPTCODELEN`",null,null],[3,"ADDRLEN_W","","Write proxy for field `ADDRLEN`",null,null],[3,"TFRTYPE_W","","Write proxy for field `TFRTYPE`",null,null],[3,"CRMODE_W","","Write proxy for field `CRMODE`",null,null],[3,"DDREN_W","","Write proxy for field `DDREN`",null,null],[3,"DUMMYLEN_W","","Write proxy for field `DUMMYLEN`",null,null],[4,"WIDTH_A","","Instruction Code, Address, Option Code and Data Width",null,null],[13,"SINGLE_BIT_SPI","","0: Instruction: Single-bit SPI / Address-Option:…",1686,null],[13,"DUAL_OUTPUT","","1: Instruction: Single-bit SPI / Address-Option:…",1686,null],[13,"QUAD_OUTPUT","","2: Instruction: Single-bit SPI / Address-Option:…",1686,null],[13,"DUAL_IO","","3: Instruction: Single-bit SPI / Address-Option: Dual SPI…",1686,null],[13,"QUAD_IO","","4: Instruction: Single-bit SPI / Address-Option: Quad SPI…",1686,null],[13,"DUAL_CMD","","5: Instruction: Dual SPI / Address-Option: Dual SPI /…",1686,null],[13,"QUAD_CMD","","6: Instruction: Quad SPI / Address-Option: Quad SPI /…",1686,null],[4,"OPTCODELEN_A","","Option Code Length",null,null],[13,"_1BIT","","0: 1-bit length option code",1687,null],[13,"_2BITS","","1: 2-bits length option code",1687,null],[13,"_4BITS","","2: 4-bits length option code",1687,null],[13,"_8BITS","","3: 8-bits length option code",1687,null],[4,"ADDRLEN_A","","Address Length",null,null],[13,"_24BITS","","0: 24-bits address length",1688,null],[13,"_32BITS","","1: 32-bits address length",1688,null],[4,"TFRTYPE_A","","Data Transfer Type",null,null],[13,"READ","","0: Read transfer from the serial memory.Scrambling is not…",1689,null],[13,"READMEMORY","","1: Read data transfer from the serial memory.If enabled,…",1689,null],[13,"WRITE","","2: Write transfer into the serial memory.Scrambling is not…",1689,null],[13,"WRITEMEMORY","","3: Write data transfer into the serial memory.If enabled,…",1689,null],[6,"R","","Reader of register INSTRFRAME",null,null],[6,"W","","Writer for register INSTRFRAME",null,null],[6,"WIDTH_R","","Reader of field `WIDTH`",null,null],[6,"INSTREN_R","","Reader of field `INSTREN`",null,null],[6,"ADDREN_R","","Reader of field `ADDREN`",null,null],[6,"OPTCODEEN_R","","Reader of field `OPTCODEEN`",null,null],[6,"DATAEN_R","","Reader of field `DATAEN`",null,null],[6,"OPTCODELEN_R","","Reader of field `OPTCODELEN`",null,null],[6,"ADDRLEN_R","","Reader of field `ADDRLEN`",null,null],[6,"TFRTYPE_R","","Reader of field `TFRTYPE`",null,null],[6,"CRMODE_R","","Reader of field `CRMODE`",null,null],[6,"DDREN_R","","Reader of field `DDREN`",null,null],[6,"DUMMYLEN_R","","Reader of field `DUMMYLEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["width_a",4]]]],[11,"is_single_bit_spi","","Checks if the value of the field is `SINGLE_BIT_SPI`",6,[[]]],[11,"is_dual_output","","Checks if the value of the field is `DUAL_OUTPUT`",6,[[]]],[11,"is_quad_output","","Checks if the value of the field is `QUAD_OUTPUT`",6,[[]]],[11,"is_dual_io","","Checks if the value of the field is `DUAL_IO`",6,[[]]],[11,"is_quad_io","","Checks if the value of the field is `QUAD_IO`",6,[[]]],[11,"is_dual_cmd","","Checks if the value of the field is `DUAL_CMD`",6,[[]]],[11,"is_quad_cmd","","Checks if the value of the field is `QUAD_CMD`",6,[[]]],[11,"variant","atsamd51g::qspi::instrframe","Get enumerated values variant",1690,[[],[["variant",4],["width_a",4]]]],[11,"is_single_bit_spi","","Checks if the value of the field is `SINGLE_BIT_SPI`",1690,[[]]],[11,"is_dual_output","","Checks if the value of the field is `DUAL_OUTPUT`",1690,[[]]],[11,"is_quad_output","","Checks if the value of the field is `QUAD_OUTPUT`",1690,[[]]],[11,"is_dual_io","","Checks if the value of the field is `DUAL_IO`",1690,[[]]],[11,"is_quad_io","","Checks if the value of the field is `QUAD_IO`",1690,[[]]],[11,"is_dual_cmd","","Checks if the value of the field is `DUAL_CMD`",1690,[[]]],[11,"is_quad_cmd","","Checks if the value of the field is `QUAD_CMD`",1690,[[]]],[11,"variant","","Writes `variant` to the field",1691,[[["width_a",4]],["w",6]]],[11,"single_bit_spi","","Instruction: Single-bit SPI / Address-Option: Single-bit…",1691,[[],["w",6]]],[11,"dual_output","","Instruction: Single-bit SPI / Address-Option: Single-bit…",1691,[[],["w",6]]],[11,"quad_output","","Instruction: Single-bit SPI / Address-Option: Single-bit…",1691,[[],["w",6]]],[11,"dual_io","","Instruction: Single-bit SPI / Address-Option: Dual SPI /…",1691,[[],["w",6]]],[11,"quad_io","","Instruction: Single-bit SPI / Address-Option: Quad SPI /…",1691,[[],["w",6]]],[11,"dual_cmd","","Instruction: Dual SPI / Address-Option: Dual SPI / Data:…",1691,[[],["w",6]]],[11,"quad_cmd","","Instruction: Quad SPI / Address-Option: Quad SPI / Data:…",1691,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1691,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1692,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1692,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1692,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1693,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1693,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1693,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1694,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1694,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1694,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1695,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1695,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1695,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["optcodelen_a",4]]],[11,"is_1bit","","Checks if the value of the field is `_1BIT`",6,[[]]],[11,"is_2bits","","Checks if the value of the field is `_2BITS`",6,[[]]],[11,"is_4bits","","Checks if the value of the field is `_4BITS`",6,[[]]],[11,"is_8bits","","Checks if the value of the field is `_8BITS`",6,[[]]],[11,"variant","atsamd51g::qspi::instrframe","Get enumerated values variant",1696,[[],["optcodelen_a",4]]],[11,"is_1bit","","Checks if the value of the field is `_1BIT`",1696,[[]]],[11,"is_2bits","","Checks if the value of the field is `_2BITS`",1696,[[]]],[11,"is_4bits","","Checks if the value of the field is `_4BITS`",1696,[[]]],[11,"is_8bits","","Checks if the value of the field is `_8BITS`",1696,[[]]],[11,"variant","","Writes `variant` to the field",1697,[[["optcodelen_a",4]],["w",6]]],[11,"_1bit","","1-bit length option code",1697,[[],["w",6]]],[11,"_2bits","","2-bits length option code",1697,[[],["w",6]]],[11,"_4bits","","4-bits length option code",1697,[[],["w",6]]],[11,"_8bits","","8-bits length option code",1697,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1697,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["addrlen_a",4]]],[11,"is_24bits","","Checks if the value of the field is `_24BITS`",6,[[]]],[11,"is_32bits","","Checks if the value of the field is `_32BITS`",6,[[]]],[11,"variant","atsamd51g::qspi::instrframe","Get enumerated values variant",1698,[[],["addrlen_a",4]]],[11,"is_24bits","","Checks if the value of the field is `_24BITS`",1698,[[]]],[11,"is_32bits","","Checks if the value of the field is `_32BITS`",1698,[[]]],[11,"variant","","Writes `variant` to the field",1699,[[["addrlen_a",4]],["w",6]]],[11,"_24bits","","24-bits address length",1699,[[],["w",6]]],[11,"_32bits","","32-bits address length",1699,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1699,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["tfrtype_a",4]]],[11,"is_read","","Checks if the value of the field is `READ`",6,[[]]],[11,"is_readmemory","","Checks if the value of the field is `READMEMORY`",6,[[]]],[11,"is_write","","Checks if the value of the field is `WRITE`",6,[[]]],[11,"is_writememory","","Checks if the value of the field is `WRITEMEMORY`",6,[[]]],[11,"variant","atsamd51g::qspi::instrframe","Get enumerated values variant",1700,[[],["tfrtype_a",4]]],[11,"is_read","","Checks if the value of the field is `READ`",1700,[[]]],[11,"is_readmemory","","Checks if the value of the field is `READMEMORY`",1700,[[]]],[11,"is_write","","Checks if the value of the field is `WRITE`",1700,[[]]],[11,"is_writememory","","Checks if the value of the field is `WRITEMEMORY`",1700,[[]]],[11,"variant","","Writes `variant` to the field",1701,[[["tfrtype_a",4]],["w",6]]],[11,"read","","Read transfer from the serial memory.Scrambling is not…",1701,[[],["w",6]]],[11,"readmemory","","Read data transfer from the serial memory.If enabled,…",1701,[[],["w",6]]],[11,"write","","Write transfer into the serial memory.Scrambling is not…",1701,[[],["w",6]]],[11,"writememory","","Write data transfer into the serial memory.If enabled,…",1701,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1701,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1702,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1702,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1702,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1703,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1703,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1703,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1704,[[],["w",6]]],[11,"width","atsamd51g::generic","Bits 0:2 - Instruction Code, Address, Option Code and Data…",6,[[],["width_r",6]]],[11,"instren","","Bit 4 - Instruction Enable",6,[[],["instren_r",6]]],[11,"addren","","Bit 5 - Address Enable",6,[[],["addren_r",6]]],[11,"optcodeen","","Bit 6 - Option Enable",6,[[],["optcodeen_r",6]]],[11,"dataen","","Bit 7 - Data Enable",6,[[],["dataen_r",6]]],[11,"optcodelen","","Bits 8:9 - Option Code Length",6,[[],["optcodelen_r",6]]],[11,"addrlen","","Bit 10 - Address Length",6,[[],["addrlen_r",6]]],[11,"tfrtype","","Bits 12:13 - Data Transfer Type",6,[[],["tfrtype_r",6]]],[11,"crmode","","Bit 14 - Continuous Read Mode",6,[[],["crmode_r",6]]],[11,"ddren","","Bit 15 - Double Data Rate Enable",6,[[],["ddren_r",6]]],[11,"dummylen","","Bits 16:20 - Dummy Cycles Length",6,[[],["dummylen_r",6]]],[11,"width","atsamd51g::qspi::instrframe","Bits 0:2 - Instruction Code, Address, Option Code and Data…",1705,[[],["width_r",6]]],[11,"instren","","Bit 4 - Instruction Enable",1705,[[],["instren_r",6]]],[11,"addren","","Bit 5 - Address Enable",1705,[[],["addren_r",6]]],[11,"optcodeen","","Bit 6 - Option Enable",1705,[[],["optcodeen_r",6]]],[11,"dataen","","Bit 7 - Data Enable",1705,[[],["dataen_r",6]]],[11,"optcodelen","","Bits 8:9 - Option Code Length",1705,[[],["optcodelen_r",6]]],[11,"addrlen","","Bit 10 - Address Length",1705,[[],["addrlen_r",6]]],[11,"tfrtype","","Bits 12:13 - Data Transfer Type",1705,[[],["tfrtype_r",6]]],[11,"crmode","","Bit 14 - Continuous Read Mode",1705,[[],["crmode_r",6]]],[11,"ddren","","Bit 15 - Double Data Rate Enable",1705,[[],["ddren_r",6]]],[11,"dummylen","","Bits 16:20 - Dummy Cycles Length",1705,[[],["dummylen_r",6]]],[11,"width","atsamd51g::generic","Bits 0:2 - Instruction Code, Address, Option Code and Data…",7,[[],["width_w",3]]],[11,"instren","","Bit 4 - Instruction Enable",7,[[],["instren_w",3]]],[11,"addren","","Bit 5 - Address Enable",7,[[],["addren_w",3]]],[11,"optcodeen","","Bit 6 - Option Enable",7,[[],["optcodeen_w",3]]],[11,"dataen","","Bit 7 - Data Enable",7,[[],["dataen_w",3]]],[11,"optcodelen","","Bits 8:9 - Option Code Length",7,[[],["optcodelen_w",3]]],[11,"addrlen","","Bit 10 - Address Length",7,[[],["addrlen_w",3]]],[11,"tfrtype","","Bits 12:13 - Data Transfer Type",7,[[],["tfrtype_w",3]]],[11,"crmode","","Bit 14 - Continuous Read Mode",7,[[],["crmode_w",3]]],[11,"ddren","","Bit 15 - Double Data Rate Enable",7,[[],["ddren_w",3]]],[11,"dummylen","","Bits 16:20 - Dummy Cycles Length",7,[[],["dummylen_w",3]]],[11,"width","atsamd51g::qspi::instrframe","Bits 0:2 - Instruction Code, Address, Option Code and Data…",1706,[[],["width_w",3]]],[11,"instren","","Bit 4 - Instruction Enable",1706,[[],["instren_w",3]]],[11,"addren","","Bit 5 - Address Enable",1706,[[],["addren_w",3]]],[11,"optcodeen","","Bit 6 - Option Enable",1706,[[],["optcodeen_w",3]]],[11,"dataen","","Bit 7 - Data Enable",1706,[[],["dataen_w",3]]],[11,"optcodelen","","Bits 8:9 - Option Code Length",1706,[[],["optcodelen_w",3]]],[11,"addrlen","","Bit 10 - Address Length",1706,[[],["addrlen_w",3]]],[11,"tfrtype","","Bits 12:13 - Data Transfer Type",1706,[[],["tfrtype_w",3]]],[11,"crmode","","Bit 14 - Continuous Read Mode",1706,[[],["crmode_w",3]]],[11,"ddren","","Bit 15 - Double Data Rate Enable",1706,[[],["ddren_w",3]]],[11,"dummylen","","Bits 16:20 - Dummy Cycles Length",1706,[[],["dummylen_w",3]]],[0,"scrambctrl","atsamd51g::qspi","Scrambling Mode",null,null],[3,"ENABLE_W","atsamd51g::qspi::scrambctrl","Write proxy for field `ENABLE`",null,null],[3,"RANDOMDIS_W","","Write proxy for field `RANDOMDIS`",null,null],[6,"R","","Reader of register SCRAMBCTRL",null,null],[6,"W","","Writer for register SCRAMBCTRL",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RANDOMDIS_R","","Reader of field `RANDOMDIS`",null,null],[11,"set_bit","","Sets the field bit",1707,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1707,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1707,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1708,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1708,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1708,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 0 - Scrambling/Unscrambling Enable",6,[[],["enable_r",6]]],[11,"randomdis","","Bit 1 - Scrambling/Unscrambling Random Value Disable",6,[[],["randomdis_r",6]]],[11,"enable","atsamd51g::qspi::scrambctrl","Bit 0 - Scrambling/Unscrambling Enable",1709,[[],["enable_r",6]]],[11,"randomdis","","Bit 1 - Scrambling/Unscrambling Random Value Disable",1709,[[],["randomdis_r",6]]],[11,"enable","atsamd51g::generic","Bit 0 - Scrambling/Unscrambling Enable",7,[[],["enable_w",3]]],[11,"randomdis","","Bit 1 - Scrambling/Unscrambling Random Value Disable",7,[[],["randomdis_w",3]]],[11,"enable","atsamd51g::qspi::scrambctrl","Bit 0 - Scrambling/Unscrambling Enable",1710,[[],["enable_w",3]]],[11,"randomdis","","Bit 1 - Scrambling/Unscrambling Random Value Disable",1710,[[],["randomdis_w",3]]],[0,"scrambkey","atsamd51g::qspi","Scrambling Key",null,null],[3,"KEY_W","atsamd51g::qspi::scrambkey","Write proxy for field `KEY`",null,null],[6,"W","","Writer for register SCRAMBKEY",null,null],[11,"bits","","Writes raw bits to the field",1711,[[],["w",6]]],[11,"key","atsamd51g::generic","Bits 0:31 - Scrambling User Key",7,[[],["key_w",3]]],[11,"key","atsamd51g::qspi::scrambkey","Bits 0:31 - Scrambling User Key",1712,[[],["key_w",3]]],[6,"CTRLA","atsamd51g::qspi","Control A",null,null],[6,"CTRLB","","Control B",null,null],[6,"BAUD","","Baud Rate",null,null],[6,"RXDATA","","Receive Data",null,null],[6,"TXDATA","","Transmit Data",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status Register",null,null],[6,"INSTRADDR","","Instruction Address",null,null],[6,"INSTRCTRL","","Instruction Code",null,null],[6,"INSTRFRAME","","Instruction Frame",null,null],[6,"SCRAMBCTRL","","Scrambling Mode",null,null],[6,"SCRAMBKEY","","Scrambling Key",null,null],[0,"ramecc","atsamd51g","RAM ECC",null,null],[3,"RegisterBlock","atsamd51g::ramecc","Register block",null,null],[12,"intenclr","","0x00 - Interrupt Enable Clear",1713,null],[12,"intenset","","0x01 - Interrupt Enable Set",1713,null],[12,"intflag","","0x02 - Interrupt Flag",1713,null],[12,"status","","0x03 - Status",1713,null],[12,"erraddr","","0x04 - Error Address",1713,null],[12,"dbgctrl","","0x0f - Debug Control",1713,null],[0,"intenclr","","Interrupt Enable Clear",null,null],[3,"SINGLEE_W","atsamd51g::ramecc::intenclr","Write proxy for field `SINGLEE`",null,null],[3,"DUALE_W","","Write proxy for field `DUALE`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"SINGLEE_R","","Reader of field `SINGLEE`",null,null],[6,"DUALE_R","","Reader of field `DUALE`",null,null],[11,"set_bit","","Sets the field bit",1714,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1714,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1714,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1715,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1715,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1715,[[],["w",6]]],[11,"singlee","atsamd51g::generic","Bit 0 - Single Bit ECC Error Interrupt Enable Clear",6,[[],["singlee_r",6]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Clear",6,[[],["duale_r",6]]],[11,"singlee","atsamd51g::ramecc::intenclr","Bit 0 - Single Bit ECC Error Interrupt Enable Clear",1716,[[],["singlee_r",6]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Clear",1716,[[],["duale_r",6]]],[11,"singlee","atsamd51g::generic","Bit 0 - Single Bit ECC Error Interrupt Enable Clear",7,[[],["singlee_w",3]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Clear",7,[[],["duale_w",3]]],[11,"singlee","atsamd51g::ramecc::intenclr","Bit 0 - Single Bit ECC Error Interrupt Enable Clear",1717,[[],["singlee_w",3]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Clear",1717,[[],["duale_w",3]]],[0,"intenset","atsamd51g::ramecc","Interrupt Enable Set",null,null],[3,"SINGLEE_W","atsamd51g::ramecc::intenset","Write proxy for field `SINGLEE`",null,null],[3,"DUALE_W","","Write proxy for field `DUALE`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"SINGLEE_R","","Reader of field `SINGLEE`",null,null],[6,"DUALE_R","","Reader of field `DUALE`",null,null],[11,"set_bit","","Sets the field bit",1718,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1718,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1718,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1719,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1719,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1719,[[],["w",6]]],[11,"singlee","atsamd51g::generic","Bit 0 - Single Bit ECC Error Interrupt Enable Set",6,[[],["singlee_r",6]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Set",6,[[],["duale_r",6]]],[11,"singlee","atsamd51g::ramecc::intenset","Bit 0 - Single Bit ECC Error Interrupt Enable Set",1720,[[],["singlee_r",6]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Set",1720,[[],["duale_r",6]]],[11,"singlee","atsamd51g::generic","Bit 0 - Single Bit ECC Error Interrupt Enable Set",7,[[],["singlee_w",3]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Set",7,[[],["duale_w",3]]],[11,"singlee","atsamd51g::ramecc::intenset","Bit 0 - Single Bit ECC Error Interrupt Enable Set",1721,[[],["singlee_w",3]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt Enable Set",1721,[[],["duale_w",3]]],[0,"intflag","atsamd51g::ramecc","Interrupt Flag",null,null],[3,"SINGLEE_W","atsamd51g::ramecc::intflag","Write proxy for field `SINGLEE`",null,null],[3,"DUALE_W","","Write proxy for field `DUALE`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"SINGLEE_R","","Reader of field `SINGLEE`",null,null],[6,"DUALE_R","","Reader of field `DUALE`",null,null],[11,"set_bit","","Sets the field bit",1722,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1722,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1722,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1723,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1723,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1723,[[],["w",6]]],[11,"singlee","atsamd51g::generic","Bit 0 - Single Bit ECC Error Interrupt",6,[[],["singlee_r",6]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt",6,[[],["duale_r",6]]],[11,"singlee","atsamd51g::ramecc::intflag","Bit 0 - Single Bit ECC Error Interrupt",1724,[[],["singlee_r",6]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt",1724,[[],["duale_r",6]]],[11,"singlee","atsamd51g::generic","Bit 0 - Single Bit ECC Error Interrupt",7,[[],["singlee_w",3]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt",7,[[],["duale_w",3]]],[11,"singlee","atsamd51g::ramecc::intflag","Bit 0 - Single Bit ECC Error Interrupt",1725,[[],["singlee_w",3]]],[11,"duale","","Bit 1 - Dual Bit ECC Error Interrupt",1725,[[],["duale_w",3]]],[0,"status","atsamd51g::ramecc","Status",null,null],[6,"R","atsamd51g::ramecc::status","Reader of register STATUS",null,null],[6,"ECCDIS_R","","Reader of field `ECCDIS`",null,null],[11,"eccdis","atsamd51g::generic","Bit 0 - ECC Disable",6,[[],["eccdis_r",6]]],[11,"eccdis","atsamd51g::ramecc::status","Bit 0 - ECC Disable",1726,[[],["eccdis_r",6]]],[0,"erraddr","atsamd51g::ramecc","Error Address",null,null],[6,"R","atsamd51g::ramecc::erraddr","Reader of register ERRADDR",null,null],[6,"ERRADDR_R","","Reader of field `ERRADDR`",null,null],[11,"erraddr","atsamd51g::generic","Bits 0:16 - Error Address",6,[[],["erraddr_r",6]]],[11,"erraddr","atsamd51g::ramecc::erraddr","Bits 0:16 - Error Address",1727,[[],["erraddr_r",6]]],[0,"dbgctrl","atsamd51g::ramecc","Debug Control",null,null],[3,"ECCDIS_W","atsamd51g::ramecc::dbgctrl","Write proxy for field `ECCDIS`",null,null],[3,"ECCELOG_W","","Write proxy for field `ECCELOG`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"ECCDIS_R","","Reader of field `ECCDIS`",null,null],[6,"ECCELOG_R","","Reader of field `ECCELOG`",null,null],[11,"set_bit","","Sets the field bit",1728,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1728,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1728,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1729,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1729,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1729,[[],["w",6]]],[11,"eccdis","atsamd51g::generic","Bit 0 - ECC Disable",6,[[],["eccdis_r",6]]],[11,"eccelog","","Bit 1 - ECC Error Log",6,[[],["eccelog_r",6]]],[11,"eccdis","atsamd51g::ramecc::dbgctrl","Bit 0 - ECC Disable",1730,[[],["eccdis_r",6]]],[11,"eccelog","","Bit 1 - ECC Error Log",1730,[[],["eccelog_r",6]]],[11,"eccdis","atsamd51g::generic","Bit 0 - ECC Disable",7,[[],["eccdis_w",3]]],[11,"eccelog","","Bit 1 - ECC Error Log",7,[[],["eccelog_w",3]]],[11,"eccdis","atsamd51g::ramecc::dbgctrl","Bit 0 - ECC Disable",1731,[[],["eccdis_w",3]]],[11,"eccelog","","Bit 1 - ECC Error Log",1731,[[],["eccelog_w",3]]],[6,"INTENCLR","atsamd51g::ramecc","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag",null,null],[6,"STATUS","","Status",null,null],[6,"ERRADDR","","Error Address",null,null],[6,"DBGCTRL","","Debug Control",null,null],[0,"rstc","atsamd51g","Reset Controller",null,null],[3,"RegisterBlock","atsamd51g::rstc","Register block",null,null],[12,"rcause","","0x00 - Reset Cause",1732,null],[12,"bkupexit","","0x02 - Backup Exit Source",1732,null],[0,"rcause","","Reset Cause",null,null],[6,"R","atsamd51g::rstc::rcause","Reader of register RCAUSE",null,null],[6,"POR_R","","Reader of field `POR`",null,null],[6,"BODCORE_R","","Reader of field `BODCORE`",null,null],[6,"BODVDD_R","","Reader of field `BODVDD`",null,null],[6,"NVM_R","","Reader of field `NVM`",null,null],[6,"EXT_R","","Reader of field `EXT`",null,null],[6,"WDT_R","","Reader of field `WDT`",null,null],[6,"SYST_R","","Reader of field `SYST`",null,null],[6,"BACKUP_R","","Reader of field `BACKUP`",null,null],[11,"por","atsamd51g::generic","Bit 0 - Power On Reset",6,[[],["por_r",6]]],[11,"bodcore","","Bit 1 - Brown Out CORE Detector Reset",6,[[],["bodcore_r",6]]],[11,"bodvdd","","Bit 2 - Brown Out VDD Detector Reset",6,[[],["bodvdd_r",6]]],[11,"nvm","","Bit 3 - NVM Reset",6,[[],["nvm_r",6]]],[11,"ext","","Bit 4 - External Reset",6,[[],["ext_r",6]]],[11,"wdt","","Bit 5 - Watchdog Reset",6,[[],["wdt_r",6]]],[11,"syst","","Bit 6 - System Reset Request",6,[[],["syst_r",6]]],[11,"backup","","Bit 7 - Backup Reset",6,[[],["backup_r",6]]],[11,"por","atsamd51g::rstc::rcause","Bit 0 - Power On Reset",1733,[[],["por_r",6]]],[11,"bodcore","","Bit 1 - Brown Out CORE Detector Reset",1733,[[],["bodcore_r",6]]],[11,"bodvdd","","Bit 2 - Brown Out VDD Detector Reset",1733,[[],["bodvdd_r",6]]],[11,"nvm","","Bit 3 - NVM Reset",1733,[[],["nvm_r",6]]],[11,"ext","","Bit 4 - External Reset",1733,[[],["ext_r",6]]],[11,"wdt","","Bit 5 - Watchdog Reset",1733,[[],["wdt_r",6]]],[11,"syst","","Bit 6 - System Reset Request",1733,[[],["syst_r",6]]],[11,"backup","","Bit 7 - Backup Reset",1733,[[],["backup_r",6]]],[0,"bkupexit","atsamd51g::rstc","Backup Exit Source",null,null],[6,"R","atsamd51g::rstc::bkupexit","Reader of register BKUPEXIT",null,null],[6,"RTC_R","","Reader of field `RTC`",null,null],[6,"BBPS_R","","Reader of field `BBPS`",null,null],[6,"HIB_R","","Reader of field `HIB`",null,null],[11,"rtc","atsamd51g::generic","Bit 1 - Real Timer Counter Interrupt",6,[[],["rtc_r",6]]],[11,"bbps","","Bit 2 - Battery Backup Power Switch",6,[[],["bbps_r",6]]],[11,"hib","","Bit 7 - Hibernate",6,[[],["hib_r",6]]],[11,"rtc","atsamd51g::rstc::bkupexit","Bit 1 - Real Timer Counter Interrupt",1734,[[],["rtc_r",6]]],[11,"bbps","","Bit 2 - Battery Backup Power Switch",1734,[[],["bbps_r",6]]],[11,"hib","","Bit 7 - Hibernate",1734,[[],["hib_r",6]]],[6,"RCAUSE","atsamd51g::rstc","Reset Cause",null,null],[6,"BKUPEXIT","","Backup Exit Source",null,null],[0,"rtc","atsamd51g","Real-Time Counter",null,null],[3,"RegisterBlock","atsamd51g::rtc","Register block",null,null],[3,"MODE0","","Register block",null,null],[12,"ctrla","","0x00 - MODE0 Control A",1735,null],[12,"ctrlb","","0x02 - MODE0 Control B",1735,null],[12,"evctrl","","0x04 - MODE0 Event Control",1735,null],[12,"intenclr","","0x08 - MODE0 Interrupt Enable Clear",1735,null],[12,"intenset","","0x0a - MODE0 Interrupt Enable Set",1735,null],[12,"intflag","","0x0c - MODE0 Interrupt Flag Status and Clear",1735,null],[12,"dbgctrl","","0x0e - Debug Control",1735,null],[12,"syncbusy","","0x10 - MODE0 Synchronization Busy Status",1735,null],[12,"freqcorr","","0x14 - Frequency Correction",1735,null],[12,"count","","0x18 - MODE0 Counter Value",1735,null],[12,"comp","","0x20 - MODE0 Compare n Value",1735,null],[12,"gp","","0x40 - General Purpose",1735,null],[12,"tampctrl","","0x60 - Tamper Control",1735,null],[12,"timestamp","","0x64 - MODE0 Timestamp",1735,null],[12,"tampid","","0x68 - Tamper ID",1735,null],[12,"bkup","","0x80 - Backup",1735,null],[3,"MODE1","","Register block",null,null],[12,"ctrla","","0x00 - MODE1 Control A",1736,null],[12,"ctrlb","","0x02 - MODE1 Control B",1736,null],[12,"evctrl","","0x04 - MODE1 Event Control",1736,null],[12,"intenclr","","0x08 - MODE1 Interrupt Enable Clear",1736,null],[12,"intenset","","0x0a - MODE1 Interrupt Enable Set",1736,null],[12,"intflag","","0x0c - MODE1 Interrupt Flag Status and Clear",1736,null],[12,"dbgctrl","","0x0e - Debug Control",1736,null],[12,"syncbusy","","0x10 - MODE1 Synchronization Busy Status",1736,null],[12,"freqcorr","","0x14 - Frequency Correction",1736,null],[12,"count","","0x18 - MODE1 Counter Value",1736,null],[12,"per","","0x1c - MODE1 Counter Period",1736,null],[12,"comp","","0x20 - MODE1 Compare n Value",1736,null],[12,"gp","","0x40 - General Purpose",1736,null],[12,"tampctrl","","0x60 - Tamper Control",1736,null],[12,"timestamp","","0x64 - MODE1 Timestamp",1736,null],[12,"tampid","","0x68 - Tamper ID",1736,null],[12,"bkup","","0x80 - Backup",1736,null],[3,"MODE2","","Register block",null,null],[12,"ctrla","","0x00 - MODE2 Control A",1737,null],[12,"ctrlb","","0x02 - MODE2 Control B",1737,null],[12,"evctrl","","0x04 - MODE2 Event Control",1737,null],[12,"intenclr","","0x08 - MODE2 Interrupt Enable Clear",1737,null],[12,"intenset","","0x0a - MODE2 Interrupt Enable Set",1737,null],[12,"intflag","","0x0c - MODE2 Interrupt Flag Status and Clear",1737,null],[12,"dbgctrl","","0x0e - Debug Control",1737,null],[12,"syncbusy","","0x10 - MODE2 Synchronization Busy Status",1737,null],[12,"freqcorr","","0x14 - Frequency Correction",1737,null],[12,"clock","","0x18 - MODE2 Clock Value",1737,null],[12,"alarm0","","0x20 - MODE2_ALARM Alarm n Value",1737,null],[12,"mask0","","0x24 - MODE2_ALARM Alarm n Mask",1737,null],[12,"alarm1","","0x28 - MODE2_ALARM Alarm n Value",1737,null],[12,"mask1","","0x2c - MODE2_ALARM Alarm n Mask",1737,null],[12,"gp","","0x40 - General Purpose",1737,null],[12,"tampctrl","","0x60 - Tamper Control",1737,null],[12,"timestamp","","0x64 - MODE2 Timestamp",1737,null],[12,"tampid","","0x68 - Tamper ID",1737,null],[12,"bkup","","0x80 - Backup",1737,null],[0,"mode0","","Register block 32-bit Counter with Single 32-bit Compare",null,null],[0,"ctrla","atsamd51g::rtc::mode0","MODE0 Control A",null,null],[3,"SWRST_W","atsamd51g::rtc::mode0::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"MATCHCLR_W","","Write proxy for field `MATCHCLR`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"BKTRST_W","","Write proxy for field `BKTRST`",null,null],[3,"GPTRST_W","","Write proxy for field `GPTRST`",null,null],[3,"COUNTSYNC_W","","Write proxy for field `COUNTSYNC`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",1738,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",1738,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",1738,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"OFF","","0: CLK_RTC_CNT = GCLK_RTC/1",1739,null],[13,"DIV1","","1: CLK_RTC_CNT = GCLK_RTC/1",1739,null],[13,"DIV2","","2: CLK_RTC_CNT = GCLK_RTC/2",1739,null],[13,"DIV4","","3: CLK_RTC_CNT = GCLK_RTC/4",1739,null],[13,"DIV8","","4: CLK_RTC_CNT = GCLK_RTC/8",1739,null],[13,"DIV16","","5: CLK_RTC_CNT = GCLK_RTC/16",1739,null],[13,"DIV32","","6: CLK_RTC_CNT = GCLK_RTC/32",1739,null],[13,"DIV64","","7: CLK_RTC_CNT = GCLK_RTC/64",1739,null],[13,"DIV128","","8: CLK_RTC_CNT = GCLK_RTC/128",1739,null],[13,"DIV256","","9: CLK_RTC_CNT = GCLK_RTC/256",1739,null],[13,"DIV512","","10: CLK_RTC_CNT = GCLK_RTC/512",1739,null],[13,"DIV1024","","11: CLK_RTC_CNT = GCLK_RTC/1024",1739,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"MATCHCLR_R","","Reader of field `MATCHCLR`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"BKTRST_R","","Reader of field `BKTRST`",null,null],[6,"GPTRST_R","","Reader of field `GPTRST`",null,null],[6,"COUNTSYNC_R","","Reader of field `COUNTSYNC`",null,null],[11,"set_bit","","Sets the field bit",1740,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1740,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1740,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1741,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1741,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1741,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::ctrla","Get enumerated values variant",1742,[[],[["mode_a",4],["variant",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1742,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1742,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",1742,[[]]],[11,"variant","","Writes `variant` to the field",1743,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",1743,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",1743,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",1743,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1743,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1744,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1744,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1744,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::ctrla","Get enumerated values variant",1745,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1745,[[]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1745,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1745,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1745,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1745,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1745,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1745,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1745,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1745,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1745,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1745,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1745,[[]]],[11,"variant","","Writes `variant` to the field",1746,[[["prescaler_a",4]],["w",6]]],[11,"off","","CLK_RTC_CNT = GCLK_RTC/1",1746,[[],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",1746,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",1746,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",1746,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",1746,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",1746,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",1746,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",1746,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",1746,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",1746,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",1746,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",1746,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1746,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1748,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1748,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1748,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1749,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1749,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1749,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",6,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",6,[[],["bktrst_r",6]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",6,[[],["gptrst_r",6]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",6,[[],["countsync_r",6]]],[11,"swrst","atsamd51g::rtc::mode0::ctrla","Bit 0 - Software Reset",1750,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1750,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",1750,[[],["mode_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",1750,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",1750,[[],["prescaler_r",6]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",1750,[[],["bktrst_r",6]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",1750,[[],["gptrst_r",6]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",1750,[[],["countsync_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",7,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",7,[[],["bktrst_w",3]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",7,[[],["gptrst_w",3]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",7,[[],["countsync_w",3]]],[11,"swrst","atsamd51g::rtc::mode0::ctrla","Bit 0 - Software Reset",1751,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1751,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",1751,[[],["mode_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",1751,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",1751,[[],["prescaler_w",3]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",1751,[[],["bktrst_w",3]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",1751,[[],["gptrst_w",3]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",1751,[[],["countsync_w",3]]],[0,"ctrlb","atsamd51g::rtc::mode0","MODE0 Control B",null,null],[3,"GP0EN_W","atsamd51g::rtc::mode0::ctrlb","Write proxy for field `GP0EN`",null,null],[3,"GP2EN_W","","Write proxy for field `GP2EN`",null,null],[3,"DEBMAJ_W","","Write proxy for field `DEBMAJ`",null,null],[3,"DEBASYNC_W","","Write proxy for field `DEBASYNC`",null,null],[3,"RTCOUT_W","","Write proxy for field `RTCOUT`",null,null],[3,"DMAEN_W","","Write proxy for field `DMAEN`",null,null],[3,"DEBF_W","","Write proxy for field `DEBF`",null,null],[3,"ACTF_W","","Write proxy for field `ACTF`",null,null],[4,"DEBF_A","","Debounce Freqnuency",null,null],[13,"DIV2","","0: CLK_RTC_DEB = CLK_RTC/2",1752,null],[13,"DIV4","","1: CLK_RTC_DEB = CLK_RTC/4",1752,null],[13,"DIV8","","2: CLK_RTC_DEB = CLK_RTC/8",1752,null],[13,"DIV16","","3: CLK_RTC_DEB = CLK_RTC/16",1752,null],[13,"DIV32","","4: CLK_RTC_DEB = CLK_RTC/32",1752,null],[13,"DIV64","","5: CLK_RTC_DEB = CLK_RTC/64",1752,null],[13,"DIV128","","6: CLK_RTC_DEB = CLK_RTC/128",1752,null],[13,"DIV256","","7: CLK_RTC_DEB = CLK_RTC/256",1752,null],[4,"ACTF_A","","Active Layer Freqnuency",null,null],[13,"DIV2","","0: CLK_RTC_OUT = CLK_RTC/2",1753,null],[13,"DIV4","","1: CLK_RTC_OUT = CLK_RTC/4",1753,null],[13,"DIV8","","2: CLK_RTC_OUT = CLK_RTC/8",1753,null],[13,"DIV16","","3: CLK_RTC_OUT = CLK_RTC/16",1753,null],[13,"DIV32","","4: CLK_RTC_OUT = CLK_RTC/32",1753,null],[13,"DIV64","","5: CLK_RTC_OUT = CLK_RTC/64",1753,null],[13,"DIV128","","6: CLK_RTC_OUT = CLK_RTC/128",1753,null],[13,"DIV256","","7: CLK_RTC_OUT = CLK_RTC/256",1753,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"GP0EN_R","","Reader of field `GP0EN`",null,null],[6,"GP2EN_R","","Reader of field `GP2EN`",null,null],[6,"DEBMAJ_R","","Reader of field `DEBMAJ`",null,null],[6,"DEBASYNC_R","","Reader of field `DEBASYNC`",null,null],[6,"RTCOUT_R","","Reader of field `RTCOUT`",null,null],[6,"DMAEN_R","","Reader of field `DMAEN`",null,null],[6,"DEBF_R","","Reader of field `DEBF`",null,null],[6,"ACTF_R","","Reader of field `ACTF`",null,null],[11,"set_bit","","Sets the field bit",1754,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1754,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1754,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1755,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1755,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1755,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1756,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1756,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1756,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1757,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1757,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1757,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1758,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1758,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1758,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1759,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1759,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1759,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["debf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::ctrlb","Get enumerated values variant",1760,[[],["debf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1760,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1760,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1760,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1760,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1760,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1760,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1760,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1760,[[]]],[11,"variant","","Writes `variant` to the field",1761,[[["debf_a",4]],["w",6]]],[11,"div2","","CLK_RTC_DEB = CLK_RTC/2",1761,[[],["w",6]]],[11,"div4","","CLK_RTC_DEB = CLK_RTC/4",1761,[[],["w",6]]],[11,"div8","","CLK_RTC_DEB = CLK_RTC/8",1761,[[],["w",6]]],[11,"div16","","CLK_RTC_DEB = CLK_RTC/16",1761,[[],["w",6]]],[11,"div32","","CLK_RTC_DEB = CLK_RTC/32",1761,[[],["w",6]]],[11,"div64","","CLK_RTC_DEB = CLK_RTC/64",1761,[[],["w",6]]],[11,"div128","","CLK_RTC_DEB = CLK_RTC/128",1761,[[],["w",6]]],[11,"div256","","CLK_RTC_DEB = CLK_RTC/256",1761,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1761,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["actf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::ctrlb","Get enumerated values variant",1762,[[],["actf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1762,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1762,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1762,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1762,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1762,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1762,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1762,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1762,[[]]],[11,"variant","","Writes `variant` to the field",1763,[[["actf_a",4]],["w",6]]],[11,"div2","","CLK_RTC_OUT = CLK_RTC/2",1763,[[],["w",6]]],[11,"div4","","CLK_RTC_OUT = CLK_RTC/4",1763,[[],["w",6]]],[11,"div8","","CLK_RTC_OUT = CLK_RTC/8",1763,[[],["w",6]]],[11,"div16","","CLK_RTC_OUT = CLK_RTC/16",1763,[[],["w",6]]],[11,"div32","","CLK_RTC_OUT = CLK_RTC/32",1763,[[],["w",6]]],[11,"div64","","CLK_RTC_OUT = CLK_RTC/64",1763,[[],["w",6]]],[11,"div128","","CLK_RTC_OUT = CLK_RTC/128",1763,[[],["w",6]]],[11,"div256","","CLK_RTC_OUT = CLK_RTC/256",1763,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1763,[[],["w",6]]],[11,"gp0en","atsamd51g::generic","Bit 0 - General Purpose 0 Enable",6,[[],["gp0en_r",6]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",6,[[],["gp2en_r",6]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",6,[[],["debmaj_r",6]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",6,[[],["debasync_r",6]]],[11,"rtcout","","Bit 6 - RTC Output Enable",6,[[],["rtcout_r",6]]],[11,"dmaen","","Bit 7 - DMA Enable",6,[[],["dmaen_r",6]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",6,[[],["debf_r",6]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",6,[[],["actf_r",6]]],[11,"gp0en","atsamd51g::rtc::mode0::ctrlb","Bit 0 - General Purpose 0 Enable",1764,[[],["gp0en_r",6]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",1764,[[],["gp2en_r",6]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",1764,[[],["debmaj_r",6]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",1764,[[],["debasync_r",6]]],[11,"rtcout","","Bit 6 - RTC Output Enable",1764,[[],["rtcout_r",6]]],[11,"dmaen","","Bit 7 - DMA Enable",1764,[[],["dmaen_r",6]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",1764,[[],["debf_r",6]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",1764,[[],["actf_r",6]]],[11,"gp0en","atsamd51g::generic","Bit 0 - General Purpose 0 Enable",7,[[],["gp0en_w",3]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",7,[[],["gp2en_w",3]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",7,[[],["debmaj_w",3]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",7,[[],["debasync_w",3]]],[11,"rtcout","","Bit 6 - RTC Output Enable",7,[[],["rtcout_w",3]]],[11,"dmaen","","Bit 7 - DMA Enable",7,[[],["dmaen_w",3]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",7,[[],["debf_w",3]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",7,[[],["actf_w",3]]],[11,"gp0en","atsamd51g::rtc::mode0::ctrlb","Bit 0 - General Purpose 0 Enable",1765,[[],["gp0en_w",3]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",1765,[[],["gp2en_w",3]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",1765,[[],["debmaj_w",3]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",1765,[[],["debasync_w",3]]],[11,"rtcout","","Bit 6 - RTC Output Enable",1765,[[],["rtcout_w",3]]],[11,"dmaen","","Bit 7 - DMA Enable",1765,[[],["dmaen_w",3]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",1765,[[],["debf_w",3]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",1765,[[],["actf_w",3]]],[0,"evctrl","atsamd51g::rtc::mode0","MODE0 Event Control",null,null],[3,"PEREO0_W","atsamd51g::rtc::mode0::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"CMPEO0_W","","Write proxy for field `CMPEO0`",null,null],[3,"CMPEO1_W","","Write proxy for field `CMPEO1`",null,null],[3,"TAMPEREO_W","","Write proxy for field `TAMPEREO`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"TAMPEVEI_W","","Write proxy for field `TAMPEVEI`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"CMPEO0_R","","Reader of field `CMPEO0`",null,null],[6,"CMPEO1_R","","Reader of field `CMPEO1`",null,null],[6,"TAMPEREO_R","","Reader of field `TAMPEREO`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"TAMPEVEI_R","","Reader of field `TAMPEVEI`",null,null],[11,"set_bit","","Sets the field bit",1766,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1766,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1766,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1767,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1767,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1767,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1768,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1768,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1768,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1769,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1769,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1769,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1770,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1770,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1770,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1771,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1771,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1771,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1772,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1772,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1772,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1773,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1773,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1773,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1774,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1774,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1774,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1775,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1775,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1775,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1776,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1776,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1776,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1777,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1777,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1777,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1778,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1778,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1778,[[],["w",6]]],[11,"pereo0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",6,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",6,[[],["cmpeo1_r",6]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",6,[[],["tampereo_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",6,[[],["tampevei_r",6]]],[11,"pereo0","atsamd51g::rtc::mode0::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1779,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1779,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1779,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1779,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1779,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1779,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1779,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1779,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1779,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",1779,[[],["cmpeo1_r",6]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",1779,[[],["tampereo_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1779,[[],["ovfeo_r",6]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",1779,[[],["tampevei_r",6]]],[11,"pereo0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",7,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",7,[[],["cmpeo1_w",3]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",7,[[],["tampereo_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",7,[[],["tampevei_w",3]]],[11,"pereo0","atsamd51g::rtc::mode0::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1780,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1780,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1780,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1780,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1780,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1780,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1780,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1780,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1780,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",1780,[[],["cmpeo1_w",3]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",1780,[[],["tampereo_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1780,[[],["ovfeo_w",3]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",1780,[[],["tampevei_w",3]]],[0,"intenclr","atsamd51g::rtc::mode0","MODE0 Interrupt Enable Clear",null,null],[3,"PER0_W","atsamd51g::rtc::mode0::intenclr","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1781,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1781,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1781,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1782,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1782,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1782,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1783,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1783,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1783,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1784,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1784,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1784,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1785,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1785,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1785,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1786,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1786,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1786,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1787,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1787,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1787,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1788,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1788,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1788,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1789,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1789,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1789,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1790,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1790,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1790,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1791,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1791,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1791,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1792,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1792,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1792,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",6,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode0::intenclr","Bit 0 - Periodic Interval 0 Interrupt Enable",1793,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1793,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1793,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1793,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1793,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1793,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1793,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1793,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1793,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1793,[[],["cmp1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",1793,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1793,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",7,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode0::intenclr","Bit 0 - Periodic Interval 0 Interrupt Enable",1794,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1794,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1794,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1794,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1794,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1794,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1794,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1794,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1794,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1794,[[],["cmp1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",1794,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1794,[[],["ovf_w",3]]],[0,"intenset","atsamd51g::rtc::mode0","MODE0 Interrupt Enable Set",null,null],[3,"PER0_W","atsamd51g::rtc::mode0::intenset","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1795,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1795,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1795,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1796,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1796,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1796,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1797,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1797,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1798,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1798,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1798,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1799,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1799,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1799,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1800,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1800,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1800,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1801,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1801,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1801,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1802,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1802,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1802,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1803,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1803,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1803,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1804,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1804,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1804,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1805,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1805,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1805,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1806,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1806,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1806,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",6,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode0::intenset","Bit 0 - Periodic Interval 0 Interrupt Enable",1807,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1807,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1807,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1807,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1807,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1807,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1807,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1807,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1807,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1807,[[],["cmp1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",1807,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1807,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",7,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode0::intenset","Bit 0 - Periodic Interval 0 Interrupt Enable",1808,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1808,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1808,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1808,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1808,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1808,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1808,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1808,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1808,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1808,[[],["cmp1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",1808,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1808,[[],["ovf_w",3]]],[0,"intflag","atsamd51g::rtc::mode0","MODE0 Interrupt Flag Status and Clear",null,null],[3,"PER0_W","atsamd51g::rtc::mode0::intflag","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1809,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1809,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1809,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1810,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1810,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1810,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1811,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1811,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1811,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1812,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1812,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1812,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1813,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1813,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1813,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1814,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1814,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1814,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1815,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1815,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1815,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1816,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1816,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1816,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1817,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1817,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1817,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1818,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1818,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1818,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1819,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1819,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1819,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1820,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1820,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1820,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7",6,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1",6,[[],["cmp1_r",6]]],[11,"tamper","","Bit 14 - Tamper",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode0::intflag","Bit 0 - Periodic Interval 0",1821,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1",1821,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2",1821,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3",1821,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4",1821,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5",1821,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6",1821,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7",1821,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0",1821,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1",1821,[[],["cmp1_r",6]]],[11,"tamper","","Bit 14 - Tamper",1821,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow",1821,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7",7,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1",7,[[],["cmp1_w",3]]],[11,"tamper","","Bit 14 - Tamper",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode0::intflag","Bit 0 - Periodic Interval 0",1822,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1",1822,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2",1822,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3",1822,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4",1822,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5",1822,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6",1822,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7",1822,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0",1822,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1",1822,[[],["cmp1_w",3]]],[11,"tamper","","Bit 14 - Tamper",1822,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow",1822,[[],["ovf_w",3]]],[0,"dbgctrl","atsamd51g::rtc::mode0","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::rtc::mode0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1823,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1823,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1823,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::rtc::mode0::dbgctrl","Bit 0 - Run During Debug",1824,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::rtc::mode0::dbgctrl","Bit 0 - Run During Debug",1825,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::rtc::mode0","MODE0 Synchronization Busy Status",null,null],[6,"R","atsamd51g::rtc::mode0::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"FREQCORR_R","","Reader of field `FREQCORR`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"COUNTSYNC_R","","Reader of field `COUNTSYNC`",null,null],[6,"GP0_R","","Reader of field `GP0`",null,null],[6,"GP1_R","","Reader of field `GP1`",null,null],[6,"GP2_R","","Reader of field `GP2`",null,null],[6,"GP3_R","","Reader of field `GP3`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Bit Busy",6,[[],["enable_r",6]]],[11,"freqcorr","","Bit 2 - FREQCORR Register Busy",6,[[],["freqcorr_r",6]]],[11,"count","","Bit 3 - COUNT Register Busy",6,[[],["count_r",6]]],[11,"comp0","","Bit 5 - COMP 0 Register Busy",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 6 - COMP 1 Register Busy",6,[[],["comp1_r",6]]],[11,"countsync","","Bit 15 - Count Synchronization Enable Bit Busy",6,[[],["countsync_r",6]]],[11,"gp0","","Bit 16 - General Purpose 0 Register Busy",6,[[],["gp0_r",6]]],[11,"gp1","","Bit 17 - General Purpose 1 Register Busy",6,[[],["gp1_r",6]]],[11,"gp2","","Bit 18 - General Purpose 2 Register Busy",6,[[],["gp2_r",6]]],[11,"gp3","","Bit 19 - General Purpose 3 Register Busy",6,[[],["gp3_r",6]]],[11,"swrst","atsamd51g::rtc::mode0::syncbusy","Bit 0 - Software Reset Busy",1826,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Bit Busy",1826,[[],["enable_r",6]]],[11,"freqcorr","","Bit 2 - FREQCORR Register Busy",1826,[[],["freqcorr_r",6]]],[11,"count","","Bit 3 - COUNT Register Busy",1826,[[],["count_r",6]]],[11,"comp0","","Bit 5 - COMP 0 Register Busy",1826,[[],["comp0_r",6]]],[11,"comp1","","Bit 6 - COMP 1 Register Busy",1826,[[],["comp1_r",6]]],[11,"countsync","","Bit 15 - Count Synchronization Enable Bit Busy",1826,[[],["countsync_r",6]]],[11,"gp0","","Bit 16 - General Purpose 0 Register Busy",1826,[[],["gp0_r",6]]],[11,"gp1","","Bit 17 - General Purpose 1 Register Busy",1826,[[],["gp1_r",6]]],[11,"gp2","","Bit 18 - General Purpose 2 Register Busy",1826,[[],["gp2_r",6]]],[11,"gp3","","Bit 19 - General Purpose 3 Register Busy",1826,[[],["gp3_r",6]]],[0,"freqcorr","atsamd51g::rtc::mode0","Frequency Correction",null,null],[3,"VALUE_W","atsamd51g::rtc::mode0::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",1827,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1828,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1828,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1828,[[],["w",6]]],[11,"value","atsamd51g::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd51g::rtc::mode0::freqcorr","Bits 0:6 - Correction Value",1829,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",1829,[[],["sign_r",6]]],[11,"value","atsamd51g::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd51g::rtc::mode0::freqcorr","Bits 0:6 - Correction Value",1830,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",1830,[[],["sign_w",3]]],[0,"count","atsamd51g::rtc::mode0","MODE0 Counter Value",null,null],[3,"COUNT_W","atsamd51g::rtc::mode0::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1831,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:31 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::rtc::mode0::count","Bits 0:31 - Counter Value",1832,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:31 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::rtc::mode0::count","Bits 0:31 - Counter Value",1833,[[],["count_w",3]]],[0,"comp","atsamd51g::rtc::mode0","MODE0 Compare n Value",null,null],[3,"COMP_W","atsamd51g::rtc::mode0::comp","Write proxy for field `COMP`",null,null],[6,"R","","Reader of register COMP[%s]",null,null],[6,"W","","Writer for register COMP[%s]",null,null],[6,"COMP_R","","Reader of field `COMP`",null,null],[11,"bits","","Writes raw bits to the field",1834,[[],["w",6]]],[11,"comp","atsamd51g::generic","Bits 0:31 - Compare Value",6,[[],["comp_r",6]]],[11,"comp","atsamd51g::rtc::mode0::comp","Bits 0:31 - Compare Value",1835,[[],["comp_r",6]]],[11,"comp","atsamd51g::generic","Bits 0:31 - Compare Value",7,[[],["comp_w",3]]],[11,"comp","atsamd51g::rtc::mode0::comp","Bits 0:31 - Compare Value",1836,[[],["comp_w",3]]],[0,"gp","atsamd51g::rtc::mode0","General Purpose",null,null],[3,"GP_W","atsamd51g::rtc::mode0::gp","Write proxy for field `GP`",null,null],[6,"R","","Reader of register GP[%s]",null,null],[6,"W","","Writer for register GP[%s]",null,null],[6,"GP_R","","Reader of field `GP`",null,null],[11,"bits","","Writes raw bits to the field",1837,[[],["w",6]]],[11,"gp","atsamd51g::generic","Bits 0:31 - General Purpose",6,[[],["gp_r",6]]],[11,"gp","atsamd51g::rtc::mode0::gp","Bits 0:31 - General Purpose",1838,[[],["gp_r",6]]],[11,"gp","atsamd51g::generic","Bits 0:31 - General Purpose",7,[[],["gp_w",3]]],[11,"gp","atsamd51g::rtc::mode0::gp","Bits 0:31 - General Purpose",1839,[[],["gp_w",3]]],[0,"tampctrl","atsamd51g::rtc::mode0","Tamper Control",null,null],[3,"IN0ACT_W","atsamd51g::rtc::mode0::tampctrl","Write proxy for field `IN0ACT`",null,null],[3,"IN1ACT_W","","Write proxy for field `IN1ACT`",null,null],[3,"IN2ACT_W","","Write proxy for field `IN2ACT`",null,null],[3,"IN3ACT_W","","Write proxy for field `IN3ACT`",null,null],[3,"IN4ACT_W","","Write proxy for field `IN4ACT`",null,null],[3,"TAMLVL0_W","","Write proxy for field `TAMLVL0`",null,null],[3,"TAMLVL1_W","","Write proxy for field `TAMLVL1`",null,null],[3,"TAMLVL2_W","","Write proxy for field `TAMLVL2`",null,null],[3,"TAMLVL3_W","","Write proxy for field `TAMLVL3`",null,null],[3,"TAMLVL4_W","","Write proxy for field `TAMLVL4`",null,null],[3,"DEBNC0_W","","Write proxy for field `DEBNC0`",null,null],[3,"DEBNC1_W","","Write proxy for field `DEBNC1`",null,null],[3,"DEBNC2_W","","Write proxy for field `DEBNC2`",null,null],[3,"DEBNC3_W","","Write proxy for field `DEBNC3`",null,null],[3,"DEBNC4_W","","Write proxy for field `DEBNC4`",null,null],[4,"IN0ACT_A","","Tamper Input 0 Action",null,null],[13,"OFF","","0: Off (Disabled)",1840,null],[13,"WAKE","","1: Wake without timestamp",1840,null],[13,"CAPTURE","","2: Capture timestamp",1840,null],[13,"ACTL","","3: Compare IN0 to OUT",1840,null],[4,"IN1ACT_A","","Tamper Input 1 Action",null,null],[13,"OFF","","0: Off (Disabled)",1841,null],[13,"WAKE","","1: Wake without timestamp",1841,null],[13,"CAPTURE","","2: Capture timestamp",1841,null],[13,"ACTL","","3: Compare IN1 to OUT",1841,null],[4,"IN2ACT_A","","Tamper Input 2 Action",null,null],[13,"OFF","","0: Off (Disabled)",1842,null],[13,"WAKE","","1: Wake without timestamp",1842,null],[13,"CAPTURE","","2: Capture timestamp",1842,null],[13,"ACTL","","3: Compare IN2 to OUT",1842,null],[4,"IN3ACT_A","","Tamper Input 3 Action",null,null],[13,"OFF","","0: Off (Disabled)",1843,null],[13,"WAKE","","1: Wake without timestamp",1843,null],[13,"CAPTURE","","2: Capture timestamp",1843,null],[13,"ACTL","","3: Compare IN3 to OUT",1843,null],[4,"IN4ACT_A","","Tamper Input 4 Action",null,null],[13,"OFF","","0: Off (Disabled)",1844,null],[13,"WAKE","","1: Wake without timestamp",1844,null],[13,"CAPTURE","","2: Capture timestamp",1844,null],[13,"ACTL","","3: Compare IN4 to OUT",1844,null],[6,"R","","Reader of register TAMPCTRL",null,null],[6,"W","","Writer for register TAMPCTRL",null,null],[6,"IN0ACT_R","","Reader of field `IN0ACT`",null,null],[6,"IN1ACT_R","","Reader of field `IN1ACT`",null,null],[6,"IN2ACT_R","","Reader of field `IN2ACT`",null,null],[6,"IN3ACT_R","","Reader of field `IN3ACT`",null,null],[6,"IN4ACT_R","","Reader of field `IN4ACT`",null,null],[6,"TAMLVL0_R","","Reader of field `TAMLVL0`",null,null],[6,"TAMLVL1_R","","Reader of field `TAMLVL1`",null,null],[6,"TAMLVL2_R","","Reader of field `TAMLVL2`",null,null],[6,"TAMLVL3_R","","Reader of field `TAMLVL3`",null,null],[6,"TAMLVL4_R","","Reader of field `TAMLVL4`",null,null],[6,"DEBNC0_R","","Reader of field `DEBNC0`",null,null],[6,"DEBNC1_R","","Reader of field `DEBNC1`",null,null],[6,"DEBNC2_R","","Reader of field `DEBNC2`",null,null],[6,"DEBNC3_R","","Reader of field `DEBNC3`",null,null],[6,"DEBNC4_R","","Reader of field `DEBNC4`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in0act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::tampctrl","Get enumerated values variant",1845,[[],["in0act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1845,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1845,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1845,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1845,[[]]],[11,"variant","","Writes `variant` to the field",1846,[[["in0act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1846,[[],["w",6]]],[11,"wake","","Wake without timestamp",1846,[[],["w",6]]],[11,"capture","","Capture timestamp",1846,[[],["w",6]]],[11,"actl","","Compare IN0 to OUT",1846,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1846,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in1act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::tampctrl","Get enumerated values variant",1847,[[],["in1act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1847,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1847,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1847,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1847,[[]]],[11,"variant","","Writes `variant` to the field",1848,[[["in1act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1848,[[],["w",6]]],[11,"wake","","Wake without timestamp",1848,[[],["w",6]]],[11,"capture","","Capture timestamp",1848,[[],["w",6]]],[11,"actl","","Compare IN1 to OUT",1848,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1848,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in2act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::tampctrl","Get enumerated values variant",1849,[[],["in2act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1849,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1849,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1849,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1849,[[]]],[11,"variant","","Writes `variant` to the field",1850,[[["in2act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1850,[[],["w",6]]],[11,"wake","","Wake without timestamp",1850,[[],["w",6]]],[11,"capture","","Capture timestamp",1850,[[],["w",6]]],[11,"actl","","Compare IN2 to OUT",1850,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1850,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in3act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::tampctrl","Get enumerated values variant",1851,[[],["in3act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1851,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1851,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1851,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1851,[[]]],[11,"variant","","Writes `variant` to the field",1852,[[["in3act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1852,[[],["w",6]]],[11,"wake","","Wake without timestamp",1852,[[],["w",6]]],[11,"capture","","Capture timestamp",1852,[[],["w",6]]],[11,"actl","","Compare IN3 to OUT",1852,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1852,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in4act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode0::tampctrl","Get enumerated values variant",1853,[[],["in4act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1853,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1853,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1853,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1853,[[]]],[11,"variant","","Writes `variant` to the field",1854,[[["in4act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1854,[[],["w",6]]],[11,"wake","","Wake without timestamp",1854,[[],["w",6]]],[11,"capture","","Capture timestamp",1854,[[],["w",6]]],[11,"actl","","Compare IN4 to OUT",1854,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1854,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1855,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1855,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1855,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1856,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1856,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1856,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1857,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1857,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1857,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1858,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1858,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1858,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1859,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1859,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1859,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1860,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1860,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1860,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1861,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1861,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1861,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1862,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1862,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1862,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1863,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1863,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1863,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1864,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1864,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1864,[[],["w",6]]],[11,"in0act","atsamd51g::generic","Bits 0:1 - Tamper Input 0 Action",6,[[],["in0act_r",6]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",6,[[],["in1act_r",6]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",6,[[],["in2act_r",6]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",6,[[],["in3act_r",6]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",6,[[],["in4act_r",6]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",6,[[],["tamlvl0_r",6]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",6,[[],["tamlvl1_r",6]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",6,[[],["tamlvl2_r",6]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",6,[[],["tamlvl3_r",6]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",6,[[],["tamlvl4_r",6]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",6,[[],["debnc0_r",6]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",6,[[],["debnc1_r",6]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",6,[[],["debnc2_r",6]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",6,[[],["debnc3_r",6]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",6,[[],["debnc4_r",6]]],[11,"in0act","atsamd51g::rtc::mode0::tampctrl","Bits 0:1 - Tamper Input 0 Action",1865,[[],["in0act_r",6]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",1865,[[],["in1act_r",6]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",1865,[[],["in2act_r",6]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",1865,[[],["in3act_r",6]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",1865,[[],["in4act_r",6]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",1865,[[],["tamlvl0_r",6]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",1865,[[],["tamlvl1_r",6]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",1865,[[],["tamlvl2_r",6]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",1865,[[],["tamlvl3_r",6]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",1865,[[],["tamlvl4_r",6]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",1865,[[],["debnc0_r",6]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",1865,[[],["debnc1_r",6]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",1865,[[],["debnc2_r",6]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",1865,[[],["debnc3_r",6]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",1865,[[],["debnc4_r",6]]],[11,"in0act","atsamd51g::generic","Bits 0:1 - Tamper Input 0 Action",7,[[],["in0act_w",3]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",7,[[],["in1act_w",3]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",7,[[],["in2act_w",3]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",7,[[],["in3act_w",3]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",7,[[],["in4act_w",3]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",7,[[],["tamlvl0_w",3]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",7,[[],["tamlvl1_w",3]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",7,[[],["tamlvl2_w",3]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",7,[[],["tamlvl3_w",3]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",7,[[],["tamlvl4_w",3]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",7,[[],["debnc0_w",3]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",7,[[],["debnc1_w",3]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",7,[[],["debnc2_w",3]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",7,[[],["debnc3_w",3]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",7,[[],["debnc4_w",3]]],[11,"in0act","atsamd51g::rtc::mode0::tampctrl","Bits 0:1 - Tamper Input 0 Action",1866,[[],["in0act_w",3]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",1866,[[],["in1act_w",3]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",1866,[[],["in2act_w",3]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",1866,[[],["in3act_w",3]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",1866,[[],["in4act_w",3]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",1866,[[],["tamlvl0_w",3]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",1866,[[],["tamlvl1_w",3]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",1866,[[],["tamlvl2_w",3]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",1866,[[],["tamlvl3_w",3]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",1866,[[],["tamlvl4_w",3]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",1866,[[],["debnc0_w",3]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",1866,[[],["debnc1_w",3]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",1866,[[],["debnc2_w",3]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",1866,[[],["debnc3_w",3]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",1866,[[],["debnc4_w",3]]],[0,"timestamp","atsamd51g::rtc::mode0","MODE0 Timestamp",null,null],[6,"R","atsamd51g::rtc::mode0::timestamp","Reader of register TIMESTAMP",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"count","atsamd51g::generic","Bits 0:31 - Count Timestamp Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::rtc::mode0::timestamp","Bits 0:31 - Count Timestamp Value",1867,[[],["count_r",6]]],[0,"tampid","atsamd51g::rtc::mode0","Tamper ID",null,null],[3,"TAMPID0_W","atsamd51g::rtc::mode0::tampid","Write proxy for field `TAMPID0`",null,null],[3,"TAMPID1_W","","Write proxy for field `TAMPID1`",null,null],[3,"TAMPID2_W","","Write proxy for field `TAMPID2`",null,null],[3,"TAMPID3_W","","Write proxy for field `TAMPID3`",null,null],[3,"TAMPID4_W","","Write proxy for field `TAMPID4`",null,null],[3,"TAMPEVT_W","","Write proxy for field `TAMPEVT`",null,null],[6,"R","","Reader of register TAMPID",null,null],[6,"W","","Writer for register TAMPID",null,null],[6,"TAMPID0_R","","Reader of field `TAMPID0`",null,null],[6,"TAMPID1_R","","Reader of field `TAMPID1`",null,null],[6,"TAMPID2_R","","Reader of field `TAMPID2`",null,null],[6,"TAMPID3_R","","Reader of field `TAMPID3`",null,null],[6,"TAMPID4_R","","Reader of field `TAMPID4`",null,null],[6,"TAMPEVT_R","","Reader of field `TAMPEVT`",null,null],[11,"set_bit","","Sets the field bit",1868,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1868,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1868,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1869,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1869,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1869,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1870,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1870,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1870,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1871,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1871,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1871,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1872,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1872,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1872,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1873,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1873,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1873,[[],["w",6]]],[11,"tampid0","atsamd51g::generic","Bit 0 - Tamper Input 0 Detected",6,[[],["tampid0_r",6]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",6,[[],["tampid1_r",6]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",6,[[],["tampid2_r",6]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",6,[[],["tampid3_r",6]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",6,[[],["tampid4_r",6]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",6,[[],["tampevt_r",6]]],[11,"tampid0","atsamd51g::rtc::mode0::tampid","Bit 0 - Tamper Input 0 Detected",1874,[[],["tampid0_r",6]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",1874,[[],["tampid1_r",6]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",1874,[[],["tampid2_r",6]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",1874,[[],["tampid3_r",6]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",1874,[[],["tampid4_r",6]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",1874,[[],["tampevt_r",6]]],[11,"tampid0","atsamd51g::generic","Bit 0 - Tamper Input 0 Detected",7,[[],["tampid0_w",3]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",7,[[],["tampid1_w",3]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",7,[[],["tampid2_w",3]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",7,[[],["tampid3_w",3]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",7,[[],["tampid4_w",3]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",7,[[],["tampevt_w",3]]],[11,"tampid0","atsamd51g::rtc::mode0::tampid","Bit 0 - Tamper Input 0 Detected",1875,[[],["tampid0_w",3]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",1875,[[],["tampid1_w",3]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",1875,[[],["tampid2_w",3]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",1875,[[],["tampid3_w",3]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",1875,[[],["tampid4_w",3]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",1875,[[],["tampevt_w",3]]],[0,"bkup","atsamd51g::rtc::mode0","Backup",null,null],[3,"BKUP_W","atsamd51g::rtc::mode0::bkup","Write proxy for field `BKUP`",null,null],[6,"R","","Reader of register BKUP[%s]",null,null],[6,"W","","Writer for register BKUP[%s]",null,null],[6,"BKUP_R","","Reader of field `BKUP`",null,null],[11,"bits","","Writes raw bits to the field",1876,[[],["w",6]]],[11,"bkup","atsamd51g::generic","Bits 0:31 - Backup",6,[[],["bkup_r",6]]],[11,"bkup","atsamd51g::rtc::mode0::bkup","Bits 0:31 - Backup",1877,[[],["bkup_r",6]]],[11,"bkup","atsamd51g::generic","Bits 0:31 - Backup",7,[[],["bkup_w",3]]],[11,"bkup","atsamd51g::rtc::mode0::bkup","Bits 0:31 - Backup",1878,[[],["bkup_w",3]]],[6,"CTRLA","atsamd51g::rtc::mode0","MODE0 Control A",null,null],[6,"CTRLB","","MODE0 Control B",null,null],[6,"EVCTRL","","MODE0 Event Control",null,null],[6,"INTENCLR","","MODE0 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE0 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE0 Interrupt Flag Status and Clear",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","MODE0 Synchronization Busy Status",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"COUNT","","MODE0 Counter Value",null,null],[6,"COMP","","MODE0 Compare n Value",null,null],[6,"GP","","General Purpose",null,null],[6,"TAMPCTRL","","Tamper Control",null,null],[6,"TIMESTAMP","","MODE0 Timestamp",null,null],[6,"TAMPID","","Tamper ID",null,null],[6,"BKUP","","Backup",null,null],[0,"mode1","atsamd51g::rtc","Register block 16-bit Counter with Two 16-bit Compares",null,null],[0,"ctrla","atsamd51g::rtc::mode1","MODE1 Control A",null,null],[3,"SWRST_W","atsamd51g::rtc::mode1::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"BKTRST_W","","Write proxy for field `BKTRST`",null,null],[3,"GPTRST_W","","Write proxy for field `GPTRST`",null,null],[3,"COUNTSYNC_W","","Write proxy for field `COUNTSYNC`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",1879,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",1879,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",1879,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"OFF","","0: CLK_RTC_CNT = GCLK_RTC/1",1880,null],[13,"DIV1","","1: CLK_RTC_CNT = GCLK_RTC/1",1880,null],[13,"DIV2","","2: CLK_RTC_CNT = GCLK_RTC/2",1880,null],[13,"DIV4","","3: CLK_RTC_CNT = GCLK_RTC/4",1880,null],[13,"DIV8","","4: CLK_RTC_CNT = GCLK_RTC/8",1880,null],[13,"DIV16","","5: CLK_RTC_CNT = GCLK_RTC/16",1880,null],[13,"DIV32","","6: CLK_RTC_CNT = GCLK_RTC/32",1880,null],[13,"DIV64","","7: CLK_RTC_CNT = GCLK_RTC/64",1880,null],[13,"DIV128","","8: CLK_RTC_CNT = GCLK_RTC/128",1880,null],[13,"DIV256","","9: CLK_RTC_CNT = GCLK_RTC/256",1880,null],[13,"DIV512","","10: CLK_RTC_CNT = GCLK_RTC/512",1880,null],[13,"DIV1024","","11: CLK_RTC_CNT = GCLK_RTC/1024",1880,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"BKTRST_R","","Reader of field `BKTRST`",null,null],[6,"GPTRST_R","","Reader of field `GPTRST`",null,null],[6,"COUNTSYNC_R","","Reader of field `COUNTSYNC`",null,null],[11,"set_bit","","Sets the field bit",1881,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1881,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1881,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1882,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1882,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1882,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::ctrla","Get enumerated values variant",1883,[[],[["mode_a",4],["variant",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",1883,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",1883,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",1883,[[]]],[11,"variant","","Writes `variant` to the field",1884,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",1884,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",1884,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",1884,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1884,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::ctrla","Get enumerated values variant",1885,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",1885,[[]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",1885,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1885,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1885,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1885,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1885,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1885,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1885,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1885,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1885,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",1885,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",1885,[[]]],[11,"variant","","Writes `variant` to the field",1886,[[["prescaler_a",4]],["w",6]]],[11,"off","","CLK_RTC_CNT = GCLK_RTC/1",1886,[[],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",1886,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",1886,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",1886,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",1886,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",1886,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",1886,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",1886,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",1886,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",1886,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",1886,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",1886,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1886,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1887,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1887,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1887,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1888,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1888,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1888,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1889,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1889,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1889,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",6,[[],["bktrst_r",6]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",6,[[],["gptrst_r",6]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",6,[[],["countsync_r",6]]],[11,"swrst","atsamd51g::rtc::mode1::ctrla","Bit 0 - Software Reset",1890,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",1890,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",1890,[[],["mode_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",1890,[[],["prescaler_r",6]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",1890,[[],["bktrst_r",6]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",1890,[[],["gptrst_r",6]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",1890,[[],["countsync_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",7,[[],["bktrst_w",3]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",7,[[],["gptrst_w",3]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",7,[[],["countsync_w",3]]],[11,"swrst","atsamd51g::rtc::mode1::ctrla","Bit 0 - Software Reset",1891,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",1891,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",1891,[[],["mode_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",1891,[[],["prescaler_w",3]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",1891,[[],["bktrst_w",3]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",1891,[[],["gptrst_w",3]]],[11,"countsync","","Bit 15 - Count Read Synchronization Enable",1891,[[],["countsync_w",3]]],[0,"ctrlb","atsamd51g::rtc::mode1","MODE1 Control B",null,null],[3,"GP0EN_W","atsamd51g::rtc::mode1::ctrlb","Write proxy for field `GP0EN`",null,null],[3,"GP2EN_W","","Write proxy for field `GP2EN`",null,null],[3,"DEBMAJ_W","","Write proxy for field `DEBMAJ`",null,null],[3,"DEBASYNC_W","","Write proxy for field `DEBASYNC`",null,null],[3,"RTCOUT_W","","Write proxy for field `RTCOUT`",null,null],[3,"DMAEN_W","","Write proxy for field `DMAEN`",null,null],[3,"DEBF_W","","Write proxy for field `DEBF`",null,null],[3,"ACTF_W","","Write proxy for field `ACTF`",null,null],[4,"DEBF_A","","Debounce Freqnuency",null,null],[13,"DIV2","","0: CLK_RTC_DEB = CLK_RTC/2",1892,null],[13,"DIV4","","1: CLK_RTC_DEB = CLK_RTC/4",1892,null],[13,"DIV8","","2: CLK_RTC_DEB = CLK_RTC/8",1892,null],[13,"DIV16","","3: CLK_RTC_DEB = CLK_RTC/16",1892,null],[13,"DIV32","","4: CLK_RTC_DEB = CLK_RTC/32",1892,null],[13,"DIV64","","5: CLK_RTC_DEB = CLK_RTC/64",1892,null],[13,"DIV128","","6: CLK_RTC_DEB = CLK_RTC/128",1892,null],[13,"DIV256","","7: CLK_RTC_DEB = CLK_RTC/256",1892,null],[4,"ACTF_A","","Active Layer Freqnuency",null,null],[13,"DIV2","","0: CLK_RTC_OUT = CLK_RTC/2",1893,null],[13,"DIV4","","1: CLK_RTC_OUT = CLK_RTC/4",1893,null],[13,"DIV8","","2: CLK_RTC_OUT = CLK_RTC/8",1893,null],[13,"DIV16","","3: CLK_RTC_OUT = CLK_RTC/16",1893,null],[13,"DIV32","","4: CLK_RTC_OUT = CLK_RTC/32",1893,null],[13,"DIV64","","5: CLK_RTC_OUT = CLK_RTC/64",1893,null],[13,"DIV128","","6: CLK_RTC_OUT = CLK_RTC/128",1893,null],[13,"DIV256","","7: CLK_RTC_OUT = CLK_RTC/256",1893,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"GP0EN_R","","Reader of field `GP0EN`",null,null],[6,"GP2EN_R","","Reader of field `GP2EN`",null,null],[6,"DEBMAJ_R","","Reader of field `DEBMAJ`",null,null],[6,"DEBASYNC_R","","Reader of field `DEBASYNC`",null,null],[6,"RTCOUT_R","","Reader of field `RTCOUT`",null,null],[6,"DMAEN_R","","Reader of field `DMAEN`",null,null],[6,"DEBF_R","","Reader of field `DEBF`",null,null],[6,"ACTF_R","","Reader of field `ACTF`",null,null],[11,"set_bit","","Sets the field bit",1894,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1894,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1894,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1895,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1895,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1895,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1896,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1896,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1896,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1897,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1897,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1897,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1898,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1898,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1898,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1899,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1899,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1899,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["debf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::ctrlb","Get enumerated values variant",1900,[[],["debf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1900,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1900,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1900,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1900,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1900,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1900,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1900,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1900,[[]]],[11,"variant","","Writes `variant` to the field",1901,[[["debf_a",4]],["w",6]]],[11,"div2","","CLK_RTC_DEB = CLK_RTC/2",1901,[[],["w",6]]],[11,"div4","","CLK_RTC_DEB = CLK_RTC/4",1901,[[],["w",6]]],[11,"div8","","CLK_RTC_DEB = CLK_RTC/8",1901,[[],["w",6]]],[11,"div16","","CLK_RTC_DEB = CLK_RTC/16",1901,[[],["w",6]]],[11,"div32","","CLK_RTC_DEB = CLK_RTC/32",1901,[[],["w",6]]],[11,"div64","","CLK_RTC_DEB = CLK_RTC/64",1901,[[],["w",6]]],[11,"div128","","CLK_RTC_DEB = CLK_RTC/128",1901,[[],["w",6]]],[11,"div256","","CLK_RTC_DEB = CLK_RTC/256",1901,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1901,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["actf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::ctrlb","Get enumerated values variant",1902,[[],["actf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",1902,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",1902,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",1902,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",1902,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",1902,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",1902,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",1902,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",1902,[[]]],[11,"variant","","Writes `variant` to the field",1903,[[["actf_a",4]],["w",6]]],[11,"div2","","CLK_RTC_OUT = CLK_RTC/2",1903,[[],["w",6]]],[11,"div4","","CLK_RTC_OUT = CLK_RTC/4",1903,[[],["w",6]]],[11,"div8","","CLK_RTC_OUT = CLK_RTC/8",1903,[[],["w",6]]],[11,"div16","","CLK_RTC_OUT = CLK_RTC/16",1903,[[],["w",6]]],[11,"div32","","CLK_RTC_OUT = CLK_RTC/32",1903,[[],["w",6]]],[11,"div64","","CLK_RTC_OUT = CLK_RTC/64",1903,[[],["w",6]]],[11,"div128","","CLK_RTC_OUT = CLK_RTC/128",1903,[[],["w",6]]],[11,"div256","","CLK_RTC_OUT = CLK_RTC/256",1903,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1903,[[],["w",6]]],[11,"gp0en","atsamd51g::generic","Bit 0 - General Purpose 0 Enable",6,[[],["gp0en_r",6]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",6,[[],["gp2en_r",6]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",6,[[],["debmaj_r",6]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",6,[[],["debasync_r",6]]],[11,"rtcout","","Bit 6 - RTC Output Enable",6,[[],["rtcout_r",6]]],[11,"dmaen","","Bit 7 - DMA Enable",6,[[],["dmaen_r",6]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",6,[[],["debf_r",6]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",6,[[],["actf_r",6]]],[11,"gp0en","atsamd51g::rtc::mode1::ctrlb","Bit 0 - General Purpose 0 Enable",1904,[[],["gp0en_r",6]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",1904,[[],["gp2en_r",6]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",1904,[[],["debmaj_r",6]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",1904,[[],["debasync_r",6]]],[11,"rtcout","","Bit 6 - RTC Output Enable",1904,[[],["rtcout_r",6]]],[11,"dmaen","","Bit 7 - DMA Enable",1904,[[],["dmaen_r",6]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",1904,[[],["debf_r",6]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",1904,[[],["actf_r",6]]],[11,"gp0en","atsamd51g::generic","Bit 0 - General Purpose 0 Enable",7,[[],["gp0en_w",3]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",7,[[],["gp2en_w",3]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",7,[[],["debmaj_w",3]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",7,[[],["debasync_w",3]]],[11,"rtcout","","Bit 6 - RTC Output Enable",7,[[],["rtcout_w",3]]],[11,"dmaen","","Bit 7 - DMA Enable",7,[[],["dmaen_w",3]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",7,[[],["debf_w",3]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",7,[[],["actf_w",3]]],[11,"gp0en","atsamd51g::rtc::mode1::ctrlb","Bit 0 - General Purpose 0 Enable",1905,[[],["gp0en_w",3]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",1905,[[],["gp2en_w",3]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",1905,[[],["debmaj_w",3]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",1905,[[],["debasync_w",3]]],[11,"rtcout","","Bit 6 - RTC Output Enable",1905,[[],["rtcout_w",3]]],[11,"dmaen","","Bit 7 - DMA Enable",1905,[[],["dmaen_w",3]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",1905,[[],["debf_w",3]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",1905,[[],["actf_w",3]]],[0,"evctrl","atsamd51g::rtc::mode1","MODE1 Event Control",null,null],[3,"PEREO0_W","atsamd51g::rtc::mode1::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"CMPEO0_W","","Write proxy for field `CMPEO0`",null,null],[3,"CMPEO1_W","","Write proxy for field `CMPEO1`",null,null],[3,"CMPEO2_W","","Write proxy for field `CMPEO2`",null,null],[3,"CMPEO3_W","","Write proxy for field `CMPEO3`",null,null],[3,"TAMPEREO_W","","Write proxy for field `TAMPEREO`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"TAMPEVEI_W","","Write proxy for field `TAMPEVEI`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"CMPEO0_R","","Reader of field `CMPEO0`",null,null],[6,"CMPEO1_R","","Reader of field `CMPEO1`",null,null],[6,"CMPEO2_R","","Reader of field `CMPEO2`",null,null],[6,"CMPEO3_R","","Reader of field `CMPEO3`",null,null],[6,"TAMPEREO_R","","Reader of field `TAMPEREO`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"TAMPEVEI_R","","Reader of field `TAMPEVEI`",null,null],[11,"set_bit","","Sets the field bit",1906,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1906,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1906,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1907,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1907,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1907,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1908,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1908,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1908,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1909,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1909,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1909,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1910,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1910,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1910,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1911,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1911,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1911,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1912,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1912,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1912,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1913,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1913,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1913,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1914,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1914,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1914,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1915,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1915,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1915,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1916,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1916,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1916,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1917,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1917,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1917,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1918,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1918,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1918,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1919,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1919,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1919,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1920,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1920,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1920,[[],["w",6]]],[11,"pereo0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",6,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",6,[[],["cmpeo1_r",6]]],[11,"cmpeo2","","Bit 10 - Compare 2 Event Output Enable",6,[[],["cmpeo2_r",6]]],[11,"cmpeo3","","Bit 11 - Compare 3 Event Output Enable",6,[[],["cmpeo3_r",6]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",6,[[],["tampereo_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",6,[[],["tampevei_r",6]]],[11,"pereo0","atsamd51g::rtc::mode1::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1921,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1921,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1921,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1921,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1921,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1921,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1921,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1921,[[],["pereo7_r",6]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1921,[[],["cmpeo0_r",6]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",1921,[[],["cmpeo1_r",6]]],[11,"cmpeo2","","Bit 10 - Compare 2 Event Output Enable",1921,[[],["cmpeo2_r",6]]],[11,"cmpeo3","","Bit 11 - Compare 3 Event Output Enable",1921,[[],["cmpeo3_r",6]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",1921,[[],["tampereo_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1921,[[],["ovfeo_r",6]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",1921,[[],["tampevei_r",6]]],[11,"pereo0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",7,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",7,[[],["cmpeo1_w",3]]],[11,"cmpeo2","","Bit 10 - Compare 2 Event Output Enable",7,[[],["cmpeo2_w",3]]],[11,"cmpeo3","","Bit 11 - Compare 3 Event Output Enable",7,[[],["cmpeo3_w",3]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",7,[[],["tampereo_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",7,[[],["tampevei_w",3]]],[11,"pereo0","atsamd51g::rtc::mode1::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",1922,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",1922,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",1922,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",1922,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",1922,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",1922,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",1922,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",1922,[[],["pereo7_w",3]]],[11,"cmpeo0","","Bit 8 - Compare 0 Event Output Enable",1922,[[],["cmpeo0_w",3]]],[11,"cmpeo1","","Bit 9 - Compare 1 Event Output Enable",1922,[[],["cmpeo1_w",3]]],[11,"cmpeo2","","Bit 10 - Compare 2 Event Output Enable",1922,[[],["cmpeo2_w",3]]],[11,"cmpeo3","","Bit 11 - Compare 3 Event Output Enable",1922,[[],["cmpeo3_w",3]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",1922,[[],["tampereo_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",1922,[[],["ovfeo_w",3]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",1922,[[],["tampevei_w",3]]],[0,"intenclr","atsamd51g::rtc::mode1","MODE1 Interrupt Enable Clear",null,null],[3,"PER0_W","atsamd51g::rtc::mode1::intenclr","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"CMP2_W","","Write proxy for field `CMP2`",null,null],[3,"CMP3_W","","Write proxy for field `CMP3`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"CMP2_R","","Reader of field `CMP2`",null,null],[6,"CMP3_R","","Reader of field `CMP3`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1923,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1923,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1923,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1924,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1924,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1924,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1925,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1925,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1925,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1926,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1926,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1926,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1927,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1927,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1927,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1928,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1928,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1928,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1929,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1929,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1929,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1930,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1930,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1930,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1931,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1931,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1931,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1932,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1932,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1932,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1933,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1933,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1933,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1934,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1934,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1934,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1935,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1935,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1935,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1936,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1936,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1936,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",6,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",6,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",6,[[],["cmp3_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode1::intenclr","Bit 0 - Periodic Interval 0 Interrupt Enable",1937,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1937,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1937,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1937,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1937,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1937,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1937,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1937,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1937,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1937,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",1937,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",1937,[[],["cmp3_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",1937,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1937,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",7,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",7,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",7,[[],["cmp3_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode1::intenclr","Bit 0 - Periodic Interval 0 Interrupt Enable",1938,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1938,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1938,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1938,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1938,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1938,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1938,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1938,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1938,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1938,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",1938,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",1938,[[],["cmp3_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",1938,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1938,[[],["ovf_w",3]]],[0,"intenset","atsamd51g::rtc::mode1","MODE1 Interrupt Enable Set",null,null],[3,"PER0_W","atsamd51g::rtc::mode1::intenset","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"CMP2_W","","Write proxy for field `CMP2`",null,null],[3,"CMP3_W","","Write proxy for field `CMP3`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"CMP2_R","","Reader of field `CMP2`",null,null],[6,"CMP3_R","","Reader of field `CMP3`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1939,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1939,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1939,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1940,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1940,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1940,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1941,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1941,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1941,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1942,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1942,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1942,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1943,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1943,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1943,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1944,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1944,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1944,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1945,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1945,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1945,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1946,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1946,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1946,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1947,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1947,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1947,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1948,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1948,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1948,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1949,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1949,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1949,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1950,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1950,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1950,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1951,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1951,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1951,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1952,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1952,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1952,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",6,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",6,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",6,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",6,[[],["cmp3_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode1::intenset","Bit 0 - Periodic Interval 0 Interrupt Enable",1953,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1953,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1953,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1953,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1953,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1953,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1953,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1953,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1953,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1953,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",1953,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",1953,[[],["cmp3_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",1953,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1953,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",7,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",7,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",7,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",7,[[],["cmp3_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode1::intenset","Bit 0 - Periodic Interval 0 Interrupt Enable",1954,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",1954,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",1954,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",1954,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",1954,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",1954,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",1954,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",1954,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0 Interrupt Enable",1954,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1 Interrupt Enable",1954,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 10 - Compare 2 Interrupt Enable",1954,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 11 - Compare 3 Interrupt Enable",1954,[[],["cmp3_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",1954,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",1954,[[],["ovf_w",3]]],[0,"intflag","atsamd51g::rtc::mode1","MODE1 Interrupt Flag Status and Clear",null,null],[3,"PER0_W","atsamd51g::rtc::mode1::intflag","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"CMP2_W","","Write proxy for field `CMP2`",null,null],[3,"CMP3_W","","Write proxy for field `CMP3`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"CMP2_R","","Reader of field `CMP2`",null,null],[6,"CMP3_R","","Reader of field `CMP3`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",1955,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1955,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1955,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1956,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1956,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1956,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1957,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1957,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1957,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1958,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1958,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1958,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1959,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1959,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1959,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1960,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1960,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1960,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1961,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1961,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1961,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1962,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1962,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1962,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1963,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1963,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1963,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1964,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1964,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1964,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1965,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1965,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1965,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1966,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1966,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1966,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1967,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1967,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1967,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1968,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1968,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1968,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7",6,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1",6,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 10 - Compare 2",6,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 11 - Compare 3",6,[[],["cmp3_r",6]]],[11,"tamper","","Bit 14 - Tamper",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode1::intflag","Bit 0 - Periodic Interval 0",1969,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1",1969,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2",1969,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3",1969,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4",1969,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5",1969,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6",1969,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7",1969,[[],["per7_r",6]]],[11,"cmp0","","Bit 8 - Compare 0",1969,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 9 - Compare 1",1969,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 10 - Compare 2",1969,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 11 - Compare 3",1969,[[],["cmp3_r",6]]],[11,"tamper","","Bit 14 - Tamper",1969,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow",1969,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7",7,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1",7,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 10 - Compare 2",7,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 11 - Compare 3",7,[[],["cmp3_w",3]]],[11,"tamper","","Bit 14 - Tamper",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode1::intflag","Bit 0 - Periodic Interval 0",1970,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1",1970,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2",1970,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3",1970,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4",1970,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5",1970,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6",1970,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7",1970,[[],["per7_w",3]]],[11,"cmp0","","Bit 8 - Compare 0",1970,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 9 - Compare 1",1970,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 10 - Compare 2",1970,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 11 - Compare 3",1970,[[],["cmp3_w",3]]],[11,"tamper","","Bit 14 - Tamper",1970,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow",1970,[[],["ovf_w",3]]],[0,"dbgctrl","atsamd51g::rtc::mode1","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::rtc::mode1::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",1971,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1971,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1971,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::rtc::mode1::dbgctrl","Bit 0 - Run During Debug",1972,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::rtc::mode1::dbgctrl","Bit 0 - Run During Debug",1973,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::rtc::mode1","MODE1 Synchronization Busy Status",null,null],[6,"R","atsamd51g::rtc::mode1::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"FREQCORR_R","","Reader of field `FREQCORR`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"COMP0_R","","Reader of field `COMP0`",null,null],[6,"COMP1_R","","Reader of field `COMP1`",null,null],[6,"COMP2_R","","Reader of field `COMP2`",null,null],[6,"COMP3_R","","Reader of field `COMP3`",null,null],[6,"COUNTSYNC_R","","Reader of field `COUNTSYNC`",null,null],[6,"GP0_R","","Reader of field `GP0`",null,null],[6,"GP1_R","","Reader of field `GP1`",null,null],[6,"GP2_R","","Reader of field `GP2`",null,null],[6,"GP3_R","","Reader of field `GP3`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Bit Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Bit Busy",6,[[],["enable_r",6]]],[11,"freqcorr","","Bit 2 - FREQCORR Register Busy",6,[[],["freqcorr_r",6]]],[11,"count","","Bit 3 - COUNT Register Busy",6,[[],["count_r",6]]],[11,"per","","Bit 4 - PER Register Busy",6,[[],["per_r",6]]],[11,"comp0","","Bit 5 - COMP 0 Register Busy",6,[[],["comp0_r",6]]],[11,"comp1","","Bit 6 - COMP 1 Register Busy",6,[[],["comp1_r",6]]],[11,"comp2","","Bit 7 - COMP 2 Register Busy",6,[[],["comp2_r",6]]],[11,"comp3","","Bit 8 - COMP 3 Register Busy",6,[[],["comp3_r",6]]],[11,"countsync","","Bit 15 - Count Synchronization Enable Bit Busy",6,[[],["countsync_r",6]]],[11,"gp0","","Bit 16 - General Purpose 0 Register Busy",6,[[],["gp0_r",6]]],[11,"gp1","","Bit 17 - General Purpose 1 Register Busy",6,[[],["gp1_r",6]]],[11,"gp2","","Bit 18 - General Purpose 2 Register Busy",6,[[],["gp2_r",6]]],[11,"gp3","","Bit 19 - General Purpose 3 Register Busy",6,[[],["gp3_r",6]]],[11,"swrst","atsamd51g::rtc::mode1::syncbusy","Bit 0 - Software Reset Bit Busy",1974,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Bit Busy",1974,[[],["enable_r",6]]],[11,"freqcorr","","Bit 2 - FREQCORR Register Busy",1974,[[],["freqcorr_r",6]]],[11,"count","","Bit 3 - COUNT Register Busy",1974,[[],["count_r",6]]],[11,"per","","Bit 4 - PER Register Busy",1974,[[],["per_r",6]]],[11,"comp0","","Bit 5 - COMP 0 Register Busy",1974,[[],["comp0_r",6]]],[11,"comp1","","Bit 6 - COMP 1 Register Busy",1974,[[],["comp1_r",6]]],[11,"comp2","","Bit 7 - COMP 2 Register Busy",1974,[[],["comp2_r",6]]],[11,"comp3","","Bit 8 - COMP 3 Register Busy",1974,[[],["comp3_r",6]]],[11,"countsync","","Bit 15 - Count Synchronization Enable Bit Busy",1974,[[],["countsync_r",6]]],[11,"gp0","","Bit 16 - General Purpose 0 Register Busy",1974,[[],["gp0_r",6]]],[11,"gp1","","Bit 17 - General Purpose 1 Register Busy",1974,[[],["gp1_r",6]]],[11,"gp2","","Bit 18 - General Purpose 2 Register Busy",1974,[[],["gp2_r",6]]],[11,"gp3","","Bit 19 - General Purpose 3 Register Busy",1974,[[],["gp3_r",6]]],[0,"freqcorr","atsamd51g::rtc::mode1","Frequency Correction",null,null],[3,"VALUE_W","atsamd51g::rtc::mode1::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",1975,[[],["w",6]]],[11,"set_bit","","Sets the field bit",1976,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",1976,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",1976,[[],["w",6]]],[11,"value","atsamd51g::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd51g::rtc::mode1::freqcorr","Bits 0:6 - Correction Value",1977,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",1977,[[],["sign_r",6]]],[11,"value","atsamd51g::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd51g::rtc::mode1::freqcorr","Bits 0:6 - Correction Value",1978,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",1978,[[],["sign_w",3]]],[0,"count","atsamd51g::rtc::mode1","MODE1 Counter Value",null,null],[3,"COUNT_W","atsamd51g::rtc::mode1::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",1979,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:15 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::rtc::mode1::count","Bits 0:15 - Counter Value",1980,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:15 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::rtc::mode1::count","Bits 0:15 - Counter Value",1981,[[],["count_w",3]]],[0,"per","atsamd51g::rtc::mode1","MODE1 Counter Period",null,null],[3,"PER_W","atsamd51g::rtc::mode1::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",1982,[[],["w",6]]],[11,"per","atsamd51g::generic","Bits 0:15 - Counter Period",6,[[],["per_r",6]]],[11,"per","atsamd51g::rtc::mode1::per","Bits 0:15 - Counter Period",1983,[[],["per_r",6]]],[11,"per","atsamd51g::generic","Bits 0:15 - Counter Period",7,[[],["per_w",3]]],[11,"per","atsamd51g::rtc::mode1::per","Bits 0:15 - Counter Period",1984,[[],["per_w",3]]],[0,"comp","atsamd51g::rtc::mode1","MODE1 Compare n Value",null,null],[3,"COMP_W","atsamd51g::rtc::mode1::comp","Write proxy for field `COMP`",null,null],[6,"R","","Reader of register COMP[%s]",null,null],[6,"W","","Writer for register COMP[%s]",null,null],[6,"COMP_R","","Reader of field `COMP`",null,null],[11,"bits","","Writes raw bits to the field",1985,[[],["w",6]]],[11,"comp","atsamd51g::generic","Bits 0:15 - Compare Value",6,[[],["comp_r",6]]],[11,"comp","atsamd51g::rtc::mode1::comp","Bits 0:15 - Compare Value",1986,[[],["comp_r",6]]],[11,"comp","atsamd51g::generic","Bits 0:15 - Compare Value",7,[[],["comp_w",3]]],[11,"comp","atsamd51g::rtc::mode1::comp","Bits 0:15 - Compare Value",1987,[[],["comp_w",3]]],[0,"gp","atsamd51g::rtc::mode1","General Purpose",null,null],[3,"GP_W","atsamd51g::rtc::mode1::gp","Write proxy for field `GP`",null,null],[6,"R","","Reader of register GP[%s]",null,null],[6,"W","","Writer for register GP[%s]",null,null],[6,"GP_R","","Reader of field `GP`",null,null],[11,"bits","","Writes raw bits to the field",1988,[[],["w",6]]],[11,"gp","atsamd51g::generic","Bits 0:31 - General Purpose",6,[[],["gp_r",6]]],[11,"gp","atsamd51g::rtc::mode1::gp","Bits 0:31 - General Purpose",1989,[[],["gp_r",6]]],[11,"gp","atsamd51g::generic","Bits 0:31 - General Purpose",7,[[],["gp_w",3]]],[11,"gp","atsamd51g::rtc::mode1::gp","Bits 0:31 - General Purpose",1990,[[],["gp_w",3]]],[0,"tampctrl","atsamd51g::rtc::mode1","Tamper Control",null,null],[3,"IN0ACT_W","atsamd51g::rtc::mode1::tampctrl","Write proxy for field `IN0ACT`",null,null],[3,"IN1ACT_W","","Write proxy for field `IN1ACT`",null,null],[3,"IN2ACT_W","","Write proxy for field `IN2ACT`",null,null],[3,"IN3ACT_W","","Write proxy for field `IN3ACT`",null,null],[3,"IN4ACT_W","","Write proxy for field `IN4ACT`",null,null],[3,"TAMLVL0_W","","Write proxy for field `TAMLVL0`",null,null],[3,"TAMLVL1_W","","Write proxy for field `TAMLVL1`",null,null],[3,"TAMLVL2_W","","Write proxy for field `TAMLVL2`",null,null],[3,"TAMLVL3_W","","Write proxy for field `TAMLVL3`",null,null],[3,"TAMLVL4_W","","Write proxy for field `TAMLVL4`",null,null],[3,"DEBNC0_W","","Write proxy for field `DEBNC0`",null,null],[3,"DEBNC1_W","","Write proxy for field `DEBNC1`",null,null],[3,"DEBNC2_W","","Write proxy for field `DEBNC2`",null,null],[3,"DEBNC3_W","","Write proxy for field `DEBNC3`",null,null],[3,"DEBNC4_W","","Write proxy for field `DEBNC4`",null,null],[4,"IN0ACT_A","","Tamper Input 0 Action",null,null],[13,"OFF","","0: Off (Disabled)",1991,null],[13,"WAKE","","1: Wake without timestamp",1991,null],[13,"CAPTURE","","2: Capture timestamp",1991,null],[13,"ACTL","","3: Compare IN0 to OUT",1991,null],[4,"IN1ACT_A","","Tamper Input 1 Action",null,null],[13,"OFF","","0: Off (Disabled)",1992,null],[13,"WAKE","","1: Wake without timestamp",1992,null],[13,"CAPTURE","","2: Capture timestamp",1992,null],[13,"ACTL","","3: Compare IN1 to OUT",1992,null],[4,"IN2ACT_A","","Tamper Input 2 Action",null,null],[13,"OFF","","0: Off (Disabled)",1993,null],[13,"WAKE","","1: Wake without timestamp",1993,null],[13,"CAPTURE","","2: Capture timestamp",1993,null],[13,"ACTL","","3: Compare IN2 to OUT",1993,null],[4,"IN3ACT_A","","Tamper Input 3 Action",null,null],[13,"OFF","","0: Off (Disabled)",1994,null],[13,"WAKE","","1: Wake without timestamp",1994,null],[13,"CAPTURE","","2: Capture timestamp",1994,null],[13,"ACTL","","3: Compare IN3 to OUT",1994,null],[4,"IN4ACT_A","","Tamper Input 4 Action",null,null],[13,"OFF","","0: Off (Disabled)",1995,null],[13,"WAKE","","1: Wake without timestamp",1995,null],[13,"CAPTURE","","2: Capture timestamp",1995,null],[13,"ACTL","","3: Compare IN4 to OUT",1995,null],[6,"R","","Reader of register TAMPCTRL",null,null],[6,"W","","Writer for register TAMPCTRL",null,null],[6,"IN0ACT_R","","Reader of field `IN0ACT`",null,null],[6,"IN1ACT_R","","Reader of field `IN1ACT`",null,null],[6,"IN2ACT_R","","Reader of field `IN2ACT`",null,null],[6,"IN3ACT_R","","Reader of field `IN3ACT`",null,null],[6,"IN4ACT_R","","Reader of field `IN4ACT`",null,null],[6,"TAMLVL0_R","","Reader of field `TAMLVL0`",null,null],[6,"TAMLVL1_R","","Reader of field `TAMLVL1`",null,null],[6,"TAMLVL2_R","","Reader of field `TAMLVL2`",null,null],[6,"TAMLVL3_R","","Reader of field `TAMLVL3`",null,null],[6,"TAMLVL4_R","","Reader of field `TAMLVL4`",null,null],[6,"DEBNC0_R","","Reader of field `DEBNC0`",null,null],[6,"DEBNC1_R","","Reader of field `DEBNC1`",null,null],[6,"DEBNC2_R","","Reader of field `DEBNC2`",null,null],[6,"DEBNC3_R","","Reader of field `DEBNC3`",null,null],[6,"DEBNC4_R","","Reader of field `DEBNC4`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in0act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::tampctrl","Get enumerated values variant",1996,[[],["in0act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1996,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1996,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1996,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1996,[[]]],[11,"variant","","Writes `variant` to the field",1997,[[["in0act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1997,[[],["w",6]]],[11,"wake","","Wake without timestamp",1997,[[],["w",6]]],[11,"capture","","Capture timestamp",1997,[[],["w",6]]],[11,"actl","","Compare IN0 to OUT",1997,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1997,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in1act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::tampctrl","Get enumerated values variant",1998,[[],["in1act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",1998,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",1998,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",1998,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",1998,[[]]],[11,"variant","","Writes `variant` to the field",1999,[[["in1act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",1999,[[],["w",6]]],[11,"wake","","Wake without timestamp",1999,[[],["w",6]]],[11,"capture","","Capture timestamp",1999,[[],["w",6]]],[11,"actl","","Compare IN1 to OUT",1999,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",1999,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in2act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::tampctrl","Get enumerated values variant",2000,[[],["in2act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2000,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2000,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2000,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2000,[[]]],[11,"variant","","Writes `variant` to the field",2001,[[["in2act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2001,[[],["w",6]]],[11,"wake","","Wake without timestamp",2001,[[],["w",6]]],[11,"capture","","Capture timestamp",2001,[[],["w",6]]],[11,"actl","","Compare IN2 to OUT",2001,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2001,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in3act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::tampctrl","Get enumerated values variant",2002,[[],["in3act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2002,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2002,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2002,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2002,[[]]],[11,"variant","","Writes `variant` to the field",2003,[[["in3act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2003,[[],["w",6]]],[11,"wake","","Wake without timestamp",2003,[[],["w",6]]],[11,"capture","","Capture timestamp",2003,[[],["w",6]]],[11,"actl","","Compare IN3 to OUT",2003,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2003,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in4act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode1::tampctrl","Get enumerated values variant",2004,[[],["in4act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2004,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2004,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2004,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2004,[[]]],[11,"variant","","Writes `variant` to the field",2005,[[["in4act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2005,[[],["w",6]]],[11,"wake","","Wake without timestamp",2005,[[],["w",6]]],[11,"capture","","Capture timestamp",2005,[[],["w",6]]],[11,"actl","","Compare IN4 to OUT",2005,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2005,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2006,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2006,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2006,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2007,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2007,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2007,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2008,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2008,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2008,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2009,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2009,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2009,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2010,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2010,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2010,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2011,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2011,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2011,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2012,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2012,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2012,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2013,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2013,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2013,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2014,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2014,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2014,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2015,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2015,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2015,[[],["w",6]]],[11,"in0act","atsamd51g::generic","Bits 0:1 - Tamper Input 0 Action",6,[[],["in0act_r",6]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",6,[[],["in1act_r",6]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",6,[[],["in2act_r",6]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",6,[[],["in3act_r",6]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",6,[[],["in4act_r",6]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",6,[[],["tamlvl0_r",6]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",6,[[],["tamlvl1_r",6]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",6,[[],["tamlvl2_r",6]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",6,[[],["tamlvl3_r",6]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",6,[[],["tamlvl4_r",6]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",6,[[],["debnc0_r",6]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",6,[[],["debnc1_r",6]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",6,[[],["debnc2_r",6]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",6,[[],["debnc3_r",6]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",6,[[],["debnc4_r",6]]],[11,"in0act","atsamd51g::rtc::mode1::tampctrl","Bits 0:1 - Tamper Input 0 Action",2016,[[],["in0act_r",6]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",2016,[[],["in1act_r",6]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",2016,[[],["in2act_r",6]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",2016,[[],["in3act_r",6]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",2016,[[],["in4act_r",6]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",2016,[[],["tamlvl0_r",6]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",2016,[[],["tamlvl1_r",6]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",2016,[[],["tamlvl2_r",6]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",2016,[[],["tamlvl3_r",6]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",2016,[[],["tamlvl4_r",6]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",2016,[[],["debnc0_r",6]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",2016,[[],["debnc1_r",6]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",2016,[[],["debnc2_r",6]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",2016,[[],["debnc3_r",6]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",2016,[[],["debnc4_r",6]]],[11,"in0act","atsamd51g::generic","Bits 0:1 - Tamper Input 0 Action",7,[[],["in0act_w",3]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",7,[[],["in1act_w",3]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",7,[[],["in2act_w",3]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",7,[[],["in3act_w",3]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",7,[[],["in4act_w",3]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",7,[[],["tamlvl0_w",3]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",7,[[],["tamlvl1_w",3]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",7,[[],["tamlvl2_w",3]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",7,[[],["tamlvl3_w",3]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",7,[[],["tamlvl4_w",3]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",7,[[],["debnc0_w",3]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",7,[[],["debnc1_w",3]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",7,[[],["debnc2_w",3]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",7,[[],["debnc3_w",3]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",7,[[],["debnc4_w",3]]],[11,"in0act","atsamd51g::rtc::mode1::tampctrl","Bits 0:1 - Tamper Input 0 Action",2017,[[],["in0act_w",3]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",2017,[[],["in1act_w",3]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",2017,[[],["in2act_w",3]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",2017,[[],["in3act_w",3]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",2017,[[],["in4act_w",3]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",2017,[[],["tamlvl0_w",3]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",2017,[[],["tamlvl1_w",3]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",2017,[[],["tamlvl2_w",3]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",2017,[[],["tamlvl3_w",3]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",2017,[[],["tamlvl4_w",3]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",2017,[[],["debnc0_w",3]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",2017,[[],["debnc1_w",3]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",2017,[[],["debnc2_w",3]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",2017,[[],["debnc3_w",3]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",2017,[[],["debnc4_w",3]]],[0,"timestamp","atsamd51g::rtc::mode1","MODE1 Timestamp",null,null],[6,"R","atsamd51g::rtc::mode1::timestamp","Reader of register TIMESTAMP",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"count","atsamd51g::generic","Bits 0:15 - Count Timestamp Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::rtc::mode1::timestamp","Bits 0:15 - Count Timestamp Value",2018,[[],["count_r",6]]],[0,"tampid","atsamd51g::rtc::mode1","Tamper ID",null,null],[3,"TAMPID0_W","atsamd51g::rtc::mode1::tampid","Write proxy for field `TAMPID0`",null,null],[3,"TAMPID1_W","","Write proxy for field `TAMPID1`",null,null],[3,"TAMPID2_W","","Write proxy for field `TAMPID2`",null,null],[3,"TAMPID3_W","","Write proxy for field `TAMPID3`",null,null],[3,"TAMPID4_W","","Write proxy for field `TAMPID4`",null,null],[3,"TAMPEVT_W","","Write proxy for field `TAMPEVT`",null,null],[6,"R","","Reader of register TAMPID",null,null],[6,"W","","Writer for register TAMPID",null,null],[6,"TAMPID0_R","","Reader of field `TAMPID0`",null,null],[6,"TAMPID1_R","","Reader of field `TAMPID1`",null,null],[6,"TAMPID2_R","","Reader of field `TAMPID2`",null,null],[6,"TAMPID3_R","","Reader of field `TAMPID3`",null,null],[6,"TAMPID4_R","","Reader of field `TAMPID4`",null,null],[6,"TAMPEVT_R","","Reader of field `TAMPEVT`",null,null],[11,"set_bit","","Sets the field bit",2019,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2019,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2019,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2020,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2020,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2020,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2021,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2021,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2021,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2022,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2022,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2022,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2023,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2023,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2023,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2024,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2024,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2024,[[],["w",6]]],[11,"tampid0","atsamd51g::generic","Bit 0 - Tamper Input 0 Detected",6,[[],["tampid0_r",6]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",6,[[],["tampid1_r",6]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",6,[[],["tampid2_r",6]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",6,[[],["tampid3_r",6]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",6,[[],["tampid4_r",6]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",6,[[],["tampevt_r",6]]],[11,"tampid0","atsamd51g::rtc::mode1::tampid","Bit 0 - Tamper Input 0 Detected",2025,[[],["tampid0_r",6]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",2025,[[],["tampid1_r",6]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",2025,[[],["tampid2_r",6]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",2025,[[],["tampid3_r",6]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",2025,[[],["tampid4_r",6]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",2025,[[],["tampevt_r",6]]],[11,"tampid0","atsamd51g::generic","Bit 0 - Tamper Input 0 Detected",7,[[],["tampid0_w",3]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",7,[[],["tampid1_w",3]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",7,[[],["tampid2_w",3]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",7,[[],["tampid3_w",3]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",7,[[],["tampid4_w",3]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",7,[[],["tampevt_w",3]]],[11,"tampid0","atsamd51g::rtc::mode1::tampid","Bit 0 - Tamper Input 0 Detected",2026,[[],["tampid0_w",3]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",2026,[[],["tampid1_w",3]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",2026,[[],["tampid2_w",3]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",2026,[[],["tampid3_w",3]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",2026,[[],["tampid4_w",3]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",2026,[[],["tampevt_w",3]]],[0,"bkup","atsamd51g::rtc::mode1","Backup",null,null],[3,"BKUP_W","atsamd51g::rtc::mode1::bkup","Write proxy for field `BKUP`",null,null],[6,"R","","Reader of register BKUP[%s]",null,null],[6,"W","","Writer for register BKUP[%s]",null,null],[6,"BKUP_R","","Reader of field `BKUP`",null,null],[11,"bits","","Writes raw bits to the field",2027,[[],["w",6]]],[11,"bkup","atsamd51g::generic","Bits 0:31 - Backup",6,[[],["bkup_r",6]]],[11,"bkup","atsamd51g::rtc::mode1::bkup","Bits 0:31 - Backup",2028,[[],["bkup_r",6]]],[11,"bkup","atsamd51g::generic","Bits 0:31 - Backup",7,[[],["bkup_w",3]]],[11,"bkup","atsamd51g::rtc::mode1::bkup","Bits 0:31 - Backup",2029,[[],["bkup_w",3]]],[6,"CTRLA","atsamd51g::rtc::mode1","MODE1 Control A",null,null],[6,"CTRLB","","MODE1 Control B",null,null],[6,"EVCTRL","","MODE1 Event Control",null,null],[6,"INTENCLR","","MODE1 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE1 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE1 Interrupt Flag Status and Clear",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","MODE1 Synchronization Busy Status",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"COUNT","","MODE1 Counter Value",null,null],[6,"PER","","MODE1 Counter Period",null,null],[6,"COMP","","MODE1 Compare n Value",null,null],[6,"GP","","General Purpose",null,null],[6,"TAMPCTRL","","Tamper Control",null,null],[6,"TIMESTAMP","","MODE1 Timestamp",null,null],[6,"TAMPID","","Tamper ID",null,null],[6,"BKUP","","Backup",null,null],[0,"mode2","atsamd51g::rtc","Register block Clock/Calendar with Alarm",null,null],[0,"ctrla","atsamd51g::rtc::mode2","MODE2 Control A",null,null],[3,"SWRST_W","atsamd51g::rtc::mode2::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"CLKREP_W","","Write proxy for field `CLKREP`",null,null],[3,"MATCHCLR_W","","Write proxy for field `MATCHCLR`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"BKTRST_W","","Write proxy for field `BKTRST`",null,null],[3,"GPTRST_W","","Write proxy for field `GPTRST`",null,null],[3,"CLOCKSYNC_W","","Write proxy for field `CLOCKSYNC`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"COUNT32","","0: Mode 0: 32-bit Counter",2030,null],[13,"COUNT16","","1: Mode 1: 16-bit Counter",2030,null],[13,"CLOCK","","2: Mode 2: Clock/Calendar",2030,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"OFF","","0: CLK_RTC_CNT = GCLK_RTC/1",2031,null],[13,"DIV1","","1: CLK_RTC_CNT = GCLK_RTC/1",2031,null],[13,"DIV2","","2: CLK_RTC_CNT = GCLK_RTC/2",2031,null],[13,"DIV4","","3: CLK_RTC_CNT = GCLK_RTC/4",2031,null],[13,"DIV8","","4: CLK_RTC_CNT = GCLK_RTC/8",2031,null],[13,"DIV16","","5: CLK_RTC_CNT = GCLK_RTC/16",2031,null],[13,"DIV32","","6: CLK_RTC_CNT = GCLK_RTC/32",2031,null],[13,"DIV64","","7: CLK_RTC_CNT = GCLK_RTC/64",2031,null],[13,"DIV128","","8: CLK_RTC_CNT = GCLK_RTC/128",2031,null],[13,"DIV256","","9: CLK_RTC_CNT = GCLK_RTC/256",2031,null],[13,"DIV512","","10: CLK_RTC_CNT = GCLK_RTC/512",2031,null],[13,"DIV1024","","11: CLK_RTC_CNT = GCLK_RTC/1024",2031,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"CLKREP_R","","Reader of field `CLKREP`",null,null],[6,"MATCHCLR_R","","Reader of field `MATCHCLR`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"BKTRST_R","","Reader of field `BKTRST`",null,null],[6,"GPTRST_R","","Reader of field `GPTRST`",null,null],[6,"CLOCKSYNC_R","","Reader of field `CLOCKSYNC`",null,null],[11,"set_bit","","Sets the field bit",2032,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2032,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2032,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2033,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2033,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2033,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::ctrla","Get enumerated values variant",2034,[[],[["variant",4],["mode_a",4]]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",2034,[[]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",2034,[[]]],[11,"is_clock","","Checks if the value of the field is `CLOCK`",2034,[[]]],[11,"variant","","Writes `variant` to the field",2035,[[["mode_a",4]],["w",6]]],[11,"count32","","Mode 0: 32-bit Counter",2035,[[],["w",6]]],[11,"count16","","Mode 1: 16-bit Counter",2035,[[],["w",6]]],[11,"clock","","Mode 2: Clock/Calendar",2035,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2036,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2037,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2037,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2037,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::ctrla","Get enumerated values variant",2038,[[],[["variant",4],["prescaler_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2038,[[]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",2038,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",2038,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",2038,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",2038,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",2038,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",2038,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",2038,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",2038,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",2038,[[]]],[11,"is_div512","","Checks if the value of the field is `DIV512`",2038,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",2038,[[]]],[11,"variant","","Writes `variant` to the field",2039,[[["prescaler_a",4]],["w",6]]],[11,"off","","CLK_RTC_CNT = GCLK_RTC/1",2039,[[],["w",6]]],[11,"div1","","CLK_RTC_CNT = GCLK_RTC/1",2039,[[],["w",6]]],[11,"div2","","CLK_RTC_CNT = GCLK_RTC/2",2039,[[],["w",6]]],[11,"div4","","CLK_RTC_CNT = GCLK_RTC/4",2039,[[],["w",6]]],[11,"div8","","CLK_RTC_CNT = GCLK_RTC/8",2039,[[],["w",6]]],[11,"div16","","CLK_RTC_CNT = GCLK_RTC/16",2039,[[],["w",6]]],[11,"div32","","CLK_RTC_CNT = GCLK_RTC/32",2039,[[],["w",6]]],[11,"div64","","CLK_RTC_CNT = GCLK_RTC/64",2039,[[],["w",6]]],[11,"div128","","CLK_RTC_CNT = GCLK_RTC/128",2039,[[],["w",6]]],[11,"div256","","CLK_RTC_CNT = GCLK_RTC/256",2039,[[],["w",6]]],[11,"div512","","CLK_RTC_CNT = GCLK_RTC/512",2039,[[],["w",6]]],[11,"div1024","","CLK_RTC_CNT = GCLK_RTC/1024",2039,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2040,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2041,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2041,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2041,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2042,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2042,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2042,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",6,[[],["mode_r",6]]],[11,"clkrep","","Bit 6 - Clock Representation",6,[[],["clkrep_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",6,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",6,[[],["prescaler_r",6]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",6,[[],["bktrst_r",6]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",6,[[],["gptrst_r",6]]],[11,"clocksync","","Bit 15 - Clock Read Synchronization Enable",6,[[],["clocksync_r",6]]],[11,"swrst","atsamd51g::rtc::mode2::ctrla","Bit 0 - Software Reset",2043,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",2043,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Operating Mode",2043,[[],["mode_r",6]]],[11,"clkrep","","Bit 6 - Clock Representation",2043,[[],["clkrep_r",6]]],[11,"matchclr","","Bit 7 - Clear on Match",2043,[[],["matchclr_r",6]]],[11,"prescaler","","Bits 8:11 - Prescaler",2043,[[],["prescaler_r",6]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",2043,[[],["bktrst_r",6]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",2043,[[],["gptrst_r",6]]],[11,"clocksync","","Bit 15 - Clock Read Synchronization Enable",2043,[[],["clocksync_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",7,[[],["mode_w",3]]],[11,"clkrep","","Bit 6 - Clock Representation",7,[[],["clkrep_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",7,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",7,[[],["prescaler_w",3]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",7,[[],["bktrst_w",3]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",7,[[],["gptrst_w",3]]],[11,"clocksync","","Bit 15 - Clock Read Synchronization Enable",7,[[],["clocksync_w",3]]],[11,"swrst","atsamd51g::rtc::mode2::ctrla","Bit 0 - Software Reset",2044,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",2044,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Operating Mode",2044,[[],["mode_w",3]]],[11,"clkrep","","Bit 6 - Clock Representation",2044,[[],["clkrep_w",3]]],[11,"matchclr","","Bit 7 - Clear on Match",2044,[[],["matchclr_w",3]]],[11,"prescaler","","Bits 8:11 - Prescaler",2044,[[],["prescaler_w",3]]],[11,"bktrst","","Bit 13 - BKUP Registers Reset On Tamper Enable",2044,[[],["bktrst_w",3]]],[11,"gptrst","","Bit 14 - GP Registers Reset On Tamper Enable",2044,[[],["gptrst_w",3]]],[11,"clocksync","","Bit 15 - Clock Read Synchronization Enable",2044,[[],["clocksync_w",3]]],[0,"ctrlb","atsamd51g::rtc::mode2","MODE2 Control B",null,null],[3,"GP0EN_W","atsamd51g::rtc::mode2::ctrlb","Write proxy for field `GP0EN`",null,null],[3,"GP2EN_W","","Write proxy for field `GP2EN`",null,null],[3,"DEBMAJ_W","","Write proxy for field `DEBMAJ`",null,null],[3,"DEBASYNC_W","","Write proxy for field `DEBASYNC`",null,null],[3,"RTCOUT_W","","Write proxy for field `RTCOUT`",null,null],[3,"DMAEN_W","","Write proxy for field `DMAEN`",null,null],[3,"DEBF_W","","Write proxy for field `DEBF`",null,null],[3,"ACTF_W","","Write proxy for field `ACTF`",null,null],[4,"DEBF_A","","Debounce Freqnuency",null,null],[13,"DIV2","","0: CLK_RTC_DEB = CLK_RTC/2",2045,null],[13,"DIV4","","1: CLK_RTC_DEB = CLK_RTC/4",2045,null],[13,"DIV8","","2: CLK_RTC_DEB = CLK_RTC/8",2045,null],[13,"DIV16","","3: CLK_RTC_DEB = CLK_RTC/16",2045,null],[13,"DIV32","","4: CLK_RTC_DEB = CLK_RTC/32",2045,null],[13,"DIV64","","5: CLK_RTC_DEB = CLK_RTC/64",2045,null],[13,"DIV128","","6: CLK_RTC_DEB = CLK_RTC/128",2045,null],[13,"DIV256","","7: CLK_RTC_DEB = CLK_RTC/256",2045,null],[4,"ACTF_A","","Active Layer Freqnuency",null,null],[13,"DIV2","","0: CLK_RTC_OUT = CLK_RTC/2",2046,null],[13,"DIV4","","1: CLK_RTC_OUT = CLK_RTC/4",2046,null],[13,"DIV8","","2: CLK_RTC_OUT = CLK_RTC/8",2046,null],[13,"DIV16","","3: CLK_RTC_OUT = CLK_RTC/16",2046,null],[13,"DIV32","","4: CLK_RTC_OUT = CLK_RTC/32",2046,null],[13,"DIV64","","5: CLK_RTC_OUT = CLK_RTC/64",2046,null],[13,"DIV128","","6: CLK_RTC_OUT = CLK_RTC/128",2046,null],[13,"DIV256","","7: CLK_RTC_OUT = CLK_RTC/256",2046,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"GP0EN_R","","Reader of field `GP0EN`",null,null],[6,"GP2EN_R","","Reader of field `GP2EN`",null,null],[6,"DEBMAJ_R","","Reader of field `DEBMAJ`",null,null],[6,"DEBASYNC_R","","Reader of field `DEBASYNC`",null,null],[6,"RTCOUT_R","","Reader of field `RTCOUT`",null,null],[6,"DMAEN_R","","Reader of field `DMAEN`",null,null],[6,"DEBF_R","","Reader of field `DEBF`",null,null],[6,"ACTF_R","","Reader of field `ACTF`",null,null],[11,"set_bit","","Sets the field bit",2047,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2047,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2047,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2048,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2048,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2048,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2049,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2049,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2049,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2050,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2050,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2050,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2051,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2051,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2051,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2052,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2052,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2052,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["debf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::ctrlb","Get enumerated values variant",2053,[[],["debf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",2053,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",2053,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",2053,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",2053,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",2053,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",2053,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",2053,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",2053,[[]]],[11,"variant","","Writes `variant` to the field",2054,[[["debf_a",4]],["w",6]]],[11,"div2","","CLK_RTC_DEB = CLK_RTC/2",2054,[[],["w",6]]],[11,"div4","","CLK_RTC_DEB = CLK_RTC/4",2054,[[],["w",6]]],[11,"div8","","CLK_RTC_DEB = CLK_RTC/8",2054,[[],["w",6]]],[11,"div16","","CLK_RTC_DEB = CLK_RTC/16",2054,[[],["w",6]]],[11,"div32","","CLK_RTC_DEB = CLK_RTC/32",2054,[[],["w",6]]],[11,"div64","","CLK_RTC_DEB = CLK_RTC/64",2054,[[],["w",6]]],[11,"div128","","CLK_RTC_DEB = CLK_RTC/128",2054,[[],["w",6]]],[11,"div256","","CLK_RTC_DEB = CLK_RTC/256",2054,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2054,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["actf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::ctrlb","Get enumerated values variant",2055,[[],["actf_a",4]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",2055,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",2055,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",2055,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",2055,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",2055,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",2055,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",2055,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",2055,[[]]],[11,"variant","","Writes `variant` to the field",2056,[[["actf_a",4]],["w",6]]],[11,"div2","","CLK_RTC_OUT = CLK_RTC/2",2056,[[],["w",6]]],[11,"div4","","CLK_RTC_OUT = CLK_RTC/4",2056,[[],["w",6]]],[11,"div8","","CLK_RTC_OUT = CLK_RTC/8",2056,[[],["w",6]]],[11,"div16","","CLK_RTC_OUT = CLK_RTC/16",2056,[[],["w",6]]],[11,"div32","","CLK_RTC_OUT = CLK_RTC/32",2056,[[],["w",6]]],[11,"div64","","CLK_RTC_OUT = CLK_RTC/64",2056,[[],["w",6]]],[11,"div128","","CLK_RTC_OUT = CLK_RTC/128",2056,[[],["w",6]]],[11,"div256","","CLK_RTC_OUT = CLK_RTC/256",2056,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2056,[[],["w",6]]],[11,"gp0en","atsamd51g::generic","Bit 0 - General Purpose 0 Enable",6,[[],["gp0en_r",6]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",6,[[],["gp2en_r",6]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",6,[[],["debmaj_r",6]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",6,[[],["debasync_r",6]]],[11,"rtcout","","Bit 6 - RTC Output Enable",6,[[],["rtcout_r",6]]],[11,"dmaen","","Bit 7 - DMA Enable",6,[[],["dmaen_r",6]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",6,[[],["debf_r",6]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",6,[[],["actf_r",6]]],[11,"gp0en","atsamd51g::rtc::mode2::ctrlb","Bit 0 - General Purpose 0 Enable",2057,[[],["gp0en_r",6]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",2057,[[],["gp2en_r",6]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",2057,[[],["debmaj_r",6]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",2057,[[],["debasync_r",6]]],[11,"rtcout","","Bit 6 - RTC Output Enable",2057,[[],["rtcout_r",6]]],[11,"dmaen","","Bit 7 - DMA Enable",2057,[[],["dmaen_r",6]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",2057,[[],["debf_r",6]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",2057,[[],["actf_r",6]]],[11,"gp0en","atsamd51g::generic","Bit 0 - General Purpose 0 Enable",7,[[],["gp0en_w",3]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",7,[[],["gp2en_w",3]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",7,[[],["debmaj_w",3]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",7,[[],["debasync_w",3]]],[11,"rtcout","","Bit 6 - RTC Output Enable",7,[[],["rtcout_w",3]]],[11,"dmaen","","Bit 7 - DMA Enable",7,[[],["dmaen_w",3]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",7,[[],["debf_w",3]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",7,[[],["actf_w",3]]],[11,"gp0en","atsamd51g::rtc::mode2::ctrlb","Bit 0 - General Purpose 0 Enable",2058,[[],["gp0en_w",3]]],[11,"gp2en","","Bit 1 - General Purpose 2 Enable",2058,[[],["gp2en_w",3]]],[11,"debmaj","","Bit 4 - Debouncer Majority Enable",2058,[[],["debmaj_w",3]]],[11,"debasync","","Bit 5 - Debouncer Asynchronous Enable",2058,[[],["debasync_w",3]]],[11,"rtcout","","Bit 6 - RTC Output Enable",2058,[[],["rtcout_w",3]]],[11,"dmaen","","Bit 7 - DMA Enable",2058,[[],["dmaen_w",3]]],[11,"debf","","Bits 8:10 - Debounce Freqnuency",2058,[[],["debf_w",3]]],[11,"actf","","Bits 12:14 - Active Layer Freqnuency",2058,[[],["actf_w",3]]],[0,"evctrl","atsamd51g::rtc::mode2","MODE2 Event Control",null,null],[3,"PEREO0_W","atsamd51g::rtc::mode2::evctrl","Write proxy for field `PEREO0`",null,null],[3,"PEREO1_W","","Write proxy for field `PEREO1`",null,null],[3,"PEREO2_W","","Write proxy for field `PEREO2`",null,null],[3,"PEREO3_W","","Write proxy for field `PEREO3`",null,null],[3,"PEREO4_W","","Write proxy for field `PEREO4`",null,null],[3,"PEREO5_W","","Write proxy for field `PEREO5`",null,null],[3,"PEREO6_W","","Write proxy for field `PEREO6`",null,null],[3,"PEREO7_W","","Write proxy for field `PEREO7`",null,null],[3,"ALARMEO0_W","","Write proxy for field `ALARMEO0`",null,null],[3,"ALARMEO1_W","","Write proxy for field `ALARMEO1`",null,null],[3,"TAMPEREO_W","","Write proxy for field `TAMPEREO`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"TAMPEVEI_W","","Write proxy for field `TAMPEVEI`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"PEREO0_R","","Reader of field `PEREO0`",null,null],[6,"PEREO1_R","","Reader of field `PEREO1`",null,null],[6,"PEREO2_R","","Reader of field `PEREO2`",null,null],[6,"PEREO3_R","","Reader of field `PEREO3`",null,null],[6,"PEREO4_R","","Reader of field `PEREO4`",null,null],[6,"PEREO5_R","","Reader of field `PEREO5`",null,null],[6,"PEREO6_R","","Reader of field `PEREO6`",null,null],[6,"PEREO7_R","","Reader of field `PEREO7`",null,null],[6,"ALARMEO0_R","","Reader of field `ALARMEO0`",null,null],[6,"ALARMEO1_R","","Reader of field `ALARMEO1`",null,null],[6,"TAMPEREO_R","","Reader of field `TAMPEREO`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"TAMPEVEI_R","","Reader of field `TAMPEVEI`",null,null],[11,"set_bit","","Sets the field bit",2059,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2059,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2059,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2060,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2060,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2060,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2061,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2061,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2061,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2062,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2062,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2062,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2063,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2063,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2063,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2064,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2064,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2064,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2065,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2065,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2065,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2066,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2066,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2066,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2067,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2068,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2068,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2068,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2069,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2069,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2069,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2070,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2070,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2070,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2071,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2071,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2071,[[],["w",6]]],[11,"pereo0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",6,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",6,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",6,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",6,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",6,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",6,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",6,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",6,[[],["pereo7_r",6]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",6,[[],["alarmeo0_r",6]]],[11,"alarmeo1","","Bit 9 - Alarm 1 Event Output Enable",6,[[],["alarmeo1_r",6]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",6,[[],["tampereo_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",6,[[],["tampevei_r",6]]],[11,"pereo0","atsamd51g::rtc::mode2::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",2072,[[],["pereo0_r",6]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",2072,[[],["pereo1_r",6]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",2072,[[],["pereo2_r",6]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",2072,[[],["pereo3_r",6]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",2072,[[],["pereo4_r",6]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",2072,[[],["pereo5_r",6]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",2072,[[],["pereo6_r",6]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",2072,[[],["pereo7_r",6]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",2072,[[],["alarmeo0_r",6]]],[11,"alarmeo1","","Bit 9 - Alarm 1 Event Output Enable",2072,[[],["alarmeo1_r",6]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",2072,[[],["tampereo_r",6]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",2072,[[],["ovfeo_r",6]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",2072,[[],["tampevei_r",6]]],[11,"pereo0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Event Output Enable",7,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",7,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",7,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",7,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",7,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",7,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",7,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",7,[[],["pereo7_w",3]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",7,[[],["alarmeo0_w",3]]],[11,"alarmeo1","","Bit 9 - Alarm 1 Event Output Enable",7,[[],["alarmeo1_w",3]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",7,[[],["tampereo_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",7,[[],["tampevei_w",3]]],[11,"pereo0","atsamd51g::rtc::mode2::evctrl","Bit 0 - Periodic Interval 0 Event Output Enable",2073,[[],["pereo0_w",3]]],[11,"pereo1","","Bit 1 - Periodic Interval 1 Event Output Enable",2073,[[],["pereo1_w",3]]],[11,"pereo2","","Bit 2 - Periodic Interval 2 Event Output Enable",2073,[[],["pereo2_w",3]]],[11,"pereo3","","Bit 3 - Periodic Interval 3 Event Output Enable",2073,[[],["pereo3_w",3]]],[11,"pereo4","","Bit 4 - Periodic Interval 4 Event Output Enable",2073,[[],["pereo4_w",3]]],[11,"pereo5","","Bit 5 - Periodic Interval 5 Event Output Enable",2073,[[],["pereo5_w",3]]],[11,"pereo6","","Bit 6 - Periodic Interval 6 Event Output Enable",2073,[[],["pereo6_w",3]]],[11,"pereo7","","Bit 7 - Periodic Interval 7 Event Output Enable",2073,[[],["pereo7_w",3]]],[11,"alarmeo0","","Bit 8 - Alarm 0 Event Output Enable",2073,[[],["alarmeo0_w",3]]],[11,"alarmeo1","","Bit 9 - Alarm 1 Event Output Enable",2073,[[],["alarmeo1_w",3]]],[11,"tampereo","","Bit 14 - Tamper Event Output Enable",2073,[[],["tampereo_w",3]]],[11,"ovfeo","","Bit 15 - Overflow Event Output Enable",2073,[[],["ovfeo_w",3]]],[11,"tampevei","","Bit 16 - Tamper Event Input Enable",2073,[[],["tampevei_w",3]]],[0,"intenclr","atsamd51g::rtc::mode2","MODE2 Interrupt Enable Clear",null,null],[3,"PER0_W","atsamd51g::rtc::mode2::intenclr","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"ALARM0_W","","Write proxy for field `ALARM0`",null,null],[3,"ALARM1_W","","Write proxy for field `ALARM1`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"ALARM1_R","","Reader of field `ALARM1`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",2074,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2074,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2074,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2075,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2075,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2075,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2076,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2076,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2076,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2077,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2077,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2077,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2078,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2078,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2078,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2079,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2079,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2079,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2080,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2080,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2080,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2081,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2081,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2081,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2082,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2082,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2082,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2083,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2083,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2083,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2084,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2085,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2085,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2085,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",6,[[],["per7_r",6]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",6,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",6,[[],["alarm1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode2::intenclr","Bit 0 - Periodic Interval 0 Interrupt Enable",2086,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",2086,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",2086,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",2086,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",2086,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",2086,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",2086,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",2086,[[],["per7_r",6]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",2086,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",2086,[[],["alarm1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",2086,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",2086,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Interrupt Enable",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",7,[[],["per7_w",3]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",7,[[],["alarm0_w",3]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",7,[[],["alarm1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode2::intenclr","Bit 0 - Periodic Interval 0 Interrupt Enable",2087,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Interrupt Enable",2087,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Interrupt Enable",2087,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Interrupt Enable",2087,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Interrupt Enable",2087,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Interrupt Enable",2087,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Interrupt Enable",2087,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Interrupt Enable",2087,[[],["per7_w",3]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",2087,[[],["alarm0_w",3]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",2087,[[],["alarm1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",2087,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",2087,[[],["ovf_w",3]]],[0,"intenset","atsamd51g::rtc::mode2","MODE2 Interrupt Enable Set",null,null],[3,"PER0_W","atsamd51g::rtc::mode2::intenset","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"ALARM0_W","","Write proxy for field `ALARM0`",null,null],[3,"ALARM1_W","","Write proxy for field `ALARM1`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"ALARM1_R","","Reader of field `ALARM1`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",2088,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2088,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2088,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2089,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2089,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2089,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2090,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2090,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2090,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2091,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2091,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2091,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2092,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2092,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2092,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2093,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2093,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2093,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2094,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2094,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2094,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2095,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2095,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2095,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2097,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2098,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2098,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2098,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2099,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2099,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2099,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Enable",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Enable",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Enable",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Enable",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Enable",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Enable",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Enable",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Enable",6,[[],["per7_r",6]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",6,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",6,[[],["alarm1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode2::intenset","Bit 0 - Periodic Interval 0 Enable",2100,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1 Enable",2100,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2 Enable",2100,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3 Enable",2100,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4 Enable",2100,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5 Enable",2100,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6 Enable",2100,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7 Enable",2100,[[],["per7_r",6]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",2100,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",2100,[[],["alarm1_r",6]]],[11,"tamper","","Bit 14 - Tamper Enable",2100,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",2100,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0 Enable",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Enable",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Enable",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Enable",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Enable",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Enable",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Enable",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Enable",7,[[],["per7_w",3]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",7,[[],["alarm0_w",3]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",7,[[],["alarm1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode2::intenset","Bit 0 - Periodic Interval 0 Enable",2101,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1 Enable",2101,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2 Enable",2101,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3 Enable",2101,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4 Enable",2101,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5 Enable",2101,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6 Enable",2101,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7 Enable",2101,[[],["per7_w",3]]],[11,"alarm0","","Bit 8 - Alarm 0 Interrupt Enable",2101,[[],["alarm0_w",3]]],[11,"alarm1","","Bit 9 - Alarm 1 Interrupt Enable",2101,[[],["alarm1_w",3]]],[11,"tamper","","Bit 14 - Tamper Enable",2101,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow Interrupt Enable",2101,[[],["ovf_w",3]]],[0,"intflag","atsamd51g::rtc::mode2","MODE2 Interrupt Flag Status and Clear",null,null],[3,"PER0_W","atsamd51g::rtc::mode2::intflag","Write proxy for field `PER0`",null,null],[3,"PER1_W","","Write proxy for field `PER1`",null,null],[3,"PER2_W","","Write proxy for field `PER2`",null,null],[3,"PER3_W","","Write proxy for field `PER3`",null,null],[3,"PER4_W","","Write proxy for field `PER4`",null,null],[3,"PER5_W","","Write proxy for field `PER5`",null,null],[3,"PER6_W","","Write proxy for field `PER6`",null,null],[3,"PER7_W","","Write proxy for field `PER7`",null,null],[3,"ALARM0_W","","Write proxy for field `ALARM0`",null,null],[3,"ALARM1_W","","Write proxy for field `ALARM1`",null,null],[3,"TAMPER_W","","Write proxy for field `TAMPER`",null,null],[3,"OVF_W","","Write proxy for field `OVF`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"PER0_R","","Reader of field `PER0`",null,null],[6,"PER1_R","","Reader of field `PER1`",null,null],[6,"PER2_R","","Reader of field `PER2`",null,null],[6,"PER3_R","","Reader of field `PER3`",null,null],[6,"PER4_R","","Reader of field `PER4`",null,null],[6,"PER5_R","","Reader of field `PER5`",null,null],[6,"PER6_R","","Reader of field `PER6`",null,null],[6,"PER7_R","","Reader of field `PER7`",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"ALARM1_R","","Reader of field `ALARM1`",null,null],[6,"TAMPER_R","","Reader of field `TAMPER`",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[11,"set_bit","","Sets the field bit",2102,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2102,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2102,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2105,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2106,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2106,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2106,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2107,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2107,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2107,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2108,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2108,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2108,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2109,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2109,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2109,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2110,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2110,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2110,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2111,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2111,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2111,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2112,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2112,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2112,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2113,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2113,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2113,[[],["w",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0",6,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1",6,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2",6,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3",6,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4",6,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5",6,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6",6,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7",6,[[],["per7_r",6]]],[11,"alarm0","","Bit 8 - Alarm 0",6,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 9 - Alarm 1",6,[[],["alarm1_r",6]]],[11,"tamper","","Bit 14 - Tamper",6,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow",6,[[],["ovf_r",6]]],[11,"per0","atsamd51g::rtc::mode2::intflag","Bit 0 - Periodic Interval 0",2114,[[],["per0_r",6]]],[11,"per1","","Bit 1 - Periodic Interval 1",2114,[[],["per1_r",6]]],[11,"per2","","Bit 2 - Periodic Interval 2",2114,[[],["per2_r",6]]],[11,"per3","","Bit 3 - Periodic Interval 3",2114,[[],["per3_r",6]]],[11,"per4","","Bit 4 - Periodic Interval 4",2114,[[],["per4_r",6]]],[11,"per5","","Bit 5 - Periodic Interval 5",2114,[[],["per5_r",6]]],[11,"per6","","Bit 6 - Periodic Interval 6",2114,[[],["per6_r",6]]],[11,"per7","","Bit 7 - Periodic Interval 7",2114,[[],["per7_r",6]]],[11,"alarm0","","Bit 8 - Alarm 0",2114,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 9 - Alarm 1",2114,[[],["alarm1_r",6]]],[11,"tamper","","Bit 14 - Tamper",2114,[[],["tamper_r",6]]],[11,"ovf","","Bit 15 - Overflow",2114,[[],["ovf_r",6]]],[11,"per0","atsamd51g::generic","Bit 0 - Periodic Interval 0",7,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1",7,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2",7,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3",7,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4",7,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5",7,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6",7,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7",7,[[],["per7_w",3]]],[11,"alarm0","","Bit 8 - Alarm 0",7,[[],["alarm0_w",3]]],[11,"alarm1","","Bit 9 - Alarm 1",7,[[],["alarm1_w",3]]],[11,"tamper","","Bit 14 - Tamper",7,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow",7,[[],["ovf_w",3]]],[11,"per0","atsamd51g::rtc::mode2::intflag","Bit 0 - Periodic Interval 0",2115,[[],["per0_w",3]]],[11,"per1","","Bit 1 - Periodic Interval 1",2115,[[],["per1_w",3]]],[11,"per2","","Bit 2 - Periodic Interval 2",2115,[[],["per2_w",3]]],[11,"per3","","Bit 3 - Periodic Interval 3",2115,[[],["per3_w",3]]],[11,"per4","","Bit 4 - Periodic Interval 4",2115,[[],["per4_w",3]]],[11,"per5","","Bit 5 - Periodic Interval 5",2115,[[],["per5_w",3]]],[11,"per6","","Bit 6 - Periodic Interval 6",2115,[[],["per6_w",3]]],[11,"per7","","Bit 7 - Periodic Interval 7",2115,[[],["per7_w",3]]],[11,"alarm0","","Bit 8 - Alarm 0",2115,[[],["alarm0_w",3]]],[11,"alarm1","","Bit 9 - Alarm 1",2115,[[],["alarm1_w",3]]],[11,"tamper","","Bit 14 - Tamper",2115,[[],["tamper_w",3]]],[11,"ovf","","Bit 15 - Overflow",2115,[[],["ovf_w",3]]],[0,"dbgctrl","atsamd51g::rtc::mode2","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::rtc::mode2::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",2116,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2116,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2116,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::rtc::mode2::dbgctrl","Bit 0 - Run During Debug",2117,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::rtc::mode2::dbgctrl","Bit 0 - Run During Debug",2118,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::rtc::mode2","MODE2 Synchronization Busy Status",null,null],[6,"R","atsamd51g::rtc::mode2::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"FREQCORR_R","","Reader of field `FREQCORR`",null,null],[6,"CLOCK_R","","Reader of field `CLOCK`",null,null],[6,"ALARM0_R","","Reader of field `ALARM0`",null,null],[6,"ALARM1_R","","Reader of field `ALARM1`",null,null],[6,"MASK0_R","","Reader of field `MASK0`",null,null],[6,"MASK1_R","","Reader of field `MASK1`",null,null],[6,"CLOCKSYNC_R","","Reader of field `CLOCKSYNC`",null,null],[6,"GP0_R","","Reader of field `GP0`",null,null],[6,"GP1_R","","Reader of field `GP1`",null,null],[6,"GP2_R","","Reader of field `GP2`",null,null],[6,"GP3_R","","Reader of field `GP3`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Bit Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Bit Busy",6,[[],["enable_r",6]]],[11,"freqcorr","","Bit 2 - FREQCORR Register Busy",6,[[],["freqcorr_r",6]]],[11,"clock","","Bit 3 - CLOCK Register Busy",6,[[],["clock_r",6]]],[11,"alarm0","","Bit 5 - ALARM 0 Register Busy",6,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 6 - ALARM 1 Register Busy",6,[[],["alarm1_r",6]]],[11,"mask0","","Bit 11 - MASK 0 Register Busy",6,[[],["mask0_r",6]]],[11,"mask1","","Bit 12 - MASK 1 Register Busy",6,[[],["mask1_r",6]]],[11,"clocksync","","Bit 15 - Clock Synchronization Enable Bit Busy",6,[[],["clocksync_r",6]]],[11,"gp0","","Bit 16 - General Purpose 0 Register Busy",6,[[],["gp0_r",6]]],[11,"gp1","","Bit 17 - General Purpose 1 Register Busy",6,[[],["gp1_r",6]]],[11,"gp2","","Bit 18 - General Purpose 2 Register Busy",6,[[],["gp2_r",6]]],[11,"gp3","","Bit 19 - General Purpose 3 Register Busy",6,[[],["gp3_r",6]]],[11,"swrst","atsamd51g::rtc::mode2::syncbusy","Bit 0 - Software Reset Bit Busy",2119,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Bit Busy",2119,[[],["enable_r",6]]],[11,"freqcorr","","Bit 2 - FREQCORR Register Busy",2119,[[],["freqcorr_r",6]]],[11,"clock","","Bit 3 - CLOCK Register Busy",2119,[[],["clock_r",6]]],[11,"alarm0","","Bit 5 - ALARM 0 Register Busy",2119,[[],["alarm0_r",6]]],[11,"alarm1","","Bit 6 - ALARM 1 Register Busy",2119,[[],["alarm1_r",6]]],[11,"mask0","","Bit 11 - MASK 0 Register Busy",2119,[[],["mask0_r",6]]],[11,"mask1","","Bit 12 - MASK 1 Register Busy",2119,[[],["mask1_r",6]]],[11,"clocksync","","Bit 15 - Clock Synchronization Enable Bit Busy",2119,[[],["clocksync_r",6]]],[11,"gp0","","Bit 16 - General Purpose 0 Register Busy",2119,[[],["gp0_r",6]]],[11,"gp1","","Bit 17 - General Purpose 1 Register Busy",2119,[[],["gp1_r",6]]],[11,"gp2","","Bit 18 - General Purpose 2 Register Busy",2119,[[],["gp2_r",6]]],[11,"gp3","","Bit 19 - General Purpose 3 Register Busy",2119,[[],["gp3_r",6]]],[0,"freqcorr","atsamd51g::rtc::mode2","Frequency Correction",null,null],[3,"VALUE_W","atsamd51g::rtc::mode2::freqcorr","Write proxy for field `VALUE`",null,null],[3,"SIGN_W","","Write proxy for field `SIGN`",null,null],[6,"R","","Reader of register FREQCORR",null,null],[6,"W","","Writer for register FREQCORR",null,null],[6,"VALUE_R","","Reader of field `VALUE`",null,null],[6,"SIGN_R","","Reader of field `SIGN`",null,null],[11,"bits","","Writes raw bits to the field",2120,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2121,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2121,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2121,[[],["w",6]]],[11,"value","atsamd51g::generic","Bits 0:6 - Correction Value",6,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",6,[[],["sign_r",6]]],[11,"value","atsamd51g::rtc::mode2::freqcorr","Bits 0:6 - Correction Value",2122,[[],["value_r",6]]],[11,"sign","","Bit 7 - Correction Sign",2122,[[],["sign_r",6]]],[11,"value","atsamd51g::generic","Bits 0:6 - Correction Value",7,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",7,[[],["sign_w",3]]],[11,"value","atsamd51g::rtc::mode2::freqcorr","Bits 0:6 - Correction Value",2123,[[],["value_w",3]]],[11,"sign","","Bit 7 - Correction Sign",2123,[[],["sign_w",3]]],[0,"clock","atsamd51g::rtc::mode2","MODE2 Clock Value",null,null],[3,"SECOND_W","atsamd51g::rtc::mode2::clock","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: AM when CLKREP in 12-hour",2124,null],[13,"PM","","16: PM when CLKREP in 12-hour",2124,null],[6,"R","","Reader of register CLOCK",null,null],[6,"W","","Writer for register CLOCK",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",2125,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2126,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::clock","Get enumerated values variant",2127,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",2127,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",2127,[[]]],[11,"variant","","Writes `variant` to the field",2128,[[["hour_a",4]],["w",6]]],[11,"am","","AM when CLKREP in 12-hour",2128,[[],["w",6]]],[11,"pm","","PM when CLKREP in 12-hour",2128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2128,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2129,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2130,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2131,[[],["w",6]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd51g::rtc::mode2::clock","Bits 0:5 - Second",2132,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",2132,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",2132,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",2132,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",2132,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",2132,[[],["year_r",6]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd51g::rtc::mode2::clock","Bits 0:5 - Second",2133,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",2133,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",2133,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",2133,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",2133,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",2133,[[],["year_w",3]]],[0,"gp","atsamd51g::rtc::mode2","General Purpose",null,null],[3,"GP_W","atsamd51g::rtc::mode2::gp","Write proxy for field `GP`",null,null],[6,"R","","Reader of register GP[%s]",null,null],[6,"W","","Writer for register GP[%s]",null,null],[6,"GP_R","","Reader of field `GP`",null,null],[11,"bits","","Writes raw bits to the field",2134,[[],["w",6]]],[11,"gp","atsamd51g::generic","Bits 0:31 - General Purpose",6,[[],["gp_r",6]]],[11,"gp","atsamd51g::rtc::mode2::gp","Bits 0:31 - General Purpose",2135,[[],["gp_r",6]]],[11,"gp","atsamd51g::generic","Bits 0:31 - General Purpose",7,[[],["gp_w",3]]],[11,"gp","atsamd51g::rtc::mode2::gp","Bits 0:31 - General Purpose",2136,[[],["gp_w",3]]],[0,"alarm0","atsamd51g::rtc::mode2","MODE2_ALARM Alarm n Value",null,null],[3,"SECOND_W","atsamd51g::rtc::mode2::alarm0","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: Morning hour",2137,null],[13,"PM","","16: Afternoon hour",2137,null],[6,"R","","Reader of register ALARM0",null,null],[6,"W","","Writer for register ALARM0",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",2138,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2139,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::alarm0","Get enumerated values variant",2140,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",2140,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",2140,[[]]],[11,"variant","","Writes `variant` to the field",2141,[[["hour_a",4]],["w",6]]],[11,"am","","Morning hour",2141,[[],["w",6]]],[11,"pm","","Afternoon hour",2141,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2141,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2142,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2143,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2144,[[],["w",6]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd51g::rtc::mode2::alarm0","Bits 0:5 - Second",2145,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",2145,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",2145,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",2145,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",2145,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",2145,[[],["year_r",6]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd51g::rtc::mode2::alarm0","Bits 0:5 - Second",2146,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",2146,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",2146,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",2146,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",2146,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",2146,[[],["year_w",3]]],[0,"mask0","atsamd51g::rtc::mode2","MODE2_ALARM Alarm n Mask",null,null],[3,"SEL_W","atsamd51g::rtc::mode2::mask0","Write proxy for field `SEL`",null,null],[4,"SEL_A","","Alarm Mask Selection",null,null],[13,"OFF","","0: Alarm Disabled",2147,null],[13,"SS","","1: Match seconds only",2147,null],[13,"MMSS","","2: Match seconds and minutes only",2147,null],[13,"HHMMSS","","3: Match seconds, minutes, and hours only",2147,null],[13,"DDHHMMSS","","4: Match seconds, minutes, hours, and days only",2147,null],[13,"MMDDHHMMSS","","5: Match seconds, minutes, hours, days, and months only",2147,null],[13,"YYMMDDHHMMSS","","6: Match seconds, minutes, hours, days, months, and years",2147,null],[6,"R","","Reader of register MASK0",null,null],[6,"W","","Writer for register MASK0",null,null],[6,"SEL_R","","Reader of field `SEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",6,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",6,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",6,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",6,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",6,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::mask0","Get enumerated values variant",2148,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2148,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",2148,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",2148,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",2148,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",2148,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",2148,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",2148,[[]]],[11,"variant","","Writes `variant` to the field",2149,[[["sel_a",4]],["w",6]]],[11,"off","","Alarm Disabled",2149,[[],["w",6]]],[11,"ss","","Match seconds only",2149,[[],["w",6]]],[11,"mmss","","Match seconds and minutes only",2149,[[],["w",6]]],[11,"hhmmss","","Match seconds, minutes, and hours only",2149,[[],["w",6]]],[11,"ddhhmmss","","Match seconds, minutes, hours, and days only",2149,[[],["w",6]]],[11,"mmddhhmmss","","Match seconds, minutes, hours, days, and months only",2149,[[],["w",6]]],[11,"yymmddhhmmss","","Match seconds, minutes, hours, days, months, and years",2149,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2149,[[],["w",6]]],[11,"sel","atsamd51g::generic","Bits 0:2 - Alarm Mask Selection",6,[[],["sel_r",6]]],[11,"sel","atsamd51g::rtc::mode2::mask0","Bits 0:2 - Alarm Mask Selection",2150,[[],["sel_r",6]]],[11,"sel","atsamd51g::generic","Bits 0:2 - Alarm Mask Selection",7,[[],["sel_w",3]]],[11,"sel","atsamd51g::rtc::mode2::mask0","Bits 0:2 - Alarm Mask Selection",2151,[[],["sel_w",3]]],[0,"alarm1","atsamd51g::rtc::mode2","MODE2_ALARM Alarm n Value",null,null],[3,"SECOND_W","atsamd51g::rtc::mode2::alarm1","Write proxy for field `SECOND`",null,null],[3,"MINUTE_W","","Write proxy for field `MINUTE`",null,null],[3,"HOUR_W","","Write proxy for field `HOUR`",null,null],[3,"DAY_W","","Write proxy for field `DAY`",null,null],[3,"MONTH_W","","Write proxy for field `MONTH`",null,null],[3,"YEAR_W","","Write proxy for field `YEAR`",null,null],[4,"HOUR_A","","Hour",null,null],[13,"AM","","0: Morning hour",2152,null],[13,"PM","","16: Afternoon hour",2152,null],[6,"R","","Reader of register ALARM1",null,null],[6,"W","","Writer for register ALARM1",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"bits","","Writes raw bits to the field",2153,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2154,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["hour_a",4],["variant",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::alarm1","Get enumerated values variant",2155,[[],[["hour_a",4],["variant",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",2155,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",2155,[[]]],[11,"variant","","Writes `variant` to the field",2156,[[["hour_a",4]],["w",6]]],[11,"am","","Morning hour",2156,[[],["w",6]]],[11,"pm","","Afternoon hour",2156,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2156,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2157,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2158,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2159,[[],["w",6]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",6,[[],["year_r",6]]],[11,"second","atsamd51g::rtc::mode2::alarm1","Bits 0:5 - Second",2160,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute",2160,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour",2160,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day",2160,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month",2160,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year",2160,[[],["year_r",6]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second",7,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",7,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",7,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",7,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",7,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",7,[[],["year_w",3]]],[11,"second","atsamd51g::rtc::mode2::alarm1","Bits 0:5 - Second",2161,[[],["second_w",3]]],[11,"minute","","Bits 6:11 - Minute",2161,[[],["minute_w",3]]],[11,"hour","","Bits 12:16 - Hour",2161,[[],["hour_w",3]]],[11,"day","","Bits 17:21 - Day",2161,[[],["day_w",3]]],[11,"month","","Bits 22:25 - Month",2161,[[],["month_w",3]]],[11,"year","","Bits 26:31 - Year",2161,[[],["year_w",3]]],[0,"mask1","atsamd51g::rtc::mode2","MODE2_ALARM Alarm n Mask",null,null],[3,"SEL_W","atsamd51g::rtc::mode2::mask1","Write proxy for field `SEL`",null,null],[4,"SEL_A","","Alarm Mask Selection",null,null],[13,"OFF","","0: Alarm Disabled",2162,null],[13,"SS","","1: Match seconds only",2162,null],[13,"MMSS","","2: Match seconds and minutes only",2162,null],[13,"HHMMSS","","3: Match seconds, minutes, and hours only",2162,null],[13,"DDHHMMSS","","4: Match seconds, minutes, hours, and days only",2162,null],[13,"MMDDHHMMSS","","5: Match seconds, minutes, hours, days, and months only",2162,null],[13,"YYMMDDHHMMSS","","6: Match seconds, minutes, hours, days, months, and years",2162,null],[6,"R","","Reader of register MASK1",null,null],[6,"W","","Writer for register MASK1",null,null],[6,"SEL_R","","Reader of field `SEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",6,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",6,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",6,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",6,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",6,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::mask1","Get enumerated values variant",2163,[[],[["sel_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",2163,[[]]],[11,"is_ss","","Checks if the value of the field is `SS`",2163,[[]]],[11,"is_mmss","","Checks if the value of the field is `MMSS`",2163,[[]]],[11,"is_hhmmss","","Checks if the value of the field is `HHMMSS`",2163,[[]]],[11,"is_ddhhmmss","","Checks if the value of the field is `DDHHMMSS`",2163,[[]]],[11,"is_mmddhhmmss","","Checks if the value of the field is `MMDDHHMMSS`",2163,[[]]],[11,"is_yymmddhhmmss","","Checks if the value of the field is `YYMMDDHHMMSS`",2163,[[]]],[11,"variant","","Writes `variant` to the field",2164,[[["sel_a",4]],["w",6]]],[11,"off","","Alarm Disabled",2164,[[],["w",6]]],[11,"ss","","Match seconds only",2164,[[],["w",6]]],[11,"mmss","","Match seconds and minutes only",2164,[[],["w",6]]],[11,"hhmmss","","Match seconds, minutes, and hours only",2164,[[],["w",6]]],[11,"ddhhmmss","","Match seconds, minutes, hours, and days only",2164,[[],["w",6]]],[11,"mmddhhmmss","","Match seconds, minutes, hours, days, and months only",2164,[[],["w",6]]],[11,"yymmddhhmmss","","Match seconds, minutes, hours, days, months, and years",2164,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2164,[[],["w",6]]],[11,"sel","atsamd51g::generic","Bits 0:2 - Alarm Mask Selection",6,[[],["sel_r",6]]],[11,"sel","atsamd51g::rtc::mode2::mask1","Bits 0:2 - Alarm Mask Selection",2165,[[],["sel_r",6]]],[11,"sel","atsamd51g::generic","Bits 0:2 - Alarm Mask Selection",7,[[],["sel_w",3]]],[11,"sel","atsamd51g::rtc::mode2::mask1","Bits 0:2 - Alarm Mask Selection",2166,[[],["sel_w",3]]],[0,"tampctrl","atsamd51g::rtc::mode2","Tamper Control",null,null],[3,"IN0ACT_W","atsamd51g::rtc::mode2::tampctrl","Write proxy for field `IN0ACT`",null,null],[3,"IN1ACT_W","","Write proxy for field `IN1ACT`",null,null],[3,"IN2ACT_W","","Write proxy for field `IN2ACT`",null,null],[3,"IN3ACT_W","","Write proxy for field `IN3ACT`",null,null],[3,"IN4ACT_W","","Write proxy for field `IN4ACT`",null,null],[3,"TAMLVL0_W","","Write proxy for field `TAMLVL0`",null,null],[3,"TAMLVL1_W","","Write proxy for field `TAMLVL1`",null,null],[3,"TAMLVL2_W","","Write proxy for field `TAMLVL2`",null,null],[3,"TAMLVL3_W","","Write proxy for field `TAMLVL3`",null,null],[3,"TAMLVL4_W","","Write proxy for field `TAMLVL4`",null,null],[3,"DEBNC0_W","","Write proxy for field `DEBNC0`",null,null],[3,"DEBNC1_W","","Write proxy for field `DEBNC1`",null,null],[3,"DEBNC2_W","","Write proxy for field `DEBNC2`",null,null],[3,"DEBNC3_W","","Write proxy for field `DEBNC3`",null,null],[3,"DEBNC4_W","","Write proxy for field `DEBNC4`",null,null],[4,"IN0ACT_A","","Tamper Input 0 Action",null,null],[13,"OFF","","0: Off (Disabled)",2167,null],[13,"WAKE","","1: Wake without timestamp",2167,null],[13,"CAPTURE","","2: Capture timestamp",2167,null],[13,"ACTL","","3: Compare IN0 to OUT",2167,null],[4,"IN1ACT_A","","Tamper Input 1 Action",null,null],[13,"OFF","","0: Off (Disabled)",2168,null],[13,"WAKE","","1: Wake without timestamp",2168,null],[13,"CAPTURE","","2: Capture timestamp",2168,null],[13,"ACTL","","3: Compare IN1 to OUT",2168,null],[4,"IN2ACT_A","","Tamper Input 2 Action",null,null],[13,"OFF","","0: Off (Disabled)",2169,null],[13,"WAKE","","1: Wake without timestamp",2169,null],[13,"CAPTURE","","2: Capture timestamp",2169,null],[13,"ACTL","","3: Compare IN2 to OUT",2169,null],[4,"IN3ACT_A","","Tamper Input 3 Action",null,null],[13,"OFF","","0: Off (Disabled)",2170,null],[13,"WAKE","","1: Wake without timestamp",2170,null],[13,"CAPTURE","","2: Capture timestamp",2170,null],[13,"ACTL","","3: Compare IN3 to OUT",2170,null],[4,"IN4ACT_A","","Tamper Input 4 Action",null,null],[13,"OFF","","0: Off (Disabled)",2171,null],[13,"WAKE","","1: Wake without timestamp",2171,null],[13,"CAPTURE","","2: Capture timestamp",2171,null],[13,"ACTL","","3: Compare IN4 to OUT",2171,null],[6,"R","","Reader of register TAMPCTRL",null,null],[6,"W","","Writer for register TAMPCTRL",null,null],[6,"IN0ACT_R","","Reader of field `IN0ACT`",null,null],[6,"IN1ACT_R","","Reader of field `IN1ACT`",null,null],[6,"IN2ACT_R","","Reader of field `IN2ACT`",null,null],[6,"IN3ACT_R","","Reader of field `IN3ACT`",null,null],[6,"IN4ACT_R","","Reader of field `IN4ACT`",null,null],[6,"TAMLVL0_R","","Reader of field `TAMLVL0`",null,null],[6,"TAMLVL1_R","","Reader of field `TAMLVL1`",null,null],[6,"TAMLVL2_R","","Reader of field `TAMLVL2`",null,null],[6,"TAMLVL3_R","","Reader of field `TAMLVL3`",null,null],[6,"TAMLVL4_R","","Reader of field `TAMLVL4`",null,null],[6,"DEBNC0_R","","Reader of field `DEBNC0`",null,null],[6,"DEBNC1_R","","Reader of field `DEBNC1`",null,null],[6,"DEBNC2_R","","Reader of field `DEBNC2`",null,null],[6,"DEBNC3_R","","Reader of field `DEBNC3`",null,null],[6,"DEBNC4_R","","Reader of field `DEBNC4`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in0act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::tampctrl","Get enumerated values variant",2172,[[],["in0act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2172,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2172,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2172,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2172,[[]]],[11,"variant","","Writes `variant` to the field",2173,[[["in0act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2173,[[],["w",6]]],[11,"wake","","Wake without timestamp",2173,[[],["w",6]]],[11,"capture","","Capture timestamp",2173,[[],["w",6]]],[11,"actl","","Compare IN0 to OUT",2173,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2173,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in1act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::tampctrl","Get enumerated values variant",2174,[[],["in1act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2174,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2174,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2174,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2174,[[]]],[11,"variant","","Writes `variant` to the field",2175,[[["in1act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2175,[[],["w",6]]],[11,"wake","","Wake without timestamp",2175,[[],["w",6]]],[11,"capture","","Capture timestamp",2175,[[],["w",6]]],[11,"actl","","Compare IN1 to OUT",2175,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2175,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in2act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::tampctrl","Get enumerated values variant",2176,[[],["in2act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2176,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2176,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2176,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2176,[[]]],[11,"variant","","Writes `variant` to the field",2177,[[["in2act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2177,[[],["w",6]]],[11,"wake","","Wake without timestamp",2177,[[],["w",6]]],[11,"capture","","Capture timestamp",2177,[[],["w",6]]],[11,"actl","","Compare IN2 to OUT",2177,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2177,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in3act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::tampctrl","Get enumerated values variant",2178,[[],["in3act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2178,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2178,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2178,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2178,[[]]],[11,"variant","","Writes `variant` to the field",2179,[[["in3act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2179,[[],["w",6]]],[11,"wake","","Wake without timestamp",2179,[[],["w",6]]],[11,"capture","","Capture timestamp",2179,[[],["w",6]]],[11,"actl","","Compare IN3 to OUT",2179,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2179,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["in4act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",6,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",6,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::tampctrl","Get enumerated values variant",2180,[[],["in4act_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2180,[[]]],[11,"is_wake","","Checks if the value of the field is `WAKE`",2180,[[]]],[11,"is_capture","","Checks if the value of the field is `CAPTURE`",2180,[[]]],[11,"is_actl","","Checks if the value of the field is `ACTL`",2180,[[]]],[11,"variant","","Writes `variant` to the field",2181,[[["in4act_a",4]],["w",6]]],[11,"off","","Off (Disabled)",2181,[[],["w",6]]],[11,"wake","","Wake without timestamp",2181,[[],["w",6]]],[11,"capture","","Capture timestamp",2181,[[],["w",6]]],[11,"actl","","Compare IN4 to OUT",2181,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2183,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2184,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2184,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2184,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2185,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2185,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2185,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2186,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2186,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2186,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2187,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2188,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2188,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2188,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2191,[[],["w",6]]],[11,"in0act","atsamd51g::generic","Bits 0:1 - Tamper Input 0 Action",6,[[],["in0act_r",6]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",6,[[],["in1act_r",6]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",6,[[],["in2act_r",6]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",6,[[],["in3act_r",6]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",6,[[],["in4act_r",6]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",6,[[],["tamlvl0_r",6]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",6,[[],["tamlvl1_r",6]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",6,[[],["tamlvl2_r",6]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",6,[[],["tamlvl3_r",6]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",6,[[],["tamlvl4_r",6]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",6,[[],["debnc0_r",6]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",6,[[],["debnc1_r",6]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",6,[[],["debnc2_r",6]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",6,[[],["debnc3_r",6]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",6,[[],["debnc4_r",6]]],[11,"in0act","atsamd51g::rtc::mode2::tampctrl","Bits 0:1 - Tamper Input 0 Action",2192,[[],["in0act_r",6]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",2192,[[],["in1act_r",6]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",2192,[[],["in2act_r",6]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",2192,[[],["in3act_r",6]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",2192,[[],["in4act_r",6]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",2192,[[],["tamlvl0_r",6]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",2192,[[],["tamlvl1_r",6]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",2192,[[],["tamlvl2_r",6]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",2192,[[],["tamlvl3_r",6]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",2192,[[],["tamlvl4_r",6]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",2192,[[],["debnc0_r",6]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",2192,[[],["debnc1_r",6]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",2192,[[],["debnc2_r",6]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",2192,[[],["debnc3_r",6]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",2192,[[],["debnc4_r",6]]],[11,"in0act","atsamd51g::generic","Bits 0:1 - Tamper Input 0 Action",7,[[],["in0act_w",3]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",7,[[],["in1act_w",3]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",7,[[],["in2act_w",3]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",7,[[],["in3act_w",3]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",7,[[],["in4act_w",3]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",7,[[],["tamlvl0_w",3]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",7,[[],["tamlvl1_w",3]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",7,[[],["tamlvl2_w",3]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",7,[[],["tamlvl3_w",3]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",7,[[],["tamlvl4_w",3]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",7,[[],["debnc0_w",3]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",7,[[],["debnc1_w",3]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",7,[[],["debnc2_w",3]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",7,[[],["debnc3_w",3]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",7,[[],["debnc4_w",3]]],[11,"in0act","atsamd51g::rtc::mode2::tampctrl","Bits 0:1 - Tamper Input 0 Action",2193,[[],["in0act_w",3]]],[11,"in1act","","Bits 2:3 - Tamper Input 1 Action",2193,[[],["in1act_w",3]]],[11,"in2act","","Bits 4:5 - Tamper Input 2 Action",2193,[[],["in2act_w",3]]],[11,"in3act","","Bits 6:7 - Tamper Input 3 Action",2193,[[],["in3act_w",3]]],[11,"in4act","","Bits 8:9 - Tamper Input 4 Action",2193,[[],["in4act_w",3]]],[11,"tamlvl0","","Bit 16 - Tamper Level Select 0",2193,[[],["tamlvl0_w",3]]],[11,"tamlvl1","","Bit 17 - Tamper Level Select 1",2193,[[],["tamlvl1_w",3]]],[11,"tamlvl2","","Bit 18 - Tamper Level Select 2",2193,[[],["tamlvl2_w",3]]],[11,"tamlvl3","","Bit 19 - Tamper Level Select 3",2193,[[],["tamlvl3_w",3]]],[11,"tamlvl4","","Bit 20 - Tamper Level Select 4",2193,[[],["tamlvl4_w",3]]],[11,"debnc0","","Bit 24 - Debouncer Enable 0",2193,[[],["debnc0_w",3]]],[11,"debnc1","","Bit 25 - Debouncer Enable 1",2193,[[],["debnc1_w",3]]],[11,"debnc2","","Bit 26 - Debouncer Enable 2",2193,[[],["debnc2_w",3]]],[11,"debnc3","","Bit 27 - Debouncer Enable 3",2193,[[],["debnc3_w",3]]],[11,"debnc4","","Bit 28 - Debouncer Enable 4",2193,[[],["debnc4_w",3]]],[0,"timestamp","atsamd51g::rtc::mode2","MODE2 Timestamp",null,null],[4,"HOUR_A","atsamd51g::rtc::mode2::timestamp","Hour Timestamp Value",null,null],[13,"AM","","0: AM when CLKREP in 12-hour",2194,null],[13,"PM","","16: PM when CLKREP in 12-hour",2194,null],[6,"R","","Reader of register TIMESTAMP",null,null],[6,"SECOND_R","","Reader of field `SECOND`",null,null],[6,"MINUTE_R","","Reader of field `MINUTE`",null,null],[6,"HOUR_R","","Reader of field `HOUR`",null,null],[6,"DAY_R","","Reader of field `DAY`",null,null],[6,"MONTH_R","","Reader of field `MONTH`",null,null],[6,"YEAR_R","","Reader of field `YEAR`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",6,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",6,[[]]],[11,"variant","atsamd51g::rtc::mode2::timestamp","Get enumerated values variant",2195,[[],[["variant",4],["hour_a",4]]]],[11,"is_am","","Checks if the value of the field is `AM`",2195,[[]]],[11,"is_pm","","Checks if the value of the field is `PM`",2195,[[]]],[11,"second","atsamd51g::generic","Bits 0:5 - Second Timestamp Value",6,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute Timestamp Value",6,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour Timestamp Value",6,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day Timestamp Value",6,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month Timestamp Value",6,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year Timestamp Value",6,[[],["year_r",6]]],[11,"second","atsamd51g::rtc::mode2::timestamp","Bits 0:5 - Second Timestamp Value",2196,[[],["second_r",6]]],[11,"minute","","Bits 6:11 - Minute Timestamp Value",2196,[[],["minute_r",6]]],[11,"hour","","Bits 12:16 - Hour Timestamp Value",2196,[[],["hour_r",6]]],[11,"day","","Bits 17:21 - Day Timestamp Value",2196,[[],["day_r",6]]],[11,"month","","Bits 22:25 - Month Timestamp Value",2196,[[],["month_r",6]]],[11,"year","","Bits 26:31 - Year Timestamp Value",2196,[[],["year_r",6]]],[0,"tampid","atsamd51g::rtc::mode2","Tamper ID",null,null],[3,"TAMPID0_W","atsamd51g::rtc::mode2::tampid","Write proxy for field `TAMPID0`",null,null],[3,"TAMPID1_W","","Write proxy for field `TAMPID1`",null,null],[3,"TAMPID2_W","","Write proxy for field `TAMPID2`",null,null],[3,"TAMPID3_W","","Write proxy for field `TAMPID3`",null,null],[3,"TAMPID4_W","","Write proxy for field `TAMPID4`",null,null],[3,"TAMPEVT_W","","Write proxy for field `TAMPEVT`",null,null],[6,"R","","Reader of register TAMPID",null,null],[6,"W","","Writer for register TAMPID",null,null],[6,"TAMPID0_R","","Reader of field `TAMPID0`",null,null],[6,"TAMPID1_R","","Reader of field `TAMPID1`",null,null],[6,"TAMPID2_R","","Reader of field `TAMPID2`",null,null],[6,"TAMPID3_R","","Reader of field `TAMPID3`",null,null],[6,"TAMPID4_R","","Reader of field `TAMPID4`",null,null],[6,"TAMPEVT_R","","Reader of field `TAMPEVT`",null,null],[11,"set_bit","","Sets the field bit",2197,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2197,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2197,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2198,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2198,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2198,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2199,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2199,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2199,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2200,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2200,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2200,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2202,[[],["w",6]]],[11,"tampid0","atsamd51g::generic","Bit 0 - Tamper Input 0 Detected",6,[[],["tampid0_r",6]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",6,[[],["tampid1_r",6]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",6,[[],["tampid2_r",6]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",6,[[],["tampid3_r",6]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",6,[[],["tampid4_r",6]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",6,[[],["tampevt_r",6]]],[11,"tampid0","atsamd51g::rtc::mode2::tampid","Bit 0 - Tamper Input 0 Detected",2203,[[],["tampid0_r",6]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",2203,[[],["tampid1_r",6]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",2203,[[],["tampid2_r",6]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",2203,[[],["tampid3_r",6]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",2203,[[],["tampid4_r",6]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",2203,[[],["tampevt_r",6]]],[11,"tampid0","atsamd51g::generic","Bit 0 - Tamper Input 0 Detected",7,[[],["tampid0_w",3]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",7,[[],["tampid1_w",3]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",7,[[],["tampid2_w",3]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",7,[[],["tampid3_w",3]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",7,[[],["tampid4_w",3]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",7,[[],["tampevt_w",3]]],[11,"tampid0","atsamd51g::rtc::mode2::tampid","Bit 0 - Tamper Input 0 Detected",2204,[[],["tampid0_w",3]]],[11,"tampid1","","Bit 1 - Tamper Input 1 Detected",2204,[[],["tampid1_w",3]]],[11,"tampid2","","Bit 2 - Tamper Input 2 Detected",2204,[[],["tampid2_w",3]]],[11,"tampid3","","Bit 3 - Tamper Input 3 Detected",2204,[[],["tampid3_w",3]]],[11,"tampid4","","Bit 4 - Tamper Input 4 Detected",2204,[[],["tampid4_w",3]]],[11,"tampevt","","Bit 31 - Tamper Event Detected",2204,[[],["tampevt_w",3]]],[0,"bkup","atsamd51g::rtc::mode2","Backup",null,null],[3,"BKUP_W","atsamd51g::rtc::mode2::bkup","Write proxy for field `BKUP`",null,null],[6,"R","","Reader of register BKUP[%s]",null,null],[6,"W","","Writer for register BKUP[%s]",null,null],[6,"BKUP_R","","Reader of field `BKUP`",null,null],[11,"bits","","Writes raw bits to the field",2205,[[],["w",6]]],[11,"bkup","atsamd51g::generic","Bits 0:31 - Backup",6,[[],["bkup_r",6]]],[11,"bkup","atsamd51g::rtc::mode2::bkup","Bits 0:31 - Backup",2206,[[],["bkup_r",6]]],[11,"bkup","atsamd51g::generic","Bits 0:31 - Backup",7,[[],["bkup_w",3]]],[11,"bkup","atsamd51g::rtc::mode2::bkup","Bits 0:31 - Backup",2207,[[],["bkup_w",3]]],[6,"CTRLA","atsamd51g::rtc::mode2","MODE2 Control A",null,null],[6,"CTRLB","","MODE2 Control B",null,null],[6,"EVCTRL","","MODE2 Event Control",null,null],[6,"INTENCLR","","MODE2 Interrupt Enable Clear",null,null],[6,"INTENSET","","MODE2 Interrupt Enable Set",null,null],[6,"INTFLAG","","MODE2 Interrupt Flag Status and Clear",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","MODE2 Synchronization Busy Status",null,null],[6,"FREQCORR","","Frequency Correction",null,null],[6,"CLOCK","","MODE2 Clock Value",null,null],[6,"GP","","General Purpose",null,null],[6,"ALARM0","","MODE2_ALARM Alarm n Value",null,null],[6,"MASK0","","MODE2_ALARM Alarm n Mask",null,null],[6,"ALARM1","","MODE2_ALARM Alarm n Value",null,null],[6,"MASK1","","MODE2_ALARM Alarm n Mask",null,null],[6,"TAMPCTRL","","Tamper Control",null,null],[6,"TIMESTAMP","","MODE2 Timestamp",null,null],[6,"TAMPID","","Tamper ID",null,null],[6,"BKUP","","Backup",null,null],[11,"mode2","atsamd51g::rtc","0x00 - Clock/Calendar with Alarm",2208,[[],["mode2",3]]],[11,"mode2_mut","","0x00 - Clock/Calendar with Alarm",2208,[[],["mode2",3]]],[11,"mode1","","0x00 - 16-bit Counter with Two 16-bit Compares",2208,[[],["mode1",3]]],[11,"mode1_mut","","0x00 - 16-bit Counter with Two 16-bit Compares",2208,[[],["mode1",3]]],[11,"mode0","","0x00 - 32-bit Counter with Single 32-bit Compare",2208,[[],["mode0",3]]],[11,"mode0_mut","","0x00 - 32-bit Counter with Single 32-bit Compare",2208,[[],["mode0",3]]],[0,"sdhc0","atsamd51g","SD/MMC Host Controller",null,null],[3,"RegisterBlock","atsamd51g::sdhc0","Register block",null,null],[12,"bsr","","0x04 - Block Size",2209,null],[12,"bcr","","0x06 - Block Count",2209,null],[12,"arg1r","","0x08 - Argument 1",2209,null],[12,"tmr","","0x0c - Transfer Mode",2209,null],[12,"cr","","0x0e - Command",2209,null],[12,"rr","","0x10 - Response",2209,null],[12,"bdpr","","0x20 - Buffer Data Port",2209,null],[12,"psr","","0x24 - Present State",2209,null],[12,"pcr","","0x29 - Power Control",2209,null],[12,"wcr","","0x2b - Wakeup Control",2209,null],[12,"ccr","","0x2c - Clock Control",2209,null],[12,"tcr","","0x2e - Timeout Control",2209,null],[12,"srr","","0x2f - Software Reset",2209,null],[12,"acesr","","0x3c - Auto CMD Error Status",2209,null],[12,"ca0r","","0x40 - Capabilities 0",2209,null],[12,"ca1r","","0x44 - Capabilities 1",2209,null],[12,"mccar","","0x48 - Maximum Current Capabilities",2209,null],[12,"feraces","","0x50 - Force Event for Auto CMD Error Status",2209,null],[12,"fereis","","0x52 - Force Event for Error Interrupt Status",2209,null],[12,"aesr","","0x54 - ADMA Error Status",2209,null],[12,"asar","","0x58 - ADMA System Address n",2209,null],[12,"pvr","","0x60 - Preset Value n",2209,null],[12,"sisr","","0xfc - Slot Interrupt Status",2209,null],[12,"hcvr","","0xfe - Host Controller Version",2209,null],[12,"mc1r","","0x204 - MMC Control 1",2209,null],[12,"mc2r","","0x205 - MMC Control 2",2209,null],[12,"acr","","0x208 - AHB Control",2209,null],[12,"cc2r","","0x20c - Clock Control 2",2209,null],[12,"cacr","","0x230 - Capabilities Control",2209,null],[12,"dbgr","","0x234 - Debug",2209,null],[0,"ssar","","SDMA System Address / Argument 2",null,null],[3,"ADDR_W","atsamd51g::sdhc0::ssar","Write proxy for field `ADDR`",null,null],[6,"R","","Reader of register SSAR",null,null],[6,"W","","Writer for register SSAR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[11,"bits","","Writes raw bits to the field",2210,[[],["w",6]]],[11,"addr","atsamd51g::generic","Bits 0:31 - SDMA System Address",6,[[],["addr_r",6]]],[11,"addr","atsamd51g::sdhc0::ssar","Bits 0:31 - SDMA System Address",2211,[[],["addr_r",6]]],[11,"addr","atsamd51g::generic","Bits 0:31 - SDMA System Address",7,[[],["addr_w",3]]],[11,"addr","atsamd51g::sdhc0::ssar","Bits 0:31 - SDMA System Address",2212,[[],["addr_w",3]]],[0,"ssar_cmd23_mode","atsamd51g::sdhc0","SDMA System Address / Argument 2",null,null],[3,"ARG2_W","atsamd51g::sdhc0::ssar_cmd23_mode","Write proxy for field `ARG2`",null,null],[6,"R","","Reader of register SSAR_CMD23_MODE",null,null],[6,"W","","Writer for register SSAR_CMD23_MODE",null,null],[6,"ARG2_R","","Reader of field `ARG2`",null,null],[11,"bits","","Writes raw bits to the field",2213,[[],["w",6]]],[11,"arg2","atsamd51g::generic","Bits 0:31 - Argument 2",6,[[],["arg2_r",6]]],[11,"arg2","atsamd51g::sdhc0::ssar_cmd23_mode","Bits 0:31 - Argument 2",2214,[[],["arg2_r",6]]],[11,"arg2","atsamd51g::generic","Bits 0:31 - Argument 2",7,[[],["arg2_w",3]]],[11,"arg2","atsamd51g::sdhc0::ssar_cmd23_mode","Bits 0:31 - Argument 2",2215,[[],["arg2_w",3]]],[0,"bsr","atsamd51g::sdhc0","Block Size",null,null],[3,"BLOCKSIZE_W","atsamd51g::sdhc0::bsr","Write proxy for field `BLOCKSIZE`",null,null],[3,"BOUNDARY_W","","Write proxy for field `BOUNDARY`",null,null],[4,"BOUNDARY_A","","SDMA Buffer Boundary",null,null],[13,"_4K","","0: 4k bytes",2216,null],[13,"_8K","","1: 8k bytes",2216,null],[13,"_16K","","2: 16k bytes",2216,null],[13,"_32K","","3: 32k bytes",2216,null],[13,"_64K","","4: 64k bytes",2216,null],[13,"_128K","","5: 128k bytes",2216,null],[13,"_256K","","6: 256k bytes",2216,null],[13,"_512K","","7: 512k bytes",2216,null],[6,"R","","Reader of register BSR",null,null],[6,"W","","Writer for register BSR",null,null],[6,"BLOCKSIZE_R","","Reader of field `BLOCKSIZE`",null,null],[6,"BOUNDARY_R","","Reader of field `BOUNDARY`",null,null],[11,"bits","","Writes raw bits to the field",2217,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["boundary_a",4]]],[11,"is_4k","","Checks if the value of the field is `_4K`",6,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",6,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",6,[[]]],[11,"is_32k","","Checks if the value of the field is `_32K`",6,[[]]],[11,"is_64k","","Checks if the value of the field is `_64K`",6,[[]]],[11,"is_128k","","Checks if the value of the field is `_128K`",6,[[]]],[11,"is_256k","","Checks if the value of the field is `_256K`",6,[[]]],[11,"is_512k","","Checks if the value of the field is `_512K`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bsr","Get enumerated values variant",2218,[[],["boundary_a",4]]],[11,"is_4k","","Checks if the value of the field is `_4K`",2218,[[]]],[11,"is_8k","","Checks if the value of the field is `_8K`",2218,[[]]],[11,"is_16k","","Checks if the value of the field is `_16K`",2218,[[]]],[11,"is_32k","","Checks if the value of the field is `_32K`",2218,[[]]],[11,"is_64k","","Checks if the value of the field is `_64K`",2218,[[]]],[11,"is_128k","","Checks if the value of the field is `_128K`",2218,[[]]],[11,"is_256k","","Checks if the value of the field is `_256K`",2218,[[]]],[11,"is_512k","","Checks if the value of the field is `_512K`",2218,[[]]],[11,"variant","","Writes `variant` to the field",2219,[[["boundary_a",4]],["w",6]]],[11,"_4k","","4k bytes",2219,[[],["w",6]]],[11,"_8k","","8k bytes",2219,[[],["w",6]]],[11,"_16k","","16k bytes",2219,[[],["w",6]]],[11,"_32k","","32k bytes",2219,[[],["w",6]]],[11,"_64k","","64k bytes",2219,[[],["w",6]]],[11,"_128k","","128k bytes",2219,[[],["w",6]]],[11,"_256k","","256k bytes",2219,[[],["w",6]]],[11,"_512k","","512k bytes",2219,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2219,[[],["w",6]]],[11,"blocksize","atsamd51g::generic","Bits 0:9 - Transfer Block Size",6,[[],["blocksize_r",6]]],[11,"boundary","","Bits 12:14 - SDMA Buffer Boundary",6,[[],["boundary_r",6]]],[11,"blocksize","atsamd51g::sdhc0::bsr","Bits 0:9 - Transfer Block Size",2220,[[],["blocksize_r",6]]],[11,"boundary","","Bits 12:14 - SDMA Buffer Boundary",2220,[[],["boundary_r",6]]],[11,"blocksize","atsamd51g::generic","Bits 0:9 - Transfer Block Size",7,[[],["blocksize_w",3]]],[11,"boundary","","Bits 12:14 - SDMA Buffer Boundary",7,[[],["boundary_w",3]]],[11,"blocksize","atsamd51g::sdhc0::bsr","Bits 0:9 - Transfer Block Size",2221,[[],["blocksize_w",3]]],[11,"boundary","","Bits 12:14 - SDMA Buffer Boundary",2221,[[],["boundary_w",3]]],[0,"bcr","atsamd51g::sdhc0","Block Count",null,null],[3,"BCNT_W","atsamd51g::sdhc0::bcr","Write proxy for field `BCNT`",null,null],[6,"R","","Reader of register BCR",null,null],[6,"W","","Writer for register BCR",null,null],[6,"BCNT_R","","Reader of field `BCNT`",null,null],[11,"bits","","Writes raw bits to the field",2222,[[],["w",6]]],[11,"bcnt","atsamd51g::generic","Bits 0:15 - Blocks Count for Current Transfer",6,[[],["bcnt_r",6]]],[11,"bcnt","atsamd51g::sdhc0::bcr","Bits 0:15 - Blocks Count for Current Transfer",2223,[[],["bcnt_r",6]]],[11,"bcnt","atsamd51g::generic","Bits 0:15 - Blocks Count for Current Transfer",7,[[],["bcnt_w",3]]],[11,"bcnt","atsamd51g::sdhc0::bcr","Bits 0:15 - Blocks Count for Current Transfer",2224,[[],["bcnt_w",3]]],[0,"arg1r","atsamd51g::sdhc0","Argument 1",null,null],[3,"ARG_W","atsamd51g::sdhc0::arg1r","Write proxy for field `ARG`",null,null],[6,"R","","Reader of register ARG1R",null,null],[6,"W","","Writer for register ARG1R",null,null],[6,"ARG_R","","Reader of field `ARG`",null,null],[11,"bits","","Writes raw bits to the field",2225,[[],["w",6]]],[11,"arg","atsamd51g::generic","Bits 0:31 - Argument 1",6,[[],["arg_r",6]]],[11,"arg","atsamd51g::sdhc0::arg1r","Bits 0:31 - Argument 1",2226,[[],["arg_r",6]]],[11,"arg","atsamd51g::generic","Bits 0:31 - Argument 1",7,[[],["arg_w",3]]],[11,"arg","atsamd51g::sdhc0::arg1r","Bits 0:31 - Argument 1",2227,[[],["arg_w",3]]],[0,"tmr","atsamd51g::sdhc0","Transfer Mode",null,null],[3,"DMAEN_W","atsamd51g::sdhc0::tmr","Write proxy for field `DMAEN`",null,null],[3,"BCEN_W","","Write proxy for field `BCEN`",null,null],[3,"ACMDEN_W","","Write proxy for field `ACMDEN`",null,null],[3,"DTDSEL_W","","Write proxy for field `DTDSEL`",null,null],[3,"MSBSEL_W","","Write proxy for field `MSBSEL`",null,null],[4,"DMAEN_A","","DMA Enable",null,null],[13,"DISABLE","","0: No data transfer or Non DMA data transfer",2228,null],[13,"ENABLE","","1: DMA data transfer",2228,null],[4,"BCEN_A","","Block Count Enable",null,null],[13,"DISABLE","","0: Disable",2229,null],[13,"ENABLE","","1: Enable",2229,null],[4,"ACMDEN_A","","Auto Command Enable",null,null],[13,"DISABLED","","0: Auto Command Disabled",2230,null],[13,"CMD12","","1: Auto CMD12 Enable",2230,null],[13,"CMD23","","2: Auto CMD23 Enable",2230,null],[4,"DTDSEL_A","","Data Transfer Direction Selection",null,null],[13,"WRITE","","0: Write (Host to Card)",2231,null],[13,"READ","","1: Read (Card to Host)",2231,null],[4,"MSBSEL_A","","Multi/Single Block Selection",null,null],[13,"SINGLE","","0: Single Block",2232,null],[13,"MULTIPLE","","1: Multiple Block",2232,null],[6,"R","","Reader of register TMR",null,null],[6,"W","","Writer for register TMR",null,null],[6,"DMAEN_R","","Reader of field `DMAEN`",null,null],[6,"BCEN_R","","Reader of field `BCEN`",null,null],[6,"ACMDEN_R","","Reader of field `ACMDEN`",null,null],[6,"DTDSEL_R","","Reader of field `DTDSEL`",null,null],[6,"MSBSEL_R","","Reader of field `MSBSEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::tmr","Get enumerated values variant",2233,[[],["dmaen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2233,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2233,[[]]],[11,"variant","","Writes `variant` to the field",2234,[[["dmaen_a",4]],["w",6]]],[11,"disable","","No data transfer or Non DMA data transfer",2234,[[],["w",6]]],[11,"enable","","DMA data transfer",2234,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2234,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2234,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2234,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bcen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::tmr","Get enumerated values variant",2235,[[],["bcen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2235,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2235,[[]]],[11,"variant","","Writes `variant` to the field",2236,[[["bcen_a",4]],["w",6]]],[11,"disable","","Disable",2236,[[],["w",6]]],[11,"enable","","Enable",2236,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2236,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2236,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2236,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["acmden_a",4],["variant",4]]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",6,[[]]],[11,"is_cmd12","","Checks if the value of the field is `CMD12`",6,[[]]],[11,"is_cmd23","","Checks if the value of the field is `CMD23`",6,[[]]],[11,"variant","atsamd51g::sdhc0::tmr","Get enumerated values variant",2237,[[],[["acmden_a",4],["variant",4]]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",2237,[[]]],[11,"is_cmd12","","Checks if the value of the field is `CMD12`",2237,[[]]],[11,"is_cmd23","","Checks if the value of the field is `CMD23`",2237,[[]]],[11,"variant","","Writes `variant` to the field",2238,[[["acmden_a",4]],["w",6]]],[11,"disabled","","Auto Command Disabled",2238,[[],["w",6]]],[11,"cmd12","","Auto CMD12 Enable",2238,[[],["w",6]]],[11,"cmd23","","Auto CMD23 Enable",2238,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2238,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dtdsel_a",4]]],[11,"is_write","","Checks if the value of the field is `WRITE`",6,[[]]],[11,"is_read","","Checks if the value of the field is `READ`",6,[[]]],[11,"variant","atsamd51g::sdhc0::tmr","Get enumerated values variant",2239,[[],["dtdsel_a",4]]],[11,"is_write","","Checks if the value of the field is `WRITE`",2239,[[]]],[11,"is_read","","Checks if the value of the field is `READ`",2239,[[]]],[11,"variant","","Writes `variant` to the field",2240,[[["dtdsel_a",4]],["w",6]]],[11,"write","","Write (Host to Card)",2240,[[],["w",6]]],[11,"read","","Read (Card to Host)",2240,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2240,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2240,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2240,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["msbsel_a",4]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"is_multiple","","Checks if the value of the field is `MULTIPLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::tmr","Get enumerated values variant",2241,[[],["msbsel_a",4]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",2241,[[]]],[11,"is_multiple","","Checks if the value of the field is `MULTIPLE`",2241,[[]]],[11,"variant","","Writes `variant` to the field",2242,[[["msbsel_a",4]],["w",6]]],[11,"single","","Single Block",2242,[[],["w",6]]],[11,"multiple","","Multiple Block",2242,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2242,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2242,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2242,[[],["w",6]]],[11,"dmaen","atsamd51g::generic","Bit 0 - DMA Enable",6,[[],["dmaen_r",6]]],[11,"bcen","","Bit 1 - Block Count Enable",6,[[],["bcen_r",6]]],[11,"acmden","","Bits 2:3 - Auto Command Enable",6,[[],["acmden_r",6]]],[11,"dtdsel","","Bit 4 - Data Transfer Direction Selection",6,[[],["dtdsel_r",6]]],[11,"msbsel","","Bit 5 - Multi/Single Block Selection",6,[[],["msbsel_r",6]]],[11,"dmaen","atsamd51g::sdhc0::tmr","Bit 0 - DMA Enable",2243,[[],["dmaen_r",6]]],[11,"bcen","","Bit 1 - Block Count Enable",2243,[[],["bcen_r",6]]],[11,"acmden","","Bits 2:3 - Auto Command Enable",2243,[[],["acmden_r",6]]],[11,"dtdsel","","Bit 4 - Data Transfer Direction Selection",2243,[[],["dtdsel_r",6]]],[11,"msbsel","","Bit 5 - Multi/Single Block Selection",2243,[[],["msbsel_r",6]]],[11,"dmaen","atsamd51g::generic","Bit 0 - DMA Enable",7,[[],["dmaen_w",3]]],[11,"bcen","","Bit 1 - Block Count Enable",7,[[],["bcen_w",3]]],[11,"acmden","","Bits 2:3 - Auto Command Enable",7,[[],["acmden_w",3]]],[11,"dtdsel","","Bit 4 - Data Transfer Direction Selection",7,[[],["dtdsel_w",3]]],[11,"msbsel","","Bit 5 - Multi/Single Block Selection",7,[[],["msbsel_w",3]]],[11,"dmaen","atsamd51g::sdhc0::tmr","Bit 0 - DMA Enable",2244,[[],["dmaen_w",3]]],[11,"bcen","","Bit 1 - Block Count Enable",2244,[[],["bcen_w",3]]],[11,"acmden","","Bits 2:3 - Auto Command Enable",2244,[[],["acmden_w",3]]],[11,"dtdsel","","Bit 4 - Data Transfer Direction Selection",2244,[[],["dtdsel_w",3]]],[11,"msbsel","","Bit 5 - Multi/Single Block Selection",2244,[[],["msbsel_w",3]]],[0,"cr","atsamd51g::sdhc0","Command",null,null],[3,"RESPTYP_W","atsamd51g::sdhc0::cr","Write proxy for field `RESPTYP`",null,null],[3,"CMDCCEN_W","","Write proxy for field `CMDCCEN`",null,null],[3,"CMDICEN_W","","Write proxy for field `CMDICEN`",null,null],[3,"DPSEL_W","","Write proxy for field `DPSEL`",null,null],[3,"CMDTYP_W","","Write proxy for field `CMDTYP`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[4,"RESPTYP_A","","Response Type",null,null],[13,"NONE","","0: No response",2245,null],[13,"_136_BIT","","1: 136-bit response",2245,null],[13,"_48_BIT","","2: 48-bit response",2245,null],[13,"_48_BIT_BUSY","","3: 48-bit response check busy after response",2245,null],[4,"CMDCCEN_A","","Command CRC Check Enable",null,null],[13,"DISABLE","","0: Disable",2246,null],[13,"ENABLE","","1: Enable",2246,null],[4,"CMDICEN_A","","Command Index Check Enable",null,null],[13,"DISABLE","","0: Disable",2247,null],[13,"ENABLE","","1: Enable",2247,null],[4,"DPSEL_A","","Data Present Select",null,null],[13,"NO_DATA","","0: No Data Present",2248,null],[13,"DATA","","1: Data Present",2248,null],[4,"CMDTYP_A","","Command Type",null,null],[13,"NORMAL","","0: Other commands",2249,null],[13,"SUSPEND","","1: CMD52 for writing Bus Suspend in CCCR",2249,null],[13,"RESUME","","2: CMD52 for writing Function Select in CCCR",2249,null],[13,"ABORT","","3: CMD12, CMD52 for writing I/O Abort in CCCR",2249,null],[6,"R","","Reader of register CR",null,null],[6,"W","","Writer for register CR",null,null],[6,"RESPTYP_R","","Reader of field `RESPTYP`",null,null],[6,"CMDCCEN_R","","Reader of field `CMDCCEN`",null,null],[6,"CMDICEN_R","","Reader of field `CMDICEN`",null,null],[6,"DPSEL_R","","Reader of field `DPSEL`",null,null],[6,"CMDTYP_R","","Reader of field `CMDTYP`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["resptyp_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_136_bit","","Checks if the value of the field is `_136_BIT`",6,[[]]],[11,"is_48_bit","","Checks if the value of the field is `_48_BIT`",6,[[]]],[11,"is_48_bit_busy","","Checks if the value of the field is `_48_BIT_BUSY`",6,[[]]],[11,"variant","atsamd51g::sdhc0::cr","Get enumerated values variant",2250,[[],["resptyp_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",2250,[[]]],[11,"is_136_bit","","Checks if the value of the field is `_136_BIT`",2250,[[]]],[11,"is_48_bit","","Checks if the value of the field is `_48_BIT`",2250,[[]]],[11,"is_48_bit_busy","","Checks if the value of the field is `_48_BIT_BUSY`",2250,[[]]],[11,"variant","","Writes `variant` to the field",2251,[[["resptyp_a",4]],["w",6]]],[11,"none","","No response",2251,[[],["w",6]]],[11,"_136_bit","","136-bit response",2251,[[],["w",6]]],[11,"_48_bit","","48-bit response",2251,[[],["w",6]]],[11,"_48_bit_busy","","48-bit response check busy after response",2251,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2251,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdccen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::cr","Get enumerated values variant",2252,[[],["cmdccen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2252,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2252,[[]]],[11,"variant","","Writes `variant` to the field",2253,[[["cmdccen_a",4]],["w",6]]],[11,"disable","","Disable",2253,[[],["w",6]]],[11,"enable","","Enable",2253,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2253,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2253,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2253,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdicen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::cr","Get enumerated values variant",2254,[[],["cmdicen_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2254,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2254,[[]]],[11,"variant","","Writes `variant` to the field",2255,[[["cmdicen_a",4]],["w",6]]],[11,"disable","","Disable",2255,[[],["w",6]]],[11,"enable","","Enable",2255,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2255,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2255,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2255,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dpsel_a",4]]],[11,"is_no_data","","Checks if the value of the field is `NO_DATA`",6,[[]]],[11,"is_data","","Checks if the value of the field is `DATA`",6,[[]]],[11,"variant","atsamd51g::sdhc0::cr","Get enumerated values variant",2256,[[],["dpsel_a",4]]],[11,"is_no_data","","Checks if the value of the field is `NO_DATA`",2256,[[]]],[11,"is_data","","Checks if the value of the field is `DATA`",2256,[[]]],[11,"variant","","Writes `variant` to the field",2257,[[["dpsel_a",4]],["w",6]]],[11,"no_data","","No Data Present",2257,[[],["w",6]]],[11,"data","","Data Present",2257,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2257,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2257,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2257,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdtyp_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",6,[[]]],[11,"is_abort","","Checks if the value of the field is `ABORT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::cr","Get enumerated values variant",2258,[[],["cmdtyp_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",2258,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",2258,[[]]],[11,"is_resume","","Checks if the value of the field is `RESUME`",2258,[[]]],[11,"is_abort","","Checks if the value of the field is `ABORT`",2258,[[]]],[11,"variant","","Writes `variant` to the field",2259,[[["cmdtyp_a",4]],["w",6]]],[11,"normal","","Other commands",2259,[[],["w",6]]],[11,"suspend","","CMD52 for writing Bus Suspend in CCCR",2259,[[],["w",6]]],[11,"resume","","CMD52 for writing Function Select in CCCR",2259,[[],["w",6]]],[11,"abort","","CMD12, CMD52 for writing I/O Abort in CCCR",2259,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2259,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2260,[[],["w",6]]],[11,"resptyp","atsamd51g::generic","Bits 0:1 - Response Type",6,[[],["resptyp_r",6]]],[11,"cmdccen","","Bit 3 - Command CRC Check Enable",6,[[],["cmdccen_r",6]]],[11,"cmdicen","","Bit 4 - Command Index Check Enable",6,[[],["cmdicen_r",6]]],[11,"dpsel","","Bit 5 - Data Present Select",6,[[],["dpsel_r",6]]],[11,"cmdtyp","","Bits 6:7 - Command Type",6,[[],["cmdtyp_r",6]]],[11,"cmdidx","","Bits 8:13 - Command Index",6,[[],["cmdidx_r",6]]],[11,"resptyp","atsamd51g::sdhc0::cr","Bits 0:1 - Response Type",2261,[[],["resptyp_r",6]]],[11,"cmdccen","","Bit 3 - Command CRC Check Enable",2261,[[],["cmdccen_r",6]]],[11,"cmdicen","","Bit 4 - Command Index Check Enable",2261,[[],["cmdicen_r",6]]],[11,"dpsel","","Bit 5 - Data Present Select",2261,[[],["dpsel_r",6]]],[11,"cmdtyp","","Bits 6:7 - Command Type",2261,[[],["cmdtyp_r",6]]],[11,"cmdidx","","Bits 8:13 - Command Index",2261,[[],["cmdidx_r",6]]],[11,"resptyp","atsamd51g::generic","Bits 0:1 - Response Type",7,[[],["resptyp_w",3]]],[11,"cmdccen","","Bit 3 - Command CRC Check Enable",7,[[],["cmdccen_w",3]]],[11,"cmdicen","","Bit 4 - Command Index Check Enable",7,[[],["cmdicen_w",3]]],[11,"dpsel","","Bit 5 - Data Present Select",7,[[],["dpsel_w",3]]],[11,"cmdtyp","","Bits 6:7 - Command Type",7,[[],["cmdtyp_w",3]]],[11,"cmdidx","","Bits 8:13 - Command Index",7,[[],["cmdidx_w",3]]],[11,"resptyp","atsamd51g::sdhc0::cr","Bits 0:1 - Response Type",2262,[[],["resptyp_w",3]]],[11,"cmdccen","","Bit 3 - Command CRC Check Enable",2262,[[],["cmdccen_w",3]]],[11,"cmdicen","","Bit 4 - Command Index Check Enable",2262,[[],["cmdicen_w",3]]],[11,"dpsel","","Bit 5 - Data Present Select",2262,[[],["dpsel_w",3]]],[11,"cmdtyp","","Bits 6:7 - Command Type",2262,[[],["cmdtyp_w",3]]],[11,"cmdidx","","Bits 8:13 - Command Index",2262,[[],["cmdidx_w",3]]],[0,"rr","atsamd51g::sdhc0","Response",null,null],[6,"R","atsamd51g::sdhc0::rr","Reader of register RR[%s]",null,null],[6,"CMDRESP_R","","Reader of field `CMDRESP`",null,null],[11,"cmdresp","atsamd51g::generic","Bits 0:31 - Command Response",6,[[],["cmdresp_r",6]]],[11,"cmdresp","atsamd51g::sdhc0::rr","Bits 0:31 - Command Response",2263,[[],["cmdresp_r",6]]],[0,"bdpr","atsamd51g::sdhc0","Buffer Data Port",null,null],[3,"BUFDATA_W","atsamd51g::sdhc0::bdpr","Write proxy for field `BUFDATA`",null,null],[6,"R","","Reader of register BDPR",null,null],[6,"W","","Writer for register BDPR",null,null],[6,"BUFDATA_R","","Reader of field `BUFDATA`",null,null],[11,"bits","","Writes raw bits to the field",2264,[[],["w",6]]],[11,"bufdata","atsamd51g::generic","Bits 0:31 - Buffer Data",6,[[],["bufdata_r",6]]],[11,"bufdata","atsamd51g::sdhc0::bdpr","Bits 0:31 - Buffer Data",2265,[[],["bufdata_r",6]]],[11,"bufdata","atsamd51g::generic","Bits 0:31 - Buffer Data",7,[[],["bufdata_w",3]]],[11,"bufdata","atsamd51g::sdhc0::bdpr","Bits 0:31 - Buffer Data",2266,[[],["bufdata_w",3]]],[0,"psr","atsamd51g::sdhc0","Present State",null,null],[4,"CMDINHC_A","atsamd51g::sdhc0::psr","Command Inhibit (CMD)",null,null],[13,"CAN","","0: Can issue command using only CMD line",2267,null],[13,"CANNOT","","1: Cannot issue command",2267,null],[4,"CMDINHD_A","","Command Inhibit (DAT)",null,null],[13,"CAN","","0: Can issue command which uses the DAT line",2268,null],[13,"CANNOT","","1: Cannot issue command which uses the DAT line",2268,null],[4,"DLACT_A","","DAT Line Active",null,null],[13,"INACTIVE","","0: DAT Line Inactive",2269,null],[13,"ACTIVE","","1: DAT Line Active",2269,null],[4,"RTREQ_A","","Re-Tuning Request",null,null],[13,"OK","","0: Fixed or well-tuned sampling clock",2270,null],[13,"REQUIRED","","1: Sampling clock needs re-tuning",2270,null],[4,"WTACT_A","","Write Transfer Active",null,null],[13,"NO","","0: No valid data",2271,null],[13,"YES","","1: Transferring data",2271,null],[4,"RTACT_A","","Read Transfer Active",null,null],[13,"NO","","0: No valid data",2272,null],[13,"YES","","1: Transferring data",2272,null],[4,"BUFWREN_A","","Buffer Write Enable",null,null],[13,"DISABLE","","0: Write disable",2273,null],[13,"ENABLE","","1: Write enable",2273,null],[4,"BUFRDEN_A","","Buffer Read Enable",null,null],[13,"DISABLE","","0: Read disable",2274,null],[13,"ENABLE","","1: Read enable",2274,null],[4,"CARDINS_A","","Card Inserted",null,null],[13,"NO","","0: Reset or Debouncing or No Card",2275,null],[13,"YES","","1: Card inserted",2275,null],[4,"CARDSS_A","","Card State Stable",null,null],[13,"NO","","0: Reset or Debouncing",2276,null],[13,"YES","","1: No Card or Insered",2276,null],[4,"CARDDPL_A","","Card Detect Pin Level",null,null],[13,"NO","","0: No card present (SDCD#=1)",2277,null],[13,"YES","","1: Card present (SDCD#=0)",2277,null],[4,"WRPPL_A","","Write Protect Pin Level",null,null],[13,"PROTECTED","","0: Write protected (SDWP#=0)",2278,null],[13,"ENABLED","","1: Write enabled (SDWP#=1)",2278,null],[6,"R","","Reader of register PSR",null,null],[6,"CMDINHC_R","","Reader of field `CMDINHC`",null,null],[6,"CMDINHD_R","","Reader of field `CMDINHD`",null,null],[6,"DLACT_R","","Reader of field `DLACT`",null,null],[6,"RTREQ_R","","Reader of field `RTREQ`",null,null],[6,"WTACT_R","","Reader of field `WTACT`",null,null],[6,"RTACT_R","","Reader of field `RTACT`",null,null],[6,"BUFWREN_R","","Reader of field `BUFWREN`",null,null],[6,"BUFRDEN_R","","Reader of field `BUFRDEN`",null,null],[6,"CARDINS_R","","Reader of field `CARDINS`",null,null],[6,"CARDSS_R","","Reader of field `CARDSS`",null,null],[6,"CARDDPL_R","","Reader of field `CARDDPL`",null,null],[6,"WRPPL_R","","Reader of field `WRPPL`",null,null],[6,"DATLL_R","","Reader of field `DATLL`",null,null],[6,"CMDLL_R","","Reader of field `CMDLL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdinhc_a",4]]],[11,"is_can","","Checks if the value of the field is `CAN`",6,[[]]],[11,"is_cannot","","Checks if the value of the field is `CANNOT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2279,[[],["cmdinhc_a",4]]],[11,"is_can","","Checks if the value of the field is `CAN`",2279,[[]]],[11,"is_cannot","","Checks if the value of the field is `CANNOT`",2279,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdinhd_a",4]]],[11,"is_can","","Checks if the value of the field is `CAN`",6,[[]]],[11,"is_cannot","","Checks if the value of the field is `CANNOT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2280,[[],["cmdinhd_a",4]]],[11,"is_can","","Checks if the value of the field is `CAN`",2280,[[]]],[11,"is_cannot","","Checks if the value of the field is `CANNOT`",2280,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dlact_a",4]]],[11,"is_inactive","","Checks if the value of the field is `INACTIVE`",6,[[]]],[11,"is_active","","Checks if the value of the field is `ACTIVE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2281,[[],["dlact_a",4]]],[11,"is_inactive","","Checks if the value of the field is `INACTIVE`",2281,[[]]],[11,"is_active","","Checks if the value of the field is `ACTIVE`",2281,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["rtreq_a",4]]],[11,"is_ok","","Checks if the value of the field is `OK`",6,[[]]],[11,"is_required","","Checks if the value of the field is `REQUIRED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2282,[[],["rtreq_a",4]]],[11,"is_ok","","Checks if the value of the field is `OK`",2282,[[]]],[11,"is_required","","Checks if the value of the field is `REQUIRED`",2282,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wtact_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2283,[[],["wtact_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2283,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2283,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["rtact_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2284,[[],["rtact_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2284,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2284,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bufwren_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2285,[[],["bufwren_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2285,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2285,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bufrden_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2286,[[],["bufrden_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2286,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2286,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cardins_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2287,[[],["cardins_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2287,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2287,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cardss_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2288,[[],["cardss_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2288,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2288,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["carddpl_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2289,[[],["carddpl_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2289,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2289,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wrppl_a",4]]],[11,"is_protected","","Checks if the value of the field is `PROTECTED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::psr","Get enumerated values variant",2290,[[],["wrppl_a",4]]],[11,"is_protected","","Checks if the value of the field is `PROTECTED`",2290,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2290,[[]]],[11,"cmdinhc","atsamd51g::generic","Bit 0 - Command Inhibit (CMD)",6,[[],["cmdinhc_r",6]]],[11,"cmdinhd","","Bit 1 - Command Inhibit (DAT)",6,[[],["cmdinhd_r",6]]],[11,"dlact","","Bit 2 - DAT Line Active",6,[[],["dlact_r",6]]],[11,"rtreq","","Bit 3 - Re-Tuning Request",6,[[],["rtreq_r",6]]],[11,"wtact","","Bit 8 - Write Transfer Active",6,[[],["wtact_r",6]]],[11,"rtact","","Bit 9 - Read Transfer Active",6,[[],["rtact_r",6]]],[11,"bufwren","","Bit 10 - Buffer Write Enable",6,[[],["bufwren_r",6]]],[11,"bufrden","","Bit 11 - Buffer Read Enable",6,[[],["bufrden_r",6]]],[11,"cardins","","Bit 16 - Card Inserted",6,[[],["cardins_r",6]]],[11,"cardss","","Bit 17 - Card State Stable",6,[[],["cardss_r",6]]],[11,"carddpl","","Bit 18 - Card Detect Pin Level",6,[[],["carddpl_r",6]]],[11,"wrppl","","Bit 19 - Write Protect Pin Level",6,[[],["wrppl_r",6]]],[11,"datll","","Bits 20:23 - DAT[3:0] Line Level",6,[[],["datll_r",6]]],[11,"cmdll","","Bit 24 - CMD Line Level",6,[[],["cmdll_r",6]]],[11,"cmdinhc","atsamd51g::sdhc0::psr","Bit 0 - Command Inhibit (CMD)",2291,[[],["cmdinhc_r",6]]],[11,"cmdinhd","","Bit 1 - Command Inhibit (DAT)",2291,[[],["cmdinhd_r",6]]],[11,"dlact","","Bit 2 - DAT Line Active",2291,[[],["dlact_r",6]]],[11,"rtreq","","Bit 3 - Re-Tuning Request",2291,[[],["rtreq_r",6]]],[11,"wtact","","Bit 8 - Write Transfer Active",2291,[[],["wtact_r",6]]],[11,"rtact","","Bit 9 - Read Transfer Active",2291,[[],["rtact_r",6]]],[11,"bufwren","","Bit 10 - Buffer Write Enable",2291,[[],["bufwren_r",6]]],[11,"bufrden","","Bit 11 - Buffer Read Enable",2291,[[],["bufrden_r",6]]],[11,"cardins","","Bit 16 - Card Inserted",2291,[[],["cardins_r",6]]],[11,"cardss","","Bit 17 - Card State Stable",2291,[[],["cardss_r",6]]],[11,"carddpl","","Bit 18 - Card Detect Pin Level",2291,[[],["carddpl_r",6]]],[11,"wrppl","","Bit 19 - Write Protect Pin Level",2291,[[],["wrppl_r",6]]],[11,"datll","","Bits 20:23 - DAT[3:0] Line Level",2291,[[],["datll_r",6]]],[11,"cmdll","","Bit 24 - CMD Line Level",2291,[[],["cmdll_r",6]]],[0,"hc1r","atsamd51g::sdhc0","Host Control 1",null,null],[3,"LEDCTRL_W","atsamd51g::sdhc0::hc1r","Write proxy for field `LEDCTRL`",null,null],[3,"DW_W","","Write proxy for field `DW`",null,null],[3,"HSEN_W","","Write proxy for field `HSEN`",null,null],[3,"DMASEL_W","","Write proxy for field `DMASEL`",null,null],[3,"CARDDTL_W","","Write proxy for field `CARDDTL`",null,null],[3,"CARDDSEL_W","","Write proxy for field `CARDDSEL`",null,null],[4,"LEDCTRL_A","","LED Control",null,null],[13,"OFF","","0: LED off",2292,null],[13,"ON","","1: LED on",2292,null],[4,"DW_A","","Data Width",null,null],[13,"_1BIT","","0: 1-bit mode",2293,null],[13,"_4BIT","","1: 4-bit mode",2293,null],[4,"HSEN_A","","High Speed Enable",null,null],[13,"NORMAL","","0: Normal Speed mode",2294,null],[13,"HIGH","","1: High Speed mode",2294,null],[4,"DMASEL_A","","DMA Select",null,null],[13,"SDMA","","0: SDMA is selected",2295,null],[13,"_32BIT","","2: 32-bit Address ADMA2 is selected",2295,null],[4,"CARDDTL_A","","Card Detect Test Level",null,null],[13,"NO","","0: No Card",2296,null],[13,"YES","","1: Card Inserted",2296,null],[4,"CARDDSEL_A","","Card Detect Signal Selection",null,null],[13,"NORMAL","","0: SDCD# is selected (for normal use)",2297,null],[13,"TEST","","1: The Card Select Test Level is selected (for test purpose)",2297,null],[6,"R","","Reader of register HC1R",null,null],[6,"W","","Writer for register HC1R",null,null],[6,"LEDCTRL_R","","Reader of field `LEDCTRL`",null,null],[6,"DW_R","","Reader of field `DW`",null,null],[6,"HSEN_R","","Reader of field `HSEN`",null,null],[6,"DMASEL_R","","Reader of field `DMASEL`",null,null],[6,"CARDDTL_R","","Reader of field `CARDDTL`",null,null],[6,"CARDDSEL_R","","Reader of field `CARDDSEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["ledctrl_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r","Get enumerated values variant",2298,[[],["ledctrl_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2298,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",2298,[[]]],[11,"variant","","Writes `variant` to the field",2299,[[["ledctrl_a",4]],["w",6]]],[11,"off","","LED off",2299,[[],["w",6]]],[11,"on","","LED on",2299,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2299,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2299,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2299,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dw_a",4]]],[11,"is_1bit","","Checks if the value of the field is `_1BIT`",6,[[]]],[11,"is_4bit","","Checks if the value of the field is `_4BIT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r","Get enumerated values variant",2300,[[],["dw_a",4]]],[11,"is_1bit","","Checks if the value of the field is `_1BIT`",2300,[[]]],[11,"is_4bit","","Checks if the value of the field is `_4BIT`",2300,[[]]],[11,"variant","","Writes `variant` to the field",2301,[[["dw_a",4]],["w",6]]],[11,"_1bit","","1-bit mode",2301,[[],["w",6]]],[11,"_4bit","","4-bit mode",2301,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2301,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2301,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2301,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["hsen_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r","Get enumerated values variant",2302,[[],["hsen_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",2302,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",2302,[[]]],[11,"variant","","Writes `variant` to the field",2303,[[["hsen_a",4]],["w",6]]],[11,"normal","","Normal Speed mode",2303,[[],["w",6]]],[11,"high","","High Speed mode",2303,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2303,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2303,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2303,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["dmasel_a",4],["variant",4]]]],[11,"is_sdma","","Checks if the value of the field is `SDMA`",6,[[]]],[11,"is_32bit","","Checks if the value of the field is `_32BIT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r","Get enumerated values variant",2304,[[],[["dmasel_a",4],["variant",4]]]],[11,"is_sdma","","Checks if the value of the field is `SDMA`",2304,[[]]],[11,"is_32bit","","Checks if the value of the field is `_32BIT`",2304,[[]]],[11,"variant","","Writes `variant` to the field",2305,[[["dmasel_a",4]],["w",6]]],[11,"sdma","","SDMA is selected",2305,[[],["w",6]]],[11,"_32bit","","32-bit Address ADMA2 is selected",2305,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2305,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["carddtl_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r","Get enumerated values variant",2306,[[],["carddtl_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2306,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2306,[[]]],[11,"variant","","Writes `variant` to the field",2307,[[["carddtl_a",4]],["w",6]]],[11,"no","","No Card",2307,[[],["w",6]]],[11,"yes","","Card Inserted",2307,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2307,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["carddsel_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_test","","Checks if the value of the field is `TEST`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r","Get enumerated values variant",2308,[[],["carddsel_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",2308,[[]]],[11,"is_test","","Checks if the value of the field is `TEST`",2308,[[]]],[11,"variant","","Writes `variant` to the field",2309,[[["carddsel_a",4]],["w",6]]],[11,"normal","","SDCD# is selected (for normal use)",2309,[[],["w",6]]],[11,"test","","The Card Select Test Level is selected (for test purpose)",2309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2309,[[],["w",6]]],[11,"ledctrl","atsamd51g::generic","Bit 0 - LED Control",6,[[],["ledctrl_r",6]]],[11,"dw","","Bit 1 - Data Width",6,[[],["dw_r",6]]],[11,"hsen","","Bit 2 - High Speed Enable",6,[[],["hsen_r",6]]],[11,"dmasel","","Bits 3:4 - DMA Select",6,[[],["dmasel_r",6]]],[11,"carddtl","","Bit 6 - Card Detect Test Level",6,[[],["carddtl_r",6]]],[11,"carddsel","","Bit 7 - Card Detect Signal Selection",6,[[],["carddsel_r",6]]],[11,"ledctrl","atsamd51g::sdhc0::hc1r","Bit 0 - LED Control",2310,[[],["ledctrl_r",6]]],[11,"dw","","Bit 1 - Data Width",2310,[[],["dw_r",6]]],[11,"hsen","","Bit 2 - High Speed Enable",2310,[[],["hsen_r",6]]],[11,"dmasel","","Bits 3:4 - DMA Select",2310,[[],["dmasel_r",6]]],[11,"carddtl","","Bit 6 - Card Detect Test Level",2310,[[],["carddtl_r",6]]],[11,"carddsel","","Bit 7 - Card Detect Signal Selection",2310,[[],["carddsel_r",6]]],[11,"ledctrl","atsamd51g::generic","Bit 0 - LED Control",7,[[],["ledctrl_w",3]]],[11,"dw","","Bit 1 - Data Width",7,[[],["dw_w",3]]],[11,"hsen","","Bit 2 - High Speed Enable",7,[[],["hsen_w",3]]],[11,"dmasel","","Bits 3:4 - DMA Select",7,[[],["dmasel_w",3]]],[11,"carddtl","","Bit 6 - Card Detect Test Level",7,[[],["carddtl_w",3]]],[11,"carddsel","","Bit 7 - Card Detect Signal Selection",7,[[],["carddsel_w",3]]],[11,"ledctrl","atsamd51g::sdhc0::hc1r","Bit 0 - LED Control",2311,[[],["ledctrl_w",3]]],[11,"dw","","Bit 1 - Data Width",2311,[[],["dw_w",3]]],[11,"hsen","","Bit 2 - High Speed Enable",2311,[[],["hsen_w",3]]],[11,"dmasel","","Bits 3:4 - DMA Select",2311,[[],["dmasel_w",3]]],[11,"carddtl","","Bit 6 - Card Detect Test Level",2311,[[],["carddtl_w",3]]],[11,"carddsel","","Bit 7 - Card Detect Signal Selection",2311,[[],["carddsel_w",3]]],[0,"hc1r_emmc_mode","atsamd51g::sdhc0","Host Control 1",null,null],[3,"DW_W","atsamd51g::sdhc0::hc1r_emmc_mode","Write proxy for field `DW`",null,null],[3,"HSEN_W","","Write proxy for field `HSEN`",null,null],[3,"DMASEL_W","","Write proxy for field `DMASEL`",null,null],[4,"DW_A","","Data Width",null,null],[13,"_1BIT","","0: 1-bit mode",2312,null],[13,"_4BIT","","1: 4-bit mode",2312,null],[4,"HSEN_A","","High Speed Enable",null,null],[13,"NORMAL","","0: Normal Speed mode",2313,null],[13,"HIGH","","1: High Speed mode",2313,null],[4,"DMASEL_A","","DMA Select",null,null],[13,"SDMA","","0: SDMA is selected",2314,null],[13,"_32BIT","","2: 32-bit Address ADMA2 is selected",2314,null],[6,"R","","Reader of register HC1R_EMMC_MODE",null,null],[6,"W","","Writer for register HC1R_EMMC_MODE",null,null],[6,"DW_R","","Reader of field `DW`",null,null],[6,"HSEN_R","","Reader of field `HSEN`",null,null],[6,"DMASEL_R","","Reader of field `DMASEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dw_a",4]]],[11,"is_1bit","","Checks if the value of the field is `_1BIT`",6,[[]]],[11,"is_4bit","","Checks if the value of the field is `_4BIT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r_emmc_mode","Get enumerated values variant",2315,[[],["dw_a",4]]],[11,"is_1bit","","Checks if the value of the field is `_1BIT`",2315,[[]]],[11,"is_4bit","","Checks if the value of the field is `_4BIT`",2315,[[]]],[11,"variant","","Writes `variant` to the field",2316,[[["dw_a",4]],["w",6]]],[11,"_1bit","","1-bit mode",2316,[[],["w",6]]],[11,"_4bit","","4-bit mode",2316,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2316,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2316,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2316,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["hsen_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r_emmc_mode","Get enumerated values variant",2317,[[],["hsen_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",2317,[[]]],[11,"is_high","","Checks if the value of the field is `HIGH`",2317,[[]]],[11,"variant","","Writes `variant` to the field",2318,[[["hsen_a",4]],["w",6]]],[11,"normal","","Normal Speed mode",2318,[[],["w",6]]],[11,"high","","High Speed mode",2318,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2318,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2318,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2318,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["dmasel_a",4]]]],[11,"is_sdma","","Checks if the value of the field is `SDMA`",6,[[]]],[11,"is_32bit","","Checks if the value of the field is `_32BIT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc1r_emmc_mode","Get enumerated values variant",2319,[[],[["variant",4],["dmasel_a",4]]]],[11,"is_sdma","","Checks if the value of the field is `SDMA`",2319,[[]]],[11,"is_32bit","","Checks if the value of the field is `_32BIT`",2319,[[]]],[11,"variant","","Writes `variant` to the field",2320,[[["dmasel_a",4]],["w",6]]],[11,"sdma","","SDMA is selected",2320,[[],["w",6]]],[11,"_32bit","","32-bit Address ADMA2 is selected",2320,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2320,[[],["w",6]]],[11,"dw","atsamd51g::generic","Bit 1 - Data Width",6,[[],["dw_r",6]]],[11,"hsen","","Bit 2 - High Speed Enable",6,[[],["hsen_r",6]]],[11,"dmasel","","Bits 3:4 - DMA Select",6,[[],["dmasel_r",6]]],[11,"dw","atsamd51g::sdhc0::hc1r_emmc_mode","Bit 1 - Data Width",2321,[[],["dw_r",6]]],[11,"hsen","","Bit 2 - High Speed Enable",2321,[[],["hsen_r",6]]],[11,"dmasel","","Bits 3:4 - DMA Select",2321,[[],["dmasel_r",6]]],[11,"dw","atsamd51g::generic","Bit 1 - Data Width",7,[[],["dw_w",3]]],[11,"hsen","","Bit 2 - High Speed Enable",7,[[],["hsen_w",3]]],[11,"dmasel","","Bits 3:4 - DMA Select",7,[[],["dmasel_w",3]]],[11,"dw","atsamd51g::sdhc0::hc1r_emmc_mode","Bit 1 - Data Width",2322,[[],["dw_w",3]]],[11,"hsen","","Bit 2 - High Speed Enable",2322,[[],["hsen_w",3]]],[11,"dmasel","","Bits 3:4 - DMA Select",2322,[[],["dmasel_w",3]]],[0,"pcr","atsamd51g::sdhc0","Power Control",null,null],[3,"SDBPWR_W","atsamd51g::sdhc0::pcr","Write proxy for field `SDBPWR`",null,null],[3,"SDBVSEL_W","","Write proxy for field `SDBVSEL`",null,null],[4,"SDBPWR_A","","SD Bus Power",null,null],[13,"OFF","","0: Power off",2323,null],[13,"ON","","1: Power on",2323,null],[4,"SDBVSEL_A","","SD Bus Voltage Select",null,null],[13,"_1V8","","5: 1.8V (Typ.)",2324,null],[13,"_3V0","","6: 3.0V (Typ.)",2324,null],[13,"_3V3","","7: 3.3V (Typ.)",2324,null],[6,"R","","Reader of register PCR",null,null],[6,"W","","Writer for register PCR",null,null],[6,"SDBPWR_R","","Reader of field `SDBPWR`",null,null],[6,"SDBVSEL_R","","Reader of field `SDBVSEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdbpwr_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"variant","atsamd51g::sdhc0::pcr","Get enumerated values variant",2325,[[],["sdbpwr_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2325,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",2325,[[]]],[11,"variant","","Writes `variant` to the field",2326,[[["sdbpwr_a",4]],["w",6]]],[11,"off","","Power off",2326,[[],["w",6]]],[11,"on","","Power on",2326,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2326,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2326,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2326,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["sdbvsel_a",4],["variant",4]]]],[11,"is_1v8","","Checks if the value of the field is `_1V8`",6,[[]]],[11,"is_3v0","","Checks if the value of the field is `_3V0`",6,[[]]],[11,"is_3v3","","Checks if the value of the field is `_3V3`",6,[[]]],[11,"variant","atsamd51g::sdhc0::pcr","Get enumerated values variant",2327,[[],[["sdbvsel_a",4],["variant",4]]]],[11,"is_1v8","","Checks if the value of the field is `_1V8`",2327,[[]]],[11,"is_3v0","","Checks if the value of the field is `_3V0`",2327,[[]]],[11,"is_3v3","","Checks if the value of the field is `_3V3`",2327,[[]]],[11,"variant","","Writes `variant` to the field",2328,[[["sdbvsel_a",4]],["w",6]]],[11,"_1v8","","1.8V (Typ.)",2328,[[],["w",6]]],[11,"_3v0","","3.0V (Typ.)",2328,[[],["w",6]]],[11,"_3v3","","3.3V (Typ.)",2328,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2328,[[],["w",6]]],[11,"sdbpwr","atsamd51g::generic","Bit 0 - SD Bus Power",6,[[],["sdbpwr_r",6]]],[11,"sdbvsel","","Bits 1:3 - SD Bus Voltage Select",6,[[],["sdbvsel_r",6]]],[11,"sdbpwr","atsamd51g::sdhc0::pcr","Bit 0 - SD Bus Power",2329,[[],["sdbpwr_r",6]]],[11,"sdbvsel","","Bits 1:3 - SD Bus Voltage Select",2329,[[],["sdbvsel_r",6]]],[11,"sdbpwr","atsamd51g::generic","Bit 0 - SD Bus Power",7,[[],["sdbpwr_w",3]]],[11,"sdbvsel","","Bits 1:3 - SD Bus Voltage Select",7,[[],["sdbvsel_w",3]]],[11,"sdbpwr","atsamd51g::sdhc0::pcr","Bit 0 - SD Bus Power",2330,[[],["sdbpwr_w",3]]],[11,"sdbvsel","","Bits 1:3 - SD Bus Voltage Select",2330,[[],["sdbvsel_w",3]]],[0,"bgcr","atsamd51g::sdhc0","Block Gap Control",null,null],[3,"STPBGR_W","atsamd51g::sdhc0::bgcr","Write proxy for field `STPBGR`",null,null],[3,"CONTR_W","","Write proxy for field `CONTR`",null,null],[3,"RWCTRL_W","","Write proxy for field `RWCTRL`",null,null],[3,"INTBG_W","","Write proxy for field `INTBG`",null,null],[4,"STPBGR_A","","Stop at Block Gap Request",null,null],[13,"TRANSFER","","0: Transfer",2331,null],[13,"STOP","","1: Stop",2331,null],[4,"CONTR_A","","Continue Request",null,null],[13,"GO_ON","","0: Not affected",2332,null],[13,"RESTART","","1: Restart",2332,null],[4,"RWCTRL_A","","Read Wait Control",null,null],[13,"DISABLE","","0: Disable Read Wait Control",2333,null],[13,"ENABLE","","1: Enable Read Wait Control",2333,null],[4,"INTBG_A","","Interrupt at Block Gap",null,null],[13,"DISABLED","","0: Disabled",2334,null],[13,"ENABLED","","1: Enabled",2334,null],[6,"R","","Reader of register BGCR",null,null],[6,"W","","Writer for register BGCR",null,null],[6,"STPBGR_R","","Reader of field `STPBGR`",null,null],[6,"CONTR_R","","Reader of field `CONTR`",null,null],[6,"RWCTRL_R","","Reader of field `RWCTRL`",null,null],[6,"INTBG_R","","Reader of field `INTBG`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["stpbgr_a",4]]],[11,"is_transfer","","Checks if the value of the field is `TRANSFER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bgcr","Get enumerated values variant",2335,[[],["stpbgr_a",4]]],[11,"is_transfer","","Checks if the value of the field is `TRANSFER`",2335,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",2335,[[]]],[11,"variant","","Writes `variant` to the field",2336,[[["stpbgr_a",4]],["w",6]]],[11,"transfer","","Transfer",2336,[[],["w",6]]],[11,"stop","","Stop",2336,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2336,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["contr_a",4]]],[11,"is_go_on","","Checks if the value of the field is `GO_ON`",6,[[]]],[11,"is_restart","","Checks if the value of the field is `RESTART`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bgcr","Get enumerated values variant",2337,[[],["contr_a",4]]],[11,"is_go_on","","Checks if the value of the field is `GO_ON`",2337,[[]]],[11,"is_restart","","Checks if the value of the field is `RESTART`",2337,[[]]],[11,"variant","","Writes `variant` to the field",2338,[[["contr_a",4]],["w",6]]],[11,"go_on","","Not affected",2338,[[],["w",6]]],[11,"restart","","Restart",2338,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2338,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["rwctrl_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bgcr","Get enumerated values variant",2339,[[],["rwctrl_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2339,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2339,[[]]],[11,"variant","","Writes `variant` to the field",2340,[[["rwctrl_a",4]],["w",6]]],[11,"disable","","Disable Read Wait Control",2340,[[],["w",6]]],[11,"enable","","Enable Read Wait Control",2340,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2340,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2340,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2340,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["intbg_a",4]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bgcr","Get enumerated values variant",2341,[[],["intbg_a",4]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",2341,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2341,[[]]],[11,"variant","","Writes `variant` to the field",2342,[[["intbg_a",4]],["w",6]]],[11,"disabled","","Disabled",2342,[[],["w",6]]],[11,"enabled","","Enabled",2342,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2342,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2342,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2342,[[],["w",6]]],[11,"stpbgr","atsamd51g::generic","Bit 0 - Stop at Block Gap Request",6,[[],["stpbgr_r",6]]],[11,"contr","","Bit 1 - Continue Request",6,[[],["contr_r",6]]],[11,"rwctrl","","Bit 2 - Read Wait Control",6,[[],["rwctrl_r",6]]],[11,"intbg","","Bit 3 - Interrupt at Block Gap",6,[[],["intbg_r",6]]],[11,"stpbgr","atsamd51g::sdhc0::bgcr","Bit 0 - Stop at Block Gap Request",2343,[[],["stpbgr_r",6]]],[11,"contr","","Bit 1 - Continue Request",2343,[[],["contr_r",6]]],[11,"rwctrl","","Bit 2 - Read Wait Control",2343,[[],["rwctrl_r",6]]],[11,"intbg","","Bit 3 - Interrupt at Block Gap",2343,[[],["intbg_r",6]]],[11,"stpbgr","atsamd51g::generic","Bit 0 - Stop at Block Gap Request",7,[[],["stpbgr_w",3]]],[11,"contr","","Bit 1 - Continue Request",7,[[],["contr_w",3]]],[11,"rwctrl","","Bit 2 - Read Wait Control",7,[[],["rwctrl_w",3]]],[11,"intbg","","Bit 3 - Interrupt at Block Gap",7,[[],["intbg_w",3]]],[11,"stpbgr","atsamd51g::sdhc0::bgcr","Bit 0 - Stop at Block Gap Request",2344,[[],["stpbgr_w",3]]],[11,"contr","","Bit 1 - Continue Request",2344,[[],["contr_w",3]]],[11,"rwctrl","","Bit 2 - Read Wait Control",2344,[[],["rwctrl_w",3]]],[11,"intbg","","Bit 3 - Interrupt at Block Gap",2344,[[],["intbg_w",3]]],[0,"bgcr_emmc_mode","atsamd51g::sdhc0","Block Gap Control",null,null],[3,"STPBGR_W","atsamd51g::sdhc0::bgcr_emmc_mode","Write proxy for field `STPBGR`",null,null],[3,"CONTR_W","","Write proxy for field `CONTR`",null,null],[4,"STPBGR_A","","Stop at Block Gap Request",null,null],[13,"TRANSFER","","0: Transfer",2345,null],[13,"STOP","","1: Stop",2345,null],[4,"CONTR_A","","Continue Request",null,null],[13,"GO_ON","","0: Not affected",2346,null],[13,"RESTART","","1: Restart",2346,null],[6,"R","","Reader of register BGCR_EMMC_MODE",null,null],[6,"W","","Writer for register BGCR_EMMC_MODE",null,null],[6,"STPBGR_R","","Reader of field `STPBGR`",null,null],[6,"CONTR_R","","Reader of field `CONTR`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["stpbgr_a",4]]],[11,"is_transfer","","Checks if the value of the field is `TRANSFER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bgcr_emmc_mode","Get enumerated values variant",2347,[[],["stpbgr_a",4]]],[11,"is_transfer","","Checks if the value of the field is `TRANSFER`",2347,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",2347,[[]]],[11,"variant","","Writes `variant` to the field",2348,[[["stpbgr_a",4]],["w",6]]],[11,"transfer","","Transfer",2348,[[],["w",6]]],[11,"stop","","Stop",2348,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2348,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2348,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2348,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["contr_a",4]]],[11,"is_go_on","","Checks if the value of the field is `GO_ON`",6,[[]]],[11,"is_restart","","Checks if the value of the field is `RESTART`",6,[[]]],[11,"variant","atsamd51g::sdhc0::bgcr_emmc_mode","Get enumerated values variant",2349,[[],["contr_a",4]]],[11,"is_go_on","","Checks if the value of the field is `GO_ON`",2349,[[]]],[11,"is_restart","","Checks if the value of the field is `RESTART`",2349,[[]]],[11,"variant","","Writes `variant` to the field",2350,[[["contr_a",4]],["w",6]]],[11,"go_on","","Not affected",2350,[[],["w",6]]],[11,"restart","","Restart",2350,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2350,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2350,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2350,[[],["w",6]]],[11,"stpbgr","atsamd51g::generic","Bit 0 - Stop at Block Gap Request",6,[[],["stpbgr_r",6]]],[11,"contr","","Bit 1 - Continue Request",6,[[],["contr_r",6]]],[11,"stpbgr","atsamd51g::sdhc0::bgcr_emmc_mode","Bit 0 - Stop at Block Gap Request",2351,[[],["stpbgr_r",6]]],[11,"contr","","Bit 1 - Continue Request",2351,[[],["contr_r",6]]],[11,"stpbgr","atsamd51g::generic","Bit 0 - Stop at Block Gap Request",7,[[],["stpbgr_w",3]]],[11,"contr","","Bit 1 - Continue Request",7,[[],["contr_w",3]]],[11,"stpbgr","atsamd51g::sdhc0::bgcr_emmc_mode","Bit 0 - Stop at Block Gap Request",2352,[[],["stpbgr_w",3]]],[11,"contr","","Bit 1 - Continue Request",2352,[[],["contr_w",3]]],[0,"wcr","atsamd51g::sdhc0","Wakeup Control",null,null],[3,"WKENCINT_W","atsamd51g::sdhc0::wcr","Write proxy for field `WKENCINT`",null,null],[3,"WKENCINS_W","","Write proxy for field `WKENCINS`",null,null],[3,"WKENCREM_W","","Write proxy for field `WKENCREM`",null,null],[4,"WKENCINT_A","","Wakeup Event Enable on Card Interrupt",null,null],[13,"DISABLE","","0: Disable",2353,null],[13,"ENABLE","","1: Enable",2353,null],[4,"WKENCINS_A","","Wakeup Event Enable on Card Insertion",null,null],[13,"DISABLE","","0: Disable",2354,null],[13,"ENABLE","","1: Enable",2354,null],[4,"WKENCREM_A","","Wakeup Event Enable on Card Removal",null,null],[13,"DISABLE","","0: Disable",2355,null],[13,"ENABLE","","1: Enable",2355,null],[6,"R","","Reader of register WCR",null,null],[6,"W","","Writer for register WCR",null,null],[6,"WKENCINT_R","","Reader of field `WKENCINT`",null,null],[6,"WKENCINS_R","","Reader of field `WKENCINS`",null,null],[6,"WKENCREM_R","","Reader of field `WKENCREM`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wkencint_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::wcr","Get enumerated values variant",2356,[[],["wkencint_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2356,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2356,[[]]],[11,"variant","","Writes `variant` to the field",2357,[[["wkencint_a",4]],["w",6]]],[11,"disable","","Disable",2357,[[],["w",6]]],[11,"enable","","Enable",2357,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2357,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2357,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2357,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wkencins_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::wcr","Get enumerated values variant",2358,[[],["wkencins_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2358,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2358,[[]]],[11,"variant","","Writes `variant` to the field",2359,[[["wkencins_a",4]],["w",6]]],[11,"disable","","Disable",2359,[[],["w",6]]],[11,"enable","","Enable",2359,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2359,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2359,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2359,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wkencrem_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::wcr","Get enumerated values variant",2360,[[],["wkencrem_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2360,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2360,[[]]],[11,"variant","","Writes `variant` to the field",2361,[[["wkencrem_a",4]],["w",6]]],[11,"disable","","Disable",2361,[[],["w",6]]],[11,"enable","","Enable",2361,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2361,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2361,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2361,[[],["w",6]]],[11,"wkencint","atsamd51g::generic","Bit 0 - Wakeup Event Enable on Card Interrupt",6,[[],["wkencint_r",6]]],[11,"wkencins","","Bit 1 - Wakeup Event Enable on Card Insertion",6,[[],["wkencins_r",6]]],[11,"wkencrem","","Bit 2 - Wakeup Event Enable on Card Removal",6,[[],["wkencrem_r",6]]],[11,"wkencint","atsamd51g::sdhc0::wcr","Bit 0 - Wakeup Event Enable on Card Interrupt",2362,[[],["wkencint_r",6]]],[11,"wkencins","","Bit 1 - Wakeup Event Enable on Card Insertion",2362,[[],["wkencins_r",6]]],[11,"wkencrem","","Bit 2 - Wakeup Event Enable on Card Removal",2362,[[],["wkencrem_r",6]]],[11,"wkencint","atsamd51g::generic","Bit 0 - Wakeup Event Enable on Card Interrupt",7,[[],["wkencint_w",3]]],[11,"wkencins","","Bit 1 - Wakeup Event Enable on Card Insertion",7,[[],["wkencins_w",3]]],[11,"wkencrem","","Bit 2 - Wakeup Event Enable on Card Removal",7,[[],["wkencrem_w",3]]],[11,"wkencint","atsamd51g::sdhc0::wcr","Bit 0 - Wakeup Event Enable on Card Interrupt",2363,[[],["wkencint_w",3]]],[11,"wkencins","","Bit 1 - Wakeup Event Enable on Card Insertion",2363,[[],["wkencins_w",3]]],[11,"wkencrem","","Bit 2 - Wakeup Event Enable on Card Removal",2363,[[],["wkencrem_w",3]]],[0,"ccr","atsamd51g::sdhc0","Clock Control",null,null],[3,"INTCLKEN_W","atsamd51g::sdhc0::ccr","Write proxy for field `INTCLKEN`",null,null],[3,"INTCLKS_W","","Write proxy for field `INTCLKS`",null,null],[3,"SDCLKEN_W","","Write proxy for field `SDCLKEN`",null,null],[3,"CLKGSEL_W","","Write proxy for field `CLKGSEL`",null,null],[3,"USDCLKFSEL_W","","Write proxy for field `USDCLKFSEL`",null,null],[3,"SDCLKFSEL_W","","Write proxy for field `SDCLKFSEL`",null,null],[4,"INTCLKEN_A","","Internal Clock Enable",null,null],[13,"OFF","","0: Stop",2364,null],[13,"ON","","1: Oscillate",2364,null],[4,"INTCLKS_A","","Internal Clock Stable",null,null],[13,"NOT_READY","","0: Not Ready",2365,null],[13,"READY","","1: Ready",2365,null],[4,"SDCLKEN_A","","SD Clock Enable",null,null],[13,"DISABLE","","0: Disable",2366,null],[13,"ENABLE","","1: Enable",2366,null],[4,"CLKGSEL_A","","Clock Generator Select",null,null],[13,"DIV","","0: Divided Clock Mode",2367,null],[13,"PROG","","1: Programmable Clock Mode",2367,null],[6,"R","","Reader of register CCR",null,null],[6,"W","","Writer for register CCR",null,null],[6,"INTCLKEN_R","","Reader of field `INTCLKEN`",null,null],[6,"INTCLKS_R","","Reader of field `INTCLKS`",null,null],[6,"SDCLKEN_R","","Reader of field `SDCLKEN`",null,null],[6,"CLKGSEL_R","","Reader of field `CLKGSEL`",null,null],[6,"USDCLKFSEL_R","","Reader of field `USDCLKFSEL`",null,null],[6,"SDCLKFSEL_R","","Reader of field `SDCLKFSEL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["intclken_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ccr","Get enumerated values variant",2368,[[],["intclken_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",2368,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",2368,[[]]],[11,"variant","","Writes `variant` to the field",2369,[[["intclken_a",4]],["w",6]]],[11,"off","","Stop",2369,[[],["w",6]]],[11,"on","","Oscillate",2369,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2369,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2369,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2369,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["intclks_a",4]]],[11,"is_not_ready","","Checks if the value of the field is `NOT_READY`",6,[[]]],[11,"is_ready","","Checks if the value of the field is `READY`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ccr","Get enumerated values variant",2370,[[],["intclks_a",4]]],[11,"is_not_ready","","Checks if the value of the field is `NOT_READY`",2370,[[]]],[11,"is_ready","","Checks if the value of the field is `READY`",2370,[[]]],[11,"variant","","Writes `variant` to the field",2371,[[["intclks_a",4]],["w",6]]],[11,"not_ready","","Not Ready",2371,[[],["w",6]]],[11,"ready","","Ready",2371,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2371,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2371,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2371,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdclken_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ccr","Get enumerated values variant",2372,[[],["sdclken_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2372,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",2372,[[]]],[11,"variant","","Writes `variant` to the field",2373,[[["sdclken_a",4]],["w",6]]],[11,"disable","","Disable",2373,[[],["w",6]]],[11,"enable","","Enable",2373,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2373,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2373,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2373,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["clkgsel_a",4]]],[11,"is_div","","Checks if the value of the field is `DIV`",6,[[]]],[11,"is_prog","","Checks if the value of the field is `PROG`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ccr","Get enumerated values variant",2374,[[],["clkgsel_a",4]]],[11,"is_div","","Checks if the value of the field is `DIV`",2374,[[]]],[11,"is_prog","","Checks if the value of the field is `PROG`",2374,[[]]],[11,"variant","","Writes `variant` to the field",2375,[[["clkgsel_a",4]],["w",6]]],[11,"div","","Divided Clock Mode",2375,[[],["w",6]]],[11,"prog","","Programmable Clock Mode",2375,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2375,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2375,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2375,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2376,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2377,[[],["w",6]]],[11,"intclken","atsamd51g::generic","Bit 0 - Internal Clock Enable",6,[[],["intclken_r",6]]],[11,"intclks","","Bit 1 - Internal Clock Stable",6,[[],["intclks_r",6]]],[11,"sdclken","","Bit 2 - SD Clock Enable",6,[[],["sdclken_r",6]]],[11,"clkgsel","","Bit 5 - Clock Generator Select",6,[[],["clkgsel_r",6]]],[11,"usdclkfsel","","Bits 6:7 - Upper Bits of SDCLK Frequency Select",6,[[],["usdclkfsel_r",6]]],[11,"sdclkfsel","","Bits 8:15 - SDCLK Frequency Select",6,[[],["sdclkfsel_r",6]]],[11,"intclken","atsamd51g::sdhc0::ccr","Bit 0 - Internal Clock Enable",2378,[[],["intclken_r",6]]],[11,"intclks","","Bit 1 - Internal Clock Stable",2378,[[],["intclks_r",6]]],[11,"sdclken","","Bit 2 - SD Clock Enable",2378,[[],["sdclken_r",6]]],[11,"clkgsel","","Bit 5 - Clock Generator Select",2378,[[],["clkgsel_r",6]]],[11,"usdclkfsel","","Bits 6:7 - Upper Bits of SDCLK Frequency Select",2378,[[],["usdclkfsel_r",6]]],[11,"sdclkfsel","","Bits 8:15 - SDCLK Frequency Select",2378,[[],["sdclkfsel_r",6]]],[11,"intclken","atsamd51g::generic","Bit 0 - Internal Clock Enable",7,[[],["intclken_w",3]]],[11,"intclks","","Bit 1 - Internal Clock Stable",7,[[],["intclks_w",3]]],[11,"sdclken","","Bit 2 - SD Clock Enable",7,[[],["sdclken_w",3]]],[11,"clkgsel","","Bit 5 - Clock Generator Select",7,[[],["clkgsel_w",3]]],[11,"usdclkfsel","","Bits 6:7 - Upper Bits of SDCLK Frequency Select",7,[[],["usdclkfsel_w",3]]],[11,"sdclkfsel","","Bits 8:15 - SDCLK Frequency Select",7,[[],["sdclkfsel_w",3]]],[11,"intclken","atsamd51g::sdhc0::ccr","Bit 0 - Internal Clock Enable",2379,[[],["intclken_w",3]]],[11,"intclks","","Bit 1 - Internal Clock Stable",2379,[[],["intclks_w",3]]],[11,"sdclken","","Bit 2 - SD Clock Enable",2379,[[],["sdclken_w",3]]],[11,"clkgsel","","Bit 5 - Clock Generator Select",2379,[[],["clkgsel_w",3]]],[11,"usdclkfsel","","Bits 6:7 - Upper Bits of SDCLK Frequency Select",2379,[[],["usdclkfsel_w",3]]],[11,"sdclkfsel","","Bits 8:15 - SDCLK Frequency Select",2379,[[],["sdclkfsel_w",3]]],[0,"tcr","atsamd51g::sdhc0","Timeout Control",null,null],[3,"DTCVAL_W","atsamd51g::sdhc0::tcr","Write proxy for field `DTCVAL`",null,null],[6,"R","","Reader of register TCR",null,null],[6,"W","","Writer for register TCR",null,null],[6,"DTCVAL_R","","Reader of field `DTCVAL`",null,null],[11,"bits","","Writes raw bits to the field",2380,[[],["w",6]]],[11,"dtcval","atsamd51g::generic","Bits 0:3 - Data Timeout Counter Value",6,[[],["dtcval_r",6]]],[11,"dtcval","atsamd51g::sdhc0::tcr","Bits 0:3 - Data Timeout Counter Value",2381,[[],["dtcval_r",6]]],[11,"dtcval","atsamd51g::generic","Bits 0:3 - Data Timeout Counter Value",7,[[],["dtcval_w",3]]],[11,"dtcval","atsamd51g::sdhc0::tcr","Bits 0:3 - Data Timeout Counter Value",2382,[[],["dtcval_w",3]]],[0,"srr","atsamd51g::sdhc0","Software Reset",null,null],[3,"SWRSTALL_W","atsamd51g::sdhc0::srr","Write proxy for field `SWRSTALL`",null,null],[3,"SWRSTCMD_W","","Write proxy for field `SWRSTCMD`",null,null],[3,"SWRSTDAT_W","","Write proxy for field `SWRSTDAT`",null,null],[4,"SWRSTALL_A","","Software Reset For All",null,null],[13,"WORK","","0: Work",2383,null],[13,"RESET","","1: Reset",2383,null],[4,"SWRSTCMD_A","","Software Reset For CMD Line",null,null],[13,"WORK","","0: Work",2384,null],[13,"RESET","","1: Reset",2384,null],[4,"SWRSTDAT_A","","Software Reset For DAT Line",null,null],[13,"WORK","","0: Work",2385,null],[13,"RESET","","1: Reset",2385,null],[6,"R","","Reader of register SRR",null,null],[6,"W","","Writer for register SRR",null,null],[6,"SWRSTALL_R","","Reader of field `SWRSTALL`",null,null],[6,"SWRSTCMD_R","","Reader of field `SWRSTCMD`",null,null],[6,"SWRSTDAT_R","","Reader of field `SWRSTDAT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["swrstall_a",4]]],[11,"is_work","","Checks if the value of the field is `WORK`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd51g::sdhc0::srr","Get enumerated values variant",2386,[[],["swrstall_a",4]]],[11,"is_work","","Checks if the value of the field is `WORK`",2386,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",2386,[[]]],[11,"variant","","Writes `variant` to the field",2387,[[["swrstall_a",4]],["w",6]]],[11,"work","","Work",2387,[[],["w",6]]],[11,"reset","","Reset",2387,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2387,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["swrstcmd_a",4]]],[11,"is_work","","Checks if the value of the field is `WORK`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd51g::sdhc0::srr","Get enumerated values variant",2388,[[],["swrstcmd_a",4]]],[11,"is_work","","Checks if the value of the field is `WORK`",2388,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",2388,[[]]],[11,"variant","","Writes `variant` to the field",2389,[[["swrstcmd_a",4]],["w",6]]],[11,"work","","Work",2389,[[],["w",6]]],[11,"reset","","Reset",2389,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2389,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2389,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2389,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["swrstdat_a",4]]],[11,"is_work","","Checks if the value of the field is `WORK`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd51g::sdhc0::srr","Get enumerated values variant",2390,[[],["swrstdat_a",4]]],[11,"is_work","","Checks if the value of the field is `WORK`",2390,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",2390,[[]]],[11,"variant","","Writes `variant` to the field",2391,[[["swrstdat_a",4]],["w",6]]],[11,"work","","Work",2391,[[],["w",6]]],[11,"reset","","Reset",2391,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2391,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2391,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2391,[[],["w",6]]],[11,"swrstall","atsamd51g::generic","Bit 0 - Software Reset For All",6,[[],["swrstall_r",6]]],[11,"swrstcmd","","Bit 1 - Software Reset For CMD Line",6,[[],["swrstcmd_r",6]]],[11,"swrstdat","","Bit 2 - Software Reset For DAT Line",6,[[],["swrstdat_r",6]]],[11,"swrstall","atsamd51g::sdhc0::srr","Bit 0 - Software Reset For All",2392,[[],["swrstall_r",6]]],[11,"swrstcmd","","Bit 1 - Software Reset For CMD Line",2392,[[],["swrstcmd_r",6]]],[11,"swrstdat","","Bit 2 - Software Reset For DAT Line",2392,[[],["swrstdat_r",6]]],[11,"swrstall","atsamd51g::generic","Bit 0 - Software Reset For All",7,[[],["swrstall_w",3]]],[11,"swrstcmd","","Bit 1 - Software Reset For CMD Line",7,[[],["swrstcmd_w",3]]],[11,"swrstdat","","Bit 2 - Software Reset For DAT Line",7,[[],["swrstdat_w",3]]],[11,"swrstall","atsamd51g::sdhc0::srr","Bit 0 - Software Reset For All",2393,[[],["swrstall_w",3]]],[11,"swrstcmd","","Bit 1 - Software Reset For CMD Line",2393,[[],["swrstcmd_w",3]]],[11,"swrstdat","","Bit 2 - Software Reset For DAT Line",2393,[[],["swrstdat_w",3]]],[0,"nistr","atsamd51g::sdhc0","Normal Interrupt Status",null,null],[3,"CMDC_W","atsamd51g::sdhc0::nistr","Write proxy for field `CMDC`",null,null],[3,"TRFC_W","","Write proxy for field `TRFC`",null,null],[3,"BLKGE_W","","Write proxy for field `BLKGE`",null,null],[3,"DMAINT_W","","Write proxy for field `DMAINT`",null,null],[3,"BWRRDY_W","","Write proxy for field `BWRRDY`",null,null],[3,"BRDRDY_W","","Write proxy for field `BRDRDY`",null,null],[3,"CINS_W","","Write proxy for field `CINS`",null,null],[3,"CREM_W","","Write proxy for field `CREM`",null,null],[3,"CINT_W","","Write proxy for field `CINT`",null,null],[3,"ERRINT_W","","Write proxy for field `ERRINT`",null,null],[4,"CMDC_A","","Command Complete",null,null],[13,"NO","","0: No command complete",2394,null],[13,"YES","","1: Command complete",2394,null],[4,"TRFC_A","","Transfer Complete",null,null],[13,"NO","","0: Not complete",2395,null],[13,"YES","","1: Command execution is completed",2395,null],[4,"BLKGE_A","","Block Gap Event",null,null],[13,"NO","","0: No Block Gap Event",2396,null],[13,"STOP","","1: Transaction stopped at block gap",2396,null],[4,"DMAINT_A","","DMA Interrupt",null,null],[13,"NO","","0: No DMA Interrupt",2397,null],[13,"YES","","1: DMA Interrupt is generated",2397,null],[4,"BWRRDY_A","","Buffer Write Ready",null,null],[13,"NO","","0: Not ready to write buffer",2398,null],[13,"YES","","1: Ready to write buffer",2398,null],[4,"BRDRDY_A","","Buffer Read Ready",null,null],[13,"NO","","0: Not ready to read buffer",2399,null],[13,"YES","","1: Ready to read buffer",2399,null],[4,"CINS_A","","Card Insertion",null,null],[13,"NO","","0: Card state stable or Debouncing",2400,null],[13,"YES","","1: Card inserted",2400,null],[4,"CREM_A","","Card Removal",null,null],[13,"NO","","0: Card state stable or Debouncing",2401,null],[13,"YES","","1: Card Removed",2401,null],[4,"CINT_A","","Card Interrupt",null,null],[13,"NO","","0: No Card Interrupt",2402,null],[13,"YES","","1: Generate Card Interrupt",2402,null],[4,"ERRINT_A","","Error Interrupt",null,null],[13,"NO","","0: No Error",2403,null],[13,"YES","","1: Error",2403,null],[6,"R","","Reader of register NISTR",null,null],[6,"W","","Writer for register NISTR",null,null],[6,"CMDC_R","","Reader of field `CMDC`",null,null],[6,"TRFC_R","","Reader of field `TRFC`",null,null],[6,"BLKGE_R","","Reader of field `BLKGE`",null,null],[6,"DMAINT_R","","Reader of field `DMAINT`",null,null],[6,"BWRRDY_R","","Reader of field `BWRRDY`",null,null],[6,"BRDRDY_R","","Reader of field `BRDRDY`",null,null],[6,"CINS_R","","Reader of field `CINS`",null,null],[6,"CREM_R","","Reader of field `CREM`",null,null],[6,"CINT_R","","Reader of field `CINT`",null,null],[6,"ERRINT_R","","Reader of field `ERRINT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2404,[[],["cmdc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2404,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2404,[[]]],[11,"variant","","Writes `variant` to the field",2405,[[["cmdc_a",4]],["w",6]]],[11,"no","","No command complete",2405,[[],["w",6]]],[11,"yes","","Command complete",2405,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2405,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2405,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2405,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["trfc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2406,[[],["trfc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2406,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2406,[[]]],[11,"variant","","Writes `variant` to the field",2407,[[["trfc_a",4]],["w",6]]],[11,"no","","Not complete",2407,[[],["w",6]]],[11,"yes","","Command execution is completed",2407,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2407,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2407,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2407,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blkge_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2408,[[],["blkge_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2408,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",2408,[[]]],[11,"variant","","Writes `variant` to the field",2409,[[["blkge_a",4]],["w",6]]],[11,"no","","No Block Gap Event",2409,[[],["w",6]]],[11,"stop","","Transaction stopped at block gap",2409,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2409,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2409,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2409,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2410,[[],["dmaint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2410,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2410,[[]]],[11,"variant","","Writes `variant` to the field",2411,[[["dmaint_a",4]],["w",6]]],[11,"no","","No DMA Interrupt",2411,[[],["w",6]]],[11,"yes","","DMA Interrupt is generated",2411,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2411,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2411,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2411,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bwrrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2412,[[],["bwrrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2412,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2412,[[]]],[11,"variant","","Writes `variant` to the field",2413,[[["bwrrdy_a",4]],["w",6]]],[11,"no","","Not ready to write buffer",2413,[[],["w",6]]],[11,"yes","","Ready to write buffer",2413,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2413,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2413,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2413,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["brdrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2414,[[],["brdrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2414,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2414,[[]]],[11,"variant","","Writes `variant` to the field",2415,[[["brdrdy_a",4]],["w",6]]],[11,"no","","Not ready to read buffer",2415,[[],["w",6]]],[11,"yes","","Ready to read buffer",2415,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2415,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cins_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2416,[[],["cins_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2416,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2416,[[]]],[11,"variant","","Writes `variant` to the field",2417,[[["cins_a",4]],["w",6]]],[11,"no","","Card state stable or Debouncing",2417,[[],["w",6]]],[11,"yes","","Card inserted",2417,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2417,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2417,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2417,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["crem_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2418,[[],["crem_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2418,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2418,[[]]],[11,"variant","","Writes `variant` to the field",2419,[[["crem_a",4]],["w",6]]],[11,"no","","Card state stable or Debouncing",2419,[[],["w",6]]],[11,"yes","","Card Removed",2419,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2419,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2419,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2419,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2420,[[],["cint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2420,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2420,[[]]],[11,"variant","","Writes `variant` to the field",2421,[[["cint_a",4]],["w",6]]],[11,"no","","No Card Interrupt",2421,[[],["w",6]]],[11,"yes","","Generate Card Interrupt",2421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2421,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["errint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr","Get enumerated values variant",2422,[[],["errint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2422,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2422,[[]]],[11,"variant","","Writes `variant` to the field",2423,[[["errint_a",4]],["w",6]]],[11,"no","","No Error",2423,[[],["w",6]]],[11,"yes","","Error",2423,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2423,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2423,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2423,[[],["w",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete",6,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete",6,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event",6,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt",6,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",6,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",6,[[],["brdrdy_r",6]]],[11,"cins","","Bit 6 - Card Insertion",6,[[],["cins_r",6]]],[11,"crem","","Bit 7 - Card Removal",6,[[],["crem_r",6]]],[11,"cint","","Bit 8 - Card Interrupt",6,[[],["cint_r",6]]],[11,"errint","","Bit 15 - Error Interrupt",6,[[],["errint_r",6]]],[11,"cmdc","atsamd51g::sdhc0::nistr","Bit 0 - Command Complete",2424,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete",2424,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event",2424,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt",2424,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",2424,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",2424,[[],["brdrdy_r",6]]],[11,"cins","","Bit 6 - Card Insertion",2424,[[],["cins_r",6]]],[11,"crem","","Bit 7 - Card Removal",2424,[[],["crem_r",6]]],[11,"cint","","Bit 8 - Card Interrupt",2424,[[],["cint_r",6]]],[11,"errint","","Bit 15 - Error Interrupt",2424,[[],["errint_r",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete",7,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete",7,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event",7,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt",7,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",7,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",7,[[],["brdrdy_w",3]]],[11,"cins","","Bit 6 - Card Insertion",7,[[],["cins_w",3]]],[11,"crem","","Bit 7 - Card Removal",7,[[],["crem_w",3]]],[11,"cint","","Bit 8 - Card Interrupt",7,[[],["cint_w",3]]],[11,"errint","","Bit 15 - Error Interrupt",7,[[],["errint_w",3]]],[11,"cmdc","atsamd51g::sdhc0::nistr","Bit 0 - Command Complete",2425,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete",2425,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event",2425,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt",2425,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",2425,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",2425,[[],["brdrdy_w",3]]],[11,"cins","","Bit 6 - Card Insertion",2425,[[],["cins_w",3]]],[11,"crem","","Bit 7 - Card Removal",2425,[[],["crem_w",3]]],[11,"cint","","Bit 8 - Card Interrupt",2425,[[],["cint_w",3]]],[11,"errint","","Bit 15 - Error Interrupt",2425,[[],["errint_w",3]]],[0,"nistr_emmc_mode","atsamd51g::sdhc0","Normal Interrupt Status",null,null],[3,"CMDC_W","atsamd51g::sdhc0::nistr_emmc_mode","Write proxy for field `CMDC`",null,null],[3,"TRFC_W","","Write proxy for field `TRFC`",null,null],[3,"BLKGE_W","","Write proxy for field `BLKGE`",null,null],[3,"DMAINT_W","","Write proxy for field `DMAINT`",null,null],[3,"BWRRDY_W","","Write proxy for field `BWRRDY`",null,null],[3,"BRDRDY_W","","Write proxy for field `BRDRDY`",null,null],[3,"BOOTAR_W","","Write proxy for field `BOOTAR`",null,null],[3,"ERRINT_W","","Write proxy for field `ERRINT`",null,null],[4,"CMDC_A","","Command Complete",null,null],[13,"NO","","0: No command complete",2426,null],[13,"YES","","1: Command complete",2426,null],[4,"TRFC_A","","Transfer Complete",null,null],[13,"NO","","0: Not complete",2427,null],[13,"YES","","1: Command execution is completed",2427,null],[4,"BLKGE_A","","Block Gap Event",null,null],[13,"NO","","0: No Block Gap Event",2428,null],[13,"STOP","","1: Transaction stopped at block gap",2428,null],[4,"DMAINT_A","","DMA Interrupt",null,null],[13,"NO","","0: No DMA Interrupt",2429,null],[13,"YES","","1: DMA Interrupt is generated",2429,null],[4,"BWRRDY_A","","Buffer Write Ready",null,null],[13,"NO","","0: Not ready to write buffer",2430,null],[13,"YES","","1: Ready to write buffer",2430,null],[4,"BRDRDY_A","","Buffer Read Ready",null,null],[13,"NO","","0: Not ready to read buffer",2431,null],[13,"YES","","1: Ready to read buffer",2431,null],[4,"ERRINT_A","","Error Interrupt",null,null],[13,"NO","","0: No Error",2432,null],[13,"YES","","1: Error",2432,null],[6,"R","","Reader of register NISTR_EMMC_MODE",null,null],[6,"W","","Writer for register NISTR_EMMC_MODE",null,null],[6,"CMDC_R","","Reader of field `CMDC`",null,null],[6,"TRFC_R","","Reader of field `TRFC`",null,null],[6,"BLKGE_R","","Reader of field `BLKGE`",null,null],[6,"DMAINT_R","","Reader of field `DMAINT`",null,null],[6,"BWRRDY_R","","Reader of field `BWRRDY`",null,null],[6,"BRDRDY_R","","Reader of field `BRDRDY`",null,null],[6,"BOOTAR_R","","Reader of field `BOOTAR`",null,null],[6,"ERRINT_R","","Reader of field `ERRINT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2433,[[],["cmdc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2433,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2433,[[]]],[11,"variant","","Writes `variant` to the field",2434,[[["cmdc_a",4]],["w",6]]],[11,"no","","No command complete",2434,[[],["w",6]]],[11,"yes","","Command complete",2434,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2434,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2434,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2434,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["trfc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2435,[[],["trfc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2435,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2435,[[]]],[11,"variant","","Writes `variant` to the field",2436,[[["trfc_a",4]],["w",6]]],[11,"no","","Not complete",2436,[[],["w",6]]],[11,"yes","","Command execution is completed",2436,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2436,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2436,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2436,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blkge_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2437,[[],["blkge_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2437,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",2437,[[]]],[11,"variant","","Writes `variant` to the field",2438,[[["blkge_a",4]],["w",6]]],[11,"no","","No Block Gap Event",2438,[[],["w",6]]],[11,"stop","","Transaction stopped at block gap",2438,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2438,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2438,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2438,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2439,[[],["dmaint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2439,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2439,[[]]],[11,"variant","","Writes `variant` to the field",2440,[[["dmaint_a",4]],["w",6]]],[11,"no","","No DMA Interrupt",2440,[[],["w",6]]],[11,"yes","","DMA Interrupt is generated",2440,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2440,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2440,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2440,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bwrrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2441,[[],["bwrrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2441,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2441,[[]]],[11,"variant","","Writes `variant` to the field",2442,[[["bwrrdy_a",4]],["w",6]]],[11,"no","","Not ready to write buffer",2442,[[],["w",6]]],[11,"yes","","Ready to write buffer",2442,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2442,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2442,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2442,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["brdrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2443,[[],["brdrdy_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2443,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2443,[[]]],[11,"variant","","Writes `variant` to the field",2444,[[["brdrdy_a",4]],["w",6]]],[11,"no","","Not ready to read buffer",2444,[[],["w",6]]],[11,"yes","","Ready to read buffer",2444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2444,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2444,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2444,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2445,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["errint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nistr_emmc_mode","Get enumerated values variant",2446,[[],["errint_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2446,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2446,[[]]],[11,"variant","","Writes `variant` to the field",2447,[[["errint_a",4]],["w",6]]],[11,"no","","No Error",2447,[[],["w",6]]],[11,"yes","","Error",2447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2447,[[],["w",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete",6,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete",6,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event",6,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt",6,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",6,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",6,[[],["brdrdy_r",6]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received",6,[[],["bootar_r",6]]],[11,"errint","","Bit 15 - Error Interrupt",6,[[],["errint_r",6]]],[11,"cmdc","atsamd51g::sdhc0::nistr_emmc_mode","Bit 0 - Command Complete",2448,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete",2448,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event",2448,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt",2448,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",2448,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",2448,[[],["brdrdy_r",6]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received",2448,[[],["bootar_r",6]]],[11,"errint","","Bit 15 - Error Interrupt",2448,[[],["errint_r",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete",7,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete",7,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event",7,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt",7,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",7,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",7,[[],["brdrdy_w",3]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received",7,[[],["bootar_w",3]]],[11,"errint","","Bit 15 - Error Interrupt",7,[[],["errint_w",3]]],[11,"cmdc","atsamd51g::sdhc0::nistr_emmc_mode","Bit 0 - Command Complete",2449,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete",2449,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event",2449,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt",2449,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready",2449,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready",2449,[[],["brdrdy_w",3]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received",2449,[[],["bootar_w",3]]],[11,"errint","","Bit 15 - Error Interrupt",2449,[[],["errint_w",3]]],[0,"eistr","atsamd51g::sdhc0","Error Interrupt Status",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::eistr","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[4,"CMDTEO_A","","Command Timeout Error",null,null],[13,"NO","","0: No Error",2450,null],[13,"YES","","1: Timeout",2450,null],[4,"CMDCRC_A","","Command CRC Error",null,null],[13,"NO","","0: No Error",2451,null],[13,"YES","","1: CRC Error Generated",2451,null],[4,"CMDEND_A","","Command End Bit Error",null,null],[13,"NO","","0: No error",2452,null],[13,"YES","","1: End Bit Error Generated",2452,null],[4,"CMDIDX_A","","Command Index Error",null,null],[13,"NO","","0: No Error",2453,null],[13,"YES","","1: Error",2453,null],[4,"DATTEO_A","","Data Timeout Error",null,null],[13,"NO","","0: No Error",2454,null],[13,"YES","","1: Timeout",2454,null],[4,"DATCRC_A","","Data CRC Error",null,null],[13,"NO","","0: No Error",2455,null],[13,"YES","","1: Error",2455,null],[4,"DATEND_A","","Data End Bit Error",null,null],[13,"NO","","0: No Error",2456,null],[13,"YES","","1: Error",2456,null],[4,"CURLIM_A","","Current Limit Error",null,null],[13,"NO","","0: No Error",2457,null],[13,"YES","","1: Power Fail",2457,null],[4,"ACMD_A","","Auto CMD Error",null,null],[13,"NO","","0: No Error",2458,null],[13,"YES","","1: Error",2458,null],[4,"ADMA_A","","ADMA Error",null,null],[13,"NO","","0: No Error",2459,null],[13,"YES","","1: Error",2459,null],[6,"R","","Reader of register EISTR",null,null],[6,"W","","Writer for register EISTR",null,null],[6,"CMDTEO_R","","Reader of field `CMDTEO`",null,null],[6,"CMDCRC_R","","Reader of field `CMDCRC`",null,null],[6,"CMDEND_R","","Reader of field `CMDEND`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[6,"DATTEO_R","","Reader of field `DATTEO`",null,null],[6,"DATCRC_R","","Reader of field `DATCRC`",null,null],[6,"DATEND_R","","Reader of field `DATEND`",null,null],[6,"CURLIM_R","","Reader of field `CURLIM`",null,null],[6,"ACMD_R","","Reader of field `ACMD`",null,null],[6,"ADMA_R","","Reader of field `ADMA`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2460,[[],["cmdteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2460,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2460,[[]]],[11,"variant","","Writes `variant` to the field",2461,[[["cmdteo_a",4]],["w",6]]],[11,"no","","No Error",2461,[[],["w",6]]],[11,"yes","","Timeout",2461,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2461,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2461,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2461,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2462,[[],["cmdcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2462,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2462,[[]]],[11,"variant","","Writes `variant` to the field",2463,[[["cmdcrc_a",4]],["w",6]]],[11,"no","","No Error",2463,[[],["w",6]]],[11,"yes","","CRC Error Generated",2463,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2463,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2463,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2463,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2464,[[],["cmdend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2464,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2464,[[]]],[11,"variant","","Writes `variant` to the field",2465,[[["cmdend_a",4]],["w",6]]],[11,"no","","No error",2465,[[],["w",6]]],[11,"yes","","End Bit Error Generated",2465,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2465,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2465,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2465,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdidx_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2466,[[],["cmdidx_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2466,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2466,[[]]],[11,"variant","","Writes `variant` to the field",2467,[[["cmdidx_a",4]],["w",6]]],[11,"no","","No Error",2467,[[],["w",6]]],[11,"yes","","Error",2467,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2467,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2467,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2467,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2468,[[],["datteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2468,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2468,[[]]],[11,"variant","","Writes `variant` to the field",2469,[[["datteo_a",4]],["w",6]]],[11,"no","","No Error",2469,[[],["w",6]]],[11,"yes","","Timeout",2469,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2469,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2470,[[],["datcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2470,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2470,[[]]],[11,"variant","","Writes `variant` to the field",2471,[[["datcrc_a",4]],["w",6]]],[11,"no","","No Error",2471,[[],["w",6]]],[11,"yes","","Error",2471,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2471,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2471,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2471,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2472,[[],["datend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2472,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2472,[[]]],[11,"variant","","Writes `variant` to the field",2473,[[["datend_a",4]],["w",6]]],[11,"no","","No Error",2473,[[],["w",6]]],[11,"yes","","Error",2473,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2473,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2473,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2473,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["curlim_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2474,[[],["curlim_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2474,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2474,[[]]],[11,"variant","","Writes `variant` to the field",2475,[[["curlim_a",4]],["w",6]]],[11,"no","","No Error",2475,[[],["w",6]]],[11,"yes","","Power Fail",2475,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2475,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2475,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2475,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2476,[[],["acmd_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2476,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2476,[[]]],[11,"variant","","Writes `variant` to the field",2477,[[["acmd_a",4]],["w",6]]],[11,"no","","No Error",2477,[[],["w",6]]],[11,"yes","","Error",2477,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2477,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2477,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2477,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr","Get enumerated values variant",2478,[[],["adma_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2478,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2478,[[]]],[11,"variant","","Writes `variant` to the field",2479,[[["adma_a",4]],["w",6]]],[11,"no","","No Error",2479,[[],["w",6]]],[11,"yes","","Error",2479,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2479,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2479,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2479,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error",6,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",6,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error",6,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error",6,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error",6,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error",6,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error",6,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error",6,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error",6,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error",6,[[],["adma_r",6]]],[11,"cmdteo","atsamd51g::sdhc0::eistr","Bit 0 - Command Timeout Error",2480,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",2480,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error",2480,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error",2480,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error",2480,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error",2480,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error",2480,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error",2480,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error",2480,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error",2480,[[],["adma_r",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error",7,[[],["adma_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::eistr","Bit 0 - Command Timeout Error",2481,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",2481,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error",2481,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error",2481,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error",2481,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error",2481,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error",2481,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error",2481,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error",2481,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error",2481,[[],["adma_w",3]]],[0,"eistr_emmc_mode","atsamd51g::sdhc0","Error Interrupt Status",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::eistr_emmc_mode","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[3,"BOOTAE_W","","Write proxy for field `BOOTAE`",null,null],[4,"CMDTEO_A","","Command Timeout Error",null,null],[13,"NO","","0: No Error",2482,null],[13,"YES","","1: Timeout",2482,null],[4,"CMDCRC_A","","Command CRC Error",null,null],[13,"NO","","0: No Error",2483,null],[13,"YES","","1: CRC Error Generated",2483,null],[4,"CMDEND_A","","Command End Bit Error",null,null],[13,"NO","","0: No error",2484,null],[13,"YES","","1: End Bit Error Generated",2484,null],[4,"CMDIDX_A","","Command Index Error",null,null],[13,"NO","","0: No Error",2485,null],[13,"YES","","1: Error",2485,null],[4,"DATTEO_A","","Data Timeout Error",null,null],[13,"NO","","0: No Error",2486,null],[13,"YES","","1: Timeout",2486,null],[4,"DATCRC_A","","Data CRC Error",null,null],[13,"NO","","0: No Error",2487,null],[13,"YES","","1: Error",2487,null],[4,"DATEND_A","","Data End Bit Error",null,null],[13,"NO","","0: No Error",2488,null],[13,"YES","","1: Error",2488,null],[4,"CURLIM_A","","Current Limit Error",null,null],[13,"NO","","0: No Error",2489,null],[13,"YES","","1: Power Fail",2489,null],[4,"ACMD_A","","Auto CMD Error",null,null],[13,"NO","","0: No Error",2490,null],[13,"YES","","1: Error",2490,null],[4,"ADMA_A","","ADMA Error",null,null],[13,"NO","","0: No Error",2491,null],[13,"YES","","1: Error",2491,null],[4,"BOOTAE_A","","Boot Acknowledge Error",null,null],[13,"_0","","0: FIFO contains at least one byte",2492,null],[13,"_1","","1: FIFO is empty",2492,null],[6,"R","","Reader of register EISTR_EMMC_MODE",null,null],[6,"W","","Writer for register EISTR_EMMC_MODE",null,null],[6,"CMDTEO_R","","Reader of field `CMDTEO`",null,null],[6,"CMDCRC_R","","Reader of field `CMDCRC`",null,null],[6,"CMDEND_R","","Reader of field `CMDEND`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[6,"DATTEO_R","","Reader of field `DATTEO`",null,null],[6,"DATCRC_R","","Reader of field `DATCRC`",null,null],[6,"DATEND_R","","Reader of field `DATEND`",null,null],[6,"CURLIM_R","","Reader of field `CURLIM`",null,null],[6,"ACMD_R","","Reader of field `ACMD`",null,null],[6,"ADMA_R","","Reader of field `ADMA`",null,null],[6,"BOOTAE_R","","Reader of field `BOOTAE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2493,[[],["cmdteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2493,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2493,[[]]],[11,"variant","","Writes `variant` to the field",2494,[[["cmdteo_a",4]],["w",6]]],[11,"no","","No Error",2494,[[],["w",6]]],[11,"yes","","Timeout",2494,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2494,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2494,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2494,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2495,[[],["cmdcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2495,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2495,[[]]],[11,"variant","","Writes `variant` to the field",2496,[[["cmdcrc_a",4]],["w",6]]],[11,"no","","No Error",2496,[[],["w",6]]],[11,"yes","","CRC Error Generated",2496,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2496,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2496,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2496,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2497,[[],["cmdend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2497,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2497,[[]]],[11,"variant","","Writes `variant` to the field",2498,[[["cmdend_a",4]],["w",6]]],[11,"no","","No error",2498,[[],["w",6]]],[11,"yes","","End Bit Error Generated",2498,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2498,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2498,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2498,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdidx_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2499,[[],["cmdidx_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2499,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2499,[[]]],[11,"variant","","Writes `variant` to the field",2500,[[["cmdidx_a",4]],["w",6]]],[11,"no","","No Error",2500,[[],["w",6]]],[11,"yes","","Error",2500,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2500,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2500,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2500,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2501,[[],["datteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2501,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2501,[[]]],[11,"variant","","Writes `variant` to the field",2502,[[["datteo_a",4]],["w",6]]],[11,"no","","No Error",2502,[[],["w",6]]],[11,"yes","","Timeout",2502,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2502,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2502,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2502,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2503,[[],["datcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2503,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2503,[[]]],[11,"variant","","Writes `variant` to the field",2504,[[["datcrc_a",4]],["w",6]]],[11,"no","","No Error",2504,[[],["w",6]]],[11,"yes","","Error",2504,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2504,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2504,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2504,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2505,[[],["datend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2505,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2505,[[]]],[11,"variant","","Writes `variant` to the field",2506,[[["datend_a",4]],["w",6]]],[11,"no","","No Error",2506,[[],["w",6]]],[11,"yes","","Error",2506,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2506,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2506,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2506,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["curlim_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2507,[[],["curlim_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2507,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2507,[[]]],[11,"variant","","Writes `variant` to the field",2508,[[["curlim_a",4]],["w",6]]],[11,"no","","No Error",2508,[[],["w",6]]],[11,"yes","","Power Fail",2508,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2508,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2509,[[],["acmd_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2509,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2509,[[]]],[11,"variant","","Writes `variant` to the field",2510,[[["acmd_a",4]],["w",6]]],[11,"no","","No Error",2510,[[],["w",6]]],[11,"yes","","Error",2510,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2510,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2510,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2510,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2511,[[],["adma_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2511,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2511,[[]]],[11,"variant","","Writes `variant` to the field",2512,[[["adma_a",4]],["w",6]]],[11,"no","","No Error",2512,[[],["w",6]]],[11,"yes","","Error",2512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2512,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bootae_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eistr_emmc_mode","Get enumerated values variant",2513,[[],["bootae_a",4]]],[11,"is_0","","Checks if the value of the field is `_0`",2513,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",2513,[[]]],[11,"variant","","Writes `variant` to the field",2514,[[["bootae_a",4]],["w",6]]],[11,"_0","","FIFO contains at least one byte",2514,[[],["w",6]]],[11,"_1","","FIFO is empty",2514,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2514,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error",6,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",6,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error",6,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error",6,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error",6,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error",6,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error",6,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error",6,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error",6,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error",6,[[],["adma_r",6]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error",6,[[],["bootae_r",6]]],[11,"cmdteo","atsamd51g::sdhc0::eistr_emmc_mode","Bit 0 - Command Timeout Error",2515,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",2515,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error",2515,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error",2515,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error",2515,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error",2515,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error",2515,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error",2515,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error",2515,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error",2515,[[],["adma_r",6]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error",2515,[[],["bootae_r",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error",7,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error",7,[[],["bootae_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::eistr_emmc_mode","Bit 0 - Command Timeout Error",2516,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error",2516,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error",2516,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error",2516,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error",2516,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error",2516,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error",2516,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error",2516,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error",2516,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error",2516,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error",2516,[[],["bootae_w",3]]],[0,"nister","atsamd51g::sdhc0","Normal Interrupt Status Enable",null,null],[3,"CMDC_W","atsamd51g::sdhc0::nister","Write proxy for field `CMDC`",null,null],[3,"TRFC_W","","Write proxy for field `TRFC`",null,null],[3,"BLKGE_W","","Write proxy for field `BLKGE`",null,null],[3,"DMAINT_W","","Write proxy for field `DMAINT`",null,null],[3,"BWRRDY_W","","Write proxy for field `BWRRDY`",null,null],[3,"BRDRDY_W","","Write proxy for field `BRDRDY`",null,null],[3,"CINS_W","","Write proxy for field `CINS`",null,null],[3,"CREM_W","","Write proxy for field `CREM`",null,null],[3,"CINT_W","","Write proxy for field `CINT`",null,null],[4,"CMDC_A","","Command Complete Status Enable",null,null],[13,"MASKED","","0: Masked",2517,null],[13,"ENABLED","","1: Enabled",2517,null],[4,"TRFC_A","","Transfer Complete Status Enable",null,null],[13,"MASKED","","0: Masked",2518,null],[13,"ENABLED","","1: Enabled",2518,null],[4,"BLKGE_A","","Block Gap Event Status Enable",null,null],[13,"MASKED","","0: Masked",2519,null],[13,"ENABLED","","1: Enabled",2519,null],[4,"DMAINT_A","","DMA Interrupt Status Enable",null,null],[13,"MASKED","","0: Masked",2520,null],[13,"ENABLED","","1: Enabled",2520,null],[4,"BWRRDY_A","","Buffer Write Ready Status Enable",null,null],[13,"MASKED","","0: Masked",2521,null],[13,"ENABLED","","1: Enabled",2521,null],[4,"BRDRDY_A","","Buffer Read Ready Status Enable",null,null],[13,"MASKED","","0: Masked",2522,null],[13,"ENABLED","","1: Enabled",2522,null],[4,"CINS_A","","Card Insertion Status Enable",null,null],[13,"MASKED","","0: Masked",2523,null],[13,"ENABLED","","1: Enabled",2523,null],[4,"CREM_A","","Card Removal Status Enable",null,null],[13,"MASKED","","0: Masked",2524,null],[13,"ENABLED","","1: Enabled",2524,null],[4,"CINT_A","","Card Interrupt Status Enable",null,null],[13,"MASKED","","0: Masked",2525,null],[13,"ENABLED","","1: Enabled",2525,null],[6,"R","","Reader of register NISTER",null,null],[6,"W","","Writer for register NISTER",null,null],[6,"CMDC_R","","Reader of field `CMDC`",null,null],[6,"TRFC_R","","Reader of field `TRFC`",null,null],[6,"BLKGE_R","","Reader of field `BLKGE`",null,null],[6,"DMAINT_R","","Reader of field `DMAINT`",null,null],[6,"BWRRDY_R","","Reader of field `BWRRDY`",null,null],[6,"BRDRDY_R","","Reader of field `BRDRDY`",null,null],[6,"CINS_R","","Reader of field `CINS`",null,null],[6,"CREM_R","","Reader of field `CREM`",null,null],[6,"CINT_R","","Reader of field `CINT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2526,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2526,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2526,[[]]],[11,"variant","","Writes `variant` to the field",2527,[[["cmdc_a",4]],["w",6]]],[11,"masked","","Masked",2527,[[],["w",6]]],[11,"enabled","","Enabled",2527,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2527,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2527,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2527,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2528,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2528,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2528,[[]]],[11,"variant","","Writes `variant` to the field",2529,[[["trfc_a",4]],["w",6]]],[11,"masked","","Masked",2529,[[],["w",6]]],[11,"enabled","","Enabled",2529,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2529,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2529,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2529,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2530,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2530,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2530,[[]]],[11,"variant","","Writes `variant` to the field",2531,[[["blkge_a",4]],["w",6]]],[11,"masked","","Masked",2531,[[],["w",6]]],[11,"enabled","","Enabled",2531,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2531,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2531,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2531,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2532,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2532,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2532,[[]]],[11,"variant","","Writes `variant` to the field",2533,[[["dmaint_a",4]],["w",6]]],[11,"masked","","Masked",2533,[[],["w",6]]],[11,"enabled","","Enabled",2533,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2533,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2533,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2533,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2534,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2534,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2534,[[]]],[11,"variant","","Writes `variant` to the field",2535,[[["bwrrdy_a",4]],["w",6]]],[11,"masked","","Masked",2535,[[],["w",6]]],[11,"enabled","","Enabled",2535,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2535,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2535,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2535,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2536,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2536,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2536,[[]]],[11,"variant","","Writes `variant` to the field",2537,[[["brdrdy_a",4]],["w",6]]],[11,"masked","","Masked",2537,[[],["w",6]]],[11,"enabled","","Enabled",2537,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2537,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2537,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2537,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cins_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2538,[[],["cins_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2538,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2538,[[]]],[11,"variant","","Writes `variant` to the field",2539,[[["cins_a",4]],["w",6]]],[11,"masked","","Masked",2539,[[],["w",6]]],[11,"enabled","","Enabled",2539,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2539,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2539,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2539,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["crem_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2540,[[],["crem_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2540,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2540,[[]]],[11,"variant","","Writes `variant` to the field",2541,[[["crem_a",4]],["w",6]]],[11,"masked","","Masked",2541,[[],["w",6]]],[11,"enabled","","Enabled",2541,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2541,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2541,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2541,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister","Get enumerated values variant",2542,[[],["cint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2542,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2542,[[]]],[11,"variant","","Writes `variant` to the field",2543,[[["cint_a",4]],["w",6]]],[11,"masked","","Masked",2543,[[],["w",6]]],[11,"enabled","","Enabled",2543,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2543,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2543,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2543,[[],["w",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Status Enable",6,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",6,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",6,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",6,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",6,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",6,[[],["brdrdy_r",6]]],[11,"cins","","Bit 6 - Card Insertion Status Enable",6,[[],["cins_r",6]]],[11,"crem","","Bit 7 - Card Removal Status Enable",6,[[],["crem_r",6]]],[11,"cint","","Bit 8 - Card Interrupt Status Enable",6,[[],["cint_r",6]]],[11,"cmdc","atsamd51g::sdhc0::nister","Bit 0 - Command Complete Status Enable",2544,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",2544,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",2544,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",2544,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",2544,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",2544,[[],["brdrdy_r",6]]],[11,"cins","","Bit 6 - Card Insertion Status Enable",2544,[[],["cins_r",6]]],[11,"crem","","Bit 7 - Card Removal Status Enable",2544,[[],["crem_r",6]]],[11,"cint","","Bit 8 - Card Interrupt Status Enable",2544,[[],["cint_r",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Status Enable",7,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",7,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",7,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",7,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",7,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",7,[[],["brdrdy_w",3]]],[11,"cins","","Bit 6 - Card Insertion Status Enable",7,[[],["cins_w",3]]],[11,"crem","","Bit 7 - Card Removal Status Enable",7,[[],["crem_w",3]]],[11,"cint","","Bit 8 - Card Interrupt Status Enable",7,[[],["cint_w",3]]],[11,"cmdc","atsamd51g::sdhc0::nister","Bit 0 - Command Complete Status Enable",2545,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",2545,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",2545,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",2545,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",2545,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",2545,[[],["brdrdy_w",3]]],[11,"cins","","Bit 6 - Card Insertion Status Enable",2545,[[],["cins_w",3]]],[11,"crem","","Bit 7 - Card Removal Status Enable",2545,[[],["crem_w",3]]],[11,"cint","","Bit 8 - Card Interrupt Status Enable",2545,[[],["cint_w",3]]],[0,"nister_emmc_mode","atsamd51g::sdhc0","Normal Interrupt Status Enable",null,null],[3,"CMDC_W","atsamd51g::sdhc0::nister_emmc_mode","Write proxy for field `CMDC`",null,null],[3,"TRFC_W","","Write proxy for field `TRFC`",null,null],[3,"BLKGE_W","","Write proxy for field `BLKGE`",null,null],[3,"DMAINT_W","","Write proxy for field `DMAINT`",null,null],[3,"BWRRDY_W","","Write proxy for field `BWRRDY`",null,null],[3,"BRDRDY_W","","Write proxy for field `BRDRDY`",null,null],[3,"BOOTAR_W","","Write proxy for field `BOOTAR`",null,null],[4,"CMDC_A","","Command Complete Status Enable",null,null],[13,"MASKED","","0: Masked",2546,null],[13,"ENABLED","","1: Enabled",2546,null],[4,"TRFC_A","","Transfer Complete Status Enable",null,null],[13,"MASKED","","0: Masked",2547,null],[13,"ENABLED","","1: Enabled",2547,null],[4,"BLKGE_A","","Block Gap Event Status Enable",null,null],[13,"MASKED","","0: Masked",2548,null],[13,"ENABLED","","1: Enabled",2548,null],[4,"DMAINT_A","","DMA Interrupt Status Enable",null,null],[13,"MASKED","","0: Masked",2549,null],[13,"ENABLED","","1: Enabled",2549,null],[4,"BWRRDY_A","","Buffer Write Ready Status Enable",null,null],[13,"MASKED","","0: Masked",2550,null],[13,"ENABLED","","1: Enabled",2550,null],[4,"BRDRDY_A","","Buffer Read Ready Status Enable",null,null],[13,"MASKED","","0: Masked",2551,null],[13,"ENABLED","","1: Enabled",2551,null],[6,"R","","Reader of register NISTER_EMMC_MODE",null,null],[6,"W","","Writer for register NISTER_EMMC_MODE",null,null],[6,"CMDC_R","","Reader of field `CMDC`",null,null],[6,"TRFC_R","","Reader of field `TRFC`",null,null],[6,"BLKGE_R","","Reader of field `BLKGE`",null,null],[6,"DMAINT_R","","Reader of field `DMAINT`",null,null],[6,"BWRRDY_R","","Reader of field `BWRRDY`",null,null],[6,"BRDRDY_R","","Reader of field `BRDRDY`",null,null],[6,"BOOTAR_R","","Reader of field `BOOTAR`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister_emmc_mode","Get enumerated values variant",2552,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2552,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2552,[[]]],[11,"variant","","Writes `variant` to the field",2553,[[["cmdc_a",4]],["w",6]]],[11,"masked","","Masked",2553,[[],["w",6]]],[11,"enabled","","Enabled",2553,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2553,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2553,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2553,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister_emmc_mode","Get enumerated values variant",2554,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2554,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2554,[[]]],[11,"variant","","Writes `variant` to the field",2555,[[["trfc_a",4]],["w",6]]],[11,"masked","","Masked",2555,[[],["w",6]]],[11,"enabled","","Enabled",2555,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2555,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2555,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2555,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister_emmc_mode","Get enumerated values variant",2556,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2556,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2556,[[]]],[11,"variant","","Writes `variant` to the field",2557,[[["blkge_a",4]],["w",6]]],[11,"masked","","Masked",2557,[[],["w",6]]],[11,"enabled","","Enabled",2557,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2557,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2557,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2557,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister_emmc_mode","Get enumerated values variant",2558,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2558,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2558,[[]]],[11,"variant","","Writes `variant` to the field",2559,[[["dmaint_a",4]],["w",6]]],[11,"masked","","Masked",2559,[[],["w",6]]],[11,"enabled","","Enabled",2559,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2559,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2559,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2559,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister_emmc_mode","Get enumerated values variant",2560,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2560,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2560,[[]]],[11,"variant","","Writes `variant` to the field",2561,[[["bwrrdy_a",4]],["w",6]]],[11,"masked","","Masked",2561,[[],["w",6]]],[11,"enabled","","Enabled",2561,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2561,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2561,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2561,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nister_emmc_mode","Get enumerated values variant",2562,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2562,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2562,[[]]],[11,"variant","","Writes `variant` to the field",2563,[[["brdrdy_a",4]],["w",6]]],[11,"masked","","Masked",2563,[[],["w",6]]],[11,"enabled","","Enabled",2563,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2563,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2563,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2563,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2564,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2564,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2564,[[],["w",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Status Enable",6,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",6,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",6,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",6,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",6,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",6,[[],["brdrdy_r",6]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Status Enable",6,[[],["bootar_r",6]]],[11,"cmdc","atsamd51g::sdhc0::nister_emmc_mode","Bit 0 - Command Complete Status Enable",2565,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",2565,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",2565,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",2565,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",2565,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",2565,[[],["brdrdy_r",6]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Status Enable",2565,[[],["bootar_r",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Status Enable",7,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",7,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",7,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",7,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",7,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",7,[[],["brdrdy_w",3]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Status Enable",7,[[],["bootar_w",3]]],[11,"cmdc","atsamd51g::sdhc0::nister_emmc_mode","Bit 0 - Command Complete Status Enable",2566,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Status Enable",2566,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Status Enable",2566,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Status Enable",2566,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Status Enable",2566,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Status Enable",2566,[[],["brdrdy_w",3]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Status Enable",2566,[[],["bootar_w",3]]],[0,"eister","atsamd51g::sdhc0","Error Interrupt Status Enable",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::eister","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[4,"CMDTEO_A","","Command Timeout Error Status Enable",null,null],[13,"MASKED","","0: Masked",2567,null],[13,"ENABLED","","1: Enabled",2567,null],[4,"CMDCRC_A","","Command CRC Error Status Enable",null,null],[13,"MASKED","","0: Masked",2568,null],[13,"ENABLED","","1: Enabled",2568,null],[4,"CMDEND_A","","Command End Bit Error Status Enable",null,null],[13,"MASKED","","0: Masked",2569,null],[13,"ENABLED","","1: Enabled",2569,null],[4,"CMDIDX_A","","Command Index Error Status Enable",null,null],[13,"MASKED","","0: Masked",2570,null],[13,"ENABLED","","1: Enabled",2570,null],[4,"DATTEO_A","","Data Timeout Error Status Enable",null,null],[13,"MASKED","","0: Masked",2571,null],[13,"ENABLED","","1: Enabled",2571,null],[4,"DATCRC_A","","Data CRC Error Status Enable",null,null],[13,"MASKED","","0: Masked",2572,null],[13,"ENABLED","","1: Enabled",2572,null],[4,"DATEND_A","","Data End Bit Error Status Enable",null,null],[13,"MASKED","","0: Masked",2573,null],[13,"ENABLED","","1: Enabled",2573,null],[4,"CURLIM_A","","Current Limit Error Status Enable",null,null],[13,"MASKED","","0: Masked",2574,null],[13,"ENABLED","","1: Enabled",2574,null],[4,"ACMD_A","","Auto CMD Error Status Enable",null,null],[13,"MASKED","","0: Masked",2575,null],[13,"ENABLED","","1: Enabled",2575,null],[4,"ADMA_A","","ADMA Error Status Enable",null,null],[13,"MASKED","","0: Masked",2576,null],[13,"ENABLED","","1: Enabled",2576,null],[6,"R","","Reader of register EISTER",null,null],[6,"W","","Writer for register EISTER",null,null],[6,"CMDTEO_R","","Reader of field `CMDTEO`",null,null],[6,"CMDCRC_R","","Reader of field `CMDCRC`",null,null],[6,"CMDEND_R","","Reader of field `CMDEND`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[6,"DATTEO_R","","Reader of field `DATTEO`",null,null],[6,"DATCRC_R","","Reader of field `DATCRC`",null,null],[6,"DATEND_R","","Reader of field `DATEND`",null,null],[6,"CURLIM_R","","Reader of field `CURLIM`",null,null],[6,"ACMD_R","","Reader of field `ACMD`",null,null],[6,"ADMA_R","","Reader of field `ADMA`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2577,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2577,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2577,[[]]],[11,"variant","","Writes `variant` to the field",2578,[[["cmdteo_a",4]],["w",6]]],[11,"masked","","Masked",2578,[[],["w",6]]],[11,"enabled","","Enabled",2578,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2578,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2578,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2578,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2579,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2579,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2579,[[]]],[11,"variant","","Writes `variant` to the field",2580,[[["cmdcrc_a",4]],["w",6]]],[11,"masked","","Masked",2580,[[],["w",6]]],[11,"enabled","","Enabled",2580,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2580,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2580,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2580,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2581,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2581,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2581,[[]]],[11,"variant","","Writes `variant` to the field",2582,[[["cmdend_a",4]],["w",6]]],[11,"masked","","Masked",2582,[[],["w",6]]],[11,"enabled","","Enabled",2582,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2582,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2582,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2582,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2583,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2583,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2583,[[]]],[11,"variant","","Writes `variant` to the field",2584,[[["cmdidx_a",4]],["w",6]]],[11,"masked","","Masked",2584,[[],["w",6]]],[11,"enabled","","Enabled",2584,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2584,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2584,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2584,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2585,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2585,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2585,[[]]],[11,"variant","","Writes `variant` to the field",2586,[[["datteo_a",4]],["w",6]]],[11,"masked","","Masked",2586,[[],["w",6]]],[11,"enabled","","Enabled",2586,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2586,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2586,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2586,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2587,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2587,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2587,[[]]],[11,"variant","","Writes `variant` to the field",2588,[[["datcrc_a",4]],["w",6]]],[11,"masked","","Masked",2588,[[],["w",6]]],[11,"enabled","","Enabled",2588,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2588,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2588,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2588,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2589,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2589,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2589,[[]]],[11,"variant","","Writes `variant` to the field",2590,[[["datend_a",4]],["w",6]]],[11,"masked","","Masked",2590,[[],["w",6]]],[11,"enabled","","Enabled",2590,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2590,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2590,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2590,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2591,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2591,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2591,[[]]],[11,"variant","","Writes `variant` to the field",2592,[[["curlim_a",4]],["w",6]]],[11,"masked","","Masked",2592,[[],["w",6]]],[11,"enabled","","Enabled",2592,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2592,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2592,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2592,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2593,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2593,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2593,[[]]],[11,"variant","","Writes `variant` to the field",2594,[[["acmd_a",4]],["w",6]]],[11,"masked","","Masked",2594,[[],["w",6]]],[11,"enabled","","Enabled",2594,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2594,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2594,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2594,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister","Get enumerated values variant",2595,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2595,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2595,[[]]],[11,"variant","","Writes `variant` to the field",2596,[[["adma_a",4]],["w",6]]],[11,"masked","","Masked",2596,[[],["w",6]]],[11,"enabled","","Enabled",2596,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2596,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2596,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2596,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Status Enable",6,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",6,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",6,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",6,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",6,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",6,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",6,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",6,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",6,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",6,[[],["adma_r",6]]],[11,"cmdteo","atsamd51g::sdhc0::eister","Bit 0 - Command Timeout Error Status Enable",2597,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",2597,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",2597,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",2597,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",2597,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",2597,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",2597,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",2597,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",2597,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",2597,[[],["adma_r",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Status Enable",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",7,[[],["adma_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::eister","Bit 0 - Command Timeout Error Status Enable",2598,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",2598,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",2598,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",2598,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",2598,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",2598,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",2598,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",2598,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",2598,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",2598,[[],["adma_w",3]]],[0,"eister_emmc_mode","atsamd51g::sdhc0","Error Interrupt Status Enable",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::eister_emmc_mode","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[3,"BOOTAE_W","","Write proxy for field `BOOTAE`",null,null],[4,"CMDTEO_A","","Command Timeout Error Status Enable",null,null],[13,"MASKED","","0: Masked",2599,null],[13,"ENABLED","","1: Enabled",2599,null],[4,"CMDCRC_A","","Command CRC Error Status Enable",null,null],[13,"MASKED","","0: Masked",2600,null],[13,"ENABLED","","1: Enabled",2600,null],[4,"CMDEND_A","","Command End Bit Error Status Enable",null,null],[13,"MASKED","","0: Masked",2601,null],[13,"ENABLED","","1: Enabled",2601,null],[4,"CMDIDX_A","","Command Index Error Status Enable",null,null],[13,"MASKED","","0: Masked",2602,null],[13,"ENABLED","","1: Enabled",2602,null],[4,"DATTEO_A","","Data Timeout Error Status Enable",null,null],[13,"MASKED","","0: Masked",2603,null],[13,"ENABLED","","1: Enabled",2603,null],[4,"DATCRC_A","","Data CRC Error Status Enable",null,null],[13,"MASKED","","0: Masked",2604,null],[13,"ENABLED","","1: Enabled",2604,null],[4,"DATEND_A","","Data End Bit Error Status Enable",null,null],[13,"MASKED","","0: Masked",2605,null],[13,"ENABLED","","1: Enabled",2605,null],[4,"CURLIM_A","","Current Limit Error Status Enable",null,null],[13,"MASKED","","0: Masked",2606,null],[13,"ENABLED","","1: Enabled",2606,null],[4,"ACMD_A","","Auto CMD Error Status Enable",null,null],[13,"MASKED","","0: Masked",2607,null],[13,"ENABLED","","1: Enabled",2607,null],[4,"ADMA_A","","ADMA Error Status Enable",null,null],[13,"MASKED","","0: Masked",2608,null],[13,"ENABLED","","1: Enabled",2608,null],[6,"R","","Reader of register EISTER_EMMC_MODE",null,null],[6,"W","","Writer for register EISTER_EMMC_MODE",null,null],[6,"CMDTEO_R","","Reader of field `CMDTEO`",null,null],[6,"CMDCRC_R","","Reader of field `CMDCRC`",null,null],[6,"CMDEND_R","","Reader of field `CMDEND`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[6,"DATTEO_R","","Reader of field `DATTEO`",null,null],[6,"DATCRC_R","","Reader of field `DATCRC`",null,null],[6,"DATEND_R","","Reader of field `DATEND`",null,null],[6,"CURLIM_R","","Reader of field `CURLIM`",null,null],[6,"ACMD_R","","Reader of field `ACMD`",null,null],[6,"ADMA_R","","Reader of field `ADMA`",null,null],[6,"BOOTAE_R","","Reader of field `BOOTAE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2609,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2609,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2609,[[]]],[11,"variant","","Writes `variant` to the field",2610,[[["cmdteo_a",4]],["w",6]]],[11,"masked","","Masked",2610,[[],["w",6]]],[11,"enabled","","Enabled",2610,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2610,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2610,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2610,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2611,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2611,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2611,[[]]],[11,"variant","","Writes `variant` to the field",2612,[[["cmdcrc_a",4]],["w",6]]],[11,"masked","","Masked",2612,[[],["w",6]]],[11,"enabled","","Enabled",2612,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2612,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2612,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2612,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2613,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2613,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2613,[[]]],[11,"variant","","Writes `variant` to the field",2614,[[["cmdend_a",4]],["w",6]]],[11,"masked","","Masked",2614,[[],["w",6]]],[11,"enabled","","Enabled",2614,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2614,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2614,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2614,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2615,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2615,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2615,[[]]],[11,"variant","","Writes `variant` to the field",2616,[[["cmdidx_a",4]],["w",6]]],[11,"masked","","Masked",2616,[[],["w",6]]],[11,"enabled","","Enabled",2616,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2616,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2616,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2616,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2617,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2617,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2617,[[]]],[11,"variant","","Writes `variant` to the field",2618,[[["datteo_a",4]],["w",6]]],[11,"masked","","Masked",2618,[[],["w",6]]],[11,"enabled","","Enabled",2618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2618,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2619,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2619,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2619,[[]]],[11,"variant","","Writes `variant` to the field",2620,[[["datcrc_a",4]],["w",6]]],[11,"masked","","Masked",2620,[[],["w",6]]],[11,"enabled","","Enabled",2620,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2620,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2620,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2620,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2621,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2621,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2621,[[]]],[11,"variant","","Writes `variant` to the field",2622,[[["datend_a",4]],["w",6]]],[11,"masked","","Masked",2622,[[],["w",6]]],[11,"enabled","","Enabled",2622,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2622,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2622,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2622,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2623,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2623,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2623,[[]]],[11,"variant","","Writes `variant` to the field",2624,[[["curlim_a",4]],["w",6]]],[11,"masked","","Masked",2624,[[],["w",6]]],[11,"enabled","","Enabled",2624,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2624,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2624,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2624,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2625,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2625,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2625,[[]]],[11,"variant","","Writes `variant` to the field",2626,[[["acmd_a",4]],["w",6]]],[11,"masked","","Masked",2626,[[],["w",6]]],[11,"enabled","","Enabled",2626,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2626,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2626,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2626,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eister_emmc_mode","Get enumerated values variant",2627,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2627,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2627,[[]]],[11,"variant","","Writes `variant` to the field",2628,[[["adma_a",4]],["w",6]]],[11,"masked","","Masked",2628,[[],["w",6]]],[11,"enabled","","Enabled",2628,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2628,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2628,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2628,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2629,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2629,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2629,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Status Enable",6,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",6,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",6,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",6,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",6,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",6,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",6,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",6,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",6,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",6,[[],["adma_r",6]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Status Enable",6,[[],["bootae_r",6]]],[11,"cmdteo","atsamd51g::sdhc0::eister_emmc_mode","Bit 0 - Command Timeout Error Status Enable",2630,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",2630,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",2630,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",2630,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",2630,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",2630,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",2630,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",2630,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",2630,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",2630,[[],["adma_r",6]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Status Enable",2630,[[],["bootae_r",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Status Enable",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",7,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Status Enable",7,[[],["bootae_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::eister_emmc_mode","Bit 0 - Command Timeout Error Status Enable",2631,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Status Enable",2631,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Status Enable",2631,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Status Enable",2631,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Status Enable",2631,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Status Enable",2631,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Status Enable",2631,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Status Enable",2631,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Status Enable",2631,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Status Enable",2631,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Status Enable",2631,[[],["bootae_w",3]]],[0,"nisier","atsamd51g::sdhc0","Normal Interrupt Signal Enable",null,null],[3,"CMDC_W","atsamd51g::sdhc0::nisier","Write proxy for field `CMDC`",null,null],[3,"TRFC_W","","Write proxy for field `TRFC`",null,null],[3,"BLKGE_W","","Write proxy for field `BLKGE`",null,null],[3,"DMAINT_W","","Write proxy for field `DMAINT`",null,null],[3,"BWRRDY_W","","Write proxy for field `BWRRDY`",null,null],[3,"BRDRDY_W","","Write proxy for field `BRDRDY`",null,null],[3,"CINS_W","","Write proxy for field `CINS`",null,null],[3,"CREM_W","","Write proxy for field `CREM`",null,null],[3,"CINT_W","","Write proxy for field `CINT`",null,null],[4,"CMDC_A","","Command Complete Signal Enable",null,null],[13,"MASKED","","0: Masked",2632,null],[13,"ENABLED","","1: Enabled",2632,null],[4,"TRFC_A","","Transfer Complete Signal Enable",null,null],[13,"MASKED","","0: Masked",2633,null],[13,"ENABLED","","1: Enabled",2633,null],[4,"BLKGE_A","","Block Gap Event Signal Enable",null,null],[13,"MASKED","","0: Masked",2634,null],[13,"ENABLED","","1: Enabled",2634,null],[4,"DMAINT_A","","DMA Interrupt Signal Enable",null,null],[13,"MASKED","","0: Masked",2635,null],[13,"ENABLED","","1: Enabled",2635,null],[4,"BWRRDY_A","","Buffer Write Ready Signal Enable",null,null],[13,"MASKED","","0: Masked",2636,null],[13,"ENABLED","","1: Enabled",2636,null],[4,"BRDRDY_A","","Buffer Read Ready Signal Enable",null,null],[13,"MASKED","","0: Masked",2637,null],[13,"ENABLED","","1: Enabled",2637,null],[4,"CINS_A","","Card Insertion Signal Enable",null,null],[13,"MASKED","","0: Masked",2638,null],[13,"ENABLED","","1: Enabled",2638,null],[4,"CREM_A","","Card Removal Signal Enable",null,null],[13,"MASKED","","0: Masked",2639,null],[13,"ENABLED","","1: Enabled",2639,null],[4,"CINT_A","","Card Interrupt Signal Enable",null,null],[13,"MASKED","","0: Masked",2640,null],[13,"ENABLED","","1: Enabled",2640,null],[6,"R","","Reader of register NISIER",null,null],[6,"W","","Writer for register NISIER",null,null],[6,"CMDC_R","","Reader of field `CMDC`",null,null],[6,"TRFC_R","","Reader of field `TRFC`",null,null],[6,"BLKGE_R","","Reader of field `BLKGE`",null,null],[6,"DMAINT_R","","Reader of field `DMAINT`",null,null],[6,"BWRRDY_R","","Reader of field `BWRRDY`",null,null],[6,"BRDRDY_R","","Reader of field `BRDRDY`",null,null],[6,"CINS_R","","Reader of field `CINS`",null,null],[6,"CREM_R","","Reader of field `CREM`",null,null],[6,"CINT_R","","Reader of field `CINT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2641,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2641,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2641,[[]]],[11,"variant","","Writes `variant` to the field",2642,[[["cmdc_a",4]],["w",6]]],[11,"masked","","Masked",2642,[[],["w",6]]],[11,"enabled","","Enabled",2642,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2642,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2642,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2642,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2643,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2643,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2643,[[]]],[11,"variant","","Writes `variant` to the field",2644,[[["trfc_a",4]],["w",6]]],[11,"masked","","Masked",2644,[[],["w",6]]],[11,"enabled","","Enabled",2644,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2644,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2644,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2644,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2645,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2645,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2645,[[]]],[11,"variant","","Writes `variant` to the field",2646,[[["blkge_a",4]],["w",6]]],[11,"masked","","Masked",2646,[[],["w",6]]],[11,"enabled","","Enabled",2646,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2646,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2646,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2646,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2647,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2647,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2647,[[]]],[11,"variant","","Writes `variant` to the field",2648,[[["dmaint_a",4]],["w",6]]],[11,"masked","","Masked",2648,[[],["w",6]]],[11,"enabled","","Enabled",2648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2648,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2648,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2648,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2649,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2649,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2649,[[]]],[11,"variant","","Writes `variant` to the field",2650,[[["bwrrdy_a",4]],["w",6]]],[11,"masked","","Masked",2650,[[],["w",6]]],[11,"enabled","","Enabled",2650,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2650,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2650,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2650,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2651,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2651,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2651,[[]]],[11,"variant","","Writes `variant` to the field",2652,[[["brdrdy_a",4]],["w",6]]],[11,"masked","","Masked",2652,[[],["w",6]]],[11,"enabled","","Enabled",2652,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2652,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2652,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2652,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cins_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2653,[[],["cins_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2653,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2653,[[]]],[11,"variant","","Writes `variant` to the field",2654,[[["cins_a",4]],["w",6]]],[11,"masked","","Masked",2654,[[],["w",6]]],[11,"enabled","","Enabled",2654,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2654,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2654,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2654,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["crem_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2655,[[],["crem_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2655,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2655,[[]]],[11,"variant","","Writes `variant` to the field",2656,[[["crem_a",4]],["w",6]]],[11,"masked","","Masked",2656,[[],["w",6]]],[11,"enabled","","Enabled",2656,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2656,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2656,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2656,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier","Get enumerated values variant",2657,[[],["cint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2657,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2657,[[]]],[11,"variant","","Writes `variant` to the field",2658,[[["cint_a",4]],["w",6]]],[11,"masked","","Masked",2658,[[],["w",6]]],[11,"enabled","","Enabled",2658,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2658,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2658,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2658,[[],["w",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Signal Enable",6,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",6,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",6,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",6,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",6,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",6,[[],["brdrdy_r",6]]],[11,"cins","","Bit 6 - Card Insertion Signal Enable",6,[[],["cins_r",6]]],[11,"crem","","Bit 7 - Card Removal Signal Enable",6,[[],["crem_r",6]]],[11,"cint","","Bit 8 - Card Interrupt Signal Enable",6,[[],["cint_r",6]]],[11,"cmdc","atsamd51g::sdhc0::nisier","Bit 0 - Command Complete Signal Enable",2659,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",2659,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",2659,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",2659,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",2659,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",2659,[[],["brdrdy_r",6]]],[11,"cins","","Bit 6 - Card Insertion Signal Enable",2659,[[],["cins_r",6]]],[11,"crem","","Bit 7 - Card Removal Signal Enable",2659,[[],["crem_r",6]]],[11,"cint","","Bit 8 - Card Interrupt Signal Enable",2659,[[],["cint_r",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Signal Enable",7,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",7,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",7,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",7,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",7,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",7,[[],["brdrdy_w",3]]],[11,"cins","","Bit 6 - Card Insertion Signal Enable",7,[[],["cins_w",3]]],[11,"crem","","Bit 7 - Card Removal Signal Enable",7,[[],["crem_w",3]]],[11,"cint","","Bit 8 - Card Interrupt Signal Enable",7,[[],["cint_w",3]]],[11,"cmdc","atsamd51g::sdhc0::nisier","Bit 0 - Command Complete Signal Enable",2660,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",2660,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",2660,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",2660,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",2660,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",2660,[[],["brdrdy_w",3]]],[11,"cins","","Bit 6 - Card Insertion Signal Enable",2660,[[],["cins_w",3]]],[11,"crem","","Bit 7 - Card Removal Signal Enable",2660,[[],["crem_w",3]]],[11,"cint","","Bit 8 - Card Interrupt Signal Enable",2660,[[],["cint_w",3]]],[0,"nisier_emmc_mode","atsamd51g::sdhc0","Normal Interrupt Signal Enable",null,null],[3,"CMDC_W","atsamd51g::sdhc0::nisier_emmc_mode","Write proxy for field `CMDC`",null,null],[3,"TRFC_W","","Write proxy for field `TRFC`",null,null],[3,"BLKGE_W","","Write proxy for field `BLKGE`",null,null],[3,"DMAINT_W","","Write proxy for field `DMAINT`",null,null],[3,"BWRRDY_W","","Write proxy for field `BWRRDY`",null,null],[3,"BRDRDY_W","","Write proxy for field `BRDRDY`",null,null],[3,"BOOTAR_W","","Write proxy for field `BOOTAR`",null,null],[4,"CMDC_A","","Command Complete Signal Enable",null,null],[13,"MASKED","","0: Masked",2661,null],[13,"ENABLED","","1: Enabled",2661,null],[4,"TRFC_A","","Transfer Complete Signal Enable",null,null],[13,"MASKED","","0: Masked",2662,null],[13,"ENABLED","","1: Enabled",2662,null],[4,"BLKGE_A","","Block Gap Event Signal Enable",null,null],[13,"MASKED","","0: Masked",2663,null],[13,"ENABLED","","1: Enabled",2663,null],[4,"DMAINT_A","","DMA Interrupt Signal Enable",null,null],[13,"MASKED","","0: Masked",2664,null],[13,"ENABLED","","1: Enabled",2664,null],[4,"BWRRDY_A","","Buffer Write Ready Signal Enable",null,null],[13,"MASKED","","0: Masked",2665,null],[13,"ENABLED","","1: Enabled",2665,null],[4,"BRDRDY_A","","Buffer Read Ready Signal Enable",null,null],[13,"MASKED","","0: Masked",2666,null],[13,"ENABLED","","1: Enabled",2666,null],[6,"R","","Reader of register NISIER_EMMC_MODE",null,null],[6,"W","","Writer for register NISIER_EMMC_MODE",null,null],[6,"CMDC_R","","Reader of field `CMDC`",null,null],[6,"TRFC_R","","Reader of field `TRFC`",null,null],[6,"BLKGE_R","","Reader of field `BLKGE`",null,null],[6,"DMAINT_R","","Reader of field `DMAINT`",null,null],[6,"BWRRDY_R","","Reader of field `BWRRDY`",null,null],[6,"BRDRDY_R","","Reader of field `BRDRDY`",null,null],[6,"BOOTAR_R","","Reader of field `BOOTAR`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier_emmc_mode","Get enumerated values variant",2667,[[],["cmdc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2667,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2667,[[]]],[11,"variant","","Writes `variant` to the field",2668,[[["cmdc_a",4]],["w",6]]],[11,"masked","","Masked",2668,[[],["w",6]]],[11,"enabled","","Enabled",2668,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2668,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2668,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2668,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier_emmc_mode","Get enumerated values variant",2669,[[],["trfc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2669,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2669,[[]]],[11,"variant","","Writes `variant` to the field",2670,[[["trfc_a",4]],["w",6]]],[11,"masked","","Masked",2670,[[],["w",6]]],[11,"enabled","","Enabled",2670,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2670,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2670,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2670,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier_emmc_mode","Get enumerated values variant",2671,[[],["blkge_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2671,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2671,[[]]],[11,"variant","","Writes `variant` to the field",2672,[[["blkge_a",4]],["w",6]]],[11,"masked","","Masked",2672,[[],["w",6]]],[11,"enabled","","Enabled",2672,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2672,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2672,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2672,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier_emmc_mode","Get enumerated values variant",2673,[[],["dmaint_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2673,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2673,[[]]],[11,"variant","","Writes `variant` to the field",2674,[[["dmaint_a",4]],["w",6]]],[11,"masked","","Masked",2674,[[],["w",6]]],[11,"enabled","","Enabled",2674,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2674,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2674,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2674,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier_emmc_mode","Get enumerated values variant",2675,[[],["bwrrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2675,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2675,[[]]],[11,"variant","","Writes `variant` to the field",2676,[[["bwrrdy_a",4]],["w",6]]],[11,"masked","","Masked",2676,[[],["w",6]]],[11,"enabled","","Enabled",2676,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2676,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2676,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2676,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::nisier_emmc_mode","Get enumerated values variant",2677,[[],["brdrdy_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2677,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2677,[[]]],[11,"variant","","Writes `variant` to the field",2678,[[["brdrdy_a",4]],["w",6]]],[11,"masked","","Masked",2678,[[],["w",6]]],[11,"enabled","","Enabled",2678,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2678,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2678,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2678,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2679,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2679,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2679,[[],["w",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Signal Enable",6,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",6,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",6,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",6,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",6,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",6,[[],["brdrdy_r",6]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Signal Enable",6,[[],["bootar_r",6]]],[11,"cmdc","atsamd51g::sdhc0::nisier_emmc_mode","Bit 0 - Command Complete Signal Enable",2680,[[],["cmdc_r",6]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",2680,[[],["trfc_r",6]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",2680,[[],["blkge_r",6]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",2680,[[],["dmaint_r",6]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",2680,[[],["bwrrdy_r",6]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",2680,[[],["brdrdy_r",6]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Signal Enable",2680,[[],["bootar_r",6]]],[11,"cmdc","atsamd51g::generic","Bit 0 - Command Complete Signal Enable",7,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",7,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",7,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",7,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",7,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",7,[[],["brdrdy_w",3]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Signal Enable",7,[[],["bootar_w",3]]],[11,"cmdc","atsamd51g::sdhc0::nisier_emmc_mode","Bit 0 - Command Complete Signal Enable",2681,[[],["cmdc_w",3]]],[11,"trfc","","Bit 1 - Transfer Complete Signal Enable",2681,[[],["trfc_w",3]]],[11,"blkge","","Bit 2 - Block Gap Event Signal Enable",2681,[[],["blkge_w",3]]],[11,"dmaint","","Bit 3 - DMA Interrupt Signal Enable",2681,[[],["dmaint_w",3]]],[11,"bwrrdy","","Bit 4 - Buffer Write Ready Signal Enable",2681,[[],["bwrrdy_w",3]]],[11,"brdrdy","","Bit 5 - Buffer Read Ready Signal Enable",2681,[[],["brdrdy_w",3]]],[11,"bootar","","Bit 14 - Boot Acknowledge Received Signal Enable",2681,[[],["bootar_w",3]]],[0,"eisier","atsamd51g::sdhc0","Error Interrupt Signal Enable",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::eisier","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[4,"CMDTEO_A","","Command Timeout Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2682,null],[13,"ENABLED","","1: Enabled",2682,null],[4,"CMDCRC_A","","Command CRC Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2683,null],[13,"ENABLED","","1: Enabled",2683,null],[4,"CMDEND_A","","Command End Bit Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2684,null],[13,"ENABLED","","1: Enabled",2684,null],[4,"CMDIDX_A","","Command Index Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2685,null],[13,"ENABLED","","1: Enabled",2685,null],[4,"DATTEO_A","","Data Timeout Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2686,null],[13,"ENABLED","","1: Enabled",2686,null],[4,"DATCRC_A","","Data CRC Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2687,null],[13,"ENABLED","","1: Enabled",2687,null],[4,"DATEND_A","","Data End Bit Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2688,null],[13,"ENABLED","","1: Enabled",2688,null],[4,"CURLIM_A","","Current Limit Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2689,null],[13,"ENABLED","","1: Enabled",2689,null],[4,"ACMD_A","","Auto CMD Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2690,null],[13,"ENABLED","","1: Enabled",2690,null],[4,"ADMA_A","","ADMA Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2691,null],[13,"ENABLED","","1: Enabled",2691,null],[6,"R","","Reader of register EISIER",null,null],[6,"W","","Writer for register EISIER",null,null],[6,"CMDTEO_R","","Reader of field `CMDTEO`",null,null],[6,"CMDCRC_R","","Reader of field `CMDCRC`",null,null],[6,"CMDEND_R","","Reader of field `CMDEND`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[6,"DATTEO_R","","Reader of field `DATTEO`",null,null],[6,"DATCRC_R","","Reader of field `DATCRC`",null,null],[6,"DATEND_R","","Reader of field `DATEND`",null,null],[6,"CURLIM_R","","Reader of field `CURLIM`",null,null],[6,"ACMD_R","","Reader of field `ACMD`",null,null],[6,"ADMA_R","","Reader of field `ADMA`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2692,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2692,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2692,[[]]],[11,"variant","","Writes `variant` to the field",2693,[[["cmdteo_a",4]],["w",6]]],[11,"masked","","Masked",2693,[[],["w",6]]],[11,"enabled","","Enabled",2693,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2693,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2693,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2693,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2694,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2694,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2694,[[]]],[11,"variant","","Writes `variant` to the field",2695,[[["cmdcrc_a",4]],["w",6]]],[11,"masked","","Masked",2695,[[],["w",6]]],[11,"enabled","","Enabled",2695,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2695,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2695,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2695,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2696,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2696,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2696,[[]]],[11,"variant","","Writes `variant` to the field",2697,[[["cmdend_a",4]],["w",6]]],[11,"masked","","Masked",2697,[[],["w",6]]],[11,"enabled","","Enabled",2697,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2697,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2697,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2697,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2698,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2698,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2698,[[]]],[11,"variant","","Writes `variant` to the field",2699,[[["cmdidx_a",4]],["w",6]]],[11,"masked","","Masked",2699,[[],["w",6]]],[11,"enabled","","Enabled",2699,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2699,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2700,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2700,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2700,[[]]],[11,"variant","","Writes `variant` to the field",2701,[[["datteo_a",4]],["w",6]]],[11,"masked","","Masked",2701,[[],["w",6]]],[11,"enabled","","Enabled",2701,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2701,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2701,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2701,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2702,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2702,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2702,[[]]],[11,"variant","","Writes `variant` to the field",2703,[[["datcrc_a",4]],["w",6]]],[11,"masked","","Masked",2703,[[],["w",6]]],[11,"enabled","","Enabled",2703,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2703,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2703,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2703,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2704,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2704,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2704,[[]]],[11,"variant","","Writes `variant` to the field",2705,[[["datend_a",4]],["w",6]]],[11,"masked","","Masked",2705,[[],["w",6]]],[11,"enabled","","Enabled",2705,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2705,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2705,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2705,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2706,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2706,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2706,[[]]],[11,"variant","","Writes `variant` to the field",2707,[[["curlim_a",4]],["w",6]]],[11,"masked","","Masked",2707,[[],["w",6]]],[11,"enabled","","Enabled",2707,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2707,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2707,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2707,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2708,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2708,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2708,[[]]],[11,"variant","","Writes `variant` to the field",2709,[[["acmd_a",4]],["w",6]]],[11,"masked","","Masked",2709,[[],["w",6]]],[11,"enabled","","Enabled",2709,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2709,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2709,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2709,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier","Get enumerated values variant",2710,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2710,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2710,[[]]],[11,"variant","","Writes `variant` to the field",2711,[[["adma_a",4]],["w",6]]],[11,"masked","","Masked",2711,[[],["w",6]]],[11,"enabled","","Enabled",2711,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2711,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2711,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2711,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Signal Enable",6,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",6,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",6,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",6,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",6,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",6,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",6,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",6,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",6,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",6,[[],["adma_r",6]]],[11,"cmdteo","atsamd51g::sdhc0::eisier","Bit 0 - Command Timeout Error Signal Enable",2712,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",2712,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",2712,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",2712,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",2712,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",2712,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",2712,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",2712,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",2712,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",2712,[[],["adma_r",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Signal Enable",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",7,[[],["adma_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::eisier","Bit 0 - Command Timeout Error Signal Enable",2713,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",2713,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",2713,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",2713,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",2713,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",2713,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",2713,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",2713,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",2713,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",2713,[[],["adma_w",3]]],[0,"eisier_emmc_mode","atsamd51g::sdhc0","Error Interrupt Signal Enable",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::eisier_emmc_mode","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[3,"BOOTAE_W","","Write proxy for field `BOOTAE`",null,null],[4,"CMDTEO_A","","Command Timeout Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2714,null],[13,"ENABLED","","1: Enabled",2714,null],[4,"CMDCRC_A","","Command CRC Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2715,null],[13,"ENABLED","","1: Enabled",2715,null],[4,"CMDEND_A","","Command End Bit Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2716,null],[13,"ENABLED","","1: Enabled",2716,null],[4,"CMDIDX_A","","Command Index Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2717,null],[13,"ENABLED","","1: Enabled",2717,null],[4,"DATTEO_A","","Data Timeout Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2718,null],[13,"ENABLED","","1: Enabled",2718,null],[4,"DATCRC_A","","Data CRC Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2719,null],[13,"ENABLED","","1: Enabled",2719,null],[4,"DATEND_A","","Data End Bit Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2720,null],[13,"ENABLED","","1: Enabled",2720,null],[4,"CURLIM_A","","Current Limit Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2721,null],[13,"ENABLED","","1: Enabled",2721,null],[4,"ACMD_A","","Auto CMD Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2722,null],[13,"ENABLED","","1: Enabled",2722,null],[4,"ADMA_A","","ADMA Error Signal Enable",null,null],[13,"MASKED","","0: Masked",2723,null],[13,"ENABLED","","1: Enabled",2723,null],[6,"R","","Reader of register EISIER_EMMC_MODE",null,null],[6,"W","","Writer for register EISIER_EMMC_MODE",null,null],[6,"CMDTEO_R","","Reader of field `CMDTEO`",null,null],[6,"CMDCRC_R","","Reader of field `CMDCRC`",null,null],[6,"CMDEND_R","","Reader of field `CMDEND`",null,null],[6,"CMDIDX_R","","Reader of field `CMDIDX`",null,null],[6,"DATTEO_R","","Reader of field `DATTEO`",null,null],[6,"DATCRC_R","","Reader of field `DATCRC`",null,null],[6,"DATEND_R","","Reader of field `DATEND`",null,null],[6,"CURLIM_R","","Reader of field `CURLIM`",null,null],[6,"ACMD_R","","Reader of field `ACMD`",null,null],[6,"ADMA_R","","Reader of field `ADMA`",null,null],[6,"BOOTAE_R","","Reader of field `BOOTAE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2724,[[],["cmdteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2724,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2724,[[]]],[11,"variant","","Writes `variant` to the field",2725,[[["cmdteo_a",4]],["w",6]]],[11,"masked","","Masked",2725,[[],["w",6]]],[11,"enabled","","Enabled",2725,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2725,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2725,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2725,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2726,[[],["cmdcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2726,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2726,[[]]],[11,"variant","","Writes `variant` to the field",2727,[[["cmdcrc_a",4]],["w",6]]],[11,"masked","","Masked",2727,[[],["w",6]]],[11,"enabled","","Enabled",2727,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2727,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2727,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2727,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2728,[[],["cmdend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2728,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2728,[[]]],[11,"variant","","Writes `variant` to the field",2729,[[["cmdend_a",4]],["w",6]]],[11,"masked","","Masked",2729,[[],["w",6]]],[11,"enabled","","Enabled",2729,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2729,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2729,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2729,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2730,[[],["cmdidx_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2730,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2730,[[]]],[11,"variant","","Writes `variant` to the field",2731,[[["cmdidx_a",4]],["w",6]]],[11,"masked","","Masked",2731,[[],["w",6]]],[11,"enabled","","Enabled",2731,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2731,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2731,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2731,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2732,[[],["datteo_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2732,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2732,[[]]],[11,"variant","","Writes `variant` to the field",2733,[[["datteo_a",4]],["w",6]]],[11,"masked","","Masked",2733,[[],["w",6]]],[11,"enabled","","Enabled",2733,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2733,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2733,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2733,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2734,[[],["datcrc_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2734,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2734,[[]]],[11,"variant","","Writes `variant` to the field",2735,[[["datcrc_a",4]],["w",6]]],[11,"masked","","Masked",2735,[[],["w",6]]],[11,"enabled","","Enabled",2735,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2735,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2735,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2735,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2736,[[],["datend_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2736,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2736,[[]]],[11,"variant","","Writes `variant` to the field",2737,[[["datend_a",4]],["w",6]]],[11,"masked","","Masked",2737,[[],["w",6]]],[11,"enabled","","Enabled",2737,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2737,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2737,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2737,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2738,[[],["curlim_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2738,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2738,[[]]],[11,"variant","","Writes `variant` to the field",2739,[[["curlim_a",4]],["w",6]]],[11,"masked","","Masked",2739,[[],["w",6]]],[11,"enabled","","Enabled",2739,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2739,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2739,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2739,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2740,[[],["acmd_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2740,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2740,[[]]],[11,"variant","","Writes `variant` to the field",2741,[[["acmd_a",4]],["w",6]]],[11,"masked","","Masked",2741,[[],["w",6]]],[11,"enabled","","Enabled",2741,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2741,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2741,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2741,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::eisier_emmc_mode","Get enumerated values variant",2742,[[],["adma_a",4]]],[11,"is_masked","","Checks if the value of the field is `MASKED`",2742,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2742,[[]]],[11,"variant","","Writes `variant` to the field",2743,[[["adma_a",4]],["w",6]]],[11,"masked","","Masked",2743,[[],["w",6]]],[11,"enabled","","Enabled",2743,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2743,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2743,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2743,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2744,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2744,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2744,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Signal Enable",6,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",6,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",6,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",6,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",6,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",6,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",6,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",6,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",6,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",6,[[],["adma_r",6]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Signal Enable",6,[[],["bootae_r",6]]],[11,"cmdteo","atsamd51g::sdhc0::eisier_emmc_mode","Bit 0 - Command Timeout Error Signal Enable",2745,[[],["cmdteo_r",6]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",2745,[[],["cmdcrc_r",6]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",2745,[[],["cmdend_r",6]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",2745,[[],["cmdidx_r",6]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",2745,[[],["datteo_r",6]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",2745,[[],["datcrc_r",6]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",2745,[[],["datend_r",6]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",2745,[[],["curlim_r",6]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",2745,[[],["acmd_r",6]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",2745,[[],["adma_r",6]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Signal Enable",2745,[[],["bootae_r",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Command Timeout Error Signal Enable",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",7,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Signal Enable",7,[[],["bootae_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::eisier_emmc_mode","Bit 0 - Command Timeout Error Signal Enable",2746,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Command CRC Error Signal Enable",2746,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Command End Bit Error Signal Enable",2746,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Command Index Error Signal Enable",2746,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Data Timeout Error Signal Enable",2746,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Data CRC Error Signal Enable",2746,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Data End Bit Error Signal Enable",2746,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Current Limit Error Signal Enable",2746,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Auto CMD Error Signal Enable",2746,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - ADMA Error Signal Enable",2746,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Boot Acknowledge Error Signal Enable",2746,[[],["bootae_w",3]]],[0,"acesr","atsamd51g::sdhc0","Auto CMD Error Status",null,null],[4,"ACMD12NE_A","atsamd51g::sdhc0::acesr","Auto CMD12 Not Executed",null,null],[13,"EXEC","","0: Executed",2747,null],[13,"NOT_EXEC","","1: Not executed",2747,null],[4,"ACMDTEO_A","","Auto CMD Timeout Error",null,null],[13,"NO","","0: No error",2748,null],[13,"YES","","1: Timeout",2748,null],[4,"ACMDCRC_A","","Auto CMD CRC Error",null,null],[13,"NO","","0: No error",2749,null],[13,"YES","","1: CRC Error Generated",2749,null],[4,"ACMDEND_A","","Auto CMD End Bit Error",null,null],[13,"NO","","0: No error",2750,null],[13,"YES","","1: End Bit Error Generated",2750,null],[4,"ACMDIDX_A","","Auto CMD Index Error",null,null],[13,"NO","","0: No error",2751,null],[13,"YES","","1: Error",2751,null],[4,"CMDNI_A","","Command not Issued By Auto CMD12 Error",null,null],[13,"OK","","0: No error",2752,null],[13,"NOT_ISSUED","","1: Not Issued",2752,null],[6,"R","","Reader of register ACESR",null,null],[6,"ACMD12NE_R","","Reader of field `ACMD12NE`",null,null],[6,"ACMDTEO_R","","Reader of field `ACMDTEO`",null,null],[6,"ACMDCRC_R","","Reader of field `ACMDCRC`",null,null],[6,"ACMDEND_R","","Reader of field `ACMDEND`",null,null],[6,"ACMDIDX_R","","Reader of field `ACMDIDX`",null,null],[6,"CMDNI_R","","Reader of field `CMDNI`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmd12ne_a",4]]],[11,"is_exec","","Checks if the value of the field is `EXEC`",6,[[]]],[11,"is_not_exec","","Checks if the value of the field is `NOT_EXEC`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acesr","Get enumerated values variant",2753,[[],["acmd12ne_a",4]]],[11,"is_exec","","Checks if the value of the field is `EXEC`",2753,[[]]],[11,"is_not_exec","","Checks if the value of the field is `NOT_EXEC`",2753,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmdteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acesr","Get enumerated values variant",2754,[[],["acmdteo_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2754,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2754,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmdcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acesr","Get enumerated values variant",2755,[[],["acmdcrc_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2755,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2755,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmdend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acesr","Get enumerated values variant",2756,[[],["acmdend_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2756,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2756,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["acmdidx_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acesr","Get enumerated values variant",2757,[[],["acmdidx_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2757,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2757,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdni_a",4]]],[11,"is_ok","","Checks if the value of the field is `OK`",6,[[]]],[11,"is_not_issued","","Checks if the value of the field is `NOT_ISSUED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acesr","Get enumerated values variant",2758,[[],["cmdni_a",4]]],[11,"is_ok","","Checks if the value of the field is `OK`",2758,[[]]],[11,"is_not_issued","","Checks if the value of the field is `NOT_ISSUED`",2758,[[]]],[11,"acmd12ne","atsamd51g::generic","Bit 0 - Auto CMD12 Not Executed",6,[[],["acmd12ne_r",6]]],[11,"acmdteo","","Bit 1 - Auto CMD Timeout Error",6,[[],["acmdteo_r",6]]],[11,"acmdcrc","","Bit 2 - Auto CMD CRC Error",6,[[],["acmdcrc_r",6]]],[11,"acmdend","","Bit 3 - Auto CMD End Bit Error",6,[[],["acmdend_r",6]]],[11,"acmdidx","","Bit 4 - Auto CMD Index Error",6,[[],["acmdidx_r",6]]],[11,"cmdni","","Bit 7 - Command not Issued By Auto CMD12 Error",6,[[],["cmdni_r",6]]],[11,"acmd12ne","atsamd51g::sdhc0::acesr","Bit 0 - Auto CMD12 Not Executed",2759,[[],["acmd12ne_r",6]]],[11,"acmdteo","","Bit 1 - Auto CMD Timeout Error",2759,[[],["acmdteo_r",6]]],[11,"acmdcrc","","Bit 2 - Auto CMD CRC Error",2759,[[],["acmdcrc_r",6]]],[11,"acmdend","","Bit 3 - Auto CMD End Bit Error",2759,[[],["acmdend_r",6]]],[11,"acmdidx","","Bit 4 - Auto CMD Index Error",2759,[[],["acmdidx_r",6]]],[11,"cmdni","","Bit 7 - Command not Issued By Auto CMD12 Error",2759,[[],["cmdni_r",6]]],[0,"hc2r","atsamd51g::sdhc0","Host Control 2",null,null],[3,"UHSMS_W","atsamd51g::sdhc0::hc2r","Write proxy for field `UHSMS`",null,null],[3,"VS18EN_W","","Write proxy for field `VS18EN`",null,null],[3,"DRVSEL_W","","Write proxy for field `DRVSEL`",null,null],[3,"EXTUN_W","","Write proxy for field `EXTUN`",null,null],[3,"SLCKSEL_W","","Write proxy for field `SLCKSEL`",null,null],[3,"ASINTEN_W","","Write proxy for field `ASINTEN`",null,null],[3,"PVALEN_W","","Write proxy for field `PVALEN`",null,null],[4,"UHSMS_A","","UHS Mode Select",null,null],[13,"SDR12","","0: SDR12",2760,null],[13,"SDR25","","1: SDR25",2760,null],[13,"SDR50","","2: SDR50",2760,null],[13,"SDR104","","3: SDR104",2760,null],[13,"DDR50","","4: DDR50",2760,null],[4,"VS18EN_A","","1.8V Signaling Enable",null,null],[13,"S33V","","0: 3.3V Signaling",2761,null],[13,"S18V","","1: 1.8V Signaling",2761,null],[4,"DRVSEL_A","","Driver Strength Select",null,null],[13,"B","","0: Driver Type B is Selected (Default)",2762,null],[13,"A","","1: Driver Type A is Selected",2762,null],[13,"C","","2: Driver Type C is Selected",2762,null],[13,"D","","3: Driver Type D is Selected",2762,null],[4,"EXTUN_A","","Execute Tuning",null,null],[13,"NO","","0: Not Tuned or Tuning Completed",2763,null],[13,"REQUESTED","","1: Execute Tuning",2763,null],[4,"SLCKSEL_A","","Sampling Clock Select",null,null],[13,"FIXED","","0: Fixed clock is used to sample data",2764,null],[13,"TUNED","","1: Tuned clock is used to sample data",2764,null],[4,"ASINTEN_A","","Asynchronous Interrupt Enable",null,null],[13,"DISABLED","","0: Disabled",2765,null],[13,"ENABLED","","1: Enabled",2765,null],[4,"PVALEN_A","","Preset Value Enable",null,null],[13,"HOST","","0: SDCLK and Driver Strength are controlled by Host…",2766,null],[13,"AUTO","","1: Automatic Selection by Preset Value is Enabled",2766,null],[6,"R","","Reader of register HC2R",null,null],[6,"W","","Writer for register HC2R",null,null],[6,"UHSMS_R","","Reader of field `UHSMS`",null,null],[6,"VS18EN_R","","Reader of field `VS18EN`",null,null],[6,"DRVSEL_R","","Reader of field `DRVSEL`",null,null],[6,"EXTUN_R","","Reader of field `EXTUN`",null,null],[6,"SLCKSEL_R","","Reader of field `SLCKSEL`",null,null],[6,"ASINTEN_R","","Reader of field `ASINTEN`",null,null],[6,"PVALEN_R","","Reader of field `PVALEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["uhsms_a",4],["variant",4]]]],[11,"is_sdr12","","Checks if the value of the field is `SDR12`",6,[[]]],[11,"is_sdr25","","Checks if the value of the field is `SDR25`",6,[[]]],[11,"is_sdr50","","Checks if the value of the field is `SDR50`",6,[[]]],[11,"is_sdr104","","Checks if the value of the field is `SDR104`",6,[[]]],[11,"is_ddr50","","Checks if the value of the field is `DDR50`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2767,[[],[["uhsms_a",4],["variant",4]]]],[11,"is_sdr12","","Checks if the value of the field is `SDR12`",2767,[[]]],[11,"is_sdr25","","Checks if the value of the field is `SDR25`",2767,[[]]],[11,"is_sdr50","","Checks if the value of the field is `SDR50`",2767,[[]]],[11,"is_sdr104","","Checks if the value of the field is `SDR104`",2767,[[]]],[11,"is_ddr50","","Checks if the value of the field is `DDR50`",2767,[[]]],[11,"variant","","Writes `variant` to the field",2768,[[["uhsms_a",4]],["w",6]]],[11,"sdr12","","SDR12",2768,[[],["w",6]]],[11,"sdr25","","SDR25",2768,[[],["w",6]]],[11,"sdr50","","SDR50",2768,[[],["w",6]]],[11,"sdr104","","SDR104",2768,[[],["w",6]]],[11,"ddr50","","DDR50",2768,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2768,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["vs18en_a",4]]],[11,"is_s33v","","Checks if the value of the field is `S33V`",6,[[]]],[11,"is_s18v","","Checks if the value of the field is `S18V`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2769,[[],["vs18en_a",4]]],[11,"is_s33v","","Checks if the value of the field is `S33V`",2769,[[]]],[11,"is_s18v","","Checks if the value of the field is `S18V`",2769,[[]]],[11,"variant","","Writes `variant` to the field",2770,[[["vs18en_a",4]],["w",6]]],[11,"s33v","","3.3V Signaling",2770,[[],["w",6]]],[11,"s18v","","1.8V Signaling",2770,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2770,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2770,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2770,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["drvsel_a",4]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2771,[[],["drvsel_a",4]]],[11,"is_b","","Checks if the value of the field is `B`",2771,[[]]],[11,"is_a","","Checks if the value of the field is `A`",2771,[[]]],[11,"is_c","","Checks if the value of the field is `C`",2771,[[]]],[11,"is_d","","Checks if the value of the field is `D`",2771,[[]]],[11,"variant","","Writes `variant` to the field",2772,[[["drvsel_a",4]],["w",6]]],[11,"b","","Driver Type B is Selected (Default)",2772,[[],["w",6]]],[11,"a","","Driver Type A is Selected",2772,[[],["w",6]]],[11,"c","","Driver Type C is Selected",2772,[[],["w",6]]],[11,"d","","Driver Type D is Selected",2772,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2772,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["extun_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_requested","","Checks if the value of the field is `REQUESTED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2773,[[],["extun_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2773,[[]]],[11,"is_requested","","Checks if the value of the field is `REQUESTED`",2773,[[]]],[11,"variant","","Writes `variant` to the field",2774,[[["extun_a",4]],["w",6]]],[11,"no","","Not Tuned or Tuning Completed",2774,[[],["w",6]]],[11,"requested","","Execute Tuning",2774,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2774,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2774,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2774,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["slcksel_a",4]]],[11,"is_fixed","","Checks if the value of the field is `FIXED`",6,[[]]],[11,"is_tuned","","Checks if the value of the field is `TUNED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2775,[[],["slcksel_a",4]]],[11,"is_fixed","","Checks if the value of the field is `FIXED`",2775,[[]]],[11,"is_tuned","","Checks if the value of the field is `TUNED`",2775,[[]]],[11,"variant","","Writes `variant` to the field",2776,[[["slcksel_a",4]],["w",6]]],[11,"fixed","","Fixed clock is used to sample data",2776,[[],["w",6]]],[11,"tuned","","Tuned clock is used to sample data",2776,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2776,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2776,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2776,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["asinten_a",4]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",6,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2777,[[],["asinten_a",4]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",2777,[[]]],[11,"is_enabled","","Checks if the value of the field is `ENABLED`",2777,[[]]],[11,"variant","","Writes `variant` to the field",2778,[[["asinten_a",4]],["w",6]]],[11,"disabled","","Disabled",2778,[[],["w",6]]],[11,"enabled","","Enabled",2778,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2778,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2778,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2778,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pvalen_a",4]]],[11,"is_host","","Checks if the value of the field is `HOST`",6,[[]]],[11,"is_auto","","Checks if the value of the field is `AUTO`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r","Get enumerated values variant",2779,[[],["pvalen_a",4]]],[11,"is_host","","Checks if the value of the field is `HOST`",2779,[[]]],[11,"is_auto","","Checks if the value of the field is `AUTO`",2779,[[]]],[11,"variant","","Writes `variant` to the field",2780,[[["pvalen_a",4]],["w",6]]],[11,"host","","SDCLK and Driver Strength are controlled by Host Controller",2780,[[],["w",6]]],[11,"auto","","Automatic Selection by Preset Value is Enabled",2780,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2780,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2780,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2780,[[],["w",6]]],[11,"uhsms","atsamd51g::generic","Bits 0:2 - UHS Mode Select",6,[[],["uhsms_r",6]]],[11,"vs18en","","Bit 3 - 1.8V Signaling Enable",6,[[],["vs18en_r",6]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",6,[[],["drvsel_r",6]]],[11,"extun","","Bit 6 - Execute Tuning",6,[[],["extun_r",6]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",6,[[],["slcksel_r",6]]],[11,"asinten","","Bit 14 - Asynchronous Interrupt Enable",6,[[],["asinten_r",6]]],[11,"pvalen","","Bit 15 - Preset Value Enable",6,[[],["pvalen_r",6]]],[11,"uhsms","atsamd51g::sdhc0::hc2r","Bits 0:2 - UHS Mode Select",2781,[[],["uhsms_r",6]]],[11,"vs18en","","Bit 3 - 1.8V Signaling Enable",2781,[[],["vs18en_r",6]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",2781,[[],["drvsel_r",6]]],[11,"extun","","Bit 6 - Execute Tuning",2781,[[],["extun_r",6]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",2781,[[],["slcksel_r",6]]],[11,"asinten","","Bit 14 - Asynchronous Interrupt Enable",2781,[[],["asinten_r",6]]],[11,"pvalen","","Bit 15 - Preset Value Enable",2781,[[],["pvalen_r",6]]],[11,"uhsms","atsamd51g::generic","Bits 0:2 - UHS Mode Select",7,[[],["uhsms_w",3]]],[11,"vs18en","","Bit 3 - 1.8V Signaling Enable",7,[[],["vs18en_w",3]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",7,[[],["drvsel_w",3]]],[11,"extun","","Bit 6 - Execute Tuning",7,[[],["extun_w",3]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",7,[[],["slcksel_w",3]]],[11,"asinten","","Bit 14 - Asynchronous Interrupt Enable",7,[[],["asinten_w",3]]],[11,"pvalen","","Bit 15 - Preset Value Enable",7,[[],["pvalen_w",3]]],[11,"uhsms","atsamd51g::sdhc0::hc2r","Bits 0:2 - UHS Mode Select",2782,[[],["uhsms_w",3]]],[11,"vs18en","","Bit 3 - 1.8V Signaling Enable",2782,[[],["vs18en_w",3]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",2782,[[],["drvsel_w",3]]],[11,"extun","","Bit 6 - Execute Tuning",2782,[[],["extun_w",3]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",2782,[[],["slcksel_w",3]]],[11,"asinten","","Bit 14 - Asynchronous Interrupt Enable",2782,[[],["asinten_w",3]]],[11,"pvalen","","Bit 15 - Preset Value Enable",2782,[[],["pvalen_w",3]]],[0,"hc2r_emmc_mode","atsamd51g::sdhc0","Host Control 2",null,null],[3,"HS200EN_W","atsamd51g::sdhc0::hc2r_emmc_mode","Write proxy for field `HS200EN`",null,null],[3,"DRVSEL_W","","Write proxy for field `DRVSEL`",null,null],[3,"EXTUN_W","","Write proxy for field `EXTUN`",null,null],[3,"SLCKSEL_W","","Write proxy for field `SLCKSEL`",null,null],[3,"PVALEN_W","","Write proxy for field `PVALEN`",null,null],[4,"HS200EN_A","","HS200 Mode Enable",null,null],[13,"SDR12","","0: SDR12",2783,null],[13,"SDR25","","1: SDR25",2783,null],[13,"SDR50","","2: SDR50",2783,null],[13,"SDR104","","3: SDR104",2783,null],[13,"DDR50","","4: DDR50",2783,null],[4,"DRVSEL_A","","Driver Strength Select",null,null],[13,"B","","0: Driver Type B is Selected (Default)",2784,null],[13,"A","","1: Driver Type A is Selected",2784,null],[13,"C","","2: Driver Type C is Selected",2784,null],[13,"D","","3: Driver Type D is Selected",2784,null],[4,"EXTUN_A","","Execute Tuning",null,null],[13,"NO","","0: Not Tuned or Tuning Completed",2785,null],[13,"REQUESTED","","1: Execute Tuning",2785,null],[4,"SLCKSEL_A","","Sampling Clock Select",null,null],[13,"FIXED","","0: Fixed clock is used to sample data",2786,null],[13,"TUNED","","1: Tuned clock is used to sample data",2786,null],[4,"PVALEN_A","","Preset Value Enable",null,null],[13,"HOST","","0: SDCLK and Driver Strength are controlled by Host…",2787,null],[13,"AUTO","","1: Automatic Selection by Preset Value is Enabled",2787,null],[6,"R","","Reader of register HC2R_EMMC_MODE",null,null],[6,"W","","Writer for register HC2R_EMMC_MODE",null,null],[6,"HS200EN_R","","Reader of field `HS200EN`",null,null],[6,"DRVSEL_R","","Reader of field `DRVSEL`",null,null],[6,"EXTUN_R","","Reader of field `EXTUN`",null,null],[6,"SLCKSEL_R","","Reader of field `SLCKSEL`",null,null],[6,"PVALEN_R","","Reader of field `PVALEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["hs200en_a",4],["variant",4]]]],[11,"is_sdr12","","Checks if the value of the field is `SDR12`",6,[[]]],[11,"is_sdr25","","Checks if the value of the field is `SDR25`",6,[[]]],[11,"is_sdr50","","Checks if the value of the field is `SDR50`",6,[[]]],[11,"is_sdr104","","Checks if the value of the field is `SDR104`",6,[[]]],[11,"is_ddr50","","Checks if the value of the field is `DDR50`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r_emmc_mode","Get enumerated values variant",2788,[[],[["hs200en_a",4],["variant",4]]]],[11,"is_sdr12","","Checks if the value of the field is `SDR12`",2788,[[]]],[11,"is_sdr25","","Checks if the value of the field is `SDR25`",2788,[[]]],[11,"is_sdr50","","Checks if the value of the field is `SDR50`",2788,[[]]],[11,"is_sdr104","","Checks if the value of the field is `SDR104`",2788,[[]]],[11,"is_ddr50","","Checks if the value of the field is `DDR50`",2788,[[]]],[11,"variant","","Writes `variant` to the field",2789,[[["hs200en_a",4]],["w",6]]],[11,"sdr12","","SDR12",2789,[[],["w",6]]],[11,"sdr25","","SDR25",2789,[[],["w",6]]],[11,"sdr50","","SDR50",2789,[[],["w",6]]],[11,"sdr104","","SDR104",2789,[[],["w",6]]],[11,"ddr50","","DDR50",2789,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2789,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["drvsel_a",4]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r_emmc_mode","Get enumerated values variant",2790,[[],["drvsel_a",4]]],[11,"is_b","","Checks if the value of the field is `B`",2790,[[]]],[11,"is_a","","Checks if the value of the field is `A`",2790,[[]]],[11,"is_c","","Checks if the value of the field is `C`",2790,[[]]],[11,"is_d","","Checks if the value of the field is `D`",2790,[[]]],[11,"variant","","Writes `variant` to the field",2791,[[["drvsel_a",4]],["w",6]]],[11,"b","","Driver Type B is Selected (Default)",2791,[[],["w",6]]],[11,"a","","Driver Type A is Selected",2791,[[],["w",6]]],[11,"c","","Driver Type C is Selected",2791,[[],["w",6]]],[11,"d","","Driver Type D is Selected",2791,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2791,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["extun_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_requested","","Checks if the value of the field is `REQUESTED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r_emmc_mode","Get enumerated values variant",2792,[[],["extun_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2792,[[]]],[11,"is_requested","","Checks if the value of the field is `REQUESTED`",2792,[[]]],[11,"variant","","Writes `variant` to the field",2793,[[["extun_a",4]],["w",6]]],[11,"no","","Not Tuned or Tuning Completed",2793,[[],["w",6]]],[11,"requested","","Execute Tuning",2793,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2793,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2793,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2793,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["slcksel_a",4]]],[11,"is_fixed","","Checks if the value of the field is `FIXED`",6,[[]]],[11,"is_tuned","","Checks if the value of the field is `TUNED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r_emmc_mode","Get enumerated values variant",2794,[[],["slcksel_a",4]]],[11,"is_fixed","","Checks if the value of the field is `FIXED`",2794,[[]]],[11,"is_tuned","","Checks if the value of the field is `TUNED`",2794,[[]]],[11,"variant","","Writes `variant` to the field",2795,[[["slcksel_a",4]],["w",6]]],[11,"fixed","","Fixed clock is used to sample data",2795,[[],["w",6]]],[11,"tuned","","Tuned clock is used to sample data",2795,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2795,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2795,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2795,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pvalen_a",4]]],[11,"is_host","","Checks if the value of the field is `HOST`",6,[[]]],[11,"is_auto","","Checks if the value of the field is `AUTO`",6,[[]]],[11,"variant","atsamd51g::sdhc0::hc2r_emmc_mode","Get enumerated values variant",2796,[[],["pvalen_a",4]]],[11,"is_host","","Checks if the value of the field is `HOST`",2796,[[]]],[11,"is_auto","","Checks if the value of the field is `AUTO`",2796,[[]]],[11,"variant","","Writes `variant` to the field",2797,[[["pvalen_a",4]],["w",6]]],[11,"host","","SDCLK and Driver Strength are controlled by Host Controller",2797,[[],["w",6]]],[11,"auto","","Automatic Selection by Preset Value is Enabled",2797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2797,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2797,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2797,[[],["w",6]]],[11,"hs200en","atsamd51g::generic","Bits 0:3 - HS200 Mode Enable",6,[[],["hs200en_r",6]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",6,[[],["drvsel_r",6]]],[11,"extun","","Bit 6 - Execute Tuning",6,[[],["extun_r",6]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",6,[[],["slcksel_r",6]]],[11,"pvalen","","Bit 15 - Preset Value Enable",6,[[],["pvalen_r",6]]],[11,"hs200en","atsamd51g::sdhc0::hc2r_emmc_mode","Bits 0:3 - HS200 Mode Enable",2798,[[],["hs200en_r",6]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",2798,[[],["drvsel_r",6]]],[11,"extun","","Bit 6 - Execute Tuning",2798,[[],["extun_r",6]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",2798,[[],["slcksel_r",6]]],[11,"pvalen","","Bit 15 - Preset Value Enable",2798,[[],["pvalen_r",6]]],[11,"hs200en","atsamd51g::generic","Bits 0:3 - HS200 Mode Enable",7,[[],["hs200en_w",3]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",7,[[],["drvsel_w",3]]],[11,"extun","","Bit 6 - Execute Tuning",7,[[],["extun_w",3]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",7,[[],["slcksel_w",3]]],[11,"pvalen","","Bit 15 - Preset Value Enable",7,[[],["pvalen_w",3]]],[11,"hs200en","atsamd51g::sdhc0::hc2r_emmc_mode","Bits 0:3 - HS200 Mode Enable",2799,[[],["hs200en_w",3]]],[11,"drvsel","","Bits 4:5 - Driver Strength Select",2799,[[],["drvsel_w",3]]],[11,"extun","","Bit 6 - Execute Tuning",2799,[[],["extun_w",3]]],[11,"slcksel","","Bit 7 - Sampling Clock Select",2799,[[],["slcksel_w",3]]],[11,"pvalen","","Bit 15 - Preset Value Enable",2799,[[],["pvalen_w",3]]],[0,"ca0r","atsamd51g::sdhc0","Capabilities 0",null,null],[4,"TEOCLKF_A","atsamd51g::sdhc0::ca0r","Timeout Clock Frequency",null,null],[13,"OTHER","","0: Get information via another method",2800,null],[4,"TEOCLKU_A","","Timeout Clock Unit",null,null],[13,"KHZ","","0: KHz",2801,null],[13,"MHZ","","1: MHz",2801,null],[4,"BASECLKF_A","","Base Clock Frequency",null,null],[13,"OTHER","","0: Get information via another method",2802,null],[4,"MAXBLKL_A","","Max Block Length",null,null],[13,"_512","","0: 512 bytes",2803,null],[13,"_1024","","1: 1024 bytes",2803,null],[13,"_2048","","2: 2048 bytes",2803,null],[4,"ED8SUP_A","","8-bit Support for Embedded Device",null,null],[13,"NO","","0: 8-bit Bus Width not Supported",2804,null],[13,"YES","","1: 8-bit Bus Width Supported",2804,null],[4,"ADMA2SUP_A","","ADMA2 Support",null,null],[13,"NO","","0: ADMA2 not Supported",2805,null],[13,"YES","","1: ADMA2 Supported",2805,null],[4,"HSSUP_A","","High Speed Support",null,null],[13,"NO","","0: High Speed not Supported",2806,null],[13,"YES","","1: High Speed Supported",2806,null],[4,"SDMASUP_A","","SDMA Support",null,null],[13,"NO","","0: SDMA not Supported",2807,null],[13,"YES","","1: SDMA Supported",2807,null],[4,"SRSUP_A","","Suspend/Resume Support",null,null],[13,"NO","","0: Suspend/Resume not Supported",2808,null],[13,"YES","","1: Suspend/Resume Supported",2808,null],[4,"V33VSUP_A","","Voltage Support 3.3V",null,null],[13,"NO","","0: 3.3V Not Supported",2809,null],[13,"YES","","1: 3.3V Supported",2809,null],[4,"V30VSUP_A","","Voltage Support 3.0V",null,null],[13,"NO","","0: 3.0V Not Supported",2810,null],[13,"YES","","1: 3.0V Supported",2810,null],[4,"V18VSUP_A","","Voltage Support 1.8V",null,null],[13,"NO","","0: 1.8V Not Supported",2811,null],[13,"YES","","1: 1.8V Supported",2811,null],[4,"SB64SUP_A","","64-Bit System Bus Support",null,null],[13,"NO","","0: 32-bit Address Descriptors and System Bus",2812,null],[13,"YES","","1: 64-bit Address Descriptors and System Bus",2812,null],[4,"ASINTSUP_A","","Asynchronous Interrupt Support",null,null],[13,"NO","","0: Asynchronous Interrupt not Supported",2813,null],[13,"YES","","1: Asynchronous Interrupt supported",2813,null],[4,"SLTYPE_A","","Slot Type",null,null],[13,"REMOVABLE","","0: Removable Card Slot",2814,null],[13,"EMBEDDED","","1: Embedded Slot for One Device",2814,null],[6,"R","","Reader of register CA0R",null,null],[6,"TEOCLKF_R","","Reader of field `TEOCLKF`",null,null],[6,"TEOCLKU_R","","Reader of field `TEOCLKU`",null,null],[6,"BASECLKF_R","","Reader of field `BASECLKF`",null,null],[6,"MAXBLKL_R","","Reader of field `MAXBLKL`",null,null],[6,"ED8SUP_R","","Reader of field `ED8SUP`",null,null],[6,"ADMA2SUP_R","","Reader of field `ADMA2SUP`",null,null],[6,"HSSUP_R","","Reader of field `HSSUP`",null,null],[6,"SDMASUP_R","","Reader of field `SDMASUP`",null,null],[6,"SRSUP_R","","Reader of field `SRSUP`",null,null],[6,"V33VSUP_R","","Reader of field `V33VSUP`",null,null],[6,"V30VSUP_R","","Reader of field `V30VSUP`",null,null],[6,"V18VSUP_R","","Reader of field `V18VSUP`",null,null],[6,"SB64SUP_R","","Reader of field `SB64SUP`",null,null],[6,"ASINTSUP_R","","Reader of field `ASINTSUP`",null,null],[6,"SLTYPE_R","","Reader of field `SLTYPE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["teoclkf_a",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2815,[[],[["variant",4],["teoclkf_a",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",2815,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["teoclku_a",4]]],[11,"is_khz","","Checks if the value of the field is `KHZ`",6,[[]]],[11,"is_mhz","","Checks if the value of the field is `MHZ`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2816,[[],["teoclku_a",4]]],[11,"is_khz","","Checks if the value of the field is `KHZ`",2816,[[]]],[11,"is_mhz","","Checks if the value of the field is `MHZ`",2816,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["baseclkf_a",4],["variant",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2817,[[],[["baseclkf_a",4],["variant",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",2817,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["maxblkl_a",4],["variant",4]]]],[11,"is_512","","Checks if the value of the field is `_512`",6,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",6,[[]]],[11,"is_2048","","Checks if the value of the field is `_2048`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2818,[[],[["maxblkl_a",4],["variant",4]]]],[11,"is_512","","Checks if the value of the field is `_512`",2818,[[]]],[11,"is_1024","","Checks if the value of the field is `_1024`",2818,[[]]],[11,"is_2048","","Checks if the value of the field is `_2048`",2818,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["ed8sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2819,[[],["ed8sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2819,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2819,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["adma2sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2820,[[],["adma2sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2820,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2820,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["hssup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2821,[[],["hssup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2821,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2821,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdmasup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2822,[[],["sdmasup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2822,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2822,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["srsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2823,[[],["srsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2823,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2823,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["v33vsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2824,[[],["v33vsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2824,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2824,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["v30vsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2825,[[],["v30vsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2825,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2825,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["v18vsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2826,[[],["v18vsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2826,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2826,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sb64sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2827,[[],["sb64sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2827,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2827,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["asintsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2828,[[],["asintsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2828,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2828,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sltype_a",4]]]],[11,"is_removable","","Checks if the value of the field is `REMOVABLE`",6,[[]]],[11,"is_embedded","","Checks if the value of the field is `EMBEDDED`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca0r","Get enumerated values variant",2829,[[],[["variant",4],["sltype_a",4]]]],[11,"is_removable","","Checks if the value of the field is `REMOVABLE`",2829,[[]]],[11,"is_embedded","","Checks if the value of the field is `EMBEDDED`",2829,[[]]],[11,"teoclkf","atsamd51g::generic","Bits 0:5 - Timeout Clock Frequency",6,[[],["teoclkf_r",6]]],[11,"teoclku","","Bit 7 - Timeout Clock Unit",6,[[],["teoclku_r",6]]],[11,"baseclkf","","Bits 8:15 - Base Clock Frequency",6,[[],["baseclkf_r",6]]],[11,"maxblkl","","Bits 16:17 - Max Block Length",6,[[],["maxblkl_r",6]]],[11,"ed8sup","","Bit 18 - 8-bit Support for Embedded Device",6,[[],["ed8sup_r",6]]],[11,"adma2sup","","Bit 19 - ADMA2 Support",6,[[],["adma2sup_r",6]]],[11,"hssup","","Bit 21 - High Speed Support",6,[[],["hssup_r",6]]],[11,"sdmasup","","Bit 22 - SDMA Support",6,[[],["sdmasup_r",6]]],[11,"srsup","","Bit 23 - Suspend/Resume Support",6,[[],["srsup_r",6]]],[11,"v33vsup","","Bit 24 - Voltage Support 3.3V",6,[[],["v33vsup_r",6]]],[11,"v30vsup","","Bit 25 - Voltage Support 3.0V",6,[[],["v30vsup_r",6]]],[11,"v18vsup","","Bit 26 - Voltage Support 1.8V",6,[[],["v18vsup_r",6]]],[11,"sb64sup","","Bit 28 - 64-Bit System Bus Support",6,[[],["sb64sup_r",6]]],[11,"asintsup","","Bit 29 - Asynchronous Interrupt Support",6,[[],["asintsup_r",6]]],[11,"sltype","","Bits 30:31 - Slot Type",6,[[],["sltype_r",6]]],[11,"teoclkf","atsamd51g::sdhc0::ca0r","Bits 0:5 - Timeout Clock Frequency",2830,[[],["teoclkf_r",6]]],[11,"teoclku","","Bit 7 - Timeout Clock Unit",2830,[[],["teoclku_r",6]]],[11,"baseclkf","","Bits 8:15 - Base Clock Frequency",2830,[[],["baseclkf_r",6]]],[11,"maxblkl","","Bits 16:17 - Max Block Length",2830,[[],["maxblkl_r",6]]],[11,"ed8sup","","Bit 18 - 8-bit Support for Embedded Device",2830,[[],["ed8sup_r",6]]],[11,"adma2sup","","Bit 19 - ADMA2 Support",2830,[[],["adma2sup_r",6]]],[11,"hssup","","Bit 21 - High Speed Support",2830,[[],["hssup_r",6]]],[11,"sdmasup","","Bit 22 - SDMA Support",2830,[[],["sdmasup_r",6]]],[11,"srsup","","Bit 23 - Suspend/Resume Support",2830,[[],["srsup_r",6]]],[11,"v33vsup","","Bit 24 - Voltage Support 3.3V",2830,[[],["v33vsup_r",6]]],[11,"v30vsup","","Bit 25 - Voltage Support 3.0V",2830,[[],["v30vsup_r",6]]],[11,"v18vsup","","Bit 26 - Voltage Support 1.8V",2830,[[],["v18vsup_r",6]]],[11,"sb64sup","","Bit 28 - 64-Bit System Bus Support",2830,[[],["sb64sup_r",6]]],[11,"asintsup","","Bit 29 - Asynchronous Interrupt Support",2830,[[],["asintsup_r",6]]],[11,"sltype","","Bits 30:31 - Slot Type",2830,[[],["sltype_r",6]]],[0,"ca1r","atsamd51g::sdhc0","Capabilities 1",null,null],[4,"SDR50SUP_A","atsamd51g::sdhc0::ca1r","SDR50 Support",null,null],[13,"NO","","0: SDR50 is Not Supported",2831,null],[13,"YES","","1: SDR50 is Supported",2831,null],[4,"SDR104SUP_A","","SDR104 Support",null,null],[13,"NO","","0: SDR104 is Not Supported",2832,null],[13,"YES","","1: SDR104 is Supported",2832,null],[4,"DDR50SUP_A","","DDR50 Support",null,null],[13,"NO","","0: DDR50 is Not Supported",2833,null],[13,"YES","","1: DDR50 is Supported",2833,null],[4,"DRVASUP_A","","Driver Type A Support",null,null],[13,"NO","","0: Driver Type A is Not Supported",2834,null],[13,"YES","","1: Driver Type A is Supported",2834,null],[4,"DRVCSUP_A","","Driver Type C Support",null,null],[13,"NO","","0: Driver Type C is Not Supported",2835,null],[13,"YES","","1: Driver Type C is Supported",2835,null],[4,"DRVDSUP_A","","Driver Type D Support",null,null],[13,"NO","","0: Driver Type D is Not Supported",2836,null],[13,"YES","","1: Driver Type D is Supported",2836,null],[4,"TCNTRT_A","","Timer Count for Re-Tuning",null,null],[13,"DISABLED","","0: Re-Tuning Timer disabled",2837,null],[13,"_1S","","1: 1 second",2837,null],[13,"_2S","","2: 2 seconds",2837,null],[13,"_4S","","3: 4 seconds",2837,null],[13,"_8S","","4: 8 seconds",2837,null],[13,"_16S","","5: 16 seconds",2837,null],[13,"_32S","","6: 32 seconds",2837,null],[13,"_64S","","7: 64 seconds",2837,null],[13,"_128S","","8: 128 seconds",2837,null],[13,"_256S","","9: 256 seconds",2837,null],[13,"_512S","","10: 512 seconds",2837,null],[13,"_1024S","","11: 1024 seconds",2837,null],[13,"OTHER","","15: Get information from other source",2837,null],[4,"TSDR50_A","","Use Tuning for SDR50",null,null],[13,"NO","","0: SDR50 does not require tuning",2838,null],[13,"YES","","1: SDR50 requires tuning",2838,null],[4,"CLKMULT_A","","Clock Multiplier",null,null],[13,"NO","","0: Clock Multiplier is Not Supported",2839,null],[6,"R","","Reader of register CA1R",null,null],[6,"SDR50SUP_R","","Reader of field `SDR50SUP`",null,null],[6,"SDR104SUP_R","","Reader of field `SDR104SUP`",null,null],[6,"DDR50SUP_R","","Reader of field `DDR50SUP`",null,null],[6,"DRVASUP_R","","Reader of field `DRVASUP`",null,null],[6,"DRVCSUP_R","","Reader of field `DRVCSUP`",null,null],[6,"DRVDSUP_R","","Reader of field `DRVDSUP`",null,null],[6,"TCNTRT_R","","Reader of field `TCNTRT`",null,null],[6,"TSDR50_R","","Reader of field `TSDR50`",null,null],[6,"CLKMULT_R","","Reader of field `CLKMULT`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdr50sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2840,[[],["sdr50sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2840,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2840,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdr104sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2841,[[],["sdr104sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2841,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2841,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["ddr50sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2842,[[],["ddr50sup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2842,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2842,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["drvasup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2843,[[],["drvasup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2843,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2843,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["drvcsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2844,[[],["drvcsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2844,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2844,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["drvdsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2845,[[],["drvdsup_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2845,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2845,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["tcntrt_a",4]]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",6,[[]]],[11,"is_1s","","Checks if the value of the field is `_1S`",6,[[]]],[11,"is_2s","","Checks if the value of the field is `_2S`",6,[[]]],[11,"is_4s","","Checks if the value of the field is `_4S`",6,[[]]],[11,"is_8s","","Checks if the value of the field is `_8S`",6,[[]]],[11,"is_16s","","Checks if the value of the field is `_16S`",6,[[]]],[11,"is_32s","","Checks if the value of the field is `_32S`",6,[[]]],[11,"is_64s","","Checks if the value of the field is `_64S`",6,[[]]],[11,"is_128s","","Checks if the value of the field is `_128S`",6,[[]]],[11,"is_256s","","Checks if the value of the field is `_256S`",6,[[]]],[11,"is_512s","","Checks if the value of the field is `_512S`",6,[[]]],[11,"is_1024s","","Checks if the value of the field is `_1024S`",6,[[]]],[11,"is_other","","Checks if the value of the field is `OTHER`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2846,[[],[["variant",4],["tcntrt_a",4]]]],[11,"is_disabled","","Checks if the value of the field is `DISABLED`",2846,[[]]],[11,"is_1s","","Checks if the value of the field is `_1S`",2846,[[]]],[11,"is_2s","","Checks if the value of the field is `_2S`",2846,[[]]],[11,"is_4s","","Checks if the value of the field is `_4S`",2846,[[]]],[11,"is_8s","","Checks if the value of the field is `_8S`",2846,[[]]],[11,"is_16s","","Checks if the value of the field is `_16S`",2846,[[]]],[11,"is_32s","","Checks if the value of the field is `_32S`",2846,[[]]],[11,"is_64s","","Checks if the value of the field is `_64S`",2846,[[]]],[11,"is_128s","","Checks if the value of the field is `_128S`",2846,[[]]],[11,"is_256s","","Checks if the value of the field is `_256S`",2846,[[]]],[11,"is_512s","","Checks if the value of the field is `_512S`",2846,[[]]],[11,"is_1024s","","Checks if the value of the field is `_1024S`",2846,[[]]],[11,"is_other","","Checks if the value of the field is `OTHER`",2846,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["tsdr50_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2847,[[],["tsdr50_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2847,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2847,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["clkmult_a",4],["variant",4]]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"variant","atsamd51g::sdhc0::ca1r","Get enumerated values variant",2848,[[],[["clkmult_a",4],["variant",4]]]],[11,"is_no","","Checks if the value of the field is `NO`",2848,[[]]],[11,"sdr50sup","atsamd51g::generic","Bit 0 - SDR50 Support",6,[[],["sdr50sup_r",6]]],[11,"sdr104sup","","Bit 1 - SDR104 Support",6,[[],["sdr104sup_r",6]]],[11,"ddr50sup","","Bit 2 - DDR50 Support",6,[[],["ddr50sup_r",6]]],[11,"drvasup","","Bit 4 - Driver Type A Support",6,[[],["drvasup_r",6]]],[11,"drvcsup","","Bit 5 - Driver Type C Support",6,[[],["drvcsup_r",6]]],[11,"drvdsup","","Bit 6 - Driver Type D Support",6,[[],["drvdsup_r",6]]],[11,"tcntrt","","Bits 8:11 - Timer Count for Re-Tuning",6,[[],["tcntrt_r",6]]],[11,"tsdr50","","Bit 13 - Use Tuning for SDR50",6,[[],["tsdr50_r",6]]],[11,"clkmult","","Bits 16:23 - Clock Multiplier",6,[[],["clkmult_r",6]]],[11,"sdr50sup","atsamd51g::sdhc0::ca1r","Bit 0 - SDR50 Support",2849,[[],["sdr50sup_r",6]]],[11,"sdr104sup","","Bit 1 - SDR104 Support",2849,[[],["sdr104sup_r",6]]],[11,"ddr50sup","","Bit 2 - DDR50 Support",2849,[[],["ddr50sup_r",6]]],[11,"drvasup","","Bit 4 - Driver Type A Support",2849,[[],["drvasup_r",6]]],[11,"drvcsup","","Bit 5 - Driver Type C Support",2849,[[],["drvcsup_r",6]]],[11,"drvdsup","","Bit 6 - Driver Type D Support",2849,[[],["drvdsup_r",6]]],[11,"tcntrt","","Bits 8:11 - Timer Count for Re-Tuning",2849,[[],["tcntrt_r",6]]],[11,"tsdr50","","Bit 13 - Use Tuning for SDR50",2849,[[],["tsdr50_r",6]]],[11,"clkmult","","Bits 16:23 - Clock Multiplier",2849,[[],["clkmult_r",6]]],[0,"mccar","atsamd51g::sdhc0","Maximum Current Capabilities",null,null],[4,"MAXCUR33V_A","atsamd51g::sdhc0::mccar","Maximum Current for 3.3V",null,null],[13,"OTHER","","0: Get information via another method",2850,null],[13,"_4MA","","1: 4mA",2850,null],[13,"_8MA","","2: 8mA",2850,null],[13,"_12MA","","3: 12mA",2850,null],[4,"MAXCUR30V_A","","Maximum Current for 3.0V",null,null],[13,"OTHER","","0: Get information via another method",2851,null],[13,"_4MA","","1: 4mA",2851,null],[13,"_8MA","","2: 8mA",2851,null],[13,"_12MA","","3: 12mA",2851,null],[4,"MAXCUR18V_A","","Maximum Current for 1.8V",null,null],[13,"OTHER","","0: Get information via another method",2852,null],[13,"_4MA","","1: 4mA",2852,null],[13,"_8MA","","2: 8mA",2852,null],[13,"_12MA","","3: 12mA",2852,null],[6,"R","","Reader of register MCCAR",null,null],[6,"MAXCUR33V_R","","Reader of field `MAXCUR33V`",null,null],[6,"MAXCUR30V_R","","Reader of field `MAXCUR30V`",null,null],[6,"MAXCUR18V_R","","Reader of field `MAXCUR18V`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["maxcur33v_a",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",6,[[]]],[11,"is_4ma","","Checks if the value of the field is `_4MA`",6,[[]]],[11,"is_8ma","","Checks if the value of the field is `_8MA`",6,[[]]],[11,"is_12ma","","Checks if the value of the field is `_12MA`",6,[[]]],[11,"variant","atsamd51g::sdhc0::mccar","Get enumerated values variant",2853,[[],[["variant",4],["maxcur33v_a",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",2853,[[]]],[11,"is_4ma","","Checks if the value of the field is `_4MA`",2853,[[]]],[11,"is_8ma","","Checks if the value of the field is `_8MA`",2853,[[]]],[11,"is_12ma","","Checks if the value of the field is `_12MA`",2853,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["maxcur30v_a",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",6,[[]]],[11,"is_4ma","","Checks if the value of the field is `_4MA`",6,[[]]],[11,"is_8ma","","Checks if the value of the field is `_8MA`",6,[[]]],[11,"is_12ma","","Checks if the value of the field is `_12MA`",6,[[]]],[11,"variant","atsamd51g::sdhc0::mccar","Get enumerated values variant",2854,[[],[["variant",4],["maxcur30v_a",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",2854,[[]]],[11,"is_4ma","","Checks if the value of the field is `_4MA`",2854,[[]]],[11,"is_8ma","","Checks if the value of the field is `_8MA`",2854,[[]]],[11,"is_12ma","","Checks if the value of the field is `_12MA`",2854,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["maxcur18v_a",4],["variant",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",6,[[]]],[11,"is_4ma","","Checks if the value of the field is `_4MA`",6,[[]]],[11,"is_8ma","","Checks if the value of the field is `_8MA`",6,[[]]],[11,"is_12ma","","Checks if the value of the field is `_12MA`",6,[[]]],[11,"variant","atsamd51g::sdhc0::mccar","Get enumerated values variant",2855,[[],[["maxcur18v_a",4],["variant",4]]]],[11,"is_other","","Checks if the value of the field is `OTHER`",2855,[[]]],[11,"is_4ma","","Checks if the value of the field is `_4MA`",2855,[[]]],[11,"is_8ma","","Checks if the value of the field is `_8MA`",2855,[[]]],[11,"is_12ma","","Checks if the value of the field is `_12MA`",2855,[[]]],[11,"maxcur33v","atsamd51g::generic","Bits 0:7 - Maximum Current for 3.3V",6,[[],["maxcur33v_r",6]]],[11,"maxcur30v","","Bits 8:15 - Maximum Current for 3.0V",6,[[],["maxcur30v_r",6]]],[11,"maxcur18v","","Bits 16:23 - Maximum Current for 1.8V",6,[[],["maxcur18v_r",6]]],[11,"maxcur33v","atsamd51g::sdhc0::mccar","Bits 0:7 - Maximum Current for 3.3V",2856,[[],["maxcur33v_r",6]]],[11,"maxcur30v","","Bits 8:15 - Maximum Current for 3.0V",2856,[[],["maxcur30v_r",6]]],[11,"maxcur18v","","Bits 16:23 - Maximum Current for 1.8V",2856,[[],["maxcur18v_r",6]]],[0,"feraces","atsamd51g::sdhc0","Force Event for Auto CMD Error Status",null,null],[3,"ACMD12NE_W","atsamd51g::sdhc0::feraces","Write proxy for field `ACMD12NE`",null,null],[3,"ACMDTEO_W","","Write proxy for field `ACMDTEO`",null,null],[3,"ACMDCRC_W","","Write proxy for field `ACMDCRC`",null,null],[3,"ACMDEND_W","","Write proxy for field `ACMDEND`",null,null],[3,"ACMDIDX_W","","Write proxy for field `ACMDIDX`",null,null],[3,"CMDNI_W","","Write proxy for field `CMDNI`",null,null],[4,"ACMD12NE_AW","","Force Event for Auto CMD12 Not Executed",null,null],[13,"NO","","0: No Interrupt",2857,null],[13,"YES","","1: Interrupt is generated",2857,null],[4,"ACMDTEO_AW","","Force Event for Auto CMD Timeout Error",null,null],[13,"NO","","0: No Interrupt",2858,null],[13,"YES","","1: Interrupt is generated",2858,null],[4,"ACMDCRC_AW","","Force Event for Auto CMD CRC Error",null,null],[13,"NO","","0: No Interrupt",2859,null],[13,"YES","","1: Interrupt is generated",2859,null],[4,"ACMDEND_AW","","Force Event for Auto CMD End Bit Error",null,null],[13,"NO","","0: No Interrupt",2860,null],[13,"YES","","1: Interrupt is generated",2860,null],[4,"ACMDIDX_AW","","Force Event for Auto CMD Index Error",null,null],[13,"NO","","0: No Interrupt",2861,null],[13,"YES","","1: Interrupt is generated",2861,null],[4,"CMDNI_AW","","Force Event for Command Not Issued By Auto CMD12 Error",null,null],[13,"NO","","0: No Interrupt",2862,null],[13,"YES","","1: Interrupt is generated",2862,null],[6,"W","","Writer for register FERACES",null,null],[11,"variant","","Writes `variant` to the field",2863,[[["acmd12ne_aw",4]],["w",6]]],[11,"no","","No Interrupt",2863,[[],["w",6]]],[11,"yes","","Interrupt is generated",2863,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2863,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2863,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2863,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2864,[[["acmdteo_aw",4]],["w",6]]],[11,"no","","No Interrupt",2864,[[],["w",6]]],[11,"yes","","Interrupt is generated",2864,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2864,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2864,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2864,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2865,[[["acmdcrc_aw",4]],["w",6]]],[11,"no","","No Interrupt",2865,[[],["w",6]]],[11,"yes","","Interrupt is generated",2865,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2865,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2865,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2865,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2866,[[["acmdend_aw",4]],["w",6]]],[11,"no","","No Interrupt",2866,[[],["w",6]]],[11,"yes","","Interrupt is generated",2866,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2866,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2866,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2866,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2867,[[["acmdidx_aw",4]],["w",6]]],[11,"no","","No Interrupt",2867,[[],["w",6]]],[11,"yes","","Interrupt is generated",2867,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2867,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2867,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2867,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2868,[[["cmdni_aw",4]],["w",6]]],[11,"no","","No Interrupt",2868,[[],["w",6]]],[11,"yes","","Interrupt is generated",2868,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2868,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2868,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2868,[[],["w",6]]],[11,"acmd12ne","atsamd51g::generic","Bit 0 - Force Event for Auto CMD12 Not Executed",7,[[],["acmd12ne_w",3]]],[11,"acmdteo","","Bit 1 - Force Event for Auto CMD Timeout Error",7,[[],["acmdteo_w",3]]],[11,"acmdcrc","","Bit 2 - Force Event for Auto CMD CRC Error",7,[[],["acmdcrc_w",3]]],[11,"acmdend","","Bit 3 - Force Event for Auto CMD End Bit Error",7,[[],["acmdend_w",3]]],[11,"acmdidx","","Bit 4 - Force Event for Auto CMD Index Error",7,[[],["acmdidx_w",3]]],[11,"cmdni","","Bit 7 - Force Event for Command Not Issued By Auto CMD12…",7,[[],["cmdni_w",3]]],[11,"acmd12ne","atsamd51g::sdhc0::feraces","Bit 0 - Force Event for Auto CMD12 Not Executed",2869,[[],["acmd12ne_w",3]]],[11,"acmdteo","","Bit 1 - Force Event for Auto CMD Timeout Error",2869,[[],["acmdteo_w",3]]],[11,"acmdcrc","","Bit 2 - Force Event for Auto CMD CRC Error",2869,[[],["acmdcrc_w",3]]],[11,"acmdend","","Bit 3 - Force Event for Auto CMD End Bit Error",2869,[[],["acmdend_w",3]]],[11,"acmdidx","","Bit 4 - Force Event for Auto CMD Index Error",2869,[[],["acmdidx_w",3]]],[11,"cmdni","","Bit 7 - Force Event for Command Not Issued By Auto CMD12…",2869,[[],["cmdni_w",3]]],[0,"fereis","atsamd51g::sdhc0","Force Event for Error Interrupt Status",null,null],[3,"CMDTEO_W","atsamd51g::sdhc0::fereis","Write proxy for field `CMDTEO`",null,null],[3,"CMDCRC_W","","Write proxy for field `CMDCRC`",null,null],[3,"CMDEND_W","","Write proxy for field `CMDEND`",null,null],[3,"CMDIDX_W","","Write proxy for field `CMDIDX`",null,null],[3,"DATTEO_W","","Write proxy for field `DATTEO`",null,null],[3,"DATCRC_W","","Write proxy for field `DATCRC`",null,null],[3,"DATEND_W","","Write proxy for field `DATEND`",null,null],[3,"CURLIM_W","","Write proxy for field `CURLIM`",null,null],[3,"ACMD_W","","Write proxy for field `ACMD`",null,null],[3,"ADMA_W","","Write proxy for field `ADMA`",null,null],[3,"BOOTAE_W","","Write proxy for field `BOOTAE`",null,null],[4,"CMDTEO_AW","","Force Event for Command Timeout Error",null,null],[13,"NO","","0: No Interrupt",2870,null],[13,"YES","","1: Interrupt is generated",2870,null],[4,"CMDCRC_AW","","Force Event for Command CRC Error",null,null],[13,"NO","","0: No Interrupt",2871,null],[13,"YES","","1: Interrupt is generated",2871,null],[4,"CMDEND_AW","","Force Event for Command End Bit Error",null,null],[13,"NO","","0: No Interrupt",2872,null],[13,"YES","","1: Interrupt is generated",2872,null],[4,"CMDIDX_AW","","Force Event for Command Index Error",null,null],[13,"NO","","0: No Interrupt",2873,null],[13,"YES","","1: Interrupt is generated",2873,null],[4,"DATTEO_AW","","Force Event for Data Timeout Error",null,null],[13,"NO","","0: No Interrupt",2874,null],[13,"YES","","1: Interrupt is generated",2874,null],[4,"DATCRC_AW","","Force Event for Data CRC Error",null,null],[13,"NO","","0: No Interrupt",2875,null],[13,"YES","","1: Interrupt is generated",2875,null],[4,"DATEND_AW","","Force Event for Data End Bit Error",null,null],[13,"NO","","0: No Interrupt",2876,null],[13,"YES","","1: Interrupt is generated",2876,null],[4,"CURLIM_AW","","Force Event for Current Limit Error",null,null],[13,"NO","","0: No Interrupt",2877,null],[13,"YES","","1: Interrupt is generated",2877,null],[4,"ACMD_AW","","Force Event for Auto CMD Error",null,null],[13,"NO","","0: No Interrupt",2878,null],[13,"YES","","1: Interrupt is generated",2878,null],[4,"ADMA_AW","","Force Event for ADMA Error",null,null],[13,"NO","","0: No Interrupt",2879,null],[13,"YES","","1: Interrupt is generated",2879,null],[4,"BOOTAE_AW","","Force Event for Boot Acknowledge Error",null,null],[13,"NO","","0: No Interrupt",2880,null],[13,"YES","","1: Interrupt is generated",2880,null],[6,"W","","Writer for register FEREIS",null,null],[11,"variant","","Writes `variant` to the field",2881,[[["cmdteo_aw",4]],["w",6]]],[11,"no","","No Interrupt",2881,[[],["w",6]]],[11,"yes","","Interrupt is generated",2881,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2881,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2881,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2881,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2882,[[["cmdcrc_aw",4]],["w",6]]],[11,"no","","No Interrupt",2882,[[],["w",6]]],[11,"yes","","Interrupt is generated",2882,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2882,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2882,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2882,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2883,[[["cmdend_aw",4]],["w",6]]],[11,"no","","No Interrupt",2883,[[],["w",6]]],[11,"yes","","Interrupt is generated",2883,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2883,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2883,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2883,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2884,[[["cmdidx_aw",4]],["w",6]]],[11,"no","","No Interrupt",2884,[[],["w",6]]],[11,"yes","","Interrupt is generated",2884,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2884,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2884,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2884,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2885,[[["datteo_aw",4]],["w",6]]],[11,"no","","No Interrupt",2885,[[],["w",6]]],[11,"yes","","Interrupt is generated",2885,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2885,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2885,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2885,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2886,[[["datcrc_aw",4]],["w",6]]],[11,"no","","No Interrupt",2886,[[],["w",6]]],[11,"yes","","Interrupt is generated",2886,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2886,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2886,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2886,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2887,[[["datend_aw",4]],["w",6]]],[11,"no","","No Interrupt",2887,[[],["w",6]]],[11,"yes","","Interrupt is generated",2887,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2887,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2887,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2887,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2888,[[["curlim_aw",4]],["w",6]]],[11,"no","","No Interrupt",2888,[[],["w",6]]],[11,"yes","","Interrupt is generated",2888,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2888,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2888,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2888,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2889,[[["acmd_aw",4]],["w",6]]],[11,"no","","No Interrupt",2889,[[],["w",6]]],[11,"yes","","Interrupt is generated",2889,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2889,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2889,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2889,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2890,[[["adma_aw",4]],["w",6]]],[11,"no","","No Interrupt",2890,[[],["w",6]]],[11,"yes","","Interrupt is generated",2890,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2890,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2890,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2890,[[],["w",6]]],[11,"variant","","Writes `variant` to the field",2891,[[["bootae_aw",4]],["w",6]]],[11,"no","","No Interrupt",2891,[[],["w",6]]],[11,"yes","","Interrupt is generated",2891,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2891,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2891,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2891,[[],["w",6]]],[11,"cmdteo","atsamd51g::generic","Bit 0 - Force Event for Command Timeout Error",7,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Force Event for Command CRC Error",7,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Force Event for Command End Bit Error",7,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Force Event for Command Index Error",7,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Force Event for Data Timeout Error",7,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Force Event for Data CRC Error",7,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Force Event for Data End Bit Error",7,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Force Event for Current Limit Error",7,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Force Event for Auto CMD Error",7,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - Force Event for ADMA Error",7,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Force Event for Boot Acknowledge Error",7,[[],["bootae_w",3]]],[11,"cmdteo","atsamd51g::sdhc0::fereis","Bit 0 - Force Event for Command Timeout Error",2892,[[],["cmdteo_w",3]]],[11,"cmdcrc","","Bit 1 - Force Event for Command CRC Error",2892,[[],["cmdcrc_w",3]]],[11,"cmdend","","Bit 2 - Force Event for Command End Bit Error",2892,[[],["cmdend_w",3]]],[11,"cmdidx","","Bit 3 - Force Event for Command Index Error",2892,[[],["cmdidx_w",3]]],[11,"datteo","","Bit 4 - Force Event for Data Timeout Error",2892,[[],["datteo_w",3]]],[11,"datcrc","","Bit 5 - Force Event for Data CRC Error",2892,[[],["datcrc_w",3]]],[11,"datend","","Bit 6 - Force Event for Data End Bit Error",2892,[[],["datend_w",3]]],[11,"curlim","","Bit 7 - Force Event for Current Limit Error",2892,[[],["curlim_w",3]]],[11,"acmd","","Bit 8 - Force Event for Auto CMD Error",2892,[[],["acmd_w",3]]],[11,"adma","","Bit 9 - Force Event for ADMA Error",2892,[[],["adma_w",3]]],[11,"bootae","","Bit 12 - Force Event for Boot Acknowledge Error",2892,[[],["bootae_w",3]]],[0,"aesr","atsamd51g::sdhc0","ADMA Error Status",null,null],[4,"ERRST_A","atsamd51g::sdhc0::aesr","ADMA Error State",null,null],[13,"STOP","","0: ST_STOP (Stop DMA)",2893,null],[13,"FDS","","1: ST_FDS (Fetch Descriptor)",2893,null],[13,"TFR","","3: ST_TFR (Transfer Data)",2893,null],[4,"LMIS_A","","ADMA Length Mismatch Error",null,null],[13,"NO","","0: No Error",2894,null],[13,"YES","","1: Error",2894,null],[6,"R","","Reader of register AESR",null,null],[6,"ERRST_R","","Reader of field `ERRST`",null,null],[6,"LMIS_R","","Reader of field `LMIS`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["errst_a",4]]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_fds","","Checks if the value of the field is `FDS`",6,[[]]],[11,"is_tfr","","Checks if the value of the field is `TFR`",6,[[]]],[11,"variant","atsamd51g::sdhc0::aesr","Get enumerated values variant",2895,[[],[["variant",4],["errst_a",4]]]],[11,"is_stop","","Checks if the value of the field is `STOP`",2895,[[]]],[11,"is_fds","","Checks if the value of the field is `FDS`",2895,[[]]],[11,"is_tfr","","Checks if the value of the field is `TFR`",2895,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["lmis_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",6,[[]]],[11,"variant","atsamd51g::sdhc0::aesr","Get enumerated values variant",2896,[[],["lmis_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",2896,[[]]],[11,"is_yes","","Checks if the value of the field is `YES`",2896,[[]]],[11,"errst","atsamd51g::generic","Bits 0:1 - ADMA Error State",6,[[],["errst_r",6]]],[11,"lmis","","Bit 2 - ADMA Length Mismatch Error",6,[[],["lmis_r",6]]],[11,"errst","atsamd51g::sdhc0::aesr","Bits 0:1 - ADMA Error State",2897,[[],["errst_r",6]]],[11,"lmis","","Bit 2 - ADMA Length Mismatch Error",2897,[[],["lmis_r",6]]],[0,"asar","atsamd51g::sdhc0","ADMA System Address n",null,null],[3,"ADMASA_W","atsamd51g::sdhc0::asar","Write proxy for field `ADMASA`",null,null],[6,"R","","Reader of register ASAR[%s]",null,null],[6,"W","","Writer for register ASAR[%s]",null,null],[6,"ADMASA_R","","Reader of field `ADMASA`",null,null],[11,"bits","","Writes raw bits to the field",2898,[[],["w",6]]],[11,"admasa","atsamd51g::generic","Bits 0:31 - ADMA System Address",6,[[],["admasa_r",6]]],[11,"admasa","atsamd51g::sdhc0::asar","Bits 0:31 - ADMA System Address",2899,[[],["admasa_r",6]]],[11,"admasa","atsamd51g::generic","Bits 0:31 - ADMA System Address",7,[[],["admasa_w",3]]],[11,"admasa","atsamd51g::sdhc0::asar","Bits 0:31 - ADMA System Address",2900,[[],["admasa_w",3]]],[0,"pvr","atsamd51g::sdhc0","Preset Value n",null,null],[3,"SDCLKFSEL_W","atsamd51g::sdhc0::pvr","Write proxy for field `SDCLKFSEL`",null,null],[3,"CLKGSEL_W","","Write proxy for field `CLKGSEL`",null,null],[3,"DRVSEL_W","","Write proxy for field `DRVSEL`",null,null],[4,"CLKGSEL_A","","Clock Generator Select Value for Initialization",null,null],[13,"DIV","","0: Host Controller Ver2.00 Compatible Clock Generator…",2901,null],[13,"PROG","","1: Programmable Clock Generator",2901,null],[4,"DRVSEL_A","","Driver Strength Select Value for Initialization",null,null],[13,"B","","0: Driver Type B is Selected",2902,null],[13,"A","","1: Driver Type A is Selected",2902,null],[13,"C","","2: Driver Type C is Selected",2902,null],[13,"D","","3: Driver Type D is Selected",2902,null],[6,"R","","Reader of register PVR[%s]",null,null],[6,"W","","Writer for register PVR[%s]",null,null],[6,"SDCLKFSEL_R","","Reader of field `SDCLKFSEL`",null,null],[6,"CLKGSEL_R","","Reader of field `CLKGSEL`",null,null],[6,"DRVSEL_R","","Reader of field `DRVSEL`",null,null],[11,"bits","","Writes raw bits to the field",2903,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["clkgsel_a",4]]],[11,"is_div","","Checks if the value of the field is `DIV`",6,[[]]],[11,"is_prog","","Checks if the value of the field is `PROG`",6,[[]]],[11,"variant","atsamd51g::sdhc0::pvr","Get enumerated values variant",2904,[[],["clkgsel_a",4]]],[11,"is_div","","Checks if the value of the field is `DIV`",2904,[[]]],[11,"is_prog","","Checks if the value of the field is `PROG`",2904,[[]]],[11,"variant","","Writes `variant` to the field",2905,[[["clkgsel_a",4]],["w",6]]],[11,"div","","Host Controller Ver2.00 Compatible Clock Generator (Divider)",2905,[[],["w",6]]],[11,"prog","","Programmable Clock Generator",2905,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2905,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2905,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2905,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["drvsel_a",4]]],[11,"is_b","","Checks if the value of the field is `B`",6,[[]]],[11,"is_a","","Checks if the value of the field is `A`",6,[[]]],[11,"is_c","","Checks if the value of the field is `C`",6,[[]]],[11,"is_d","","Checks if the value of the field is `D`",6,[[]]],[11,"variant","atsamd51g::sdhc0::pvr","Get enumerated values variant",2906,[[],["drvsel_a",4]]],[11,"is_b","","Checks if the value of the field is `B`",2906,[[]]],[11,"is_a","","Checks if the value of the field is `A`",2906,[[]]],[11,"is_c","","Checks if the value of the field is `C`",2906,[[]]],[11,"is_d","","Checks if the value of the field is `D`",2906,[[]]],[11,"variant","","Writes `variant` to the field",2907,[[["drvsel_a",4]],["w",6]]],[11,"b","","Driver Type B is Selected",2907,[[],["w",6]]],[11,"a","","Driver Type A is Selected",2907,[[],["w",6]]],[11,"c","","Driver Type C is Selected",2907,[[],["w",6]]],[11,"d","","Driver Type D is Selected",2907,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2907,[[],["w",6]]],[11,"sdclkfsel","atsamd51g::generic","Bits 0:9 - SDCLK Frequency Select Value for Initialization",6,[[],["sdclkfsel_r",6]]],[11,"clkgsel","","Bit 10 - Clock Generator Select Value for Initialization",6,[[],["clkgsel_r",6]]],[11,"drvsel","","Bits 14:15 - Driver Strength Select Value for Initialization",6,[[],["drvsel_r",6]]],[11,"sdclkfsel","atsamd51g::sdhc0::pvr","Bits 0:9 - SDCLK Frequency Select Value for Initialization",2908,[[],["sdclkfsel_r",6]]],[11,"clkgsel","","Bit 10 - Clock Generator Select Value for Initialization",2908,[[],["clkgsel_r",6]]],[11,"drvsel","","Bits 14:15 - Driver Strength Select Value for Initialization",2908,[[],["drvsel_r",6]]],[11,"sdclkfsel","atsamd51g::generic","Bits 0:9 - SDCLK Frequency Select Value for Initialization",7,[[],["sdclkfsel_w",3]]],[11,"clkgsel","","Bit 10 - Clock Generator Select Value for Initialization",7,[[],["clkgsel_w",3]]],[11,"drvsel","","Bits 14:15 - Driver Strength Select Value for Initialization",7,[[],["drvsel_w",3]]],[11,"sdclkfsel","atsamd51g::sdhc0::pvr","Bits 0:9 - SDCLK Frequency Select Value for Initialization",2909,[[],["sdclkfsel_w",3]]],[11,"clkgsel","","Bit 10 - Clock Generator Select Value for Initialization",2909,[[],["clkgsel_w",3]]],[11,"drvsel","","Bits 14:15 - Driver Strength Select Value for Initialization",2909,[[],["drvsel_w",3]]],[0,"sisr","atsamd51g::sdhc0","Slot Interrupt Status",null,null],[6,"R","atsamd51g::sdhc0::sisr","Reader of register SISR",null,null],[6,"INTSSL_R","","Reader of field `INTSSL`",null,null],[11,"intssl","atsamd51g::generic","Bit 0 - Interrupt Signal for Each Slot",6,[[],["intssl_r",6]]],[11,"intssl","atsamd51g::sdhc0::sisr","Bit 0 - Interrupt Signal for Each Slot",2910,[[],["intssl_r",6]]],[0,"hcvr","atsamd51g::sdhc0","Host Controller Version",null,null],[6,"R","atsamd51g::sdhc0::hcvr","Reader of register HCVR",null,null],[6,"SVER_R","","Reader of field `SVER`",null,null],[6,"VVER_R","","Reader of field `VVER`",null,null],[11,"sver","atsamd51g::generic","Bits 0:7 - Spec Version",6,[[],["sver_r",6]]],[11,"vver","","Bits 8:15 - Vendor Version",6,[[],["vver_r",6]]],[11,"sver","atsamd51g::sdhc0::hcvr","Bits 0:7 - Spec Version",2911,[[],["sver_r",6]]],[11,"vver","","Bits 8:15 - Vendor Version",2911,[[],["vver_r",6]]],[0,"mc1r","atsamd51g::sdhc0","MMC Control 1",null,null],[3,"CMDTYP_W","atsamd51g::sdhc0::mc1r","Write proxy for field `CMDTYP`",null,null],[3,"DDR_W","","Write proxy for field `DDR`",null,null],[3,"OPD_W","","Write proxy for field `OPD`",null,null],[3,"BOOTA_W","","Write proxy for field `BOOTA`",null,null],[3,"RSTN_W","","Write proxy for field `RSTN`",null,null],[3,"FCD_W","","Write proxy for field `FCD`",null,null],[4,"CMDTYP_A","","e.MMC Command Type",null,null],[13,"NORMAL","","0: Not a MMC specific command",2912,null],[13,"WAITIRQ","","1: Wait IRQ Command",2912,null],[13,"STREAM","","2: Stream Command",2912,null],[13,"BOOT","","3: Boot Command",2912,null],[6,"R","","Reader of register MC1R",null,null],[6,"W","","Writer for register MC1R",null,null],[6,"CMDTYP_R","","Reader of field `CMDTYP`",null,null],[6,"DDR_R","","Reader of field `DDR`",null,null],[6,"OPD_R","","Reader of field `OPD`",null,null],[6,"BOOTA_R","","Reader of field `BOOTA`",null,null],[6,"RSTN_R","","Reader of field `RSTN`",null,null],[6,"FCD_R","","Reader of field `FCD`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmdtyp_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_waitirq","","Checks if the value of the field is `WAITIRQ`",6,[[]]],[11,"is_stream","","Checks if the value of the field is `STREAM`",6,[[]]],[11,"is_boot","","Checks if the value of the field is `BOOT`",6,[[]]],[11,"variant","atsamd51g::sdhc0::mc1r","Get enumerated values variant",2913,[[],["cmdtyp_a",4]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",2913,[[]]],[11,"is_waitirq","","Checks if the value of the field is `WAITIRQ`",2913,[[]]],[11,"is_stream","","Checks if the value of the field is `STREAM`",2913,[[]]],[11,"is_boot","","Checks if the value of the field is `BOOT`",2913,[[]]],[11,"variant","","Writes `variant` to the field",2914,[[["cmdtyp_a",4]],["w",6]]],[11,"normal","","Not a MMC specific command",2914,[[],["w",6]]],[11,"waitirq","","Wait IRQ Command",2914,[[],["w",6]]],[11,"stream","","Stream Command",2914,[[],["w",6]]],[11,"boot","","Boot Command",2914,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2914,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2915,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2915,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2915,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2916,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2916,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2916,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2917,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2917,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2917,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2918,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2918,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2918,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2919,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2919,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2919,[[],["w",6]]],[11,"cmdtyp","atsamd51g::generic","Bits 0:1 - e.MMC Command Type",6,[[],["cmdtyp_r",6]]],[11,"ddr","","Bit 3 - e.MMC HSDDR Mode",6,[[],["ddr_r",6]]],[11,"opd","","Bit 4 - e.MMC Open Drain Mode",6,[[],["opd_r",6]]],[11,"boota","","Bit 5 - e.MMC Boot Acknowledge Enable",6,[[],["boota_r",6]]],[11,"rstn","","Bit 6 - e.MMC Reset Signal",6,[[],["rstn_r",6]]],[11,"fcd","","Bit 7 - e.MMC Force Card Detect",6,[[],["fcd_r",6]]],[11,"cmdtyp","atsamd51g::sdhc0::mc1r","Bits 0:1 - e.MMC Command Type",2920,[[],["cmdtyp_r",6]]],[11,"ddr","","Bit 3 - e.MMC HSDDR Mode",2920,[[],["ddr_r",6]]],[11,"opd","","Bit 4 - e.MMC Open Drain Mode",2920,[[],["opd_r",6]]],[11,"boota","","Bit 5 - e.MMC Boot Acknowledge Enable",2920,[[],["boota_r",6]]],[11,"rstn","","Bit 6 - e.MMC Reset Signal",2920,[[],["rstn_r",6]]],[11,"fcd","","Bit 7 - e.MMC Force Card Detect",2920,[[],["fcd_r",6]]],[11,"cmdtyp","atsamd51g::generic","Bits 0:1 - e.MMC Command Type",7,[[],["cmdtyp_w",3]]],[11,"ddr","","Bit 3 - e.MMC HSDDR Mode",7,[[],["ddr_w",3]]],[11,"opd","","Bit 4 - e.MMC Open Drain Mode",7,[[],["opd_w",3]]],[11,"boota","","Bit 5 - e.MMC Boot Acknowledge Enable",7,[[],["boota_w",3]]],[11,"rstn","","Bit 6 - e.MMC Reset Signal",7,[[],["rstn_w",3]]],[11,"fcd","","Bit 7 - e.MMC Force Card Detect",7,[[],["fcd_w",3]]],[11,"cmdtyp","atsamd51g::sdhc0::mc1r","Bits 0:1 - e.MMC Command Type",2921,[[],["cmdtyp_w",3]]],[11,"ddr","","Bit 3 - e.MMC HSDDR Mode",2921,[[],["ddr_w",3]]],[11,"opd","","Bit 4 - e.MMC Open Drain Mode",2921,[[],["opd_w",3]]],[11,"boota","","Bit 5 - e.MMC Boot Acknowledge Enable",2921,[[],["boota_w",3]]],[11,"rstn","","Bit 6 - e.MMC Reset Signal",2921,[[],["rstn_w",3]]],[11,"fcd","","Bit 7 - e.MMC Force Card Detect",2921,[[],["fcd_w",3]]],[0,"mc2r","atsamd51g::sdhc0","MMC Control 2",null,null],[3,"SRESP_W","atsamd51g::sdhc0::mc2r","Write proxy for field `SRESP`",null,null],[3,"ABOOT_W","","Write proxy for field `ABOOT`",null,null],[6,"W","","Writer for register MC2R",null,null],[11,"set_bit","","Sets the field bit",2922,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2922,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2922,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2923,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2923,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2923,[[],["w",6]]],[11,"sresp","atsamd51g::generic","Bit 0 - e.MMC Abort Wait IRQ",7,[[],["sresp_w",3]]],[11,"aboot","","Bit 1 - e.MMC Abort Boot",7,[[],["aboot_w",3]]],[11,"sresp","atsamd51g::sdhc0::mc2r","Bit 0 - e.MMC Abort Wait IRQ",2924,[[],["sresp_w",3]]],[11,"aboot","","Bit 1 - e.MMC Abort Boot",2924,[[],["aboot_w",3]]],[0,"acr","atsamd51g::sdhc0","AHB Control",null,null],[3,"BMAX_W","atsamd51g::sdhc0::acr","Write proxy for field `BMAX`",null,null],[4,"BMAX_A","","AHB Maximum Burst",null,null],[13,"INCR16","","0: `0`",2925,null],[13,"INCR8","","1: `1`",2925,null],[13,"INCR4","","2: `10`",2925,null],[13,"SINGLE","","3: `11`",2925,null],[6,"R","","Reader of register ACR",null,null],[6,"W","","Writer for register ACR",null,null],[6,"BMAX_R","","Reader of field `BMAX`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["bmax_a",4]]],[11,"is_incr16","","Checks if the value of the field is `INCR16`",6,[[]]],[11,"is_incr8","","Checks if the value of the field is `INCR8`",6,[[]]],[11,"is_incr4","","Checks if the value of the field is `INCR4`",6,[[]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::acr","Get enumerated values variant",2926,[[],["bmax_a",4]]],[11,"is_incr16","","Checks if the value of the field is `INCR16`",2926,[[]]],[11,"is_incr8","","Checks if the value of the field is `INCR8`",2926,[[]]],[11,"is_incr4","","Checks if the value of the field is `INCR4`",2926,[[]]],[11,"is_single","","Checks if the value of the field is `SINGLE`",2926,[[]]],[11,"variant","","Writes `variant` to the field",2927,[[["bmax_a",4]],["w",6]]],[11,"incr16","","`0`",2927,[[],["w",6]]],[11,"incr8","","`1`",2927,[[],["w",6]]],[11,"incr4","","`10`",2927,[[],["w",6]]],[11,"single","","`11`",2927,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2927,[[],["w",6]]],[11,"bmax","atsamd51g::generic","Bits 0:1 - AHB Maximum Burst",6,[[],["bmax_r",6]]],[11,"bmax","atsamd51g::sdhc0::acr","Bits 0:1 - AHB Maximum Burst",2928,[[],["bmax_r",6]]],[11,"bmax","atsamd51g::generic","Bits 0:1 - AHB Maximum Burst",7,[[],["bmax_w",3]]],[11,"bmax","atsamd51g::sdhc0::acr","Bits 0:1 - AHB Maximum Burst",2929,[[],["bmax_w",3]]],[0,"cc2r","atsamd51g::sdhc0","Clock Control 2",null,null],[3,"FSDCLKD_W","atsamd51g::sdhc0::cc2r","Write proxy for field `FSDCLKD`",null,null],[4,"FSDCLKD_A","","Force SDCK Disabled",null,null],[13,"NOEFFECT","","0: No effect",2930,null],[13,"DISABLE","","1: SDCLK can be stopped at any time after DATA…",2930,null],[6,"R","","Reader of register CC2R",null,null],[6,"W","","Writer for register CC2R",null,null],[6,"FSDCLKD_R","","Reader of field `FSDCLKD`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["fsdclkd_a",4]]],[11,"is_noeffect","","Checks if the value of the field is `NOEFFECT`",6,[[]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"variant","atsamd51g::sdhc0::cc2r","Get enumerated values variant",2931,[[],["fsdclkd_a",4]]],[11,"is_noeffect","","Checks if the value of the field is `NOEFFECT`",2931,[[]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2931,[[]]],[11,"variant","","Writes `variant` to the field",2932,[[["fsdclkd_a",4]],["w",6]]],[11,"noeffect","","No effect",2932,[[],["w",6]]],[11,"disable","","SDCLK can be stopped at any time after DATA transfer.SDCLK…",2932,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2932,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2932,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2932,[[],["w",6]]],[11,"fsdclkd","atsamd51g::generic","Bit 0 - Force SDCK Disabled",6,[[],["fsdclkd_r",6]]],[11,"fsdclkd","atsamd51g::sdhc0::cc2r","Bit 0 - Force SDCK Disabled",2933,[[],["fsdclkd_r",6]]],[11,"fsdclkd","atsamd51g::generic","Bit 0 - Force SDCK Disabled",7,[[],["fsdclkd_w",3]]],[11,"fsdclkd","atsamd51g::sdhc0::cc2r","Bit 0 - Force SDCK Disabled",2934,[[],["fsdclkd_w",3]]],[0,"cacr","atsamd51g::sdhc0","Capabilities Control",null,null],[3,"CAPWREN_W","atsamd51g::sdhc0::cacr","Write proxy for field `CAPWREN`",null,null],[3,"KEY_W","","Write proxy for field `KEY`",null,null],[6,"R","","Reader of register CACR",null,null],[6,"W","","Writer for register CACR",null,null],[6,"CAPWREN_R","","Reader of field `CAPWREN`",null,null],[6,"KEY_R","","Reader of field `KEY`",null,null],[11,"set_bit","","Sets the field bit",2935,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2935,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2935,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2936,[[],["w",6]]],[11,"capwren","atsamd51g::generic","Bit 0 - Capabilities Registers Write Enable (Required to…",6,[[],["capwren_r",6]]],[11,"key","","Bits 8:15 - Key (0x46)",6,[[],["key_r",6]]],[11,"capwren","atsamd51g::sdhc0::cacr","Bit 0 - Capabilities Registers Write Enable (Required to…",2937,[[],["capwren_r",6]]],[11,"key","","Bits 8:15 - Key (0x46)",2937,[[],["key_r",6]]],[11,"capwren","atsamd51g::generic","Bit 0 - Capabilities Registers Write Enable (Required to…",7,[[],["capwren_w",3]]],[11,"key","","Bits 8:15 - Key (0x46)",7,[[],["key_w",3]]],[11,"capwren","atsamd51g::sdhc0::cacr","Bit 0 - Capabilities Registers Write Enable (Required to…",2938,[[],["capwren_w",3]]],[11,"key","","Bits 8:15 - Key (0x46)",2938,[[],["key_w",3]]],[0,"dbgr","atsamd51g::sdhc0","Debug",null,null],[3,"NIDBG_W","atsamd51g::sdhc0::dbgr","Write proxy for field `NIDBG`",null,null],[4,"NIDBG_A","","Non-intrusive debug enable",null,null],[13,"IDBG","","0: Debugging is intrusive (reads of BDPR from debugger are…",2939,null],[13,"NIDBG","","1: Debugging is not intrusive (reads of BDPR from debugger…",2939,null],[6,"R","","Reader of register DBGR",null,null],[6,"W","","Writer for register DBGR",null,null],[6,"NIDBG_R","","Reader of field `NIDBG`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["nidbg_a",4]]],[11,"is_idbg","","Checks if the value of the field is `IDBG`",6,[[]]],[11,"is_nidbg","","Checks if the value of the field is `NIDBG`",6,[[]]],[11,"variant","atsamd51g::sdhc0::dbgr","Get enumerated values variant",2940,[[],["nidbg_a",4]]],[11,"is_idbg","","Checks if the value of the field is `IDBG`",2940,[[]]],[11,"is_nidbg","","Checks if the value of the field is `NIDBG`",2940,[[]]],[11,"variant","","Writes `variant` to the field",2941,[[["nidbg_a",4]],["w",6]]],[11,"idbg","","Debugging is intrusive (reads of BDPR from debugger are…",2941,[[],["w",6]]],[11,"nidbg","","Debugging is not intrusive (reads of BDPR from debugger…",2941,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2941,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2941,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2941,[[],["w",6]]],[11,"nidbg","atsamd51g::generic","Bit 0 - Non-intrusive debug enable",6,[[],["nidbg_r",6]]],[11,"nidbg","atsamd51g::sdhc0::dbgr","Bit 0 - Non-intrusive debug enable",2942,[[],["nidbg_r",6]]],[11,"nidbg","atsamd51g::generic","Bit 0 - Non-intrusive debug enable",7,[[],["nidbg_w",3]]],[11,"nidbg","atsamd51g::sdhc0::dbgr","Bit 0 - Non-intrusive debug enable",2943,[[],["nidbg_w",3]]],[6,"SSAR","atsamd51g::sdhc0","SDMA System Address / Argument 2",null,null],[6,"SSAR_CMD23_MODE","","SDMA System Address / Argument 2",null,null],[6,"BSR","","Block Size",null,null],[6,"BCR","","Block Count",null,null],[6,"ARG1R","","Argument 1",null,null],[6,"TMR","","Transfer Mode",null,null],[6,"CR","","Command",null,null],[6,"RR","","Response",null,null],[6,"BDPR","","Buffer Data Port",null,null],[6,"PSR","","Present State",null,null],[6,"HC1R","","Host Control 1",null,null],[6,"HC1R_EMMC_MODE","","Host Control 1",null,null],[6,"PCR","","Power Control",null,null],[6,"BGCR","","Block Gap Control",null,null],[6,"BGCR_EMMC_MODE","","Block Gap Control",null,null],[6,"WCR","","Wakeup Control",null,null],[6,"CCR","","Clock Control",null,null],[6,"TCR","","Timeout Control",null,null],[6,"SRR","","Software Reset",null,null],[6,"NISTR","","Normal Interrupt Status",null,null],[6,"NISTR_EMMC_MODE","","Normal Interrupt Status",null,null],[6,"EISTR","","Error Interrupt Status",null,null],[6,"EISTR_EMMC_MODE","","Error Interrupt Status",null,null],[6,"NISTER","","Normal Interrupt Status Enable",null,null],[6,"NISTER_EMMC_MODE","","Normal Interrupt Status Enable",null,null],[6,"EISTER","","Error Interrupt Status Enable",null,null],[6,"EISTER_EMMC_MODE","","Error Interrupt Status Enable",null,null],[6,"NISIER","","Normal Interrupt Signal Enable",null,null],[6,"NISIER_EMMC_MODE","","Normal Interrupt Signal Enable",null,null],[6,"EISIER","","Error Interrupt Signal Enable",null,null],[6,"EISIER_EMMC_MODE","","Error Interrupt Signal Enable",null,null],[6,"ACESR","","Auto CMD Error Status",null,null],[6,"HC2R","","Host Control 2",null,null],[6,"HC2R_EMMC_MODE","","Host Control 2",null,null],[6,"CA0R","","Capabilities 0",null,null],[6,"CA1R","","Capabilities 1",null,null],[6,"MCCAR","","Maximum Current Capabilities",null,null],[6,"FERACES","","Force Event for Auto CMD Error Status",null,null],[6,"FEREIS","","Force Event for Error Interrupt Status",null,null],[6,"AESR","","ADMA Error Status",null,null],[6,"ASAR","","ADMA System Address n",null,null],[6,"PVR","","Preset Value n",null,null],[6,"SISR","","Slot Interrupt Status",null,null],[6,"HCVR","","Host Controller Version",null,null],[6,"MC1R","","MMC Control 1",null,null],[6,"MC2R","","MMC Control 2",null,null],[6,"ACR","","AHB Control",null,null],[6,"CC2R","","Clock Control 2",null,null],[6,"CACR","","Capabilities Control",null,null],[6,"DBGR","","Debug",null,null],[11,"ssar_cmd23_mode","","0x00 - SDMA System Address / Argument 2",2209,[[],["ssar_cmd23_mode",6]]],[11,"ssar_cmd23_mode_mut","","0x00 - SDMA System Address / Argument 2",2209,[[],["ssar_cmd23_mode",6]]],[11,"ssar","","0x00 - SDMA System Address / Argument 2",2209,[[],["ssar",6]]],[11,"ssar_mut","","0x00 - SDMA System Address / Argument 2",2209,[[],["ssar",6]]],[11,"hc1r_emmc_mode","","0x28 - Host Control 1",2209,[[],["hc1r_emmc_mode",6]]],[11,"hc1r_emmc_mode_mut","","0x28 - Host Control 1",2209,[[],["hc1r_emmc_mode",6]]],[11,"hc1r","","0x28 - Host Control 1",2209,[[],["hc1r",6]]],[11,"hc1r_mut","","0x28 - Host Control 1",2209,[[],["hc1r",6]]],[11,"bgcr_emmc_mode","","0x2a - Block Gap Control",2209,[[],["bgcr_emmc_mode",6]]],[11,"bgcr_emmc_mode_mut","","0x2a - Block Gap Control",2209,[[],["bgcr_emmc_mode",6]]],[11,"bgcr","","0x2a - Block Gap Control",2209,[[],["bgcr",6]]],[11,"bgcr_mut","","0x2a - Block Gap Control",2209,[[],["bgcr",6]]],[11,"nistr_emmc_mode","","0x30 - Normal Interrupt Status",2209,[[],["nistr_emmc_mode",6]]],[11,"nistr_emmc_mode_mut","","0x30 - Normal Interrupt Status",2209,[[],["nistr_emmc_mode",6]]],[11,"nistr","","0x30 - Normal Interrupt Status",2209,[[],["nistr",6]]],[11,"nistr_mut","","0x30 - Normal Interrupt Status",2209,[[],["nistr",6]]],[11,"eistr_emmc_mode","","0x32 - Error Interrupt Status",2209,[[],["eistr_emmc_mode",6]]],[11,"eistr_emmc_mode_mut","","0x32 - Error Interrupt Status",2209,[[],["eistr_emmc_mode",6]]],[11,"eistr","","0x32 - Error Interrupt Status",2209,[[],["eistr",6]]],[11,"eistr_mut","","0x32 - Error Interrupt Status",2209,[[],["eistr",6]]],[11,"nister_emmc_mode","","0x34 - Normal Interrupt Status Enable",2209,[[],["nister_emmc_mode",6]]],[11,"nister_emmc_mode_mut","","0x34 - Normal Interrupt Status Enable",2209,[[],["nister_emmc_mode",6]]],[11,"nister","","0x34 - Normal Interrupt Status Enable",2209,[[],["nister",6]]],[11,"nister_mut","","0x34 - Normal Interrupt Status Enable",2209,[[],["nister",6]]],[11,"eister_emmc_mode","","0x36 - Error Interrupt Status Enable",2209,[[],["eister_emmc_mode",6]]],[11,"eister_emmc_mode_mut","","0x36 - Error Interrupt Status Enable",2209,[[],["eister_emmc_mode",6]]],[11,"eister","","0x36 - Error Interrupt Status Enable",2209,[[],["eister",6]]],[11,"eister_mut","","0x36 - Error Interrupt Status Enable",2209,[[],["eister",6]]],[11,"nisier_emmc_mode","","0x38 - Normal Interrupt Signal Enable",2209,[[],["nisier_emmc_mode",6]]],[11,"nisier_emmc_mode_mut","","0x38 - Normal Interrupt Signal Enable",2209,[[],["nisier_emmc_mode",6]]],[11,"nisier","","0x38 - Normal Interrupt Signal Enable",2209,[[],["nisier",6]]],[11,"nisier_mut","","0x38 - Normal Interrupt Signal Enable",2209,[[],["nisier",6]]],[11,"eisier_emmc_mode","","0x3a - Error Interrupt Signal Enable",2209,[[],["eisier_emmc_mode",6]]],[11,"eisier_emmc_mode_mut","","0x3a - Error Interrupt Signal Enable",2209,[[],["eisier_emmc_mode",6]]],[11,"eisier","","0x3a - Error Interrupt Signal Enable",2209,[[],["eisier",6]]],[11,"eisier_mut","","0x3a - Error Interrupt Signal Enable",2209,[[],["eisier",6]]],[11,"hc2r_emmc_mode","","0x3e - Host Control 2",2209,[[],["hc2r_emmc_mode",6]]],[11,"hc2r_emmc_mode_mut","","0x3e - Host Control 2",2209,[[],["hc2r_emmc_mode",6]]],[11,"hc2r","","0x3e - Host Control 2",2209,[[],["hc2r",6]]],[11,"hc2r_mut","","0x3e - Host Control 2",2209,[[],["hc2r",6]]],[0,"sercom0","atsamd51g","Serial Communication Interface",null,null],[3,"RegisterBlock","atsamd51g::sercom0","Register block",null,null],[3,"I2CM","","Register block",null,null],[12,"ctrla","","0x00 - I2CM Control A",2944,null],[12,"ctrlb","","0x04 - I2CM Control B",2944,null],[12,"ctrlc","","0x08 - I2CM Control C",2944,null],[12,"baud","","0x0c - I2CM Baud Rate",2944,null],[12,"intenclr","","0x14 - I2CM Interrupt Enable Clear",2944,null],[12,"intenset","","0x16 - I2CM Interrupt Enable Set",2944,null],[12,"intflag","","0x18 - I2CM Interrupt Flag Status and Clear",2944,null],[12,"status","","0x1a - I2CM Status",2944,null],[12,"syncbusy","","0x1c - I2CM Synchronization Busy",2944,null],[12,"addr","","0x24 - I2CM Address",2944,null],[12,"data","","0x28 - I2CM Data",2944,null],[12,"dbgctrl","","0x30 - I2CM Debug Control",2944,null],[3,"I2CS","","Register block",null,null],[12,"ctrla","","0x00 - I2CS Control A",2945,null],[12,"ctrlb","","0x04 - I2CS Control B",2945,null],[12,"ctrlc","","0x08 - I2CS Control C",2945,null],[12,"intenclr","","0x14 - I2CS Interrupt Enable Clear",2945,null],[12,"intenset","","0x16 - I2CS Interrupt Enable Set",2945,null],[12,"intflag","","0x18 - I2CS Interrupt Flag Status and Clear",2945,null],[12,"status","","0x1a - I2CS Status",2945,null],[12,"syncbusy","","0x1c - I2CS Synchronization Busy",2945,null],[12,"length","","0x22 - I2CS Length",2945,null],[12,"addr","","0x24 - I2CS Address",2945,null],[12,"data","","0x28 - I2CS Data",2945,null],[3,"SPIS","","Register block",null,null],[12,"ctrla","","0x00 - SPIS Control A",2946,null],[12,"ctrlb","","0x04 - SPIS Control B",2946,null],[12,"ctrlc","","0x08 - SPIS Control C",2946,null],[12,"baud","","0x0c - SPIS Baud Rate",2946,null],[12,"intenclr","","0x14 - SPIS Interrupt Enable Clear",2946,null],[12,"intenset","","0x16 - SPIS Interrupt Enable Set",2946,null],[12,"intflag","","0x18 - SPIS Interrupt Flag Status and Clear",2946,null],[12,"status","","0x1a - SPIS Status",2946,null],[12,"syncbusy","","0x1c - SPIS Synchronization Busy",2946,null],[12,"length","","0x22 - SPIS Length",2946,null],[12,"addr","","0x24 - SPIS Address",2946,null],[12,"data","","0x28 - SPIS Data",2946,null],[12,"dbgctrl","","0x30 - SPIS Debug Control",2946,null],[3,"SPIM","","Register block",null,null],[12,"ctrla","","0x00 - SPIM Control A",2947,null],[12,"ctrlb","","0x04 - SPIM Control B",2947,null],[12,"ctrlc","","0x08 - SPIM Control C",2947,null],[12,"baud","","0x0c - SPIM Baud Rate",2947,null],[12,"intenclr","","0x14 - SPIM Interrupt Enable Clear",2947,null],[12,"intenset","","0x16 - SPIM Interrupt Enable Set",2947,null],[12,"intflag","","0x18 - SPIM Interrupt Flag Status and Clear",2947,null],[12,"status","","0x1a - SPIM Status",2947,null],[12,"syncbusy","","0x1c - SPIM Synchronization Busy",2947,null],[12,"length","","0x22 - SPIM Length",2947,null],[12,"addr","","0x24 - SPIM Address",2947,null],[12,"data","","0x28 - SPIM Data",2947,null],[12,"dbgctrl","","0x30 - SPIM Debug Control",2947,null],[3,"USART_EXT","","Register block",null,null],[12,"ctrla","","0x00 - USART_EXT Control A",2948,null],[12,"ctrlb","","0x04 - USART_EXT Control B",2948,null],[12,"ctrlc","","0x08 - USART_EXT Control C",2948,null],[12,"rxpl","","0x0e - USART_EXT Receive Pulse Length",2948,null],[12,"intenclr","","0x14 - USART_EXT Interrupt Enable Clear",2948,null],[12,"intenset","","0x16 - USART_EXT Interrupt Enable Set",2948,null],[12,"intflag","","0x18 - USART_EXT Interrupt Flag Status and Clear",2948,null],[12,"status","","0x1a - USART_EXT Status",2948,null],[12,"syncbusy","","0x1c - USART_EXT Synchronization Busy",2948,null],[12,"rxerrcnt","","0x20 - USART_EXT Receive Error Count",2948,null],[12,"length","","0x22 - USART_EXT Length",2948,null],[12,"data","","0x28 - USART_EXT Data",2948,null],[12,"dbgctrl","","0x30 - USART_EXT Debug Control",2948,null],[3,"USART_INT","","Register block",null,null],[12,"ctrla","","0x00 - USART_INT Control A",2949,null],[12,"ctrlb","","0x04 - USART_INT Control B",2949,null],[12,"ctrlc","","0x08 - USART_INT Control C",2949,null],[12,"rxpl","","0x0e - USART_INT Receive Pulse Length",2949,null],[12,"intenclr","","0x14 - USART_INT Interrupt Enable Clear",2949,null],[12,"intenset","","0x16 - USART_INT Interrupt Enable Set",2949,null],[12,"intflag","","0x18 - USART_INT Interrupt Flag Status and Clear",2949,null],[12,"status","","0x1a - USART_INT Status",2949,null],[12,"syncbusy","","0x1c - USART_INT Synchronization Busy",2949,null],[12,"rxerrcnt","","0x20 - USART_INT Receive Error Count",2949,null],[12,"length","","0x22 - USART_INT Length",2949,null],[12,"data","","0x28 - USART_INT Data",2949,null],[12,"dbgctrl","","0x30 - USART_INT Debug Control",2949,null],[0,"i2cm","","Register block I2C Master Mode",null,null],[0,"ctrla","atsamd51g::sercom0::i2cm","I2CM Control A",null,null],[3,"SWRST_W","atsamd51g::sercom0::i2cm::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PINOUT_W","","Write proxy for field `PINOUT`",null,null],[3,"SDAHOLD_W","","Write proxy for field `SDAHOLD`",null,null],[3,"MEXTTOEN_W","","Write proxy for field `MEXTTOEN`",null,null],[3,"SEXTTOEN_W","","Write proxy for field `SEXTTOEN`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"SCLSM_W","","Write proxy for field `SCLSM`",null,null],[3,"INACTOUT_W","","Write proxy for field `INACTOUT`",null,null],[3,"LOWTOUTEN_W","","Write proxy for field `LOWTOUTEN`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART with external clock",2950,null],[13,"USART_INT_CLK","","1: USART with internal clock",2950,null],[13,"SPI_SLAVE","","2: SPI in slave operation",2950,null],[13,"SPI_MASTER","","3: SPI in master operation",2950,null],[13,"I2C_SLAVE","","4: I2C slave operation",2950,null],[13,"I2C_MASTER","","5: I2C master operation",2950,null],[4,"SDAHOLD_A","","SDA Hold Time",null,null],[13,"DISABLE","","0: Disabled",2951,null],[13,"_75NS","","1: 50-100ns hold time",2951,null],[13,"_450NS","","2: 300-600ns hold time",2951,null],[13,"_600NS","","3: 400-800ns hold time",2951,null],[4,"SPEED_A","","Transfer Speed",null,null],[13,"STANDARD_AND_FAST_MODE","","0: Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto…",2952,null],[13,"FASTPLUS_MODE","","1: Fast-mode Plus Upto 1MHz",2952,null],[13,"HIGH_SPEED_MODE","","2: High-speed mode Upto 3.4MHz",2952,null],[4,"INACTOUT_A","","Inactive Time-Out",null,null],[13,"DISABLE","","0: Disabled",2953,null],[13,"_55US","","1: 5-6 SCL Time-Out(50-60us)",2953,null],[13,"_105US","","2: 10-11 SCL Time-Out(100-110us)",2953,null],[13,"_205US","","3: 20-21 SCL Time-Out(200-210us)",2953,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PINOUT_R","","Reader of field `PINOUT`",null,null],[6,"SDAHOLD_R","","Reader of field `SDAHOLD`",null,null],[6,"MEXTTOEN_R","","Reader of field `MEXTTOEN`",null,null],[6,"SEXTTOEN_R","","Reader of field `SEXTTOEN`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"SCLSM_R","","Reader of field `SCLSM`",null,null],[6,"INACTOUT_R","","Reader of field `INACTOUT`",null,null],[6,"LOWTOUTEN_R","","Reader of field `LOWTOUTEN`",null,null],[11,"set_bit","","Sets the field bit",2954,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2954,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2954,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2955,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2955,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2955,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cm::ctrla","Get enumerated values variant",2956,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",2956,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",2956,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",2956,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",2956,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",2956,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",2956,[[]]],[11,"variant","","Writes `variant` to the field",2957,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART with external clock",2957,[[],["w",6]]],[11,"usart_int_clk","","USART with internal clock",2957,[[],["w",6]]],[11,"spi_slave","","SPI in slave operation",2957,[[],["w",6]]],[11,"spi_master","","SPI in master operation",2957,[[],["w",6]]],[11,"i2c_slave","","I2C slave operation",2957,[[],["w",6]]],[11,"i2c_master","","I2C master operation",2957,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2957,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2958,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2958,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2958,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2959,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2959,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2959,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdahold_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_75ns","","Checks if the value of the field is `_75NS`",6,[[]]],[11,"is_450ns","","Checks if the value of the field is `_450NS`",6,[[]]],[11,"is_600ns","","Checks if the value of the field is `_600NS`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cm::ctrla","Get enumerated values variant",2960,[[],["sdahold_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2960,[[]]],[11,"is_75ns","","Checks if the value of the field is `_75NS`",2960,[[]]],[11,"is_450ns","","Checks if the value of the field is `_450NS`",2960,[[]]],[11,"is_600ns","","Checks if the value of the field is `_600NS`",2960,[[]]],[11,"variant","","Writes `variant` to the field",2961,[[["sdahold_a",4]],["w",6]]],[11,"disable","","Disabled",2961,[[],["w",6]]],[11,"_75ns","","50-100ns hold time",2961,[[],["w",6]]],[11,"_450ns","","300-600ns hold time",2961,[[],["w",6]]],[11,"_600ns","","400-800ns hold time",2961,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2961,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2962,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2962,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2962,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2963,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2963,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2963,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["speed_a",4]]]],[11,"is_standard_and_fast_mode","","Checks if the value of the field is `STANDARD_AND_FAST_MODE`",6,[[]]],[11,"is_fastplus_mode","","Checks if the value of the field is `FASTPLUS_MODE`",6,[[]]],[11,"is_high_speed_mode","","Checks if the value of the field is `HIGH_SPEED_MODE`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cm::ctrla","Get enumerated values variant",2964,[[],[["variant",4],["speed_a",4]]]],[11,"is_standard_and_fast_mode","","Checks if the value of the field is `STANDARD_AND_FAST_MODE`",2964,[[]]],[11,"is_fastplus_mode","","Checks if the value of the field is `FASTPLUS_MODE`",2964,[[]]],[11,"is_high_speed_mode","","Checks if the value of the field is `HIGH_SPEED_MODE`",2964,[[]]],[11,"variant","","Writes `variant` to the field",2965,[[["speed_a",4]],["w",6]]],[11,"standard_and_fast_mode","","Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz",2965,[[],["w",6]]],[11,"fastplus_mode","","Fast-mode Plus Upto 1MHz",2965,[[],["w",6]]],[11,"high_speed_mode","","High-speed mode Upto 3.4MHz",2965,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2965,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2966,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2966,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2966,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["inactout_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_55us","","Checks if the value of the field is `_55US`",6,[[]]],[11,"is_105us","","Checks if the value of the field is `_105US`",6,[[]]],[11,"is_205us","","Checks if the value of the field is `_205US`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cm::ctrla","Get enumerated values variant",2967,[[],["inactout_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",2967,[[]]],[11,"is_55us","","Checks if the value of the field is `_55US`",2967,[[]]],[11,"is_105us","","Checks if the value of the field is `_105US`",2967,[[]]],[11,"is_205us","","Checks if the value of the field is `_205US`",2967,[[]]],[11,"variant","","Writes `variant` to the field",2968,[[["inactout_a",4]],["w",6]]],[11,"disable","","Disabled",2968,[[],["w",6]]],[11,"_55us","","5-6 SCL Time-Out(50-60us)",2968,[[],["w",6]]],[11,"_105us","","10-11 SCL Time-Out(100-110us)",2968,[[],["w",6]]],[11,"_205us","","20-21 SCL Time-Out(200-210us)",2968,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2968,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2969,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2969,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2969,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",6,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",6,[[],["sdahold_r",6]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",6,[[],["mexttoen_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",6,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",6,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",6,[[],["sclsm_r",6]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",6,[[],["inactout_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",6,[[],["lowtouten_r",6]]],[11,"swrst","atsamd51g::sercom0::i2cm::ctrla","Bit 0 - Software Reset",2970,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",2970,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",2970,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run in Standby",2970,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",2970,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",2970,[[],["sdahold_r",6]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",2970,[[],["mexttoen_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",2970,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",2970,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",2970,[[],["sclsm_r",6]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",2970,[[],["inactout_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",2970,[[],["lowtouten_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",7,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",7,[[],["sdahold_w",3]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",7,[[],["mexttoen_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",7,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",7,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",7,[[],["sclsm_w",3]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",7,[[],["inactout_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",7,[[],["lowtouten_w",3]]],[11,"swrst","atsamd51g::sercom0::i2cm::ctrla","Bit 0 - Software Reset",2971,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",2971,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",2971,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run in Standby",2971,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",2971,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",2971,[[],["sdahold_w",3]]],[11,"mexttoen","","Bit 22 - Master SCL Low Extend Timeout",2971,[[],["mexttoen_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",2971,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",2971,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",2971,[[],["sclsm_w",3]]],[11,"inactout","","Bits 28:29 - Inactive Time-Out",2971,[[],["inactout_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",2971,[[],["lowtouten_w",3]]],[0,"ctrlb","atsamd51g::sercom0::i2cm","I2CM Control B",null,null],[3,"SMEN_W","atsamd51g::sercom0::i2cm::ctrlb","Write proxy for field `SMEN`",null,null],[3,"QCEN_W","","Write proxy for field `QCEN`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[3,"ACKACT_W","","Write proxy for field `ACKACT`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"SMEN_R","","Reader of field `SMEN`",null,null],[6,"QCEN_R","","Reader of field `QCEN`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[6,"ACKACT_R","","Reader of field `ACKACT`",null,null],[11,"set_bit","","Sets the field bit",2972,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2972,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2972,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2973,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2973,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2973,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2974,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2975,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2975,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2975,[[],["w",6]]],[11,"smen","atsamd51g::generic","Bit 8 - Smart Mode Enable",6,[[],["smen_r",6]]],[11,"qcen","","Bit 9 - Quick Command Enable",6,[[],["qcen_r",6]]],[11,"cmd","","Bits 16:17 - Command",6,[[],["cmd_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",6,[[],["ackact_r",6]]],[11,"smen","atsamd51g::sercom0::i2cm::ctrlb","Bit 8 - Smart Mode Enable",2976,[[],["smen_r",6]]],[11,"qcen","","Bit 9 - Quick Command Enable",2976,[[],["qcen_r",6]]],[11,"cmd","","Bits 16:17 - Command",2976,[[],["cmd_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",2976,[[],["ackact_r",6]]],[11,"smen","atsamd51g::generic","Bit 8 - Smart Mode Enable",7,[[],["smen_w",3]]],[11,"qcen","","Bit 9 - Quick Command Enable",7,[[],["qcen_w",3]]],[11,"cmd","","Bits 16:17 - Command",7,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",7,[[],["ackact_w",3]]],[11,"smen","atsamd51g::sercom0::i2cm::ctrlb","Bit 8 - Smart Mode Enable",2977,[[],["smen_w",3]]],[11,"qcen","","Bit 9 - Quick Command Enable",2977,[[],["qcen_w",3]]],[11,"cmd","","Bits 16:17 - Command",2977,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",2977,[[],["ackact_w",3]]],[0,"ctrlc","atsamd51g::sercom0::i2cm","I2CM Control C",null,null],[3,"DATA32B_W","atsamd51g::sercom0::i2cm::ctrlc","Write proxy for field `DATA32B`",null,null],[4,"DATA32B_A","","Data 32 Bit",null,null],[13,"DATA_TRANS_8BIT","","0: Data transaction from/to DATA register are 8-bit",2978,null],[13,"DATA_TRANS_32BIT","","1: Data transaction from/to DATA register are 32-bit",2978,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"DATA32B_R","","Reader of field `DATA32B`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",6,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cm::ctrlc","Get enumerated values variant",2979,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",2979,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",2979,[[]]],[11,"variant","","Writes `variant` to the field",2980,[[["data32b_a",4]],["w",6]]],[11,"data_trans_8bit","","Data transaction from/to DATA register are 8-bit",2980,[[],["w",6]]],[11,"data_trans_32bit","","Data transaction from/to DATA register are 32-bit",2980,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2980,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2980,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2980,[[],["w",6]]],[11,"data32b","atsamd51g::generic","Bit 24 - Data 32 Bit",6,[[],["data32b_r",6]]],[11,"data32b","atsamd51g::sercom0::i2cm::ctrlc","Bit 24 - Data 32 Bit",2981,[[],["data32b_r",6]]],[11,"data32b","atsamd51g::generic","Bit 24 - Data 32 Bit",7,[[],["data32b_w",3]]],[11,"data32b","atsamd51g::sercom0::i2cm::ctrlc","Bit 24 - Data 32 Bit",2982,[[],["data32b_w",3]]],[0,"baud","atsamd51g::sercom0::i2cm","I2CM Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::i2cm::baud","Write proxy for field `BAUD`",null,null],[3,"BAUDLOW_W","","Write proxy for field `BAUDLOW`",null,null],[3,"HSBAUD_W","","Write proxy for field `HSBAUD`",null,null],[3,"HSBAUDLOW_W","","Write proxy for field `HSBAUDLOW`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"BAUDLOW_R","","Reader of field `BAUDLOW`",null,null],[6,"HSBAUD_R","","Reader of field `HSBAUD`",null,null],[6,"HSBAUDLOW_R","","Reader of field `HSBAUDLOW`",null,null],[11,"bits","","Writes raw bits to the field",2983,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2984,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2985,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",2986,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",6,[[],["baudlow_r",6]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",6,[[],["hsbaud_r",6]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",6,[[],["hsbaudlow_r",6]]],[11,"baud","atsamd51g::sercom0::i2cm::baud","Bits 0:7 - Baud Rate Value",2987,[[],["baud_r",6]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",2987,[[],["baudlow_r",6]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",2987,[[],["hsbaud_r",6]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",2987,[[],["hsbaudlow_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",7,[[],["baudlow_w",3]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",7,[[],["hsbaud_w",3]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",7,[[],["hsbaudlow_w",3]]],[11,"baud","atsamd51g::sercom0::i2cm::baud","Bits 0:7 - Baud Rate Value",2988,[[],["baud_w",3]]],[11,"baudlow","","Bits 8:15 - Baud Rate Value Low",2988,[[],["baudlow_w",3]]],[11,"hsbaud","","Bits 16:23 - High Speed Baud Rate Value",2988,[[],["hsbaud_w",3]]],[11,"hsbaudlow","","Bits 24:31 - High Speed Baud Rate Value Low",2988,[[],["hsbaudlow_w",3]]],[0,"intenclr","atsamd51g::sercom0::i2cm","I2CM Interrupt Enable Clear",null,null],[3,"MB_W","atsamd51g::sercom0::i2cm::intenclr","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",2989,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2989,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2989,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2990,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2990,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2990,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2991,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2991,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2991,[[],["w",6]]],[11,"mb","atsamd51g::generic","Bit 0 - Master On Bus Interrupt Disable",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"mb","atsamd51g::sercom0::i2cm::intenclr","Bit 0 - Master On Bus Interrupt Disable",2992,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",2992,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",2992,[[],["error_r",6]]],[11,"mb","atsamd51g::generic","Bit 0 - Master On Bus Interrupt Disable",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"mb","atsamd51g::sercom0::i2cm::intenclr","Bit 0 - Master On Bus Interrupt Disable",2993,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Disable",2993,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",2993,[[],["error_w",3]]],[0,"intenset","atsamd51g::sercom0::i2cm","I2CM Interrupt Enable Set",null,null],[3,"MB_W","atsamd51g::sercom0::i2cm::intenset","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",2994,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2994,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2994,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2995,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2995,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2995,[[],["w",6]]],[11,"set_bit","","Sets the field bit",2996,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2996,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2996,[[],["w",6]]],[11,"mb","atsamd51g::generic","Bit 0 - Master On Bus Interrupt Enable",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"mb","atsamd51g::sercom0::i2cm::intenset","Bit 0 - Master On Bus Interrupt Enable",2997,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",2997,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",2997,[[],["error_r",6]]],[11,"mb","atsamd51g::generic","Bit 0 - Master On Bus Interrupt Enable",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"mb","atsamd51g::sercom0::i2cm::intenset","Bit 0 - Master On Bus Interrupt Enable",2998,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt Enable",2998,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",2998,[[],["error_w",3]]],[0,"intflag","atsamd51g::sercom0::i2cm","I2CM Interrupt Flag Status and Clear",null,null],[3,"MB_W","atsamd51g::sercom0::i2cm::intflag","Write proxy for field `MB`",null,null],[3,"SB_W","","Write proxy for field `SB`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"MB_R","","Reader of field `MB`",null,null],[6,"SB_R","","Reader of field `SB`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",2999,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",2999,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",2999,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3000,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3000,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3000,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3001,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3001,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3001,[[],["w",6]]],[11,"mb","atsamd51g::generic","Bit 0 - Master On Bus Interrupt",6,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",6,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"mb","atsamd51g::sercom0::i2cm::intflag","Bit 0 - Master On Bus Interrupt",3002,[[],["mb_r",6]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",3002,[[],["sb_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",3002,[[],["error_r",6]]],[11,"mb","atsamd51g::generic","Bit 0 - Master On Bus Interrupt",7,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",7,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"mb","atsamd51g::sercom0::i2cm::intflag","Bit 0 - Master On Bus Interrupt",3003,[[],["mb_w",3]]],[11,"sb","","Bit 1 - Slave On Bus Interrupt",3003,[[],["sb_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",3003,[[],["error_w",3]]],[0,"status","atsamd51g::sercom0::i2cm","I2CM Status",null,null],[3,"BUSERR_W","atsamd51g::sercom0::i2cm::status","Write proxy for field `BUSERR`",null,null],[3,"ARBLOST_W","","Write proxy for field `ARBLOST`",null,null],[3,"RXNACK_W","","Write proxy for field `RXNACK`",null,null],[3,"BUSSTATE_W","","Write proxy for field `BUSSTATE`",null,null],[3,"LOWTOUT_W","","Write proxy for field `LOWTOUT`",null,null],[3,"CLKHOLD_W","","Write proxy for field `CLKHOLD`",null,null],[3,"MEXTTOUT_W","","Write proxy for field `MEXTTOUT`",null,null],[3,"SEXTTOUT_W","","Write proxy for field `SEXTTOUT`",null,null],[3,"LENERR_W","","Write proxy for field `LENERR`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSERR_R","","Reader of field `BUSERR`",null,null],[6,"ARBLOST_R","","Reader of field `ARBLOST`",null,null],[6,"RXNACK_R","","Reader of field `RXNACK`",null,null],[6,"BUSSTATE_R","","Reader of field `BUSSTATE`",null,null],[6,"LOWTOUT_R","","Reader of field `LOWTOUT`",null,null],[6,"CLKHOLD_R","","Reader of field `CLKHOLD`",null,null],[6,"MEXTTOUT_R","","Reader of field `MEXTTOUT`",null,null],[6,"SEXTTOUT_R","","Reader of field `SEXTTOUT`",null,null],[6,"LENERR_R","","Reader of field `LENERR`",null,null],[11,"set_bit","","Sets the field bit",3004,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3004,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3004,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3005,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3005,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3005,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3006,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3006,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3006,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3007,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3008,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3008,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3008,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3009,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3009,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3009,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3010,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3010,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3010,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3011,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3011,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3011,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3012,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3012,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3012,[[],["w",6]]],[11,"buserr","atsamd51g::generic","Bit 0 - Bus Error",6,[[],["buserr_r",6]]],[11,"arblost","","Bit 1 - Arbitration Lost",6,[[],["arblost_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",6,[[],["rxnack_r",6]]],[11,"busstate","","Bits 4:5 - Bus State",6,[[],["busstate_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",6,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",6,[[],["clkhold_r",6]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",6,[[],["mexttout_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",6,[[],["sexttout_r",6]]],[11,"lenerr","","Bit 10 - Length Error",6,[[],["lenerr_r",6]]],[11,"buserr","atsamd51g::sercom0::i2cm::status","Bit 0 - Bus Error",3013,[[],["buserr_r",6]]],[11,"arblost","","Bit 1 - Arbitration Lost",3013,[[],["arblost_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",3013,[[],["rxnack_r",6]]],[11,"busstate","","Bits 4:5 - Bus State",3013,[[],["busstate_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",3013,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",3013,[[],["clkhold_r",6]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",3013,[[],["mexttout_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",3013,[[],["sexttout_r",6]]],[11,"lenerr","","Bit 10 - Length Error",3013,[[],["lenerr_r",6]]],[11,"buserr","atsamd51g::generic","Bit 0 - Bus Error",7,[[],["buserr_w",3]]],[11,"arblost","","Bit 1 - Arbitration Lost",7,[[],["arblost_w",3]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",7,[[],["rxnack_w",3]]],[11,"busstate","","Bits 4:5 - Bus State",7,[[],["busstate_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",7,[[],["lowtout_w",3]]],[11,"clkhold","","Bit 7 - Clock Hold",7,[[],["clkhold_w",3]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",7,[[],["mexttout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",7,[[],["sexttout_w",3]]],[11,"lenerr","","Bit 10 - Length Error",7,[[],["lenerr_w",3]]],[11,"buserr","atsamd51g::sercom0::i2cm::status","Bit 0 - Bus Error",3014,[[],["buserr_w",3]]],[11,"arblost","","Bit 1 - Arbitration Lost",3014,[[],["arblost_w",3]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",3014,[[],["rxnack_w",3]]],[11,"busstate","","Bits 4:5 - Bus State",3014,[[],["busstate_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",3014,[[],["lowtout_w",3]]],[11,"clkhold","","Bit 7 - Clock Hold",3014,[[],["clkhold_w",3]]],[11,"mexttout","","Bit 8 - Master SCL Low Extend Timeout",3014,[[],["mexttout_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",3014,[[],["sexttout_w",3]]],[11,"lenerr","","Bit 10 - Length Error",3014,[[],["lenerr_w",3]]],[0,"syncbusy","atsamd51g::sercom0::i2cm","I2CM Synchronization Busy",null,null],[6,"R","atsamd51g::sercom0::i2cm::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SYSOP_R","","Reader of field `SYSOP`",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"sysop","","Bit 2 - System Operation Synchronization Busy",6,[[],["sysop_r",6]]],[11,"length","","Bit 4 - Length Synchronization Busy",6,[[],["length_r",6]]],[11,"swrst","atsamd51g::sercom0::i2cm::syncbusy","Bit 0 - Software Reset Synchronization Busy",3015,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",3015,[[],["enable_r",6]]],[11,"sysop","","Bit 2 - System Operation Synchronization Busy",3015,[[],["sysop_r",6]]],[11,"length","","Bit 4 - Length Synchronization Busy",3015,[[],["length_r",6]]],[0,"addr","atsamd51g::sercom0::i2cm","I2CM Address",null,null],[3,"ADDR_W","atsamd51g::sercom0::i2cm::addr","Write proxy for field `ADDR`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[3,"HS_W","","Write proxy for field `HS`",null,null],[3,"TENBITEN_W","","Write proxy for field `TENBITEN`",null,null],[3,"LEN_W","","Write proxy for field `LEN`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[6,"HS_R","","Reader of field `HS`",null,null],[6,"TENBITEN_R","","Reader of field `TENBITEN`",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[11,"bits","","Writes raw bits to the field",3016,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3017,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3017,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3017,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3018,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3018,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3018,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3019,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3019,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3019,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3020,[[],["w",6]]],[11,"addr","atsamd51g::generic","Bits 0:10 - Address Value",6,[[],["addr_r",6]]],[11,"lenen","","Bit 13 - Length Enable",6,[[],["lenen_r",6]]],[11,"hs","","Bit 14 - High Speed Mode",6,[[],["hs_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",6,[[],["tenbiten_r",6]]],[11,"len","","Bits 16:23 - Length",6,[[],["len_r",6]]],[11,"addr","atsamd51g::sercom0::i2cm::addr","Bits 0:10 - Address Value",3021,[[],["addr_r",6]]],[11,"lenen","","Bit 13 - Length Enable",3021,[[],["lenen_r",6]]],[11,"hs","","Bit 14 - High Speed Mode",3021,[[],["hs_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",3021,[[],["tenbiten_r",6]]],[11,"len","","Bits 16:23 - Length",3021,[[],["len_r",6]]],[11,"addr","atsamd51g::generic","Bits 0:10 - Address Value",7,[[],["addr_w",3]]],[11,"lenen","","Bit 13 - Length Enable",7,[[],["lenen_w",3]]],[11,"hs","","Bit 14 - High Speed Mode",7,[[],["hs_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",7,[[],["tenbiten_w",3]]],[11,"len","","Bits 16:23 - Length",7,[[],["len_w",3]]],[11,"addr","atsamd51g::sercom0::i2cm::addr","Bits 0:10 - Address Value",3022,[[],["addr_w",3]]],[11,"lenen","","Bit 13 - Length Enable",3022,[[],["lenen_w",3]]],[11,"hs","","Bit 14 - High Speed Mode",3022,[[],["hs_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",3022,[[],["tenbiten_w",3]]],[11,"len","","Bits 16:23 - Length",3022,[[],["len_w",3]]],[0,"data","atsamd51g::sercom0::i2cm","I2CM Data",null,null],[3,"DATA_W","atsamd51g::sercom0::i2cm::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",3023,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:7 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd51g::sercom0::i2cm::data","Bits 0:7 - Data Value",3024,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:7 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd51g::sercom0::i2cm::data","Bits 0:7 - Data Value",3025,[[],["data_w",3]]],[0,"dbgctrl","atsamd51g::sercom0::i2cm","I2CM Debug Control",null,null],[3,"DBGSTOP_W","atsamd51g::sercom0::i2cm::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",3026,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3026,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3026,[[],["w",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::sercom0::i2cm::dbgctrl","Bit 0 - Debug Mode",3027,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd51g::sercom0::i2cm::dbgctrl","Bit 0 - Debug Mode",3028,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd51g::sercom0::i2cm","I2CM Control A",null,null],[6,"CTRLB","","I2CM Control B",null,null],[6,"CTRLC","","I2CM Control C",null,null],[6,"BAUD","","I2CM Baud Rate",null,null],[6,"INTENCLR","","I2CM Interrupt Enable Clear",null,null],[6,"INTENSET","","I2CM Interrupt Enable Set",null,null],[6,"INTFLAG","","I2CM Interrupt Flag Status and Clear",null,null],[6,"STATUS","","I2CM Status",null,null],[6,"SYNCBUSY","","I2CM Synchronization Busy",null,null],[6,"ADDR","","I2CM Address",null,null],[6,"DATA","","I2CM Data",null,null],[6,"DBGCTRL","","I2CM Debug Control",null,null],[0,"i2cs","atsamd51g::sercom0","Register block I2C Slave Mode",null,null],[0,"ctrla","atsamd51g::sercom0::i2cs","I2CS Control A",null,null],[3,"SWRST_W","atsamd51g::sercom0::i2cs::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PINOUT_W","","Write proxy for field `PINOUT`",null,null],[3,"SDAHOLD_W","","Write proxy for field `SDAHOLD`",null,null],[3,"SEXTTOEN_W","","Write proxy for field `SEXTTOEN`",null,null],[3,"SPEED_W","","Write proxy for field `SPEED`",null,null],[3,"SCLSM_W","","Write proxy for field `SCLSM`",null,null],[3,"LOWTOUTEN_W","","Write proxy for field `LOWTOUTEN`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART with external clock",3029,null],[13,"USART_INT_CLK","","1: USART with internal clock",3029,null],[13,"SPI_SLAVE","","2: SPI in slave operation",3029,null],[13,"SPI_MASTER","","3: SPI in master operation",3029,null],[13,"I2C_SLAVE","","4: I2C slave operation",3029,null],[13,"I2C_MASTER","","5: I2C master operation",3029,null],[4,"SDAHOLD_A","","SDA Hold Time",null,null],[13,"DISABLE","","0: Disabled",3030,null],[13,"_75NS","","1: 50-100ns hold time",3030,null],[13,"_450NS","","2: 300-600ns hold time",3030,null],[13,"_600NS","","3: 400-800ns hold time",3030,null],[4,"SPEED_A","","Transfer Speed",null,null],[13,"STANDARD_AND_FAST_MODE","","0: Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto…",3031,null],[13,"FASTPLUS_MODE","","1: Fast-mode Plus Upto 1MHz",3031,null],[13,"HIGH_SPEED_MODE","","2: High-speed mode Upto 3.4MHz",3031,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PINOUT_R","","Reader of field `PINOUT`",null,null],[6,"SDAHOLD_R","","Reader of field `SDAHOLD`",null,null],[6,"SEXTTOEN_R","","Reader of field `SEXTTOEN`",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"SCLSM_R","","Reader of field `SCLSM`",null,null],[6,"LOWTOUTEN_R","","Reader of field `LOWTOUTEN`",null,null],[11,"set_bit","","Sets the field bit",3032,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3032,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3032,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3033,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3033,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3033,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cs::ctrla","Get enumerated values variant",3034,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",3034,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",3034,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",3034,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",3034,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",3034,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",3034,[[]]],[11,"variant","","Writes `variant` to the field",3035,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART with external clock",3035,[[],["w",6]]],[11,"usart_int_clk","","USART with internal clock",3035,[[],["w",6]]],[11,"spi_slave","","SPI in slave operation",3035,[[],["w",6]]],[11,"spi_master","","SPI in master operation",3035,[[],["w",6]]],[11,"i2c_slave","","I2C slave operation",3035,[[],["w",6]]],[11,"i2c_master","","I2C master operation",3035,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3036,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3037,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3037,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3037,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sdahold_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_75ns","","Checks if the value of the field is `_75NS`",6,[[]]],[11,"is_450ns","","Checks if the value of the field is `_450NS`",6,[[]]],[11,"is_600ns","","Checks if the value of the field is `_600NS`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cs::ctrla","Get enumerated values variant",3038,[[],["sdahold_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3038,[[]]],[11,"is_75ns","","Checks if the value of the field is `_75NS`",3038,[[]]],[11,"is_450ns","","Checks if the value of the field is `_450NS`",3038,[[]]],[11,"is_600ns","","Checks if the value of the field is `_600NS`",3038,[[]]],[11,"variant","","Writes `variant` to the field",3039,[[["sdahold_a",4]],["w",6]]],[11,"disable","","Disabled",3039,[[],["w",6]]],[11,"_75ns","","50-100ns hold time",3039,[[],["w",6]]],[11,"_450ns","","300-600ns hold time",3039,[[],["w",6]]],[11,"_600ns","","400-800ns hold time",3039,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3040,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["speed_a",4],["variant",4]]]],[11,"is_standard_and_fast_mode","","Checks if the value of the field is `STANDARD_AND_FAST_MODE`",6,[[]]],[11,"is_fastplus_mode","","Checks if the value of the field is `FASTPLUS_MODE`",6,[[]]],[11,"is_high_speed_mode","","Checks if the value of the field is `HIGH_SPEED_MODE`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cs::ctrla","Get enumerated values variant",3041,[[],[["speed_a",4],["variant",4]]]],[11,"is_standard_and_fast_mode","","Checks if the value of the field is `STANDARD_AND_FAST_MODE`",3041,[[]]],[11,"is_fastplus_mode","","Checks if the value of the field is `FASTPLUS_MODE`",3041,[[]]],[11,"is_high_speed_mode","","Checks if the value of the field is `HIGH_SPEED_MODE`",3041,[[]]],[11,"variant","","Writes `variant` to the field",3042,[[["speed_a",4]],["w",6]]],[11,"standard_and_fast_mode","","Standard Mode(Sm) Upto 100kHz and Fast Mode(Fm) Upto 400kHz",3042,[[],["w",6]]],[11,"fastplus_mode","","Fast-mode Plus Upto 1MHz",3042,[[],["w",6]]],[11,"high_speed_mode","","High-speed mode Upto 3.4MHz",3042,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3042,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3043,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3043,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3043,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3044,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3044,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3044,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",6,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",6,[[],["sdahold_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",6,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",6,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",6,[[],["sclsm_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",6,[[],["lowtouten_r",6]]],[11,"swrst","atsamd51g::sercom0::i2cs::ctrla","Bit 0 - Software Reset",3045,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3045,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",3045,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",3045,[[],["runstdby_r",6]]],[11,"pinout","","Bit 16 - Pin Usage",3045,[[],["pinout_r",6]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",3045,[[],["sdahold_r",6]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",3045,[[],["sexttoen_r",6]]],[11,"speed","","Bits 24:25 - Transfer Speed",3045,[[],["speed_r",6]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",3045,[[],["sclsm_r",6]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",3045,[[],["lowtouten_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",7,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",7,[[],["sdahold_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",7,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",7,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",7,[[],["sclsm_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",7,[[],["lowtouten_w",3]]],[11,"swrst","atsamd51g::sercom0::i2cs::ctrla","Bit 0 - Software Reset",3046,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3046,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",3046,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",3046,[[],["runstdby_w",3]]],[11,"pinout","","Bit 16 - Pin Usage",3046,[[],["pinout_w",3]]],[11,"sdahold","","Bits 20:21 - SDA Hold Time",3046,[[],["sdahold_w",3]]],[11,"sexttoen","","Bit 23 - Slave SCL Low Extend Timeout",3046,[[],["sexttoen_w",3]]],[11,"speed","","Bits 24:25 - Transfer Speed",3046,[[],["speed_w",3]]],[11,"sclsm","","Bit 27 - SCL Clock Stretch Mode",3046,[[],["sclsm_w",3]]],[11,"lowtouten","","Bit 30 - SCL Low Timeout Enable",3046,[[],["lowtouten_w",3]]],[0,"ctrlb","atsamd51g::sercom0::i2cs","I2CS Control B",null,null],[3,"SMEN_W","atsamd51g::sercom0::i2cs::ctrlb","Write proxy for field `SMEN`",null,null],[3,"GCMD_W","","Write proxy for field `GCMD`",null,null],[3,"AACKEN_W","","Write proxy for field `AACKEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[3,"ACKACT_W","","Write proxy for field `ACKACT`",null,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"SMEN_R","","Reader of field `SMEN`",null,null],[6,"GCMD_R","","Reader of field `GCMD`",null,null],[6,"AACKEN_R","","Reader of field `AACKEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[6,"ACKACT_R","","Reader of field `ACKACT`",null,null],[11,"set_bit","","Sets the field bit",3047,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3047,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3047,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3048,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3048,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3048,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3049,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3049,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3049,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3050,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3051,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3052,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3052,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3052,[[],["w",6]]],[11,"smen","atsamd51g::generic","Bit 8 - Smart Mode Enable",6,[[],["smen_r",6]]],[11,"gcmd","","Bit 9 - PMBus Group Command",6,[[],["gcmd_r",6]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",6,[[],["aacken_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"cmd","","Bits 16:17 - Command",6,[[],["cmd_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",6,[[],["ackact_r",6]]],[11,"smen","atsamd51g::sercom0::i2cs::ctrlb","Bit 8 - Smart Mode Enable",3053,[[],["smen_r",6]]],[11,"gcmd","","Bit 9 - PMBus Group Command",3053,[[],["gcmd_r",6]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",3053,[[],["aacken_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",3053,[[],["amode_r",6]]],[11,"cmd","","Bits 16:17 - Command",3053,[[],["cmd_r",6]]],[11,"ackact","","Bit 18 - Acknowledge Action",3053,[[],["ackact_r",6]]],[11,"smen","atsamd51g::generic","Bit 8 - Smart Mode Enable",7,[[],["smen_w",3]]],[11,"gcmd","","Bit 9 - PMBus Group Command",7,[[],["gcmd_w",3]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",7,[[],["aacken_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"cmd","","Bits 16:17 - Command",7,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",7,[[],["ackact_w",3]]],[11,"smen","atsamd51g::sercom0::i2cs::ctrlb","Bit 8 - Smart Mode Enable",3054,[[],["smen_w",3]]],[11,"gcmd","","Bit 9 - PMBus Group Command",3054,[[],["gcmd_w",3]]],[11,"aacken","","Bit 10 - Automatic Address Acknowledge",3054,[[],["aacken_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",3054,[[],["amode_w",3]]],[11,"cmd","","Bits 16:17 - Command",3054,[[],["cmd_w",3]]],[11,"ackact","","Bit 18 - Acknowledge Action",3054,[[],["ackact_w",3]]],[0,"ctrlc","atsamd51g::sercom0::i2cs","I2CS Control C",null,null],[3,"SDASETUP_W","atsamd51g::sercom0::i2cs::ctrlc","Write proxy for field `SDASETUP`",null,null],[3,"DATA32B_W","","Write proxy for field `DATA32B`",null,null],[4,"DATA32B_A","","Data 32 Bit",null,null],[13,"DATA_TRANS_8BIT","","0: Data transaction from/to DATA register are 8-bit",3055,null],[13,"DATA_TRANS_32BIT","","1: Data transaction from/to DATA register are 32-bit",3055,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"SDASETUP_R","","Reader of field `SDASETUP`",null,null],[6,"DATA32B_R","","Reader of field `DATA32B`",null,null],[11,"bits","","Writes raw bits to the field",3056,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",6,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::i2cs::ctrlc","Get enumerated values variant",3057,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",3057,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",3057,[[]]],[11,"variant","","Writes `variant` to the field",3058,[[["data32b_a",4]],["w",6]]],[11,"data_trans_8bit","","Data transaction from/to DATA register are 8-bit",3058,[[],["w",6]]],[11,"data_trans_32bit","","Data transaction from/to DATA register are 32-bit",3058,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3058,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3058,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3058,[[],["w",6]]],[11,"sdasetup","atsamd51g::generic","Bits 0:3 - SDA Setup Time",6,[[],["sdasetup_r",6]]],[11,"data32b","","Bit 24 - Data 32 Bit",6,[[],["data32b_r",6]]],[11,"sdasetup","atsamd51g::sercom0::i2cs::ctrlc","Bits 0:3 - SDA Setup Time",3059,[[],["sdasetup_r",6]]],[11,"data32b","","Bit 24 - Data 32 Bit",3059,[[],["data32b_r",6]]],[11,"sdasetup","atsamd51g::generic","Bits 0:3 - SDA Setup Time",7,[[],["sdasetup_w",3]]],[11,"data32b","","Bit 24 - Data 32 Bit",7,[[],["data32b_w",3]]],[11,"sdasetup","atsamd51g::sercom0::i2cs::ctrlc","Bits 0:3 - SDA Setup Time",3060,[[],["sdasetup_w",3]]],[11,"data32b","","Bit 24 - Data 32 Bit",3060,[[],["data32b_w",3]]],[0,"intenclr","atsamd51g::sercom0::i2cs","I2CS Interrupt Enable Clear",null,null],[3,"PREC_W","atsamd51g::sercom0::i2cs::intenclr","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3061,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3061,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3061,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3062,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3062,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3062,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3063,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3063,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3063,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3064,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3064,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3064,[[],["w",6]]],[11,"prec","atsamd51g::generic","Bit 0 - Stop Received Interrupt Disable",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"prec","atsamd51g::sercom0::i2cs::intenclr","Bit 0 - Stop Received Interrupt Disable",3065,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",3065,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",3065,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3065,[[],["error_r",6]]],[11,"prec","atsamd51g::generic","Bit 0 - Stop Received Interrupt Disable",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"prec","atsamd51g::sercom0::i2cs::intenclr","Bit 0 - Stop Received Interrupt Disable",3066,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Disable",3066,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Disable",3066,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3066,[[],["error_w",3]]],[0,"intenset","atsamd51g::sercom0::i2cs","I2CS Interrupt Enable Set",null,null],[3,"PREC_W","atsamd51g::sercom0::i2cs::intenset","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3067,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3068,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3068,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3068,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3069,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3069,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3069,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3070,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3070,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3070,[[],["w",6]]],[11,"prec","atsamd51g::generic","Bit 0 - Stop Received Interrupt Enable",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"prec","atsamd51g::sercom0::i2cs::intenset","Bit 0 - Stop Received Interrupt Enable",3071,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",3071,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",3071,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3071,[[],["error_r",6]]],[11,"prec","atsamd51g::generic","Bit 0 - Stop Received Interrupt Enable",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"prec","atsamd51g::sercom0::i2cs::intenset","Bit 0 - Stop Received Interrupt Enable",3072,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt Enable",3072,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt Enable",3072,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3072,[[],["error_w",3]]],[0,"intflag","atsamd51g::sercom0::i2cs","I2CS Interrupt Flag Status and Clear",null,null],[3,"PREC_W","atsamd51g::sercom0::i2cs::intflag","Write proxy for field `PREC`",null,null],[3,"AMATCH_W","","Write proxy for field `AMATCH`",null,null],[3,"DRDY_W","","Write proxy for field `DRDY`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"PREC_R","","Reader of field `PREC`",null,null],[6,"AMATCH_R","","Reader of field `AMATCH`",null,null],[6,"DRDY_R","","Reader of field `DRDY`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3073,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3073,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3073,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3074,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3074,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3074,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3075,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3075,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3075,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3076,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3076,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3076,[[],["w",6]]],[11,"prec","atsamd51g::generic","Bit 0 - Stop Received Interrupt",6,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt",6,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt",6,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"prec","atsamd51g::sercom0::i2cs::intflag","Bit 0 - Stop Received Interrupt",3077,[[],["prec_r",6]]],[11,"amatch","","Bit 1 - Address Match Interrupt",3077,[[],["amatch_r",6]]],[11,"drdy","","Bit 2 - Data Interrupt",3077,[[],["drdy_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",3077,[[],["error_r",6]]],[11,"prec","atsamd51g::generic","Bit 0 - Stop Received Interrupt",7,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt",7,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt",7,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"prec","atsamd51g::sercom0::i2cs::intflag","Bit 0 - Stop Received Interrupt",3078,[[],["prec_w",3]]],[11,"amatch","","Bit 1 - Address Match Interrupt",3078,[[],["amatch_w",3]]],[11,"drdy","","Bit 2 - Data Interrupt",3078,[[],["drdy_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",3078,[[],["error_w",3]]],[0,"status","atsamd51g::sercom0::i2cs","I2CS Status",null,null],[3,"BUSERR_W","atsamd51g::sercom0::i2cs::status","Write proxy for field `BUSERR`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[3,"RXNACK_W","","Write proxy for field `RXNACK`",null,null],[3,"DIR_W","","Write proxy for field `DIR`",null,null],[3,"SR_W","","Write proxy for field `SR`",null,null],[3,"LOWTOUT_W","","Write proxy for field `LOWTOUT`",null,null],[3,"CLKHOLD_W","","Write proxy for field `CLKHOLD`",null,null],[3,"SEXTTOUT_W","","Write proxy for field `SEXTTOUT`",null,null],[3,"HS_W","","Write proxy for field `HS`",null,null],[3,"LENERR_W","","Write proxy for field `LENERR`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUSERR_R","","Reader of field `BUSERR`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[6,"RXNACK_R","","Reader of field `RXNACK`",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"SR_R","","Reader of field `SR`",null,null],[6,"LOWTOUT_R","","Reader of field `LOWTOUT`",null,null],[6,"CLKHOLD_R","","Reader of field `CLKHOLD`",null,null],[6,"SEXTTOUT_R","","Reader of field `SEXTTOUT`",null,null],[6,"HS_R","","Reader of field `HS`",null,null],[6,"LENERR_R","","Reader of field `LENERR`",null,null],[11,"set_bit","","Sets the field bit",3079,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3079,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3079,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3080,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3080,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3080,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3081,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3081,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3081,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3082,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3082,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3082,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3083,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3083,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3083,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3084,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3085,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3085,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3085,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3086,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3086,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3086,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3087,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3087,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3087,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3088,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3088,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3088,[[],["w",6]]],[11,"buserr","atsamd51g::generic","Bit 0 - Bus Error",6,[[],["buserr_r",6]]],[11,"coll","","Bit 1 - Transmit Collision",6,[[],["coll_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",6,[[],["rxnack_r",6]]],[11,"dir","","Bit 3 - Read/Write Direction",6,[[],["dir_r",6]]],[11,"sr","","Bit 4 - Repeated Start",6,[[],["sr_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",6,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",6,[[],["clkhold_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",6,[[],["sexttout_r",6]]],[11,"hs","","Bit 10 - High Speed",6,[[],["hs_r",6]]],[11,"lenerr","","Bit 11 - Transaction Length Error",6,[[],["lenerr_r",6]]],[11,"buserr","atsamd51g::sercom0::i2cs::status","Bit 0 - Bus Error",3089,[[],["buserr_r",6]]],[11,"coll","","Bit 1 - Transmit Collision",3089,[[],["coll_r",6]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",3089,[[],["rxnack_r",6]]],[11,"dir","","Bit 3 - Read/Write Direction",3089,[[],["dir_r",6]]],[11,"sr","","Bit 4 - Repeated Start",3089,[[],["sr_r",6]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",3089,[[],["lowtout_r",6]]],[11,"clkhold","","Bit 7 - Clock Hold",3089,[[],["clkhold_r",6]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",3089,[[],["sexttout_r",6]]],[11,"hs","","Bit 10 - High Speed",3089,[[],["hs_r",6]]],[11,"lenerr","","Bit 11 - Transaction Length Error",3089,[[],["lenerr_r",6]]],[11,"buserr","atsamd51g::generic","Bit 0 - Bus Error",7,[[],["buserr_w",3]]],[11,"coll","","Bit 1 - Transmit Collision",7,[[],["coll_w",3]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",7,[[],["rxnack_w",3]]],[11,"dir","","Bit 3 - Read/Write Direction",7,[[],["dir_w",3]]],[11,"sr","","Bit 4 - Repeated Start",7,[[],["sr_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",7,[[],["lowtout_w",3]]],[11,"clkhold","","Bit 7 - Clock Hold",7,[[],["clkhold_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",7,[[],["sexttout_w",3]]],[11,"hs","","Bit 10 - High Speed",7,[[],["hs_w",3]]],[11,"lenerr","","Bit 11 - Transaction Length Error",7,[[],["lenerr_w",3]]],[11,"buserr","atsamd51g::sercom0::i2cs::status","Bit 0 - Bus Error",3090,[[],["buserr_w",3]]],[11,"coll","","Bit 1 - Transmit Collision",3090,[[],["coll_w",3]]],[11,"rxnack","","Bit 2 - Received Not Acknowledge",3090,[[],["rxnack_w",3]]],[11,"dir","","Bit 3 - Read/Write Direction",3090,[[],["dir_w",3]]],[11,"sr","","Bit 4 - Repeated Start",3090,[[],["sr_w",3]]],[11,"lowtout","","Bit 6 - SCL Low Timeout",3090,[[],["lowtout_w",3]]],[11,"clkhold","","Bit 7 - Clock Hold",3090,[[],["clkhold_w",3]]],[11,"sexttout","","Bit 9 - Slave SCL Low Extend Timeout",3090,[[],["sexttout_w",3]]],[11,"hs","","Bit 10 - High Speed",3090,[[],["hs_w",3]]],[11,"lenerr","","Bit 11 - Transaction Length Error",3090,[[],["lenerr_w",3]]],[0,"syncbusy","atsamd51g::sercom0::i2cs","I2CS Synchronization Busy",null,null],[6,"R","atsamd51g::sercom0::i2cs::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"length","","Bit 4 - Length Synchronization Busy",6,[[],["length_r",6]]],[11,"swrst","atsamd51g::sercom0::i2cs::syncbusy","Bit 0 - Software Reset Synchronization Busy",3091,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",3091,[[],["enable_r",6]]],[11,"length","","Bit 4 - Length Synchronization Busy",3091,[[],["length_r",6]]],[0,"length","atsamd51g::sercom0::i2cs","I2CS Length",null,null],[3,"LEN_W","atsamd51g::sercom0::i2cs::length","Write proxy for field `LEN`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[11,"bits","","Writes raw bits to the field",3092,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3093,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3093,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3093,[[],["w",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",6,[[],["len_r",6]]],[11,"lenen","","Bit 8 - Data Length Enable",6,[[],["lenen_r",6]]],[11,"len","atsamd51g::sercom0::i2cs::length","Bits 0:7 - Data Length",3094,[[],["len_r",6]]],[11,"lenen","","Bit 8 - Data Length Enable",3094,[[],["lenen_r",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",7,[[],["len_w",3]]],[11,"lenen","","Bit 8 - Data Length Enable",7,[[],["lenen_w",3]]],[11,"len","atsamd51g::sercom0::i2cs::length","Bits 0:7 - Data Length",3095,[[],["len_w",3]]],[11,"lenen","","Bit 8 - Data Length Enable",3095,[[],["lenen_w",3]]],[0,"addr","atsamd51g::sercom0::i2cs","I2CS Address",null,null],[3,"GENCEN_W","atsamd51g::sercom0::i2cs::addr","Write proxy for field `GENCEN`",null,null],[3,"ADDR_W","","Write proxy for field `ADDR`",null,null],[3,"TENBITEN_W","","Write proxy for field `TENBITEN`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"GENCEN_R","","Reader of field `GENCEN`",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"TENBITEN_R","","Reader of field `TENBITEN`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"set_bit","","Sets the field bit",3096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3096,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3097,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3098,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3098,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3098,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3099,[[],["w",6]]],[11,"gencen","atsamd51g::generic","Bit 0 - General Call Address Enable",6,[[],["gencen_r",6]]],[11,"addr","","Bits 1:10 - Address Value",6,[[],["addr_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",6,[[],["tenbiten_r",6]]],[11,"addrmask","","Bits 17:26 - Address Mask",6,[[],["addrmask_r",6]]],[11,"gencen","atsamd51g::sercom0::i2cs::addr","Bit 0 - General Call Address Enable",3100,[[],["gencen_r",6]]],[11,"addr","","Bits 1:10 - Address Value",3100,[[],["addr_r",6]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",3100,[[],["tenbiten_r",6]]],[11,"addrmask","","Bits 17:26 - Address Mask",3100,[[],["addrmask_r",6]]],[11,"gencen","atsamd51g::generic","Bit 0 - General Call Address Enable",7,[[],["gencen_w",3]]],[11,"addr","","Bits 1:10 - Address Value",7,[[],["addr_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",7,[[],["tenbiten_w",3]]],[11,"addrmask","","Bits 17:26 - Address Mask",7,[[],["addrmask_w",3]]],[11,"gencen","atsamd51g::sercom0::i2cs::addr","Bit 0 - General Call Address Enable",3101,[[],["gencen_w",3]]],[11,"addr","","Bits 1:10 - Address Value",3101,[[],["addr_w",3]]],[11,"tenbiten","","Bit 15 - Ten Bit Addressing Enable",3101,[[],["tenbiten_w",3]]],[11,"addrmask","","Bits 17:26 - Address Mask",3101,[[],["addrmask_w",3]]],[0,"data","atsamd51g::sercom0::i2cs","I2CS Data",null,null],[3,"DATA_W","atsamd51g::sercom0::i2cs::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",3102,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd51g::sercom0::i2cs::data","Bits 0:31 - Data Value",3103,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd51g::sercom0::i2cs::data","Bits 0:31 - Data Value",3104,[[],["data_w",3]]],[6,"CTRLA","atsamd51g::sercom0::i2cs","I2CS Control A",null,null],[6,"CTRLB","","I2CS Control B",null,null],[6,"CTRLC","","I2CS Control C",null,null],[6,"INTENCLR","","I2CS Interrupt Enable Clear",null,null],[6,"INTENSET","","I2CS Interrupt Enable Set",null,null],[6,"INTFLAG","","I2CS Interrupt Flag Status and Clear",null,null],[6,"STATUS","","I2CS Status",null,null],[6,"SYNCBUSY","","I2CS Synchronization Busy",null,null],[6,"LENGTH","","I2CS Length",null,null],[6,"ADDR","","I2CS Address",null,null],[6,"DATA","","I2CS Data",null,null],[0,"spis","atsamd51g::sercom0","Register block SPI Slave Mode",null,null],[0,"ctrla","atsamd51g::sercom0::spis","SPIS Control A",null,null],[3,"SWRST_W","atsamd51g::sercom0::spis::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"DOPO_W","","Write proxy for field `DOPO`",null,null],[3,"DIPO_W","","Write proxy for field `DIPO`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CPHA_W","","Write proxy for field `CPHA`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART with external clock",3105,null],[13,"USART_INT_CLK","","1: USART with internal clock",3105,null],[13,"SPI_SLAVE","","2: SPI in slave operation",3105,null],[13,"SPI_MASTER","","3: SPI in master operation",3105,null],[13,"I2C_SLAVE","","4: I2C slave operation",3105,null],[13,"I2C_MASTER","","5: I2C master operation",3105,null],[4,"DOPO_A","","Data Out Pinout",null,null],[13,"PAD0","","0: DO on PAD[0], SCK on PAD[1] and SS on PAD[2]",3106,null],[13,"PAD2","","2: DO on PAD[3], SCK on PAD[1] and SS on PAD[2]",3106,null],[4,"DIPO_A","","Data In Pinout",null,null],[13,"PAD0","","0: SERCOM PAD[0] is used as data input",3107,null],[13,"PAD1","","1: SERCOM PAD[1] is used as data input",3107,null],[13,"PAD2","","2: SERCOM PAD[2] is used as data input",3107,null],[13,"PAD3","","3: SERCOM PAD[3] is used as data input",3107,null],[4,"FORM_A","","Frame Format",null,null],[13,"SPI_FRAME","","0: SPI Frame",3108,null],[13,"SPI_FRAME_WITH_ADDR","","2: SPI Frame with Addr",3108,null],[4,"CPHA_A","","Clock Phase",null,null],[13,"LEADING_EDGE","","0: The data is sampled on a leading SCK edge and changed…",3109,null],[13,"TRAILING_EDGE","","1: The data is sampled on a trailing SCK edge and changed…",3109,null],[4,"CPOL_A","","Clock Polarity",null,null],[13,"IDLE_LOW","","0: SCK is low when idle",3110,null],[13,"IDLE_HIGH","","1: SCK is high when idle",3110,null],[4,"DORD_A","","Data Order",null,null],[13,"MSB","","0: MSB is transferred first",3111,null],[13,"LSB","","1: LSB is transferred first",3111,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"DOPO_R","","Reader of field `DOPO`",null,null],[6,"DIPO_R","","Reader of field `DIPO`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CPHA_R","","Reader of field `CPHA`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",3112,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3112,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3112,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3113,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3113,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3113,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3114,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",3114,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",3114,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",3114,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",3114,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",3114,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",3114,[[]]],[11,"variant","","Writes `variant` to the field",3115,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART with external clock",3115,[[],["w",6]]],[11,"usart_int_clk","","USART with internal clock",3115,[[],["w",6]]],[11,"spi_slave","","SPI in slave operation",3115,[[],["w",6]]],[11,"spi_master","","SPI in master operation",3115,[[],["w",6]]],[11,"i2c_slave","","I2C slave operation",3115,[[],["w",6]]],[11,"i2c_master","","I2C master operation",3115,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3115,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3116,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3116,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3116,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3117,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3117,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3117,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["dopo_a",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3118,[[],[["variant",4],["dopo_a",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3118,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",3118,[[]]],[11,"variant","","Writes `variant` to the field",3119,[[["dopo_a",4]],["w",6]]],[11,"pad0","","DO on PAD[0], SCK on PAD[1] and SS on PAD[2]",3119,[[],["w",6]]],[11,"pad2","","DO on PAD[3], SCK on PAD[1] and SS on PAD[2]",3119,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3119,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dipo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",6,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",6,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3120,[[],["dipo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3120,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",3120,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",3120,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",3120,[[]]],[11,"variant","","Writes `variant` to the field",3121,[[["dipo_a",4]],["w",6]]],[11,"pad0","","SERCOM PAD[0] is used as data input",3121,[[],["w",6]]],[11,"pad1","","SERCOM PAD[1] is used as data input",3121,[[],["w",6]]],[11,"pad2","","SERCOM PAD[2] is used as data input",3121,[[],["w",6]]],[11,"pad3","","SERCOM PAD[3] is used as data input",3121,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3121,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["form_a",4],["variant",4]]]],[11,"is_spi_frame","","Checks if the value of the field is `SPI_FRAME`",6,[[]]],[11,"is_spi_frame_with_addr","","Checks if the value of the field is `SPI_FRAME_WITH_ADDR`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3122,[[],[["form_a",4],["variant",4]]]],[11,"is_spi_frame","","Checks if the value of the field is `SPI_FRAME`",3122,[[]]],[11,"is_spi_frame_with_addr","","Checks if the value of the field is `SPI_FRAME_WITH_ADDR`",3122,[[]]],[11,"variant","","Writes `variant` to the field",3123,[[["form_a",4]],["w",6]]],[11,"spi_frame","","SPI Frame",3123,[[],["w",6]]],[11,"spi_frame_with_addr","","SPI Frame with Addr",3123,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3123,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cpha_a",4]]],[11,"is_leading_edge","","Checks if the value of the field is `LEADING_EDGE`",6,[[]]],[11,"is_trailing_edge","","Checks if the value of the field is `TRAILING_EDGE`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3124,[[],["cpha_a",4]]],[11,"is_leading_edge","","Checks if the value of the field is `LEADING_EDGE`",3124,[[]]],[11,"is_trailing_edge","","Checks if the value of the field is `TRAILING_EDGE`",3124,[[]]],[11,"variant","","Writes `variant` to the field",3125,[[["cpha_a",4]],["w",6]]],[11,"leading_edge","","The data is sampled on a leading SCK edge and changed on a…",3125,[[],["w",6]]],[11,"trailing_edge","","The data is sampled on a trailing SCK edge and changed on…",3125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3125,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",6,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3126,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",3126,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",3126,[[]]],[11,"variant","","Writes `variant` to the field",3127,[[["cpol_a",4]],["w",6]]],[11,"idle_low","","SCK is low when idle",3127,[[],["w",6]]],[11,"idle_high","","SCK is high when idle",3127,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3127,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3127,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3127,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",6,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrla","Get enumerated values variant",3128,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",3128,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",3128,[[]]],[11,"variant","","Writes `variant` to the field",3129,[[["dord_a",4]],["w",6]]],[11,"msb","","MSB is transferred first",3129,[[],["w",6]]],[11,"lsb","","LSB is transferred first",3129,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3129,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3129,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3129,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",6,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",6,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",6,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd51g::sercom0::spis::ctrla","Bit 0 - Software Reset",3130,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3130,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",3130,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",3130,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3130,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",3130,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",3130,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",3130,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",3130,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",3130,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",3130,[[],["dord_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",7,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",7,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",7,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd51g::sercom0::spis::ctrla","Bit 0 - Software Reset",3131,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3131,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",3131,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",3131,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3131,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",3131,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",3131,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",3131,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",3131,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",3131,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",3131,[[],["dord_w",3]]],[0,"ctrlb","atsamd51g::sercom0::spis","SPIS Control B",null,null],[3,"CHSIZE_W","atsamd51g::sercom0::spis::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"PLOADEN_W","","Write proxy for field `PLOADEN`",null,null],[3,"SSDE_W","","Write proxy for field `SSDE`",null,null],[3,"MSSEN_W","","Write proxy for field `MSSEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[4,"CHSIZE_A","","Character Size",null,null],[13,"_8_BIT","","0: 8 bits",3132,null],[13,"_9_BIT","","1: 9 bits",3132,null],[4,"AMODE_A","","Address Mode",null,null],[13,"MASK","","0: SPI Address mask ",3133,null],[13,"_2_ADDRESSES","","1: Two unique Addressess",3133,null],[13,"RANGE","","2: Address Range",3133,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"PLOADEN_R","","Reader of field `PLOADEN`",null,null],[6,"SSDE_R","","Reader of field `SSDE`",null,null],[6,"MSSEN_R","","Reader of field `MSSEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["chsize_a",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",6,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrlb","Get enumerated values variant",3134,[[],[["variant",4],["chsize_a",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",3134,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",3134,[[]]],[11,"variant","","Writes `variant` to the field",3135,[[["chsize_a",4]],["w",6]]],[11,"_8_bit","","8 bits",3135,[[],["w",6]]],[11,"_9_bit","","9 bits",3135,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3135,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3136,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3136,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3136,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3138,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["amode_a",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",6,[[]]],[11,"is_2_addresses","","Checks if the value of the field is `_2_ADDRESSES`",6,[[]]],[11,"is_range","","Checks if the value of the field is `RANGE`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrlb","Get enumerated values variant",3139,[[],[["variant",4],["amode_a",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",3139,[[]]],[11,"is_2_addresses","","Checks if the value of the field is `_2_ADDRESSES`",3139,[[]]],[11,"is_range","","Checks if the value of the field is `RANGE`",3139,[[]]],[11,"variant","","Writes `variant` to the field",3140,[[["amode_a",4]],["w",6]]],[11,"mask","","SPI Address mask",3140,[[],["w",6]]],[11,"_2_addresses","","Two unique Addressess",3140,[[],["w",6]]],[11,"range","","Address Range",3140,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3140,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3141,[[],["w",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",6,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",6,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",6,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"chsize","atsamd51g::sercom0::spis::ctrlb","Bits 0:2 - Character Size",3142,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",3142,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",3142,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",3142,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",3142,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",3142,[[],["rxen_r",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",7,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",7,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",7,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"chsize","atsamd51g::sercom0::spis::ctrlb","Bits 0:2 - Character Size",3143,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",3143,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",3143,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",3143,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",3143,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",3143,[[],["rxen_w",3]]],[0,"ctrlc","atsamd51g::sercom0::spis","SPIS Control C",null,null],[3,"ICSPACE_W","atsamd51g::sercom0::spis::ctrlc","Write proxy for field `ICSPACE`",null,null],[3,"DATA32B_W","","Write proxy for field `DATA32B`",null,null],[4,"DATA32B_A","","Data 32 Bit",null,null],[13,"DATA_TRANS_8BIT","","0: Transaction from and to DATA register are 8-bit",3144,null],[13,"DATA_TRANS_32BIT","","1: Transaction from and to DATA register are 32-bit",3144,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"ICSPACE_R","","Reader of field `ICSPACE`",null,null],[6,"DATA32B_R","","Reader of field `DATA32B`",null,null],[11,"bits","","Writes raw bits to the field",3145,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",6,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::spis::ctrlc","Get enumerated values variant",3146,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",3146,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",3146,[[]]],[11,"variant","","Writes `variant` to the field",3147,[[["data32b_a",4]],["w",6]]],[11,"data_trans_8bit","","Transaction from and to DATA register are 8-bit",3147,[[],["w",6]]],[11,"data_trans_32bit","","Transaction from and to DATA register are 32-bit",3147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3147,[[],["w",6]]],[11,"icspace","atsamd51g::generic","Bits 0:5 - Inter-Character Spacing",6,[[],["icspace_r",6]]],[11,"data32b","","Bit 24 - Data 32 Bit",6,[[],["data32b_r",6]]],[11,"icspace","atsamd51g::sercom0::spis::ctrlc","Bits 0:5 - Inter-Character Spacing",3148,[[],["icspace_r",6]]],[11,"data32b","","Bit 24 - Data 32 Bit",3148,[[],["data32b_r",6]]],[11,"icspace","atsamd51g::generic","Bits 0:5 - Inter-Character Spacing",7,[[],["icspace_w",3]]],[11,"data32b","","Bit 24 - Data 32 Bit",7,[[],["data32b_w",3]]],[11,"icspace","atsamd51g::sercom0::spis::ctrlc","Bits 0:5 - Inter-Character Spacing",3149,[[],["icspace_w",3]]],[11,"data32b","","Bit 24 - Data 32 Bit",3149,[[],["data32b_w",3]]],[0,"baud","atsamd51g::sercom0::spis","SPIS Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::spis::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",3150,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd51g::sercom0::spis::baud","Bits 0:7 - Baud Rate Value",3151,[[],["baud_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd51g::sercom0::spis::baud","Bits 0:7 - Baud Rate Value",3152,[[],["baud_w",3]]],[0,"intenclr","atsamd51g::sercom0::spis","SPIS Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::spis::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3156,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3157,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3157,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3157,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::spis::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3158,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3158,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3158,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",3158,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3158,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::spis::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3159,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3159,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3159,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",3159,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3159,[[],["error_w",3]]],[0,"intenset","atsamd51g::sercom0::spis","SPIS Interrupt Enable Set",null,null],[3,"DRE_W","atsamd51g::sercom0::spis::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3160,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3160,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3160,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3161,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3161,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3161,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3162,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3162,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3162,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3163,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3163,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3163,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3164,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3164,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3164,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::spis::intenset","Bit 0 - Data Register Empty Interrupt Enable",3165,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3165,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3165,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",3165,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3165,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::spis::intenset","Bit 0 - Data Register Empty Interrupt Enable",3166,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3166,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3166,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",3166,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3166,[[],["error_w",3]]],[0,"intflag","atsamd51g::sercom0::spis","SPIS Interrupt Flag Status and Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::spis::intflag","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3167,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3167,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3167,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3168,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3168,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3168,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3169,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3169,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3169,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3170,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3170,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3170,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3171,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3171,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3171,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::spis::intflag","Bit 0 - Data Register Empty Interrupt",3172,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3172,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3172,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",3172,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",3172,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::spis::intflag","Bit 0 - Data Register Empty Interrupt",3173,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3173,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3173,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",3173,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",3173,[[],["error_w",3]]],[0,"status","atsamd51g::sercom0::spis","SPIS Status",null,null],[3,"BUFOVF_W","atsamd51g::sercom0::spis::status","Write proxy for field `BUFOVF`",null,null],[3,"LENERR_W","","Write proxy for field `LENERR`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[6,"LENERR_R","","Reader of field `LENERR`",null,null],[11,"set_bit","","Sets the field bit",3174,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3174,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3174,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3175,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3175,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3175,[[],["w",6]]],[11,"bufovf","atsamd51g::generic","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"lenerr","","Bit 11 - Transaction Length Error",6,[[],["lenerr_r",6]]],[11,"bufovf","atsamd51g::sercom0::spis::status","Bit 2 - Buffer Overflow",3176,[[],["bufovf_r",6]]],[11,"lenerr","","Bit 11 - Transaction Length Error",3176,[[],["lenerr_r",6]]],[11,"bufovf","atsamd51g::generic","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"lenerr","","Bit 11 - Transaction Length Error",7,[[],["lenerr_w",3]]],[11,"bufovf","atsamd51g::sercom0::spis::status","Bit 2 - Buffer Overflow",3177,[[],["bufovf_w",3]]],[11,"lenerr","","Bit 11 - Transaction Length Error",3177,[[],["lenerr_w",3]]],[0,"syncbusy","atsamd51g::sercom0::spis","SPIS Synchronization Busy",null,null],[6,"R","atsamd51g::sercom0::spis::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",6,[[],["length_r",6]]],[11,"swrst","atsamd51g::sercom0::spis::syncbusy","Bit 0 - Software Reset Synchronization Busy",3178,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",3178,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",3178,[[],["ctrlb_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",3178,[[],["length_r",6]]],[0,"length","atsamd51g::sercom0::spis","SPIS Length",null,null],[3,"LEN_W","atsamd51g::sercom0::spis::length","Write proxy for field `LEN`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[11,"bits","","Writes raw bits to the field",3179,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3180,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3180,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3180,[[],["w",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",6,[[],["len_r",6]]],[11,"lenen","","Bit 8 - Data Length Enable",6,[[],["lenen_r",6]]],[11,"len","atsamd51g::sercom0::spis::length","Bits 0:7 - Data Length",3181,[[],["len_r",6]]],[11,"lenen","","Bit 8 - Data Length Enable",3181,[[],["lenen_r",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",7,[[],["len_w",3]]],[11,"lenen","","Bit 8 - Data Length Enable",7,[[],["lenen_w",3]]],[11,"len","atsamd51g::sercom0::spis::length","Bits 0:7 - Data Length",3182,[[],["len_w",3]]],[11,"lenen","","Bit 8 - Data Length Enable",3182,[[],["lenen_w",3]]],[0,"addr","atsamd51g::sercom0::spis","SPIS Address",null,null],[3,"ADDR_W","atsamd51g::sercom0::spis::addr","Write proxy for field `ADDR`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"bits","","Writes raw bits to the field",3183,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3184,[[],["w",6]]],[11,"addr","atsamd51g::generic","Bits 0:7 - Address Value",6,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",6,[[],["addrmask_r",6]]],[11,"addr","atsamd51g::sercom0::spis::addr","Bits 0:7 - Address Value",3185,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",3185,[[],["addrmask_r",6]]],[11,"addr","atsamd51g::generic","Bits 0:7 - Address Value",7,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",7,[[],["addrmask_w",3]]],[11,"addr","atsamd51g::sercom0::spis::addr","Bits 0:7 - Address Value",3186,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",3186,[[],["addrmask_w",3]]],[0,"data","atsamd51g::sercom0::spis","SPIS Data",null,null],[3,"DATA_W","atsamd51g::sercom0::spis::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",3187,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd51g::sercom0::spis::data","Bits 0:31 - Data Value",3188,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd51g::sercom0::spis::data","Bits 0:31 - Data Value",3189,[[],["data_w",3]]],[0,"dbgctrl","atsamd51g::sercom0::spis","SPIS Debug Control",null,null],[3,"DBGSTOP_W","atsamd51g::sercom0::spis::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",3190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3190,[[],["w",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::sercom0::spis::dbgctrl","Bit 0 - Debug Mode",3191,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd51g::sercom0::spis::dbgctrl","Bit 0 - Debug Mode",3192,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd51g::sercom0::spis","SPIS Control A",null,null],[6,"CTRLB","","SPIS Control B",null,null],[6,"CTRLC","","SPIS Control C",null,null],[6,"BAUD","","SPIS Baud Rate",null,null],[6,"INTENCLR","","SPIS Interrupt Enable Clear",null,null],[6,"INTENSET","","SPIS Interrupt Enable Set",null,null],[6,"INTFLAG","","SPIS Interrupt Flag Status and Clear",null,null],[6,"STATUS","","SPIS Status",null,null],[6,"SYNCBUSY","","SPIS Synchronization Busy",null,null],[6,"LENGTH","","SPIS Length",null,null],[6,"ADDR","","SPIS Address",null,null],[6,"DATA","","SPIS Data",null,null],[6,"DBGCTRL","","SPIS Debug Control",null,null],[0,"spim","atsamd51g::sercom0","Register block SPI Master Mode",null,null],[0,"ctrla","atsamd51g::sercom0::spim","SPIM Control A",null,null],[3,"SWRST_W","atsamd51g::sercom0::spim::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"DOPO_W","","Write proxy for field `DOPO`",null,null],[3,"DIPO_W","","Write proxy for field `DIPO`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CPHA_W","","Write proxy for field `CPHA`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART with external clock",3193,null],[13,"USART_INT_CLK","","1: USART with internal clock",3193,null],[13,"SPI_SLAVE","","2: SPI in slave operation",3193,null],[13,"SPI_MASTER","","3: SPI in master operation",3193,null],[13,"I2C_SLAVE","","4: I2C slave operation",3193,null],[13,"I2C_MASTER","","5: I2C master operation",3193,null],[4,"DOPO_A","","Data Out Pinout",null,null],[13,"PAD0","","0: DO on PAD[0], SCK on PAD[1] and SS on PAD[2]",3194,null],[13,"PAD2","","2: DO on PAD[3], SCK on PAD[1] and SS on PAD[2]",3194,null],[4,"DIPO_A","","Data In Pinout",null,null],[13,"PAD0","","0: SERCOM PAD[0] is used as data input",3195,null],[13,"PAD1","","1: SERCOM PAD[1] is used as data input",3195,null],[13,"PAD2","","2: SERCOM PAD[2] is used as data input",3195,null],[13,"PAD3","","3: SERCOM PAD[3] is used as data input",3195,null],[4,"FORM_A","","Frame Format",null,null],[13,"SPI_FRAME","","0: SPI Frame",3196,null],[13,"SPI_FRAME_WITH_ADDR","","2: SPI Frame with Addr",3196,null],[4,"CPHA_A","","Clock Phase",null,null],[13,"LEADING_EDGE","","0: The data is sampled on a leading SCK edge and changed…",3197,null],[13,"TRAILING_EDGE","","1: The data is sampled on a trailing SCK edge and changed…",3197,null],[4,"CPOL_A","","Clock Polarity",null,null],[13,"IDLE_LOW","","0: SCK is low when idle",3198,null],[13,"IDLE_HIGH","","1: SCK is high when idle",3198,null],[4,"DORD_A","","Data Order",null,null],[13,"MSB","","0: MSB is transferred first",3199,null],[13,"LSB","","1: LSB is transferred first",3199,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"DOPO_R","","Reader of field `DOPO`",null,null],[6,"DIPO_R","","Reader of field `DIPO`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CPHA_R","","Reader of field `CPHA`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",3200,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3200,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3200,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3201,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3201,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3201,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3202,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",3202,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",3202,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",3202,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",3202,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",3202,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",3202,[[]]],[11,"variant","","Writes `variant` to the field",3203,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART with external clock",3203,[[],["w",6]]],[11,"usart_int_clk","","USART with internal clock",3203,[[],["w",6]]],[11,"spi_slave","","SPI in slave operation",3203,[[],["w",6]]],[11,"spi_master","","SPI in master operation",3203,[[],["w",6]]],[11,"i2c_slave","","I2C slave operation",3203,[[],["w",6]]],[11,"i2c_master","","I2C master operation",3203,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3203,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3204,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3204,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3204,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3205,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["dopo_a",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3206,[[],[["variant",4],["dopo_a",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3206,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",3206,[[]]],[11,"variant","","Writes `variant` to the field",3207,[[["dopo_a",4]],["w",6]]],[11,"pad0","","DO on PAD[0], SCK on PAD[1] and SS on PAD[2]",3207,[[],["w",6]]],[11,"pad2","","DO on PAD[3], SCK on PAD[1] and SS on PAD[2]",3207,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3207,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dipo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",6,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",6,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3208,[[],["dipo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3208,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",3208,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",3208,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",3208,[[]]],[11,"variant","","Writes `variant` to the field",3209,[[["dipo_a",4]],["w",6]]],[11,"pad0","","SERCOM PAD[0] is used as data input",3209,[[],["w",6]]],[11,"pad1","","SERCOM PAD[1] is used as data input",3209,[[],["w",6]]],[11,"pad2","","SERCOM PAD[2] is used as data input",3209,[[],["w",6]]],[11,"pad3","","SERCOM PAD[3] is used as data input",3209,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3209,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["form_a",4]]]],[11,"is_spi_frame","","Checks if the value of the field is `SPI_FRAME`",6,[[]]],[11,"is_spi_frame_with_addr","","Checks if the value of the field is `SPI_FRAME_WITH_ADDR`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3210,[[],[["variant",4],["form_a",4]]]],[11,"is_spi_frame","","Checks if the value of the field is `SPI_FRAME`",3210,[[]]],[11,"is_spi_frame_with_addr","","Checks if the value of the field is `SPI_FRAME_WITH_ADDR`",3210,[[]]],[11,"variant","","Writes `variant` to the field",3211,[[["form_a",4]],["w",6]]],[11,"spi_frame","","SPI Frame",3211,[[],["w",6]]],[11,"spi_frame_with_addr","","SPI Frame with Addr",3211,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3211,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cpha_a",4]]],[11,"is_leading_edge","","Checks if the value of the field is `LEADING_EDGE`",6,[[]]],[11,"is_trailing_edge","","Checks if the value of the field is `TRAILING_EDGE`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3212,[[],["cpha_a",4]]],[11,"is_leading_edge","","Checks if the value of the field is `LEADING_EDGE`",3212,[[]]],[11,"is_trailing_edge","","Checks if the value of the field is `TRAILING_EDGE`",3212,[[]]],[11,"variant","","Writes `variant` to the field",3213,[[["cpha_a",4]],["w",6]]],[11,"leading_edge","","The data is sampled on a leading SCK edge and changed on a…",3213,[[],["w",6]]],[11,"trailing_edge","","The data is sampled on a trailing SCK edge and changed on…",3213,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3213,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3213,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3213,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",6,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3214,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",3214,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",3214,[[]]],[11,"variant","","Writes `variant` to the field",3215,[[["cpol_a",4]],["w",6]]],[11,"idle_low","","SCK is low when idle",3215,[[],["w",6]]],[11,"idle_high","","SCK is high when idle",3215,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3215,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3215,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3215,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",6,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrla","Get enumerated values variant",3216,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",3216,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",3216,[[]]],[11,"variant","","Writes `variant` to the field",3217,[[["dord_a",4]],["w",6]]],[11,"msb","","MSB is transferred first",3217,[[],["w",6]]],[11,"lsb","","LSB is transferred first",3217,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3217,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3217,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3217,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",6,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",6,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",6,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd51g::sercom0::spim::ctrla","Bit 0 - Software Reset",3218,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3218,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",3218,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",3218,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3218,[[],["ibon_r",6]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",3218,[[],["dopo_r",6]]],[11,"dipo","","Bits 20:21 - Data In Pinout",3218,[[],["dipo_r",6]]],[11,"form","","Bits 24:27 - Frame Format",3218,[[],["form_r",6]]],[11,"cpha","","Bit 28 - Clock Phase",3218,[[],["cpha_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",3218,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",3218,[[],["dord_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",7,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",7,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",7,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd51g::sercom0::spim::ctrla","Bit 0 - Software Reset",3219,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3219,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",3219,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",3219,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3219,[[],["ibon_w",3]]],[11,"dopo","","Bits 16:17 - Data Out Pinout",3219,[[],["dopo_w",3]]],[11,"dipo","","Bits 20:21 - Data In Pinout",3219,[[],["dipo_w",3]]],[11,"form","","Bits 24:27 - Frame Format",3219,[[],["form_w",3]]],[11,"cpha","","Bit 28 - Clock Phase",3219,[[],["cpha_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",3219,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",3219,[[],["dord_w",3]]],[0,"ctrlb","atsamd51g::sercom0::spim","SPIM Control B",null,null],[3,"CHSIZE_W","atsamd51g::sercom0::spim::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"PLOADEN_W","","Write proxy for field `PLOADEN`",null,null],[3,"SSDE_W","","Write proxy for field `SSDE`",null,null],[3,"MSSEN_W","","Write proxy for field `MSSEN`",null,null],[3,"AMODE_W","","Write proxy for field `AMODE`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[4,"CHSIZE_A","","Character Size",null,null],[13,"_8_BIT","","0: 8 bits",3220,null],[13,"_9_BIT","","1: 9 bits",3220,null],[4,"AMODE_A","","Address Mode",null,null],[13,"MASK","","0: SPI Address mask ",3221,null],[13,"_2_ADDRESSES","","1: Two unique Addressess",3221,null],[13,"RANGE","","2: Address Range",3221,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"PLOADEN_R","","Reader of field `PLOADEN`",null,null],[6,"SSDE_R","","Reader of field `SSDE`",null,null],[6,"MSSEN_R","","Reader of field `MSSEN`",null,null],[6,"AMODE_R","","Reader of field `AMODE`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["chsize_a",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",6,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrlb","Get enumerated values variant",3222,[[],[["variant",4],["chsize_a",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",3222,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",3222,[[]]],[11,"variant","","Writes `variant` to the field",3223,[[["chsize_a",4]],["w",6]]],[11,"_8_bit","","8 bits",3223,[[],["w",6]]],[11,"_9_bit","","9 bits",3223,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3223,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3224,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3224,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3224,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3225,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3225,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3225,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3226,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3226,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3226,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["amode_a",4],["variant",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",6,[[]]],[11,"is_2_addresses","","Checks if the value of the field is `_2_ADDRESSES`",6,[[]]],[11,"is_range","","Checks if the value of the field is `RANGE`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrlb","Get enumerated values variant",3227,[[],[["amode_a",4],["variant",4]]]],[11,"is_mask","","Checks if the value of the field is `MASK`",3227,[[]]],[11,"is_2_addresses","","Checks if the value of the field is `_2_ADDRESSES`",3227,[[]]],[11,"is_range","","Checks if the value of the field is `RANGE`",3227,[[]]],[11,"variant","","Writes `variant` to the field",3228,[[["amode_a",4]],["w",6]]],[11,"mask","","SPI Address mask",3228,[[],["w",6]]],[11,"_2_addresses","","Two unique Addressess",3228,[[],["w",6]]],[11,"range","","Address Range",3228,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3228,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3229,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3229,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3229,[[],["w",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",6,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",6,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",6,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",6,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"chsize","atsamd51g::sercom0::spim::ctrlb","Bits 0:2 - Character Size",3230,[[],["chsize_r",6]]],[11,"ploaden","","Bit 6 - Data Preload Enable",3230,[[],["ploaden_r",6]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",3230,[[],["ssde_r",6]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",3230,[[],["mssen_r",6]]],[11,"amode","","Bits 14:15 - Address Mode",3230,[[],["amode_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",3230,[[],["rxen_r",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",7,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",7,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",7,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",7,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"chsize","atsamd51g::sercom0::spim::ctrlb","Bits 0:2 - Character Size",3231,[[],["chsize_w",3]]],[11,"ploaden","","Bit 6 - Data Preload Enable",3231,[[],["ploaden_w",3]]],[11,"ssde","","Bit 9 - Slave Select Low Detect Enable",3231,[[],["ssde_w",3]]],[11,"mssen","","Bit 13 - Master Slave Select Enable",3231,[[],["mssen_w",3]]],[11,"amode","","Bits 14:15 - Address Mode",3231,[[],["amode_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",3231,[[],["rxen_w",3]]],[0,"ctrlc","atsamd51g::sercom0::spim","SPIM Control C",null,null],[3,"ICSPACE_W","atsamd51g::sercom0::spim::ctrlc","Write proxy for field `ICSPACE`",null,null],[3,"DATA32B_W","","Write proxy for field `DATA32B`",null,null],[4,"DATA32B_A","","Data 32 Bit",null,null],[13,"DATA_TRANS_8BIT","","0: Transaction from and to DATA register are 8-bit",3232,null],[13,"DATA_TRANS_32BIT","","1: Transaction from and to DATA register are 32-bit",3232,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"ICSPACE_R","","Reader of field `ICSPACE`",null,null],[6,"DATA32B_R","","Reader of field `DATA32B`",null,null],[11,"bits","","Writes raw bits to the field",3233,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",6,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::spim::ctrlc","Get enumerated values variant",3234,[[],["data32b_a",4]]],[11,"is_data_trans_8bit","","Checks if the value of the field is `DATA_TRANS_8BIT`",3234,[[]]],[11,"is_data_trans_32bit","","Checks if the value of the field is `DATA_TRANS_32BIT`",3234,[[]]],[11,"variant","","Writes `variant` to the field",3235,[[["data32b_a",4]],["w",6]]],[11,"data_trans_8bit","","Transaction from and to DATA register are 8-bit",3235,[[],["w",6]]],[11,"data_trans_32bit","","Transaction from and to DATA register are 32-bit",3235,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3235,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3235,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3235,[[],["w",6]]],[11,"icspace","atsamd51g::generic","Bits 0:5 - Inter-Character Spacing",6,[[],["icspace_r",6]]],[11,"data32b","","Bit 24 - Data 32 Bit",6,[[],["data32b_r",6]]],[11,"icspace","atsamd51g::sercom0::spim::ctrlc","Bits 0:5 - Inter-Character Spacing",3236,[[],["icspace_r",6]]],[11,"data32b","","Bit 24 - Data 32 Bit",3236,[[],["data32b_r",6]]],[11,"icspace","atsamd51g::generic","Bits 0:5 - Inter-Character Spacing",7,[[],["icspace_w",3]]],[11,"data32b","","Bit 24 - Data 32 Bit",7,[[],["data32b_w",3]]],[11,"icspace","atsamd51g::sercom0::spim::ctrlc","Bits 0:5 - Inter-Character Spacing",3237,[[],["icspace_w",3]]],[11,"data32b","","Bit 24 - Data 32 Bit",3237,[[],["data32b_w",3]]],[0,"baud","atsamd51g::sercom0::spim","SPIM Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::spim::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",3238,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:7 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd51g::sercom0::spim::baud","Bits 0:7 - Baud Rate Value",3239,[[],["baud_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:7 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd51g::sercom0::spim::baud","Bits 0:7 - Baud Rate Value",3240,[[],["baud_w",3]]],[0,"intenclr","atsamd51g::sercom0::spim","SPIM Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::spim::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3241,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3241,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3241,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3242,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3242,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3242,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3243,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3243,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3243,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3244,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3244,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3244,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3245,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3245,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3245,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::spim::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3246,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3246,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3246,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",3246,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3246,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::spim::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3247,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3247,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3247,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Disable",3247,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3247,[[],["error_w",3]]],[0,"intenset","atsamd51g::sercom0::spim","SPIM Interrupt Enable Set",null,null],[3,"DRE_W","atsamd51g::sercom0::spim::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3248,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3248,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3248,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3249,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3249,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3249,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3250,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3250,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3250,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3251,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3251,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3251,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3252,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3252,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3252,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::spim::intenset","Bit 0 - Data Register Empty Interrupt Enable",3253,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3253,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3253,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",3253,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3253,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::spim::intenset","Bit 0 - Data Register Empty Interrupt Enable",3254,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3254,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3254,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Enable",3254,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3254,[[],["error_w",3]]],[0,"intflag","atsamd51g::sercom0::spim","SPIM Interrupt Flag Status and Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::spim::intflag","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"SSL_W","","Write proxy for field `SSL`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"SSL_R","","Reader of field `SSL`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3255,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3255,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3255,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3256,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3256,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3256,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3257,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3257,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3257,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3258,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3258,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3258,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3259,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3259,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3259,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",6,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::spim::intflag","Bit 0 - Data Register Empty Interrupt",3260,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3260,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3260,[[],["rxc_r",6]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",3260,[[],["ssl_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",3260,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",7,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",7,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::spim::intflag","Bit 0 - Data Register Empty Interrupt",3261,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3261,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3261,[[],["rxc_w",3]]],[11,"ssl","","Bit 3 - Slave Select Low Interrupt Flag",3261,[[],["ssl_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",3261,[[],["error_w",3]]],[0,"status","atsamd51g::sercom0::spim","SPIM Status",null,null],[3,"BUFOVF_W","atsamd51g::sercom0::spim::status","Write proxy for field `BUFOVF`",null,null],[3,"LENERR_W","","Write proxy for field `LENERR`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[6,"LENERR_R","","Reader of field `LENERR`",null,null],[11,"set_bit","","Sets the field bit",3262,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3262,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3262,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3263,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3263,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3263,[[],["w",6]]],[11,"bufovf","atsamd51g::generic","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"lenerr","","Bit 11 - Transaction Length Error",6,[[],["lenerr_r",6]]],[11,"bufovf","atsamd51g::sercom0::spim::status","Bit 2 - Buffer Overflow",3264,[[],["bufovf_r",6]]],[11,"lenerr","","Bit 11 - Transaction Length Error",3264,[[],["lenerr_r",6]]],[11,"bufovf","atsamd51g::generic","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"lenerr","","Bit 11 - Transaction Length Error",7,[[],["lenerr_w",3]]],[11,"bufovf","atsamd51g::sercom0::spim::status","Bit 2 - Buffer Overflow",3265,[[],["bufovf_w",3]]],[11,"lenerr","","Bit 11 - Transaction Length Error",3265,[[],["lenerr_w",3]]],[0,"syncbusy","atsamd51g::sercom0::spim","SPIM Synchronization Busy",null,null],[6,"R","atsamd51g::sercom0::spim::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",6,[[],["length_r",6]]],[11,"swrst","atsamd51g::sercom0::spim::syncbusy","Bit 0 - Software Reset Synchronization Busy",3266,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",3266,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",3266,[[],["ctrlb_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",3266,[[],["length_r",6]]],[0,"length","atsamd51g::sercom0::spim","SPIM Length",null,null],[3,"LEN_W","atsamd51g::sercom0::spim::length","Write proxy for field `LEN`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[11,"bits","","Writes raw bits to the field",3267,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3268,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3268,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3268,[[],["w",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",6,[[],["len_r",6]]],[11,"lenen","","Bit 8 - Data Length Enable",6,[[],["lenen_r",6]]],[11,"len","atsamd51g::sercom0::spim::length","Bits 0:7 - Data Length",3269,[[],["len_r",6]]],[11,"lenen","","Bit 8 - Data Length Enable",3269,[[],["lenen_r",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",7,[[],["len_w",3]]],[11,"lenen","","Bit 8 - Data Length Enable",7,[[],["lenen_w",3]]],[11,"len","atsamd51g::sercom0::spim::length","Bits 0:7 - Data Length",3270,[[],["len_w",3]]],[11,"lenen","","Bit 8 - Data Length Enable",3270,[[],["lenen_w",3]]],[0,"addr","atsamd51g::sercom0::spim","SPIM Address",null,null],[3,"ADDR_W","atsamd51g::sercom0::spim::addr","Write proxy for field `ADDR`",null,null],[3,"ADDRMASK_W","","Write proxy for field `ADDRMASK`",null,null],[6,"R","","Reader of register ADDR",null,null],[6,"W","","Writer for register ADDR",null,null],[6,"ADDR_R","","Reader of field `ADDR`",null,null],[6,"ADDRMASK_R","","Reader of field `ADDRMASK`",null,null],[11,"bits","","Writes raw bits to the field",3271,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3272,[[],["w",6]]],[11,"addr","atsamd51g::generic","Bits 0:7 - Address Value",6,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",6,[[],["addrmask_r",6]]],[11,"addr","atsamd51g::sercom0::spim::addr","Bits 0:7 - Address Value",3273,[[],["addr_r",6]]],[11,"addrmask","","Bits 16:23 - Address Mask",3273,[[],["addrmask_r",6]]],[11,"addr","atsamd51g::generic","Bits 0:7 - Address Value",7,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",7,[[],["addrmask_w",3]]],[11,"addr","atsamd51g::sercom0::spim::addr","Bits 0:7 - Address Value",3274,[[],["addr_w",3]]],[11,"addrmask","","Bits 16:23 - Address Mask",3274,[[],["addrmask_w",3]]],[0,"data","atsamd51g::sercom0::spim","SPIM Data",null,null],[3,"DATA_W","atsamd51g::sercom0::spim::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",3275,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd51g::sercom0::spim::data","Bits 0:31 - Data Value",3276,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd51g::sercom0::spim::data","Bits 0:31 - Data Value",3277,[[],["data_w",3]]],[0,"dbgctrl","atsamd51g::sercom0::spim","SPIM Debug Control",null,null],[3,"DBGSTOP_W","atsamd51g::sercom0::spim::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",3278,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3278,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3278,[[],["w",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::sercom0::spim::dbgctrl","Bit 0 - Debug Mode",3279,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd51g::sercom0::spim::dbgctrl","Bit 0 - Debug Mode",3280,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd51g::sercom0::spim","SPIM Control A",null,null],[6,"CTRLB","","SPIM Control B",null,null],[6,"CTRLC","","SPIM Control C",null,null],[6,"BAUD","","SPIM Baud Rate",null,null],[6,"INTENCLR","","SPIM Interrupt Enable Clear",null,null],[6,"INTENSET","","SPIM Interrupt Enable Set",null,null],[6,"INTFLAG","","SPIM Interrupt Flag Status and Clear",null,null],[6,"STATUS","","SPIM Status",null,null],[6,"SYNCBUSY","","SPIM Synchronization Busy",null,null],[6,"LENGTH","","SPIM Length",null,null],[6,"ADDR","","SPIM Address",null,null],[6,"DATA","","SPIM Data",null,null],[6,"DBGCTRL","","SPIM Debug Control",null,null],[0,"usart_ext","atsamd51g::sercom0","Register block USART EXTERNAL CLOCK Mode",null,null],[0,"ctrla","atsamd51g::sercom0::usart_ext","USART_EXT Control A",null,null],[3,"SWRST_W","atsamd51g::sercom0::usart_ext::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"TXINV_W","","Write proxy for field `TXINV`",null,null],[3,"RXINV_W","","Write proxy for field `RXINV`",null,null],[3,"SAMPR_W","","Write proxy for field `SAMPR`",null,null],[3,"TXPO_W","","Write proxy for field `TXPO`",null,null],[3,"RXPO_W","","Write proxy for field `RXPO`",null,null],[3,"SAMPA_W","","Write proxy for field `SAMPA`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CMODE_W","","Write proxy for field `CMODE`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART with external clock",3281,null],[13,"USART_INT_CLK","","1: USART with internal clock",3281,null],[13,"SPI_SLAVE","","2: SPI in slave operation",3281,null],[13,"SPI_MASTER","","3: SPI in master operation",3281,null],[13,"I2C_SLAVE","","4: I2C slave operation",3281,null],[13,"I2C_MASTER","","5: I2C master operation",3281,null],[4,"SAMPR_A","","Sample",null,null],[13,"_16X_ARITHMETIC","","0: 16x over-sampling using arithmetic baudrate generation",3282,null],[13,"_16X_FRACTIONAL","","1: 16x over-sampling using fractional baudrate generation",3282,null],[13,"_8X_ARITHMETIC","","2: 8x over-sampling using arithmetic baudrate generation",3282,null],[13,"_8X_FRACTIONAL","","3: 8x over-sampling using fractional baudrate generation",3282,null],[13,"_3X_ARITHMETIC","","4: 3x over-sampling using arithmetic baudrate generation",3282,null],[4,"TXPO_A","","Transmit Data Pinout",null,null],[13,"PAD0","","0: SERCOM PAD[0] is used for data transmission",3283,null],[13,"PAD3","","3: SERCOM_PAD[0] is used for data transmission",3283,null],[4,"RXPO_A","","Receive Data Pinout",null,null],[13,"PAD0","","0: SERCOM PAD[0] is used for data reception",3284,null],[13,"PAD1","","1: SERCOM PAD[1] is used for data reception",3284,null],[13,"PAD2","","2: SERCOM PAD[2] is used for data reception",3284,null],[13,"PAD3","","3: SERCOM PAD[3] is used for data reception",3284,null],[4,"FORM_A","","Frame Format",null,null],[13,"USART_FRAME_NO_PARITY","","0: USART frame",3285,null],[13,"USART_FRAME_WITH_PARITY","","1: USART frame with parity",3285,null],[13,"USART_FRAME_LIN_MASTER_MODE","","2: LIN Master - Break and sync generation",3285,null],[13,"USART_FRAME_AUTO_BAUD_NO_PARITY","","4: Auto-baud - break detection and auto-baud",3285,null],[13,"USART_FRAME_AUTO_BAUD_WITH_PARITY","","5: Auto-baud - break detection and auto-baud with parity",3285,null],[13,"USART_FRAME_ISO_7816","","7: ISO 7816",3285,null],[4,"CMODE_A","","Communication Mode",null,null],[13,"ASYNC","","0: Asynchronous Communication",3286,null],[13,"SYNC","","1: Synchronous Communication",3286,null],[4,"CPOL_A","","Clock Polarity",null,null],[13,"IDLE_LOW","","0: TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK…",3287,null],[13,"IDLE_HIGH","","1: TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK…",3287,null],[4,"DORD_A","","Data Order",null,null],[13,"MSB","","0: MSB is transmitted first",3288,null],[13,"LSB","","1: LSB is transmitted first",3288,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"TXINV_R","","Reader of field `TXINV`",null,null],[6,"RXINV_R","","Reader of field `RXINV`",null,null],[6,"SAMPR_R","","Reader of field `SAMPR`",null,null],[6,"TXPO_R","","Reader of field `TXPO`",null,null],[6,"RXPO_R","","Reader of field `RXPO`",null,null],[6,"SAMPA_R","","Reader of field `SAMPA`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CMODE_R","","Reader of field `CMODE`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",3289,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3289,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3289,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3290,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3290,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3290,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3291,[[],[["mode_a",4],["variant",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",3291,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",3291,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",3291,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",3291,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",3291,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",3291,[[]]],[11,"variant","","Writes `variant` to the field",3292,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART with external clock",3292,[[],["w",6]]],[11,"usart_int_clk","","USART with internal clock",3292,[[],["w",6]]],[11,"spi_slave","","SPI in slave operation",3292,[[],["w",6]]],[11,"spi_master","","SPI in master operation",3292,[[],["w",6]]],[11,"i2c_slave","","I2C slave operation",3292,[[],["w",6]]],[11,"i2c_master","","I2C master operation",3292,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3292,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3293,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3293,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3293,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3294,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3294,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3294,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3295,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3295,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3295,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3296,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3296,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3296,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sampr_a",4]]]],[11,"is_16x_arithmetic","","Checks if the value of the field is `_16X_ARITHMETIC`",6,[[]]],[11,"is_16x_fractional","","Checks if the value of the field is `_16X_FRACTIONAL`",6,[[]]],[11,"is_8x_arithmetic","","Checks if the value of the field is `_8X_ARITHMETIC`",6,[[]]],[11,"is_8x_fractional","","Checks if the value of the field is `_8X_FRACTIONAL`",6,[[]]],[11,"is_3x_arithmetic","","Checks if the value of the field is `_3X_ARITHMETIC`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3297,[[],[["variant",4],["sampr_a",4]]]],[11,"is_16x_arithmetic","","Checks if the value of the field is `_16X_ARITHMETIC`",3297,[[]]],[11,"is_16x_fractional","","Checks if the value of the field is `_16X_FRACTIONAL`",3297,[[]]],[11,"is_8x_arithmetic","","Checks if the value of the field is `_8X_ARITHMETIC`",3297,[[]]],[11,"is_8x_fractional","","Checks if the value of the field is `_8X_FRACTIONAL`",3297,[[]]],[11,"is_3x_arithmetic","","Checks if the value of the field is `_3X_ARITHMETIC`",3297,[[]]],[11,"variant","","Writes `variant` to the field",3298,[[["sampr_a",4]],["w",6]]],[11,"_16x_arithmetic","","16x over-sampling using arithmetic baudrate generation",3298,[[],["w",6]]],[11,"_16x_fractional","","16x over-sampling using fractional baudrate generation",3298,[[],["w",6]]],[11,"_8x_arithmetic","","8x over-sampling using arithmetic baudrate generation",3298,[[],["w",6]]],[11,"_8x_fractional","","8x over-sampling using fractional baudrate generation",3298,[[],["w",6]]],[11,"_3x_arithmetic","","3x over-sampling using arithmetic baudrate generation",3298,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3298,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["txpo_a",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3299,[[],[["variant",4],["txpo_a",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3299,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",3299,[[]]],[11,"variant","","Writes `variant` to the field",3300,[[["txpo_a",4]],["w",6]]],[11,"pad0","","SERCOM PAD[0] is used for data transmission",3300,[[],["w",6]]],[11,"pad3","","SERCOM_PAD[0] is used for data transmission",3300,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3300,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["rxpo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",6,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",6,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3301,[[],["rxpo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3301,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",3301,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",3301,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",3301,[[]]],[11,"variant","","Writes `variant` to the field",3302,[[["rxpo_a",4]],["w",6]]],[11,"pad0","","SERCOM PAD[0] is used for data reception",3302,[[],["w",6]]],[11,"pad1","","SERCOM PAD[1] is used for data reception",3302,[[],["w",6]]],[11,"pad2","","SERCOM PAD[2] is used for data reception",3302,[[],["w",6]]],[11,"pad3","","SERCOM PAD[3] is used for data reception",3302,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3302,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3303,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["form_a",4],["variant",4]]]],[11,"is_usart_frame_no_parity","","Checks if the value of the field is `USART_FRAME_NO_PARITY`",6,[[]]],[11,"is_usart_frame_with_parity","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_lin_master_mode","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_auto_baud_no_parity","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_auto_baud_with_parity","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_iso_7816","","Checks if the value of the field is `USART_FRAME_ISO_7816`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3304,[[],[["form_a",4],["variant",4]]]],[11,"is_usart_frame_no_parity","","Checks if the value of the field is `USART_FRAME_NO_PARITY`",3304,[[]]],[11,"is_usart_frame_with_parity","","Checks if the value of the field is…",3304,[[]]],[11,"is_usart_frame_lin_master_mode","","Checks if the value of the field is…",3304,[[]]],[11,"is_usart_frame_auto_baud_no_parity","","Checks if the value of the field is…",3304,[[]]],[11,"is_usart_frame_auto_baud_with_parity","","Checks if the value of the field is…",3304,[[]]],[11,"is_usart_frame_iso_7816","","Checks if the value of the field is `USART_FRAME_ISO_7816`",3304,[[]]],[11,"variant","","Writes `variant` to the field",3305,[[["form_a",4]],["w",6]]],[11,"usart_frame_no_parity","","USART frame",3305,[[],["w",6]]],[11,"usart_frame_with_parity","","USART frame with parity",3305,[[],["w",6]]],[11,"usart_frame_lin_master_mode","","LIN Master - Break and sync generation",3305,[[],["w",6]]],[11,"usart_frame_auto_baud_no_parity","","Auto-baud - break detection and auto-baud",3305,[[],["w",6]]],[11,"usart_frame_auto_baud_with_parity","","Auto-baud - break detection and auto-baud with parity",3305,[[],["w",6]]],[11,"usart_frame_iso_7816","","ISO 7816",3305,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3305,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmode_a",4]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3306,[[],["cmode_a",4]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",3306,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",3306,[[]]],[11,"variant","","Writes `variant` to the field",3307,[[["cmode_a",4]],["w",6]]],[11,"async_","","Asynchronous Communication",3307,[[],["w",6]]],[11,"sync","","Synchronous Communication",3307,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3307,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3307,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3307,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",6,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3308,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",3308,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",3308,[[]]],[11,"variant","","Writes `variant` to the field",3309,[[["cpol_a",4]],["w",6]]],[11,"idle_low","","TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge",3309,[[],["w",6]]],[11,"idle_high","","TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge",3309,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3309,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3309,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3309,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",6,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrla","Get enumerated values variant",3310,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",3310,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",3310,[[]]],[11,"variant","","Writes `variant` to the field",3311,[[["dord_a",4]],["w",6]]],[11,"msb","","MSB is transmitted first",3311,[[],["w",6]]],[11,"lsb","","LSB is transmitted first",3311,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3311,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3311,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3311,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"txinv","","Bit 9 - Transmit Data Invert",6,[[],["txinv_r",6]]],[11,"rxinv","","Bit 10 - Receive Data Invert",6,[[],["rxinv_r",6]]],[11,"sampr","","Bits 13:15 - Sample",6,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",6,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",6,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",6,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",6,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd51g::sercom0::usart_ext::ctrla","Bit 0 - Software Reset",3312,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3312,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",3312,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",3312,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3312,[[],["ibon_r",6]]],[11,"txinv","","Bit 9 - Transmit Data Invert",3312,[[],["txinv_r",6]]],[11,"rxinv","","Bit 10 - Receive Data Invert",3312,[[],["rxinv_r",6]]],[11,"sampr","","Bits 13:15 - Sample",3312,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",3312,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",3312,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",3312,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",3312,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",3312,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",3312,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",3312,[[],["dord_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"txinv","","Bit 9 - Transmit Data Invert",7,[[],["txinv_w",3]]],[11,"rxinv","","Bit 10 - Receive Data Invert",7,[[],["rxinv_w",3]]],[11,"sampr","","Bits 13:15 - Sample",7,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",7,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",7,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",7,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",7,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd51g::sercom0::usart_ext::ctrla","Bit 0 - Software Reset",3313,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3313,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",3313,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",3313,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3313,[[],["ibon_w",3]]],[11,"txinv","","Bit 9 - Transmit Data Invert",3313,[[],["txinv_w",3]]],[11,"rxinv","","Bit 10 - Receive Data Invert",3313,[[],["rxinv_w",3]]],[11,"sampr","","Bits 13:15 - Sample",3313,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",3313,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",3313,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",3313,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",3313,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",3313,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",3313,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",3313,[[],["dord_w",3]]],[0,"ctrlb","atsamd51g::sercom0::usart_ext","USART_EXT Control B",null,null],[3,"CHSIZE_W","atsamd51g::sercom0::usart_ext::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"SBMODE_W","","Write proxy for field `SBMODE`",null,null],[3,"COLDEN_W","","Write proxy for field `COLDEN`",null,null],[3,"SFDE_W","","Write proxy for field `SFDE`",null,null],[3,"ENC_W","","Write proxy for field `ENC`",null,null],[3,"PMODE_W","","Write proxy for field `PMODE`",null,null],[3,"TXEN_W","","Write proxy for field `TXEN`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[3,"LINCMD_W","","Write proxy for field `LINCMD`",null,null],[4,"CHSIZE_A","","Character Size",null,null],[13,"_8_BIT","","0: 8 Bits",3314,null],[13,"_9_BIT","","1: 9 Bits",3314,null],[13,"_5_BIT","","5: 5 Bits",3314,null],[13,"_6_BIT","","6: 6 Bits",3314,null],[13,"_7_BIT","","7: 7 Bits",3314,null],[4,"SBMODE_A","","Stop Bit Mode",null,null],[13,"_1_BIT","","0: One Stop Bit",3315,null],[13,"_2_BIT","","1: Two Stop Bits",3315,null],[4,"PMODE_A","","Parity Mode",null,null],[13,"EVEN","","0: Even Parity",3316,null],[13,"ODD","","1: Odd Parity",3316,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"SBMODE_R","","Reader of field `SBMODE`",null,null],[6,"COLDEN_R","","Reader of field `COLDEN`",null,null],[6,"SFDE_R","","Reader of field `SFDE`",null,null],[6,"ENC_R","","Reader of field `ENC`",null,null],[6,"PMODE_R","","Reader of field `PMODE`",null,null],[6,"TXEN_R","","Reader of field `TXEN`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[6,"LINCMD_R","","Reader of field `LINCMD`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["chsize_a",4],["variant",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",6,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",6,[[]]],[11,"is_5_bit","","Checks if the value of the field is `_5_BIT`",6,[[]]],[11,"is_6_bit","","Checks if the value of the field is `_6_BIT`",6,[[]]],[11,"is_7_bit","","Checks if the value of the field is `_7_BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrlb","Get enumerated values variant",3317,[[],[["chsize_a",4],["variant",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",3317,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",3317,[[]]],[11,"is_5_bit","","Checks if the value of the field is `_5_BIT`",3317,[[]]],[11,"is_6_bit","","Checks if the value of the field is `_6_BIT`",3317,[[]]],[11,"is_7_bit","","Checks if the value of the field is `_7_BIT`",3317,[[]]],[11,"variant","","Writes `variant` to the field",3318,[[["chsize_a",4]],["w",6]]],[11,"_8_bit","","8 Bits",3318,[[],["w",6]]],[11,"_9_bit","","9 Bits",3318,[[],["w",6]]],[11,"_5_bit","","5 Bits",3318,[[],["w",6]]],[11,"_6_bit","","6 Bits",3318,[[],["w",6]]],[11,"_7_bit","","7 Bits",3318,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3318,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sbmode_a",4]]],[11,"is_1_bit","","Checks if the value of the field is `_1_BIT`",6,[[]]],[11,"is_2_bit","","Checks if the value of the field is `_2_BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrlb","Get enumerated values variant",3319,[[],["sbmode_a",4]]],[11,"is_1_bit","","Checks if the value of the field is `_1_BIT`",3319,[[]]],[11,"is_2_bit","","Checks if the value of the field is `_2_BIT`",3319,[[]]],[11,"variant","","Writes `variant` to the field",3320,[[["sbmode_a",4]],["w",6]]],[11,"_1_bit","","One Stop Bit",3320,[[],["w",6]]],[11,"_2_bit","","Two Stop Bits",3320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3320,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3320,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3321,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3321,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3321,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3322,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3322,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3322,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3323,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3323,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3323,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pmode_a",4]]],[11,"is_even","","Checks if the value of the field is `EVEN`",6,[[]]],[11,"is_odd","","Checks if the value of the field is `ODD`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrlb","Get enumerated values variant",3324,[[],["pmode_a",4]]],[11,"is_even","","Checks if the value of the field is `EVEN`",3324,[[]]],[11,"is_odd","","Checks if the value of the field is `ODD`",3324,[[]]],[11,"variant","","Writes `variant` to the field",3325,[[["pmode_a",4]],["w",6]]],[11,"even","","Even Parity",3325,[[],["w",6]]],[11,"odd","","Odd Parity",3325,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3325,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3325,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3325,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3326,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3326,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3326,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3327,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3327,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3327,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3328,[[],["w",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",6,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",6,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",6,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",6,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",6,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",6,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"lincmd","","Bits 24:25 - LIN Command",6,[[],["lincmd_r",6]]],[11,"chsize","atsamd51g::sercom0::usart_ext::ctrlb","Bits 0:2 - Character Size",3329,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",3329,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",3329,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",3329,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",3329,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",3329,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",3329,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",3329,[[],["rxen_r",6]]],[11,"lincmd","","Bits 24:25 - LIN Command",3329,[[],["lincmd_r",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",7,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",7,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",7,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",7,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",7,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",7,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"lincmd","","Bits 24:25 - LIN Command",7,[[],["lincmd_w",3]]],[11,"chsize","atsamd51g::sercom0::usart_ext::ctrlb","Bits 0:2 - Character Size",3330,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",3330,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",3330,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",3330,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",3330,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",3330,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",3330,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",3330,[[],["rxen_w",3]]],[11,"lincmd","","Bits 24:25 - LIN Command",3330,[[],["lincmd_w",3]]],[0,"ctrlc","atsamd51g::sercom0::usart_ext","USART_EXT Control C",null,null],[3,"GTIME_W","atsamd51g::sercom0::usart_ext::ctrlc","Write proxy for field `GTIME`",null,null],[3,"BRKLEN_W","","Write proxy for field `BRKLEN`",null,null],[3,"HDRDLY_W","","Write proxy for field `HDRDLY`",null,null],[3,"INACK_W","","Write proxy for field `INACK`",null,null],[3,"DSNACK_W","","Write proxy for field `DSNACK`",null,null],[3,"MAXITER_W","","Write proxy for field `MAXITER`",null,null],[3,"DATA32B_W","","Write proxy for field `DATA32B`",null,null],[4,"DATA32B_A","","Data 32 Bit",null,null],[13,"DATA_READ_WRITE_CHSIZE","","0: Data reads and writes according CTRLB.CHSIZE",3331,null],[13,"DATA_READ_CHSIZE_WRITE_32BIT","","1: Data reads according CTRLB.CHSIZE and writes according…",3331,null],[13,"DATA_READ_32BIT_WRITE_CHSIZE","","2: Data reads according 32-bit extension and writes…",3331,null],[13,"DATA_READ_WRITE_32BIT","","3: Data reads and writes according 32-bit extension",3331,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"GTIME_R","","Reader of field `GTIME`",null,null],[6,"BRKLEN_R","","Reader of field `BRKLEN`",null,null],[6,"HDRDLY_R","","Reader of field `HDRDLY`",null,null],[6,"INACK_R","","Reader of field `INACK`",null,null],[6,"DSNACK_R","","Reader of field `DSNACK`",null,null],[6,"MAXITER_R","","Reader of field `MAXITER`",null,null],[6,"DATA32B_R","","Reader of field `DATA32B`",null,null],[11,"bits","","Writes raw bits to the field",3332,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3333,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3334,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3335,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3335,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3335,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3336,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3336,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3336,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3337,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["data32b_a",4]]],[11,"is_data_read_write_chsize","","Checks if the value of the field is `DATA_READ_WRITE_CHSIZE`",6,[[]]],[11,"is_data_read_chsize_write_32bit","","Checks if the value of the field is…",6,[[]]],[11,"is_data_read_32bit_write_chsize","","Checks if the value of the field is…",6,[[]]],[11,"is_data_read_write_32bit","","Checks if the value of the field is `DATA_READ_WRITE_32BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_ext::ctrlc","Get enumerated values variant",3338,[[],["data32b_a",4]]],[11,"is_data_read_write_chsize","","Checks if the value of the field is `DATA_READ_WRITE_CHSIZE`",3338,[[]]],[11,"is_data_read_chsize_write_32bit","","Checks if the value of the field is…",3338,[[]]],[11,"is_data_read_32bit_write_chsize","","Checks if the value of the field is…",3338,[[]]],[11,"is_data_read_write_32bit","","Checks if the value of the field is `DATA_READ_WRITE_32BIT`",3338,[[]]],[11,"variant","","Writes `variant` to the field",3339,[[["data32b_a",4]],["w",6]]],[11,"data_read_write_chsize","","Data reads and writes according CTRLB.CHSIZE",3339,[[],["w",6]]],[11,"data_read_chsize_write_32bit","","Data reads according CTRLB.CHSIZE and writes according…",3339,[[],["w",6]]],[11,"data_read_32bit_write_chsize","","Data reads according 32-bit extension and writes according…",3339,[[],["w",6]]],[11,"data_read_write_32bit","","Data reads and writes according 32-bit extension",3339,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3339,[[],["w",6]]],[11,"gtime","atsamd51g::generic","Bits 0:2 - Guard Time",6,[[],["gtime_r",6]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",6,[[],["brklen_r",6]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",6,[[],["hdrdly_r",6]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",6,[[],["inack_r",6]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",6,[[],["dsnack_r",6]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",6,[[],["maxiter_r",6]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",6,[[],["data32b_r",6]]],[11,"gtime","atsamd51g::sercom0::usart_ext::ctrlc","Bits 0:2 - Guard Time",3340,[[],["gtime_r",6]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",3340,[[],["brklen_r",6]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",3340,[[],["hdrdly_r",6]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",3340,[[],["inack_r",6]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",3340,[[],["dsnack_r",6]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",3340,[[],["maxiter_r",6]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",3340,[[],["data32b_r",6]]],[11,"gtime","atsamd51g::generic","Bits 0:2 - Guard Time",7,[[],["gtime_w",3]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",7,[[],["brklen_w",3]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",7,[[],["hdrdly_w",3]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",7,[[],["inack_w",3]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",7,[[],["dsnack_w",3]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",7,[[],["maxiter_w",3]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",7,[[],["data32b_w",3]]],[11,"gtime","atsamd51g::sercom0::usart_ext::ctrlc","Bits 0:2 - Guard Time",3341,[[],["gtime_w",3]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",3341,[[],["brklen_w",3]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",3341,[[],["hdrdly_w",3]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",3341,[[],["inack_w",3]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",3341,[[],["dsnack_w",3]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",3341,[[],["maxiter_w",3]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",3341,[[],["data32b_w",3]]],[0,"baud","atsamd51g::sercom0::usart_ext","USART_EXT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_ext::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",3342,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud","Bits 0:15 - Baud Rate Value",3343,[[],["baud_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud","Bits 0:15 - Baud Rate Value",3344,[[],["baud_w",3]]],[0,"baud_frac_mode","atsamd51g::sercom0::usart_ext","USART_EXT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_ext::baud_frac_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRAC_MODE",null,null],[6,"W","","Writer for register BAUD_FRAC_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",3345,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3346,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud_frac_mode","Bits 0:12 - Baud Rate Value",3347,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",3347,[[],["fp_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud_frac_mode","Bits 0:12 - Baud Rate Value",3348,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",3348,[[],["fp_w",3]]],[0,"baud_fracfp_mode","atsamd51g::sercom0::usart_ext","USART_EXT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_ext::baud_fracfp_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRACFP_MODE",null,null],[6,"W","","Writer for register BAUD_FRACFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",3349,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3350,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",3351,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",3351,[[],["fp_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",3352,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",3352,[[],["fp_w",3]]],[0,"baud_usartfp_mode","atsamd51g::sercom0::usart_ext","USART_EXT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_ext::baud_usartfp_mode","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD_USARTFP_MODE",null,null],[6,"W","","Writer for register BAUD_USARTFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",3353,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",3354,[[],["baud_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd51g::sercom0::usart_ext::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",3355,[[],["baud_w",3]]],[0,"rxpl","atsamd51g::sercom0::usart_ext","USART_EXT Receive Pulse Length",null,null],[3,"RXPL_W","atsamd51g::sercom0::usart_ext::rxpl","Write proxy for field `RXPL`",null,null],[6,"R","","Reader of register RXPL",null,null],[6,"W","","Writer for register RXPL",null,null],[6,"RXPL_R","","Reader of field `RXPL`",null,null],[11,"bits","","Writes raw bits to the field",3356,[[],["w",6]]],[11,"rxpl","atsamd51g::generic","Bits 0:7 - Receive Pulse Length",6,[[],["rxpl_r",6]]],[11,"rxpl","atsamd51g::sercom0::usart_ext::rxpl","Bits 0:7 - Receive Pulse Length",3357,[[],["rxpl_r",6]]],[11,"rxpl","atsamd51g::generic","Bits 0:7 - Receive Pulse Length",7,[[],["rxpl_w",3]]],[11,"rxpl","atsamd51g::sercom0::usart_ext::rxpl","Bits 0:7 - Receive Pulse Length",3358,[[],["rxpl_w",3]]],[0,"intenclr","atsamd51g::sercom0::usart_ext","USART_EXT Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::usart_ext::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3359,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3359,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3359,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3360,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3360,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3360,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3361,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3361,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3361,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3362,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3362,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3362,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3363,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3363,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3363,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3365,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::usart_ext::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3366,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3366,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3366,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",3366,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",3366,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",3366,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3366,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::usart_ext::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3367,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3367,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3367,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",3367,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",3367,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",3367,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3367,[[],["error_w",3]]],[0,"intenset","atsamd51g::sercom0::usart_ext","USART_EXT Interrupt Enable Set",null,null],[3,"DRE_W","atsamd51g::sercom0::usart_ext::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3368,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3369,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3369,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3369,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3370,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3370,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3370,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3371,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3371,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3371,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3372,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3372,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3372,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3373,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3373,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3373,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3374,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3374,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3374,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::usart_ext::intenset","Bit 0 - Data Register Empty Interrupt Enable",3375,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3375,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3375,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",3375,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",3375,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",3375,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3375,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::usart_ext::intenset","Bit 0 - Data Register Empty Interrupt Enable",3376,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3376,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3376,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",3376,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",3376,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",3376,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3376,[[],["error_w",3]]],[0,"intflag","atsamd51g::sercom0::usart_ext","USART_EXT Interrupt Flag Status and Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::usart_ext::intflag","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3377,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3377,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3377,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3378,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3378,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3378,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3379,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3379,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3379,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3380,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3380,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3380,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3381,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3381,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3381,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3382,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3382,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3382,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3383,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3383,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3383,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::usart_ext::intflag","Bit 0 - Data Register Empty Interrupt",3384,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3384,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3384,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",3384,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",3384,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",3384,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",3384,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::usart_ext::intflag","Bit 0 - Data Register Empty Interrupt",3385,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3385,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3385,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",3385,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",3385,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",3385,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",3385,[[],["error_w",3]]],[0,"status","atsamd51g::sercom0::usart_ext","USART_EXT Status",null,null],[3,"PERR_W","atsamd51g::sercom0::usart_ext::status","Write proxy for field `PERR`",null,null],[3,"FERR_W","","Write proxy for field `FERR`",null,null],[3,"BUFOVF_W","","Write proxy for field `BUFOVF`",null,null],[3,"CTS_W","","Write proxy for field `CTS`",null,null],[3,"ISF_W","","Write proxy for field `ISF`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[3,"TXE_W","","Write proxy for field `TXE`",null,null],[3,"ITER_W","","Write proxy for field `ITER`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[6,"CTS_R","","Reader of field `CTS`",null,null],[6,"ISF_R","","Reader of field `ISF`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[6,"TXE_R","","Reader of field `TXE`",null,null],[6,"ITER_R","","Reader of field `ITER`",null,null],[11,"set_bit","","Sets the field bit",3386,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3386,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3386,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3387,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3388,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3388,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3388,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3389,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3389,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3389,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3390,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3390,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3390,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3391,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3391,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3391,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3392,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3392,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3392,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3393,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3393,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3393,[[],["w",6]]],[11,"perr","atsamd51g::generic","Bit 0 - Parity Error",6,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",6,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",6,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",6,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",6,[[],["coll_r",6]]],[11,"txe","","Bit 6 - Transmitter Empty",6,[[],["txe_r",6]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",6,[[],["iter_r",6]]],[11,"perr","atsamd51g::sercom0::usart_ext::status","Bit 0 - Parity Error",3394,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",3394,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",3394,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",3394,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",3394,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",3394,[[],["coll_r",6]]],[11,"txe","","Bit 6 - Transmitter Empty",3394,[[],["txe_r",6]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",3394,[[],["iter_r",6]]],[11,"perr","atsamd51g::generic","Bit 0 - Parity Error",7,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",7,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"cts","","Bit 3 - Clear To Send",7,[[],["cts_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",7,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",7,[[],["coll_w",3]]],[11,"txe","","Bit 6 - Transmitter Empty",7,[[],["txe_w",3]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",7,[[],["iter_w",3]]],[11,"perr","atsamd51g::sercom0::usart_ext::status","Bit 0 - Parity Error",3395,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",3395,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",3395,[[],["bufovf_w",3]]],[11,"cts","","Bit 3 - Clear To Send",3395,[[],["cts_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",3395,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",3395,[[],["coll_w",3]]],[11,"txe","","Bit 6 - Transmitter Empty",3395,[[],["txe_w",3]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",3395,[[],["iter_w",3]]],[0,"syncbusy","atsamd51g::sercom0::usart_ext","USART_EXT Synchronization Busy",null,null],[6,"R","atsamd51g::sercom0::usart_ext::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"RXERRCNT_R","","Reader of field `RXERRCNT`",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"rxerrcnt","","Bit 3 - RXERRCNT Synchronization Busy",6,[[],["rxerrcnt_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",6,[[],["length_r",6]]],[11,"swrst","atsamd51g::sercom0::usart_ext::syncbusy","Bit 0 - Software Reset Synchronization Busy",3396,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",3396,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",3396,[[],["ctrlb_r",6]]],[11,"rxerrcnt","","Bit 3 - RXERRCNT Synchronization Busy",3396,[[],["rxerrcnt_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",3396,[[],["length_r",6]]],[0,"rxerrcnt","atsamd51g::sercom0::usart_ext","USART_EXT Receive Error Count",null,null],[6,"R","atsamd51g::sercom0::usart_ext::rxerrcnt","Reader of register RXERRCNT",null,null],[0,"length","atsamd51g::sercom0::usart_ext","USART_EXT Length",null,null],[3,"LEN_W","atsamd51g::sercom0::usart_ext::length","Write proxy for field `LEN`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[11,"bits","","Writes raw bits to the field",3397,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3398,[[],["w",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",6,[[],["len_r",6]]],[11,"lenen","","Bits 8:9 - Data Length Enable",6,[[],["lenen_r",6]]],[11,"len","atsamd51g::sercom0::usart_ext::length","Bits 0:7 - Data Length",3399,[[],["len_r",6]]],[11,"lenen","","Bits 8:9 - Data Length Enable",3399,[[],["lenen_r",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",7,[[],["len_w",3]]],[11,"lenen","","Bits 8:9 - Data Length Enable",7,[[],["lenen_w",3]]],[11,"len","atsamd51g::sercom0::usart_ext::length","Bits 0:7 - Data Length",3400,[[],["len_w",3]]],[11,"lenen","","Bits 8:9 - Data Length Enable",3400,[[],["lenen_w",3]]],[0,"data","atsamd51g::sercom0::usart_ext","USART_EXT Data",null,null],[3,"DATA_W","atsamd51g::sercom0::usart_ext::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",3401,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd51g::sercom0::usart_ext::data","Bits 0:31 - Data Value",3402,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd51g::sercom0::usart_ext::data","Bits 0:31 - Data Value",3403,[[],["data_w",3]]],[0,"dbgctrl","atsamd51g::sercom0::usart_ext","USART_EXT Debug Control",null,null],[3,"DBGSTOP_W","atsamd51g::sercom0::usart_ext::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",3404,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3404,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3404,[[],["w",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::sercom0::usart_ext::dbgctrl","Bit 0 - Debug Mode",3405,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd51g::sercom0::usart_ext::dbgctrl","Bit 0 - Debug Mode",3406,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd51g::sercom0::usart_ext","USART_EXT Control A",null,null],[6,"CTRLB","","USART_EXT Control B",null,null],[6,"CTRLC","","USART_EXT Control C",null,null],[6,"BAUD","","USART_EXT Baud Rate",null,null],[6,"BAUD_FRAC_MODE","","USART_EXT Baud Rate",null,null],[6,"BAUD_FRACFP_MODE","","USART_EXT Baud Rate",null,null],[6,"BAUD_USARTFP_MODE","","USART_EXT Baud Rate",null,null],[6,"RXPL","","USART_EXT Receive Pulse Length",null,null],[6,"INTENCLR","","USART_EXT Interrupt Enable Clear",null,null],[6,"INTENSET","","USART_EXT Interrupt Enable Set",null,null],[6,"INTFLAG","","USART_EXT Interrupt Flag Status and Clear",null,null],[6,"STATUS","","USART_EXT Status",null,null],[6,"SYNCBUSY","","USART_EXT Synchronization Busy",null,null],[6,"RXERRCNT","","USART_EXT Receive Error Count",null,null],[6,"LENGTH","","USART_EXT Length",null,null],[6,"DATA","","USART_EXT Data",null,null],[6,"DBGCTRL","","USART_EXT Debug Control",null,null],[0,"usart_int","atsamd51g::sercom0","Register block USART INTERNAL CLOCK Mode",null,null],[0,"ctrla","atsamd51g::sercom0::usart_int","USART_INT Control A",null,null],[3,"SWRST_W","atsamd51g::sercom0::usart_int::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"IBON_W","","Write proxy for field `IBON`",null,null],[3,"TXINV_W","","Write proxy for field `TXINV`",null,null],[3,"RXINV_W","","Write proxy for field `RXINV`",null,null],[3,"SAMPR_W","","Write proxy for field `SAMPR`",null,null],[3,"TXPO_W","","Write proxy for field `TXPO`",null,null],[3,"RXPO_W","","Write proxy for field `RXPO`",null,null],[3,"SAMPA_W","","Write proxy for field `SAMPA`",null,null],[3,"FORM_W","","Write proxy for field `FORM`",null,null],[3,"CMODE_W","","Write proxy for field `CMODE`",null,null],[3,"CPOL_W","","Write proxy for field `CPOL`",null,null],[3,"DORD_W","","Write proxy for field `DORD`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"USART_EXT_CLK","","0: USART with external clock",3407,null],[13,"USART_INT_CLK","","1: USART with internal clock",3407,null],[13,"SPI_SLAVE","","2: SPI in slave operation",3407,null],[13,"SPI_MASTER","","3: SPI in master operation",3407,null],[13,"I2C_SLAVE","","4: I2C slave operation",3407,null],[13,"I2C_MASTER","","5: I2C master operation",3407,null],[4,"SAMPR_A","","Sample",null,null],[13,"_16X_ARITHMETIC","","0: 16x over-sampling using arithmetic baudrate generation",3408,null],[13,"_16X_FRACTIONAL","","1: 16x over-sampling using fractional baudrate generation",3408,null],[13,"_8X_ARITHMETIC","","2: 8x over-sampling using arithmetic baudrate generation",3408,null],[13,"_8X_FRACTIONAL","","3: 8x over-sampling using fractional baudrate generation",3408,null],[13,"_3X_ARITHMETIC","","4: 3x over-sampling using arithmetic baudrate generation",3408,null],[4,"TXPO_A","","Transmit Data Pinout",null,null],[13,"PAD0","","0: SERCOM PAD[0] is used for data transmission",3409,null],[13,"PAD3","","3: SERCOM_PAD[0] is used for data transmission",3409,null],[4,"RXPO_A","","Receive Data Pinout",null,null],[13,"PAD0","","0: SERCOM PAD[0] is used for data reception",3410,null],[13,"PAD1","","1: SERCOM PAD[1] is used for data reception",3410,null],[13,"PAD2","","2: SERCOM PAD[2] is used for data reception",3410,null],[13,"PAD3","","3: SERCOM PAD[3] is used for data reception",3410,null],[4,"FORM_A","","Frame Format",null,null],[13,"USART_FRAME_NO_PARITY","","0: USART frame",3411,null],[13,"USART_FRAME_WITH_PARITY","","1: USART frame with parity",3411,null],[13,"USART_FRAME_LIN_MASTER_MODE","","2: LIN Master - Break and sync generation",3411,null],[13,"USART_FRAME_AUTO_BAUD_NO_PARITY","","4: Auto-baud - break detection and auto-baud",3411,null],[13,"USART_FRAME_AUTO_BAUD_WITH_PARITY","","5: Auto-baud - break detection and auto-baud with parity",3411,null],[13,"USART_FRAME_ISO_7816","","7: ISO 7816",3411,null],[4,"CMODE_A","","Communication Mode",null,null],[13,"ASYNC","","0: Asynchronous Communication",3412,null],[13,"SYNC","","1: Synchronous Communication",3412,null],[4,"CPOL_A","","Clock Polarity",null,null],[13,"IDLE_LOW","","0: TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK…",3413,null],[13,"IDLE_HIGH","","1: TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK…",3413,null],[4,"DORD_A","","Data Order",null,null],[13,"MSB","","0: MSB is transmitted first",3414,null],[13,"LSB","","1: LSB is transmitted first",3414,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"IBON_R","","Reader of field `IBON`",null,null],[6,"TXINV_R","","Reader of field `TXINV`",null,null],[6,"RXINV_R","","Reader of field `RXINV`",null,null],[6,"SAMPR_R","","Reader of field `SAMPR`",null,null],[6,"TXPO_R","","Reader of field `TXPO`",null,null],[6,"RXPO_R","","Reader of field `RXPO`",null,null],[6,"SAMPA_R","","Reader of field `SAMPA`",null,null],[6,"FORM_R","","Reader of field `FORM`",null,null],[6,"CMODE_R","","Reader of field `CMODE`",null,null],[6,"CPOL_R","","Reader of field `CPOL`",null,null],[6,"DORD_R","","Reader of field `DORD`",null,null],[11,"set_bit","","Sets the field bit",3415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3415,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3416,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3416,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3416,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",6,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",6,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",6,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",6,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",6,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3417,[[],[["variant",4],["mode_a",4]]]],[11,"is_usart_ext_clk","","Checks if the value of the field is `USART_EXT_CLK`",3417,[[]]],[11,"is_usart_int_clk","","Checks if the value of the field is `USART_INT_CLK`",3417,[[]]],[11,"is_spi_slave","","Checks if the value of the field is `SPI_SLAVE`",3417,[[]]],[11,"is_spi_master","","Checks if the value of the field is `SPI_MASTER`",3417,[[]]],[11,"is_i2c_slave","","Checks if the value of the field is `I2C_SLAVE`",3417,[[]]],[11,"is_i2c_master","","Checks if the value of the field is `I2C_MASTER`",3417,[[]]],[11,"variant","","Writes `variant` to the field",3418,[[["mode_a",4]],["w",6]]],[11,"usart_ext_clk","","USART with external clock",3418,[[],["w",6]]],[11,"usart_int_clk","","USART with internal clock",3418,[[],["w",6]]],[11,"spi_slave","","SPI in slave operation",3418,[[],["w",6]]],[11,"spi_master","","SPI in master operation",3418,[[],["w",6]]],[11,"i2c_slave","","I2C slave operation",3418,[[],["w",6]]],[11,"i2c_master","","I2C master operation",3418,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3418,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3419,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3419,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3419,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3420,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3420,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3420,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3422,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3422,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3422,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sampr_a",4]]]],[11,"is_16x_arithmetic","","Checks if the value of the field is `_16X_ARITHMETIC`",6,[[]]],[11,"is_16x_fractional","","Checks if the value of the field is `_16X_FRACTIONAL`",6,[[]]],[11,"is_8x_arithmetic","","Checks if the value of the field is `_8X_ARITHMETIC`",6,[[]]],[11,"is_8x_fractional","","Checks if the value of the field is `_8X_FRACTIONAL`",6,[[]]],[11,"is_3x_arithmetic","","Checks if the value of the field is `_3X_ARITHMETIC`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3423,[[],[["variant",4],["sampr_a",4]]]],[11,"is_16x_arithmetic","","Checks if the value of the field is `_16X_ARITHMETIC`",3423,[[]]],[11,"is_16x_fractional","","Checks if the value of the field is `_16X_FRACTIONAL`",3423,[[]]],[11,"is_8x_arithmetic","","Checks if the value of the field is `_8X_ARITHMETIC`",3423,[[]]],[11,"is_8x_fractional","","Checks if the value of the field is `_8X_FRACTIONAL`",3423,[[]]],[11,"is_3x_arithmetic","","Checks if the value of the field is `_3X_ARITHMETIC`",3423,[[]]],[11,"variant","","Writes `variant` to the field",3424,[[["sampr_a",4]],["w",6]]],[11,"_16x_arithmetic","","16x over-sampling using arithmetic baudrate generation",3424,[[],["w",6]]],[11,"_16x_fractional","","16x over-sampling using fractional baudrate generation",3424,[[],["w",6]]],[11,"_8x_arithmetic","","8x over-sampling using arithmetic baudrate generation",3424,[[],["w",6]]],[11,"_8x_fractional","","8x over-sampling using fractional baudrate generation",3424,[[],["w",6]]],[11,"_3x_arithmetic","","3x over-sampling using arithmetic baudrate generation",3424,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3424,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["txpo_a",4],["variant",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3425,[[],[["txpo_a",4],["variant",4]]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3425,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",3425,[[]]],[11,"variant","","Writes `variant` to the field",3426,[[["txpo_a",4]],["w",6]]],[11,"pad0","","SERCOM PAD[0] is used for data transmission",3426,[[],["w",6]]],[11,"pad3","","SERCOM_PAD[0] is used for data transmission",3426,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3426,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["rxpo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",6,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",6,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",6,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3427,[[],["rxpo_a",4]]],[11,"is_pad0","","Checks if the value of the field is `PAD0`",3427,[[]]],[11,"is_pad1","","Checks if the value of the field is `PAD1`",3427,[[]]],[11,"is_pad2","","Checks if the value of the field is `PAD2`",3427,[[]]],[11,"is_pad3","","Checks if the value of the field is `PAD3`",3427,[[]]],[11,"variant","","Writes `variant` to the field",3428,[[["rxpo_a",4]],["w",6]]],[11,"pad0","","SERCOM PAD[0] is used for data reception",3428,[[],["w",6]]],[11,"pad1","","SERCOM PAD[1] is used for data reception",3428,[[],["w",6]]],[11,"pad2","","SERCOM PAD[2] is used for data reception",3428,[[],["w",6]]],[11,"pad3","","SERCOM PAD[3] is used for data reception",3428,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3428,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3429,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["form_a",4],["variant",4]]]],[11,"is_usart_frame_no_parity","","Checks if the value of the field is `USART_FRAME_NO_PARITY`",6,[[]]],[11,"is_usart_frame_with_parity","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_lin_master_mode","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_auto_baud_no_parity","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_auto_baud_with_parity","","Checks if the value of the field is…",6,[[]]],[11,"is_usart_frame_iso_7816","","Checks if the value of the field is `USART_FRAME_ISO_7816`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3430,[[],[["form_a",4],["variant",4]]]],[11,"is_usart_frame_no_parity","","Checks if the value of the field is `USART_FRAME_NO_PARITY`",3430,[[]]],[11,"is_usart_frame_with_parity","","Checks if the value of the field is…",3430,[[]]],[11,"is_usart_frame_lin_master_mode","","Checks if the value of the field is…",3430,[[]]],[11,"is_usart_frame_auto_baud_no_parity","","Checks if the value of the field is…",3430,[[]]],[11,"is_usart_frame_auto_baud_with_parity","","Checks if the value of the field is…",3430,[[]]],[11,"is_usart_frame_iso_7816","","Checks if the value of the field is `USART_FRAME_ISO_7816`",3430,[[]]],[11,"variant","","Writes `variant` to the field",3431,[[["form_a",4]],["w",6]]],[11,"usart_frame_no_parity","","USART frame",3431,[[],["w",6]]],[11,"usart_frame_with_parity","","USART frame with parity",3431,[[],["w",6]]],[11,"usart_frame_lin_master_mode","","LIN Master - Break and sync generation",3431,[[],["w",6]]],[11,"usart_frame_auto_baud_no_parity","","Auto-baud - break detection and auto-baud",3431,[[],["w",6]]],[11,"usart_frame_auto_baud_with_parity","","Auto-baud - break detection and auto-baud with parity",3431,[[],["w",6]]],[11,"usart_frame_iso_7816","","ISO 7816",3431,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3431,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cmode_a",4]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",6,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3432,[[],["cmode_a",4]]],[11,"is_async_","","Checks if the value of the field is `ASYNC`",3432,[[]]],[11,"is_sync","","Checks if the value of the field is `SYNC`",3432,[[]]],[11,"variant","","Writes `variant` to the field",3433,[[["cmode_a",4]],["w",6]]],[11,"async_","","Asynchronous Communication",3433,[[],["w",6]]],[11,"sync","","Synchronous Communication",3433,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3433,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3433,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3433,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",6,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3434,[[],["cpol_a",4]]],[11,"is_idle_low","","Checks if the value of the field is `IDLE_LOW`",3434,[[]]],[11,"is_idle_high","","Checks if the value of the field is `IDLE_HIGH`",3434,[[]]],[11,"variant","","Writes `variant` to the field",3435,[[["cpol_a",4]],["w",6]]],[11,"idle_low","","TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge",3435,[[],["w",6]]],[11,"idle_high","","TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge",3435,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3435,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3435,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3435,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",6,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrla","Get enumerated values variant",3436,[[],["dord_a",4]]],[11,"is_msb","","Checks if the value of the field is `MSB`",3436,[[]]],[11,"is_lsb","","Checks if the value of the field is `LSB`",3436,[[]]],[11,"variant","","Writes `variant` to the field",3437,[[["dord_a",4]],["w",6]]],[11,"msb","","MSB is transmitted first",3437,[[],["w",6]]],[11,"lsb","","LSB is transmitted first",3437,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3437,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3437,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3437,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",6,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",6,[[],["ibon_r",6]]],[11,"txinv","","Bit 9 - Transmit Data Invert",6,[[],["txinv_r",6]]],[11,"rxinv","","Bit 10 - Receive Data Invert",6,[[],["rxinv_r",6]]],[11,"sampr","","Bits 13:15 - Sample",6,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",6,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",6,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",6,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",6,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",6,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",6,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",6,[[],["dord_r",6]]],[11,"swrst","atsamd51g::sercom0::usart_int::ctrla","Bit 0 - Software Reset",3438,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3438,[[],["enable_r",6]]],[11,"mode","","Bits 2:4 - Operating Mode",3438,[[],["mode_r",6]]],[11,"runstdby","","Bit 7 - Run during Standby",3438,[[],["runstdby_r",6]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3438,[[],["ibon_r",6]]],[11,"txinv","","Bit 9 - Transmit Data Invert",3438,[[],["txinv_r",6]]],[11,"rxinv","","Bit 10 - Receive Data Invert",3438,[[],["rxinv_r",6]]],[11,"sampr","","Bits 13:15 - Sample",3438,[[],["sampr_r",6]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",3438,[[],["txpo_r",6]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",3438,[[],["rxpo_r",6]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",3438,[[],["sampa_r",6]]],[11,"form","","Bits 24:27 - Frame Format",3438,[[],["form_r",6]]],[11,"cmode","","Bit 28 - Communication Mode",3438,[[],["cmode_r",6]]],[11,"cpol","","Bit 29 - Clock Polarity",3438,[[],["cpol_r",6]]],[11,"dord","","Bit 30 - Data Order",3438,[[],["dord_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",7,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",7,[[],["ibon_w",3]]],[11,"txinv","","Bit 9 - Transmit Data Invert",7,[[],["txinv_w",3]]],[11,"rxinv","","Bit 10 - Receive Data Invert",7,[[],["rxinv_w",3]]],[11,"sampr","","Bits 13:15 - Sample",7,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",7,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",7,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",7,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",7,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",7,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",7,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",7,[[],["dord_w",3]]],[11,"swrst","atsamd51g::sercom0::usart_int::ctrla","Bit 0 - Software Reset",3439,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3439,[[],["enable_w",3]]],[11,"mode","","Bits 2:4 - Operating Mode",3439,[[],["mode_w",3]]],[11,"runstdby","","Bit 7 - Run during Standby",3439,[[],["runstdby_w",3]]],[11,"ibon","","Bit 8 - Immediate Buffer Overflow Notification",3439,[[],["ibon_w",3]]],[11,"txinv","","Bit 9 - Transmit Data Invert",3439,[[],["txinv_w",3]]],[11,"rxinv","","Bit 10 - Receive Data Invert",3439,[[],["rxinv_w",3]]],[11,"sampr","","Bits 13:15 - Sample",3439,[[],["sampr_w",3]]],[11,"txpo","","Bits 16:17 - Transmit Data Pinout",3439,[[],["txpo_w",3]]],[11,"rxpo","","Bits 20:21 - Receive Data Pinout",3439,[[],["rxpo_w",3]]],[11,"sampa","","Bits 22:23 - Sample Adjustment",3439,[[],["sampa_w",3]]],[11,"form","","Bits 24:27 - Frame Format",3439,[[],["form_w",3]]],[11,"cmode","","Bit 28 - Communication Mode",3439,[[],["cmode_w",3]]],[11,"cpol","","Bit 29 - Clock Polarity",3439,[[],["cpol_w",3]]],[11,"dord","","Bit 30 - Data Order",3439,[[],["dord_w",3]]],[0,"ctrlb","atsamd51g::sercom0::usart_int","USART_INT Control B",null,null],[3,"CHSIZE_W","atsamd51g::sercom0::usart_int::ctrlb","Write proxy for field `CHSIZE`",null,null],[3,"SBMODE_W","","Write proxy for field `SBMODE`",null,null],[3,"COLDEN_W","","Write proxy for field `COLDEN`",null,null],[3,"SFDE_W","","Write proxy for field `SFDE`",null,null],[3,"ENC_W","","Write proxy for field `ENC`",null,null],[3,"PMODE_W","","Write proxy for field `PMODE`",null,null],[3,"TXEN_W","","Write proxy for field `TXEN`",null,null],[3,"RXEN_W","","Write proxy for field `RXEN`",null,null],[3,"LINCMD_W","","Write proxy for field `LINCMD`",null,null],[4,"CHSIZE_A","","Character Size",null,null],[13,"_8_BIT","","0: 8 Bits",3440,null],[13,"_9_BIT","","1: 9 Bits",3440,null],[13,"_5_BIT","","5: 5 Bits",3440,null],[13,"_6_BIT","","6: 6 Bits",3440,null],[13,"_7_BIT","","7: 7 Bits",3440,null],[4,"SBMODE_A","","Stop Bit Mode",null,null],[13,"_1_BIT","","0: One Stop Bit",3441,null],[13,"_2_BIT","","1: Two Stop Bits",3441,null],[4,"PMODE_A","","Parity Mode",null,null],[13,"EVEN","","0: Even Parity",3442,null],[13,"ODD","","1: Odd Parity",3442,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"CHSIZE_R","","Reader of field `CHSIZE`",null,null],[6,"SBMODE_R","","Reader of field `SBMODE`",null,null],[6,"COLDEN_R","","Reader of field `COLDEN`",null,null],[6,"SFDE_R","","Reader of field `SFDE`",null,null],[6,"ENC_R","","Reader of field `ENC`",null,null],[6,"PMODE_R","","Reader of field `PMODE`",null,null],[6,"TXEN_R","","Reader of field `TXEN`",null,null],[6,"RXEN_R","","Reader of field `RXEN`",null,null],[6,"LINCMD_R","","Reader of field `LINCMD`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["chsize_a",4],["variant",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",6,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",6,[[]]],[11,"is_5_bit","","Checks if the value of the field is `_5_BIT`",6,[[]]],[11,"is_6_bit","","Checks if the value of the field is `_6_BIT`",6,[[]]],[11,"is_7_bit","","Checks if the value of the field is `_7_BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrlb","Get enumerated values variant",3443,[[],[["chsize_a",4],["variant",4]]]],[11,"is_8_bit","","Checks if the value of the field is `_8_BIT`",3443,[[]]],[11,"is_9_bit","","Checks if the value of the field is `_9_BIT`",3443,[[]]],[11,"is_5_bit","","Checks if the value of the field is `_5_BIT`",3443,[[]]],[11,"is_6_bit","","Checks if the value of the field is `_6_BIT`",3443,[[]]],[11,"is_7_bit","","Checks if the value of the field is `_7_BIT`",3443,[[]]],[11,"variant","","Writes `variant` to the field",3444,[[["chsize_a",4]],["w",6]]],[11,"_8_bit","","8 Bits",3444,[[],["w",6]]],[11,"_9_bit","","9 Bits",3444,[[],["w",6]]],[11,"_5_bit","","5 Bits",3444,[[],["w",6]]],[11,"_6_bit","","6 Bits",3444,[[],["w",6]]],[11,"_7_bit","","7 Bits",3444,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3444,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sbmode_a",4]]],[11,"is_1_bit","","Checks if the value of the field is `_1_BIT`",6,[[]]],[11,"is_2_bit","","Checks if the value of the field is `_2_BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrlb","Get enumerated values variant",3445,[[],["sbmode_a",4]]],[11,"is_1_bit","","Checks if the value of the field is `_1_BIT`",3445,[[]]],[11,"is_2_bit","","Checks if the value of the field is `_2_BIT`",3445,[[]]],[11,"variant","","Writes `variant` to the field",3446,[[["sbmode_a",4]],["w",6]]],[11,"_1_bit","","One Stop Bit",3446,[[],["w",6]]],[11,"_2_bit","","Two Stop Bits",3446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3446,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3446,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3448,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3449,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3449,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3449,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pmode_a",4]]],[11,"is_even","","Checks if the value of the field is `EVEN`",6,[[]]],[11,"is_odd","","Checks if the value of the field is `ODD`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrlb","Get enumerated values variant",3450,[[],["pmode_a",4]]],[11,"is_even","","Checks if the value of the field is `EVEN`",3450,[[]]],[11,"is_odd","","Checks if the value of the field is `ODD`",3450,[[]]],[11,"variant","","Writes `variant` to the field",3451,[[["pmode_a",4]],["w",6]]],[11,"even","","Even Parity",3451,[[],["w",6]]],[11,"odd","","Odd Parity",3451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3451,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3452,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3452,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3452,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3453,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3453,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3453,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3454,[[],["w",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",6,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",6,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",6,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",6,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",6,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",6,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",6,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",6,[[],["rxen_r",6]]],[11,"lincmd","","Bits 24:25 - LIN Command",6,[[],["lincmd_r",6]]],[11,"chsize","atsamd51g::sercom0::usart_int::ctrlb","Bits 0:2 - Character Size",3455,[[],["chsize_r",6]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",3455,[[],["sbmode_r",6]]],[11,"colden","","Bit 8 - Collision Detection Enable",3455,[[],["colden_r",6]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",3455,[[],["sfde_r",6]]],[11,"enc","","Bit 10 - Encoding Format",3455,[[],["enc_r",6]]],[11,"pmode","","Bit 13 - Parity Mode",3455,[[],["pmode_r",6]]],[11,"txen","","Bit 16 - Transmitter Enable",3455,[[],["txen_r",6]]],[11,"rxen","","Bit 17 - Receiver Enable",3455,[[],["rxen_r",6]]],[11,"lincmd","","Bits 24:25 - LIN Command",3455,[[],["lincmd_r",6]]],[11,"chsize","atsamd51g::generic","Bits 0:2 - Character Size",7,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",7,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",7,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",7,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",7,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",7,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",7,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",7,[[],["rxen_w",3]]],[11,"lincmd","","Bits 24:25 - LIN Command",7,[[],["lincmd_w",3]]],[11,"chsize","atsamd51g::sercom0::usart_int::ctrlb","Bits 0:2 - Character Size",3456,[[],["chsize_w",3]]],[11,"sbmode","","Bit 6 - Stop Bit Mode",3456,[[],["sbmode_w",3]]],[11,"colden","","Bit 8 - Collision Detection Enable",3456,[[],["colden_w",3]]],[11,"sfde","","Bit 9 - Start of Frame Detection Enable",3456,[[],["sfde_w",3]]],[11,"enc","","Bit 10 - Encoding Format",3456,[[],["enc_w",3]]],[11,"pmode","","Bit 13 - Parity Mode",3456,[[],["pmode_w",3]]],[11,"txen","","Bit 16 - Transmitter Enable",3456,[[],["txen_w",3]]],[11,"rxen","","Bit 17 - Receiver Enable",3456,[[],["rxen_w",3]]],[11,"lincmd","","Bits 24:25 - LIN Command",3456,[[],["lincmd_w",3]]],[0,"ctrlc","atsamd51g::sercom0::usart_int","USART_INT Control C",null,null],[3,"GTIME_W","atsamd51g::sercom0::usart_int::ctrlc","Write proxy for field `GTIME`",null,null],[3,"BRKLEN_W","","Write proxy for field `BRKLEN`",null,null],[3,"HDRDLY_W","","Write proxy for field `HDRDLY`",null,null],[3,"INACK_W","","Write proxy for field `INACK`",null,null],[3,"DSNACK_W","","Write proxy for field `DSNACK`",null,null],[3,"MAXITER_W","","Write proxy for field `MAXITER`",null,null],[3,"DATA32B_W","","Write proxy for field `DATA32B`",null,null],[4,"DATA32B_A","","Data 32 Bit",null,null],[13,"DATA_READ_WRITE_CHSIZE","","0: Data reads and writes according CTRLB.CHSIZE",3457,null],[13,"DATA_READ_CHSIZE_WRITE_32BIT","","1: Data reads according CTRLB.CHSIZE and writes according…",3457,null],[13,"DATA_READ_32BIT_WRITE_CHSIZE","","2: Data reads according 32-bit extension and writes…",3457,null],[13,"DATA_READ_WRITE_32BIT","","3: Data reads and writes according 32-bit extension",3457,null],[6,"R","","Reader of register CTRLC",null,null],[6,"W","","Writer for register CTRLC",null,null],[6,"GTIME_R","","Reader of field `GTIME`",null,null],[6,"BRKLEN_R","","Reader of field `BRKLEN`",null,null],[6,"HDRDLY_R","","Reader of field `HDRDLY`",null,null],[6,"INACK_R","","Reader of field `INACK`",null,null],[6,"DSNACK_R","","Reader of field `DSNACK`",null,null],[6,"MAXITER_R","","Reader of field `MAXITER`",null,null],[6,"DATA32B_R","","Reader of field `DATA32B`",null,null],[11,"bits","","Writes raw bits to the field",3458,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3459,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3460,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3461,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3461,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3461,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3462,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3462,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3462,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3463,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["data32b_a",4]]],[11,"is_data_read_write_chsize","","Checks if the value of the field is `DATA_READ_WRITE_CHSIZE`",6,[[]]],[11,"is_data_read_chsize_write_32bit","","Checks if the value of the field is…",6,[[]]],[11,"is_data_read_32bit_write_chsize","","Checks if the value of the field is…",6,[[]]],[11,"is_data_read_write_32bit","","Checks if the value of the field is `DATA_READ_WRITE_32BIT`",6,[[]]],[11,"variant","atsamd51g::sercom0::usart_int::ctrlc","Get enumerated values variant",3464,[[],["data32b_a",4]]],[11,"is_data_read_write_chsize","","Checks if the value of the field is `DATA_READ_WRITE_CHSIZE`",3464,[[]]],[11,"is_data_read_chsize_write_32bit","","Checks if the value of the field is…",3464,[[]]],[11,"is_data_read_32bit_write_chsize","","Checks if the value of the field is…",3464,[[]]],[11,"is_data_read_write_32bit","","Checks if the value of the field is `DATA_READ_WRITE_32BIT`",3464,[[]]],[11,"variant","","Writes `variant` to the field",3465,[[["data32b_a",4]],["w",6]]],[11,"data_read_write_chsize","","Data reads and writes according CTRLB.CHSIZE",3465,[[],["w",6]]],[11,"data_read_chsize_write_32bit","","Data reads according CTRLB.CHSIZE and writes according…",3465,[[],["w",6]]],[11,"data_read_32bit_write_chsize","","Data reads according 32-bit extension and writes according…",3465,[[],["w",6]]],[11,"data_read_write_32bit","","Data reads and writes according 32-bit extension",3465,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3465,[[],["w",6]]],[11,"gtime","atsamd51g::generic","Bits 0:2 - Guard Time",6,[[],["gtime_r",6]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",6,[[],["brklen_r",6]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",6,[[],["hdrdly_r",6]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",6,[[],["inack_r",6]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",6,[[],["dsnack_r",6]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",6,[[],["maxiter_r",6]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",6,[[],["data32b_r",6]]],[11,"gtime","atsamd51g::sercom0::usart_int::ctrlc","Bits 0:2 - Guard Time",3466,[[],["gtime_r",6]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",3466,[[],["brklen_r",6]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",3466,[[],["hdrdly_r",6]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",3466,[[],["inack_r",6]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",3466,[[],["dsnack_r",6]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",3466,[[],["maxiter_r",6]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",3466,[[],["data32b_r",6]]],[11,"gtime","atsamd51g::generic","Bits 0:2 - Guard Time",7,[[],["gtime_w",3]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",7,[[],["brklen_w",3]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",7,[[],["hdrdly_w",3]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",7,[[],["inack_w",3]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",7,[[],["dsnack_w",3]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",7,[[],["maxiter_w",3]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",7,[[],["data32b_w",3]]],[11,"gtime","atsamd51g::sercom0::usart_int::ctrlc","Bits 0:2 - Guard Time",3467,[[],["gtime_w",3]]],[11,"brklen","","Bits 8:9 - LIN Master Break Length",3467,[[],["brklen_w",3]]],[11,"hdrdly","","Bits 10:11 - LIN Master Header Delay",3467,[[],["hdrdly_w",3]]],[11,"inack","","Bit 16 - Inhibit Not Acknowledge",3467,[[],["inack_w",3]]],[11,"dsnack","","Bit 17 - Disable Successive NACK",3467,[[],["dsnack_w",3]]],[11,"maxiter","","Bits 20:22 - Maximum Iterations",3467,[[],["maxiter_w",3]]],[11,"data32b","","Bits 24:25 - Data 32 Bit",3467,[[],["data32b_w",3]]],[0,"baud","atsamd51g::sercom0::usart_int","USART_INT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_int::baud","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD",null,null],[6,"W","","Writer for register BAUD",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",3468,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd51g::sercom0::usart_int::baud","Bits 0:15 - Baud Rate Value",3469,[[],["baud_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd51g::sercom0::usart_int::baud","Bits 0:15 - Baud Rate Value",3470,[[],["baud_w",3]]],[0,"baud_frac_mode","atsamd51g::sercom0::usart_int","USART_INT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_int::baud_frac_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRAC_MODE",null,null],[6,"W","","Writer for register BAUD_FRAC_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",3471,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3472,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd51g::sercom0::usart_int::baud_frac_mode","Bits 0:12 - Baud Rate Value",3473,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",3473,[[],["fp_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd51g::sercom0::usart_int::baud_frac_mode","Bits 0:12 - Baud Rate Value",3474,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",3474,[[],["fp_w",3]]],[0,"baud_fracfp_mode","atsamd51g::sercom0::usart_int","USART_INT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_int::baud_fracfp_mode","Write proxy for field `BAUD`",null,null],[3,"FP_W","","Write proxy for field `FP`",null,null],[6,"R","","Reader of register BAUD_FRACFP_MODE",null,null],[6,"W","","Writer for register BAUD_FRACFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[6,"FP_R","","Reader of field `FP`",null,null],[11,"bits","","Writes raw bits to the field",3475,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3476,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",6,[[],["fp_r",6]]],[11,"baud","atsamd51g::sercom0::usart_int::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",3477,[[],["baud_r",6]]],[11,"fp","","Bits 13:15 - Fractional Part",3477,[[],["fp_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:12 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",7,[[],["fp_w",3]]],[11,"baud","atsamd51g::sercom0::usart_int::baud_fracfp_mode","Bits 0:12 - Baud Rate Value",3478,[[],["baud_w",3]]],[11,"fp","","Bits 13:15 - Fractional Part",3478,[[],["fp_w",3]]],[0,"baud_usartfp_mode","atsamd51g::sercom0::usart_int","USART_INT Baud Rate",null,null],[3,"BAUD_W","atsamd51g::sercom0::usart_int::baud_usartfp_mode","Write proxy for field `BAUD`",null,null],[6,"R","","Reader of register BAUD_USARTFP_MODE",null,null],[6,"W","","Writer for register BAUD_USARTFP_MODE",null,null],[6,"BAUD_R","","Reader of field `BAUD`",null,null],[11,"bits","","Writes raw bits to the field",3479,[[],["w",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",6,[[],["baud_r",6]]],[11,"baud","atsamd51g::sercom0::usart_int::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",3480,[[],["baud_r",6]]],[11,"baud","atsamd51g::generic","Bits 0:15 - Baud Rate Value",7,[[],["baud_w",3]]],[11,"baud","atsamd51g::sercom0::usart_int::baud_usartfp_mode","Bits 0:15 - Baud Rate Value",3481,[[],["baud_w",3]]],[0,"rxpl","atsamd51g::sercom0::usart_int","USART_INT Receive Pulse Length",null,null],[3,"RXPL_W","atsamd51g::sercom0::usart_int::rxpl","Write proxy for field `RXPL`",null,null],[6,"R","","Reader of register RXPL",null,null],[6,"W","","Writer for register RXPL",null,null],[6,"RXPL_R","","Reader of field `RXPL`",null,null],[11,"bits","","Writes raw bits to the field",3482,[[],["w",6]]],[11,"rxpl","atsamd51g::generic","Bits 0:7 - Receive Pulse Length",6,[[],["rxpl_r",6]]],[11,"rxpl","atsamd51g::sercom0::usart_int::rxpl","Bits 0:7 - Receive Pulse Length",3483,[[],["rxpl_r",6]]],[11,"rxpl","atsamd51g::generic","Bits 0:7 - Receive Pulse Length",7,[[],["rxpl_w",3]]],[11,"rxpl","atsamd51g::sercom0::usart_int::rxpl","Bits 0:7 - Receive Pulse Length",3484,[[],["rxpl_w",3]]],[0,"intenclr","atsamd51g::sercom0::usart_int","USART_INT Interrupt Enable Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::usart_int::intenclr","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3485,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3485,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3485,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3486,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3486,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3486,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3487,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3487,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3487,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3488,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3488,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3488,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3489,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3489,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3489,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3490,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3490,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3490,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3491,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3491,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3491,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::usart_int::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3492,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3492,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3492,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",3492,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",3492,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",3492,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3492,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Disable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::usart_int::intenclr","Bit 0 - Data Register Empty Interrupt Disable",3493,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Disable",3493,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Disable",3493,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Disable",3493,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Disable",3493,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Disable",3493,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Disable",3493,[[],["error_w",3]]],[0,"intenset","atsamd51g::sercom0::usart_int","USART_INT Interrupt Enable Set",null,null],[3,"DRE_W","atsamd51g::sercom0::usart_int::intenset","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3494,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3494,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3494,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3495,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3495,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3495,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3496,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3496,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3496,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3497,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3497,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3497,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3498,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3498,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3498,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3499,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3499,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3499,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3500,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3500,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3500,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::usart_int::intenset","Bit 0 - Data Register Empty Interrupt Enable",3501,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3501,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3501,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",3501,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",3501,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",3501,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3501,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt Enable",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::usart_int::intenset","Bit 0 - Data Register Empty Interrupt Enable",3502,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt Enable",3502,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt Enable",3502,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt Enable",3502,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt Enable",3502,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt Enable",3502,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt Enable",3502,[[],["error_w",3]]],[0,"intflag","atsamd51g::sercom0::usart_int","USART_INT Interrupt Flag Status and Clear",null,null],[3,"DRE_W","atsamd51g::sercom0::usart_int::intflag","Write proxy for field `DRE`",null,null],[3,"TXC_W","","Write proxy for field `TXC`",null,null],[3,"RXC_W","","Write proxy for field `RXC`",null,null],[3,"RXS_W","","Write proxy for field `RXS`",null,null],[3,"CTSIC_W","","Write proxy for field `CTSIC`",null,null],[3,"RXBRK_W","","Write proxy for field `RXBRK`",null,null],[3,"ERROR_W","","Write proxy for field `ERROR`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DRE_R","","Reader of field `DRE`",null,null],[6,"TXC_R","","Reader of field `TXC`",null,null],[6,"RXC_R","","Reader of field `RXC`",null,null],[6,"RXS_R","","Reader of field `RXS`",null,null],[6,"CTSIC_R","","Reader of field `CTSIC`",null,null],[6,"RXBRK_R","","Reader of field `RXBRK`",null,null],[6,"ERROR_R","","Reader of field `ERROR`",null,null],[11,"set_bit","","Sets the field bit",3503,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3503,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3503,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3504,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3504,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3504,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3505,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3505,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3505,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3506,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3506,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3506,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3507,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3507,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3507,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3508,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3509,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3509,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3509,[[],["w",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",6,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",6,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",6,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",6,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",6,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",6,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",6,[[],["error_r",6]]],[11,"dre","atsamd51g::sercom0::usart_int::intflag","Bit 0 - Data Register Empty Interrupt",3510,[[],["dre_r",6]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3510,[[],["txc_r",6]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3510,[[],["rxc_r",6]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",3510,[[],["rxs_r",6]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",3510,[[],["ctsic_r",6]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",3510,[[],["rxbrk_r",6]]],[11,"error","","Bit 7 - Combined Error Interrupt",3510,[[],["error_r",6]]],[11,"dre","atsamd51g::generic","Bit 0 - Data Register Empty Interrupt",7,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",7,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",7,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",7,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",7,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",7,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",7,[[],["error_w",3]]],[11,"dre","atsamd51g::sercom0::usart_int::intflag","Bit 0 - Data Register Empty Interrupt",3511,[[],["dre_w",3]]],[11,"txc","","Bit 1 - Transmit Complete Interrupt",3511,[[],["txc_w",3]]],[11,"rxc","","Bit 2 - Receive Complete Interrupt",3511,[[],["rxc_w",3]]],[11,"rxs","","Bit 3 - Receive Start Interrupt",3511,[[],["rxs_w",3]]],[11,"ctsic","","Bit 4 - Clear To Send Input Change Interrupt",3511,[[],["ctsic_w",3]]],[11,"rxbrk","","Bit 5 - Break Received Interrupt",3511,[[],["rxbrk_w",3]]],[11,"error","","Bit 7 - Combined Error Interrupt",3511,[[],["error_w",3]]],[0,"status","atsamd51g::sercom0::usart_int","USART_INT Status",null,null],[3,"PERR_W","atsamd51g::sercom0::usart_int::status","Write proxy for field `PERR`",null,null],[3,"FERR_W","","Write proxy for field `FERR`",null,null],[3,"BUFOVF_W","","Write proxy for field `BUFOVF`",null,null],[3,"CTS_W","","Write proxy for field `CTS`",null,null],[3,"ISF_W","","Write proxy for field `ISF`",null,null],[3,"COLL_W","","Write proxy for field `COLL`",null,null],[3,"TXE_W","","Write proxy for field `TXE`",null,null],[3,"ITER_W","","Write proxy for field `ITER`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"FERR_R","","Reader of field `FERR`",null,null],[6,"BUFOVF_R","","Reader of field `BUFOVF`",null,null],[6,"CTS_R","","Reader of field `CTS`",null,null],[6,"ISF_R","","Reader of field `ISF`",null,null],[6,"COLL_R","","Reader of field `COLL`",null,null],[6,"TXE_R","","Reader of field `TXE`",null,null],[6,"ITER_R","","Reader of field `ITER`",null,null],[11,"set_bit","","Sets the field bit",3512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3513,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3513,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3513,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3514,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3515,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3515,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3515,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3516,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3516,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3516,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3517,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3517,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3517,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3518,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3518,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3518,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3519,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3519,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3519,[[],["w",6]]],[11,"perr","atsamd51g::generic","Bit 0 - Parity Error",6,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",6,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",6,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",6,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",6,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",6,[[],["coll_r",6]]],[11,"txe","","Bit 6 - Transmitter Empty",6,[[],["txe_r",6]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",6,[[],["iter_r",6]]],[11,"perr","atsamd51g::sercom0::usart_int::status","Bit 0 - Parity Error",3520,[[],["perr_r",6]]],[11,"ferr","","Bit 1 - Frame Error",3520,[[],["ferr_r",6]]],[11,"bufovf","","Bit 2 - Buffer Overflow",3520,[[],["bufovf_r",6]]],[11,"cts","","Bit 3 - Clear To Send",3520,[[],["cts_r",6]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",3520,[[],["isf_r",6]]],[11,"coll","","Bit 5 - Collision Detected",3520,[[],["coll_r",6]]],[11,"txe","","Bit 6 - Transmitter Empty",3520,[[],["txe_r",6]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",3520,[[],["iter_r",6]]],[11,"perr","atsamd51g::generic","Bit 0 - Parity Error",7,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",7,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",7,[[],["bufovf_w",3]]],[11,"cts","","Bit 3 - Clear To Send",7,[[],["cts_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",7,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",7,[[],["coll_w",3]]],[11,"txe","","Bit 6 - Transmitter Empty",7,[[],["txe_w",3]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",7,[[],["iter_w",3]]],[11,"perr","atsamd51g::sercom0::usart_int::status","Bit 0 - Parity Error",3521,[[],["perr_w",3]]],[11,"ferr","","Bit 1 - Frame Error",3521,[[],["ferr_w",3]]],[11,"bufovf","","Bit 2 - Buffer Overflow",3521,[[],["bufovf_w",3]]],[11,"cts","","Bit 3 - Clear To Send",3521,[[],["cts_w",3]]],[11,"isf","","Bit 4 - Inconsistent Sync Field",3521,[[],["isf_w",3]]],[11,"coll","","Bit 5 - Collision Detected",3521,[[],["coll_w",3]]],[11,"txe","","Bit 6 - Transmitter Empty",3521,[[],["txe_w",3]]],[11,"iter","","Bit 7 - Maximum Number of Repetitions Reached",3521,[[],["iter_w",3]]],[0,"syncbusy","atsamd51g::sercom0::usart_int","USART_INT Synchronization Busy",null,null],[6,"R","atsamd51g::sercom0::usart_int::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"RXERRCNT_R","","Reader of field `RXERRCNT`",null,null],[6,"LENGTH_R","","Reader of field `LENGTH`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",6,[[],["ctrlb_r",6]]],[11,"rxerrcnt","","Bit 3 - RXERRCNT Synchronization Busy",6,[[],["rxerrcnt_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",6,[[],["length_r",6]]],[11,"swrst","atsamd51g::sercom0::usart_int::syncbusy","Bit 0 - Software Reset Synchronization Busy",3522,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - SERCOM Enable Synchronization Busy",3522,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB Synchronization Busy",3522,[[],["ctrlb_r",6]]],[11,"rxerrcnt","","Bit 3 - RXERRCNT Synchronization Busy",3522,[[],["rxerrcnt_r",6]]],[11,"length","","Bit 4 - LENGTH Synchronization Busy",3522,[[],["length_r",6]]],[0,"rxerrcnt","atsamd51g::sercom0::usart_int","USART_INT Receive Error Count",null,null],[6,"R","atsamd51g::sercom0::usart_int::rxerrcnt","Reader of register RXERRCNT",null,null],[0,"length","atsamd51g::sercom0::usart_int","USART_INT Length",null,null],[3,"LEN_W","atsamd51g::sercom0::usart_int::length","Write proxy for field `LEN`",null,null],[3,"LENEN_W","","Write proxy for field `LENEN`",null,null],[6,"R","","Reader of register LENGTH",null,null],[6,"W","","Writer for register LENGTH",null,null],[6,"LEN_R","","Reader of field `LEN`",null,null],[6,"LENEN_R","","Reader of field `LENEN`",null,null],[11,"bits","","Writes raw bits to the field",3523,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3524,[[],["w",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",6,[[],["len_r",6]]],[11,"lenen","","Bits 8:9 - Data Length Enable",6,[[],["lenen_r",6]]],[11,"len","atsamd51g::sercom0::usart_int::length","Bits 0:7 - Data Length",3525,[[],["len_r",6]]],[11,"lenen","","Bits 8:9 - Data Length Enable",3525,[[],["lenen_r",6]]],[11,"len","atsamd51g::generic","Bits 0:7 - Data Length",7,[[],["len_w",3]]],[11,"lenen","","Bits 8:9 - Data Length Enable",7,[[],["lenen_w",3]]],[11,"len","atsamd51g::sercom0::usart_int::length","Bits 0:7 - Data Length",3526,[[],["len_w",3]]],[11,"lenen","","Bits 8:9 - Data Length Enable",3526,[[],["lenen_w",3]]],[0,"data","atsamd51g::sercom0::usart_int","USART_INT Data",null,null],[3,"DATA_W","atsamd51g::sercom0::usart_int::data","Write proxy for field `DATA`",null,null],[6,"R","","Reader of register DATA",null,null],[6,"W","","Writer for register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"bits","","Writes raw bits to the field",3527,[[],["w",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",6,[[],["data_r",6]]],[11,"data","atsamd51g::sercom0::usart_int::data","Bits 0:31 - Data Value",3528,[[],["data_r",6]]],[11,"data","atsamd51g::generic","Bits 0:31 - Data Value",7,[[],["data_w",3]]],[11,"data","atsamd51g::sercom0::usart_int::data","Bits 0:31 - Data Value",3529,[[],["data_w",3]]],[0,"dbgctrl","atsamd51g::sercom0::usart_int","USART_INT Debug Control",null,null],[3,"DBGSTOP_W","atsamd51g::sercom0::usart_int::dbgctrl","Write proxy for field `DBGSTOP`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGSTOP_R","","Reader of field `DBGSTOP`",null,null],[11,"set_bit","","Sets the field bit",3530,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3530,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3530,[[],["w",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",6,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::sercom0::usart_int::dbgctrl","Bit 0 - Debug Mode",3531,[[],["dbgstop_r",6]]],[11,"dbgstop","atsamd51g::generic","Bit 0 - Debug Mode",7,[[],["dbgstop_w",3]]],[11,"dbgstop","atsamd51g::sercom0::usart_int::dbgctrl","Bit 0 - Debug Mode",3532,[[],["dbgstop_w",3]]],[6,"CTRLA","atsamd51g::sercom0::usart_int","USART_INT Control A",null,null],[6,"CTRLB","","USART_INT Control B",null,null],[6,"CTRLC","","USART_INT Control C",null,null],[6,"BAUD","","USART_INT Baud Rate",null,null],[6,"BAUD_FRAC_MODE","","USART_INT Baud Rate",null,null],[6,"BAUD_FRACFP_MODE","","USART_INT Baud Rate",null,null],[6,"BAUD_USARTFP_MODE","","USART_INT Baud Rate",null,null],[6,"RXPL","","USART_INT Receive Pulse Length",null,null],[6,"INTENCLR","","USART_INT Interrupt Enable Clear",null,null],[6,"INTENSET","","USART_INT Interrupt Enable Set",null,null],[6,"INTFLAG","","USART_INT Interrupt Flag Status and Clear",null,null],[6,"STATUS","","USART_INT Status",null,null],[6,"SYNCBUSY","","USART_INT Synchronization Busy",null,null],[6,"RXERRCNT","","USART_INT Receive Error Count",null,null],[6,"LENGTH","","USART_INT Length",null,null],[6,"DATA","","USART_INT Data",null,null],[6,"DBGCTRL","","USART_INT Debug Control",null,null],[11,"usart_int","atsamd51g::sercom0","0x00 - USART INTERNAL CLOCK Mode",3533,[[],["usart_int",3]]],[11,"usart_int_mut","","0x00 - USART INTERNAL CLOCK Mode",3533,[[],["usart_int",3]]],[11,"usart_ext","","0x00 - USART EXTERNAL CLOCK Mode",3533,[[],["usart_ext",3]]],[11,"usart_ext_mut","","0x00 - USART EXTERNAL CLOCK Mode",3533,[[],["usart_ext",3]]],[11,"spim","","0x00 - SPI Master Mode",3533,[[],["spim",3]]],[11,"spim_mut","","0x00 - SPI Master Mode",3533,[[],["spim",3]]],[11,"spis","","0x00 - SPI Slave Mode",3533,[[],["spis",3]]],[11,"spis_mut","","0x00 - SPI Slave Mode",3533,[[],["spis",3]]],[11,"i2cs","","0x00 - I2C Slave Mode",3533,[[],["i2cs",3]]],[11,"i2cs_mut","","0x00 - I2C Slave Mode",3533,[[],["i2cs",3]]],[11,"i2cm","","0x00 - I2C Master Mode",3533,[[],["i2cm",3]]],[11,"i2cm_mut","","0x00 - I2C Master Mode",3533,[[],["i2cm",3]]],[11,"baud_usartfp_mode","","0x0c - USART_EXT Baud Rate",2948,[[],["baud_usartfp_mode",6]]],[11,"baud_usartfp_mode_mut","","0x0c - USART_EXT Baud Rate",2948,[[],["baud_usartfp_mode",6]]],[11,"baud_fracfp_mode","","0x0c - USART_EXT Baud Rate",2948,[[],["baud_fracfp_mode",6]]],[11,"baud_fracfp_mode_mut","","0x0c - USART_EXT Baud Rate",2948,[[],["baud_fracfp_mode",6]]],[11,"baud_frac_mode","","0x0c - USART_EXT Baud Rate",2948,[[],["baud_frac_mode",6]]],[11,"baud_frac_mode_mut","","0x0c - USART_EXT Baud Rate",2948,[[],["baud_frac_mode",6]]],[11,"baud","","0x0c - USART_EXT Baud Rate",2948,[[],["baud",6]]],[11,"baud_mut","","0x0c - USART_EXT Baud Rate",2948,[[],["baud",6]]],[11,"baud_usartfp_mode","","0x0c - USART_INT Baud Rate",2949,[[],["baud_usartfp_mode",6]]],[11,"baud_usartfp_mode_mut","","0x0c - USART_INT Baud Rate",2949,[[],["baud_usartfp_mode",6]]],[11,"baud_fracfp_mode","","0x0c - USART_INT Baud Rate",2949,[[],["baud_fracfp_mode",6]]],[11,"baud_fracfp_mode_mut","","0x0c - USART_INT Baud Rate",2949,[[],["baud_fracfp_mode",6]]],[11,"baud_frac_mode","","0x0c - USART_INT Baud Rate",2949,[[],["baud_frac_mode",6]]],[11,"baud_frac_mode_mut","","0x0c - USART_INT Baud Rate",2949,[[],["baud_frac_mode",6]]],[11,"baud","","0x0c - USART_INT Baud Rate",2949,[[],["baud",6]]],[11,"baud_mut","","0x0c - USART_INT Baud Rate",2949,[[],["baud",6]]],[0,"supc","atsamd51g","Supply Controller",null,null],[3,"RegisterBlock","atsamd51g::supc","Register block",null,null],[12,"intenclr","","0x00 - Interrupt Enable Clear",3534,null],[12,"intenset","","0x04 - Interrupt Enable Set",3534,null],[12,"intflag","","0x08 - Interrupt Flag Status and Clear",3534,null],[12,"status","","0x0c - Power and Clocks Status",3534,null],[12,"bod33","","0x10 - BOD33 Control",3534,null],[12,"vreg","","0x18 - VREG Control",3534,null],[12,"vref","","0x1c - VREF Control",3534,null],[12,"bbps","","0x20 - Battery Backup Power Switch",3534,null],[12,"bkout","","0x24 - Backup Output Control",3534,null],[12,"bkin","","0x28 - Backup Input Control",3534,null],[0,"intenclr","","Interrupt Enable Clear",null,null],[3,"BOD33RDY_W","atsamd51g::supc::intenclr","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"VREGRDY_W","","Write proxy for field `VREGRDY`",null,null],[3,"VCORERDY_W","","Write proxy for field `VCORERDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"VREGRDY_R","","Reader of field `VREGRDY`",null,null],[6,"VCORERDY_R","","Reader of field `VCORERDY`",null,null],[11,"set_bit","","Sets the field bit",3535,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3535,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3535,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3536,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3536,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3536,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3537,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3537,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3537,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3538,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3538,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3538,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3539,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3539,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3539,[[],["w",6]]],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",6,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",6,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::supc::intenclr","Bit 0 - BOD33 Ready",3540,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3540,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3540,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3540,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3540,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 1 - BOD33 Detection",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",7,[[],["b33srdy_w",3]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",7,[[],["vregrdy_w",3]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",7,[[],["vcorerdy_w",3]]],[11,"bod33rdy","atsamd51g::supc::intenclr","Bit 0 - BOD33 Ready",3541,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3541,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3541,[[],["b33srdy_w",3]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3541,[[],["vregrdy_w",3]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3541,[[],["vcorerdy_w",3]]],[0,"intenset","atsamd51g::supc","Interrupt Enable Set",null,null],[3,"BOD33RDY_W","atsamd51g::supc::intenset","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"VREGRDY_W","","Write proxy for field `VREGRDY`",null,null],[3,"VCORERDY_W","","Write proxy for field `VCORERDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"VREGRDY_R","","Reader of field `VREGRDY`",null,null],[6,"VCORERDY_R","","Reader of field `VCORERDY`",null,null],[11,"set_bit","","Sets the field bit",3542,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3542,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3542,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3543,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3543,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3543,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3544,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3544,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3544,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3545,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3545,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3545,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3546,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3546,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3546,[[],["w",6]]],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",6,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",6,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::supc::intenset","Bit 0 - BOD33 Ready",3547,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3547,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3547,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3547,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3547,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 1 - BOD33 Detection",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",7,[[],["b33srdy_w",3]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",7,[[],["vregrdy_w",3]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",7,[[],["vcorerdy_w",3]]],[11,"bod33rdy","atsamd51g::supc::intenset","Bit 0 - BOD33 Ready",3548,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3548,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3548,[[],["b33srdy_w",3]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3548,[[],["vregrdy_w",3]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3548,[[],["vcorerdy_w",3]]],[0,"intflag","atsamd51g::supc","Interrupt Flag Status and Clear",null,null],[3,"BOD33RDY_W","atsamd51g::supc::intflag","Write proxy for field `BOD33RDY`",null,null],[3,"BOD33DET_W","","Write proxy for field `BOD33DET`",null,null],[3,"B33SRDY_W","","Write proxy for field `B33SRDY`",null,null],[3,"VREGRDY_W","","Write proxy for field `VREGRDY`",null,null],[3,"VCORERDY_W","","Write proxy for field `VCORERDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"VREGRDY_R","","Reader of field `VREGRDY`",null,null],[6,"VCORERDY_R","","Reader of field `VCORERDY`",null,null],[11,"set_bit","","Sets the field bit",3549,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3549,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3549,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3550,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3550,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3550,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3551,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3551,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3552,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3553,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3553,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3553,[[],["w",6]]],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",6,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",6,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::supc::intflag","Bit 0 - BOD33 Ready",3554,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3554,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3554,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3554,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3554,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",7,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 1 - BOD33 Detection",7,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",7,[[],["b33srdy_w",3]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",7,[[],["vregrdy_w",3]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",7,[[],["vcorerdy_w",3]]],[11,"bod33rdy","atsamd51g::supc::intflag","Bit 0 - BOD33 Ready",3555,[[],["bod33rdy_w",3]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3555,[[],["bod33det_w",3]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3555,[[],["b33srdy_w",3]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3555,[[],["vregrdy_w",3]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3555,[[],["vcorerdy_w",3]]],[0,"status","atsamd51g::supc","Power and Clocks Status",null,null],[6,"R","atsamd51g::supc::status","Reader of register STATUS",null,null],[6,"BOD33RDY_R","","Reader of field `BOD33RDY`",null,null],[6,"BOD33DET_R","","Reader of field `BOD33DET`",null,null],[6,"B33SRDY_R","","Reader of field `B33SRDY`",null,null],[6,"VREGRDY_R","","Reader of field `VREGRDY`",null,null],[6,"VCORERDY_R","","Reader of field `VCORERDY`",null,null],[11,"bod33rdy","atsamd51g::generic","Bit 0 - BOD33 Ready",6,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",6,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",6,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",6,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",6,[[],["vcorerdy_r",6]]],[11,"bod33rdy","atsamd51g::supc::status","Bit 0 - BOD33 Ready",3556,[[],["bod33rdy_r",6]]],[11,"bod33det","","Bit 1 - BOD33 Detection",3556,[[],["bod33det_r",6]]],[11,"b33srdy","","Bit 2 - BOD33 Synchronization Ready",3556,[[],["b33srdy_r",6]]],[11,"vregrdy","","Bit 8 - Voltage Regulator Ready",3556,[[],["vregrdy_r",6]]],[11,"vcorerdy","","Bit 10 - VDDCORE Ready",3556,[[],["vcorerdy_r",6]]],[0,"bod33","atsamd51g::supc","BOD33 Control",null,null],[3,"ENABLE_W","atsamd51g::supc::bod33","Write proxy for field `ENABLE`",null,null],[3,"ACTION_W","","Write proxy for field `ACTION`",null,null],[3,"STDBYCFG_W","","Write proxy for field `STDBYCFG`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"RUNHIB_W","","Write proxy for field `RUNHIB`",null,null],[3,"RUNBKUP_W","","Write proxy for field `RUNBKUP`",null,null],[3,"HYST_W","","Write proxy for field `HYST`",null,null],[3,"PSEL_W","","Write proxy for field `PSEL`",null,null],[3,"LEVEL_W","","Write proxy for field `LEVEL`",null,null],[3,"VBATLEVEL_W","","Write proxy for field `VBATLEVEL`",null,null],[4,"ACTION_A","","Action when Threshold Crossed",null,null],[13,"NONE","","0: No action",3557,null],[13,"RESET","","1: The BOD33 generates a reset",3557,null],[13,"INT","","2: The BOD33 generates an interrupt",3557,null],[13,"BKUP","","3: The BOD33 puts the device in backup sleep mode",3557,null],[4,"PSEL_A","","Prescaler Select",null,null],[13,"NODIV","","0: Not divided",3558,null],[13,"DIV4","","1: Divide clock by 4",3558,null],[13,"DIV8","","2: Divide clock by 8",3558,null],[13,"DIV16","","3: Divide clock by 16",3558,null],[13,"DIV32","","4: Divide clock by 32",3558,null],[13,"DIV64","","5: Divide clock by 64",3558,null],[13,"DIV128","","6: Divide clock by 128",3558,null],[13,"DIV256","","7: Divide clock by 256",3558,null],[6,"R","","Reader of register BOD33",null,null],[6,"W","","Writer for register BOD33",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"ACTION_R","","Reader of field `ACTION`",null,null],[6,"STDBYCFG_R","","Reader of field `STDBYCFG`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"RUNHIB_R","","Reader of field `RUNHIB`",null,null],[6,"RUNBKUP_R","","Reader of field `RUNBKUP`",null,null],[6,"HYST_R","","Reader of field `HYST`",null,null],[6,"PSEL_R","","Reader of field `PSEL`",null,null],[6,"LEVEL_R","","Reader of field `LEVEL`",null,null],[6,"VBATLEVEL_R","","Reader of field `VBATLEVEL`",null,null],[11,"set_bit","","Sets the field bit",3559,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3559,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3559,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["action_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"is_int","","Checks if the value of the field is `INT`",6,[[]]],[11,"is_bkup","","Checks if the value of the field is `BKUP`",6,[[]]],[11,"variant","atsamd51g::supc::bod33","Get enumerated values variant",3560,[[],["action_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",3560,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",3560,[[]]],[11,"is_int","","Checks if the value of the field is `INT`",3560,[[]]],[11,"is_bkup","","Checks if the value of the field is `BKUP`",3560,[[]]],[11,"variant","","Writes `variant` to the field",3561,[[["action_a",4]],["w",6]]],[11,"none","","No action",3561,[[],["w",6]]],[11,"reset","","The BOD33 generates a reset",3561,[[],["w",6]]],[11,"int","","The BOD33 generates an interrupt",3561,[[],["w",6]]],[11,"bkup","","The BOD33 puts the device in backup sleep mode",3561,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3561,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3562,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3562,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3562,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3563,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3563,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3563,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3564,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3564,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3564,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3565,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3565,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3565,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3566,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["psel_a",4]]],[11,"is_nodiv","","Checks if the value of the field is `NODIV`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"variant","atsamd51g::supc::bod33","Get enumerated values variant",3567,[[],["psel_a",4]]],[11,"is_nodiv","","Checks if the value of the field is `NODIV`",3567,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",3567,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",3567,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",3567,[[]]],[11,"is_div32","","Checks if the value of the field is `DIV32`",3567,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",3567,[[]]],[11,"is_div128","","Checks if the value of the field is `DIV128`",3567,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",3567,[[]]],[11,"variant","","Writes `variant` to the field",3568,[[["psel_a",4]],["w",6]]],[11,"nodiv","","Not divided",3568,[[],["w",6]]],[11,"div4","","Divide clock by 4",3568,[[],["w",6]]],[11,"div8","","Divide clock by 8",3568,[[],["w",6]]],[11,"div16","","Divide clock by 16",3568,[[],["w",6]]],[11,"div32","","Divide clock by 32",3568,[[],["w",6]]],[11,"div64","","Divide clock by 64",3568,[[],["w",6]]],[11,"div128","","Divide clock by 128",3568,[[],["w",6]]],[11,"div256","","Divide clock by 256",3568,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3568,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3569,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3570,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"action","","Bits 2:3 - Action when Threshold Crossed",6,[[],["action_r",6]]],[11,"stdbycfg","","Bit 4 - Configuration in Standby mode",6,[[],["stdbycfg_r",6]]],[11,"runstdby","","Bit 5 - Run in Standby mode",6,[[],["runstdby_r",6]]],[11,"runhib","","Bit 6 - Run in Hibernate mode",6,[[],["runhib_r",6]]],[11,"runbkup","","Bit 7 - Run in Backup mode",6,[[],["runbkup_r",6]]],[11,"hyst","","Bits 8:11 - Hysteresis value",6,[[],["hyst_r",6]]],[11,"psel","","Bits 12:14 - Prescaler Select",6,[[],["psel_r",6]]],[11,"level","","Bits 16:23 - Threshold Level for VDD",6,[[],["level_r",6]]],[11,"vbatlevel","","Bits 24:31 - Threshold Level in battery backup sleep mode…",6,[[],["vbatlevel_r",6]]],[11,"enable","atsamd51g::supc::bod33","Bit 1 - Enable",3571,[[],["enable_r",6]]],[11,"action","","Bits 2:3 - Action when Threshold Crossed",3571,[[],["action_r",6]]],[11,"stdbycfg","","Bit 4 - Configuration in Standby mode",3571,[[],["stdbycfg_r",6]]],[11,"runstdby","","Bit 5 - Run in Standby mode",3571,[[],["runstdby_r",6]]],[11,"runhib","","Bit 6 - Run in Hibernate mode",3571,[[],["runhib_r",6]]],[11,"runbkup","","Bit 7 - Run in Backup mode",3571,[[],["runbkup_r",6]]],[11,"hyst","","Bits 8:11 - Hysteresis value",3571,[[],["hyst_r",6]]],[11,"psel","","Bits 12:14 - Prescaler Select",3571,[[],["psel_r",6]]],[11,"level","","Bits 16:23 - Threshold Level for VDD",3571,[[],["level_r",6]]],[11,"vbatlevel","","Bits 24:31 - Threshold Level in battery backup sleep mode…",3571,[[],["vbatlevel_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"action","","Bits 2:3 - Action when Threshold Crossed",7,[[],["action_w",3]]],[11,"stdbycfg","","Bit 4 - Configuration in Standby mode",7,[[],["stdbycfg_w",3]]],[11,"runstdby","","Bit 5 - Run in Standby mode",7,[[],["runstdby_w",3]]],[11,"runhib","","Bit 6 - Run in Hibernate mode",7,[[],["runhib_w",3]]],[11,"runbkup","","Bit 7 - Run in Backup mode",7,[[],["runbkup_w",3]]],[11,"hyst","","Bits 8:11 - Hysteresis value",7,[[],["hyst_w",3]]],[11,"psel","","Bits 12:14 - Prescaler Select",7,[[],["psel_w",3]]],[11,"level","","Bits 16:23 - Threshold Level for VDD",7,[[],["level_w",3]]],[11,"vbatlevel","","Bits 24:31 - Threshold Level in battery backup sleep mode…",7,[[],["vbatlevel_w",3]]],[11,"enable","atsamd51g::supc::bod33","Bit 1 - Enable",3572,[[],["enable_w",3]]],[11,"action","","Bits 2:3 - Action when Threshold Crossed",3572,[[],["action_w",3]]],[11,"stdbycfg","","Bit 4 - Configuration in Standby mode",3572,[[],["stdbycfg_w",3]]],[11,"runstdby","","Bit 5 - Run in Standby mode",3572,[[],["runstdby_w",3]]],[11,"runhib","","Bit 6 - Run in Hibernate mode",3572,[[],["runhib_w",3]]],[11,"runbkup","","Bit 7 - Run in Backup mode",3572,[[],["runbkup_w",3]]],[11,"hyst","","Bits 8:11 - Hysteresis value",3572,[[],["hyst_w",3]]],[11,"psel","","Bits 12:14 - Prescaler Select",3572,[[],["psel_w",3]]],[11,"level","","Bits 16:23 - Threshold Level for VDD",3572,[[],["level_w",3]]],[11,"vbatlevel","","Bits 24:31 - Threshold Level in battery backup sleep mode…",3572,[[],["vbatlevel_w",3]]],[0,"vreg","atsamd51g::supc","VREG Control",null,null],[3,"ENABLE_W","atsamd51g::supc::vreg","Write proxy for field `ENABLE`",null,null],[3,"SEL_W","","Write proxy for field `SEL`",null,null],[3,"RUNBKUP_W","","Write proxy for field `RUNBKUP`",null,null],[3,"VSEN_W","","Write proxy for field `VSEN`",null,null],[3,"VSPER_W","","Write proxy for field `VSPER`",null,null],[4,"SEL_A","","Voltage Regulator Selection",null,null],[13,"LDO","","0: LDO selection",3573,null],[13,"BUCK","","1: Buck selection",3573,null],[6,"R","","Reader of register VREG",null,null],[6,"W","","Writer for register VREG",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"SEL_R","","Reader of field `SEL`",null,null],[6,"RUNBKUP_R","","Reader of field `RUNBKUP`",null,null],[6,"VSEN_R","","Reader of field `VSEN`",null,null],[6,"VSPER_R","","Reader of field `VSPER`",null,null],[11,"set_bit","","Sets the field bit",3574,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3574,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3574,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sel_a",4]]],[11,"is_ldo","","Checks if the value of the field is `LDO`",6,[[]]],[11,"is_buck","","Checks if the value of the field is `BUCK`",6,[[]]],[11,"variant","atsamd51g::supc::vreg","Get enumerated values variant",3575,[[],["sel_a",4]]],[11,"is_ldo","","Checks if the value of the field is `LDO`",3575,[[]]],[11,"is_buck","","Checks if the value of the field is `BUCK`",3575,[[]]],[11,"variant","","Writes `variant` to the field",3576,[[["sel_a",4]],["w",6]]],[11,"ldo","","LDO selection",3576,[[],["w",6]]],[11,"buck","","Buck selection",3576,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3576,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3576,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3576,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3577,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3577,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3577,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3578,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3578,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3578,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3579,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"sel","","Bit 2 - Voltage Regulator Selection",6,[[],["sel_r",6]]],[11,"runbkup","","Bit 7 - Run in Backup mode",6,[[],["runbkup_r",6]]],[11,"vsen","","Bit 16 - Voltage Scaling Enable",6,[[],["vsen_r",6]]],[11,"vsper","","Bits 24:26 - Voltage Scaling Period",6,[[],["vsper_r",6]]],[11,"enable","atsamd51g::supc::vreg","Bit 1 - Enable",3580,[[],["enable_r",6]]],[11,"sel","","Bit 2 - Voltage Regulator Selection",3580,[[],["sel_r",6]]],[11,"runbkup","","Bit 7 - Run in Backup mode",3580,[[],["runbkup_r",6]]],[11,"vsen","","Bit 16 - Voltage Scaling Enable",3580,[[],["vsen_r",6]]],[11,"vsper","","Bits 24:26 - Voltage Scaling Period",3580,[[],["vsper_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"sel","","Bit 2 - Voltage Regulator Selection",7,[[],["sel_w",3]]],[11,"runbkup","","Bit 7 - Run in Backup mode",7,[[],["runbkup_w",3]]],[11,"vsen","","Bit 16 - Voltage Scaling Enable",7,[[],["vsen_w",3]]],[11,"vsper","","Bits 24:26 - Voltage Scaling Period",7,[[],["vsper_w",3]]],[11,"enable","atsamd51g::supc::vreg","Bit 1 - Enable",3581,[[],["enable_w",3]]],[11,"sel","","Bit 2 - Voltage Regulator Selection",3581,[[],["sel_w",3]]],[11,"runbkup","","Bit 7 - Run in Backup mode",3581,[[],["runbkup_w",3]]],[11,"vsen","","Bit 16 - Voltage Scaling Enable",3581,[[],["vsen_w",3]]],[11,"vsper","","Bits 24:26 - Voltage Scaling Period",3581,[[],["vsper_w",3]]],[0,"vref","atsamd51g::supc","VREF Control",null,null],[3,"TSEN_W","atsamd51g::supc::vref","Write proxy for field `TSEN`",null,null],[3,"VREFOE_W","","Write proxy for field `VREFOE`",null,null],[3,"TSSEL_W","","Write proxy for field `TSSEL`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"SEL_W","","Write proxy for field `SEL`",null,null],[4,"SEL_A","","Voltage Reference Selection",null,null],[13,"_1V0","","0: 1.0V voltage reference typical value",3582,null],[13,"_1V1","","1: 1.1V voltage reference typical value",3582,null],[13,"_1V2","","2: 1.2V voltage reference typical value",3582,null],[13,"_1V25","","3: 1.25V voltage reference typical value",3582,null],[13,"_2V0","","4: 2.0V voltage reference typical value",3582,null],[13,"_2V2","","5: 2.2V voltage reference typical value",3582,null],[13,"_2V4","","6: 2.4V voltage reference typical value",3582,null],[13,"_2V5","","7: 2.5V voltage reference typical value",3582,null],[6,"R","","Reader of register VREF",null,null],[6,"W","","Writer for register VREF",null,null],[6,"TSEN_R","","Reader of field `TSEN`",null,null],[6,"VREFOE_R","","Reader of field `VREFOE`",null,null],[6,"TSSEL_R","","Reader of field `TSSEL`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"SEL_R","","Reader of field `SEL`",null,null],[11,"set_bit","","Sets the field bit",3583,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3583,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3583,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3584,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3584,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3584,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3585,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3585,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3585,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3586,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3586,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3586,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3587,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3587,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3587,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["sel_a",4]]]],[11,"is_1v0","","Checks if the value of the field is `_1V0`",6,[[]]],[11,"is_1v1","","Checks if the value of the field is `_1V1`",6,[[]]],[11,"is_1v2","","Checks if the value of the field is `_1V2`",6,[[]]],[11,"is_1v25","","Checks if the value of the field is `_1V25`",6,[[]]],[11,"is_2v0","","Checks if the value of the field is `_2V0`",6,[[]]],[11,"is_2v2","","Checks if the value of the field is `_2V2`",6,[[]]],[11,"is_2v4","","Checks if the value of the field is `_2V4`",6,[[]]],[11,"is_2v5","","Checks if the value of the field is `_2V5`",6,[[]]],[11,"variant","atsamd51g::supc::vref","Get enumerated values variant",3588,[[],[["variant",4],["sel_a",4]]]],[11,"is_1v0","","Checks if the value of the field is `_1V0`",3588,[[]]],[11,"is_1v1","","Checks if the value of the field is `_1V1`",3588,[[]]],[11,"is_1v2","","Checks if the value of the field is `_1V2`",3588,[[]]],[11,"is_1v25","","Checks if the value of the field is `_1V25`",3588,[[]]],[11,"is_2v0","","Checks if the value of the field is `_2V0`",3588,[[]]],[11,"is_2v2","","Checks if the value of the field is `_2V2`",3588,[[]]],[11,"is_2v4","","Checks if the value of the field is `_2V4`",3588,[[]]],[11,"is_2v5","","Checks if the value of the field is `_2V5`",3588,[[]]],[11,"variant","","Writes `variant` to the field",3589,[[["sel_a",4]],["w",6]]],[11,"_1v0","","1.0V voltage reference typical value",3589,[[],["w",6]]],[11,"_1v1","","1.1V voltage reference typical value",3589,[[],["w",6]]],[11,"_1v2","","1.2V voltage reference typical value",3589,[[],["w",6]]],[11,"_1v25","","1.25V voltage reference typical value",3589,[[],["w",6]]],[11,"_2v0","","2.0V voltage reference typical value",3589,[[],["w",6]]],[11,"_2v2","","2.2V voltage reference typical value",3589,[[],["w",6]]],[11,"_2v4","","2.4V voltage reference typical value",3589,[[],["w",6]]],[11,"_2v5","","2.5V voltage reference typical value",3589,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3589,[[],["w",6]]],[11,"tsen","atsamd51g::generic","Bit 1 - Temperature Sensor Output Enable",6,[[],["tsen_r",6]]],[11,"vrefoe","","Bit 2 - Voltage Reference Output Enable",6,[[],["vrefoe_r",6]]],[11,"tssel","","Bit 3 - Temperature Sensor Selection",6,[[],["tssel_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Contrl",6,[[],["ondemand_r",6]]],[11,"sel","","Bits 16:19 - Voltage Reference Selection",6,[[],["sel_r",6]]],[11,"tsen","atsamd51g::supc::vref","Bit 1 - Temperature Sensor Output Enable",3590,[[],["tsen_r",6]]],[11,"vrefoe","","Bit 2 - Voltage Reference Output Enable",3590,[[],["vrefoe_r",6]]],[11,"tssel","","Bit 3 - Temperature Sensor Selection",3590,[[],["tssel_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",3590,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - On Demand Contrl",3590,[[],["ondemand_r",6]]],[11,"sel","","Bits 16:19 - Voltage Reference Selection",3590,[[],["sel_r",6]]],[11,"tsen","atsamd51g::generic","Bit 1 - Temperature Sensor Output Enable",7,[[],["tsen_w",3]]],[11,"vrefoe","","Bit 2 - Voltage Reference Output Enable",7,[[],["vrefoe_w",3]]],[11,"tssel","","Bit 3 - Temperature Sensor Selection",7,[[],["tssel_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Contrl",7,[[],["ondemand_w",3]]],[11,"sel","","Bits 16:19 - Voltage Reference Selection",7,[[],["sel_w",3]]],[11,"tsen","atsamd51g::supc::vref","Bit 1 - Temperature Sensor Output Enable",3591,[[],["tsen_w",3]]],[11,"vrefoe","","Bit 2 - Voltage Reference Output Enable",3591,[[],["vrefoe_w",3]]],[11,"tssel","","Bit 3 - Temperature Sensor Selection",3591,[[],["tssel_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",3591,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - On Demand Contrl",3591,[[],["ondemand_w",3]]],[11,"sel","","Bits 16:19 - Voltage Reference Selection",3591,[[],["sel_w",3]]],[0,"bbps","atsamd51g::supc","Battery Backup Power Switch",null,null],[3,"CONF_W","atsamd51g::supc::bbps","Write proxy for field `CONF`",null,null],[3,"WAKEEN_W","","Write proxy for field `WAKEEN`",null,null],[4,"CONF_A","","Battery Backup Configuration",null,null],[13,"BOD33","","0: The power switch is handled by the BOD33",3592,null],[13,"FORCED","","1: In Backup Domain, the backup domain is always supplied…",3592,null],[6,"R","","Reader of register BBPS",null,null],[6,"W","","Writer for register BBPS",null,null],[6,"CONF_R","","Reader of field `CONF`",null,null],[6,"WAKEEN_R","","Reader of field `WAKEEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["conf_a",4]]],[11,"is_bod33","","Checks if the value of the field is `BOD33`",6,[[]]],[11,"is_forced","","Checks if the value of the field is `FORCED`",6,[[]]],[11,"variant","atsamd51g::supc::bbps","Get enumerated values variant",3593,[[],["conf_a",4]]],[11,"is_bod33","","Checks if the value of the field is `BOD33`",3593,[[]]],[11,"is_forced","","Checks if the value of the field is `FORCED`",3593,[[]]],[11,"variant","","Writes `variant` to the field",3594,[[["conf_a",4]],["w",6]]],[11,"bod33","","The power switch is handled by the BOD33",3594,[[],["w",6]]],[11,"forced","","In Backup Domain, the backup domain is always supplied by…",3594,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3594,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3594,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3594,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3595,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3595,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3595,[[],["w",6]]],[11,"conf","atsamd51g::generic","Bit 0 - Battery Backup Configuration",6,[[],["conf_r",6]]],[11,"wakeen","","Bit 2 - Wake Enable",6,[[],["wakeen_r",6]]],[11,"conf","atsamd51g::supc::bbps","Bit 0 - Battery Backup Configuration",3596,[[],["conf_r",6]]],[11,"wakeen","","Bit 2 - Wake Enable",3596,[[],["wakeen_r",6]]],[11,"conf","atsamd51g::generic","Bit 0 - Battery Backup Configuration",7,[[],["conf_w",3]]],[11,"wakeen","","Bit 2 - Wake Enable",7,[[],["wakeen_w",3]]],[11,"conf","atsamd51g::supc::bbps","Bit 0 - Battery Backup Configuration",3597,[[],["conf_w",3]]],[11,"wakeen","","Bit 2 - Wake Enable",3597,[[],["wakeen_w",3]]],[0,"bkout","atsamd51g::supc","Backup Output Control",null,null],[3,"ENOUT0_W","atsamd51g::supc::bkout","Write proxy for field `ENOUT0`",null,null],[3,"ENOUT1_W","","Write proxy for field `ENOUT1`",null,null],[3,"CLROUT0_W","","Write proxy for field `CLROUT0`",null,null],[3,"CLROUT1_W","","Write proxy for field `CLROUT1`",null,null],[3,"SETOUT0_W","","Write proxy for field `SETOUT0`",null,null],[3,"SETOUT1_W","","Write proxy for field `SETOUT1`",null,null],[3,"RTCTGLOUT0_W","","Write proxy for field `RTCTGLOUT0`",null,null],[3,"RTCTGLOUT1_W","","Write proxy for field `RTCTGLOUT1`",null,null],[6,"R","","Reader of register BKOUT",null,null],[6,"W","","Writer for register BKOUT",null,null],[6,"ENOUT0_R","","Reader of field `ENOUT0`",null,null],[6,"ENOUT1_R","","Reader of field `ENOUT1`",null,null],[6,"CLROUT0_R","","Reader of field `CLROUT0`",null,null],[6,"CLROUT1_R","","Reader of field `CLROUT1`",null,null],[6,"SETOUT0_R","","Reader of field `SETOUT0`",null,null],[6,"SETOUT1_R","","Reader of field `SETOUT1`",null,null],[6,"RTCTGLOUT0_R","","Reader of field `RTCTGLOUT0`",null,null],[6,"RTCTGLOUT1_R","","Reader of field `RTCTGLOUT1`",null,null],[11,"set_bit","","Sets the field bit",3598,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3598,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3598,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3599,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3599,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3599,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3600,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3600,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3600,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3601,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3601,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3601,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3602,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3602,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3602,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3603,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3603,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3603,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3604,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3604,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3604,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3605,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3605,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3605,[[],["w",6]]],[11,"enout0","atsamd51g::generic","Bit 0 - Enable OUT0",6,[[],["enout0_r",6]]],[11,"enout1","","Bit 1 - Enable OUT1",6,[[],["enout1_r",6]]],[11,"clrout0","","Bit 8 - Clear OUT0",6,[[],["clrout0_r",6]]],[11,"clrout1","","Bit 9 - Clear OUT1",6,[[],["clrout1_r",6]]],[11,"setout0","","Bit 16 - Set OUT0",6,[[],["setout0_r",6]]],[11,"setout1","","Bit 17 - Set OUT1",6,[[],["setout1_r",6]]],[11,"rtctglout0","","Bit 24 - RTC Toggle OUT0",6,[[],["rtctglout0_r",6]]],[11,"rtctglout1","","Bit 25 - RTC Toggle OUT1",6,[[],["rtctglout1_r",6]]],[11,"enout0","atsamd51g::supc::bkout","Bit 0 - Enable OUT0",3606,[[],["enout0_r",6]]],[11,"enout1","","Bit 1 - Enable OUT1",3606,[[],["enout1_r",6]]],[11,"clrout0","","Bit 8 - Clear OUT0",3606,[[],["clrout0_r",6]]],[11,"clrout1","","Bit 9 - Clear OUT1",3606,[[],["clrout1_r",6]]],[11,"setout0","","Bit 16 - Set OUT0",3606,[[],["setout0_r",6]]],[11,"setout1","","Bit 17 - Set OUT1",3606,[[],["setout1_r",6]]],[11,"rtctglout0","","Bit 24 - RTC Toggle OUT0",3606,[[],["rtctglout0_r",6]]],[11,"rtctglout1","","Bit 25 - RTC Toggle OUT1",3606,[[],["rtctglout1_r",6]]],[11,"enout0","atsamd51g::generic","Bit 0 - Enable OUT0",7,[[],["enout0_w",3]]],[11,"enout1","","Bit 1 - Enable OUT1",7,[[],["enout1_w",3]]],[11,"clrout0","","Bit 8 - Clear OUT0",7,[[],["clrout0_w",3]]],[11,"clrout1","","Bit 9 - Clear OUT1",7,[[],["clrout1_w",3]]],[11,"setout0","","Bit 16 - Set OUT0",7,[[],["setout0_w",3]]],[11,"setout1","","Bit 17 - Set OUT1",7,[[],["setout1_w",3]]],[11,"rtctglout0","","Bit 24 - RTC Toggle OUT0",7,[[],["rtctglout0_w",3]]],[11,"rtctglout1","","Bit 25 - RTC Toggle OUT1",7,[[],["rtctglout1_w",3]]],[11,"enout0","atsamd51g::supc::bkout","Bit 0 - Enable OUT0",3607,[[],["enout0_w",3]]],[11,"enout1","","Bit 1 - Enable OUT1",3607,[[],["enout1_w",3]]],[11,"clrout0","","Bit 8 - Clear OUT0",3607,[[],["clrout0_w",3]]],[11,"clrout1","","Bit 9 - Clear OUT1",3607,[[],["clrout1_w",3]]],[11,"setout0","","Bit 16 - Set OUT0",3607,[[],["setout0_w",3]]],[11,"setout1","","Bit 17 - Set OUT1",3607,[[],["setout1_w",3]]],[11,"rtctglout0","","Bit 24 - RTC Toggle OUT0",3607,[[],["rtctglout0_w",3]]],[11,"rtctglout1","","Bit 25 - RTC Toggle OUT1",3607,[[],["rtctglout1_w",3]]],[0,"bkin","atsamd51g::supc","Backup Input Control",null,null],[6,"R","atsamd51g::supc::bkin","Reader of register BKIN",null,null],[6,"BKIN0_R","","Reader of field `BKIN0`",null,null],[6,"BKIN1_R","","Reader of field `BKIN1`",null,null],[11,"bkin0","atsamd51g::generic","Bit 0 - Backup Input 0",6,[[],["bkin0_r",6]]],[11,"bkin1","","Bit 1 - Backup Input 1",6,[[],["bkin1_r",6]]],[11,"bkin0","atsamd51g::supc::bkin","Bit 0 - Backup Input 0",3608,[[],["bkin0_r",6]]],[11,"bkin1","","Bit 1 - Backup Input 1",3608,[[],["bkin1_r",6]]],[6,"INTENCLR","atsamd51g::supc","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Power and Clocks Status",null,null],[6,"BOD33","","BOD33 Control",null,null],[6,"VREG","","VREG Control",null,null],[6,"VREF","","VREF Control",null,null],[6,"BBPS","","Battery Backup Power Switch",null,null],[6,"BKOUT","","Backup Output Control",null,null],[6,"BKIN","","Backup Input Control",null,null],[0,"tc0","atsamd51g","Basic Timer Counter",null,null],[3,"RegisterBlock","atsamd51g::tc0","Register block",null,null],[3,"COUNT8","","Register block",null,null],[12,"ctrla","","0x00 - Control A",3609,null],[12,"ctrlbclr","","0x04 - Control B Clear",3609,null],[12,"ctrlbset","","0x05 - Control B Set",3609,null],[12,"evctrl","","0x06 - Event Control",3609,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",3609,null],[12,"intenset","","0x09 - Interrupt Enable Set",3609,null],[12,"intflag","","0x0a - Interrupt Flag Status and Clear",3609,null],[12,"status","","0x0b - Status",3609,null],[12,"wave","","0x0c - Waveform Generation Control",3609,null],[12,"drvctrl","","0x0d - Control C",3609,null],[12,"dbgctrl","","0x0f - Debug Control",3609,null],[12,"syncbusy","","0x10 - Synchronization Status",3609,null],[12,"count","","0x14 - COUNT8 Count",3609,null],[12,"per","","0x1b - COUNT8 Period",3609,null],[12,"cc","","0x1c - COUNT8 Compare and Capture",3609,null],[12,"perbuf","","0x2f - COUNT8 Period Buffer",3609,null],[12,"ccbuf","","0x30 - COUNT8 Compare and Capture Buffer",3609,null],[3,"COUNT16","","Register block",null,null],[12,"ctrla","","0x00 - Control A",3610,null],[12,"ctrlbclr","","0x04 - Control B Clear",3610,null],[12,"ctrlbset","","0x05 - Control B Set",3610,null],[12,"evctrl","","0x06 - Event Control",3610,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",3610,null],[12,"intenset","","0x09 - Interrupt Enable Set",3610,null],[12,"intflag","","0x0a - Interrupt Flag Status and Clear",3610,null],[12,"status","","0x0b - Status",3610,null],[12,"wave","","0x0c - Waveform Generation Control",3610,null],[12,"drvctrl","","0x0d - Control C",3610,null],[12,"dbgctrl","","0x0f - Debug Control",3610,null],[12,"syncbusy","","0x10 - Synchronization Status",3610,null],[12,"count","","0x14 - COUNT16 Count",3610,null],[12,"cc","","0x1c - COUNT16 Compare and Capture",3610,null],[12,"ccbuf","","0x30 - COUNT16 Compare and Capture Buffer",3610,null],[3,"COUNT32","","Register block",null,null],[12,"ctrla","","0x00 - Control A",3611,null],[12,"ctrlbclr","","0x04 - Control B Clear",3611,null],[12,"ctrlbset","","0x05 - Control B Set",3611,null],[12,"evctrl","","0x06 - Event Control",3611,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",3611,null],[12,"intenset","","0x09 - Interrupt Enable Set",3611,null],[12,"intflag","","0x0a - Interrupt Flag Status and Clear",3611,null],[12,"status","","0x0b - Status",3611,null],[12,"wave","","0x0c - Waveform Generation Control",3611,null],[12,"drvctrl","","0x0d - Control C",3611,null],[12,"dbgctrl","","0x0f - Debug Control",3611,null],[12,"syncbusy","","0x10 - Synchronization Status",3611,null],[12,"count","","0x14 - COUNT32 Count",3611,null],[12,"cc","","0x1c - COUNT32 Compare and Capture",3611,null],[12,"ccbuf","","0x30 - COUNT32 Compare and Capture Buffer",3611,null],[0,"count8","","Register block 8-bit Counter Mode",null,null],[0,"ctrla","atsamd51g::tc0::count8","Control A",null,null],[3,"SWRST_W","atsamd51g::tc0::count8::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"CAPTEN0_W","","Write proxy for field `CAPTEN0`",null,null],[3,"CAPTEN1_W","","Write proxy for field `CAPTEN1`",null,null],[3,"COPEN0_W","","Write proxy for field `COPEN0`",null,null],[3,"COPEN1_W","","Write proxy for field `COPEN1`",null,null],[3,"CAPTMODE0_W","","Write proxy for field `CAPTMODE0`",null,null],[3,"CAPTMODE1_W","","Write proxy for field `CAPTMODE1`",null,null],[3,"DMAOS_W","","Write proxy for field `DMAOS`",null,null],[4,"MODE_A","","Timer Counter Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",3612,null],[13,"COUNT8","","1: Counter in 8-bit mode",3612,null],[13,"COUNT32","","2: Counter in 32-bit mode",3612,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",3613,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",3613,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock and…",3613,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",3614,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",3614,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",3614,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",3614,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",3614,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",3614,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",3614,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",3614,null],[4,"CAPTMODE0_A","","Capture Mode Channel 0",null,null],[13,"DEFAULT","","0: Default capture",3615,null],[13,"CAPTMIN","","1: Minimum capture",3615,null],[13,"CAPTMAX","","2: Maximum capture",3615,null],[4,"CAPTMODE1_A","","Capture mode Channel 1",null,null],[13,"DEFAULT","","0: Default capture",3616,null],[13,"CAPTMIN","","1: Minimum capture",3616,null],[13,"CAPTMAX","","2: Maximum capture",3616,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"CAPTEN0_R","","Reader of field `CAPTEN0`",null,null],[6,"CAPTEN1_R","","Reader of field `CAPTEN1`",null,null],[6,"COPEN0_R","","Reader of field `COPEN0`",null,null],[6,"COPEN1_R","","Reader of field `COPEN1`",null,null],[6,"CAPTMODE0_R","","Reader of field `CAPTMODE0`",null,null],[6,"CAPTMODE1_R","","Reader of field `CAPTMODE1`",null,null],[6,"DMAOS_R","","Reader of field `DMAOS`",null,null],[11,"set_bit","","Sets the field bit",3617,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3617,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3617,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3618,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrla","Get enumerated values variant",3619,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",3619,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",3619,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",3619,[[]]],[11,"variant","","Writes `variant` to the field",3620,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",3620,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",3620,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",3620,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3620,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrla","Get enumerated values variant",3621,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",3621,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",3621,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",3621,[[]]],[11,"variant","","Writes `variant` to the field",3622,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",3622,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",3622,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock and…",3622,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3622,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3623,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3623,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3623,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3624,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3624,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3624,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrla","Get enumerated values variant",3625,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",3625,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",3625,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",3625,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",3625,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",3625,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",3625,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",3625,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",3625,[[]]],[11,"variant","","Writes `variant` to the field",3626,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",3626,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",3626,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",3626,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",3626,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",3626,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",3626,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",3626,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",3626,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3626,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3627,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3627,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3627,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3628,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3628,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3628,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3629,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3629,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3629,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3630,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3630,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3630,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3631,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3631,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3631,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["captmode0_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrla","Get enumerated values variant",3632,[[],[["variant",4],["captmode0_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",3632,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3632,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3632,[[]]],[11,"variant","","Writes `variant` to the field",3633,[[["captmode0_a",4]],["w",6]]],[11,"default","","Default capture",3633,[[],["w",6]]],[11,"captmin","","Minimum capture",3633,[[],["w",6]]],[11,"captmax","","Maximum capture",3633,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3633,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["captmode1_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrla","Get enumerated values variant",3634,[[],[["variant",4],["captmode1_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",3634,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3634,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3634,[[]]],[11,"variant","","Writes `variant` to the field",3635,[[["captmode1_a",4]],["w",6]]],[11,"default","","Default capture",3635,[[],["w",6]]],[11,"captmin","","Minimum capture",3635,[[],["w",6]]],[11,"captmax","","Maximum capture",3635,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3635,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3636,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3636,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3636,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",6,[[],["mode_r",6]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - Clock On Demand",6,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"alock","","Bit 11 - Auto Lock",6,[[],["alock_r",6]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",6,[[],["capten0_r",6]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",6,[[],["capten1_r",6]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",6,[[],["copen0_r",6]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",6,[[],["copen1_r",6]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",6,[[],["captmode0_r",6]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",6,[[],["captmode1_r",6]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",6,[[],["dmaos_r",6]]],[11,"swrst","atsamd51g::tc0::count8::ctrla","Bit 0 - Software Reset",3637,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3637,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",3637,[[],["mode_r",6]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",3637,[[],["prescsync_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",3637,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - Clock On Demand",3637,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",3637,[[],["prescaler_r",6]]],[11,"alock","","Bit 11 - Auto Lock",3637,[[],["alock_r",6]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",3637,[[],["capten0_r",6]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",3637,[[],["capten1_r",6]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",3637,[[],["copen0_r",6]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",3637,[[],["copen1_r",6]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",3637,[[],["captmode0_r",6]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",3637,[[],["captmode1_r",6]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",3637,[[],["dmaos_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",7,[[],["mode_w",3]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - Clock On Demand",7,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"alock","","Bit 11 - Auto Lock",7,[[],["alock_w",3]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",7,[[],["capten0_w",3]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",7,[[],["capten1_w",3]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",7,[[],["copen0_w",3]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",7,[[],["copen1_w",3]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",7,[[],["captmode0_w",3]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",7,[[],["captmode1_w",3]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",7,[[],["dmaos_w",3]]],[11,"swrst","atsamd51g::tc0::count8::ctrla","Bit 0 - Software Reset",3638,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3638,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",3638,[[],["mode_w",3]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",3638,[[],["prescsync_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",3638,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - Clock On Demand",3638,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",3638,[[],["prescaler_w",3]]],[11,"alock","","Bit 11 - Auto Lock",3638,[[],["alock_w",3]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",3638,[[],["capten0_w",3]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",3638,[[],["capten1_w",3]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",3638,[[],["copen0_w",3]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",3638,[[],["copen1_w",3]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",3638,[[],["captmode0_w",3]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",3638,[[],["captmode1_w",3]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",3638,[[],["dmaos_w",3]]],[0,"ctrlbclr","atsamd51g::tc0::count8","Control B Clear",null,null],[3,"DIR_W","atsamd51g::tc0::count8::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",3639,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",3639,null],[13,"STOP","","2: Force a stop",3639,null],[13,"UPDATE","","3: Force update of double-buffered register",3639,null],[13,"READSYNC","","4: Force a read synchronization of COUNT",3639,null],[13,"DMAOS","","5: One-shot DMA trigger",3639,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3640,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3640,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3640,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3641,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3641,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3641,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3642,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3642,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3642,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrlbclr","Get enumerated values variant",3643,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3643,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3643,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3643,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3643,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3643,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3643,[[]]],[11,"variant","","Writes `variant` to the field",3644,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3644,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",3644,[[],["w",6]]],[11,"stop","","Force a stop",3644,[[],["w",6]]],[11,"update","","Force update of double-buffered register",3644,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",3644,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3644,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3644,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tc0::count8::ctrlbclr","Bit 0 - Counter Direction",3645,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3645,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3645,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",3645,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tc0::count8::ctrlbclr","Bit 0 - Counter Direction",3646,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3646,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3646,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",3646,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd51g::tc0::count8","Control B Set",null,null],[3,"DIR_W","atsamd51g::tc0::count8::ctrlbset","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",3647,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",3647,null],[13,"STOP","","2: Force a stop",3647,null],[13,"UPDATE","","3: Force update of double-buffered register",3647,null],[13,"READSYNC","","4: Force a read synchronization of COUNT",3647,null],[13,"DMAOS","","5: One-shot DMA trigger",3647,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3648,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3648,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3649,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3649,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3649,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3650,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3650,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3650,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::ctrlbset","Get enumerated values variant",3651,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3651,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3651,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3651,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3651,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3651,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3651,[[]]],[11,"variant","","Writes `variant` to the field",3652,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3652,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",3652,[[],["w",6]]],[11,"stop","","Force a stop",3652,[[],["w",6]]],[11,"update","","Force update of double-buffered register",3652,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",3652,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3652,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3652,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tc0::count8::ctrlbset","Bit 0 - Counter Direction",3653,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3653,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3653,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",3653,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tc0::count8::ctrlbset","Bit 0 - Counter Direction",3654,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3654,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3654,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",3654,[[],["cmd_w",3]]],[0,"evctrl","atsamd51g::tc0::count8","Event Control",null,null],[3,"EVACT_W","atsamd51g::tc0::count8::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",3655,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",3655,null],[13,"COUNT","","2: Count on event",3655,null],[13,"START","","3: Start TC on event",3655,null],[13,"STAMP","","4: Time stamp capture",3655,null],[13,"PPW","","5: Period catured in CC0, pulse width in CC1",3655,null],[13,"PWP","","6: Period catured in CC1, pulse width in CC0",3655,null],[13,"PW","","7: Pulse width capture",3655,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"is_pw","","Checks if the value of the field is `PW`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::evctrl","Get enumerated values variant",3656,[[],["evact_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",3656,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3656,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",3656,[[]]],[11,"is_start","","Checks if the value of the field is `START`",3656,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",3656,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",3656,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",3656,[[]]],[11,"is_pw","","Checks if the value of the field is `PW`",3656,[[]]],[11,"variant","","Writes `variant` to the field",3657,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",3657,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",3657,[[],["w",6]]],[11,"count","","Count on event",3657,[[],["w",6]]],[11,"start","","Start TC on event",3657,[[],["w",6]]],[11,"stamp","","Time stamp capture",3657,[[],["w",6]]],[11,"ppw","","Period catured in CC0, pulse width in CC1",3657,[[],["w",6]]],[11,"pwp","","Period catured in CC1, pulse width in CC0",3657,[[],["w",6]]],[11,"pw","","Pulse width capture",3657,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3657,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3658,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3658,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3658,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3659,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3659,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3659,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3660,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3660,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3660,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3661,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3661,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3661,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3662,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3662,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3662,[[],["w",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Enable",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",6,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::tc0::count8::evctrl","Bits 0:2 - Event Action",3663,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",3663,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Enable",3663,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Event Output Enable",3663,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",3663,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",3663,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Enable",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",7,[[],["mceo1_w",3]]],[11,"evact","atsamd51g::tc0::count8::evctrl","Bits 0:2 - Event Action",3664,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",3664,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Enable",3664,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Event Output Enable",3664,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",3664,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",3664,[[],["mceo1_w",3]]],[0,"intenclr","atsamd51g::tc0::count8","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd51g::tc0::count8::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3665,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3665,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3665,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3666,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3667,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3667,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3667,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3668,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3668,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3668,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Disable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Disable",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count8::intenclr","Bit 0 - OVF Interrupt Disable",3669,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Disable",3669,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",3669,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",3669,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Disable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Disable",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count8::intenclr","Bit 0 - OVF Interrupt Disable",3670,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Disable",3670,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",3670,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",3670,[[],["mc1_w",3]]],[0,"intenset","atsamd51g::tc0::count8","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd51g::tc0::count8::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3671,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3671,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3671,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3672,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3672,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3672,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3673,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3673,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3673,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3674,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3674,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3674,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Enable",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count8::intenset","Bit 0 - OVF Interrupt Enable",3675,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Enable",3675,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",3675,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",3675,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Enable",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count8::intenset","Bit 0 - OVF Interrupt Enable",3676,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Enable",3676,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",3676,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",3676,[[],["mc1_w",3]]],[0,"intflag","atsamd51g::tc0::count8","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd51g::tc0::count8::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3677,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3677,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3677,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3678,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3678,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3678,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3679,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3679,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3679,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3680,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3680,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3680,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Flag",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Flag",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count8::intflag","Bit 0 - OVF Interrupt Flag",3681,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Flag",3681,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",3681,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",3681,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Flag",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Flag",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count8::intflag","Bit 0 - OVF Interrupt Flag",3682,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Flag",3682,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",3682,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",3682,[[],["mc1_w",3]]],[0,"status","atsamd51g::tc0::count8","Status",null,null],[3,"STOP_W","atsamd51g::tc0::count8::status","Write proxy for field `STOP`",null,null],[3,"SLAVE_W","","Write proxy for field `SLAVE`",null,null],[3,"PERBUFV_W","","Write proxy for field `PERBUFV`",null,null],[3,"CCBUFV0_W","","Write proxy for field `CCBUFV0`",null,null],[3,"CCBUFV1_W","","Write proxy for field `CCBUFV1`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"PERBUFV_R","","Reader of field `PERBUFV`",null,null],[6,"CCBUFV0_R","","Reader of field `CCBUFV0`",null,null],[6,"CCBUFV1_R","","Reader of field `CCBUFV1`",null,null],[11,"set_bit","","Sets the field bit",3683,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3683,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3683,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3684,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3684,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3684,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3685,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3685,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3685,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3686,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3686,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3686,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3687,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3687,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3687,[[],["w",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop Status Flag",6,[[],["stop_r",6]]],[11,"slave","","Bit 1 - Slave Status Flag",6,[[],["slave_r",6]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",6,[[],["perbufv_r",6]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",6,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",6,[[],["ccbufv1_r",6]]],[11,"stop","atsamd51g::tc0::count8::status","Bit 0 - Stop Status Flag",3688,[[],["stop_r",6]]],[11,"slave","","Bit 1 - Slave Status Flag",3688,[[],["slave_r",6]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",3688,[[],["perbufv_r",6]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",3688,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",3688,[[],["ccbufv1_r",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop Status Flag",7,[[],["stop_w",3]]],[11,"slave","","Bit 1 - Slave Status Flag",7,[[],["slave_w",3]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",7,[[],["perbufv_w",3]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",7,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",7,[[],["ccbufv1_w",3]]],[11,"stop","atsamd51g::tc0::count8::status","Bit 0 - Stop Status Flag",3689,[[],["stop_w",3]]],[11,"slave","","Bit 1 - Slave Status Flag",3689,[[],["slave_w",3]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",3689,[[],["perbufv_w",3]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",3689,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",3689,[[],["ccbufv1_w",3]]],[0,"wave","atsamd51g::tc0::count8","Waveform Generation Control",null,null],[3,"WAVEGEN_W","atsamd51g::tc0::count8::wave","Write proxy for field `WAVEGEN`",null,null],[4,"WAVEGEN_A","","Waveform Generation Mode",null,null],[13,"NFRQ","","0: Normal frequency",3690,null],[13,"MFRQ","","1: Match frequency",3690,null],[13,"NPWM","","2: Normal PWM",3690,null],[13,"MPWM","","3: Match PWM",3690,null],[6,"R","","Reader of register WAVE",null,null],[6,"W","","Writer for register WAVE",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd51g::tc0::count8::wave","Get enumerated values variant",3691,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",3691,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",3691,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",3691,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",3691,[[]]],[11,"variant","","Writes `variant` to the field",3692,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",3692,[[],["w",6]]],[11,"mfrq","","Match frequency",3692,[[],["w",6]]],[11,"npwm","","Normal PWM",3692,[[],["w",6]]],[11,"mpwm","","Match PWM",3692,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3692,[[],["w",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:1 - Waveform Generation Mode",6,[[],["wavegen_r",6]]],[11,"wavegen","atsamd51g::tc0::count8::wave","Bits 0:1 - Waveform Generation Mode",3693,[[],["wavegen_r",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:1 - Waveform Generation Mode",7,[[],["wavegen_w",3]]],[11,"wavegen","atsamd51g::tc0::count8::wave","Bits 0:1 - Waveform Generation Mode",3694,[[],["wavegen_w",3]]],[0,"drvctrl","atsamd51g::tc0::count8","Control C",null,null],[3,"INVEN0_W","atsamd51g::tc0::count8::drvctrl","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[6,"R","","Reader of register DRVCTRL",null,null],[6,"W","","Writer for register DRVCTRL",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[11,"set_bit","","Sets the field bit",3695,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3695,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3695,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3696,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3696,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3696,[[],["w",6]]],[11,"inven0","atsamd51g::generic","Bit 0 - Output Waveform Invert Enable 0",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",6,[[],["inven1_r",6]]],[11,"inven0","atsamd51g::tc0::count8::drvctrl","Bit 0 - Output Waveform Invert Enable 0",3697,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",3697,[[],["inven1_r",6]]],[11,"inven0","atsamd51g::generic","Bit 0 - Output Waveform Invert Enable 0",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",7,[[],["inven1_w",3]]],[11,"inven0","atsamd51g::tc0::count8::drvctrl","Bit 0 - Output Waveform Invert Enable 0",3698,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",3698,[[],["inven1_w",3]]],[0,"dbgctrl","atsamd51g::tc0::count8","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::tc0::count8::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",3699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3699,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::tc0::count8::dbgctrl","Bit 0 - Run During Debug",3700,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::tc0::count8::dbgctrl","Bit 0 - Run During Debug",3701,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::tc0::count8","Synchronization Status",null,null],[6,"R","atsamd51g::tc0::count8::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - swrst",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - enable",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - STATUS",6,[[],["status_r",6]]],[11,"count","","Bit 4 - Counter",6,[[],["count_r",6]]],[11,"per","","Bit 5 - Period",6,[[],["per_r",6]]],[11,"cc0","","Bit 6 - Compare Channel 0",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 7 - Compare Channel 1",6,[[],["cc1_r",6]]],[11,"swrst","atsamd51g::tc0::count8::syncbusy","Bit 0 - swrst",3702,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - enable",3702,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB",3702,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - STATUS",3702,[[],["status_r",6]]],[11,"count","","Bit 4 - Counter",3702,[[],["count_r",6]]],[11,"per","","Bit 5 - Period",3702,[[],["per_r",6]]],[11,"cc0","","Bit 6 - Compare Channel 0",3702,[[],["cc0_r",6]]],[11,"cc1","","Bit 7 - Compare Channel 1",3702,[[],["cc1_r",6]]],[0,"count","atsamd51g::tc0::count8","COUNT8 Count",null,null],[3,"COUNT_W","atsamd51g::tc0::count8::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",3703,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:7 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tc0::count8::count","Bits 0:7 - Counter Value",3704,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:7 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tc0::count8::count","Bits 0:7 - Counter Value",3705,[[],["count_w",3]]],[0,"per","atsamd51g::tc0::count8","COUNT8 Period",null,null],[3,"PER_W","atsamd51g::tc0::count8::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",3706,[[],["w",6]]],[11,"per","atsamd51g::generic","Bits 0:7 - Period Value",6,[[],["per_r",6]]],[11,"per","atsamd51g::tc0::count8::per","Bits 0:7 - Period Value",3707,[[],["per_r",6]]],[11,"per","atsamd51g::generic","Bits 0:7 - Period Value",7,[[],["per_w",3]]],[11,"per","atsamd51g::tc0::count8::per","Bits 0:7 - Period Value",3708,[[],["per_w",3]]],[0,"cc","atsamd51g::tc0::count8","COUNT8 Compare and Capture",null,null],[3,"CC_W","atsamd51g::tc0::count8::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC[%s]",null,null],[6,"W","","Writer for register CC[%s]",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",3709,[[],["w",6]]],[11,"cc","atsamd51g::generic","Bits 0:7 - Counter/Compare Value",6,[[],["cc_r",6]]],[11,"cc","atsamd51g::tc0::count8::cc","Bits 0:7 - Counter/Compare Value",3710,[[],["cc_r",6]]],[11,"cc","atsamd51g::generic","Bits 0:7 - Counter/Compare Value",7,[[],["cc_w",3]]],[11,"cc","atsamd51g::tc0::count8::cc","Bits 0:7 - Counter/Compare Value",3711,[[],["cc_w",3]]],[0,"perbuf","atsamd51g::tc0::count8","COUNT8 Period Buffer",null,null],[3,"PERBUF_W","atsamd51g::tc0::count8::perbuf","Write proxy for field `PERBUF`",null,null],[6,"R","","Reader of register PERBUF",null,null],[6,"W","","Writer for register PERBUF",null,null],[6,"PERBUF_R","","Reader of field `PERBUF`",null,null],[11,"bits","","Writes raw bits to the field",3712,[[],["w",6]]],[11,"perbuf","atsamd51g::generic","Bits 0:7 - Period Buffer Value",6,[[],["perbuf_r",6]]],[11,"perbuf","atsamd51g::tc0::count8::perbuf","Bits 0:7 - Period Buffer Value",3713,[[],["perbuf_r",6]]],[11,"perbuf","atsamd51g::generic","Bits 0:7 - Period Buffer Value",7,[[],["perbuf_w",3]]],[11,"perbuf","atsamd51g::tc0::count8::perbuf","Bits 0:7 - Period Buffer Value",3714,[[],["perbuf_w",3]]],[0,"ccbuf","atsamd51g::tc0::count8","COUNT8 Compare and Capture Buffer",null,null],[3,"CCBUF_W","atsamd51g::tc0::count8::ccbuf","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF[%s]",null,null],[6,"W","","Writer for register CCBUF[%s]",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",3715,[[],["w",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:7 - Counter/Compare Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::tc0::count8::ccbuf","Bits 0:7 - Counter/Compare Buffer Value",3716,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:7 - Counter/Compare Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ccbuf","atsamd51g::tc0::count8::ccbuf","Bits 0:7 - Counter/Compare Buffer Value",3717,[[],["ccbuf_w",3]]],[6,"CTRLA","atsamd51g::tc0::count8","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"WAVE","","Waveform Generation Control",null,null],[6,"DRVCTRL","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","Synchronization Status",null,null],[6,"COUNT","","COUNT8 Count",null,null],[6,"PER","","COUNT8 Period",null,null],[6,"CC","","COUNT8 Compare and Capture",null,null],[6,"PERBUF","","COUNT8 Period Buffer",null,null],[6,"CCBUF","","COUNT8 Compare and Capture Buffer",null,null],[0,"count16","atsamd51g::tc0","Register block 16-bit Counter Mode",null,null],[0,"ctrla","atsamd51g::tc0::count16","Control A",null,null],[3,"SWRST_W","atsamd51g::tc0::count16::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"CAPTEN0_W","","Write proxy for field `CAPTEN0`",null,null],[3,"CAPTEN1_W","","Write proxy for field `CAPTEN1`",null,null],[3,"COPEN0_W","","Write proxy for field `COPEN0`",null,null],[3,"COPEN1_W","","Write proxy for field `COPEN1`",null,null],[3,"CAPTMODE0_W","","Write proxy for field `CAPTMODE0`",null,null],[3,"CAPTMODE1_W","","Write proxy for field `CAPTMODE1`",null,null],[3,"DMAOS_W","","Write proxy for field `DMAOS`",null,null],[4,"MODE_A","","Timer Counter Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",3718,null],[13,"COUNT8","","1: Counter in 8-bit mode",3718,null],[13,"COUNT32","","2: Counter in 32-bit mode",3718,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",3719,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",3719,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock and…",3719,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",3720,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",3720,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",3720,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",3720,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",3720,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",3720,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",3720,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",3720,null],[4,"CAPTMODE0_A","","Capture Mode Channel 0",null,null],[13,"DEFAULT","","0: Default capture",3721,null],[13,"CAPTMIN","","1: Minimum capture",3721,null],[13,"CAPTMAX","","2: Maximum capture",3721,null],[4,"CAPTMODE1_A","","Capture mode Channel 1",null,null],[13,"DEFAULT","","0: Default capture",3722,null],[13,"CAPTMIN","","1: Minimum capture",3722,null],[13,"CAPTMAX","","2: Maximum capture",3722,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"CAPTEN0_R","","Reader of field `CAPTEN0`",null,null],[6,"CAPTEN1_R","","Reader of field `CAPTEN1`",null,null],[6,"COPEN0_R","","Reader of field `COPEN0`",null,null],[6,"COPEN1_R","","Reader of field `COPEN1`",null,null],[6,"CAPTMODE0_R","","Reader of field `CAPTMODE0`",null,null],[6,"CAPTMODE1_R","","Reader of field `CAPTMODE1`",null,null],[6,"DMAOS_R","","Reader of field `DMAOS`",null,null],[11,"set_bit","","Sets the field bit",3723,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3723,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3723,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3724,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3724,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3724,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrla","Get enumerated values variant",3725,[[],[["variant",4],["mode_a",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",3725,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",3725,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",3725,[[]]],[11,"variant","","Writes `variant` to the field",3726,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",3726,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",3726,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",3726,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3726,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrla","Get enumerated values variant",3727,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",3727,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",3727,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",3727,[[]]],[11,"variant","","Writes `variant` to the field",3728,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",3728,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",3728,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock and…",3728,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3728,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3729,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3729,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3729,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3730,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3730,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3730,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrla","Get enumerated values variant",3731,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",3731,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",3731,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",3731,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",3731,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",3731,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",3731,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",3731,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",3731,[[]]],[11,"variant","","Writes `variant` to the field",3732,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",3732,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",3732,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",3732,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",3732,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",3732,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",3732,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",3732,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",3732,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3732,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3733,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3733,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3733,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3734,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3734,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3734,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3735,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3735,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3735,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3736,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3736,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3736,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3737,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3737,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3737,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["captmode0_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrla","Get enumerated values variant",3738,[[],[["variant",4],["captmode0_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",3738,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3738,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3738,[[]]],[11,"variant","","Writes `variant` to the field",3739,[[["captmode0_a",4]],["w",6]]],[11,"default","","Default capture",3739,[[],["w",6]]],[11,"captmin","","Minimum capture",3739,[[],["w",6]]],[11,"captmax","","Maximum capture",3739,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3739,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["captmode1_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrla","Get enumerated values variant",3740,[[],[["variant",4],["captmode1_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",3740,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3740,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3740,[[]]],[11,"variant","","Writes `variant` to the field",3741,[[["captmode1_a",4]],["w",6]]],[11,"default","","Default capture",3741,[[],["w",6]]],[11,"captmin","","Minimum capture",3741,[[],["w",6]]],[11,"captmax","","Maximum capture",3741,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3741,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3742,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3742,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3742,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",6,[[],["mode_r",6]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - Clock On Demand",6,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"alock","","Bit 11 - Auto Lock",6,[[],["alock_r",6]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",6,[[],["capten0_r",6]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",6,[[],["capten1_r",6]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",6,[[],["copen0_r",6]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",6,[[],["copen1_r",6]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",6,[[],["captmode0_r",6]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",6,[[],["captmode1_r",6]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",6,[[],["dmaos_r",6]]],[11,"swrst","atsamd51g::tc0::count16::ctrla","Bit 0 - Software Reset",3743,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3743,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",3743,[[],["mode_r",6]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",3743,[[],["prescsync_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",3743,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - Clock On Demand",3743,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",3743,[[],["prescaler_r",6]]],[11,"alock","","Bit 11 - Auto Lock",3743,[[],["alock_r",6]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",3743,[[],["capten0_r",6]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",3743,[[],["capten1_r",6]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",3743,[[],["copen0_r",6]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",3743,[[],["copen1_r",6]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",3743,[[],["captmode0_r",6]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",3743,[[],["captmode1_r",6]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",3743,[[],["dmaos_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",7,[[],["mode_w",3]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - Clock On Demand",7,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"alock","","Bit 11 - Auto Lock",7,[[],["alock_w",3]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",7,[[],["capten0_w",3]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",7,[[],["capten1_w",3]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",7,[[],["copen0_w",3]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",7,[[],["copen1_w",3]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",7,[[],["captmode0_w",3]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",7,[[],["captmode1_w",3]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",7,[[],["dmaos_w",3]]],[11,"swrst","atsamd51g::tc0::count16::ctrla","Bit 0 - Software Reset",3744,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3744,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",3744,[[],["mode_w",3]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",3744,[[],["prescsync_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",3744,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - Clock On Demand",3744,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",3744,[[],["prescaler_w",3]]],[11,"alock","","Bit 11 - Auto Lock",3744,[[],["alock_w",3]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",3744,[[],["capten0_w",3]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",3744,[[],["capten1_w",3]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",3744,[[],["copen0_w",3]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",3744,[[],["copen1_w",3]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",3744,[[],["captmode0_w",3]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",3744,[[],["captmode1_w",3]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",3744,[[],["dmaos_w",3]]],[0,"ctrlbclr","atsamd51g::tc0::count16","Control B Clear",null,null],[3,"DIR_W","atsamd51g::tc0::count16::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",3745,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",3745,null],[13,"STOP","","2: Force a stop",3745,null],[13,"UPDATE","","3: Force update of double-buffered register",3745,null],[13,"READSYNC","","4: Force a read synchronization of COUNT",3745,null],[13,"DMAOS","","5: One-shot DMA trigger",3745,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3746,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3746,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3746,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3748,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3748,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3748,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrlbclr","Get enumerated values variant",3749,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3749,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3749,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3749,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3749,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3749,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3749,[[]]],[11,"variant","","Writes `variant` to the field",3750,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3750,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",3750,[[],["w",6]]],[11,"stop","","Force a stop",3750,[[],["w",6]]],[11,"update","","Force update of double-buffered register",3750,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",3750,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3750,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3750,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tc0::count16::ctrlbclr","Bit 0 - Counter Direction",3751,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3751,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3751,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",3751,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tc0::count16::ctrlbclr","Bit 0 - Counter Direction",3752,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3752,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3752,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",3752,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd51g::tc0::count16","Control B Set",null,null],[3,"DIR_W","atsamd51g::tc0::count16::ctrlbset","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",3753,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",3753,null],[13,"STOP","","2: Force a stop",3753,null],[13,"UPDATE","","3: Force update of double-buffered register",3753,null],[13,"READSYNC","","4: Force a read synchronization of COUNT",3753,null],[13,"DMAOS","","5: One-shot DMA trigger",3753,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3754,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3754,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3754,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3755,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3755,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3755,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3756,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3756,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3756,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::ctrlbset","Get enumerated values variant",3757,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3757,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3757,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3757,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3757,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3757,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3757,[[]]],[11,"variant","","Writes `variant` to the field",3758,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3758,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",3758,[[],["w",6]]],[11,"stop","","Force a stop",3758,[[],["w",6]]],[11,"update","","Force update of double-buffered register",3758,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",3758,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3758,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3758,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tc0::count16::ctrlbset","Bit 0 - Counter Direction",3759,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3759,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3759,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",3759,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tc0::count16::ctrlbset","Bit 0 - Counter Direction",3760,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3760,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3760,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",3760,[[],["cmd_w",3]]],[0,"evctrl","atsamd51g::tc0::count16","Event Control",null,null],[3,"EVACT_W","atsamd51g::tc0::count16::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",3761,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",3761,null],[13,"COUNT","","2: Count on event",3761,null],[13,"START","","3: Start TC on event",3761,null],[13,"STAMP","","4: Time stamp capture",3761,null],[13,"PPW","","5: Period catured in CC0, pulse width in CC1",3761,null],[13,"PWP","","6: Period catured in CC1, pulse width in CC0",3761,null],[13,"PW","","7: Pulse width capture",3761,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"is_pw","","Checks if the value of the field is `PW`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::evctrl","Get enumerated values variant",3762,[[],["evact_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",3762,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3762,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",3762,[[]]],[11,"is_start","","Checks if the value of the field is `START`",3762,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",3762,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",3762,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",3762,[[]]],[11,"is_pw","","Checks if the value of the field is `PW`",3762,[[]]],[11,"variant","","Writes `variant` to the field",3763,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",3763,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",3763,[[],["w",6]]],[11,"count","","Count on event",3763,[[],["w",6]]],[11,"start","","Start TC on event",3763,[[],["w",6]]],[11,"stamp","","Time stamp capture",3763,[[],["w",6]]],[11,"ppw","","Period catured in CC0, pulse width in CC1",3763,[[],["w",6]]],[11,"pwp","","Period catured in CC1, pulse width in CC0",3763,[[],["w",6]]],[11,"pw","","Pulse width capture",3763,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3763,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3764,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3764,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3764,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3765,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3766,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3766,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3766,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3767,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3767,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3767,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3768,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3768,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3768,[[],["w",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Enable",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",6,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::tc0::count16::evctrl","Bits 0:2 - Event Action",3769,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",3769,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Enable",3769,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Event Output Enable",3769,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",3769,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",3769,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Enable",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",7,[[],["mceo1_w",3]]],[11,"evact","atsamd51g::tc0::count16::evctrl","Bits 0:2 - Event Action",3770,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",3770,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Enable",3770,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Event Output Enable",3770,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",3770,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",3770,[[],["mceo1_w",3]]],[0,"intenclr","atsamd51g::tc0::count16","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd51g::tc0::count16::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3771,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3771,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3771,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3772,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3772,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3772,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3773,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3773,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3773,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3774,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3774,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3774,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Disable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Disable",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count16::intenclr","Bit 0 - OVF Interrupt Disable",3775,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Disable",3775,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",3775,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",3775,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Disable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Disable",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count16::intenclr","Bit 0 - OVF Interrupt Disable",3776,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Disable",3776,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",3776,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",3776,[[],["mc1_w",3]]],[0,"intenset","atsamd51g::tc0::count16","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd51g::tc0::count16::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3777,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3777,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3777,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3778,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3778,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3778,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3779,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3779,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3779,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3780,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3780,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3780,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Enable",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count16::intenset","Bit 0 - OVF Interrupt Enable",3781,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Enable",3781,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",3781,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",3781,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Enable",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count16::intenset","Bit 0 - OVF Interrupt Enable",3782,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Enable",3782,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",3782,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",3782,[[],["mc1_w",3]]],[0,"intflag","atsamd51g::tc0::count16","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd51g::tc0::count16::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3783,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3783,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3783,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3784,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3784,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3784,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3785,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3785,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3785,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3786,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3786,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3786,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Flag",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Flag",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count16::intflag","Bit 0 - OVF Interrupt Flag",3787,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Flag",3787,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",3787,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",3787,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Flag",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Flag",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count16::intflag","Bit 0 - OVF Interrupt Flag",3788,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Flag",3788,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",3788,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",3788,[[],["mc1_w",3]]],[0,"status","atsamd51g::tc0::count16","Status",null,null],[3,"STOP_W","atsamd51g::tc0::count16::status","Write proxy for field `STOP`",null,null],[3,"SLAVE_W","","Write proxy for field `SLAVE`",null,null],[3,"PERBUFV_W","","Write proxy for field `PERBUFV`",null,null],[3,"CCBUFV0_W","","Write proxy for field `CCBUFV0`",null,null],[3,"CCBUFV1_W","","Write proxy for field `CCBUFV1`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"PERBUFV_R","","Reader of field `PERBUFV`",null,null],[6,"CCBUFV0_R","","Reader of field `CCBUFV0`",null,null],[6,"CCBUFV1_R","","Reader of field `CCBUFV1`",null,null],[11,"set_bit","","Sets the field bit",3789,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3789,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3789,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3790,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3790,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3790,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3791,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3791,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3791,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3792,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3792,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3792,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3793,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3793,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3793,[[],["w",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop Status Flag",6,[[],["stop_r",6]]],[11,"slave","","Bit 1 - Slave Status Flag",6,[[],["slave_r",6]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",6,[[],["perbufv_r",6]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",6,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",6,[[],["ccbufv1_r",6]]],[11,"stop","atsamd51g::tc0::count16::status","Bit 0 - Stop Status Flag",3794,[[],["stop_r",6]]],[11,"slave","","Bit 1 - Slave Status Flag",3794,[[],["slave_r",6]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",3794,[[],["perbufv_r",6]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",3794,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",3794,[[],["ccbufv1_r",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop Status Flag",7,[[],["stop_w",3]]],[11,"slave","","Bit 1 - Slave Status Flag",7,[[],["slave_w",3]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",7,[[],["perbufv_w",3]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",7,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",7,[[],["ccbufv1_w",3]]],[11,"stop","atsamd51g::tc0::count16::status","Bit 0 - Stop Status Flag",3795,[[],["stop_w",3]]],[11,"slave","","Bit 1 - Slave Status Flag",3795,[[],["slave_w",3]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",3795,[[],["perbufv_w",3]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",3795,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",3795,[[],["ccbufv1_w",3]]],[0,"wave","atsamd51g::tc0::count16","Waveform Generation Control",null,null],[3,"WAVEGEN_W","atsamd51g::tc0::count16::wave","Write proxy for field `WAVEGEN`",null,null],[4,"WAVEGEN_A","","Waveform Generation Mode",null,null],[13,"NFRQ","","0: Normal frequency",3796,null],[13,"MFRQ","","1: Match frequency",3796,null],[13,"NPWM","","2: Normal PWM",3796,null],[13,"MPWM","","3: Match PWM",3796,null],[6,"R","","Reader of register WAVE",null,null],[6,"W","","Writer for register WAVE",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd51g::tc0::count16::wave","Get enumerated values variant",3797,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",3797,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",3797,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",3797,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",3797,[[]]],[11,"variant","","Writes `variant` to the field",3798,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",3798,[[],["w",6]]],[11,"mfrq","","Match frequency",3798,[[],["w",6]]],[11,"npwm","","Normal PWM",3798,[[],["w",6]]],[11,"mpwm","","Match PWM",3798,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3798,[[],["w",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:1 - Waveform Generation Mode",6,[[],["wavegen_r",6]]],[11,"wavegen","atsamd51g::tc0::count16::wave","Bits 0:1 - Waveform Generation Mode",3799,[[],["wavegen_r",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:1 - Waveform Generation Mode",7,[[],["wavegen_w",3]]],[11,"wavegen","atsamd51g::tc0::count16::wave","Bits 0:1 - Waveform Generation Mode",3800,[[],["wavegen_w",3]]],[0,"drvctrl","atsamd51g::tc0::count16","Control C",null,null],[3,"INVEN0_W","atsamd51g::tc0::count16::drvctrl","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[6,"R","","Reader of register DRVCTRL",null,null],[6,"W","","Writer for register DRVCTRL",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[11,"set_bit","","Sets the field bit",3801,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3801,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3801,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3802,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3802,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3802,[[],["w",6]]],[11,"inven0","atsamd51g::generic","Bit 0 - Output Waveform Invert Enable 0",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",6,[[],["inven1_r",6]]],[11,"inven0","atsamd51g::tc0::count16::drvctrl","Bit 0 - Output Waveform Invert Enable 0",3803,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",3803,[[],["inven1_r",6]]],[11,"inven0","atsamd51g::generic","Bit 0 - Output Waveform Invert Enable 0",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",7,[[],["inven1_w",3]]],[11,"inven0","atsamd51g::tc0::count16::drvctrl","Bit 0 - Output Waveform Invert Enable 0",3804,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",3804,[[],["inven1_w",3]]],[0,"dbgctrl","atsamd51g::tc0::count16","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::tc0::count16::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",3805,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3805,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3805,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::tc0::count16::dbgctrl","Bit 0 - Run During Debug",3806,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::tc0::count16::dbgctrl","Bit 0 - Run During Debug",3807,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::tc0::count16","Synchronization Status",null,null],[6,"R","atsamd51g::tc0::count16::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - swrst",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - enable",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - STATUS",6,[[],["status_r",6]]],[11,"count","","Bit 4 - Counter",6,[[],["count_r",6]]],[11,"per","","Bit 5 - Period",6,[[],["per_r",6]]],[11,"cc0","","Bit 6 - Compare Channel 0",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 7 - Compare Channel 1",6,[[],["cc1_r",6]]],[11,"swrst","atsamd51g::tc0::count16::syncbusy","Bit 0 - swrst",3808,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - enable",3808,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB",3808,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - STATUS",3808,[[],["status_r",6]]],[11,"count","","Bit 4 - Counter",3808,[[],["count_r",6]]],[11,"per","","Bit 5 - Period",3808,[[],["per_r",6]]],[11,"cc0","","Bit 6 - Compare Channel 0",3808,[[],["cc0_r",6]]],[11,"cc1","","Bit 7 - Compare Channel 1",3808,[[],["cc1_r",6]]],[0,"count","atsamd51g::tc0::count16","COUNT16 Count",null,null],[3,"COUNT_W","atsamd51g::tc0::count16::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",3809,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:15 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tc0::count16::count","Bits 0:15 - Counter Value",3810,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:15 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tc0::count16::count","Bits 0:15 - Counter Value",3811,[[],["count_w",3]]],[0,"cc","atsamd51g::tc0::count16","COUNT16 Compare and Capture",null,null],[3,"CC_W","atsamd51g::tc0::count16::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC[%s]",null,null],[6,"W","","Writer for register CC[%s]",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",3812,[[],["w",6]]],[11,"cc","atsamd51g::generic","Bits 0:15 - Counter/Compare Value",6,[[],["cc_r",6]]],[11,"cc","atsamd51g::tc0::count16::cc","Bits 0:15 - Counter/Compare Value",3813,[[],["cc_r",6]]],[11,"cc","atsamd51g::generic","Bits 0:15 - Counter/Compare Value",7,[[],["cc_w",3]]],[11,"cc","atsamd51g::tc0::count16::cc","Bits 0:15 - Counter/Compare Value",3814,[[],["cc_w",3]]],[0,"ccbuf","atsamd51g::tc0::count16","COUNT16 Compare and Capture Buffer",null,null],[3,"CCBUF_W","atsamd51g::tc0::count16::ccbuf","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF[%s]",null,null],[6,"W","","Writer for register CCBUF[%s]",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",3815,[[],["w",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:15 - Counter/Compare Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::tc0::count16::ccbuf","Bits 0:15 - Counter/Compare Buffer Value",3816,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:15 - Counter/Compare Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ccbuf","atsamd51g::tc0::count16::ccbuf","Bits 0:15 - Counter/Compare Buffer Value",3817,[[],["ccbuf_w",3]]],[6,"CTRLA","atsamd51g::tc0::count16","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"WAVE","","Waveform Generation Control",null,null],[6,"DRVCTRL","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","Synchronization Status",null,null],[6,"COUNT","","COUNT16 Count",null,null],[6,"CC","","COUNT16 Compare and Capture",null,null],[6,"CCBUF","","COUNT16 Compare and Capture Buffer",null,null],[0,"count32","atsamd51g::tc0","Register block 32-bit Counter Mode",null,null],[0,"ctrla","atsamd51g::tc0::count32","Control A",null,null],[3,"SWRST_W","atsamd51g::tc0::count32::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"ONDEMAND_W","","Write proxy for field `ONDEMAND`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"CAPTEN0_W","","Write proxy for field `CAPTEN0`",null,null],[3,"CAPTEN1_W","","Write proxy for field `CAPTEN1`",null,null],[3,"COPEN0_W","","Write proxy for field `COPEN0`",null,null],[3,"COPEN1_W","","Write proxy for field `COPEN1`",null,null],[3,"CAPTMODE0_W","","Write proxy for field `CAPTMODE0`",null,null],[3,"CAPTMODE1_W","","Write proxy for field `CAPTMODE1`",null,null],[3,"DMAOS_W","","Write proxy for field `DMAOS`",null,null],[4,"MODE_A","","Timer Counter Mode",null,null],[13,"COUNT16","","0: Counter in 16-bit mode",3818,null],[13,"COUNT8","","1: Counter in 8-bit mode",3818,null],[13,"COUNT32","","2: Counter in 32-bit mode",3818,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization",null,null],[13,"GCLK","","0: Reload or reset the counter on next generic clock",3819,null],[13,"PRESC","","1: Reload or reset the counter on next prescaler clock",3819,null],[13,"RESYNC","","2: Reload or reset the counter on next generic clock and…",3819,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: Prescaler: GCLK_TC",3820,null],[13,"DIV2","","1: Prescaler: GCLK_TC/2",3820,null],[13,"DIV4","","2: Prescaler: GCLK_TC/4",3820,null],[13,"DIV8","","3: Prescaler: GCLK_TC/8",3820,null],[13,"DIV16","","4: Prescaler: GCLK_TC/16",3820,null],[13,"DIV64","","5: Prescaler: GCLK_TC/64",3820,null],[13,"DIV256","","6: Prescaler: GCLK_TC/256",3820,null],[13,"DIV1024","","7: Prescaler: GCLK_TC/1024",3820,null],[4,"CAPTMODE0_A","","Capture Mode Channel 0",null,null],[13,"DEFAULT","","0: Default capture",3821,null],[13,"CAPTMIN","","1: Minimum capture",3821,null],[13,"CAPTMAX","","2: Maximum capture",3821,null],[4,"CAPTMODE1_A","","Capture mode Channel 1",null,null],[13,"DEFAULT","","0: Default capture",3822,null],[13,"CAPTMIN","","1: Minimum capture",3822,null],[13,"CAPTMAX","","2: Maximum capture",3822,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"ONDEMAND_R","","Reader of field `ONDEMAND`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"CAPTEN0_R","","Reader of field `CAPTEN0`",null,null],[6,"CAPTEN1_R","","Reader of field `CAPTEN1`",null,null],[6,"COPEN0_R","","Reader of field `COPEN0`",null,null],[6,"COPEN1_R","","Reader of field `COPEN1`",null,null],[6,"CAPTMODE0_R","","Reader of field `CAPTMODE0`",null,null],[6,"CAPTMODE1_R","","Reader of field `CAPTMODE1`",null,null],[6,"DMAOS_R","","Reader of field `DMAOS`",null,null],[11,"set_bit","","Sets the field bit",3823,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3823,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3823,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3824,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3824,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3824,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",6,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",6,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrla","Get enumerated values variant",3825,[[],[["mode_a",4],["variant",4]]]],[11,"is_count16","","Checks if the value of the field is `COUNT16`",3825,[[]]],[11,"is_count8","","Checks if the value of the field is `COUNT8`",3825,[[]]],[11,"is_count32","","Checks if the value of the field is `COUNT32`",3825,[[]]],[11,"variant","","Writes `variant` to the field",3826,[[["mode_a",4]],["w",6]]],[11,"count16","","Counter in 16-bit mode",3826,[[],["w",6]]],[11,"count8","","Counter in 8-bit mode",3826,[[],["w",6]]],[11,"count32","","Counter in 32-bit mode",3826,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3826,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrla","Get enumerated values variant",3827,[[],[["prescsync_a",4],["variant",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",3827,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",3827,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",3827,[[]]],[11,"variant","","Writes `variant` to the field",3828,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset the counter on next generic clock",3828,[[],["w",6]]],[11,"presc","","Reload or reset the counter on next prescaler clock",3828,[[],["w",6]]],[11,"resync","","Reload or reset the counter on next generic clock and…",3828,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3828,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3829,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3829,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3829,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3830,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3830,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3830,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrla","Get enumerated values variant",3831,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",3831,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",3831,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",3831,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",3831,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",3831,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",3831,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",3831,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",3831,[[]]],[11,"variant","","Writes `variant` to the field",3832,[[["prescaler_a",4]],["w",6]]],[11,"div1","","Prescaler: GCLK_TC",3832,[[],["w",6]]],[11,"div2","","Prescaler: GCLK_TC/2",3832,[[],["w",6]]],[11,"div4","","Prescaler: GCLK_TC/4",3832,[[],["w",6]]],[11,"div8","","Prescaler: GCLK_TC/8",3832,[[],["w",6]]],[11,"div16","","Prescaler: GCLK_TC/16",3832,[[],["w",6]]],[11,"div64","","Prescaler: GCLK_TC/64",3832,[[],["w",6]]],[11,"div256","","Prescaler: GCLK_TC/256",3832,[[],["w",6]]],[11,"div1024","","Prescaler: GCLK_TC/1024",3832,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3832,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3833,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3833,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3833,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3834,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3834,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3834,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3835,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3835,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3835,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3836,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3836,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3836,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3837,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3837,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3837,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["captmode0_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrla","Get enumerated values variant",3838,[[],[["variant",4],["captmode0_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",3838,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3838,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3838,[[]]],[11,"variant","","Writes `variant` to the field",3839,[[["captmode0_a",4]],["w",6]]],[11,"default","","Default capture",3839,[[],["w",6]]],[11,"captmin","","Minimum capture",3839,[[],["w",6]]],[11,"captmax","","Maximum capture",3839,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3839,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["captmode1_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrla","Get enumerated values variant",3840,[[],[["variant",4],["captmode1_a",4]]]],[11,"is_default","","Checks if the value of the field is `DEFAULT`",3840,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3840,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3840,[[]]],[11,"variant","","Writes `variant` to the field",3841,[[["captmode1_a",4]],["w",6]]],[11,"default","","Default capture",3841,[[],["w",6]]],[11,"captmin","","Minimum capture",3841,[[],["w",6]]],[11,"captmax","","Maximum capture",3841,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3841,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3842,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3842,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3842,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",6,[[],["mode_r",6]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",6,[[],["prescsync_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",6,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - Clock On Demand",6,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"alock","","Bit 11 - Auto Lock",6,[[],["alock_r",6]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",6,[[],["capten0_r",6]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",6,[[],["capten1_r",6]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",6,[[],["copen0_r",6]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",6,[[],["copen1_r",6]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",6,[[],["captmode0_r",6]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",6,[[],["captmode1_r",6]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",6,[[],["dmaos_r",6]]],[11,"swrst","atsamd51g::tc0::count32::ctrla","Bit 0 - Software Reset",3843,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3843,[[],["enable_r",6]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",3843,[[],["mode_r",6]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",3843,[[],["prescsync_r",6]]],[11,"runstdby","","Bit 6 - Run during Standby",3843,[[],["runstdby_r",6]]],[11,"ondemand","","Bit 7 - Clock On Demand",3843,[[],["ondemand_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",3843,[[],["prescaler_r",6]]],[11,"alock","","Bit 11 - Auto Lock",3843,[[],["alock_r",6]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",3843,[[],["capten0_r",6]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",3843,[[],["capten1_r",6]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",3843,[[],["copen0_r",6]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",3843,[[],["copen1_r",6]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",3843,[[],["captmode0_r",6]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",3843,[[],["captmode1_r",6]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",3843,[[],["dmaos_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",7,[[],["mode_w",3]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",7,[[],["prescsync_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",7,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - Clock On Demand",7,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"alock","","Bit 11 - Auto Lock",7,[[],["alock_w",3]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",7,[[],["capten0_w",3]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",7,[[],["capten1_w",3]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",7,[[],["copen0_w",3]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",7,[[],["copen1_w",3]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",7,[[],["captmode0_w",3]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",7,[[],["captmode1_w",3]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",7,[[],["dmaos_w",3]]],[11,"swrst","atsamd51g::tc0::count32::ctrla","Bit 0 - Software Reset",3844,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3844,[[],["enable_w",3]]],[11,"mode","","Bits 2:3 - Timer Counter Mode",3844,[[],["mode_w",3]]],[11,"prescsync","","Bits 4:5 - Prescaler and Counter Synchronization",3844,[[],["prescsync_w",3]]],[11,"runstdby","","Bit 6 - Run during Standby",3844,[[],["runstdby_w",3]]],[11,"ondemand","","Bit 7 - Clock On Demand",3844,[[],["ondemand_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",3844,[[],["prescaler_w",3]]],[11,"alock","","Bit 11 - Auto Lock",3844,[[],["alock_w",3]]],[11,"capten0","","Bit 16 - Capture Channel 0 Enable",3844,[[],["capten0_w",3]]],[11,"capten1","","Bit 17 - Capture Channel 1 Enable",3844,[[],["capten1_w",3]]],[11,"copen0","","Bit 20 - Capture On Pin 0 Enable",3844,[[],["copen0_w",3]]],[11,"copen1","","Bit 21 - Capture On Pin 1 Enable",3844,[[],["copen1_w",3]]],[11,"captmode0","","Bits 24:25 - Capture Mode Channel 0",3844,[[],["captmode0_w",3]]],[11,"captmode1","","Bits 27:28 - Capture mode Channel 1",3844,[[],["captmode1_w",3]]],[11,"dmaos","","Bit 15 - DMA One-Shot Trigger Mode",3844,[[],["dmaos_w",3]]],[0,"ctrlbclr","atsamd51g::tc0::count32","Control B Clear",null,null],[3,"DIR_W","atsamd51g::tc0::count32::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",3845,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",3845,null],[13,"STOP","","2: Force a stop",3845,null],[13,"UPDATE","","3: Force update of double-buffered register",3845,null],[13,"READSYNC","","4: Force a read synchronization of COUNT",3845,null],[13,"DMAOS","","5: One-shot DMA trigger",3845,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3846,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3846,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3846,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3847,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3847,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3847,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3848,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3848,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3848,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrlbclr","Get enumerated values variant",3849,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3849,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3849,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3849,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3849,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3849,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3849,[[]]],[11,"variant","","Writes `variant` to the field",3850,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3850,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",3850,[[],["w",6]]],[11,"stop","","Force a stop",3850,[[],["w",6]]],[11,"update","","Force update of double-buffered register",3850,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",3850,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3850,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3850,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tc0::count32::ctrlbclr","Bit 0 - Counter Direction",3851,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3851,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3851,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",3851,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tc0::count32::ctrlbclr","Bit 0 - Counter Direction",3852,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3852,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3852,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",3852,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd51g::tc0::count32","Control B Set",null,null],[3,"DIR_W","atsamd51g::tc0::count32::ctrlbset","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"CMD_A","","Command",null,null],[13,"NONE","","0: No action",3853,null],[13,"RETRIGGER","","1: Force a start, restart or retrigger",3853,null],[13,"STOP","","2: Force a stop",3853,null],[13,"UPDATE","","3: Force update of double-buffered register",3853,null],[13,"READSYNC","","4: Force a read synchronization of COUNT",3853,null],[13,"DMAOS","","5: One-shot DMA trigger",3853,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3854,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3854,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3854,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3855,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3855,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3855,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3856,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3856,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3856,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::ctrlbset","Get enumerated values variant",3857,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3857,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3857,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3857,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3857,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3857,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3857,[[]]],[11,"variant","","Writes `variant` to the field",3858,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3858,[[],["w",6]]],[11,"retrigger","","Force a start, restart or retrigger",3858,[[],["w",6]]],[11,"stop","","Force a stop",3858,[[],["w",6]]],[11,"update","","Force update of double-buffered register",3858,[[],["w",6]]],[11,"readsync","","Force a read synchronization of COUNT",3858,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3858,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3858,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",6,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tc0::count32::ctrlbset","Bit 0 - Counter Direction",3859,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3859,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3859,[[],["oneshot_r",6]]],[11,"cmd","","Bits 5:7 - Command",3859,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",7,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tc0::count32::ctrlbset","Bit 0 - Counter Direction",3860,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3860,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot on Counter",3860,[[],["oneshot_w",3]]],[11,"cmd","","Bits 5:7 - Command",3860,[[],["cmd_w",3]]],[0,"evctrl","atsamd51g::tc0::count32","Event Control",null,null],[3,"EVACT_W","atsamd51g::tc0::count32::evctrl","Write proxy for field `EVACT`",null,null],[3,"TCINV_W","","Write proxy for field `TCINV`",null,null],[3,"TCEI_W","","Write proxy for field `TCEI`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[4,"EVACT_A","","Event Action",null,null],[13,"OFF","","0: Event action disabled",3861,null],[13,"RETRIGGER","","1: Start, restart or retrigger TC on event",3861,null],[13,"COUNT","","2: Count on event",3861,null],[13,"START","","3: Start TC on event",3861,null],[13,"STAMP","","4: Time stamp capture",3861,null],[13,"PPW","","5: Period catured in CC0, pulse width in CC1",3861,null],[13,"PWP","","6: Period catured in CC1, pulse width in CC0",3861,null],[13,"PW","","7: Pulse width capture",3861,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT_R","","Reader of field `EVACT`",null,null],[6,"TCINV_R","","Reader of field `TCINV`",null,null],[6,"TCEI_R","","Reader of field `TCEI`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"is_pw","","Checks if the value of the field is `PW`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::evctrl","Get enumerated values variant",3862,[[],["evact_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",3862,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3862,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",3862,[[]]],[11,"is_start","","Checks if the value of the field is `START`",3862,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",3862,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",3862,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",3862,[[]]],[11,"is_pw","","Checks if the value of the field is `PW`",3862,[[]]],[11,"variant","","Writes `variant` to the field",3863,[[["evact_a",4]],["w",6]]],[11,"off","","Event action disabled",3863,[[],["w",6]]],[11,"retrigger","","Start, restart or retrigger TC on event",3863,[[],["w",6]]],[11,"count","","Count on event",3863,[[],["w",6]]],[11,"start","","Start TC on event",3863,[[],["w",6]]],[11,"stamp","","Time stamp capture",3863,[[],["w",6]]],[11,"ppw","","Period catured in CC0, pulse width in CC1",3863,[[],["w",6]]],[11,"pwp","","Period catured in CC1, pulse width in CC0",3863,[[],["w",6]]],[11,"pw","","Pulse width capture",3863,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3863,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3864,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3864,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3864,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3865,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3865,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3865,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3866,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3866,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3866,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3867,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3867,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3867,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3868,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3868,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3868,[[],["w",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Event Action",6,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",6,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Enable",6,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Event Output Enable",6,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",6,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::tc0::count32::evctrl","Bits 0:2 - Event Action",3869,[[],["evact_r",6]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",3869,[[],["tcinv_r",6]]],[11,"tcei","","Bit 5 - TC Event Enable",3869,[[],["tcei_r",6]]],[11,"ovfeo","","Bit 8 - Event Output Enable",3869,[[],["ovfeo_r",6]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",3869,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",3869,[[],["mceo1_r",6]]],[11,"evact","atsamd51g::generic","Bits 0:2 - Event Action",7,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",7,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Enable",7,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Event Output Enable",7,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",7,[[],["mceo1_w",3]]],[11,"evact","atsamd51g::tc0::count32::evctrl","Bits 0:2 - Event Action",3870,[[],["evact_w",3]]],[11,"tcinv","","Bit 4 - TC Event Input Polarity",3870,[[],["tcinv_w",3]]],[11,"tcei","","Bit 5 - TC Event Enable",3870,[[],["tcei_w",3]]],[11,"ovfeo","","Bit 8 - Event Output Enable",3870,[[],["ovfeo_w",3]]],[11,"mceo0","","Bit 12 - MC Event Output Enable 0",3870,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 13 - MC Event Output Enable 1",3870,[[],["mceo1_w",3]]],[0,"intenclr","atsamd51g::tc0::count32","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd51g::tc0::count32::intenclr","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3871,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3871,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3871,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3872,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3872,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3872,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3873,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3873,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3873,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3874,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3874,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3874,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Disable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Disable",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count32::intenclr","Bit 0 - OVF Interrupt Disable",3875,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Disable",3875,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",3875,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",3875,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Disable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Disable",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count32::intenclr","Bit 0 - OVF Interrupt Disable",3876,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Disable",3876,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Disable 0",3876,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Disable 1",3876,[[],["mc1_w",3]]],[0,"intenset","atsamd51g::tc0::count32","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd51g::tc0::count32::intenset","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3877,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3877,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3877,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3878,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3878,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3878,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3879,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3879,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3879,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3880,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3880,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3880,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Enable",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Enable",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count32::intenset","Bit 0 - OVF Interrupt Enable",3881,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Enable",3881,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",3881,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",3881,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Enable",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Enable",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count32::intenset","Bit 0 - OVF Interrupt Enable",3882,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Enable",3882,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Enable 0",3882,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Enable 1",3882,[[],["mc1_w",3]]],[0,"intflag","atsamd51g::tc0::count32","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd51g::tc0::count32::intflag","Write proxy for field `OVF`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[11,"set_bit","","Sets the field bit",3883,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3883,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3883,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3884,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3884,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3884,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3885,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3885,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3885,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3886,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3886,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3886,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Flag",6,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Flag",6,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",6,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::tc0::count32::intflag","Bit 0 - OVF Interrupt Flag",3887,[[],["ovf_r",6]]],[11,"err","","Bit 1 - ERR Interrupt Flag",3887,[[],["err_r",6]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",3887,[[],["mc0_r",6]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",3887,[[],["mc1_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - OVF Interrupt Flag",7,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Flag",7,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",7,[[],["mc1_w",3]]],[11,"ovf","atsamd51g::tc0::count32::intflag","Bit 0 - OVF Interrupt Flag",3888,[[],["ovf_w",3]]],[11,"err","","Bit 1 - ERR Interrupt Flag",3888,[[],["err_w",3]]],[11,"mc0","","Bit 4 - MC Interrupt Flag 0",3888,[[],["mc0_w",3]]],[11,"mc1","","Bit 5 - MC Interrupt Flag 1",3888,[[],["mc1_w",3]]],[0,"status","atsamd51g::tc0::count32","Status",null,null],[3,"STOP_W","atsamd51g::tc0::count32::status","Write proxy for field `STOP`",null,null],[3,"SLAVE_W","","Write proxy for field `SLAVE`",null,null],[3,"PERBUFV_W","","Write proxy for field `PERBUFV`",null,null],[3,"CCBUFV0_W","","Write proxy for field `CCBUFV0`",null,null],[3,"CCBUFV1_W","","Write proxy for field `CCBUFV1`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"PERBUFV_R","","Reader of field `PERBUFV`",null,null],[6,"CCBUFV0_R","","Reader of field `CCBUFV0`",null,null],[6,"CCBUFV1_R","","Reader of field `CCBUFV1`",null,null],[11,"set_bit","","Sets the field bit",3889,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3889,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3889,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3890,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3890,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3890,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3891,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3891,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3891,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3892,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3892,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3892,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3893,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3893,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3893,[[],["w",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop Status Flag",6,[[],["stop_r",6]]],[11,"slave","","Bit 1 - Slave Status Flag",6,[[],["slave_r",6]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",6,[[],["perbufv_r",6]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",6,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",6,[[],["ccbufv1_r",6]]],[11,"stop","atsamd51g::tc0::count32::status","Bit 0 - Stop Status Flag",3894,[[],["stop_r",6]]],[11,"slave","","Bit 1 - Slave Status Flag",3894,[[],["slave_r",6]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",3894,[[],["perbufv_r",6]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",3894,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",3894,[[],["ccbufv1_r",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop Status Flag",7,[[],["stop_w",3]]],[11,"slave","","Bit 1 - Slave Status Flag",7,[[],["slave_w",3]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",7,[[],["perbufv_w",3]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",7,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",7,[[],["ccbufv1_w",3]]],[11,"stop","atsamd51g::tc0::count32::status","Bit 0 - Stop Status Flag",3895,[[],["stop_w",3]]],[11,"slave","","Bit 1 - Slave Status Flag",3895,[[],["slave_w",3]]],[11,"perbufv","","Bit 3 - Synchronization Busy Status",3895,[[],["perbufv_w",3]]],[11,"ccbufv0","","Bit 4 - Compare channel buffer 0 valid",3895,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 5 - Compare channel buffer 1 valid",3895,[[],["ccbufv1_w",3]]],[0,"wave","atsamd51g::tc0::count32","Waveform Generation Control",null,null],[3,"WAVEGEN_W","atsamd51g::tc0::count32::wave","Write proxy for field `WAVEGEN`",null,null],[4,"WAVEGEN_A","","Waveform Generation Mode",null,null],[13,"NFRQ","","0: Normal frequency",3896,null],[13,"MFRQ","","1: Match frequency",3896,null],[13,"NPWM","","2: Normal PWM",3896,null],[13,"MPWM","","3: Match PWM",3896,null],[6,"R","","Reader of register WAVE",null,null],[6,"W","","Writer for register WAVE",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",6,[[]]],[11,"variant","atsamd51g::tc0::count32::wave","Get enumerated values variant",3897,[[],["wavegen_a",4]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",3897,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",3897,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",3897,[[]]],[11,"is_mpwm","","Checks if the value of the field is `MPWM`",3897,[[]]],[11,"variant","","Writes `variant` to the field",3898,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",3898,[[],["w",6]]],[11,"mfrq","","Match frequency",3898,[[],["w",6]]],[11,"npwm","","Normal PWM",3898,[[],["w",6]]],[11,"mpwm","","Match PWM",3898,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3898,[[],["w",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:1 - Waveform Generation Mode",6,[[],["wavegen_r",6]]],[11,"wavegen","atsamd51g::tc0::count32::wave","Bits 0:1 - Waveform Generation Mode",3899,[[],["wavegen_r",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:1 - Waveform Generation Mode",7,[[],["wavegen_w",3]]],[11,"wavegen","atsamd51g::tc0::count32::wave","Bits 0:1 - Waveform Generation Mode",3900,[[],["wavegen_w",3]]],[0,"drvctrl","atsamd51g::tc0::count32","Control C",null,null],[3,"INVEN0_W","atsamd51g::tc0::count32::drvctrl","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[6,"R","","Reader of register DRVCTRL",null,null],[6,"W","","Writer for register DRVCTRL",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[11,"set_bit","","Sets the field bit",3901,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3901,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3901,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3902,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3902,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3902,[[],["w",6]]],[11,"inven0","atsamd51g::generic","Bit 0 - Output Waveform Invert Enable 0",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",6,[[],["inven1_r",6]]],[11,"inven0","atsamd51g::tc0::count32::drvctrl","Bit 0 - Output Waveform Invert Enable 0",3903,[[],["inven0_r",6]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",3903,[[],["inven1_r",6]]],[11,"inven0","atsamd51g::generic","Bit 0 - Output Waveform Invert Enable 0",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",7,[[],["inven1_w",3]]],[11,"inven0","atsamd51g::tc0::count32::drvctrl","Bit 0 - Output Waveform Invert Enable 0",3904,[[],["inven0_w",3]]],[11,"inven1","","Bit 1 - Output Waveform Invert Enable 1",3904,[[],["inven1_w",3]]],[0,"dbgctrl","atsamd51g::tc0::count32","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::tc0::count32::dbgctrl","Write proxy for field `DBGRUN`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[11,"set_bit","","Sets the field bit",3905,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3905,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3905,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",6,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::tc0::count32::dbgctrl","Bit 0 - Run During Debug",3906,[[],["dbgrun_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Run During Debug",7,[[],["dbgrun_w",3]]],[11,"dbgrun","atsamd51g::tc0::count32::dbgctrl","Bit 0 - Run During Debug",3907,[[],["dbgrun_w",3]]],[0,"syncbusy","atsamd51g::tc0::count32","Synchronization Status",null,null],[6,"R","atsamd51g::tc0::count32::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - swrst",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - enable",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - STATUS",6,[[],["status_r",6]]],[11,"count","","Bit 4 - Counter",6,[[],["count_r",6]]],[11,"per","","Bit 5 - Period",6,[[],["per_r",6]]],[11,"cc0","","Bit 6 - Compare Channel 0",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 7 - Compare Channel 1",6,[[],["cc1_r",6]]],[11,"swrst","atsamd51g::tc0::count32::syncbusy","Bit 0 - swrst",3908,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - enable",3908,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - CTRLB",3908,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - STATUS",3908,[[],["status_r",6]]],[11,"count","","Bit 4 - Counter",3908,[[],["count_r",6]]],[11,"per","","Bit 5 - Period",3908,[[],["per_r",6]]],[11,"cc0","","Bit 6 - Compare Channel 0",3908,[[],["cc0_r",6]]],[11,"cc1","","Bit 7 - Compare Channel 1",3908,[[],["cc1_r",6]]],[0,"count","atsamd51g::tc0::count32","COUNT32 Count",null,null],[3,"COUNT_W","atsamd51g::tc0::count32::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",3909,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:31 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tc0::count32::count","Bits 0:31 - Counter Value",3910,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:31 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tc0::count32::count","Bits 0:31 - Counter Value",3911,[[],["count_w",3]]],[0,"cc","atsamd51g::tc0::count32","COUNT32 Compare and Capture",null,null],[3,"CC_W","atsamd51g::tc0::count32::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC[%s]",null,null],[6,"W","","Writer for register CC[%s]",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",3912,[[],["w",6]]],[11,"cc","atsamd51g::generic","Bits 0:31 - Counter/Compare Value",6,[[],["cc_r",6]]],[11,"cc","atsamd51g::tc0::count32::cc","Bits 0:31 - Counter/Compare Value",3913,[[],["cc_r",6]]],[11,"cc","atsamd51g::generic","Bits 0:31 - Counter/Compare Value",7,[[],["cc_w",3]]],[11,"cc","atsamd51g::tc0::count32::cc","Bits 0:31 - Counter/Compare Value",3914,[[],["cc_w",3]]],[0,"ccbuf","atsamd51g::tc0::count32","COUNT32 Compare and Capture Buffer",null,null],[3,"CCBUF_W","atsamd51g::tc0::count32::ccbuf","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF[%s]",null,null],[6,"W","","Writer for register CCBUF[%s]",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",3915,[[],["w",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:31 - Counter/Compare Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::tc0::count32::ccbuf","Bits 0:31 - Counter/Compare Buffer Value",3916,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:31 - Counter/Compare Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ccbuf","atsamd51g::tc0::count32::ccbuf","Bits 0:31 - Counter/Compare Buffer Value",3917,[[],["ccbuf_w",3]]],[6,"CTRLA","atsamd51g::tc0::count32","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"WAVE","","Waveform Generation Control",null,null],[6,"DRVCTRL","","Control C",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"SYNCBUSY","","Synchronization Status",null,null],[6,"COUNT","","COUNT32 Count",null,null],[6,"CC","","COUNT32 Compare and Capture",null,null],[6,"CCBUF","","COUNT32 Compare and Capture Buffer",null,null],[11,"count32","atsamd51g::tc0","0x00 - 32-bit Counter Mode",3918,[[],["count32",3]]],[11,"count32_mut","","0x00 - 32-bit Counter Mode",3918,[[],["count32",3]]],[11,"count16","","0x00 - 16-bit Counter Mode",3918,[[],["count16",3]]],[11,"count16_mut","","0x00 - 16-bit Counter Mode",3918,[[],["count16",3]]],[11,"count8","","0x00 - 8-bit Counter Mode",3918,[[],["count8",3]]],[11,"count8_mut","","0x00 - 8-bit Counter Mode",3918,[[],["count8",3]]],[0,"tcc0","atsamd51g","Timer Counter Control",null,null],[3,"RegisterBlock","atsamd51g::tcc0","Register block",null,null],[12,"ctrla","","0x00 - Control A",3919,null],[12,"ctrlbclr","","0x04 - Control B Clear",3919,null],[12,"ctrlbset","","0x05 - Control B Set",3919,null],[12,"syncbusy","","0x08 - Synchronization Busy",3919,null],[12,"fctrla","","0x0c - Recoverable Fault A Configuration",3919,null],[12,"fctrlb","","0x10 - Recoverable Fault B Configuration",3919,null],[12,"wexctrl","","0x14 - Waveform Extension Configuration",3919,null],[12,"drvctrl","","0x18 - Driver Control",3919,null],[12,"dbgctrl","","0x1e - Debug Control",3919,null],[12,"evctrl","","0x20 - Event Control",3919,null],[12,"intenclr","","0x24 - Interrupt Enable Clear",3919,null],[12,"intenset","","0x28 - Interrupt Enable Set",3919,null],[12,"intflag","","0x2c - Interrupt Flag Status and Clear",3919,null],[12,"status","","0x30 - Status",3919,null],[12,"patt","","0x38 - Pattern",3919,null],[12,"wave","","0x3c - Waveform Control",3919,null],[12,"pattbuf","","0x64 - Pattern Buffer",3919,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::tcc0::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RESOLUTION_W","","Write proxy for field `RESOLUTION`",null,null],[3,"PRESCALER_W","","Write proxy for field `PRESCALER`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"PRESCSYNC_W","","Write proxy for field `PRESCSYNC`",null,null],[3,"ALOCK_W","","Write proxy for field `ALOCK`",null,null],[3,"MSYNC_W","","Write proxy for field `MSYNC`",null,null],[3,"DMAOS_W","","Write proxy for field `DMAOS`",null,null],[3,"CPTEN0_W","","Write proxy for field `CPTEN0`",null,null],[3,"CPTEN1_W","","Write proxy for field `CPTEN1`",null,null],[3,"CPTEN2_W","","Write proxy for field `CPTEN2`",null,null],[3,"CPTEN3_W","","Write proxy for field `CPTEN3`",null,null],[3,"CPTEN4_W","","Write proxy for field `CPTEN4`",null,null],[3,"CPTEN5_W","","Write proxy for field `CPTEN5`",null,null],[4,"RESOLUTION_A","","Enhanced Resolution",null,null],[13,"NONE","","0: Dithering is disabled",3920,null],[13,"DITH4","","1: Dithering is done every 16 PWM frames",3920,null],[13,"DITH5","","2: Dithering is done every 32 PWM frames",3920,null],[13,"DITH6","","3: Dithering is done every 64 PWM frames",3920,null],[4,"PRESCALER_A","","Prescaler",null,null],[13,"DIV1","","0: No division",3921,null],[13,"DIV2","","1: Divide by 2",3921,null],[13,"DIV4","","2: Divide by 4",3921,null],[13,"DIV8","","3: Divide by 8",3921,null],[13,"DIV16","","4: Divide by 16",3921,null],[13,"DIV64","","5: Divide by 64",3921,null],[13,"DIV256","","6: Divide by 256",3921,null],[13,"DIV1024","","7: Divide by 1024",3921,null],[4,"PRESCSYNC_A","","Prescaler and Counter Synchronization Selection",null,null],[13,"GCLK","","0: Reload or reset counter on next GCLK",3922,null],[13,"PRESC","","1: Reload or reset counter on next prescaler clock",3922,null],[13,"RESYNC","","2: Reload or reset counter on next GCLK and reset…",3922,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RESOLUTION_R","","Reader of field `RESOLUTION`",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"PRESCSYNC_R","","Reader of field `PRESCSYNC`",null,null],[6,"ALOCK_R","","Reader of field `ALOCK`",null,null],[6,"MSYNC_R","","Reader of field `MSYNC`",null,null],[6,"DMAOS_R","","Reader of field `DMAOS`",null,null],[6,"CPTEN0_R","","Reader of field `CPTEN0`",null,null],[6,"CPTEN1_R","","Reader of field `CPTEN1`",null,null],[6,"CPTEN2_R","","Reader of field `CPTEN2`",null,null],[6,"CPTEN3_R","","Reader of field `CPTEN3`",null,null],[6,"CPTEN4_R","","Reader of field `CPTEN4`",null,null],[6,"CPTEN5_R","","Reader of field `CPTEN5`",null,null],[11,"set_bit","","Sets the field bit",3923,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3923,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3923,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3924,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3924,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3924,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["resolution_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_dith4","","Checks if the value of the field is `DITH4`",6,[[]]],[11,"is_dith5","","Checks if the value of the field is `DITH5`",6,[[]]],[11,"is_dith6","","Checks if the value of the field is `DITH6`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrla","Get enumerated values variant",3925,[[],["resolution_a",4]]],[11,"is_none","","Checks if the value of the field is `NONE`",3925,[[]]],[11,"is_dith4","","Checks if the value of the field is `DITH4`",3925,[[]]],[11,"is_dith5","","Checks if the value of the field is `DITH5`",3925,[[]]],[11,"is_dith6","","Checks if the value of the field is `DITH6`",3925,[[]]],[11,"variant","","Writes `variant` to the field",3926,[[["resolution_a",4]],["w",6]]],[11,"none","","Dithering is disabled",3926,[[],["w",6]]],[11,"dith4","","Dithering is done every 16 PWM frames",3926,[[],["w",6]]],[11,"dith5","","Dithering is done every 32 PWM frames",3926,[[],["w",6]]],[11,"dith6","","Dithering is done every 64 PWM frames",3926,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3926,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",6,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",6,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",6,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",6,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",6,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",6,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",6,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrla","Get enumerated values variant",3927,[[],["prescaler_a",4]]],[11,"is_div1","","Checks if the value of the field is `DIV1`",3927,[[]]],[11,"is_div2","","Checks if the value of the field is `DIV2`",3927,[[]]],[11,"is_div4","","Checks if the value of the field is `DIV4`",3927,[[]]],[11,"is_div8","","Checks if the value of the field is `DIV8`",3927,[[]]],[11,"is_div16","","Checks if the value of the field is `DIV16`",3927,[[]]],[11,"is_div64","","Checks if the value of the field is `DIV64`",3927,[[]]],[11,"is_div256","","Checks if the value of the field is `DIV256`",3927,[[]]],[11,"is_div1024","","Checks if the value of the field is `DIV1024`",3927,[[]]],[11,"variant","","Writes `variant` to the field",3928,[[["prescaler_a",4]],["w",6]]],[11,"div1","","No division",3928,[[],["w",6]]],[11,"div2","","Divide by 2",3928,[[],["w",6]]],[11,"div4","","Divide by 4",3928,[[],["w",6]]],[11,"div8","","Divide by 8",3928,[[],["w",6]]],[11,"div16","","Divide by 16",3928,[[],["w",6]]],[11,"div64","","Divide by 64",3928,[[],["w",6]]],[11,"div256","","Divide by 256",3928,[[],["w",6]]],[11,"div1024","","Divide by 1024",3928,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3928,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3929,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3929,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3929,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",6,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",6,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrla","Get enumerated values variant",3930,[[],[["variant",4],["prescsync_a",4]]]],[11,"is_gclk","","Checks if the value of the field is `GCLK`",3930,[[]]],[11,"is_presc","","Checks if the value of the field is `PRESC`",3930,[[]]],[11,"is_resync","","Checks if the value of the field is `RESYNC`",3930,[[]]],[11,"variant","","Writes `variant` to the field",3931,[[["prescsync_a",4]],["w",6]]],[11,"gclk","","Reload or reset counter on next GCLK",3931,[[],["w",6]]],[11,"presc","","Reload or reset counter on next prescaler clock",3931,[[],["w",6]]],[11,"resync","","Reload or reset counter on next GCLK and reset prescaler…",3931,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3931,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3932,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3932,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3932,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3933,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3933,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3933,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3934,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3934,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3934,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3935,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3935,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3935,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3936,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3936,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3936,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3937,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3937,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3937,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3938,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3938,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3938,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3939,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3939,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3939,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3940,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3940,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3940,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",6,[[],["resolution_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",6,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",6,[[],["prescsync_r",6]]],[11,"alock","","Bit 14 - Auto Lock",6,[[],["alock_r",6]]],[11,"msync","","Bit 15 - Master Synchronization (only for TCC Slave…",6,[[],["msync_r",6]]],[11,"dmaos","","Bit 23 - DMA One-shot Trigger Mode",6,[[],["dmaos_r",6]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",6,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",6,[[],["cpten1_r",6]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",6,[[],["cpten2_r",6]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",6,[[],["cpten3_r",6]]],[11,"cpten4","","Bit 28 - Capture Channel 4 Enable",6,[[],["cpten4_r",6]]],[11,"cpten5","","Bit 29 - Capture Channel 5 Enable",6,[[],["cpten5_r",6]]],[11,"swrst","atsamd51g::tcc0::ctrla","Bit 0 - Software Reset",3941,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",3941,[[],["enable_r",6]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",3941,[[],["resolution_r",6]]],[11,"prescaler","","Bits 8:10 - Prescaler",3941,[[],["prescaler_r",6]]],[11,"runstdby","","Bit 11 - Run in Standby",3941,[[],["runstdby_r",6]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",3941,[[],["prescsync_r",6]]],[11,"alock","","Bit 14 - Auto Lock",3941,[[],["alock_r",6]]],[11,"msync","","Bit 15 - Master Synchronization (only for TCC Slave…",3941,[[],["msync_r",6]]],[11,"dmaos","","Bit 23 - DMA One-shot Trigger Mode",3941,[[],["dmaos_r",6]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",3941,[[],["cpten0_r",6]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",3941,[[],["cpten1_r",6]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",3941,[[],["cpten2_r",6]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",3941,[[],["cpten3_r",6]]],[11,"cpten4","","Bit 28 - Capture Channel 4 Enable",3941,[[],["cpten4_r",6]]],[11,"cpten5","","Bit 29 - Capture Channel 5 Enable",3941,[[],["cpten5_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",7,[[],["resolution_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",7,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",7,[[],["prescsync_w",3]]],[11,"alock","","Bit 14 - Auto Lock",7,[[],["alock_w",3]]],[11,"msync","","Bit 15 - Master Synchronization (only for TCC Slave…",7,[[],["msync_w",3]]],[11,"dmaos","","Bit 23 - DMA One-shot Trigger Mode",7,[[],["dmaos_w",3]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",7,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",7,[[],["cpten1_w",3]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",7,[[],["cpten2_w",3]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",7,[[],["cpten3_w",3]]],[11,"cpten4","","Bit 28 - Capture Channel 4 Enable",7,[[],["cpten4_w",3]]],[11,"cpten5","","Bit 29 - Capture Channel 5 Enable",7,[[],["cpten5_w",3]]],[11,"swrst","atsamd51g::tcc0::ctrla","Bit 0 - Software Reset",3942,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",3942,[[],["enable_w",3]]],[11,"resolution","","Bits 5:6 - Enhanced Resolution",3942,[[],["resolution_w",3]]],[11,"prescaler","","Bits 8:10 - Prescaler",3942,[[],["prescaler_w",3]]],[11,"runstdby","","Bit 11 - Run in Standby",3942,[[],["runstdby_w",3]]],[11,"prescsync","","Bits 12:13 - Prescaler and Counter Synchronization Selection",3942,[[],["prescsync_w",3]]],[11,"alock","","Bit 14 - Auto Lock",3942,[[],["alock_w",3]]],[11,"msync","","Bit 15 - Master Synchronization (only for TCC Slave…",3942,[[],["msync_w",3]]],[11,"dmaos","","Bit 23 - DMA One-shot Trigger Mode",3942,[[],["dmaos_w",3]]],[11,"cpten0","","Bit 24 - Capture Channel 0 Enable",3942,[[],["cpten0_w",3]]],[11,"cpten1","","Bit 25 - Capture Channel 1 Enable",3942,[[],["cpten1_w",3]]],[11,"cpten2","","Bit 26 - Capture Channel 2 Enable",3942,[[],["cpten2_w",3]]],[11,"cpten3","","Bit 27 - Capture Channel 3 Enable",3942,[[],["cpten3_w",3]]],[11,"cpten4","","Bit 28 - Capture Channel 4 Enable",3942,[[],["cpten4_w",3]]],[11,"cpten5","","Bit 29 - Capture Channel 5 Enable",3942,[[],["cpten5_w",3]]],[0,"ctrlbclr","atsamd51g::tcc0","Control B Clear",null,null],[3,"DIR_W","atsamd51g::tcc0::ctrlbclr","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"IDXCMD_W","","Write proxy for field `IDXCMD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"IDXCMD_A","","Ramp Index Command",null,null],[13,"DISABLE","","0: Command disabled: Index toggles between cycles A and B",3943,null],[13,"SET","","1: Set index: cycle B will be forced in the next cycle",3943,null],[13,"CLEAR","","2: Clear index: cycle A will be forced in the next cycle",3943,null],[13,"HOLD","","3: Hold index: the next cycle will be the same as the…",3943,null],[4,"CMD_A","","TCC Command",null,null],[13,"NONE","","0: No action",3944,null],[13,"RETRIGGER","","1: Clear start, restart or retrigger",3944,null],[13,"STOP","","2: Force stop",3944,null],[13,"UPDATE","","3: Force update or double buffered registers",3944,null],[13,"READSYNC","","4: Force COUNT read synchronization",3944,null],[13,"DMAOS","","5: One-shot DMA trigger",3944,null],[6,"R","","Reader of register CTRLBCLR",null,null],[6,"W","","Writer for register CTRLBCLR",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"IDXCMD_R","","Reader of field `IDXCMD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3945,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3945,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3945,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3946,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3946,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3946,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3947,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3947,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3947,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",6,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrlbclr","Get enumerated values variant",3948,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3948,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",3948,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",3948,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",3948,[[]]],[11,"variant","","Writes `variant` to the field",3949,[[["idxcmd_a",4]],["w",6]]],[11,"disable","","Command disabled: Index toggles between cycles A and B",3949,[[],["w",6]]],[11,"set","","Set index: cycle B will be forced in the next cycle",3949,[[],["w",6]]],[11,"clear","","Clear index: cycle A will be forced in the next cycle",3949,[[],["w",6]]],[11,"hold","","Hold index: the next cycle will be the same as the current…",3949,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3949,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrlbclr","Get enumerated values variant",3950,[[],[["variant",4],["cmd_a",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3950,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3950,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3950,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3950,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3950,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3950,[[]]],[11,"variant","","Writes `variant` to the field",3951,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3951,[[],["w",6]]],[11,"retrigger","","Clear start, restart or retrigger",3951,[[],["w",6]]],[11,"stop","","Force stop",3951,[[],["w",6]]],[11,"update","","Force update or double buffered registers",3951,[[],["w",6]]],[11,"readsync","","Force COUNT read synchronization",3951,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3951,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3951,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",6,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tcc0::ctrlbclr","Bit 0 - Counter Direction",3952,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3952,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",3952,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",3952,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",3952,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",7,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tcc0::ctrlbclr","Bit 0 - Counter Direction",3953,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3953,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",3953,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",3953,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",3953,[[],["cmd_w",3]]],[0,"ctrlbset","atsamd51g::tcc0","Control B Set",null,null],[3,"DIR_W","atsamd51g::tcc0::ctrlbset","Write proxy for field `DIR`",null,null],[3,"LUPD_W","","Write proxy for field `LUPD`",null,null],[3,"ONESHOT_W","","Write proxy for field `ONESHOT`",null,null],[3,"IDXCMD_W","","Write proxy for field `IDXCMD`",null,null],[3,"CMD_W","","Write proxy for field `CMD`",null,null],[4,"IDXCMD_A","","Ramp Index Command",null,null],[13,"DISABLE","","0: Command disabled: Index toggles between cycles A and B",3954,null],[13,"SET","","1: Set index: cycle B will be forced in the next cycle",3954,null],[13,"CLEAR","","2: Clear index: cycle A will be forced in the next cycle",3954,null],[13,"HOLD","","3: Hold index: the next cycle will be the same as the…",3954,null],[4,"CMD_A","","TCC Command",null,null],[13,"NONE","","0: No action",3955,null],[13,"RETRIGGER","","1: Clear start, restart or retrigger",3955,null],[13,"STOP","","2: Force stop",3955,null],[13,"UPDATE","","3: Force update or double buffered registers",3955,null],[13,"READSYNC","","4: Force COUNT read synchronization",3955,null],[13,"DMAOS","","5: One-shot DMA trigger",3955,null],[6,"R","","Reader of register CTRLBSET",null,null],[6,"W","","Writer for register CTRLBSET",null,null],[6,"DIR_R","","Reader of field `DIR`",null,null],[6,"LUPD_R","","Reader of field `LUPD`",null,null],[6,"ONESHOT_R","","Reader of field `ONESHOT`",null,null],[6,"IDXCMD_R","","Reader of field `IDXCMD`",null,null],[6,"CMD_R","","Reader of field `CMD`",null,null],[11,"set_bit","","Sets the field bit",3956,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3956,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3956,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3957,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3957,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3957,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3958,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3958,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3958,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",6,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",6,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrlbset","Get enumerated values variant",3959,[[],["idxcmd_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3959,[[]]],[11,"is_set","","Checks if the value of the field is `SET`",3959,[[]]],[11,"is_clear","","Checks if the value of the field is `CLEAR`",3959,[[]]],[11,"is_hold","","Checks if the value of the field is `HOLD`",3959,[[]]],[11,"variant","","Writes `variant` to the field",3960,[[["idxcmd_a",4]],["w",6]]],[11,"disable","","Command disabled: Index toggles between cycles A and B",3960,[[],["w",6]]],[11,"set","","Set index: cycle B will be forced in the next cycle",3960,[[],["w",6]]],[11,"clear","","Clear index: cycle A will be forced in the next cycle",3960,[[],["w",6]]],[11,"hold","","Hold index: the next cycle will be the same as the current…",3960,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3960,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",6,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",6,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",6,[[]]],[11,"variant","atsamd51g::tcc0::ctrlbset","Get enumerated values variant",3961,[[],[["cmd_a",4],["variant",4]]]],[11,"is_none","","Checks if the value of the field is `NONE`",3961,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",3961,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",3961,[[]]],[11,"is_update","","Checks if the value of the field is `UPDATE`",3961,[[]]],[11,"is_readsync","","Checks if the value of the field is `READSYNC`",3961,[[]]],[11,"is_dmaos","","Checks if the value of the field is `DMAOS`",3961,[[]]],[11,"variant","","Writes `variant` to the field",3962,[[["cmd_a",4]],["w",6]]],[11,"none","","No action",3962,[[],["w",6]]],[11,"retrigger","","Clear start, restart or retrigger",3962,[[],["w",6]]],[11,"stop","","Force stop",3962,[[],["w",6]]],[11,"update","","Force update or double buffered registers",3962,[[],["w",6]]],[11,"readsync","","Force COUNT read synchronization",3962,[[],["w",6]]],[11,"dmaos","","One-shot DMA trigger",3962,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3962,[[],["w",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",6,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",6,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",6,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",6,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",6,[[],["cmd_r",6]]],[11,"dir","atsamd51g::tcc0::ctrlbset","Bit 0 - Counter Direction",3963,[[],["dir_r",6]]],[11,"lupd","","Bit 1 - Lock Update",3963,[[],["lupd_r",6]]],[11,"oneshot","","Bit 2 - One-Shot",3963,[[],["oneshot_r",6]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",3963,[[],["idxcmd_r",6]]],[11,"cmd","","Bits 5:7 - TCC Command",3963,[[],["cmd_r",6]]],[11,"dir","atsamd51g::generic","Bit 0 - Counter Direction",7,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",7,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",7,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",7,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",7,[[],["cmd_w",3]]],[11,"dir","atsamd51g::tcc0::ctrlbset","Bit 0 - Counter Direction",3964,[[],["dir_w",3]]],[11,"lupd","","Bit 1 - Lock Update",3964,[[],["lupd_w",3]]],[11,"oneshot","","Bit 2 - One-Shot",3964,[[],["oneshot_w",3]]],[11,"idxcmd","","Bits 3:4 - Ramp Index Command",3964,[[],["idxcmd_w",3]]],[11,"cmd","","Bits 5:7 - TCC Command",3964,[[],["cmd_w",3]]],[0,"syncbusy","atsamd51g::tcc0","Synchronization Busy",null,null],[6,"R","atsamd51g::tcc0::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"CTRLB_R","","Reader of field `CTRLB`",null,null],[6,"STATUS_R","","Reader of field `STATUS`",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[6,"PATT_R","","Reader of field `PATT`",null,null],[6,"WAVE_R","","Reader of field `WAVE`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"CC0_R","","Reader of field `CC0`",null,null],[6,"CC1_R","","Reader of field `CC1`",null,null],[6,"CC2_R","","Reader of field `CC2`",null,null],[6,"CC3_R","","Reader of field `CC3`",null,null],[6,"CC4_R","","Reader of field `CC4`",null,null],[6,"CC5_R","","Reader of field `CC5`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Swrst Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Busy",6,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Ctrlb Busy",6,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Busy",6,[[],["status_r",6]]],[11,"count","","Bit 4 - Count Busy",6,[[],["count_r",6]]],[11,"patt","","Bit 5 - Pattern Busy",6,[[],["patt_r",6]]],[11,"wave","","Bit 6 - Wave Busy",6,[[],["wave_r",6]]],[11,"per","","Bit 7 - Period Busy",6,[[],["per_r",6]]],[11,"cc0","","Bit 8 - Compare Channel 0 Busy",6,[[],["cc0_r",6]]],[11,"cc1","","Bit 9 - Compare Channel 1 Busy",6,[[],["cc1_r",6]]],[11,"cc2","","Bit 10 - Compare Channel 2 Busy",6,[[],["cc2_r",6]]],[11,"cc3","","Bit 11 - Compare Channel 3 Busy",6,[[],["cc3_r",6]]],[11,"cc4","","Bit 12 - Compare Channel 4 Busy",6,[[],["cc4_r",6]]],[11,"cc5","","Bit 13 - Compare Channel 5 Busy",6,[[],["cc5_r",6]]],[11,"swrst","atsamd51g::tcc0::syncbusy","Bit 0 - Swrst Busy",3965,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Busy",3965,[[],["enable_r",6]]],[11,"ctrlb","","Bit 2 - Ctrlb Busy",3965,[[],["ctrlb_r",6]]],[11,"status","","Bit 3 - Status Busy",3965,[[],["status_r",6]]],[11,"count","","Bit 4 - Count Busy",3965,[[],["count_r",6]]],[11,"patt","","Bit 5 - Pattern Busy",3965,[[],["patt_r",6]]],[11,"wave","","Bit 6 - Wave Busy",3965,[[],["wave_r",6]]],[11,"per","","Bit 7 - Period Busy",3965,[[],["per_r",6]]],[11,"cc0","","Bit 8 - Compare Channel 0 Busy",3965,[[],["cc0_r",6]]],[11,"cc1","","Bit 9 - Compare Channel 1 Busy",3965,[[],["cc1_r",6]]],[11,"cc2","","Bit 10 - Compare Channel 2 Busy",3965,[[],["cc2_r",6]]],[11,"cc3","","Bit 11 - Compare Channel 3 Busy",3965,[[],["cc3_r",6]]],[11,"cc4","","Bit 12 - Compare Channel 4 Busy",3965,[[],["cc4_r",6]]],[11,"cc5","","Bit 13 - Compare Channel 5 Busy",3965,[[],["cc5_r",6]]],[0,"fctrla","atsamd51g::tcc0","Recoverable Fault A Configuration",null,null],[3,"SRC_W","atsamd51g::tcc0::fctrla","Write proxy for field `SRC`",null,null],[3,"KEEP_W","","Write proxy for field `KEEP`",null,null],[3,"QUAL_W","","Write proxy for field `QUAL`",null,null],[3,"BLANK_W","","Write proxy for field `BLANK`",null,null],[3,"RESTART_W","","Write proxy for field `RESTART`",null,null],[3,"HALT_W","","Write proxy for field `HALT`",null,null],[3,"CHSEL_W","","Write proxy for field `CHSEL`",null,null],[3,"CAPTURE_W","","Write proxy for field `CAPTURE`",null,null],[3,"BLANKPRESC_W","","Write proxy for field `BLANKPRESC`",null,null],[3,"BLANKVAL_W","","Write proxy for field `BLANKVAL`",null,null],[3,"FILTERVAL_W","","Write proxy for field `FILTERVAL`",null,null],[4,"SRC_A","","Fault A Source",null,null],[13,"DISABLE","","0: Fault input disabled",3966,null],[13,"ENABLE","","1: MCEx (x=0,1) event input",3966,null],[13,"INVERT","","2: Inverted MCEx (x=0,1) event input",3966,null],[13,"ALTFAULT","","3: Alternate fault (A or B) state at the end of the…",3966,null],[4,"BLANK_A","","Fault A Blanking Mode",null,null],[13,"START","","0: Blanking applied from start of the ramp",3967,null],[13,"RISE","","1: Blanking applied from rising edge of the output waveform",3967,null],[13,"FALL","","2: Blanking applied from falling edge of the output waveform",3967,null],[13,"BOTH","","3: Blanking applied from each toggle of the output waveform",3967,null],[4,"HALT_A","","Fault A Halt Mode",null,null],[13,"DISABLE","","0: Halt action disabled",3968,null],[13,"HW","","1: Hardware halt action",3968,null],[13,"SW","","2: Software halt action",3968,null],[13,"NR","","3: Non-recoverable fault",3968,null],[4,"CHSEL_A","","Fault A Capture Channel",null,null],[13,"CC0","","0: Capture value stored in channel 0",3969,null],[13,"CC1","","1: Capture value stored in channel 1",3969,null],[13,"CC2","","2: Capture value stored in channel 2",3969,null],[13,"CC3","","3: Capture value stored in channel 3",3969,null],[4,"CAPTURE_A","","Fault A Capture Action",null,null],[13,"DISABLE","","0: No capture",3970,null],[13,"CAPT","","1: Capture on fault",3970,null],[13,"CAPTMIN","","2: Minimum capture",3970,null],[13,"CAPTMAX","","3: Maximum capture",3970,null],[13,"LOCMIN","","4: Minimum local detection",3970,null],[13,"LOCMAX","","5: Maximum local detection",3970,null],[13,"DERIV0","","6: Minimum and maximum local detection",3970,null],[13,"CAPTMARK","","7: Capture with ramp index as MSB value",3970,null],[6,"R","","Reader of register FCTRLA",null,null],[6,"W","","Writer for register FCTRLA",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"KEEP_R","","Reader of field `KEEP`",null,null],[6,"QUAL_R","","Reader of field `QUAL`",null,null],[6,"BLANK_R","","Reader of field `BLANK`",null,null],[6,"RESTART_R","","Reader of field `RESTART`",null,null],[6,"HALT_R","","Reader of field `HALT`",null,null],[6,"CHSEL_R","","Reader of field `CHSEL`",null,null],[6,"CAPTURE_R","","Reader of field `CAPTURE`",null,null],[6,"BLANKPRESC_R","","Reader of field `BLANKPRESC`",null,null],[6,"BLANKVAL_R","","Reader of field `BLANKVAL`",null,null],[6,"FILTERVAL_R","","Reader of field `FILTERVAL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",6,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrla","Get enumerated values variant",3971,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3971,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",3971,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",3971,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",3971,[[]]],[11,"variant","","Writes `variant` to the field",3972,[[["src_a",4]],["w",6]]],[11,"disable","","Fault input disabled",3972,[[],["w",6]]],[11,"enable","","MCEx (x=0,1) event input",3972,[[],["w",6]]],[11,"invert","","Inverted MCEx (x=0,1) event input",3972,[[],["w",6]]],[11,"altfault","","Alternate fault (A or B) state at the end of the previous…",3972,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3972,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3973,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3973,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3973,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3974,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3974,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3974,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrla","Get enumerated values variant",3975,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",3975,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",3975,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",3975,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",3975,[[]]],[11,"variant","","Writes `variant` to the field",3976,[[["blank_a",4]],["w",6]]],[11,"start","","Blanking applied from start of the ramp",3976,[[],["w",6]]],[11,"rise","","Blanking applied from rising edge of the output waveform",3976,[[],["w",6]]],[11,"fall","","Blanking applied from falling edge of the output waveform",3976,[[],["w",6]]],[11,"both","","Blanking applied from each toggle of the output waveform",3976,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3976,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3977,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3977,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3977,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",6,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",6,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrla","Get enumerated values variant",3978,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3978,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",3978,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",3978,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",3978,[[]]],[11,"variant","","Writes `variant` to the field",3979,[[["halt_a",4]],["w",6]]],[11,"disable","","Halt action disabled",3979,[[],["w",6]]],[11,"hw","","Hardware halt action",3979,[[],["w",6]]],[11,"sw","","Software halt action",3979,[[],["w",6]]],[11,"nr","","Non-recoverable fault",3979,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3979,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",6,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",6,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",6,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrla","Get enumerated values variant",3980,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",3980,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",3980,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",3980,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",3980,[[]]],[11,"variant","","Writes `variant` to the field",3981,[[["chsel_a",4]],["w",6]]],[11,"cc0","","Capture value stored in channel 0",3981,[[],["w",6]]],[11,"cc1","","Capture value stored in channel 1",3981,[[],["w",6]]],[11,"cc2","","Capture value stored in channel 2",3981,[[],["w",6]]],[11,"cc3","","Capture value stored in channel 3",3981,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3981,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",6,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",6,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",6,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrla","Get enumerated values variant",3982,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3982,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",3982,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",3982,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",3982,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",3982,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",3982,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",3982,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",3982,[[]]],[11,"variant","","Writes `variant` to the field",3983,[[["capture_a",4]],["w",6]]],[11,"disable","","No capture",3983,[[],["w",6]]],[11,"capt","","Capture on fault",3983,[[],["w",6]]],[11,"captmin","","Minimum capture",3983,[[],["w",6]]],[11,"captmax","","Maximum capture",3983,[[],["w",6]]],[11,"locmin","","Minimum local detection",3983,[[],["w",6]]],[11,"locmax","","Maximum local detection",3983,[[],["w",6]]],[11,"deriv0","","Minimum and maximum local detection",3983,[[],["w",6]]],[11,"captmark","","Capture with ramp index as MSB value",3983,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3983,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3984,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3984,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3984,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3985,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3986,[[],["w",6]]],[11,"src","atsamd51g::generic","Bits 0:1 - Fault A Source",6,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault A Keeper",6,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault A Qualification",6,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",6,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault A Restart",6,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",6,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",6,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",6,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",6,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",6,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",6,[[],["filterval_r",6]]],[11,"src","atsamd51g::tcc0::fctrla","Bits 0:1 - Fault A Source",3987,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault A Keeper",3987,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault A Qualification",3987,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",3987,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault A Restart",3987,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",3987,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",3987,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",3987,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",3987,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",3987,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",3987,[[],["filterval_r",6]]],[11,"src","atsamd51g::generic","Bits 0:1 - Fault A Source",7,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault A Keeper",7,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault A Qualification",7,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",7,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault A Restart",7,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",7,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",7,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",7,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",7,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",7,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",7,[[],["filterval_w",3]]],[11,"src","atsamd51g::tcc0::fctrla","Bits 0:1 - Fault A Source",3988,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault A Keeper",3988,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault A Qualification",3988,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault A Blanking Mode",3988,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault A Restart",3988,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault A Halt Mode",3988,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault A Capture Channel",3988,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault A Capture Action",3988,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault A Blanking Prescaler",3988,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault A Blanking Time",3988,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault A Filter Value",3988,[[],["filterval_w",3]]],[0,"fctrlb","atsamd51g::tcc0","Recoverable Fault B Configuration",null,null],[3,"SRC_W","atsamd51g::tcc0::fctrlb","Write proxy for field `SRC`",null,null],[3,"KEEP_W","","Write proxy for field `KEEP`",null,null],[3,"QUAL_W","","Write proxy for field `QUAL`",null,null],[3,"BLANK_W","","Write proxy for field `BLANK`",null,null],[3,"RESTART_W","","Write proxy for field `RESTART`",null,null],[3,"HALT_W","","Write proxy for field `HALT`",null,null],[3,"CHSEL_W","","Write proxy for field `CHSEL`",null,null],[3,"CAPTURE_W","","Write proxy for field `CAPTURE`",null,null],[3,"BLANKPRESC_W","","Write proxy for field `BLANKPRESC`",null,null],[3,"BLANKVAL_W","","Write proxy for field `BLANKVAL`",null,null],[3,"FILTERVAL_W","","Write proxy for field `FILTERVAL`",null,null],[4,"SRC_A","","Fault B Source",null,null],[13,"DISABLE","","0: Fault input disabled",3989,null],[13,"ENABLE","","1: MCEx (x=0,1) event input",3989,null],[13,"INVERT","","2: Inverted MCEx (x=0,1) event input",3989,null],[13,"ALTFAULT","","3: Alternate fault (A or B) state at the end of the…",3989,null],[4,"BLANK_A","","Fault B Blanking Mode",null,null],[13,"START","","0: Blanking applied from start of the ramp",3990,null],[13,"RISE","","1: Blanking applied from rising edge of the output waveform",3990,null],[13,"FALL","","2: Blanking applied from falling edge of the output waveform",3990,null],[13,"BOTH","","3: Blanking applied from each toggle of the output waveform",3990,null],[4,"HALT_A","","Fault B Halt Mode",null,null],[13,"DISABLE","","0: Halt action disabled",3991,null],[13,"HW","","1: Hardware halt action",3991,null],[13,"SW","","2: Software halt action",3991,null],[13,"NR","","3: Non-recoverable fault",3991,null],[4,"CHSEL_A","","Fault B Capture Channel",null,null],[13,"CC0","","0: Capture value stored in channel 0",3992,null],[13,"CC1","","1: Capture value stored in channel 1",3992,null],[13,"CC2","","2: Capture value stored in channel 2",3992,null],[13,"CC3","","3: Capture value stored in channel 3",3992,null],[4,"CAPTURE_A","","Fault B Capture Action",null,null],[13,"DISABLE","","0: No capture",3993,null],[13,"CAPT","","1: Capture on fault",3993,null],[13,"CAPTMIN","","2: Minimum capture",3993,null],[13,"CAPTMAX","","3: Maximum capture",3993,null],[13,"LOCMIN","","4: Minimum local detection",3993,null],[13,"LOCMAX","","5: Maximum local detection",3993,null],[13,"DERIV0","","6: Minimum and maximum local detection",3993,null],[13,"CAPTMARK","","7: Capture with ramp index as MSB value",3993,null],[6,"R","","Reader of register FCTRLB",null,null],[6,"W","","Writer for register FCTRLB",null,null],[6,"SRC_R","","Reader of field `SRC`",null,null],[6,"KEEP_R","","Reader of field `KEEP`",null,null],[6,"QUAL_R","","Reader of field `QUAL`",null,null],[6,"BLANK_R","","Reader of field `BLANK`",null,null],[6,"RESTART_R","","Reader of field `RESTART`",null,null],[6,"HALT_R","","Reader of field `HALT`",null,null],[6,"CHSEL_R","","Reader of field `CHSEL`",null,null],[6,"CAPTURE_R","","Reader of field `CAPTURE`",null,null],[6,"BLANKPRESC_R","","Reader of field `BLANKPRESC`",null,null],[6,"BLANKVAL_R","","Reader of field `BLANKVAL`",null,null],[6,"FILTERVAL_R","","Reader of field `FILTERVAL`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",6,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",6,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrlb","Get enumerated values variant",3994,[[],["src_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",3994,[[]]],[11,"is_enable","","Checks if the value of the field is `ENABLE`",3994,[[]]],[11,"is_invert","","Checks if the value of the field is `INVERT`",3994,[[]]],[11,"is_altfault","","Checks if the value of the field is `ALTFAULT`",3994,[[]]],[11,"variant","","Writes `variant` to the field",3995,[[["src_a",4]],["w",6]]],[11,"disable","","Fault input disabled",3995,[[],["w",6]]],[11,"enable","","MCEx (x=0,1) event input",3995,[[],["w",6]]],[11,"invert","","Inverted MCEx (x=0,1) event input",3995,[[],["w",6]]],[11,"altfault","","Alternate fault (A or B) state at the end of the previous…",3995,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3995,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3996,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3996,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3996,[[],["w",6]]],[11,"set_bit","","Sets the field bit",3997,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",3997,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",3997,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",6,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",6,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrlb","Get enumerated values variant",3998,[[],["blank_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",3998,[[]]],[11,"is_rise","","Checks if the value of the field is `RISE`",3998,[[]]],[11,"is_fall","","Checks if the value of the field is `FALL`",3998,[[]]],[11,"is_both","","Checks if the value of the field is `BOTH`",3998,[[]]],[11,"variant","","Writes `variant` to the field",3999,[[["blank_a",4]],["w",6]]],[11,"start","","Blanking applied from start of the ramp",3999,[[],["w",6]]],[11,"rise","","Blanking applied from rising edge of the output waveform",3999,[[],["w",6]]],[11,"fall","","Blanking applied from falling edge of the output waveform",3999,[[],["w",6]]],[11,"both","","Blanking applied from each toggle of the output waveform",3999,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",3999,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4000,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4000,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4000,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",6,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",6,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrlb","Get enumerated values variant",4001,[[],["halt_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",4001,[[]]],[11,"is_hw","","Checks if the value of the field is `HW`",4001,[[]]],[11,"is_sw","","Checks if the value of the field is `SW`",4001,[[]]],[11,"is_nr","","Checks if the value of the field is `NR`",4001,[[]]],[11,"variant","","Writes `variant` to the field",4002,[[["halt_a",4]],["w",6]]],[11,"disable","","Halt action disabled",4002,[[],["w",6]]],[11,"hw","","Hardware halt action",4002,[[],["w",6]]],[11,"sw","","Software halt action",4002,[[],["w",6]]],[11,"nr","","Non-recoverable fault",4002,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4002,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",6,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",6,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",6,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrlb","Get enumerated values variant",4003,[[],["chsel_a",4]]],[11,"is_cc0","","Checks if the value of the field is `CC0`",4003,[[]]],[11,"is_cc1","","Checks if the value of the field is `CC1`",4003,[[]]],[11,"is_cc2","","Checks if the value of the field is `CC2`",4003,[[]]],[11,"is_cc3","","Checks if the value of the field is `CC3`",4003,[[]]],[11,"variant","","Writes `variant` to the field",4004,[[["chsel_a",4]],["w",6]]],[11,"cc0","","Capture value stored in channel 0",4004,[[],["w",6]]],[11,"cc1","","Capture value stored in channel 1",4004,[[],["w",6]]],[11,"cc2","","Capture value stored in channel 2",4004,[[],["w",6]]],[11,"cc3","","Capture value stored in channel 3",4004,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4004,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",6,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",6,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",6,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",6,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",6,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",6,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",6,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",6,[[]]],[11,"variant","atsamd51g::tcc0::fctrlb","Get enumerated values variant",4005,[[],["capture_a",4]]],[11,"is_disable","","Checks if the value of the field is `DISABLE`",4005,[[]]],[11,"is_capt","","Checks if the value of the field is `CAPT`",4005,[[]]],[11,"is_captmin","","Checks if the value of the field is `CAPTMIN`",4005,[[]]],[11,"is_captmax","","Checks if the value of the field is `CAPTMAX`",4005,[[]]],[11,"is_locmin","","Checks if the value of the field is `LOCMIN`",4005,[[]]],[11,"is_locmax","","Checks if the value of the field is `LOCMAX`",4005,[[]]],[11,"is_deriv0","","Checks if the value of the field is `DERIV0`",4005,[[]]],[11,"is_captmark","","Checks if the value of the field is `CAPTMARK`",4005,[[]]],[11,"variant","","Writes `variant` to the field",4006,[[["capture_a",4]],["w",6]]],[11,"disable","","No capture",4006,[[],["w",6]]],[11,"capt","","Capture on fault",4006,[[],["w",6]]],[11,"captmin","","Minimum capture",4006,[[],["w",6]]],[11,"captmax","","Maximum capture",4006,[[],["w",6]]],[11,"locmin","","Minimum local detection",4006,[[],["w",6]]],[11,"locmax","","Maximum local detection",4006,[[],["w",6]]],[11,"deriv0","","Minimum and maximum local detection",4006,[[],["w",6]]],[11,"captmark","","Capture with ramp index as MSB value",4006,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4006,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4007,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4007,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4007,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4008,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4009,[[],["w",6]]],[11,"src","atsamd51g::generic","Bits 0:1 - Fault B Source",6,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault B Keeper",6,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault B Qualification",6,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",6,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault B Restart",6,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",6,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",6,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",6,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",6,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",6,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",6,[[],["filterval_r",6]]],[11,"src","atsamd51g::tcc0::fctrlb","Bits 0:1 - Fault B Source",4010,[[],["src_r",6]]],[11,"keep","","Bit 3 - Fault B Keeper",4010,[[],["keep_r",6]]],[11,"qual","","Bit 4 - Fault B Qualification",4010,[[],["qual_r",6]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",4010,[[],["blank_r",6]]],[11,"restart","","Bit 7 - Fault B Restart",4010,[[],["restart_r",6]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",4010,[[],["halt_r",6]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",4010,[[],["chsel_r",6]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",4010,[[],["capture_r",6]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",4010,[[],["blankpresc_r",6]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",4010,[[],["blankval_r",6]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",4010,[[],["filterval_r",6]]],[11,"src","atsamd51g::generic","Bits 0:1 - Fault B Source",7,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault B Keeper",7,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault B Qualification",7,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",7,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault B Restart",7,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",7,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",7,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",7,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",7,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",7,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",7,[[],["filterval_w",3]]],[11,"src","atsamd51g::tcc0::fctrlb","Bits 0:1 - Fault B Source",4011,[[],["src_w",3]]],[11,"keep","","Bit 3 - Fault B Keeper",4011,[[],["keep_w",3]]],[11,"qual","","Bit 4 - Fault B Qualification",4011,[[],["qual_w",3]]],[11,"blank","","Bits 5:6 - Fault B Blanking Mode",4011,[[],["blank_w",3]]],[11,"restart","","Bit 7 - Fault B Restart",4011,[[],["restart_w",3]]],[11,"halt","","Bits 8:9 - Fault B Halt Mode",4011,[[],["halt_w",3]]],[11,"chsel","","Bits 10:11 - Fault B Capture Channel",4011,[[],["chsel_w",3]]],[11,"capture","","Bits 12:14 - Fault B Capture Action",4011,[[],["capture_w",3]]],[11,"blankpresc","","Bit 15 - Fault B Blanking Prescaler",4011,[[],["blankpresc_w",3]]],[11,"blankval","","Bits 16:23 - Fault B Blanking Time",4011,[[],["blankval_w",3]]],[11,"filterval","","Bits 24:27 - Fault B Filter Value",4011,[[],["filterval_w",3]]],[0,"wexctrl","atsamd51g::tcc0","Waveform Extension Configuration",null,null],[3,"OTMX_W","atsamd51g::tcc0::wexctrl","Write proxy for field `OTMX`",null,null],[3,"DTIEN0_W","","Write proxy for field `DTIEN0`",null,null],[3,"DTIEN1_W","","Write proxy for field `DTIEN1`",null,null],[3,"DTIEN2_W","","Write proxy for field `DTIEN2`",null,null],[3,"DTIEN3_W","","Write proxy for field `DTIEN3`",null,null],[3,"DTLS_W","","Write proxy for field `DTLS`",null,null],[3,"DTHS_W","","Write proxy for field `DTHS`",null,null],[6,"R","","Reader of register WEXCTRL",null,null],[6,"W","","Writer for register WEXCTRL",null,null],[6,"OTMX_R","","Reader of field `OTMX`",null,null],[6,"DTIEN0_R","","Reader of field `DTIEN0`",null,null],[6,"DTIEN1_R","","Reader of field `DTIEN1`",null,null],[6,"DTIEN2_R","","Reader of field `DTIEN2`",null,null],[6,"DTIEN3_R","","Reader of field `DTIEN3`",null,null],[6,"DTLS_R","","Reader of field `DTLS`",null,null],[6,"DTHS_R","","Reader of field `DTHS`",null,null],[11,"bits","","Writes raw bits to the field",4012,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4013,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4013,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4013,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4014,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4014,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4014,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4015,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4015,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4015,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4016,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4016,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4016,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4017,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4018,[[],["w",6]]],[11,"otmx","atsamd51g::generic","Bits 0:1 - Output Matrix",6,[[],["otmx_r",6]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",6,[[],["dtien0_r",6]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",6,[[],["dtien1_r",6]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",6,[[],["dtien2_r",6]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",6,[[],["dtien3_r",6]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",6,[[],["dtls_r",6]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",6,[[],["dths_r",6]]],[11,"otmx","atsamd51g::tcc0::wexctrl","Bits 0:1 - Output Matrix",4019,[[],["otmx_r",6]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",4019,[[],["dtien0_r",6]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",4019,[[],["dtien1_r",6]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",4019,[[],["dtien2_r",6]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",4019,[[],["dtien3_r",6]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",4019,[[],["dtls_r",6]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",4019,[[],["dths_r",6]]],[11,"otmx","atsamd51g::generic","Bits 0:1 - Output Matrix",7,[[],["otmx_w",3]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",7,[[],["dtien0_w",3]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",7,[[],["dtien1_w",3]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",7,[[],["dtien2_w",3]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",7,[[],["dtien3_w",3]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",7,[[],["dtls_w",3]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",7,[[],["dths_w",3]]],[11,"otmx","atsamd51g::tcc0::wexctrl","Bits 0:1 - Output Matrix",4020,[[],["otmx_w",3]]],[11,"dtien0","","Bit 8 - Dead-time Insertion Generator 0 Enable",4020,[[],["dtien0_w",3]]],[11,"dtien1","","Bit 9 - Dead-time Insertion Generator 1 Enable",4020,[[],["dtien1_w",3]]],[11,"dtien2","","Bit 10 - Dead-time Insertion Generator 2 Enable",4020,[[],["dtien2_w",3]]],[11,"dtien3","","Bit 11 - Dead-time Insertion Generator 3 Enable",4020,[[],["dtien3_w",3]]],[11,"dtls","","Bits 16:23 - Dead-time Low Side Outputs Value",4020,[[],["dtls_w",3]]],[11,"dths","","Bits 24:31 - Dead-time High Side Outputs Value",4020,[[],["dths_w",3]]],[0,"drvctrl","atsamd51g::tcc0","Driver Control",null,null],[3,"NRE0_W","atsamd51g::tcc0::drvctrl","Write proxy for field `NRE0`",null,null],[3,"NRE1_W","","Write proxy for field `NRE1`",null,null],[3,"NRE2_W","","Write proxy for field `NRE2`",null,null],[3,"NRE3_W","","Write proxy for field `NRE3`",null,null],[3,"NRE4_W","","Write proxy for field `NRE4`",null,null],[3,"NRE5_W","","Write proxy for field `NRE5`",null,null],[3,"NRE6_W","","Write proxy for field `NRE6`",null,null],[3,"NRE7_W","","Write proxy for field `NRE7`",null,null],[3,"NRV0_W","","Write proxy for field `NRV0`",null,null],[3,"NRV1_W","","Write proxy for field `NRV1`",null,null],[3,"NRV2_W","","Write proxy for field `NRV2`",null,null],[3,"NRV3_W","","Write proxy for field `NRV3`",null,null],[3,"NRV4_W","","Write proxy for field `NRV4`",null,null],[3,"NRV5_W","","Write proxy for field `NRV5`",null,null],[3,"NRV6_W","","Write proxy for field `NRV6`",null,null],[3,"NRV7_W","","Write proxy for field `NRV7`",null,null],[3,"INVEN0_W","","Write proxy for field `INVEN0`",null,null],[3,"INVEN1_W","","Write proxy for field `INVEN1`",null,null],[3,"INVEN2_W","","Write proxy for field `INVEN2`",null,null],[3,"INVEN3_W","","Write proxy for field `INVEN3`",null,null],[3,"INVEN4_W","","Write proxy for field `INVEN4`",null,null],[3,"INVEN5_W","","Write proxy for field `INVEN5`",null,null],[3,"INVEN6_W","","Write proxy for field `INVEN6`",null,null],[3,"INVEN7_W","","Write proxy for field `INVEN7`",null,null],[3,"FILTERVAL0_W","","Write proxy for field `FILTERVAL0`",null,null],[3,"FILTERVAL1_W","","Write proxy for field `FILTERVAL1`",null,null],[6,"R","","Reader of register DRVCTRL",null,null],[6,"W","","Writer for register DRVCTRL",null,null],[6,"NRE0_R","","Reader of field `NRE0`",null,null],[6,"NRE1_R","","Reader of field `NRE1`",null,null],[6,"NRE2_R","","Reader of field `NRE2`",null,null],[6,"NRE3_R","","Reader of field `NRE3`",null,null],[6,"NRE4_R","","Reader of field `NRE4`",null,null],[6,"NRE5_R","","Reader of field `NRE5`",null,null],[6,"NRE6_R","","Reader of field `NRE6`",null,null],[6,"NRE7_R","","Reader of field `NRE7`",null,null],[6,"NRV0_R","","Reader of field `NRV0`",null,null],[6,"NRV1_R","","Reader of field `NRV1`",null,null],[6,"NRV2_R","","Reader of field `NRV2`",null,null],[6,"NRV3_R","","Reader of field `NRV3`",null,null],[6,"NRV4_R","","Reader of field `NRV4`",null,null],[6,"NRV5_R","","Reader of field `NRV5`",null,null],[6,"NRV6_R","","Reader of field `NRV6`",null,null],[6,"NRV7_R","","Reader of field `NRV7`",null,null],[6,"INVEN0_R","","Reader of field `INVEN0`",null,null],[6,"INVEN1_R","","Reader of field `INVEN1`",null,null],[6,"INVEN2_R","","Reader of field `INVEN2`",null,null],[6,"INVEN3_R","","Reader of field `INVEN3`",null,null],[6,"INVEN4_R","","Reader of field `INVEN4`",null,null],[6,"INVEN5_R","","Reader of field `INVEN5`",null,null],[6,"INVEN6_R","","Reader of field `INVEN6`",null,null],[6,"INVEN7_R","","Reader of field `INVEN7`",null,null],[6,"FILTERVAL0_R","","Reader of field `FILTERVAL0`",null,null],[6,"FILTERVAL1_R","","Reader of field `FILTERVAL1`",null,null],[11,"set_bit","","Sets the field bit",4021,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4021,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4021,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4022,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4022,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4022,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4023,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4023,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4023,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4024,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4024,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4024,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4025,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4025,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4025,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4026,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4026,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4026,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4027,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4027,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4027,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4028,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4028,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4028,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4029,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4029,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4029,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4030,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4030,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4030,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4031,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4031,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4031,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4032,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4032,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4032,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4033,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4033,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4033,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4034,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4034,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4034,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4035,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4035,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4035,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4036,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4036,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4036,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4037,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4037,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4037,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4038,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4038,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4038,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4039,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4039,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4039,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4040,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4040,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4040,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4041,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4041,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4041,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4042,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4042,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4042,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4043,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4043,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4043,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4044,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4044,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4044,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4045,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4046,[[],["w",6]]],[11,"nre0","atsamd51g::generic","Bit 0 - Non-Recoverable State 0 Output Enable",6,[[],["nre0_r",6]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",6,[[],["nre1_r",6]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",6,[[],["nre2_r",6]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",6,[[],["nre3_r",6]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",6,[[],["nre4_r",6]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",6,[[],["nre5_r",6]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",6,[[],["nre6_r",6]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",6,[[],["nre7_r",6]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",6,[[],["nrv0_r",6]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",6,[[],["nrv1_r",6]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",6,[[],["nrv2_r",6]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",6,[[],["nrv3_r",6]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",6,[[],["nrv4_r",6]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",6,[[],["nrv5_r",6]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",6,[[],["nrv6_r",6]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",6,[[],["nrv7_r",6]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",6,[[],["inven0_r",6]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",6,[[],["inven1_r",6]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",6,[[],["inven2_r",6]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",6,[[],["inven3_r",6]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",6,[[],["inven4_r",6]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",6,[[],["inven5_r",6]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",6,[[],["inven6_r",6]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",6,[[],["inven7_r",6]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",6,[[],["filterval0_r",6]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",6,[[],["filterval1_r",6]]],[11,"nre0","atsamd51g::tcc0::drvctrl","Bit 0 - Non-Recoverable State 0 Output Enable",4047,[[],["nre0_r",6]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",4047,[[],["nre1_r",6]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",4047,[[],["nre2_r",6]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",4047,[[],["nre3_r",6]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",4047,[[],["nre4_r",6]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",4047,[[],["nre5_r",6]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",4047,[[],["nre6_r",6]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",4047,[[],["nre7_r",6]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",4047,[[],["nrv0_r",6]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",4047,[[],["nrv1_r",6]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",4047,[[],["nrv2_r",6]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",4047,[[],["nrv3_r",6]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",4047,[[],["nrv4_r",6]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",4047,[[],["nrv5_r",6]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",4047,[[],["nrv6_r",6]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",4047,[[],["nrv7_r",6]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",4047,[[],["inven0_r",6]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",4047,[[],["inven1_r",6]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",4047,[[],["inven2_r",6]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",4047,[[],["inven3_r",6]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",4047,[[],["inven4_r",6]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",4047,[[],["inven5_r",6]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",4047,[[],["inven6_r",6]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",4047,[[],["inven7_r",6]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",4047,[[],["filterval0_r",6]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",4047,[[],["filterval1_r",6]]],[11,"nre0","atsamd51g::generic","Bit 0 - Non-Recoverable State 0 Output Enable",7,[[],["nre0_w",3]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",7,[[],["nre1_w",3]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",7,[[],["nre2_w",3]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",7,[[],["nre3_w",3]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",7,[[],["nre4_w",3]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",7,[[],["nre5_w",3]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",7,[[],["nre6_w",3]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",7,[[],["nre7_w",3]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",7,[[],["nrv0_w",3]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",7,[[],["nrv1_w",3]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",7,[[],["nrv2_w",3]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",7,[[],["nrv3_w",3]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",7,[[],["nrv4_w",3]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",7,[[],["nrv5_w",3]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",7,[[],["nrv6_w",3]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",7,[[],["nrv7_w",3]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",7,[[],["inven0_w",3]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",7,[[],["inven1_w",3]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",7,[[],["inven2_w",3]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",7,[[],["inven3_w",3]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",7,[[],["inven4_w",3]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",7,[[],["inven5_w",3]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",7,[[],["inven6_w",3]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",7,[[],["inven7_w",3]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",7,[[],["filterval0_w",3]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",7,[[],["filterval1_w",3]]],[11,"nre0","atsamd51g::tcc0::drvctrl","Bit 0 - Non-Recoverable State 0 Output Enable",4048,[[],["nre0_w",3]]],[11,"nre1","","Bit 1 - Non-Recoverable State 1 Output Enable",4048,[[],["nre1_w",3]]],[11,"nre2","","Bit 2 - Non-Recoverable State 2 Output Enable",4048,[[],["nre2_w",3]]],[11,"nre3","","Bit 3 - Non-Recoverable State 3 Output Enable",4048,[[],["nre3_w",3]]],[11,"nre4","","Bit 4 - Non-Recoverable State 4 Output Enable",4048,[[],["nre4_w",3]]],[11,"nre5","","Bit 5 - Non-Recoverable State 5 Output Enable",4048,[[],["nre5_w",3]]],[11,"nre6","","Bit 6 - Non-Recoverable State 6 Output Enable",4048,[[],["nre6_w",3]]],[11,"nre7","","Bit 7 - Non-Recoverable State 7 Output Enable",4048,[[],["nre7_w",3]]],[11,"nrv0","","Bit 8 - Non-Recoverable State 0 Output Value",4048,[[],["nrv0_w",3]]],[11,"nrv1","","Bit 9 - Non-Recoverable State 1 Output Value",4048,[[],["nrv1_w",3]]],[11,"nrv2","","Bit 10 - Non-Recoverable State 2 Output Value",4048,[[],["nrv2_w",3]]],[11,"nrv3","","Bit 11 - Non-Recoverable State 3 Output Value",4048,[[],["nrv3_w",3]]],[11,"nrv4","","Bit 12 - Non-Recoverable State 4 Output Value",4048,[[],["nrv4_w",3]]],[11,"nrv5","","Bit 13 - Non-Recoverable State 5 Output Value",4048,[[],["nrv5_w",3]]],[11,"nrv6","","Bit 14 - Non-Recoverable State 6 Output Value",4048,[[],["nrv6_w",3]]],[11,"nrv7","","Bit 15 - Non-Recoverable State 7 Output Value",4048,[[],["nrv7_w",3]]],[11,"inven0","","Bit 16 - Output Waveform 0 Inversion",4048,[[],["inven0_w",3]]],[11,"inven1","","Bit 17 - Output Waveform 1 Inversion",4048,[[],["inven1_w",3]]],[11,"inven2","","Bit 18 - Output Waveform 2 Inversion",4048,[[],["inven2_w",3]]],[11,"inven3","","Bit 19 - Output Waveform 3 Inversion",4048,[[],["inven3_w",3]]],[11,"inven4","","Bit 20 - Output Waveform 4 Inversion",4048,[[],["inven4_w",3]]],[11,"inven5","","Bit 21 - Output Waveform 5 Inversion",4048,[[],["inven5_w",3]]],[11,"inven6","","Bit 22 - Output Waveform 6 Inversion",4048,[[],["inven6_w",3]]],[11,"inven7","","Bit 23 - Output Waveform 7 Inversion",4048,[[],["inven7_w",3]]],[11,"filterval0","","Bits 24:27 - Non-Recoverable Fault Input 0 Filter Value",4048,[[],["filterval0_w",3]]],[11,"filterval1","","Bits 28:31 - Non-Recoverable Fault Input 1 Filter Value",4048,[[],["filterval1_w",3]]],[0,"dbgctrl","atsamd51g::tcc0","Debug Control",null,null],[3,"DBGRUN_W","atsamd51g::tcc0::dbgctrl","Write proxy for field `DBGRUN`",null,null],[3,"FDDBD_W","","Write proxy for field `FDDBD`",null,null],[6,"R","","Reader of register DBGCTRL",null,null],[6,"W","","Writer for register DBGCTRL",null,null],[6,"DBGRUN_R","","Reader of field `DBGRUN`",null,null],[6,"FDDBD_R","","Reader of field `FDDBD`",null,null],[11,"set_bit","","Sets the field bit",4049,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4049,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4049,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4050,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4050,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4050,[[],["w",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Running Mode",6,[[],["dbgrun_r",6]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",6,[[],["fddbd_r",6]]],[11,"dbgrun","atsamd51g::tcc0::dbgctrl","Bit 0 - Debug Running Mode",4051,[[],["dbgrun_r",6]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",4051,[[],["fddbd_r",6]]],[11,"dbgrun","atsamd51g::generic","Bit 0 - Debug Running Mode",7,[[],["dbgrun_w",3]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",7,[[],["fddbd_w",3]]],[11,"dbgrun","atsamd51g::tcc0::dbgctrl","Bit 0 - Debug Running Mode",4052,[[],["dbgrun_w",3]]],[11,"fddbd","","Bit 2 - Fault Detection on Debug Break Detection",4052,[[],["fddbd_w",3]]],[0,"evctrl","atsamd51g::tcc0","Event Control",null,null],[3,"EVACT0_W","atsamd51g::tcc0::evctrl","Write proxy for field `EVACT0`",null,null],[3,"EVACT1_W","","Write proxy for field `EVACT1`",null,null],[3,"CNTSEL_W","","Write proxy for field `CNTSEL`",null,null],[3,"OVFEO_W","","Write proxy for field `OVFEO`",null,null],[3,"TRGEO_W","","Write proxy for field `TRGEO`",null,null],[3,"CNTEO_W","","Write proxy for field `CNTEO`",null,null],[3,"TCINV0_W","","Write proxy for field `TCINV0`",null,null],[3,"TCINV1_W","","Write proxy for field `TCINV1`",null,null],[3,"TCEI0_W","","Write proxy for field `TCEI0`",null,null],[3,"TCEI1_W","","Write proxy for field `TCEI1`",null,null],[3,"MCEI0_W","","Write proxy for field `MCEI0`",null,null],[3,"MCEI1_W","","Write proxy for field `MCEI1`",null,null],[3,"MCEI2_W","","Write proxy for field `MCEI2`",null,null],[3,"MCEI3_W","","Write proxy for field `MCEI3`",null,null],[3,"MCEI4_W","","Write proxy for field `MCEI4`",null,null],[3,"MCEI5_W","","Write proxy for field `MCEI5`",null,null],[3,"MCEO0_W","","Write proxy for field `MCEO0`",null,null],[3,"MCEO1_W","","Write proxy for field `MCEO1`",null,null],[3,"MCEO2_W","","Write proxy for field `MCEO2`",null,null],[3,"MCEO3_W","","Write proxy for field `MCEO3`",null,null],[3,"MCEO4_W","","Write proxy for field `MCEO4`",null,null],[3,"MCEO5_W","","Write proxy for field `MCEO5`",null,null],[4,"EVACT0_A","","Timer/counter Input Event0 Action",null,null],[13,"OFF","","0: Event action disabled",4053,null],[13,"RETRIGGER","","1: Start, restart or re-trigger counter on event",4053,null],[13,"COUNTEV","","2: Count on event",4053,null],[13,"START","","3: Start counter on event",4053,null],[13,"INC","","4: Increment counter on event",4053,null],[13,"COUNT","","5: Count on active state of asynchronous event",4053,null],[13,"STAMP","","6: Stamp capture",4053,null],[13,"FAULT","","7: Non-recoverable fault",4053,null],[4,"EVACT1_A","","Timer/counter Input Event1 Action",null,null],[13,"OFF","","0: Event action disabled",4054,null],[13,"RETRIGGER","","1: Re-trigger counter on event",4054,null],[13,"DIR","","2: Direction control",4054,null],[13,"STOP","","3: Stop counter on event",4054,null],[13,"DEC","","4: Decrement counter on event",4054,null],[13,"PPW","","5: Period capture value in CC0 register, pulse width…",4054,null],[13,"PWP","","6: Period capture value in CC1 register, pulse width…",4054,null],[13,"FAULT","","7: Non-recoverable fault",4054,null],[4,"CNTSEL_A","","Timer/counter Output Event Mode",null,null],[13,"START","","0: An interrupt/event is generated when a new counter…",4055,null],[13,"END","","1: An interrupt/event is generated when a counter cycle ends",4055,null],[13,"BETWEEN","","2: An interrupt/event is generated when a counter cycle…",4055,null],[13,"BOUNDARY","","3: An interrupt/event is generated when a new counter…",4055,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"EVACT0_R","","Reader of field `EVACT0`",null,null],[6,"EVACT1_R","","Reader of field `EVACT1`",null,null],[6,"CNTSEL_R","","Reader of field `CNTSEL`",null,null],[6,"OVFEO_R","","Reader of field `OVFEO`",null,null],[6,"TRGEO_R","","Reader of field `TRGEO`",null,null],[6,"CNTEO_R","","Reader of field `CNTEO`",null,null],[6,"TCINV0_R","","Reader of field `TCINV0`",null,null],[6,"TCINV1_R","","Reader of field `TCINV1`",null,null],[6,"TCEI0_R","","Reader of field `TCEI0`",null,null],[6,"TCEI1_R","","Reader of field `TCEI1`",null,null],[6,"MCEI0_R","","Reader of field `MCEI0`",null,null],[6,"MCEI1_R","","Reader of field `MCEI1`",null,null],[6,"MCEI2_R","","Reader of field `MCEI2`",null,null],[6,"MCEI3_R","","Reader of field `MCEI3`",null,null],[6,"MCEI4_R","","Reader of field `MCEI4`",null,null],[6,"MCEI5_R","","Reader of field `MCEI5`",null,null],[6,"MCEO0_R","","Reader of field `MCEO0`",null,null],[6,"MCEO1_R","","Reader of field `MCEO1`",null,null],[6,"MCEO2_R","","Reader of field `MCEO2`",null,null],[6,"MCEO3_R","","Reader of field `MCEO3`",null,null],[6,"MCEO4_R","","Reader of field `MCEO4`",null,null],[6,"MCEO5_R","","Reader of field `MCEO5`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact0_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_countev","","Checks if the value of the field is `COUNTEV`",6,[[]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_inc","","Checks if the value of the field is `INC`",6,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",6,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",6,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",6,[[]]],[11,"variant","atsamd51g::tcc0::evctrl","Get enumerated values variant",4056,[[],["evact0_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",4056,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",4056,[[]]],[11,"is_countev","","Checks if the value of the field is `COUNTEV`",4056,[[]]],[11,"is_start","","Checks if the value of the field is `START`",4056,[[]]],[11,"is_inc","","Checks if the value of the field is `INC`",4056,[[]]],[11,"is_count","","Checks if the value of the field is `COUNT`",4056,[[]]],[11,"is_stamp","","Checks if the value of the field is `STAMP`",4056,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",4056,[[]]],[11,"variant","","Writes `variant` to the field",4057,[[["evact0_a",4]],["w",6]]],[11,"off","","Event action disabled",4057,[[],["w",6]]],[11,"retrigger","","Start, restart or re-trigger counter on event",4057,[[],["w",6]]],[11,"countev","","Count on event",4057,[[],["w",6]]],[11,"start","","Start counter on event",4057,[[],["w",6]]],[11,"inc","","Increment counter on event",4057,[[],["w",6]]],[11,"count","","Count on active state of asynchronous event",4057,[[],["w",6]]],[11,"stamp","","Stamp capture",4057,[[],["w",6]]],[11,"fault","","Non-recoverable fault",4057,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4057,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["evact1_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",6,[[]]],[11,"is_dir","","Checks if the value of the field is `DIR`",6,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",6,[[]]],[11,"is_dec","","Checks if the value of the field is `DEC`",6,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",6,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",6,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",6,[[]]],[11,"variant","atsamd51g::tcc0::evctrl","Get enumerated values variant",4058,[[],["evact1_a",4]]],[11,"is_off","","Checks if the value of the field is `OFF`",4058,[[]]],[11,"is_retrigger","","Checks if the value of the field is `RETRIGGER`",4058,[[]]],[11,"is_dir","","Checks if the value of the field is `DIR`",4058,[[]]],[11,"is_stop","","Checks if the value of the field is `STOP`",4058,[[]]],[11,"is_dec","","Checks if the value of the field is `DEC`",4058,[[]]],[11,"is_ppw","","Checks if the value of the field is `PPW`",4058,[[]]],[11,"is_pwp","","Checks if the value of the field is `PWP`",4058,[[]]],[11,"is_fault","","Checks if the value of the field is `FAULT`",4058,[[]]],[11,"variant","","Writes `variant` to the field",4059,[[["evact1_a",4]],["w",6]]],[11,"off","","Event action disabled",4059,[[],["w",6]]],[11,"retrigger","","Re-trigger counter on event",4059,[[],["w",6]]],[11,"dir","","Direction control",4059,[[],["w",6]]],[11,"stop","","Stop counter on event",4059,[[],["w",6]]],[11,"dec","","Decrement counter on event",4059,[[],["w",6]]],[11,"ppw","","Period capture value in CC0 register, pulse width capture…",4059,[[],["w",6]]],[11,"pwp","","Period capture value in CC1 register, pulse width capture…",4059,[[],["w",6]]],[11,"fault","","Non-recoverable fault",4059,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4059,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["cntsel_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",6,[[]]],[11,"is_end","","Checks if the value of the field is `END`",6,[[]]],[11,"is_between","","Checks if the value of the field is `BETWEEN`",6,[[]]],[11,"is_boundary","","Checks if the value of the field is `BOUNDARY`",6,[[]]],[11,"variant","atsamd51g::tcc0::evctrl","Get enumerated values variant",4060,[[],["cntsel_a",4]]],[11,"is_start","","Checks if the value of the field is `START`",4060,[[]]],[11,"is_end","","Checks if the value of the field is `END`",4060,[[]]],[11,"is_between","","Checks if the value of the field is `BETWEEN`",4060,[[]]],[11,"is_boundary","","Checks if the value of the field is `BOUNDARY`",4060,[[]]],[11,"variant","","Writes `variant` to the field",4061,[[["cntsel_a",4]],["w",6]]],[11,"start","","An interrupt/event is generated when a new counter cycle…",4061,[[],["w",6]]],[11,"end","","An interrupt/event is generated when a counter cycle ends",4061,[[],["w",6]]],[11,"between","","An interrupt/event is generated when a counter cycle ends,…",4061,[[],["w",6]]],[11,"boundary","","An interrupt/event is generated when a new counter cycle…",4061,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4061,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4062,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4062,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4062,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4063,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4063,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4063,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4064,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4064,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4064,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4065,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4065,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4065,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4066,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4066,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4066,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4067,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4067,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4067,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4068,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4068,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4068,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4069,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4069,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4069,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4070,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4070,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4070,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4071,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4071,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4071,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4072,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4072,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4072,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4073,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4073,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4073,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4074,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4074,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4074,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4075,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4075,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4075,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4076,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4076,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4076,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4077,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4077,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4077,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4078,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4078,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4078,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4079,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4079,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4079,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4080,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4080,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4080,[[],["w",6]]],[11,"evact0","atsamd51g::generic","Bits 0:2 - Timer/counter Input Event0 Action",6,[[],["evact0_r",6]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",6,[[],["evact1_r",6]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",6,[[],["cntsel_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",6,[[],["ovfeo_r",6]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",6,[[],["trgeo_r",6]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",6,[[],["cnteo_r",6]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",6,[[],["tcinv0_r",6]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",6,[[],["tcinv1_r",6]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",6,[[],["tcei0_r",6]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",6,[[],["tcei1_r",6]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",6,[[],["mcei0_r",6]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",6,[[],["mcei1_r",6]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",6,[[],["mcei2_r",6]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",6,[[],["mcei3_r",6]]],[11,"mcei4","","Bit 20 - Match or Capture Channel 4 Event Input Enable",6,[[],["mcei4_r",6]]],[11,"mcei5","","Bit 21 - Match or Capture Channel 5 Event Input Enable",6,[[],["mcei5_r",6]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",6,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",6,[[],["mceo1_r",6]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",6,[[],["mceo2_r",6]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",6,[[],["mceo3_r",6]]],[11,"mceo4","","Bit 28 - Match or Capture Channel 4 Event Output Enable",6,[[],["mceo4_r",6]]],[11,"mceo5","","Bit 29 - Match or Capture Channel 5 Event Output Enable",6,[[],["mceo5_r",6]]],[11,"evact0","atsamd51g::tcc0::evctrl","Bits 0:2 - Timer/counter Input Event0 Action",4081,[[],["evact0_r",6]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",4081,[[],["evact1_r",6]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",4081,[[],["cntsel_r",6]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",4081,[[],["ovfeo_r",6]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",4081,[[],["trgeo_r",6]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",4081,[[],["cnteo_r",6]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",4081,[[],["tcinv0_r",6]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",4081,[[],["tcinv1_r",6]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",4081,[[],["tcei0_r",6]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",4081,[[],["tcei1_r",6]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",4081,[[],["mcei0_r",6]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",4081,[[],["mcei1_r",6]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",4081,[[],["mcei2_r",6]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",4081,[[],["mcei3_r",6]]],[11,"mcei4","","Bit 20 - Match or Capture Channel 4 Event Input Enable",4081,[[],["mcei4_r",6]]],[11,"mcei5","","Bit 21 - Match or Capture Channel 5 Event Input Enable",4081,[[],["mcei5_r",6]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",4081,[[],["mceo0_r",6]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",4081,[[],["mceo1_r",6]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",4081,[[],["mceo2_r",6]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",4081,[[],["mceo3_r",6]]],[11,"mceo4","","Bit 28 - Match or Capture Channel 4 Event Output Enable",4081,[[],["mceo4_r",6]]],[11,"mceo5","","Bit 29 - Match or Capture Channel 5 Event Output Enable",4081,[[],["mceo5_r",6]]],[11,"evact0","atsamd51g::generic","Bits 0:2 - Timer/counter Input Event0 Action",7,[[],["evact0_w",3]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",7,[[],["evact1_w",3]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",7,[[],["cntsel_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",7,[[],["ovfeo_w",3]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",7,[[],["trgeo_w",3]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",7,[[],["cnteo_w",3]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",7,[[],["tcinv0_w",3]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",7,[[],["tcinv1_w",3]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",7,[[],["tcei0_w",3]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",7,[[],["tcei1_w",3]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",7,[[],["mcei0_w",3]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",7,[[],["mcei1_w",3]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",7,[[],["mcei2_w",3]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",7,[[],["mcei3_w",3]]],[11,"mcei4","","Bit 20 - Match or Capture Channel 4 Event Input Enable",7,[[],["mcei4_w",3]]],[11,"mcei5","","Bit 21 - Match or Capture Channel 5 Event Input Enable",7,[[],["mcei5_w",3]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",7,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",7,[[],["mceo1_w",3]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",7,[[],["mceo2_w",3]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",7,[[],["mceo3_w",3]]],[11,"mceo4","","Bit 28 - Match or Capture Channel 4 Event Output Enable",7,[[],["mceo4_w",3]]],[11,"mceo5","","Bit 29 - Match or Capture Channel 5 Event Output Enable",7,[[],["mceo5_w",3]]],[11,"evact0","atsamd51g::tcc0::evctrl","Bits 0:2 - Timer/counter Input Event0 Action",4082,[[],["evact0_w",3]]],[11,"evact1","","Bits 3:5 - Timer/counter Input Event1 Action",4082,[[],["evact1_w",3]]],[11,"cntsel","","Bits 6:7 - Timer/counter Output Event Mode",4082,[[],["cntsel_w",3]]],[11,"ovfeo","","Bit 8 - Overflow/Underflow Output Event Enable",4082,[[],["ovfeo_w",3]]],[11,"trgeo","","Bit 9 - Retrigger Output Event Enable",4082,[[],["trgeo_w",3]]],[11,"cnteo","","Bit 10 - Timer/counter Output Event Enable",4082,[[],["cnteo_w",3]]],[11,"tcinv0","","Bit 12 - Inverted Event 0 Input Enable",4082,[[],["tcinv0_w",3]]],[11,"tcinv1","","Bit 13 - Inverted Event 1 Input Enable",4082,[[],["tcinv1_w",3]]],[11,"tcei0","","Bit 14 - Timer/counter Event 0 Input Enable",4082,[[],["tcei0_w",3]]],[11,"tcei1","","Bit 15 - Timer/counter Event 1 Input Enable",4082,[[],["tcei1_w",3]]],[11,"mcei0","","Bit 16 - Match or Capture Channel 0 Event Input Enable",4082,[[],["mcei0_w",3]]],[11,"mcei1","","Bit 17 - Match or Capture Channel 1 Event Input Enable",4082,[[],["mcei1_w",3]]],[11,"mcei2","","Bit 18 - Match or Capture Channel 2 Event Input Enable",4082,[[],["mcei2_w",3]]],[11,"mcei3","","Bit 19 - Match or Capture Channel 3 Event Input Enable",4082,[[],["mcei3_w",3]]],[11,"mcei4","","Bit 20 - Match or Capture Channel 4 Event Input Enable",4082,[[],["mcei4_w",3]]],[11,"mcei5","","Bit 21 - Match or Capture Channel 5 Event Input Enable",4082,[[],["mcei5_w",3]]],[11,"mceo0","","Bit 24 - Match or Capture Channel 0 Event Output Enable",4082,[[],["mceo0_w",3]]],[11,"mceo1","","Bit 25 - Match or Capture Channel 1 Event Output Enable",4082,[[],["mceo1_w",3]]],[11,"mceo2","","Bit 26 - Match or Capture Channel 2 Event Output Enable",4082,[[],["mceo2_w",3]]],[11,"mceo3","","Bit 27 - Match or Capture Channel 3 Event Output Enable",4082,[[],["mceo3_w",3]]],[11,"mceo4","","Bit 28 - Match or Capture Channel 4 Event Output Enable",4082,[[],["mceo4_w",3]]],[11,"mceo5","","Bit 29 - Match or Capture Channel 5 Event Output Enable",4082,[[],["mceo5_w",3]]],[0,"intenclr","atsamd51g::tcc0","Interrupt Enable Clear",null,null],[3,"OVF_W","atsamd51g::tcc0::intenclr","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"UFS_W","","Write proxy for field `UFS`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[3,"MC4_W","","Write proxy for field `MC4`",null,null],[3,"MC5_W","","Write proxy for field `MC5`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"UFS_R","","Reader of field `UFS`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[6,"MC4_R","","Reader of field `MC4`",null,null],[6,"MC5_R","","Reader of field `MC5`",null,null],[11,"set_bit","","Sets the field bit",4083,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4083,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4083,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4084,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4084,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4084,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4085,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4085,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4085,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4086,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4086,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4086,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4087,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4087,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4087,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4088,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4088,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4088,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4089,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4089,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4089,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4090,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4090,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4090,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4091,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4091,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4091,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4092,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4092,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4092,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4093,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4093,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4093,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4094,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4094,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4094,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4095,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4095,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4095,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4096,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4096,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4096,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4097,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4097,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4097,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4098,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4098,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4098,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",6,[[],["ufs_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",6,[[],["mc3_r",6]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",6,[[],["mc4_r",6]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",6,[[],["mc5_r",6]]],[11,"ovf","atsamd51g::tcc0::intenclr","Bit 0 - Overflow Interrupt Enable",4099,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",4099,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",4099,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",4099,[[],["err_r",6]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",4099,[[],["ufs_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",4099,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",4099,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",4099,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",4099,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",4099,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",4099,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",4099,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",4099,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",4099,[[],["mc3_r",6]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",4099,[[],["mc4_r",6]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",4099,[[],["mc5_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",7,[[],["ufs_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",7,[[],["mc3_w",3]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",7,[[],["mc4_w",3]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",7,[[],["mc5_w",3]]],[11,"ovf","atsamd51g::tcc0::intenclr","Bit 0 - Overflow Interrupt Enable",4100,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",4100,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",4100,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",4100,[[],["err_w",3]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",4100,[[],["ufs_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",4100,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",4100,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",4100,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",4100,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",4100,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",4100,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",4100,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",4100,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",4100,[[],["mc3_w",3]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",4100,[[],["mc4_w",3]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",4100,[[],["mc5_w",3]]],[0,"intenset","atsamd51g::tcc0","Interrupt Enable Set",null,null],[3,"OVF_W","atsamd51g::tcc0::intenset","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"UFS_W","","Write proxy for field `UFS`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[3,"MC4_W","","Write proxy for field `MC4`",null,null],[3,"MC5_W","","Write proxy for field `MC5`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"UFS_R","","Reader of field `UFS`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[6,"MC4_R","","Reader of field `MC4`",null,null],[6,"MC5_R","","Reader of field `MC5`",null,null],[11,"set_bit","","Sets the field bit",4101,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4101,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4101,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4102,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4102,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4102,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4103,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4103,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4103,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4104,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4104,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4104,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4105,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4105,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4105,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4106,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4106,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4106,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4107,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4107,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4107,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4108,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4108,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4108,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4109,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4109,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4109,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4110,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4110,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4110,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4111,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4111,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4111,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4112,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4112,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4112,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4113,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4113,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4113,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4114,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4114,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4114,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4115,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4115,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4115,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4116,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4116,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4116,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow Interrupt Enable",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",6,[[],["err_r",6]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",6,[[],["ufs_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",6,[[],["mc3_r",6]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",6,[[],["mc4_r",6]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",6,[[],["mc5_r",6]]],[11,"ovf","atsamd51g::tcc0::intenset","Bit 0 - Overflow Interrupt Enable",4117,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",4117,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",4117,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error Interrupt Enable",4117,[[],["err_r",6]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",4117,[[],["ufs_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",4117,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",4117,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",4117,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",4117,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",4117,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",4117,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",4117,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",4117,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",4117,[[],["mc3_r",6]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",4117,[[],["mc4_r",6]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",4117,[[],["mc5_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow Interrupt Enable",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",7,[[],["err_w",3]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",7,[[],["ufs_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",7,[[],["mc3_w",3]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",7,[[],["mc4_w",3]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",7,[[],["mc5_w",3]]],[11,"ovf","atsamd51g::tcc0::intenset","Bit 0 - Overflow Interrupt Enable",4118,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger Interrupt Enable",4118,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter Interrupt Enable",4118,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error Interrupt Enable",4118,[[],["err_w",3]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault Interrupt Enable",4118,[[],["ufs_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault Interrupt Enable",4118,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A Interrupt Enable",4118,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B Interrupt Enable",4118,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 Interrupt Enable",4118,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 Interrupt Enable",4118,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture Channel 0 Interrupt Enable",4118,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture Channel 1 Interrupt Enable",4118,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture Channel 2 Interrupt Enable",4118,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture Channel 3 Interrupt Enable",4118,[[],["mc3_w",3]]],[11,"mc4","","Bit 20 - Match or Capture Channel 4 Interrupt Enable",4118,[[],["mc4_w",3]]],[11,"mc5","","Bit 21 - Match or Capture Channel 5 Interrupt Enable",4118,[[],["mc5_w",3]]],[0,"intflag","atsamd51g::tcc0","Interrupt Flag Status and Clear",null,null],[3,"OVF_W","atsamd51g::tcc0::intflag","Write proxy for field `OVF`",null,null],[3,"TRG_W","","Write proxy for field `TRG`",null,null],[3,"CNT_W","","Write proxy for field `CNT`",null,null],[3,"ERR_W","","Write proxy for field `ERR`",null,null],[3,"UFS_W","","Write proxy for field `UFS`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"MC0_W","","Write proxy for field `MC0`",null,null],[3,"MC1_W","","Write proxy for field `MC1`",null,null],[3,"MC2_W","","Write proxy for field `MC2`",null,null],[3,"MC3_W","","Write proxy for field `MC3`",null,null],[3,"MC4_W","","Write proxy for field `MC4`",null,null],[3,"MC5_W","","Write proxy for field `MC5`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"OVF_R","","Reader of field `OVF`",null,null],[6,"TRG_R","","Reader of field `TRG`",null,null],[6,"CNT_R","","Reader of field `CNT`",null,null],[6,"ERR_R","","Reader of field `ERR`",null,null],[6,"UFS_R","","Reader of field `UFS`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"MC0_R","","Reader of field `MC0`",null,null],[6,"MC1_R","","Reader of field `MC1`",null,null],[6,"MC2_R","","Reader of field `MC2`",null,null],[6,"MC3_R","","Reader of field `MC3`",null,null],[6,"MC4_R","","Reader of field `MC4`",null,null],[6,"MC5_R","","Reader of field `MC5`",null,null],[11,"set_bit","","Sets the field bit",4119,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4119,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4119,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4120,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4120,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4120,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4121,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4121,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4121,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4122,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4122,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4122,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4123,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4123,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4123,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4124,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4124,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4124,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4125,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4125,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4125,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4126,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4126,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4126,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4127,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4127,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4127,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4128,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4128,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4128,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4129,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4129,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4129,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4130,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4130,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4130,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4131,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4131,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4131,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4132,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4132,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4132,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4133,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4133,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4133,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4134,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4134,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4134,[[],["w",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow",6,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger",6,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter",6,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error",6,[[],["err_r",6]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault",6,[[],["ufs_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",6,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",6,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture 0",6,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture 1",6,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture 2",6,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture 3",6,[[],["mc3_r",6]]],[11,"mc4","","Bit 20 - Match or Capture 4",6,[[],["mc4_r",6]]],[11,"mc5","","Bit 21 - Match or Capture 5",6,[[],["mc5_r",6]]],[11,"ovf","atsamd51g::tcc0::intflag","Bit 0 - Overflow",4135,[[],["ovf_r",6]]],[11,"trg","","Bit 1 - Retrigger",4135,[[],["trg_r",6]]],[11,"cnt","","Bit 2 - Counter",4135,[[],["cnt_r",6]]],[11,"err","","Bit 3 - Error",4135,[[],["err_r",6]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault",4135,[[],["ufs_r",6]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",4135,[[],["dfs_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A",4135,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B",4135,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",4135,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",4135,[[],["fault1_r",6]]],[11,"mc0","","Bit 16 - Match or Capture 0",4135,[[],["mc0_r",6]]],[11,"mc1","","Bit 17 - Match or Capture 1",4135,[[],["mc1_r",6]]],[11,"mc2","","Bit 18 - Match or Capture 2",4135,[[],["mc2_r",6]]],[11,"mc3","","Bit 19 - Match or Capture 3",4135,[[],["mc3_r",6]]],[11,"mc4","","Bit 20 - Match or Capture 4",4135,[[],["mc4_r",6]]],[11,"mc5","","Bit 21 - Match or Capture 5",4135,[[],["mc5_r",6]]],[11,"ovf","atsamd51g::generic","Bit 0 - Overflow",7,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger",7,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter",7,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error",7,[[],["err_w",3]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault",7,[[],["ufs_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",7,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",7,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture 0",7,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture 1",7,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture 2",7,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture 3",7,[[],["mc3_w",3]]],[11,"mc4","","Bit 20 - Match or Capture 4",7,[[],["mc4_w",3]]],[11,"mc5","","Bit 21 - Match or Capture 5",7,[[],["mc5_w",3]]],[11,"ovf","atsamd51g::tcc0::intflag","Bit 0 - Overflow",4136,[[],["ovf_w",3]]],[11,"trg","","Bit 1 - Retrigger",4136,[[],["trg_w",3]]],[11,"cnt","","Bit 2 - Counter",4136,[[],["cnt_w",3]]],[11,"err","","Bit 3 - Error",4136,[[],["err_w",3]]],[11,"ufs","","Bit 10 - Non-Recoverable Update Fault",4136,[[],["ufs_w",3]]],[11,"dfs","","Bit 11 - Non-Recoverable Debug Fault",4136,[[],["dfs_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A",4136,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B",4136,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0",4136,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1",4136,[[],["fault1_w",3]]],[11,"mc0","","Bit 16 - Match or Capture 0",4136,[[],["mc0_w",3]]],[11,"mc1","","Bit 17 - Match or Capture 1",4136,[[],["mc1_w",3]]],[11,"mc2","","Bit 18 - Match or Capture 2",4136,[[],["mc2_w",3]]],[11,"mc3","","Bit 19 - Match or Capture 3",4136,[[],["mc3_w",3]]],[11,"mc4","","Bit 20 - Match or Capture 4",4136,[[],["mc4_w",3]]],[11,"mc5","","Bit 21 - Match or Capture 5",4136,[[],["mc5_w",3]]],[0,"status","atsamd51g::tcc0","Status",null,null],[3,"STOP_W","atsamd51g::tcc0::status","Write proxy for field `STOP`",null,null],[3,"IDX_W","","Write proxy for field `IDX`",null,null],[3,"UFS_W","","Write proxy for field `UFS`",null,null],[3,"DFS_W","","Write proxy for field `DFS`",null,null],[3,"SLAVE_W","","Write proxy for field `SLAVE`",null,null],[3,"PATTBUFV_W","","Write proxy for field `PATTBUFV`",null,null],[3,"PERBUFV_W","","Write proxy for field `PERBUFV`",null,null],[3,"FAULTAIN_W","","Write proxy for field `FAULTAIN`",null,null],[3,"FAULTBIN_W","","Write proxy for field `FAULTBIN`",null,null],[3,"FAULT0IN_W","","Write proxy for field `FAULT0IN`",null,null],[3,"FAULT1IN_W","","Write proxy for field `FAULT1IN`",null,null],[3,"FAULTA_W","","Write proxy for field `FAULTA`",null,null],[3,"FAULTB_W","","Write proxy for field `FAULTB`",null,null],[3,"FAULT0_W","","Write proxy for field `FAULT0`",null,null],[3,"FAULT1_W","","Write proxy for field `FAULT1`",null,null],[3,"CCBUFV0_W","","Write proxy for field `CCBUFV0`",null,null],[3,"CCBUFV1_W","","Write proxy for field `CCBUFV1`",null,null],[3,"CCBUFV2_W","","Write proxy for field `CCBUFV2`",null,null],[3,"CCBUFV3_W","","Write proxy for field `CCBUFV3`",null,null],[3,"CCBUFV4_W","","Write proxy for field `CCBUFV4`",null,null],[3,"CCBUFV5_W","","Write proxy for field `CCBUFV5`",null,null],[3,"CMP0_W","","Write proxy for field `CMP0`",null,null],[3,"CMP1_W","","Write proxy for field `CMP1`",null,null],[3,"CMP2_W","","Write proxy for field `CMP2`",null,null],[3,"CMP3_W","","Write proxy for field `CMP3`",null,null],[3,"CMP4_W","","Write proxy for field `CMP4`",null,null],[3,"CMP5_W","","Write proxy for field `CMP5`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"STOP_R","","Reader of field `STOP`",null,null],[6,"IDX_R","","Reader of field `IDX`",null,null],[6,"UFS_R","","Reader of field `UFS`",null,null],[6,"DFS_R","","Reader of field `DFS`",null,null],[6,"SLAVE_R","","Reader of field `SLAVE`",null,null],[6,"PATTBUFV_R","","Reader of field `PATTBUFV`",null,null],[6,"PERBUFV_R","","Reader of field `PERBUFV`",null,null],[6,"FAULTAIN_R","","Reader of field `FAULTAIN`",null,null],[6,"FAULTBIN_R","","Reader of field `FAULTBIN`",null,null],[6,"FAULT0IN_R","","Reader of field `FAULT0IN`",null,null],[6,"FAULT1IN_R","","Reader of field `FAULT1IN`",null,null],[6,"FAULTA_R","","Reader of field `FAULTA`",null,null],[6,"FAULTB_R","","Reader of field `FAULTB`",null,null],[6,"FAULT0_R","","Reader of field `FAULT0`",null,null],[6,"FAULT1_R","","Reader of field `FAULT1`",null,null],[6,"CCBUFV0_R","","Reader of field `CCBUFV0`",null,null],[6,"CCBUFV1_R","","Reader of field `CCBUFV1`",null,null],[6,"CCBUFV2_R","","Reader of field `CCBUFV2`",null,null],[6,"CCBUFV3_R","","Reader of field `CCBUFV3`",null,null],[6,"CCBUFV4_R","","Reader of field `CCBUFV4`",null,null],[6,"CCBUFV5_R","","Reader of field `CCBUFV5`",null,null],[6,"CMP0_R","","Reader of field `CMP0`",null,null],[6,"CMP1_R","","Reader of field `CMP1`",null,null],[6,"CMP2_R","","Reader of field `CMP2`",null,null],[6,"CMP3_R","","Reader of field `CMP3`",null,null],[6,"CMP4_R","","Reader of field `CMP4`",null,null],[6,"CMP5_R","","Reader of field `CMP5`",null,null],[11,"set_bit","","Sets the field bit",4137,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4137,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4137,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4138,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4138,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4138,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4139,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4139,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4139,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4140,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4140,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4140,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4141,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4141,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4141,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4142,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4142,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4142,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4143,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4143,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4143,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4144,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4144,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4144,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4145,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4145,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4145,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4146,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4146,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4146,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4147,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4147,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4147,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4148,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4148,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4148,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4149,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4149,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4149,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4150,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4150,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4150,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4151,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4151,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4151,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4152,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4152,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4152,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4153,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4153,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4153,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4154,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4154,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4154,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4155,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4155,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4155,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4156,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4156,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4156,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4157,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4157,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4157,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4158,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4158,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4158,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4159,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4159,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4159,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4160,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4160,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4160,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4161,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4161,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4161,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4162,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4162,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4162,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4163,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4163,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4163,[[],["w",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop",6,[[],["stop_r",6]]],[11,"idx","","Bit 1 - Ramp",6,[[],["idx_r",6]]],[11,"ufs","","Bit 2 - Non-recoverable Update Fault State",6,[[],["ufs_r",6]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",6,[[],["dfs_r",6]]],[11,"slave","","Bit 4 - Slave",6,[[],["slave_r",6]]],[11,"pattbufv","","Bit 5 - Pattern Buffer Valid",6,[[],["pattbufv_r",6]]],[11,"perbufv","","Bit 7 - Period Buffer Valid",6,[[],["perbufv_r",6]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",6,[[],["faultain_r",6]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",6,[[],["faultbin_r",6]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",6,[[],["fault0in_r",6]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",6,[[],["fault1in_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",6,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",6,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",6,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",6,[[],["fault1_r",6]]],[11,"ccbufv0","","Bit 16 - Compare Channel 0 Buffer Valid",6,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 17 - Compare Channel 1 Buffer Valid",6,[[],["ccbufv1_r",6]]],[11,"ccbufv2","","Bit 18 - Compare Channel 2 Buffer Valid",6,[[],["ccbufv2_r",6]]],[11,"ccbufv3","","Bit 19 - Compare Channel 3 Buffer Valid",6,[[],["ccbufv3_r",6]]],[11,"ccbufv4","","Bit 20 - Compare Channel 4 Buffer Valid",6,[[],["ccbufv4_r",6]]],[11,"ccbufv5","","Bit 21 - Compare Channel 5 Buffer Valid",6,[[],["ccbufv5_r",6]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",6,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",6,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",6,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",6,[[],["cmp3_r",6]]],[11,"cmp4","","Bit 28 - Compare Channel 4 Value",6,[[],["cmp4_r",6]]],[11,"cmp5","","Bit 29 - Compare Channel 5 Value",6,[[],["cmp5_r",6]]],[11,"stop","atsamd51g::tcc0::status","Bit 0 - Stop",4164,[[],["stop_r",6]]],[11,"idx","","Bit 1 - Ramp",4164,[[],["idx_r",6]]],[11,"ufs","","Bit 2 - Non-recoverable Update Fault State",4164,[[],["ufs_r",6]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",4164,[[],["dfs_r",6]]],[11,"slave","","Bit 4 - Slave",4164,[[],["slave_r",6]]],[11,"pattbufv","","Bit 5 - Pattern Buffer Valid",4164,[[],["pattbufv_r",6]]],[11,"perbufv","","Bit 7 - Period Buffer Valid",4164,[[],["perbufv_r",6]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",4164,[[],["faultain_r",6]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",4164,[[],["faultbin_r",6]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",4164,[[],["fault0in_r",6]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",4164,[[],["fault1in_r",6]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",4164,[[],["faulta_r",6]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",4164,[[],["faultb_r",6]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",4164,[[],["fault0_r",6]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",4164,[[],["fault1_r",6]]],[11,"ccbufv0","","Bit 16 - Compare Channel 0 Buffer Valid",4164,[[],["ccbufv0_r",6]]],[11,"ccbufv1","","Bit 17 - Compare Channel 1 Buffer Valid",4164,[[],["ccbufv1_r",6]]],[11,"ccbufv2","","Bit 18 - Compare Channel 2 Buffer Valid",4164,[[],["ccbufv2_r",6]]],[11,"ccbufv3","","Bit 19 - Compare Channel 3 Buffer Valid",4164,[[],["ccbufv3_r",6]]],[11,"ccbufv4","","Bit 20 - Compare Channel 4 Buffer Valid",4164,[[],["ccbufv4_r",6]]],[11,"ccbufv5","","Bit 21 - Compare Channel 5 Buffer Valid",4164,[[],["ccbufv5_r",6]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",4164,[[],["cmp0_r",6]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",4164,[[],["cmp1_r",6]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",4164,[[],["cmp2_r",6]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",4164,[[],["cmp3_r",6]]],[11,"cmp4","","Bit 28 - Compare Channel 4 Value",4164,[[],["cmp4_r",6]]],[11,"cmp5","","Bit 29 - Compare Channel 5 Value",4164,[[],["cmp5_r",6]]],[11,"stop","atsamd51g::generic","Bit 0 - Stop",7,[[],["stop_w",3]]],[11,"idx","","Bit 1 - Ramp",7,[[],["idx_w",3]]],[11,"ufs","","Bit 2 - Non-recoverable Update Fault State",7,[[],["ufs_w",3]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",7,[[],["dfs_w",3]]],[11,"slave","","Bit 4 - Slave",7,[[],["slave_w",3]]],[11,"pattbufv","","Bit 5 - Pattern Buffer Valid",7,[[],["pattbufv_w",3]]],[11,"perbufv","","Bit 7 - Period Buffer Valid",7,[[],["perbufv_w",3]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",7,[[],["faultain_w",3]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",7,[[],["faultbin_w",3]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",7,[[],["fault0in_w",3]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",7,[[],["fault1in_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",7,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",7,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",7,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",7,[[],["fault1_w",3]]],[11,"ccbufv0","","Bit 16 - Compare Channel 0 Buffer Valid",7,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 17 - Compare Channel 1 Buffer Valid",7,[[],["ccbufv1_w",3]]],[11,"ccbufv2","","Bit 18 - Compare Channel 2 Buffer Valid",7,[[],["ccbufv2_w",3]]],[11,"ccbufv3","","Bit 19 - Compare Channel 3 Buffer Valid",7,[[],["ccbufv3_w",3]]],[11,"ccbufv4","","Bit 20 - Compare Channel 4 Buffer Valid",7,[[],["ccbufv4_w",3]]],[11,"ccbufv5","","Bit 21 - Compare Channel 5 Buffer Valid",7,[[],["ccbufv5_w",3]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",7,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",7,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",7,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",7,[[],["cmp3_w",3]]],[11,"cmp4","","Bit 28 - Compare Channel 4 Value",7,[[],["cmp4_w",3]]],[11,"cmp5","","Bit 29 - Compare Channel 5 Value",7,[[],["cmp5_w",3]]],[11,"stop","atsamd51g::tcc0::status","Bit 0 - Stop",4165,[[],["stop_w",3]]],[11,"idx","","Bit 1 - Ramp",4165,[[],["idx_w",3]]],[11,"ufs","","Bit 2 - Non-recoverable Update Fault State",4165,[[],["ufs_w",3]]],[11,"dfs","","Bit 3 - Non-Recoverable Debug Fault State",4165,[[],["dfs_w",3]]],[11,"slave","","Bit 4 - Slave",4165,[[],["slave_w",3]]],[11,"pattbufv","","Bit 5 - Pattern Buffer Valid",4165,[[],["pattbufv_w",3]]],[11,"perbufv","","Bit 7 - Period Buffer Valid",4165,[[],["perbufv_w",3]]],[11,"faultain","","Bit 8 - Recoverable Fault A Input",4165,[[],["faultain_w",3]]],[11,"faultbin","","Bit 9 - Recoverable Fault B Input",4165,[[],["faultbin_w",3]]],[11,"fault0in","","Bit 10 - Non-Recoverable Fault0 Input",4165,[[],["fault0in_w",3]]],[11,"fault1in","","Bit 11 - Non-Recoverable Fault1 Input",4165,[[],["fault1in_w",3]]],[11,"faulta","","Bit 12 - Recoverable Fault A State",4165,[[],["faulta_w",3]]],[11,"faultb","","Bit 13 - Recoverable Fault B State",4165,[[],["faultb_w",3]]],[11,"fault0","","Bit 14 - Non-Recoverable Fault 0 State",4165,[[],["fault0_w",3]]],[11,"fault1","","Bit 15 - Non-Recoverable Fault 1 State",4165,[[],["fault1_w",3]]],[11,"ccbufv0","","Bit 16 - Compare Channel 0 Buffer Valid",4165,[[],["ccbufv0_w",3]]],[11,"ccbufv1","","Bit 17 - Compare Channel 1 Buffer Valid",4165,[[],["ccbufv1_w",3]]],[11,"ccbufv2","","Bit 18 - Compare Channel 2 Buffer Valid",4165,[[],["ccbufv2_w",3]]],[11,"ccbufv3","","Bit 19 - Compare Channel 3 Buffer Valid",4165,[[],["ccbufv3_w",3]]],[11,"ccbufv4","","Bit 20 - Compare Channel 4 Buffer Valid",4165,[[],["ccbufv4_w",3]]],[11,"ccbufv5","","Bit 21 - Compare Channel 5 Buffer Valid",4165,[[],["ccbufv5_w",3]]],[11,"cmp0","","Bit 24 - Compare Channel 0 Value",4165,[[],["cmp0_w",3]]],[11,"cmp1","","Bit 25 - Compare Channel 1 Value",4165,[[],["cmp1_w",3]]],[11,"cmp2","","Bit 26 - Compare Channel 2 Value",4165,[[],["cmp2_w",3]]],[11,"cmp3","","Bit 27 - Compare Channel 3 Value",4165,[[],["cmp3_w",3]]],[11,"cmp4","","Bit 28 - Compare Channel 4 Value",4165,[[],["cmp4_w",3]]],[11,"cmp5","","Bit 29 - Compare Channel 5 Value",4165,[[],["cmp5_w",3]]],[0,"count","atsamd51g::tcc0","Count",null,null],[3,"COUNT_W","atsamd51g::tcc0::count","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT",null,null],[6,"W","","Writer for register COUNT",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",4166,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 0:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tcc0::count","Bits 0:23 - Counter Value",4167,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 0:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tcc0::count","Bits 0:23 - Counter Value",4168,[[],["count_w",3]]],[0,"count_dith4_mode","atsamd51g::tcc0","Count",null,null],[3,"COUNT_W","atsamd51g::tcc0::count_dith4_mode","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH4_MODE",null,null],[6,"W","","Writer for register COUNT_DITH4_MODE",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",4169,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 4:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tcc0::count_dith4_mode","Bits 4:23 - Counter Value",4170,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 4:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tcc0::count_dith4_mode","Bits 4:23 - Counter Value",4171,[[],["count_w",3]]],[0,"count_dith5_mode","atsamd51g::tcc0","Count",null,null],[3,"COUNT_W","atsamd51g::tcc0::count_dith5_mode","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH5_MODE",null,null],[6,"W","","Writer for register COUNT_DITH5_MODE",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",4172,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 5:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tcc0::count_dith5_mode","Bits 5:23 - Counter Value",4173,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 5:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tcc0::count_dith5_mode","Bits 5:23 - Counter Value",4174,[[],["count_w",3]]],[0,"count_dith6_mode","atsamd51g::tcc0","Count",null,null],[3,"COUNT_W","atsamd51g::tcc0::count_dith6_mode","Write proxy for field `COUNT`",null,null],[6,"R","","Reader of register COUNT_DITH6_MODE",null,null],[6,"W","","Writer for register COUNT_DITH6_MODE",null,null],[6,"COUNT_R","","Reader of field `COUNT`",null,null],[11,"bits","","Writes raw bits to the field",4175,[[],["w",6]]],[11,"count","atsamd51g::generic","Bits 6:23 - Counter Value",6,[[],["count_r",6]]],[11,"count","atsamd51g::tcc0::count_dith6_mode","Bits 6:23 - Counter Value",4176,[[],["count_r",6]]],[11,"count","atsamd51g::generic","Bits 6:23 - Counter Value",7,[[],["count_w",3]]],[11,"count","atsamd51g::tcc0::count_dith6_mode","Bits 6:23 - Counter Value",4177,[[],["count_w",3]]],[0,"patt","atsamd51g::tcc0","Pattern",null,null],[3,"PGE0_W","atsamd51g::tcc0::patt","Write proxy for field `PGE0`",null,null],[3,"PGE1_W","","Write proxy for field `PGE1`",null,null],[3,"PGE2_W","","Write proxy for field `PGE2`",null,null],[3,"PGE3_W","","Write proxy for field `PGE3`",null,null],[3,"PGE4_W","","Write proxy for field `PGE4`",null,null],[3,"PGE5_W","","Write proxy for field `PGE5`",null,null],[3,"PGE6_W","","Write proxy for field `PGE6`",null,null],[3,"PGE7_W","","Write proxy for field `PGE7`",null,null],[3,"PGV0_W","","Write proxy for field `PGV0`",null,null],[3,"PGV1_W","","Write proxy for field `PGV1`",null,null],[3,"PGV2_W","","Write proxy for field `PGV2`",null,null],[3,"PGV3_W","","Write proxy for field `PGV3`",null,null],[3,"PGV4_W","","Write proxy for field `PGV4`",null,null],[3,"PGV5_W","","Write proxy for field `PGV5`",null,null],[3,"PGV6_W","","Write proxy for field `PGV6`",null,null],[3,"PGV7_W","","Write proxy for field `PGV7`",null,null],[6,"R","","Reader of register PATT",null,null],[6,"W","","Writer for register PATT",null,null],[6,"PGE0_R","","Reader of field `PGE0`",null,null],[6,"PGE1_R","","Reader of field `PGE1`",null,null],[6,"PGE2_R","","Reader of field `PGE2`",null,null],[6,"PGE3_R","","Reader of field `PGE3`",null,null],[6,"PGE4_R","","Reader of field `PGE4`",null,null],[6,"PGE5_R","","Reader of field `PGE5`",null,null],[6,"PGE6_R","","Reader of field `PGE6`",null,null],[6,"PGE7_R","","Reader of field `PGE7`",null,null],[6,"PGV0_R","","Reader of field `PGV0`",null,null],[6,"PGV1_R","","Reader of field `PGV1`",null,null],[6,"PGV2_R","","Reader of field `PGV2`",null,null],[6,"PGV3_R","","Reader of field `PGV3`",null,null],[6,"PGV4_R","","Reader of field `PGV4`",null,null],[6,"PGV5_R","","Reader of field `PGV5`",null,null],[6,"PGV6_R","","Reader of field `PGV6`",null,null],[6,"PGV7_R","","Reader of field `PGV7`",null,null],[11,"set_bit","","Sets the field bit",4178,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4178,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4178,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4179,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4179,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4179,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4180,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4180,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4180,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4181,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4181,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4181,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4182,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4182,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4182,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4183,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4183,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4183,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4184,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4184,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4184,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4185,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4185,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4185,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4186,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4186,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4186,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4187,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4187,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4187,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4188,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4188,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4188,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4189,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4189,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4189,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4190,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4190,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4190,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4191,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4191,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4191,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4192,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4192,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4192,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4193,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4193,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4193,[[],["w",6]]],[11,"pge0","atsamd51g::generic","Bit 0 - Pattern Generator 0 Output Enable",6,[[],["pge0_r",6]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",6,[[],["pge1_r",6]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",6,[[],["pge2_r",6]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",6,[[],["pge3_r",6]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",6,[[],["pge4_r",6]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",6,[[],["pge5_r",6]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",6,[[],["pge6_r",6]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",6,[[],["pge7_r",6]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",6,[[],["pgv0_r",6]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",6,[[],["pgv1_r",6]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",6,[[],["pgv2_r",6]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",6,[[],["pgv3_r",6]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",6,[[],["pgv4_r",6]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",6,[[],["pgv5_r",6]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",6,[[],["pgv6_r",6]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",6,[[],["pgv7_r",6]]],[11,"pge0","atsamd51g::tcc0::patt","Bit 0 - Pattern Generator 0 Output Enable",4194,[[],["pge0_r",6]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",4194,[[],["pge1_r",6]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",4194,[[],["pge2_r",6]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",4194,[[],["pge3_r",6]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",4194,[[],["pge4_r",6]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",4194,[[],["pge5_r",6]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",4194,[[],["pge6_r",6]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",4194,[[],["pge7_r",6]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",4194,[[],["pgv0_r",6]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",4194,[[],["pgv1_r",6]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",4194,[[],["pgv2_r",6]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",4194,[[],["pgv3_r",6]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",4194,[[],["pgv4_r",6]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",4194,[[],["pgv5_r",6]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",4194,[[],["pgv6_r",6]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",4194,[[],["pgv7_r",6]]],[11,"pge0","atsamd51g::generic","Bit 0 - Pattern Generator 0 Output Enable",7,[[],["pge0_w",3]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",7,[[],["pge1_w",3]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",7,[[],["pge2_w",3]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",7,[[],["pge3_w",3]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",7,[[],["pge4_w",3]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",7,[[],["pge5_w",3]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",7,[[],["pge6_w",3]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",7,[[],["pge7_w",3]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",7,[[],["pgv0_w",3]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",7,[[],["pgv1_w",3]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",7,[[],["pgv2_w",3]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",7,[[],["pgv3_w",3]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",7,[[],["pgv4_w",3]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",7,[[],["pgv5_w",3]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",7,[[],["pgv6_w",3]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",7,[[],["pgv7_w",3]]],[11,"pge0","atsamd51g::tcc0::patt","Bit 0 - Pattern Generator 0 Output Enable",4195,[[],["pge0_w",3]]],[11,"pge1","","Bit 1 - Pattern Generator 1 Output Enable",4195,[[],["pge1_w",3]]],[11,"pge2","","Bit 2 - Pattern Generator 2 Output Enable",4195,[[],["pge2_w",3]]],[11,"pge3","","Bit 3 - Pattern Generator 3 Output Enable",4195,[[],["pge3_w",3]]],[11,"pge4","","Bit 4 - Pattern Generator 4 Output Enable",4195,[[],["pge4_w",3]]],[11,"pge5","","Bit 5 - Pattern Generator 5 Output Enable",4195,[[],["pge5_w",3]]],[11,"pge6","","Bit 6 - Pattern Generator 6 Output Enable",4195,[[],["pge6_w",3]]],[11,"pge7","","Bit 7 - Pattern Generator 7 Output Enable",4195,[[],["pge7_w",3]]],[11,"pgv0","","Bit 8 - Pattern Generator 0 Output Value",4195,[[],["pgv0_w",3]]],[11,"pgv1","","Bit 9 - Pattern Generator 1 Output Value",4195,[[],["pgv1_w",3]]],[11,"pgv2","","Bit 10 - Pattern Generator 2 Output Value",4195,[[],["pgv2_w",3]]],[11,"pgv3","","Bit 11 - Pattern Generator 3 Output Value",4195,[[],["pgv3_w",3]]],[11,"pgv4","","Bit 12 - Pattern Generator 4 Output Value",4195,[[],["pgv4_w",3]]],[11,"pgv5","","Bit 13 - Pattern Generator 5 Output Value",4195,[[],["pgv5_w",3]]],[11,"pgv6","","Bit 14 - Pattern Generator 6 Output Value",4195,[[],["pgv6_w",3]]],[11,"pgv7","","Bit 15 - Pattern Generator 7 Output Value",4195,[[],["pgv7_w",3]]],[0,"wave","atsamd51g::tcc0","Waveform Control",null,null],[3,"WAVEGEN_W","atsamd51g::tcc0::wave","Write proxy for field `WAVEGEN`",null,null],[3,"RAMP_W","","Write proxy for field `RAMP`",null,null],[3,"CIPEREN_W","","Write proxy for field `CIPEREN`",null,null],[3,"CICCEN0_W","","Write proxy for field `CICCEN0`",null,null],[3,"CICCEN1_W","","Write proxy for field `CICCEN1`",null,null],[3,"CICCEN2_W","","Write proxy for field `CICCEN2`",null,null],[3,"CICCEN3_W","","Write proxy for field `CICCEN3`",null,null],[3,"POL0_W","","Write proxy for field `POL0`",null,null],[3,"POL1_W","","Write proxy for field `POL1`",null,null],[3,"POL2_W","","Write proxy for field `POL2`",null,null],[3,"POL3_W","","Write proxy for field `POL3`",null,null],[3,"POL4_W","","Write proxy for field `POL4`",null,null],[3,"POL5_W","","Write proxy for field `POL5`",null,null],[3,"SWAP0_W","","Write proxy for field `SWAP0`",null,null],[3,"SWAP1_W","","Write proxy for field `SWAP1`",null,null],[3,"SWAP2_W","","Write proxy for field `SWAP2`",null,null],[3,"SWAP3_W","","Write proxy for field `SWAP3`",null,null],[4,"WAVEGEN_A","","Waveform Generation",null,null],[13,"NFRQ","","0: Normal frequency",4196,null],[13,"MFRQ","","1: Match frequency",4196,null],[13,"NPWM","","2: Normal PWM",4196,null],[13,"DSCRITICAL","","4: Dual-slope critical",4196,null],[13,"DSBOTTOM","","5: Dual-slope with interrupt/event condition when COUNT…",4196,null],[13,"DSBOTH","","6: Dual-slope with interrupt/event condition when COUNT…",4196,null],[13,"DSTOP","","7: Dual-slope with interrupt/event condition when COUNT…",4196,null],[4,"RAMP_A","","Ramp Mode",null,null],[13,"RAMP1","","0: RAMP1 operation",4197,null],[13,"RAMP2A","","1: Alternative RAMP2 operation",4197,null],[13,"RAMP2","","2: RAMP2 operation",4197,null],[13,"RAMP2C","","3: Critical RAMP2 operation",4197,null],[6,"R","","Reader of register WAVE",null,null],[6,"W","","Writer for register WAVE",null,null],[6,"WAVEGEN_R","","Reader of field `WAVEGEN`",null,null],[6,"RAMP_R","","Reader of field `RAMP`",null,null],[6,"CIPEREN_R","","Reader of field `CIPEREN`",null,null],[6,"CICCEN0_R","","Reader of field `CICCEN0`",null,null],[6,"CICCEN1_R","","Reader of field `CICCEN1`",null,null],[6,"CICCEN2_R","","Reader of field `CICCEN2`",null,null],[6,"CICCEN3_R","","Reader of field `CICCEN3`",null,null],[6,"POL0_R","","Reader of field `POL0`",null,null],[6,"POL1_R","","Reader of field `POL1`",null,null],[6,"POL2_R","","Reader of field `POL2`",null,null],[6,"POL3_R","","Reader of field `POL3`",null,null],[6,"POL4_R","","Reader of field `POL4`",null,null],[6,"POL5_R","","Reader of field `POL5`",null,null],[6,"SWAP0_R","","Reader of field `SWAP0`",null,null],[6,"SWAP1_R","","Reader of field `SWAP1`",null,null],[6,"SWAP2_R","","Reader of field `SWAP2`",null,null],[6,"SWAP3_R","","Reader of field `SWAP3`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["wavegen_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",6,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",6,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",6,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",6,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",6,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",6,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",6,[[]]],[11,"variant","atsamd51g::tcc0::wave","Get enumerated values variant",4198,[[],[["variant",4],["wavegen_a",4]]]],[11,"is_nfrq","","Checks if the value of the field is `NFRQ`",4198,[[]]],[11,"is_mfrq","","Checks if the value of the field is `MFRQ`",4198,[[]]],[11,"is_npwm","","Checks if the value of the field is `NPWM`",4198,[[]]],[11,"is_dscritical","","Checks if the value of the field is `DSCRITICAL`",4198,[[]]],[11,"is_dsbottom","","Checks if the value of the field is `DSBOTTOM`",4198,[[]]],[11,"is_dsboth","","Checks if the value of the field is `DSBOTH`",4198,[[]]],[11,"is_dstop","","Checks if the value of the field is `DSTOP`",4198,[[]]],[11,"variant","","Writes `variant` to the field",4199,[[["wavegen_a",4]],["w",6]]],[11,"nfrq","","Normal frequency",4199,[[],["w",6]]],[11,"mfrq","","Match frequency",4199,[[],["w",6]]],[11,"npwm","","Normal PWM",4199,[[],["w",6]]],[11,"dscritical","","Dual-slope critical",4199,[[],["w",6]]],[11,"dsbottom","","Dual-slope with interrupt/event condition when COUNT…",4199,[[],["w",6]]],[11,"dsboth","","Dual-slope with interrupt/event condition when COUNT…",4199,[[],["w",6]]],[11,"dstop","","Dual-slope with interrupt/event condition when COUNT…",4199,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4199,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["ramp_a",4]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",6,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",6,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",6,[[]]],[11,"is_ramp2c","","Checks if the value of the field is `RAMP2C`",6,[[]]],[11,"variant","atsamd51g::tcc0::wave","Get enumerated values variant",4200,[[],["ramp_a",4]]],[11,"is_ramp1","","Checks if the value of the field is `RAMP1`",4200,[[]]],[11,"is_ramp2a","","Checks if the value of the field is `RAMP2A`",4200,[[]]],[11,"is_ramp2","","Checks if the value of the field is `RAMP2`",4200,[[]]],[11,"is_ramp2c","","Checks if the value of the field is `RAMP2C`",4200,[[]]],[11,"variant","","Writes `variant` to the field",4201,[[["ramp_a",4]],["w",6]]],[11,"ramp1","","RAMP1 operation",4201,[[],["w",6]]],[11,"ramp2a","","Alternative RAMP2 operation",4201,[[],["w",6]]],[11,"ramp2","","RAMP2 operation",4201,[[],["w",6]]],[11,"ramp2c","","Critical RAMP2 operation",4201,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4201,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4202,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4202,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4202,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4203,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4203,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4203,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4204,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4204,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4204,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4205,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4205,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4205,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4206,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4206,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4206,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4207,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4207,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4207,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4208,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4208,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4208,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4209,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4209,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4209,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4210,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4210,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4210,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4211,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4211,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4211,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4212,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4212,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4212,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4213,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4213,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4213,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4214,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4214,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4214,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4215,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4215,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4215,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4216,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4216,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4216,[[],["w",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:2 - Waveform Generation",6,[[],["wavegen_r",6]]],[11,"ramp","","Bits 4:5 - Ramp Mode",6,[[],["ramp_r",6]]],[11,"ciperen","","Bit 7 - Circular period Enable",6,[[],["ciperen_r",6]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",6,[[],["ciccen0_r",6]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",6,[[],["ciccen1_r",6]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",6,[[],["ciccen2_r",6]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",6,[[],["ciccen3_r",6]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",6,[[],["pol0_r",6]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",6,[[],["pol1_r",6]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",6,[[],["pol2_r",6]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",6,[[],["pol3_r",6]]],[11,"pol4","","Bit 20 - Channel 4 Polarity",6,[[],["pol4_r",6]]],[11,"pol5","","Bit 21 - Channel 5 Polarity",6,[[],["pol5_r",6]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",6,[[],["swap0_r",6]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",6,[[],["swap1_r",6]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",6,[[],["swap2_r",6]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",6,[[],["swap3_r",6]]],[11,"wavegen","atsamd51g::tcc0::wave","Bits 0:2 - Waveform Generation",4217,[[],["wavegen_r",6]]],[11,"ramp","","Bits 4:5 - Ramp Mode",4217,[[],["ramp_r",6]]],[11,"ciperen","","Bit 7 - Circular period Enable",4217,[[],["ciperen_r",6]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",4217,[[],["ciccen0_r",6]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",4217,[[],["ciccen1_r",6]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",4217,[[],["ciccen2_r",6]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",4217,[[],["ciccen3_r",6]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",4217,[[],["pol0_r",6]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",4217,[[],["pol1_r",6]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",4217,[[],["pol2_r",6]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",4217,[[],["pol3_r",6]]],[11,"pol4","","Bit 20 - Channel 4 Polarity",4217,[[],["pol4_r",6]]],[11,"pol5","","Bit 21 - Channel 5 Polarity",4217,[[],["pol5_r",6]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",4217,[[],["swap0_r",6]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",4217,[[],["swap1_r",6]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",4217,[[],["swap2_r",6]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",4217,[[],["swap3_r",6]]],[11,"wavegen","atsamd51g::generic","Bits 0:2 - Waveform Generation",7,[[],["wavegen_w",3]]],[11,"ramp","","Bits 4:5 - Ramp Mode",7,[[],["ramp_w",3]]],[11,"ciperen","","Bit 7 - Circular period Enable",7,[[],["ciperen_w",3]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",7,[[],["ciccen0_w",3]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",7,[[],["ciccen1_w",3]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",7,[[],["ciccen2_w",3]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",7,[[],["ciccen3_w",3]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",7,[[],["pol0_w",3]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",7,[[],["pol1_w",3]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",7,[[],["pol2_w",3]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",7,[[],["pol3_w",3]]],[11,"pol4","","Bit 20 - Channel 4 Polarity",7,[[],["pol4_w",3]]],[11,"pol5","","Bit 21 - Channel 5 Polarity",7,[[],["pol5_w",3]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",7,[[],["swap0_w",3]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",7,[[],["swap1_w",3]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",7,[[],["swap2_w",3]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",7,[[],["swap3_w",3]]],[11,"wavegen","atsamd51g::tcc0::wave","Bits 0:2 - Waveform Generation",4218,[[],["wavegen_w",3]]],[11,"ramp","","Bits 4:5 - Ramp Mode",4218,[[],["ramp_w",3]]],[11,"ciperen","","Bit 7 - Circular period Enable",4218,[[],["ciperen_w",3]]],[11,"ciccen0","","Bit 8 - Circular Channel 0 Enable",4218,[[],["ciccen0_w",3]]],[11,"ciccen1","","Bit 9 - Circular Channel 1 Enable",4218,[[],["ciccen1_w",3]]],[11,"ciccen2","","Bit 10 - Circular Channel 2 Enable",4218,[[],["ciccen2_w",3]]],[11,"ciccen3","","Bit 11 - Circular Channel 3 Enable",4218,[[],["ciccen3_w",3]]],[11,"pol0","","Bit 16 - Channel 0 Polarity",4218,[[],["pol0_w",3]]],[11,"pol1","","Bit 17 - Channel 1 Polarity",4218,[[],["pol1_w",3]]],[11,"pol2","","Bit 18 - Channel 2 Polarity",4218,[[],["pol2_w",3]]],[11,"pol3","","Bit 19 - Channel 3 Polarity",4218,[[],["pol3_w",3]]],[11,"pol4","","Bit 20 - Channel 4 Polarity",4218,[[],["pol4_w",3]]],[11,"pol5","","Bit 21 - Channel 5 Polarity",4218,[[],["pol5_w",3]]],[11,"swap0","","Bit 24 - Swap DTI Output Pair 0",4218,[[],["swap0_w",3]]],[11,"swap1","","Bit 25 - Swap DTI Output Pair 1",4218,[[],["swap1_w",3]]],[11,"swap2","","Bit 26 - Swap DTI Output Pair 2",4218,[[],["swap2_w",3]]],[11,"swap3","","Bit 27 - Swap DTI Output Pair 3",4218,[[],["swap3_w",3]]],[0,"per","atsamd51g::tcc0","Period",null,null],[3,"PER_W","atsamd51g::tcc0::per","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER",null,null],[6,"W","","Writer for register PER",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",4219,[[],["w",6]]],[11,"per","atsamd51g::generic","Bits 0:23 - Period Value",6,[[],["per_r",6]]],[11,"per","atsamd51g::tcc0::per","Bits 0:23 - Period Value",4220,[[],["per_r",6]]],[11,"per","atsamd51g::generic","Bits 0:23 - Period Value",7,[[],["per_w",3]]],[11,"per","atsamd51g::tcc0::per","Bits 0:23 - Period Value",4221,[[],["per_w",3]]],[0,"per_dith4_mode","atsamd51g::tcc0","Period",null,null],[3,"DITHER_W","atsamd51g::tcc0::per_dith4_mode","Write proxy for field `DITHER`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH4_MODE",null,null],[6,"W","","Writer for register PER_DITH4_MODE",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",4222,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4223,[[],["w",6]]],[11,"dither","atsamd51g::generic","Bits 0:3 - Dithering Cycle Number",6,[[],["dither_r",6]]],[11,"per","","Bits 4:23 - Period Value",6,[[],["per_r",6]]],[11,"dither","atsamd51g::tcc0::per_dith4_mode","Bits 0:3 - Dithering Cycle Number",4224,[[],["dither_r",6]]],[11,"per","","Bits 4:23 - Period Value",4224,[[],["per_r",6]]],[11,"dither","atsamd51g::generic","Bits 0:3 - Dithering Cycle Number",7,[[],["dither_w",3]]],[11,"per","","Bits 4:23 - Period Value",7,[[],["per_w",3]]],[11,"dither","atsamd51g::tcc0::per_dith4_mode","Bits 0:3 - Dithering Cycle Number",4225,[[],["dither_w",3]]],[11,"per","","Bits 4:23 - Period Value",4225,[[],["per_w",3]]],[0,"per_dith5_mode","atsamd51g::tcc0","Period",null,null],[3,"DITHER_W","atsamd51g::tcc0::per_dith5_mode","Write proxy for field `DITHER`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH5_MODE",null,null],[6,"W","","Writer for register PER_DITH5_MODE",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",4226,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4227,[[],["w",6]]],[11,"dither","atsamd51g::generic","Bits 0:4 - Dithering Cycle Number",6,[[],["dither_r",6]]],[11,"per","","Bits 5:23 - Period Value",6,[[],["per_r",6]]],[11,"dither","atsamd51g::tcc0::per_dith5_mode","Bits 0:4 - Dithering Cycle Number",4228,[[],["dither_r",6]]],[11,"per","","Bits 5:23 - Period Value",4228,[[],["per_r",6]]],[11,"dither","atsamd51g::generic","Bits 0:4 - Dithering Cycle Number",7,[[],["dither_w",3]]],[11,"per","","Bits 5:23 - Period Value",7,[[],["per_w",3]]],[11,"dither","atsamd51g::tcc0::per_dith5_mode","Bits 0:4 - Dithering Cycle Number",4229,[[],["dither_w",3]]],[11,"per","","Bits 5:23 - Period Value",4229,[[],["per_w",3]]],[0,"per_dith6_mode","atsamd51g::tcc0","Period",null,null],[3,"DITHER_W","atsamd51g::tcc0::per_dith6_mode","Write proxy for field `DITHER`",null,null],[3,"PER_W","","Write proxy for field `PER`",null,null],[6,"R","","Reader of register PER_DITH6_MODE",null,null],[6,"W","","Writer for register PER_DITH6_MODE",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[11,"bits","","Writes raw bits to the field",4230,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4231,[[],["w",6]]],[11,"dither","atsamd51g::generic","Bits 0:5 - Dithering Cycle Number",6,[[],["dither_r",6]]],[11,"per","","Bits 6:23 - Period Value",6,[[],["per_r",6]]],[11,"dither","atsamd51g::tcc0::per_dith6_mode","Bits 0:5 - Dithering Cycle Number",4232,[[],["dither_r",6]]],[11,"per","","Bits 6:23 - Period Value",4232,[[],["per_r",6]]],[11,"dither","atsamd51g::generic","Bits 0:5 - Dithering Cycle Number",7,[[],["dither_w",3]]],[11,"per","","Bits 6:23 - Period Value",7,[[],["per_w",3]]],[11,"dither","atsamd51g::tcc0::per_dith6_mode","Bits 0:5 - Dithering Cycle Number",4233,[[],["dither_w",3]]],[11,"per","","Bits 6:23 - Period Value",4233,[[],["per_w",3]]],[0,"cc","atsamd51g::tcc0","Compare and Capture",null,null],[3,"CC_W","atsamd51g::tcc0::cc","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC[%s]",null,null],[6,"W","","Writer for register CC[%s]",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",4234,[[],["w",6]]],[11,"cc","atsamd51g::generic","Bits 0:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"cc","atsamd51g::tcc0::cc","Bits 0:23 - Channel Compare/Capture Value",4235,[[],["cc_r",6]]],[11,"cc","atsamd51g::generic","Bits 0:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"cc","atsamd51g::tcc0::cc","Bits 0:23 - Channel Compare/Capture Value",4236,[[],["cc_w",3]]],[0,"cc_dith4_mode","atsamd51g::tcc0","Compare and Capture",null,null],[3,"DITHER_W","atsamd51g::tcc0::cc_dith4_mode","Write proxy for field `DITHER`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC_DITH4_MODE[%s]",null,null],[6,"W","","Writer for register CC_DITH4_MODE[%s]",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",4237,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4238,[[],["w",6]]],[11,"dither","atsamd51g::generic","Bits 0:3 - Dithering Cycle Number",6,[[],["dither_r",6]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dither","atsamd51g::tcc0::cc_dith4_mode","Bits 0:3 - Dithering Cycle Number",4239,[[],["dither_r",6]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",4239,[[],["cc_r",6]]],[11,"dither","atsamd51g::generic","Bits 0:3 - Dithering Cycle Number",7,[[],["dither_w",3]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dither","atsamd51g::tcc0::cc_dith4_mode","Bits 0:3 - Dithering Cycle Number",4240,[[],["dither_w",3]]],[11,"cc","","Bits 4:23 - Channel Compare/Capture Value",4240,[[],["cc_w",3]]],[0,"cc_dith5_mode","atsamd51g::tcc0","Compare and Capture",null,null],[3,"DITHER_W","atsamd51g::tcc0::cc_dith5_mode","Write proxy for field `DITHER`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC_DITH5_MODE[%s]",null,null],[6,"W","","Writer for register CC_DITH5_MODE[%s]",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",4241,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4242,[[],["w",6]]],[11,"dither","atsamd51g::generic","Bits 0:4 - Dithering Cycle Number",6,[[],["dither_r",6]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dither","atsamd51g::tcc0::cc_dith5_mode","Bits 0:4 - Dithering Cycle Number",4243,[[],["dither_r",6]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",4243,[[],["cc_r",6]]],[11,"dither","atsamd51g::generic","Bits 0:4 - Dithering Cycle Number",7,[[],["dither_w",3]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dither","atsamd51g::tcc0::cc_dith5_mode","Bits 0:4 - Dithering Cycle Number",4244,[[],["dither_w",3]]],[11,"cc","","Bits 5:23 - Channel Compare/Capture Value",4244,[[],["cc_w",3]]],[0,"cc_dith6_mode","atsamd51g::tcc0","Compare and Capture",null,null],[3,"DITHER_W","atsamd51g::tcc0::cc_dith6_mode","Write proxy for field `DITHER`",null,null],[3,"CC_W","","Write proxy for field `CC`",null,null],[6,"R","","Reader of register CC_DITH6_MODE[%s]",null,null],[6,"W","","Writer for register CC_DITH6_MODE[%s]",null,null],[6,"DITHER_R","","Reader of field `DITHER`",null,null],[6,"CC_R","","Reader of field `CC`",null,null],[11,"bits","","Writes raw bits to the field",4245,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4246,[[],["w",6]]],[11,"dither","atsamd51g::generic","Bits 0:5 - Dithering Cycle Number",6,[[],["dither_r",6]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",6,[[],["cc_r",6]]],[11,"dither","atsamd51g::tcc0::cc_dith6_mode","Bits 0:5 - Dithering Cycle Number",4247,[[],["dither_r",6]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",4247,[[],["cc_r",6]]],[11,"dither","atsamd51g::generic","Bits 0:5 - Dithering Cycle Number",7,[[],["dither_w",3]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",7,[[],["cc_w",3]]],[11,"dither","atsamd51g::tcc0::cc_dith6_mode","Bits 0:5 - Dithering Cycle Number",4248,[[],["dither_w",3]]],[11,"cc","","Bits 6:23 - Channel Compare/Capture Value",4248,[[],["cc_w",3]]],[0,"pattbuf","atsamd51g::tcc0","Pattern Buffer",null,null],[3,"PGEB0_W","atsamd51g::tcc0::pattbuf","Write proxy for field `PGEB0`",null,null],[3,"PGEB1_W","","Write proxy for field `PGEB1`",null,null],[3,"PGEB2_W","","Write proxy for field `PGEB2`",null,null],[3,"PGEB3_W","","Write proxy for field `PGEB3`",null,null],[3,"PGEB4_W","","Write proxy for field `PGEB4`",null,null],[3,"PGEB5_W","","Write proxy for field `PGEB5`",null,null],[3,"PGEB6_W","","Write proxy for field `PGEB6`",null,null],[3,"PGEB7_W","","Write proxy for field `PGEB7`",null,null],[3,"PGVB0_W","","Write proxy for field `PGVB0`",null,null],[3,"PGVB1_W","","Write proxy for field `PGVB1`",null,null],[3,"PGVB2_W","","Write proxy for field `PGVB2`",null,null],[3,"PGVB3_W","","Write proxy for field `PGVB3`",null,null],[3,"PGVB4_W","","Write proxy for field `PGVB4`",null,null],[3,"PGVB5_W","","Write proxy for field `PGVB5`",null,null],[3,"PGVB6_W","","Write proxy for field `PGVB6`",null,null],[3,"PGVB7_W","","Write proxy for field `PGVB7`",null,null],[6,"R","","Reader of register PATTBUF",null,null],[6,"W","","Writer for register PATTBUF",null,null],[6,"PGEB0_R","","Reader of field `PGEB0`",null,null],[6,"PGEB1_R","","Reader of field `PGEB1`",null,null],[6,"PGEB2_R","","Reader of field `PGEB2`",null,null],[6,"PGEB3_R","","Reader of field `PGEB3`",null,null],[6,"PGEB4_R","","Reader of field `PGEB4`",null,null],[6,"PGEB5_R","","Reader of field `PGEB5`",null,null],[6,"PGEB6_R","","Reader of field `PGEB6`",null,null],[6,"PGEB7_R","","Reader of field `PGEB7`",null,null],[6,"PGVB0_R","","Reader of field `PGVB0`",null,null],[6,"PGVB1_R","","Reader of field `PGVB1`",null,null],[6,"PGVB2_R","","Reader of field `PGVB2`",null,null],[6,"PGVB3_R","","Reader of field `PGVB3`",null,null],[6,"PGVB4_R","","Reader of field `PGVB4`",null,null],[6,"PGVB5_R","","Reader of field `PGVB5`",null,null],[6,"PGVB6_R","","Reader of field `PGVB6`",null,null],[6,"PGVB7_R","","Reader of field `PGVB7`",null,null],[11,"set_bit","","Sets the field bit",4249,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4249,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4249,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4250,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4250,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4250,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4251,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4251,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4251,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4252,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4252,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4252,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4253,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4253,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4253,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4254,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4254,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4254,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4255,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4255,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4255,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4256,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4256,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4256,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4257,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4257,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4257,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4258,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4258,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4258,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4259,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4259,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4259,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4260,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4260,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4260,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4261,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4261,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4261,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4262,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4262,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4262,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4263,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4263,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4263,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4264,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4264,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4264,[[],["w",6]]],[11,"pgeb0","atsamd51g::generic","Bit 0 - Pattern Generator 0 Output Enable Buffer",6,[[],["pgeb0_r",6]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",6,[[],["pgeb1_r",6]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",6,[[],["pgeb2_r",6]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",6,[[],["pgeb3_r",6]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",6,[[],["pgeb4_r",6]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",6,[[],["pgeb5_r",6]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",6,[[],["pgeb6_r",6]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",6,[[],["pgeb7_r",6]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",6,[[],["pgvb0_r",6]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",6,[[],["pgvb1_r",6]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",6,[[],["pgvb2_r",6]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",6,[[],["pgvb3_r",6]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",6,[[],["pgvb4_r",6]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",6,[[],["pgvb5_r",6]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",6,[[],["pgvb6_r",6]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",6,[[],["pgvb7_r",6]]],[11,"pgeb0","atsamd51g::tcc0::pattbuf","Bit 0 - Pattern Generator 0 Output Enable Buffer",4265,[[],["pgeb0_r",6]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",4265,[[],["pgeb1_r",6]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",4265,[[],["pgeb2_r",6]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",4265,[[],["pgeb3_r",6]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",4265,[[],["pgeb4_r",6]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",4265,[[],["pgeb5_r",6]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",4265,[[],["pgeb6_r",6]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",4265,[[],["pgeb7_r",6]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",4265,[[],["pgvb0_r",6]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",4265,[[],["pgvb1_r",6]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",4265,[[],["pgvb2_r",6]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",4265,[[],["pgvb3_r",6]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",4265,[[],["pgvb4_r",6]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",4265,[[],["pgvb5_r",6]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",4265,[[],["pgvb6_r",6]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",4265,[[],["pgvb7_r",6]]],[11,"pgeb0","atsamd51g::generic","Bit 0 - Pattern Generator 0 Output Enable Buffer",7,[[],["pgeb0_w",3]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",7,[[],["pgeb1_w",3]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",7,[[],["pgeb2_w",3]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",7,[[],["pgeb3_w",3]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",7,[[],["pgeb4_w",3]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",7,[[],["pgeb5_w",3]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",7,[[],["pgeb6_w",3]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",7,[[],["pgeb7_w",3]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",7,[[],["pgvb0_w",3]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",7,[[],["pgvb1_w",3]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",7,[[],["pgvb2_w",3]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",7,[[],["pgvb3_w",3]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",7,[[],["pgvb4_w",3]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",7,[[],["pgvb5_w",3]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",7,[[],["pgvb6_w",3]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",7,[[],["pgvb7_w",3]]],[11,"pgeb0","atsamd51g::tcc0::pattbuf","Bit 0 - Pattern Generator 0 Output Enable Buffer",4266,[[],["pgeb0_w",3]]],[11,"pgeb1","","Bit 1 - Pattern Generator 1 Output Enable Buffer",4266,[[],["pgeb1_w",3]]],[11,"pgeb2","","Bit 2 - Pattern Generator 2 Output Enable Buffer",4266,[[],["pgeb2_w",3]]],[11,"pgeb3","","Bit 3 - Pattern Generator 3 Output Enable Buffer",4266,[[],["pgeb3_w",3]]],[11,"pgeb4","","Bit 4 - Pattern Generator 4 Output Enable Buffer",4266,[[],["pgeb4_w",3]]],[11,"pgeb5","","Bit 5 - Pattern Generator 5 Output Enable Buffer",4266,[[],["pgeb5_w",3]]],[11,"pgeb6","","Bit 6 - Pattern Generator 6 Output Enable Buffer",4266,[[],["pgeb6_w",3]]],[11,"pgeb7","","Bit 7 - Pattern Generator 7 Output Enable Buffer",4266,[[],["pgeb7_w",3]]],[11,"pgvb0","","Bit 8 - Pattern Generator 0 Output Enable",4266,[[],["pgvb0_w",3]]],[11,"pgvb1","","Bit 9 - Pattern Generator 1 Output Enable",4266,[[],["pgvb1_w",3]]],[11,"pgvb2","","Bit 10 - Pattern Generator 2 Output Enable",4266,[[],["pgvb2_w",3]]],[11,"pgvb3","","Bit 11 - Pattern Generator 3 Output Enable",4266,[[],["pgvb3_w",3]]],[11,"pgvb4","","Bit 12 - Pattern Generator 4 Output Enable",4266,[[],["pgvb4_w",3]]],[11,"pgvb5","","Bit 13 - Pattern Generator 5 Output Enable",4266,[[],["pgvb5_w",3]]],[11,"pgvb6","","Bit 14 - Pattern Generator 6 Output Enable",4266,[[],["pgvb6_w",3]]],[11,"pgvb7","","Bit 15 - Pattern Generator 7 Output Enable",4266,[[],["pgvb7_w",3]]],[0,"perbuf","atsamd51g::tcc0","Period Buffer",null,null],[3,"PERBUF_W","atsamd51g::tcc0::perbuf","Write proxy for field `PERBUF`",null,null],[6,"R","","Reader of register PERBUF",null,null],[6,"W","","Writer for register PERBUF",null,null],[6,"PERBUF_R","","Reader of field `PERBUF`",null,null],[11,"bits","","Writes raw bits to the field",4267,[[],["w",6]]],[11,"perbuf","atsamd51g::generic","Bits 0:23 - Period Buffer Value",6,[[],["perbuf_r",6]]],[11,"perbuf","atsamd51g::tcc0::perbuf","Bits 0:23 - Period Buffer Value",4268,[[],["perbuf_r",6]]],[11,"perbuf","atsamd51g::generic","Bits 0:23 - Period Buffer Value",7,[[],["perbuf_w",3]]],[11,"perbuf","atsamd51g::tcc0::perbuf","Bits 0:23 - Period Buffer Value",4269,[[],["perbuf_w",3]]],[0,"perbuf_dith4_mode","atsamd51g::tcc0","Period Buffer",null,null],[3,"DITHERBUF_W","atsamd51g::tcc0::perbuf_dith4_mode","Write proxy for field `DITHERBUF`",null,null],[3,"PERBUF_W","","Write proxy for field `PERBUF`",null,null],[6,"R","","Reader of register PERBUF_DITH4_MODE",null,null],[6,"W","","Writer for register PERBUF_DITH4_MODE",null,null],[6,"DITHERBUF_R","","Reader of field `DITHERBUF`",null,null],[6,"PERBUF_R","","Reader of field `PERBUF`",null,null],[11,"bits","","Writes raw bits to the field",4270,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4271,[[],["w",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:3 - Dithering Buffer Cycle Number",6,[[],["ditherbuf_r",6]]],[11,"perbuf","","Bits 4:23 - Period Buffer Value",6,[[],["perbuf_r",6]]],[11,"ditherbuf","atsamd51g::tcc0::perbuf_dith4_mode","Bits 0:3 - Dithering Buffer Cycle Number",4272,[[],["ditherbuf_r",6]]],[11,"perbuf","","Bits 4:23 - Period Buffer Value",4272,[[],["perbuf_r",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:3 - Dithering Buffer Cycle Number",7,[[],["ditherbuf_w",3]]],[11,"perbuf","","Bits 4:23 - Period Buffer Value",7,[[],["perbuf_w",3]]],[11,"ditherbuf","atsamd51g::tcc0::perbuf_dith4_mode","Bits 0:3 - Dithering Buffer Cycle Number",4273,[[],["ditherbuf_w",3]]],[11,"perbuf","","Bits 4:23 - Period Buffer Value",4273,[[],["perbuf_w",3]]],[0,"perbuf_dith5_mode","atsamd51g::tcc0","Period Buffer",null,null],[3,"DITHERBUF_W","atsamd51g::tcc0::perbuf_dith5_mode","Write proxy for field `DITHERBUF`",null,null],[3,"PERBUF_W","","Write proxy for field `PERBUF`",null,null],[6,"R","","Reader of register PERBUF_DITH5_MODE",null,null],[6,"W","","Writer for register PERBUF_DITH5_MODE",null,null],[6,"DITHERBUF_R","","Reader of field `DITHERBUF`",null,null],[6,"PERBUF_R","","Reader of field `PERBUF`",null,null],[11,"bits","","Writes raw bits to the field",4274,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4275,[[],["w",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:4 - Dithering Buffer Cycle Number",6,[[],["ditherbuf_r",6]]],[11,"perbuf","","Bits 5:23 - Period Buffer Value",6,[[],["perbuf_r",6]]],[11,"ditherbuf","atsamd51g::tcc0::perbuf_dith5_mode","Bits 0:4 - Dithering Buffer Cycle Number",4276,[[],["ditherbuf_r",6]]],[11,"perbuf","","Bits 5:23 - Period Buffer Value",4276,[[],["perbuf_r",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:4 - Dithering Buffer Cycle Number",7,[[],["ditherbuf_w",3]]],[11,"perbuf","","Bits 5:23 - Period Buffer Value",7,[[],["perbuf_w",3]]],[11,"ditherbuf","atsamd51g::tcc0::perbuf_dith5_mode","Bits 0:4 - Dithering Buffer Cycle Number",4277,[[],["ditherbuf_w",3]]],[11,"perbuf","","Bits 5:23 - Period Buffer Value",4277,[[],["perbuf_w",3]]],[0,"perbuf_dith6_mode","atsamd51g::tcc0","Period Buffer",null,null],[3,"DITHERBUF_W","atsamd51g::tcc0::perbuf_dith6_mode","Write proxy for field `DITHERBUF`",null,null],[3,"PERBUF_W","","Write proxy for field `PERBUF`",null,null],[6,"R","","Reader of register PERBUF_DITH6_MODE",null,null],[6,"W","","Writer for register PERBUF_DITH6_MODE",null,null],[6,"DITHERBUF_R","","Reader of field `DITHERBUF`",null,null],[6,"PERBUF_R","","Reader of field `PERBUF`",null,null],[11,"bits","","Writes raw bits to the field",4278,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4279,[[],["w",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:5 - Dithering Buffer Cycle Number",6,[[],["ditherbuf_r",6]]],[11,"perbuf","","Bits 6:23 - Period Buffer Value",6,[[],["perbuf_r",6]]],[11,"ditherbuf","atsamd51g::tcc0::perbuf_dith6_mode","Bits 0:5 - Dithering Buffer Cycle Number",4280,[[],["ditherbuf_r",6]]],[11,"perbuf","","Bits 6:23 - Period Buffer Value",4280,[[],["perbuf_r",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:5 - Dithering Buffer Cycle Number",7,[[],["ditherbuf_w",3]]],[11,"perbuf","","Bits 6:23 - Period Buffer Value",7,[[],["perbuf_w",3]]],[11,"ditherbuf","atsamd51g::tcc0::perbuf_dith6_mode","Bits 0:5 - Dithering Buffer Cycle Number",4281,[[],["ditherbuf_w",3]]],[11,"perbuf","","Bits 6:23 - Period Buffer Value",4281,[[],["perbuf_w",3]]],[0,"ccbuf","atsamd51g::tcc0","Compare and Capture Buffer",null,null],[3,"CCBUF_W","atsamd51g::tcc0::ccbuf","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF[%s]",null,null],[6,"W","","Writer for register CCBUF[%s]",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",4282,[[],["w",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:23 - Channel Compare/Capture Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::tcc0::ccbuf","Bits 0:23 - Channel Compare/Capture Buffer Value",4283,[[],["ccbuf_r",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:23 - Channel Compare/Capture Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ccbuf","atsamd51g::tcc0::ccbuf","Bits 0:23 - Channel Compare/Capture Buffer Value",4284,[[],["ccbuf_w",3]]],[0,"ccbuf_dith4_mode","atsamd51g::tcc0","Compare and Capture Buffer",null,null],[3,"CCBUF_W","atsamd51g::tcc0::ccbuf_dith4_mode","Write proxy for field `CCBUF`",null,null],[3,"DITHERBUF_W","","Write proxy for field `DITHERBUF`",null,null],[6,"R","","Reader of register CCBUF_DITH4_MODE[%s]",null,null],[6,"W","","Writer for register CCBUF_DITH4_MODE[%s]",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[6,"DITHERBUF_R","","Reader of field `DITHERBUF`",null,null],[11,"bits","","Writes raw bits to the field",4285,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4286,[[],["w",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:3 - Channel Compare/Capture Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ditherbuf","","Bits 4:23 - Dithering Buffer Cycle Number",6,[[],["ditherbuf_r",6]]],[11,"ccbuf","atsamd51g::tcc0::ccbuf_dith4_mode","Bits 0:3 - Channel Compare/Capture Buffer Value",4287,[[],["ccbuf_r",6]]],[11,"ditherbuf","","Bits 4:23 - Dithering Buffer Cycle Number",4287,[[],["ditherbuf_r",6]]],[11,"ccbuf","atsamd51g::generic","Bits 0:3 - Channel Compare/Capture Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ditherbuf","","Bits 4:23 - Dithering Buffer Cycle Number",7,[[],["ditherbuf_w",3]]],[11,"ccbuf","atsamd51g::tcc0::ccbuf_dith4_mode","Bits 0:3 - Channel Compare/Capture Buffer Value",4288,[[],["ccbuf_w",3]]],[11,"ditherbuf","","Bits 4:23 - Dithering Buffer Cycle Number",4288,[[],["ditherbuf_w",3]]],[0,"ccbuf_dith5_mode","atsamd51g::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERBUF_W","atsamd51g::tcc0::ccbuf_dith5_mode","Write proxy for field `DITHERBUF`",null,null],[3,"CCBUF_W","","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF_DITH5_MODE[%s]",null,null],[6,"W","","Writer for register CCBUF_DITH5_MODE[%s]",null,null],[6,"DITHERBUF_R","","Reader of field `DITHERBUF`",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",4289,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4290,[[],["w",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:4 - Dithering Buffer Cycle Number",6,[[],["ditherbuf_r",6]]],[11,"ccbuf","","Bits 5:23 - Channel Compare/Capture Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ditherbuf","atsamd51g::tcc0::ccbuf_dith5_mode","Bits 0:4 - Dithering Buffer Cycle Number",4291,[[],["ditherbuf_r",6]]],[11,"ccbuf","","Bits 5:23 - Channel Compare/Capture Buffer Value",4291,[[],["ccbuf_r",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:4 - Dithering Buffer Cycle Number",7,[[],["ditherbuf_w",3]]],[11,"ccbuf","","Bits 5:23 - Channel Compare/Capture Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ditherbuf","atsamd51g::tcc0::ccbuf_dith5_mode","Bits 0:4 - Dithering Buffer Cycle Number",4292,[[],["ditherbuf_w",3]]],[11,"ccbuf","","Bits 5:23 - Channel Compare/Capture Buffer Value",4292,[[],["ccbuf_w",3]]],[0,"ccbuf_dith6_mode","atsamd51g::tcc0","Compare and Capture Buffer",null,null],[3,"DITHERBUF_W","atsamd51g::tcc0::ccbuf_dith6_mode","Write proxy for field `DITHERBUF`",null,null],[3,"CCBUF_W","","Write proxy for field `CCBUF`",null,null],[6,"R","","Reader of register CCBUF_DITH6_MODE[%s]",null,null],[6,"W","","Writer for register CCBUF_DITH6_MODE[%s]",null,null],[6,"DITHERBUF_R","","Reader of field `DITHERBUF`",null,null],[6,"CCBUF_R","","Reader of field `CCBUF`",null,null],[11,"bits","","Writes raw bits to the field",4293,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4294,[[],["w",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:5 - Dithering Buffer Cycle Number",6,[[],["ditherbuf_r",6]]],[11,"ccbuf","","Bits 6:23 - Channel Compare/Capture Buffer Value",6,[[],["ccbuf_r",6]]],[11,"ditherbuf","atsamd51g::tcc0::ccbuf_dith6_mode","Bits 0:5 - Dithering Buffer Cycle Number",4295,[[],["ditherbuf_r",6]]],[11,"ccbuf","","Bits 6:23 - Channel Compare/Capture Buffer Value",4295,[[],["ccbuf_r",6]]],[11,"ditherbuf","atsamd51g::generic","Bits 0:5 - Dithering Buffer Cycle Number",7,[[],["ditherbuf_w",3]]],[11,"ccbuf","","Bits 6:23 - Channel Compare/Capture Buffer Value",7,[[],["ccbuf_w",3]]],[11,"ditherbuf","atsamd51g::tcc0::ccbuf_dith6_mode","Bits 0:5 - Dithering Buffer Cycle Number",4296,[[],["ditherbuf_w",3]]],[11,"ccbuf","","Bits 6:23 - Channel Compare/Capture Buffer Value",4296,[[],["ccbuf_w",3]]],[6,"CTRLA","atsamd51g::tcc0","Control A",null,null],[6,"CTRLBCLR","","Control B Clear",null,null],[6,"CTRLBSET","","Control B Set",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"FCTRLA","","Recoverable Fault A Configuration",null,null],[6,"FCTRLB","","Recoverable Fault B Configuration",null,null],[6,"WEXCTRL","","Waveform Extension Configuration",null,null],[6,"DRVCTRL","","Driver Control",null,null],[6,"DBGCTRL","","Debug Control",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"STATUS","","Status",null,null],[6,"COUNT","","Count",null,null],[6,"COUNT_DITH4_MODE","","Count",null,null],[6,"COUNT_DITH5_MODE","","Count",null,null],[6,"COUNT_DITH6_MODE","","Count",null,null],[6,"PATT","","Pattern",null,null],[6,"WAVE","","Waveform Control",null,null],[6,"PER","","Period",null,null],[6,"PER_DITH4_MODE","","Period",null,null],[6,"PER_DITH5_MODE","","Period",null,null],[6,"PER_DITH6_MODE","","Period",null,null],[6,"CC","","Compare and Capture",null,null],[6,"CC_DITH4_MODE","","Compare and Capture",null,null],[6,"CC_DITH5_MODE","","Compare and Capture",null,null],[6,"CC_DITH6_MODE","","Compare and Capture",null,null],[6,"PATTBUF","","Pattern Buffer",null,null],[6,"PERBUF","","Period Buffer",null,null],[6,"PERBUF_DITH4_MODE","","Period Buffer",null,null],[6,"PERBUF_DITH5_MODE","","Period Buffer",null,null],[6,"PERBUF_DITH6_MODE","","Period Buffer",null,null],[6,"CCBUF","","Compare and Capture Buffer",null,null],[6,"CCBUF_DITH4_MODE","","Compare and Capture Buffer",null,null],[6,"CCBUF_DITH5_MODE","","Compare and Capture Buffer",null,null],[6,"CCBUF_DITH6_MODE","","Compare and Capture Buffer",null,null],[11,"count_dith6_mode","","0x34 - Count",3919,[[],["count_dith6_mode",6]]],[11,"count_dith6_mode_mut","","0x34 - Count",3919,[[],["count_dith6_mode",6]]],[11,"count_dith5_mode","","0x34 - Count",3919,[[],["count_dith5_mode",6]]],[11,"count_dith5_mode_mut","","0x34 - Count",3919,[[],["count_dith5_mode",6]]],[11,"count_dith4_mode","","0x34 - Count",3919,[[],["count_dith4_mode",6]]],[11,"count_dith4_mode_mut","","0x34 - Count",3919,[[],["count_dith4_mode",6]]],[11,"count","","0x34 - Count",3919,[[],["count",6]]],[11,"count_mut","","0x34 - Count",3919,[[],["count",6]]],[11,"per_dith6_mode","","0x40 - Period",3919,[[],["per_dith6_mode",6]]],[11,"per_dith6_mode_mut","","0x40 - Period",3919,[[],["per_dith6_mode",6]]],[11,"per_dith5_mode","","0x40 - Period",3919,[[],["per_dith5_mode",6]]],[11,"per_dith5_mode_mut","","0x40 - Period",3919,[[],["per_dith5_mode",6]]],[11,"per_dith4_mode","","0x40 - Period",3919,[[],["per_dith4_mode",6]]],[11,"per_dith4_mode_mut","","0x40 - Period",3919,[[],["per_dith4_mode",6]]],[11,"per","","0x40 - Period",3919,[[],["per",6]]],[11,"per_mut","","0x40 - Period",3919,[[],["per",6]]],[11,"cc_dith6_mode","","0x44 - Compare and Capture",3919,[[]]],[11,"cc_dith6_mode_mut","","0x44 - Compare and Capture",3919,[[]]],[11,"cc_dith5_mode","","0x44 - Compare and Capture",3919,[[]]],[11,"cc_dith5_mode_mut","","0x44 - Compare and Capture",3919,[[]]],[11,"cc_dith4_mode","","0x44 - Compare and Capture",3919,[[]]],[11,"cc_dith4_mode_mut","","0x44 - Compare and Capture",3919,[[]]],[11,"cc","","0x44 - Compare and Capture",3919,[[]]],[11,"cc_mut","","0x44 - Compare and Capture",3919,[[]]],[11,"perbuf_dith6_mode","","0x6c - Period Buffer",3919,[[],["perbuf_dith6_mode",6]]],[11,"perbuf_dith6_mode_mut","","0x6c - Period Buffer",3919,[[],["perbuf_dith6_mode",6]]],[11,"perbuf_dith5_mode","","0x6c - Period Buffer",3919,[[],["perbuf_dith5_mode",6]]],[11,"perbuf_dith5_mode_mut","","0x6c - Period Buffer",3919,[[],["perbuf_dith5_mode",6]]],[11,"perbuf_dith4_mode","","0x6c - Period Buffer",3919,[[],["perbuf_dith4_mode",6]]],[11,"perbuf_dith4_mode_mut","","0x6c - Period Buffer",3919,[[],["perbuf_dith4_mode",6]]],[11,"perbuf","","0x6c - Period Buffer",3919,[[],["perbuf",6]]],[11,"perbuf_mut","","0x6c - Period Buffer",3919,[[],["perbuf",6]]],[11,"ccbuf_dith6_mode","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf_dith6_mode_mut","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf_dith5_mode","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf_dith5_mode_mut","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf_dith4_mode","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf_dith4_mode_mut","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf","","0x70 - Compare and Capture Buffer",3919,[[]]],[11,"ccbuf_mut","","0x70 - Compare and Capture Buffer",3919,[[]]],[0,"trng","atsamd51g","True Random Generator",null,null],[3,"RegisterBlock","atsamd51g::trng","Register block",null,null],[12,"ctrla","","0x00 - Control A",4297,null],[12,"evctrl","","0x04 - Event Control",4297,null],[12,"intenclr","","0x08 - Interrupt Enable Clear",4297,null],[12,"intenset","","0x09 - Interrupt Enable Set",4297,null],[12,"intflag","","0x0a - Interrupt Flag Status and Clear",4297,null],[12,"data","","0x20 - Output Data",4297,null],[0,"ctrla","","Control A",null,null],[3,"ENABLE_W","atsamd51g::trng::ctrla","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[11,"set_bit","","Sets the field bit",4298,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4298,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4298,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4299,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4299,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4299,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",6,[[],["runstdby_r",6]]],[11,"enable","atsamd51g::trng::ctrla","Bit 1 - Enable",4300,[[],["enable_r",6]]],[11,"runstdby","","Bit 6 - Run in Standby",4300,[[],["runstdby_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",7,[[],["runstdby_w",3]]],[11,"enable","atsamd51g::trng::ctrla","Bit 1 - Enable",4301,[[],["enable_w",3]]],[11,"runstdby","","Bit 6 - Run in Standby",4301,[[],["runstdby_w",3]]],[0,"evctrl","atsamd51g::trng","Event Control",null,null],[3,"DATARDYEO_W","atsamd51g::trng::evctrl","Write proxy for field `DATARDYEO`",null,null],[6,"R","","Reader of register EVCTRL",null,null],[6,"W","","Writer for register EVCTRL",null,null],[6,"DATARDYEO_R","","Reader of field `DATARDYEO`",null,null],[11,"set_bit","","Sets the field bit",4302,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4302,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4302,[[],["w",6]]],[11,"datardyeo","atsamd51g::generic","Bit 0 - Data Ready Event Output",6,[[],["datardyeo_r",6]]],[11,"datardyeo","atsamd51g::trng::evctrl","Bit 0 - Data Ready Event Output",4303,[[],["datardyeo_r",6]]],[11,"datardyeo","atsamd51g::generic","Bit 0 - Data Ready Event Output",7,[[],["datardyeo_w",3]]],[11,"datardyeo","atsamd51g::trng::evctrl","Bit 0 - Data Ready Event Output",4304,[[],["datardyeo_w",3]]],[0,"intenclr","atsamd51g::trng","Interrupt Enable Clear",null,null],[3,"DATARDY_W","atsamd51g::trng::intenclr","Write proxy for field `DATARDY`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"DATARDY_R","","Reader of field `DATARDY`",null,null],[11,"set_bit","","Sets the field bit",4305,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4305,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4305,[[],["w",6]]],[11,"datardy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Enable",6,[[],["datardy_r",6]]],[11,"datardy","atsamd51g::trng::intenclr","Bit 0 - Data Ready Interrupt Enable",4306,[[],["datardy_r",6]]],[11,"datardy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Enable",7,[[],["datardy_w",3]]],[11,"datardy","atsamd51g::trng::intenclr","Bit 0 - Data Ready Interrupt Enable",4307,[[],["datardy_w",3]]],[0,"intenset","atsamd51g::trng","Interrupt Enable Set",null,null],[3,"DATARDY_W","atsamd51g::trng::intenset","Write proxy for field `DATARDY`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"DATARDY_R","","Reader of field `DATARDY`",null,null],[11,"set_bit","","Sets the field bit",4308,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4308,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4308,[[],["w",6]]],[11,"datardy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Enable",6,[[],["datardy_r",6]]],[11,"datardy","atsamd51g::trng::intenset","Bit 0 - Data Ready Interrupt Enable",4309,[[],["datardy_r",6]]],[11,"datardy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Enable",7,[[],["datardy_w",3]]],[11,"datardy","atsamd51g::trng::intenset","Bit 0 - Data Ready Interrupt Enable",4310,[[],["datardy_w",3]]],[0,"intflag","atsamd51g::trng","Interrupt Flag Status and Clear",null,null],[3,"DATARDY_W","atsamd51g::trng::intflag","Write proxy for field `DATARDY`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"DATARDY_R","","Reader of field `DATARDY`",null,null],[11,"set_bit","","Sets the field bit",4311,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4311,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4311,[[],["w",6]]],[11,"datardy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Flag",6,[[],["datardy_r",6]]],[11,"datardy","atsamd51g::trng::intflag","Bit 0 - Data Ready Interrupt Flag",4312,[[],["datardy_r",6]]],[11,"datardy","atsamd51g::generic","Bit 0 - Data Ready Interrupt Flag",7,[[],["datardy_w",3]]],[11,"datardy","atsamd51g::trng::intflag","Bit 0 - Data Ready Interrupt Flag",4313,[[],["datardy_w",3]]],[0,"data","atsamd51g::trng","Output Data",null,null],[6,"R","atsamd51g::trng::data","Reader of register DATA",null,null],[6,"DATA_R","","Reader of field `DATA`",null,null],[11,"data","atsamd51g::generic","Bits 0:31 - Output Data",6,[[],["data_r",6]]],[11,"data","atsamd51g::trng::data","Bits 0:31 - Output Data",4314,[[],["data_r",6]]],[6,"CTRLA","atsamd51g::trng","Control A",null,null],[6,"EVCTRL","","Event Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"DATA","","Output Data",null,null],[0,"usb","atsamd51g","Universal Serial Bus",null,null],[3,"RegisterBlock","atsamd51g::usb","Register block",null,null],[3,"DEVICE","","Register block",null,null],[12,"ctrla","","0x00 - Control A",4315,null],[12,"syncbusy","","0x02 - Synchronization Busy",4315,null],[12,"qosctrl","","0x03 - USB Quality Of Service",4315,null],[12,"ctrlb","","0x08 - DEVICE Control B",4315,null],[12,"dadd","","0x0a - DEVICE Device Address",4315,null],[12,"status","","0x0c - DEVICE Status",4315,null],[12,"fsmstatus","","0x0d - Finite State Machine Status",4315,null],[12,"fnum","","0x10 - DEVICE Device Frame Number",4315,null],[12,"intenclr","","0x14 - DEVICE Device Interrupt Enable Clear",4315,null],[12,"intenset","","0x18 - DEVICE Device Interrupt Enable Set",4315,null],[12,"intflag","","0x1c - DEVICE Device Interrupt Flag",4315,null],[12,"epintsmry","","0x20 - DEVICE End Point Interrupt Summary",4315,null],[12,"descadd","","0x24 - Descriptor Address",4315,null],[12,"padcal","","0x28 - USB PAD Calibration",4315,null],[12,"device_endpoint0","","0x100 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint1","","0x120 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint2","","0x140 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint3","","0x160 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint4","","0x180 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint5","","0x1a0 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint6","","0x1c0 - DEVICE_ENDPOINT[%s]",4315,null],[12,"device_endpoint7","","0x1e0 - DEVICE_ENDPOINT[%s]",4315,null],[3,"HOST","","Register block",null,null],[12,"ctrla","","0x00 - Control A",4316,null],[12,"syncbusy","","0x02 - Synchronization Busy",4316,null],[12,"qosctrl","","0x03 - USB Quality Of Service",4316,null],[12,"ctrlb","","0x08 - HOST Control B",4316,null],[12,"hsofc","","0x0a - HOST Host Start Of Frame Control",4316,null],[12,"status","","0x0c - HOST Status",4316,null],[12,"fsmstatus","","0x0d - Finite State Machine Status",4316,null],[12,"fnum","","0x10 - HOST Host Frame Number",4316,null],[12,"flenhigh","","0x12 - HOST Host Frame Length",4316,null],[12,"intenclr","","0x14 - HOST Host Interrupt Enable Clear",4316,null],[12,"intenset","","0x18 - HOST Host Interrupt Enable Set",4316,null],[12,"intflag","","0x1c - HOST Host Interrupt Flag",4316,null],[12,"pintsmry","","0x20 - HOST Pipe Interrupt Summary",4316,null],[12,"descadd","","0x24 - Descriptor Address",4316,null],[12,"padcal","","0x28 - USB PAD Calibration",4316,null],[12,"host_pipe0","","0x100 - HOST_PIPE[%s]",4316,null],[12,"host_pipe1","","0x120 - HOST_PIPE[%s]",4316,null],[12,"host_pipe2","","0x140 - HOST_PIPE[%s]",4316,null],[12,"host_pipe3","","0x160 - HOST_PIPE[%s]",4316,null],[12,"host_pipe4","","0x180 - HOST_PIPE[%s]",4316,null],[12,"host_pipe5","","0x1a0 - HOST_PIPE[%s]",4316,null],[12,"host_pipe6","","0x1c0 - HOST_PIPE[%s]",4316,null],[12,"host_pipe7","","0x1e0 - HOST_PIPE[%s]",4316,null],[0,"device","","Register block USB is Device",null,null],[3,"DEVICE_ENDPOINT","atsamd51g::usb::device","Register block",null,null],[12,"epcfg","","0x00 - DEVICE_ENDPOINT End Point Configuration",4317,null],[12,"epstatusclr","","0x04 - DEVICE_ENDPOINT End Point Pipe Status Clear",4317,null],[12,"epstatusset","","0x05 - DEVICE_ENDPOINT End Point Pipe Status Set",4317,null],[12,"epstatus","","0x06 - DEVICE_ENDPOINT End Point Pipe Status",4317,null],[12,"epintflag","","0x07 - DEVICE_ENDPOINT End Point Interrupt Flag",4317,null],[12,"epintenclr","","0x08 - DEVICE_ENDPOINT End Point Interrupt Clear Flag",4317,null],[12,"epintenset","","0x09 - DEVICE_ENDPOINT End Point Interrupt Set Flag",4317,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::usb::device::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"DEVICE","","0: Device Mode",4318,null],[13,"HOST","","1: Host Mode",4318,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[11,"set_bit","","Sets the field bit",4319,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4319,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4319,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4320,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4320,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4320,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4321,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4321,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4321,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",6,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",6,[[]]],[11,"variant","atsamd51g::usb::device::ctrla","Get enumerated values variant",4322,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",4322,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",4322,[[]]],[11,"variant","","Writes `variant` to the field",4323,[[["mode_a",4]],["w",6]]],[11,"device","","Device Mode",4323,[[],["w",6]]],[11,"host","","Host Mode",4323,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4323,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4323,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4323,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",6,[[],["mode_r",6]]],[11,"swrst","atsamd51g::usb::device::ctrla","Bit 0 - Software Reset",4324,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",4324,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",4324,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",4324,[[],["mode_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",7,[[],["mode_w",3]]],[11,"swrst","atsamd51g::usb::device::ctrla","Bit 0 - Software Reset",4325,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",4325,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",4325,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",4325,[[],["mode_w",3]]],[0,"syncbusy","atsamd51g::usb::device","Synchronization Busy",null,null],[6,"R","atsamd51g::usb::device::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::usb::device::syncbusy","Bit 0 - Software Reset Synchronization Busy",4326,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",4326,[[],["enable_r",6]]],[0,"qosctrl","atsamd51g::usb::device","USB Quality Of Service",null,null],[3,"CQOS_W","atsamd51g::usb::device::qosctrl","Write proxy for field `CQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"CQOS_R","","Reader of field `CQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"bits","","Writes raw bits to the field",4327,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4328,[[],["w",6]]],[11,"cqos","atsamd51g::generic","Bits 0:1 - Configuration Quality of Service",6,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",6,[[],["dqos_r",6]]],[11,"cqos","atsamd51g::usb::device::qosctrl","Bits 0:1 - Configuration Quality of Service",4329,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",4329,[[],["dqos_r",6]]],[11,"cqos","atsamd51g::generic","Bits 0:1 - Configuration Quality of Service",7,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",7,[[],["dqos_w",3]]],[11,"cqos","atsamd51g::usb::device::qosctrl","Bits 0:1 - Configuration Quality of Service",4330,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",4330,[[],["dqos_w",3]]],[0,"ctrlb","atsamd51g::usb::device","DEVICE Control B",null,null],[3,"DETACH_W","atsamd51g::usb::device::ctrlb","Write proxy for field `DETACH`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"SPDCONF_W","","Write proxy for field `SPDCONF`",null,null],[3,"NREPLY_W","","Write proxy for field `NREPLY`",null,null],[3,"TSTJ_W","","Write proxy for field `TSTJ`",null,null],[3,"TSTK_W","","Write proxy for field `TSTK`",null,null],[3,"TSTPCKT_W","","Write proxy for field `TSTPCKT`",null,null],[3,"OPMODE2_W","","Write proxy for field `OPMODE2`",null,null],[3,"GNAK_W","","Write proxy for field `GNAK`",null,null],[3,"LPMHDSK_W","","Write proxy for field `LPMHDSK`",null,null],[4,"SPDCONF_A","","Speed Configuration",null,null],[13,"FS","","0: FS : Full Speed",4331,null],[13,"LS","","1: LS : Low Speed",4331,null],[13,"HS","","2: HS : High Speed capable",4331,null],[13,"HSTM","","3: HSTM: High Speed Test Mode (force high-speed mode for…",4331,null],[4,"LPMHDSK_A","","Link Power Management Handshake",null,null],[13,"NO","","0: No handshake. LPM is not supported",4332,null],[13,"ACK","","1: ACK",4332,null],[13,"NYET","","2: NYET",4332,null],[13,"STALL","","3: STALL",4332,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"DETACH_R","","Reader of field `DETACH`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"SPDCONF_R","","Reader of field `SPDCONF`",null,null],[6,"NREPLY_R","","Reader of field `NREPLY`",null,null],[6,"TSTJ_R","","Reader of field `TSTJ`",null,null],[6,"TSTK_R","","Reader of field `TSTK`",null,null],[6,"TSTPCKT_R","","Reader of field `TSTPCKT`",null,null],[6,"OPMODE2_R","","Reader of field `OPMODE2`",null,null],[6,"GNAK_R","","Reader of field `GNAK`",null,null],[6,"LPMHDSK_R","","Reader of field `LPMHDSK`",null,null],[11,"set_bit","","Sets the field bit",4333,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4333,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4333,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4334,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4334,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4334,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["spdconf_a",4]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"is_hstm","","Checks if the value of the field is `HSTM`",6,[[]]],[11,"variant","atsamd51g::usb::device::ctrlb","Get enumerated values variant",4335,[[],["spdconf_a",4]]],[11,"is_fs","","Checks if the value of the field is `FS`",4335,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",4335,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",4335,[[]]],[11,"is_hstm","","Checks if the value of the field is `HSTM`",4335,[[]]],[11,"variant","","Writes `variant` to the field",4336,[[["spdconf_a",4]],["w",6]]],[11,"fs","","FS : Full Speed",4336,[[],["w",6]]],[11,"ls","","LS : Low Speed",4336,[[],["w",6]]],[11,"hs","","HS : High Speed capable",4336,[[],["w",6]]],[11,"hstm","","HSTM: High Speed Test Mode (force high-speed mode for test…",4336,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4336,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4337,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4337,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4337,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4338,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4338,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4338,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4339,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4339,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4339,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4340,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4340,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4340,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4341,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4341,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4341,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4342,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4342,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4342,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["lpmhdsk_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",6,[[]]],[11,"is_ack","","Checks if the value of the field is `ACK`",6,[[]]],[11,"is_nyet","","Checks if the value of the field is `NYET`",6,[[]]],[11,"is_stall","","Checks if the value of the field is `STALL`",6,[[]]],[11,"variant","atsamd51g::usb::device::ctrlb","Get enumerated values variant",4343,[[],["lpmhdsk_a",4]]],[11,"is_no","","Checks if the value of the field is `NO`",4343,[[]]],[11,"is_ack","","Checks if the value of the field is `ACK`",4343,[[]]],[11,"is_nyet","","Checks if the value of the field is `NYET`",4343,[[]]],[11,"is_stall","","Checks if the value of the field is `STALL`",4343,[[]]],[11,"variant","","Writes `variant` to the field",4344,[[["lpmhdsk_a",4]],["w",6]]],[11,"no","","No handshake. LPM is not supported",4344,[[],["w",6]]],[11,"ack","","ACK",4344,[[],["w",6]]],[11,"nyet","","NYET",4344,[[],["w",6]]],[11,"stall","","STALL",4344,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4344,[[],["w",6]]],[11,"detach","atsamd51g::generic","Bit 0 - Detach",6,[[],["detach_r",6]]],[11,"uprsm","","Bit 1 - Upstream Resume",6,[[],["uprsm_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",6,[[],["spdconf_r",6]]],[11,"nreply","","Bit 4 - No Reply",6,[[],["nreply_r",6]]],[11,"tstj","","Bit 5 - Test mode J",6,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",6,[[],["tstk_r",6]]],[11,"tstpckt","","Bit 7 - Test packet mode",6,[[],["tstpckt_r",6]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",6,[[],["opmode2_r",6]]],[11,"gnak","","Bit 9 - Global NAK",6,[[],["gnak_r",6]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",6,[[],["lpmhdsk_r",6]]],[11,"detach","atsamd51g::usb::device::ctrlb","Bit 0 - Detach",4345,[[],["detach_r",6]]],[11,"uprsm","","Bit 1 - Upstream Resume",4345,[[],["uprsm_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",4345,[[],["spdconf_r",6]]],[11,"nreply","","Bit 4 - No Reply",4345,[[],["nreply_r",6]]],[11,"tstj","","Bit 5 - Test mode J",4345,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",4345,[[],["tstk_r",6]]],[11,"tstpckt","","Bit 7 - Test packet mode",4345,[[],["tstpckt_r",6]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",4345,[[],["opmode2_r",6]]],[11,"gnak","","Bit 9 - Global NAK",4345,[[],["gnak_r",6]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",4345,[[],["lpmhdsk_r",6]]],[11,"detach","atsamd51g::generic","Bit 0 - Detach",7,[[],["detach_w",3]]],[11,"uprsm","","Bit 1 - Upstream Resume",7,[[],["uprsm_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",7,[[],["spdconf_w",3]]],[11,"nreply","","Bit 4 - No Reply",7,[[],["nreply_w",3]]],[11,"tstj","","Bit 5 - Test mode J",7,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",7,[[],["tstk_w",3]]],[11,"tstpckt","","Bit 7 - Test packet mode",7,[[],["tstpckt_w",3]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",7,[[],["opmode2_w",3]]],[11,"gnak","","Bit 9 - Global NAK",7,[[],["gnak_w",3]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",7,[[],["lpmhdsk_w",3]]],[11,"detach","atsamd51g::usb::device::ctrlb","Bit 0 - Detach",4346,[[],["detach_w",3]]],[11,"uprsm","","Bit 1 - Upstream Resume",4346,[[],["uprsm_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration",4346,[[],["spdconf_w",3]]],[11,"nreply","","Bit 4 - No Reply",4346,[[],["nreply_w",3]]],[11,"tstj","","Bit 5 - Test mode J",4346,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",4346,[[],["tstk_w",3]]],[11,"tstpckt","","Bit 7 - Test packet mode",4346,[[],["tstpckt_w",3]]],[11,"opmode2","","Bit 8 - Specific Operational Mode",4346,[[],["opmode2_w",3]]],[11,"gnak","","Bit 9 - Global NAK",4346,[[],["gnak_w",3]]],[11,"lpmhdsk","","Bits 10:11 - Link Power Management Handshake",4346,[[],["lpmhdsk_w",3]]],[0,"dadd","atsamd51g::usb::device","DEVICE Device Address",null,null],[3,"DADD_W","atsamd51g::usb::device::dadd","Write proxy for field `DADD`",null,null],[3,"ADDEN_W","","Write proxy for field `ADDEN`",null,null],[6,"R","","Reader of register DADD",null,null],[6,"W","","Writer for register DADD",null,null],[6,"DADD_R","","Reader of field `DADD`",null,null],[6,"ADDEN_R","","Reader of field `ADDEN`",null,null],[11,"bits","","Writes raw bits to the field",4347,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4348,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4348,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4348,[[],["w",6]]],[11,"dadd","atsamd51g::generic","Bits 0:6 - Device Address",6,[[],["dadd_r",6]]],[11,"adden","","Bit 7 - Device Address Enable",6,[[],["adden_r",6]]],[11,"dadd","atsamd51g::usb::device::dadd","Bits 0:6 - Device Address",4349,[[],["dadd_r",6]]],[11,"adden","","Bit 7 - Device Address Enable",4349,[[],["adden_r",6]]],[11,"dadd","atsamd51g::generic","Bits 0:6 - Device Address",7,[[],["dadd_w",3]]],[11,"adden","","Bit 7 - Device Address Enable",7,[[],["adden_w",3]]],[11,"dadd","atsamd51g::usb::device::dadd","Bits 0:6 - Device Address",4350,[[],["dadd_w",3]]],[11,"adden","","Bit 7 - Device Address Enable",4350,[[],["adden_w",3]]],[0,"status","atsamd51g::usb::device","DEVICE Status",null,null],[4,"SPEED_A","atsamd51g::usb::device::status","Speed Status",null,null],[13,"FS","","0: Full-speed mode",4351,null],[13,"LS","","1: Low-speed mode",4351,null],[13,"HS","","2: High-speed mode",4351,null],[4,"LINESTATE_A","","USB Line State Status",null,null],[13,"_0","","0: SE0/RESET",4352,null],[13,"_1","","1: FS-J or LS-K State",4352,null],[13,"_2","","2: FS-K or LS-J State",4352,null],[6,"R","","Reader of register STATUS",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"LINESTATE_R","","Reader of field `LINESTATE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["speed_a",4],["variant",4]]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",6,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",6,[[]]],[11,"variant","atsamd51g::usb::device::status","Get enumerated values variant",4353,[[],[["speed_a",4],["variant",4]]]],[11,"is_fs","","Checks if the value of the field is `FS`",4353,[[]]],[11,"is_ls","","Checks if the value of the field is `LS`",4353,[[]]],[11,"is_hs","","Checks if the value of the field is `HS`",4353,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["linestate_a",4],["variant",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",6,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",6,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",6,[[]]],[11,"variant","atsamd51g::usb::device::status","Get enumerated values variant",4354,[[],[["linestate_a",4],["variant",4]]]],[11,"is_0","","Checks if the value of the field is `_0`",4354,[[]]],[11,"is_1","","Checks if the value of the field is `_1`",4354,[[]]],[11,"is_2","","Checks if the value of the field is `_2`",4354,[[]]],[11,"speed","atsamd51g::generic","Bits 2:3 - Speed Status",6,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",6,[[],["linestate_r",6]]],[11,"speed","atsamd51g::usb::device::status","Bits 2:3 - Speed Status",4355,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",4355,[[],["linestate_r",6]]],[0,"fsmstatus","atsamd51g::usb::device","Finite State Machine Status",null,null],[4,"FSMSTATE_A","atsamd51g::usb::device::fsmstatus","Fine State Machine Status",null,null],[13,"OFF","","1: OFF (L3). It corresponds to the powered-off,…",4356,null],[13,"ON","","2: ON (L0). It corresponds to the Idle and Active states",4356,null],[13,"SUSPEND","","4: SUSPEND (L2)",4356,null],[13,"SLEEP","","8: SLEEP (L1)",4356,null],[13,"DNRESUME","","16: DNRESUME. Down Stream Resume.",4356,null],[13,"UPRESUME","","32: UPRESUME. Up Stream Resume.",4356,null],[13,"RESET","","64: RESET. USB lines Reset.",4356,null],[6,"R","","Reader of register FSMSTATUS",null,null],[6,"FSMSTATE_R","","Reader of field `FSMSTATE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["fsmstate_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",6,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",6,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd51g::usb::device::fsmstatus","Get enumerated values variant",4357,[[],[["fsmstate_a",4],["variant",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",4357,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",4357,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",4357,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",4357,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",4357,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",4357,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",4357,[[]]],[11,"fsmstate","atsamd51g::generic","Bits 0:6 - Fine State Machine Status",6,[[],["fsmstate_r",6]]],[11,"fsmstate","atsamd51g::usb::device::fsmstatus","Bits 0:6 - Fine State Machine Status",4358,[[],["fsmstate_r",6]]],[0,"fnum","atsamd51g::usb::device","DEVICE Device Frame Number",null,null],[6,"R","atsamd51g::usb::device::fnum","Reader of register FNUM",null,null],[6,"MFNUM_R","","Reader of field `MFNUM`",null,null],[6,"FNUM_R","","Reader of field `FNUM`",null,null],[6,"FNCERR_R","","Reader of field `FNCERR`",null,null],[11,"mfnum","atsamd51g::generic","Bits 0:2 - Micro Frame Number",6,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",6,[[],["fnum_r",6]]],[11,"fncerr","","Bit 15 - Frame Number CRC Error",6,[[],["fncerr_r",6]]],[11,"mfnum","atsamd51g::usb::device::fnum","Bits 0:2 - Micro Frame Number",4359,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",4359,[[],["fnum_r",6]]],[11,"fncerr","","Bit 15 - Frame Number CRC Error",4359,[[],["fncerr_r",6]]],[0,"intenclr","atsamd51g::usb::device","DEVICE Device Interrupt Enable Clear",null,null],[3,"SUSPEND_W","atsamd51g::usb::device::intenclr","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",4360,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4360,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4360,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4361,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4361,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4361,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4362,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4362,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4362,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4363,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4363,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4363,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4364,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4364,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4364,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4365,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4365,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4365,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4366,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4366,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4366,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4367,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4367,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4367,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4368,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4368,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4368,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4369,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4369,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4369,[[],["w",6]]],[11,"suspend","atsamd51g::generic","Bit 0 - Suspend Interrupt Enable",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd51g::usb::device::intenclr","Bit 0 - Suspend Interrupt Enable",4370,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",4370,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",4370,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",4370,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",4370,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",4370,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",4370,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",4370,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",4370,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",4370,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd51g::generic","Bit 0 - Suspend Interrupt Enable",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd51g::usb::device::intenclr","Bit 0 - Suspend Interrupt Enable",4371,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",4371,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",4371,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",4371,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",4371,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",4371,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",4371,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",4371,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",4371,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",4371,[[],["lpmsusp_w",3]]],[0,"intenset","atsamd51g::usb::device","DEVICE Device Interrupt Enable Set",null,null],[3,"SUSPEND_W","atsamd51g::usb::device::intenset","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",4372,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4372,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4372,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4373,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4373,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4373,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4374,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4374,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4374,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4375,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4375,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4375,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4376,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4376,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4376,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4377,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4377,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4377,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4378,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4378,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4378,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4379,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4379,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4379,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4380,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4380,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4380,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4381,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4381,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4381,[[],["w",6]]],[11,"suspend","atsamd51g::generic","Bit 0 - Suspend Interrupt Enable",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd51g::usb::device::intenset","Bit 0 - Suspend Interrupt Enable",4382,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",4382,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",4382,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",4382,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",4382,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",4382,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",4382,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",4382,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",4382,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",4382,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd51g::generic","Bit 0 - Suspend Interrupt Enable",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd51g::usb::device::intenset","Bit 0 - Suspend Interrupt Enable",4383,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame Interrupt Enable in High…",4383,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame Interrupt Enable",4383,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset Interrupt Enable",4383,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",4383,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume Interrupt Enable",4383,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume Interrupt Enable",4383,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",4383,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet Interrupt Enable",4383,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend Interrupt Enable",4383,[[],["lpmsusp_w",3]]],[0,"intflag","atsamd51g::usb::device","DEVICE Device Interrupt Flag",null,null],[3,"SUSPEND_W","atsamd51g::usb::device::intflag","Write proxy for field `SUSPEND`",null,null],[3,"MSOF_W","","Write proxy for field `MSOF`",null,null],[3,"SOF_W","","Write proxy for field `SOF`",null,null],[3,"EORST_W","","Write proxy for field `EORST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"EORSM_W","","Write proxy for field `EORSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"LPMNYET_W","","Write proxy for field `LPMNYET`",null,null],[3,"LPMSUSP_W","","Write proxy for field `LPMSUSP`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"SUSPEND_R","","Reader of field `SUSPEND`",null,null],[6,"MSOF_R","","Reader of field `MSOF`",null,null],[6,"SOF_R","","Reader of field `SOF`",null,null],[6,"EORST_R","","Reader of field `EORST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"EORSM_R","","Reader of field `EORSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"LPMNYET_R","","Reader of field `LPMNYET`",null,null],[6,"LPMSUSP_R","","Reader of field `LPMSUSP`",null,null],[11,"set_bit","","Sets the field bit",4384,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4384,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4384,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4385,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4385,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4385,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4386,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4386,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4386,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4387,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4387,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4387,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4388,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4388,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4388,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4389,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4389,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4389,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4390,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4390,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4390,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4391,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4391,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4391,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4392,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4392,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4392,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4393,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4393,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4393,[[],["w",6]]],[11,"suspend","atsamd51g::generic","Bit 0 - Suspend",6,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",6,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame",6,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset",6,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",6,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume",6,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",6,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",6,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",6,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd51g::usb::device::intflag","Bit 0 - Suspend",4394,[[],["suspend_r",6]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",4394,[[],["msof_r",6]]],[11,"sof","","Bit 2 - Start Of Frame",4394,[[],["sof_r",6]]],[11,"eorst","","Bit 3 - End of Reset",4394,[[],["eorst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",4394,[[],["wakeup_r",6]]],[11,"eorsm","","Bit 5 - End Of Resume",4394,[[],["eorsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume",4394,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",4394,[[],["ramacer_r",6]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",4394,[[],["lpmnyet_r",6]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",4394,[[],["lpmsusp_r",6]]],[11,"suspend","atsamd51g::generic","Bit 0 - Suspend",7,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",7,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame",7,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset",7,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",7,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume",7,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",7,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",7,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",7,[[],["lpmsusp_w",3]]],[11,"suspend","atsamd51g::usb::device::intflag","Bit 0 - Suspend",4395,[[],["suspend_w",3]]],[11,"msof","","Bit 1 - Micro Start of Frame in High Speed Mode",4395,[[],["msof_w",3]]],[11,"sof","","Bit 2 - Start Of Frame",4395,[[],["sof_w",3]]],[11,"eorst","","Bit 3 - End of Reset",4395,[[],["eorst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",4395,[[],["wakeup_w",3]]],[11,"eorsm","","Bit 5 - End Of Resume",4395,[[],["eorsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume",4395,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",4395,[[],["ramacer_w",3]]],[11,"lpmnyet","","Bit 8 - Link Power Management Not Yet",4395,[[],["lpmnyet_w",3]]],[11,"lpmsusp","","Bit 9 - Link Power Management Suspend",4395,[[],["lpmsusp_w",3]]],[0,"epintsmry","atsamd51g::usb::device","DEVICE End Point Interrupt Summary",null,null],[6,"R","atsamd51g::usb::device::epintsmry","Reader of register EPINTSMRY",null,null],[6,"EPINT0_R","","Reader of field `EPINT0`",null,null],[6,"EPINT1_R","","Reader of field `EPINT1`",null,null],[6,"EPINT2_R","","Reader of field `EPINT2`",null,null],[6,"EPINT3_R","","Reader of field `EPINT3`",null,null],[6,"EPINT4_R","","Reader of field `EPINT4`",null,null],[6,"EPINT5_R","","Reader of field `EPINT5`",null,null],[6,"EPINT6_R","","Reader of field `EPINT6`",null,null],[6,"EPINT7_R","","Reader of field `EPINT7`",null,null],[11,"epint0","atsamd51g::generic","Bit 0 - End Point 0 Interrupt",6,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - End Point 1 Interrupt",6,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - End Point 2 Interrupt",6,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - End Point 3 Interrupt",6,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - End Point 4 Interrupt",6,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - End Point 5 Interrupt",6,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - End Point 6 Interrupt",6,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - End Point 7 Interrupt",6,[[],["epint7_r",6]]],[11,"epint0","atsamd51g::usb::device::epintsmry","Bit 0 - End Point 0 Interrupt",4396,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - End Point 1 Interrupt",4396,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - End Point 2 Interrupt",4396,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - End Point 3 Interrupt",4396,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - End Point 4 Interrupt",4396,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - End Point 5 Interrupt",4396,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - End Point 6 Interrupt",4396,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - End Point 7 Interrupt",4396,[[],["epint7_r",6]]],[0,"descadd","atsamd51g::usb::device","Descriptor Address",null,null],[3,"DESCADD_W","atsamd51g::usb::device::descadd","Write proxy for field `DESCADD`",null,null],[6,"R","","Reader of register DESCADD",null,null],[6,"W","","Writer for register DESCADD",null,null],[6,"DESCADD_R","","Reader of field `DESCADD`",null,null],[11,"bits","","Writes raw bits to the field",4397,[[],["w",6]]],[11,"descadd","atsamd51g::generic","Bits 0:31 - Descriptor Address Value",6,[[],["descadd_r",6]]],[11,"descadd","atsamd51g::usb::device::descadd","Bits 0:31 - Descriptor Address Value",4398,[[],["descadd_r",6]]],[11,"descadd","atsamd51g::generic","Bits 0:31 - Descriptor Address Value",7,[[],["descadd_w",3]]],[11,"descadd","atsamd51g::usb::device::descadd","Bits 0:31 - Descriptor Address Value",4399,[[],["descadd_w",3]]],[0,"padcal","atsamd51g::usb::device","USB PAD Calibration",null,null],[3,"TRANSP_W","atsamd51g::usb::device::padcal","Write proxy for field `TRANSP`",null,null],[3,"TRANSN_W","","Write proxy for field `TRANSN`",null,null],[3,"TRIM_W","","Write proxy for field `TRIM`",null,null],[6,"R","","Reader of register PADCAL",null,null],[6,"W","","Writer for register PADCAL",null,null],[6,"TRANSP_R","","Reader of field `TRANSP`",null,null],[6,"TRANSN_R","","Reader of field `TRANSN`",null,null],[6,"TRIM_R","","Reader of field `TRIM`",null,null],[11,"bits","","Writes raw bits to the field",4400,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4401,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4402,[[],["w",6]]],[11,"transp","atsamd51g::generic","Bits 0:4 - USB Pad Transp calibration",6,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",6,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",6,[[],["trim_r",6]]],[11,"transp","atsamd51g::usb::device::padcal","Bits 0:4 - USB Pad Transp calibration",4403,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",4403,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",4403,[[],["trim_r",6]]],[11,"transp","atsamd51g::generic","Bits 0:4 - USB Pad Transp calibration",7,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",7,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",7,[[],["trim_w",3]]],[11,"transp","atsamd51g::usb::device::padcal","Bits 0:4 - USB Pad Transp calibration",4404,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",4404,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",4404,[[],["trim_w",3]]],[0,"device_endpoint","atsamd51g::usb::device","Register block DEVICE_ENDPOINT[%s]",null,null],[0,"epcfg","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Configuration",null,null],[3,"EPTYPE0_W","atsamd51g::usb::device::device_endpoint::epcfg","Write proxy for field `EPTYPE0`",null,null],[3,"EPTYPE1_W","","Write proxy for field `EPTYPE1`",null,null],[3,"NYETDIS_W","","Write proxy for field `NYETDIS`",null,null],[6,"R","","Reader of register EPCFG",null,null],[6,"W","","Writer for register EPCFG",null,null],[6,"EPTYPE0_R","","Reader of field `EPTYPE0`",null,null],[6,"EPTYPE1_R","","Reader of field `EPTYPE1`",null,null],[6,"NYETDIS_R","","Reader of field `NYETDIS`",null,null],[11,"bits","","Writes raw bits to the field",4405,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4406,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4407,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4407,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4407,[[],["w",6]]],[11,"eptype0","atsamd51g::generic","Bits 0:2 - End Point Type0",6,[[],["eptype0_r",6]]],[11,"eptype1","","Bits 4:6 - End Point Type1",6,[[],["eptype1_r",6]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",6,[[],["nyetdis_r",6]]],[11,"eptype0","atsamd51g::usb::device::device_endpoint::epcfg","Bits 0:2 - End Point Type0",4408,[[],["eptype0_r",6]]],[11,"eptype1","","Bits 4:6 - End Point Type1",4408,[[],["eptype1_r",6]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",4408,[[],["nyetdis_r",6]]],[11,"eptype0","atsamd51g::generic","Bits 0:2 - End Point Type0",7,[[],["eptype0_w",3]]],[11,"eptype1","","Bits 4:6 - End Point Type1",7,[[],["eptype1_w",3]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",7,[[],["nyetdis_w",3]]],[11,"eptype0","atsamd51g::usb::device::device_endpoint::epcfg","Bits 0:2 - End Point Type0",4409,[[],["eptype0_w",3]]],[11,"eptype1","","Bits 4:6 - End Point Type1",4409,[[],["eptype1_w",3]]],[11,"nyetdis","","Bit 7 - NYET Token Disable",4409,[[],["nyetdis_w",3]]],[0,"epstatusclr","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Pipe Status Clear",null,null],[3,"DTGLOUT_W","atsamd51g::usb::device::device_endpoint::epstatusclr","Write proxy for field `DTGLOUT`",null,null],[3,"DTGLIN_W","","Write proxy for field `DTGLIN`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"STALLRQ0_W","","Write proxy for field `STALLRQ0`",null,null],[3,"STALLRQ1_W","","Write proxy for field `STALLRQ1`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register EPSTATUSCLR",null,null],[11,"set_bit","","Sets the field bit",4410,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4410,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4410,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4411,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4411,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4411,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4412,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4412,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4412,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4413,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4413,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4413,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4414,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4414,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4414,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4415,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4415,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4415,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4416,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4416,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4416,[[],["w",6]]],[11,"dtglout","atsamd51g::generic","Bit 0 - Data Toggle OUT Clear",7,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Clear",7,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Clear",7,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Clear",7,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Clear",7,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",7,[[],["bk1rdy_w",3]]],[11,"dtglout","atsamd51g::usb::device::device_endpoint::epstatusclr","Bit 0 - Data Toggle OUT Clear",4417,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Clear",4417,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Clear",4417,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Clear",4417,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Clear",4417,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",4417,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",4417,[[],["bk1rdy_w",3]]],[0,"epstatusset","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Pipe Status Set",null,null],[3,"DTGLOUT_W","atsamd51g::usb::device::device_endpoint::epstatusset","Write proxy for field `DTGLOUT`",null,null],[3,"DTGLIN_W","","Write proxy for field `DTGLIN`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"STALLRQ0_W","","Write proxy for field `STALLRQ0`",null,null],[3,"STALLRQ1_W","","Write proxy for field `STALLRQ1`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register EPSTATUSSET",null,null],[11,"set_bit","","Sets the field bit",4418,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4418,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4418,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4419,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4419,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4419,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4420,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4420,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4420,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4421,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4421,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4421,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4422,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4422,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4422,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4423,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4423,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4423,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4424,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4424,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4424,[[],["w",6]]],[11,"dtglout","atsamd51g::generic","Bit 0 - Data Toggle OUT Set",7,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Set",7,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",7,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Set",7,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Set",7,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",7,[[],["bk1rdy_w",3]]],[11,"dtglout","atsamd51g::usb::device::device_endpoint::epstatusset","Bit 0 - Data Toggle OUT Set",4425,[[],["dtglout_w",3]]],[11,"dtglin","","Bit 1 - Data Toggle IN Set",4425,[[],["dtglin_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",4425,[[],["curbk_w",3]]],[11,"stallrq0","","Bit 4 - Stall 0 Request Set",4425,[[],["stallrq0_w",3]]],[11,"stallrq1","","Bit 5 - Stall 1 Request Set",4425,[[],["stallrq1_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",4425,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",4425,[[],["bk1rdy_w",3]]],[0,"epstatus","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Pipe Status",null,null],[6,"R","atsamd51g::usb::device::device_endpoint::epstatus","Reader of register EPSTATUS",null,null],[6,"DTGLOUT_R","","Reader of field `DTGLOUT`",null,null],[6,"DTGLIN_R","","Reader of field `DTGLIN`",null,null],[6,"CURBK_R","","Reader of field `CURBK`",null,null],[6,"STALLRQ0_R","","Reader of field `STALLRQ0`",null,null],[6,"STALLRQ1_R","","Reader of field `STALLRQ1`",null,null],[6,"BK0RDY_R","","Reader of field `BK0RDY`",null,null],[6,"BK1RDY_R","","Reader of field `BK1RDY`",null,null],[11,"dtglout","atsamd51g::generic","Bit 0 - Data Toggle Out",6,[[],["dtglout_r",6]]],[11,"dtglin","","Bit 1 - Data Toggle In",6,[[],["dtglin_r",6]]],[11,"curbk","","Bit 2 - Current Bank",6,[[],["curbk_r",6]]],[11,"stallrq0","","Bit 4 - Stall 0 Request",6,[[],["stallrq0_r",6]]],[11,"stallrq1","","Bit 5 - Stall 1 Request",6,[[],["stallrq1_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",6,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",6,[[],["bk1rdy_r",6]]],[11,"dtglout","atsamd51g::usb::device::device_endpoint::epstatus","Bit 0 - Data Toggle Out",4426,[[],["dtglout_r",6]]],[11,"dtglin","","Bit 1 - Data Toggle In",4426,[[],["dtglin_r",6]]],[11,"curbk","","Bit 2 - Current Bank",4426,[[],["curbk_r",6]]],[11,"stallrq0","","Bit 4 - Stall 0 Request",4426,[[],["stallrq0_r",6]]],[11,"stallrq1","","Bit 5 - Stall 1 Request",4426,[[],["stallrq1_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",4426,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",4426,[[],["bk1rdy_r",6]]],[0,"epintflag","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Interrupt Flag",null,null],[3,"TRCPT0_W","atsamd51g::usb::device::device_endpoint::epintflag","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTFLAG",null,null],[6,"W","","Writer for register EPINTFLAG",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",4427,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4427,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4427,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4428,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4428,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4428,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4429,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4429,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4429,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4430,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4430,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4430,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4431,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4431,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4431,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4432,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4432,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4432,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4433,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4433,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4433,[[],["w",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd51g::usb::device::device_endpoint::epintflag","Bit 0 - Transfer Complete 0",4434,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",4434,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0",4434,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1",4434,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup",4434,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out",4434,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out",4434,[[],["stall1_r",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd51g::usb::device::device_endpoint::epintflag","Bit 0 - Transfer Complete 0",4435,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1",4435,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0",4435,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1",4435,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup",4435,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out",4435,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out",4435,[[],["stall1_w",3]]],[0,"epintenclr","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Interrupt Clear Flag",null,null],[3,"TRCPT0_W","atsamd51g::usb::device::device_endpoint::epintenclr","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTENCLR",null,null],[6,"W","","Writer for register EPINTENCLR",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",4436,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4436,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4436,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4437,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4437,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4437,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4438,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4438,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4438,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4439,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4439,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4439,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4440,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4440,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4440,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4441,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4441,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4441,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4442,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4442,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4442,[[],["w",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Disable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd51g::usb::device::device_endpoint::epintenclr","Bit 0 - Transfer Complete 0 Interrupt Disable",4443,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",4443,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",4443,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",4443,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",4443,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",4443,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",4443,[[],["stall1_r",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Disable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd51g::usb::device::device_endpoint::epintenclr","Bit 0 - Transfer Complete 0 Interrupt Disable",4444,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Disable",4444,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Disable",4444,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Disable",4444,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Disable",4444,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/Out Interrupt Disable",4444,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/Out Interrupt Disable",4444,[[],["stall1_w",3]]],[0,"epintenset","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Interrupt Set Flag",null,null],[3,"TRCPT0_W","atsamd51g::usb::device::device_endpoint::epintenset","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL0_W","","Write proxy for field `TRFAIL0`",null,null],[3,"TRFAIL1_W","","Write proxy for field `TRFAIL1`",null,null],[3,"RXSTP_W","","Write proxy for field `RXSTP`",null,null],[3,"STALL0_W","","Write proxy for field `STALL0`",null,null],[3,"STALL1_W","","Write proxy for field `STALL1`",null,null],[6,"R","","Reader of register EPINTENSET",null,null],[6,"W","","Writer for register EPINTENSET",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL0_R","","Reader of field `TRFAIL0`",null,null],[6,"TRFAIL1_R","","Reader of field `TRFAIL1`",null,null],[6,"RXSTP_R","","Reader of field `RXSTP`",null,null],[6,"STALL0_R","","Reader of field `STALL0`",null,null],[6,"STALL1_R","","Reader of field `STALL1`",null,null],[11,"set_bit","","Sets the field bit",4445,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4445,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4445,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4446,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4446,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4446,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4447,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4447,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4447,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4448,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4448,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4448,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4449,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4449,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4449,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4450,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4450,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4450,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4451,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4451,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4451,[[],["w",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",6,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",6,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",6,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",6,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",6,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",6,[[],["stall1_r",6]]],[11,"trcpt0","atsamd51g::usb::device::device_endpoint::epintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",4452,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",4452,[[],["trcpt1_r",6]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",4452,[[],["trfail0_r",6]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",4452,[[],["trfail1_r",6]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",4452,[[],["rxstp_r",6]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",4452,[[],["stall0_r",6]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",4452,[[],["stall1_r",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",7,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",7,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",7,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",7,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",7,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",7,[[],["stall1_w",3]]],[11,"trcpt0","atsamd51g::usb::device::device_endpoint::epintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",4453,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",4453,[[],["trcpt1_w",3]]],[11,"trfail0","","Bit 2 - Error Flow 0 Interrupt Enable",4453,[[],["trfail0_w",3]]],[11,"trfail1","","Bit 3 - Error Flow 1 Interrupt Enable",4453,[[],["trfail1_w",3]]],[11,"rxstp","","Bit 4 - Received Setup Interrupt Enable",4453,[[],["rxstp_w",3]]],[11,"stall0","","Bit 5 - Stall 0 In/out Interrupt enable",4453,[[],["stall0_w",3]]],[11,"stall1","","Bit 6 - Stall 1 In/out Interrupt enable",4453,[[],["stall1_w",3]]],[6,"EPCFG","atsamd51g::usb::device::device_endpoint","DEVICE_ENDPOINT End Point Configuration",null,null],[6,"EPSTATUSCLR","","DEVICE_ENDPOINT End Point Pipe Status Clear",null,null],[6,"EPSTATUSSET","","DEVICE_ENDPOINT End Point Pipe Status Set",null,null],[6,"EPSTATUS","","DEVICE_ENDPOINT End Point Pipe Status",null,null],[6,"EPINTFLAG","","DEVICE_ENDPOINT End Point Interrupt Flag",null,null],[6,"EPINTENCLR","","DEVICE_ENDPOINT End Point Interrupt Clear Flag",null,null],[6,"EPINTENSET","","DEVICE_ENDPOINT End Point Interrupt Set Flag",null,null],[6,"CTRLA","atsamd51g::usb::device","Control A",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"QOSCTRL","","USB Quality Of Service",null,null],[6,"CTRLB","","DEVICE Control B",null,null],[6,"DADD","","DEVICE Device Address",null,null],[6,"STATUS","","DEVICE Status",null,null],[6,"FSMSTATUS","","Finite State Machine Status",null,null],[6,"FNUM","","DEVICE Device Frame Number",null,null],[6,"INTENCLR","","DEVICE Device Interrupt Enable Clear",null,null],[6,"INTENSET","","DEVICE Device Interrupt Enable Set",null,null],[6,"INTFLAG","","DEVICE Device Interrupt Flag",null,null],[6,"EPINTSMRY","","DEVICE End Point Interrupt Summary",null,null],[6,"DESCADD","","Descriptor Address",null,null],[6,"PADCAL","","USB PAD Calibration",null,null],[0,"host","atsamd51g::usb","Register block USB is Host",null,null],[3,"HOST_PIPE","atsamd51g::usb::host","Register block",null,null],[12,"pcfg","","0x00 - HOST_PIPE End Point Configuration",4454,null],[12,"binterval","","0x03 - HOST_PIPE Bus Access Period of Pipe",4454,null],[12,"pstatusclr","","0x04 - HOST_PIPE End Point Pipe Status Clear",4454,null],[12,"pstatusset","","0x05 - HOST_PIPE End Point Pipe Status Set",4454,null],[12,"pstatus","","0x06 - HOST_PIPE End Point Pipe Status",4454,null],[12,"pintflag","","0x07 - HOST_PIPE Pipe Interrupt Flag",4454,null],[12,"pintenclr","","0x08 - HOST_PIPE Pipe Interrupt Flag Clear",4454,null],[12,"pintenset","","0x09 - HOST_PIPE Pipe Interrupt Flag Set",4454,null],[0,"ctrla","","Control A",null,null],[3,"SWRST_W","atsamd51g::usb::host::ctrla","Write proxy for field `SWRST`",null,null],[3,"ENABLE_W","","Write proxy for field `ENABLE`",null,null],[3,"RUNSTDBY_W","","Write proxy for field `RUNSTDBY`",null,null],[3,"MODE_W","","Write proxy for field `MODE`",null,null],[4,"MODE_A","","Operating Mode",null,null],[13,"DEVICE","","0: Device Mode",4455,null],[13,"HOST","","1: Host Mode",4455,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"RUNSTDBY_R","","Reader of field `RUNSTDBY`",null,null],[6,"MODE_R","","Reader of field `MODE`",null,null],[11,"set_bit","","Sets the field bit",4456,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4456,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4456,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4457,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4457,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4457,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4458,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4458,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4458,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",6,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",6,[[]]],[11,"variant","atsamd51g::usb::host::ctrla","Get enumerated values variant",4459,[[],["mode_a",4]]],[11,"is_device","","Checks if the value of the field is `DEVICE`",4459,[[]]],[11,"is_host","","Checks if the value of the field is `HOST`",4459,[[]]],[11,"variant","","Writes `variant` to the field",4460,[[["mode_a",4]],["w",6]]],[11,"device","","Device Mode",4460,[[],["w",6]]],[11,"host","","Host Mode",4460,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4460,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4460,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4460,[[],["w",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",6,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",6,[[],["mode_r",6]]],[11,"swrst","atsamd51g::usb::host::ctrla","Bit 0 - Software Reset",4461,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable",4461,[[],["enable_r",6]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",4461,[[],["runstdby_r",6]]],[11,"mode","","Bit 7 - Operating Mode",4461,[[],["mode_r",6]]],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset",7,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",7,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",7,[[],["mode_w",3]]],[11,"swrst","atsamd51g::usb::host::ctrla","Bit 0 - Software Reset",4462,[[],["swrst_w",3]]],[11,"enable","","Bit 1 - Enable",4462,[[],["enable_w",3]]],[11,"runstdby","","Bit 2 - Run in Standby Mode",4462,[[],["runstdby_w",3]]],[11,"mode","","Bit 7 - Operating Mode",4462,[[],["mode_w",3]]],[0,"syncbusy","atsamd51g::usb::host","Synchronization Busy",null,null],[6,"R","atsamd51g::usb::host::syncbusy","Reader of register SYNCBUSY",null,null],[6,"SWRST_R","","Reader of field `SWRST`",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[11,"swrst","atsamd51g::generic","Bit 0 - Software Reset Synchronization Busy",6,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"swrst","atsamd51g::usb::host::syncbusy","Bit 0 - Software Reset Synchronization Busy",4463,[[],["swrst_r",6]]],[11,"enable","","Bit 1 - Enable Synchronization Busy",4463,[[],["enable_r",6]]],[0,"qosctrl","atsamd51g::usb::host","USB Quality Of Service",null,null],[3,"CQOS_W","atsamd51g::usb::host::qosctrl","Write proxy for field `CQOS`",null,null],[3,"DQOS_W","","Write proxy for field `DQOS`",null,null],[6,"R","","Reader of register QOSCTRL",null,null],[6,"W","","Writer for register QOSCTRL",null,null],[6,"CQOS_R","","Reader of field `CQOS`",null,null],[6,"DQOS_R","","Reader of field `DQOS`",null,null],[11,"bits","","Writes raw bits to the field",4464,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4465,[[],["w",6]]],[11,"cqos","atsamd51g::generic","Bits 0:1 - Configuration Quality of Service",6,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",6,[[],["dqos_r",6]]],[11,"cqos","atsamd51g::usb::host::qosctrl","Bits 0:1 - Configuration Quality of Service",4466,[[],["cqos_r",6]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",4466,[[],["dqos_r",6]]],[11,"cqos","atsamd51g::generic","Bits 0:1 - Configuration Quality of Service",7,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",7,[[],["dqos_w",3]]],[11,"cqos","atsamd51g::usb::host::qosctrl","Bits 0:1 - Configuration Quality of Service",4467,[[],["cqos_w",3]]],[11,"dqos","","Bits 2:3 - Data Quality of Service",4467,[[],["dqos_w",3]]],[0,"ctrlb","atsamd51g::usb::host","HOST Control B",null,null],[3,"RESUME_W","atsamd51g::usb::host::ctrlb","Write proxy for field `RESUME`",null,null],[3,"SPDCONF_W","","Write proxy for field `SPDCONF`",null,null],[3,"AUTORESUME_W","","Write proxy for field `AUTORESUME`",null,null],[3,"TSTJ_W","","Write proxy for field `TSTJ`",null,null],[3,"TSTK_W","","Write proxy for field `TSTK`",null,null],[3,"SOFE_W","","Write proxy for field `SOFE`",null,null],[3,"BUSRESET_W","","Write proxy for field `BUSRESET`",null,null],[3,"VBUSOK_W","","Write proxy for field `VBUSOK`",null,null],[3,"L1RESUME_W","","Write proxy for field `L1RESUME`",null,null],[4,"SPDCONF_A","","Speed Configuration for Host",null,null],[13,"NORMAL","","0: Normal mode: the host starts in full-speed mode and…",4468,null],[13,"FS","","3: Full-speed: the host remains in full-speed mode…",4468,null],[6,"R","","Reader of register CTRLB",null,null],[6,"W","","Writer for register CTRLB",null,null],[6,"RESUME_R","","Reader of field `RESUME`",null,null],[6,"SPDCONF_R","","Reader of field `SPDCONF`",null,null],[6,"AUTORESUME_R","","Reader of field `AUTORESUME`",null,null],[6,"TSTJ_R","","Reader of field `TSTJ`",null,null],[6,"TSTK_R","","Reader of field `TSTK`",null,null],[6,"SOFE_R","","Reader of field `SOFE`",null,null],[6,"BUSRESET_R","","Reader of field `BUSRESET`",null,null],[6,"VBUSOK_R","","Reader of field `VBUSOK`",null,null],[6,"L1RESUME_R","","Reader of field `L1RESUME`",null,null],[11,"set_bit","","Sets the field bit",4469,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4469,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4469,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["spdconf_a",4]]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",6,[[]]],[11,"is_fs","","Checks if the value of the field is `FS`",6,[[]]],[11,"variant","atsamd51g::usb::host::ctrlb","Get enumerated values variant",4470,[[],[["variant",4],["spdconf_a",4]]]],[11,"is_normal","","Checks if the value of the field is `NORMAL`",4470,[[]]],[11,"is_fs","","Checks if the value of the field is `FS`",4470,[[]]],[11,"variant","","Writes `variant` to the field",4471,[[["spdconf_a",4]],["w",6]]],[11,"normal","","Normal mode: the host starts in full-speed mode and…",4471,[[],["w",6]]],[11,"fs","","Full-speed: the host remains in full-speed mode whatever…",4471,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4471,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4472,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4472,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4472,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4473,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4473,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4473,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4474,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4474,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4474,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4475,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4475,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4475,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4476,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4476,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4476,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4477,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4477,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4477,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4478,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4478,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4478,[[],["w",6]]],[11,"resume","atsamd51g::generic","Bit 1 - Send USB Resume",6,[[],["resume_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",6,[[],["spdconf_r",6]]],[11,"autoresume","","Bit 4 - Auto Resume Enable",6,[[],["autoresume_r",6]]],[11,"tstj","","Bit 5 - Test mode J",6,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",6,[[],["tstk_r",6]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",6,[[],["sofe_r",6]]],[11,"busreset","","Bit 9 - Send USB Reset",6,[[],["busreset_r",6]]],[11,"vbusok","","Bit 10 - VBUS is OK",6,[[],["vbusok_r",6]]],[11,"l1resume","","Bit 11 - Send L1 Resume",6,[[],["l1resume_r",6]]],[11,"resume","atsamd51g::usb::host::ctrlb","Bit 1 - Send USB Resume",4479,[[],["resume_r",6]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",4479,[[],["spdconf_r",6]]],[11,"autoresume","","Bit 4 - Auto Resume Enable",4479,[[],["autoresume_r",6]]],[11,"tstj","","Bit 5 - Test mode J",4479,[[],["tstj_r",6]]],[11,"tstk","","Bit 6 - Test mode K",4479,[[],["tstk_r",6]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",4479,[[],["sofe_r",6]]],[11,"busreset","","Bit 9 - Send USB Reset",4479,[[],["busreset_r",6]]],[11,"vbusok","","Bit 10 - VBUS is OK",4479,[[],["vbusok_r",6]]],[11,"l1resume","","Bit 11 - Send L1 Resume",4479,[[],["l1resume_r",6]]],[11,"resume","atsamd51g::generic","Bit 1 - Send USB Resume",7,[[],["resume_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",7,[[],["spdconf_w",3]]],[11,"autoresume","","Bit 4 - Auto Resume Enable",7,[[],["autoresume_w",3]]],[11,"tstj","","Bit 5 - Test mode J",7,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",7,[[],["tstk_w",3]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",7,[[],["sofe_w",3]]],[11,"busreset","","Bit 9 - Send USB Reset",7,[[],["busreset_w",3]]],[11,"vbusok","","Bit 10 - VBUS is OK",7,[[],["vbusok_w",3]]],[11,"l1resume","","Bit 11 - Send L1 Resume",7,[[],["l1resume_w",3]]],[11,"resume","atsamd51g::usb::host::ctrlb","Bit 1 - Send USB Resume",4480,[[],["resume_w",3]]],[11,"spdconf","","Bits 2:3 - Speed Configuration for Host",4480,[[],["spdconf_w",3]]],[11,"autoresume","","Bit 4 - Auto Resume Enable",4480,[[],["autoresume_w",3]]],[11,"tstj","","Bit 5 - Test mode J",4480,[[],["tstj_w",3]]],[11,"tstk","","Bit 6 - Test mode K",4480,[[],["tstk_w",3]]],[11,"sofe","","Bit 8 - Start of Frame Generation Enable",4480,[[],["sofe_w",3]]],[11,"busreset","","Bit 9 - Send USB Reset",4480,[[],["busreset_w",3]]],[11,"vbusok","","Bit 10 - VBUS is OK",4480,[[],["vbusok_w",3]]],[11,"l1resume","","Bit 11 - Send L1 Resume",4480,[[],["l1resume_w",3]]],[0,"hsofc","atsamd51g::usb::host","HOST Host Start Of Frame Control",null,null],[3,"FLENC_W","atsamd51g::usb::host::hsofc","Write proxy for field `FLENC`",null,null],[3,"FLENCE_W","","Write proxy for field `FLENCE`",null,null],[6,"R","","Reader of register HSOFC",null,null],[6,"W","","Writer for register HSOFC",null,null],[6,"FLENC_R","","Reader of field `FLENC`",null,null],[6,"FLENCE_R","","Reader of field `FLENCE`",null,null],[11,"bits","","Writes raw bits to the field",4481,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4482,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4482,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4482,[[],["w",6]]],[11,"flenc","atsamd51g::generic","Bits 0:3 - Frame Length Control",6,[[],["flenc_r",6]]],[11,"flence","","Bit 7 - Frame Length Control Enable",6,[[],["flence_r",6]]],[11,"flenc","atsamd51g::usb::host::hsofc","Bits 0:3 - Frame Length Control",4483,[[],["flenc_r",6]]],[11,"flence","","Bit 7 - Frame Length Control Enable",4483,[[],["flence_r",6]]],[11,"flenc","atsamd51g::generic","Bits 0:3 - Frame Length Control",7,[[],["flenc_w",3]]],[11,"flence","","Bit 7 - Frame Length Control Enable",7,[[],["flence_w",3]]],[11,"flenc","atsamd51g::usb::host::hsofc","Bits 0:3 - Frame Length Control",4484,[[],["flenc_w",3]]],[11,"flence","","Bit 7 - Frame Length Control Enable",4484,[[],["flence_w",3]]],[0,"status","atsamd51g::usb::host","HOST Status",null,null],[3,"SPEED_W","atsamd51g::usb::host::status","Write proxy for field `SPEED`",null,null],[3,"LINESTATE_W","","Write proxy for field `LINESTATE`",null,null],[6,"R","","Reader of register STATUS",null,null],[6,"W","","Writer for register STATUS",null,null],[6,"SPEED_R","","Reader of field `SPEED`",null,null],[6,"LINESTATE_R","","Reader of field `LINESTATE`",null,null],[11,"bits","","Writes raw bits to the field",4485,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4486,[[],["w",6]]],[11,"speed","atsamd51g::generic","Bits 2:3 - Speed Status",6,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",6,[[],["linestate_r",6]]],[11,"speed","atsamd51g::usb::host::status","Bits 2:3 - Speed Status",4487,[[],["speed_r",6]]],[11,"linestate","","Bits 6:7 - USB Line State Status",4487,[[],["linestate_r",6]]],[11,"speed","atsamd51g::generic","Bits 2:3 - Speed Status",7,[[],["speed_w",3]]],[11,"linestate","","Bits 6:7 - USB Line State Status",7,[[],["linestate_w",3]]],[11,"speed","atsamd51g::usb::host::status","Bits 2:3 - Speed Status",4488,[[],["speed_w",3]]],[11,"linestate","","Bits 6:7 - USB Line State Status",4488,[[],["linestate_w",3]]],[0,"fsmstatus","atsamd51g::usb::host","Finite State Machine Status",null,null],[4,"FSMSTATE_A","atsamd51g::usb::host::fsmstatus","Fine State Machine Status",null,null],[13,"OFF","","1: OFF (L3). It corresponds to the powered-off,…",4489,null],[13,"ON","","2: ON (L0). It corresponds to the Idle and Active states",4489,null],[13,"SUSPEND","","4: SUSPEND (L2)",4489,null],[13,"SLEEP","","8: SLEEP (L1)",4489,null],[13,"DNRESUME","","16: DNRESUME. Down Stream Resume.",4489,null],[13,"UPRESUME","","32: UPRESUME. Up Stream Resume.",4489,null],[13,"RESET","","64: RESET. USB lines Reset.",4489,null],[6,"R","","Reader of register FSMSTATUS",null,null],[6,"FSMSTATE_R","","Reader of field `FSMSTATE`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["fsmstate_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",6,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",6,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",6,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",6,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",6,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",6,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",6,[[]]],[11,"variant","atsamd51g::usb::host::fsmstatus","Get enumerated values variant",4490,[[],[["variant",4],["fsmstate_a",4]]]],[11,"is_off","","Checks if the value of the field is `OFF`",4490,[[]]],[11,"is_on","","Checks if the value of the field is `ON`",4490,[[]]],[11,"is_suspend","","Checks if the value of the field is `SUSPEND`",4490,[[]]],[11,"is_sleep","","Checks if the value of the field is `SLEEP`",4490,[[]]],[11,"is_dnresume","","Checks if the value of the field is `DNRESUME`",4490,[[]]],[11,"is_upresume","","Checks if the value of the field is `UPRESUME`",4490,[[]]],[11,"is_reset","","Checks if the value of the field is `RESET`",4490,[[]]],[11,"fsmstate","atsamd51g::generic","Bits 0:6 - Fine State Machine Status",6,[[],["fsmstate_r",6]]],[11,"fsmstate","atsamd51g::usb::host::fsmstatus","Bits 0:6 - Fine State Machine Status",4491,[[],["fsmstate_r",6]]],[0,"fnum","atsamd51g::usb::host","HOST Host Frame Number",null,null],[3,"MFNUM_W","atsamd51g::usb::host::fnum","Write proxy for field `MFNUM`",null,null],[3,"FNUM_W","","Write proxy for field `FNUM`",null,null],[6,"R","","Reader of register FNUM",null,null],[6,"W","","Writer for register FNUM",null,null],[6,"MFNUM_R","","Reader of field `MFNUM`",null,null],[6,"FNUM_R","","Reader of field `FNUM`",null,null],[11,"bits","","Writes raw bits to the field",4492,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4493,[[],["w",6]]],[11,"mfnum","atsamd51g::generic","Bits 0:2 - Micro Frame Number",6,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",6,[[],["fnum_r",6]]],[11,"mfnum","atsamd51g::usb::host::fnum","Bits 0:2 - Micro Frame Number",4494,[[],["mfnum_r",6]]],[11,"fnum","","Bits 3:13 - Frame Number",4494,[[],["fnum_r",6]]],[11,"mfnum","atsamd51g::generic","Bits 0:2 - Micro Frame Number",7,[[],["mfnum_w",3]]],[11,"fnum","","Bits 3:13 - Frame Number",7,[[],["fnum_w",3]]],[11,"mfnum","atsamd51g::usb::host::fnum","Bits 0:2 - Micro Frame Number",4495,[[],["mfnum_w",3]]],[11,"fnum","","Bits 3:13 - Frame Number",4495,[[],["fnum_w",3]]],[0,"flenhigh","atsamd51g::usb::host","HOST Host Frame Length",null,null],[6,"R","atsamd51g::usb::host::flenhigh","Reader of register FLENHIGH",null,null],[6,"FLENHIGH_R","","Reader of field `FLENHIGH`",null,null],[11,"flenhigh","atsamd51g::generic","Bits 0:7 - Frame Length",6,[[],["flenhigh_r",6]]],[11,"flenhigh","atsamd51g::usb::host::flenhigh","Bits 0:7 - Frame Length",4496,[[],["flenhigh_r",6]]],[0,"intenclr","atsamd51g::usb::host","HOST Host Interrupt Enable Clear",null,null],[3,"HSOF_W","atsamd51g::usb::host::intenclr","Write proxy for field `HSOF`",null,null],[3,"RST_W","","Write proxy for field `RST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"DNRSM_W","","Write proxy for field `DNRSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"DCONN_W","","Write proxy for field `DCONN`",null,null],[3,"DDISC_W","","Write proxy for field `DDISC`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"HSOF_R","","Reader of field `HSOF`",null,null],[6,"RST_R","","Reader of field `RST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"DNRSM_R","","Reader of field `DNRSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"DCONN_R","","Reader of field `DCONN`",null,null],[6,"DDISC_R","","Reader of field `DDISC`",null,null],[11,"set_bit","","Sets the field bit",4497,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4497,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4497,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4498,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4498,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4498,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4499,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4499,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4499,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4500,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4500,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4500,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4501,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4501,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4501,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4502,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4502,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4502,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4503,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4503,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4503,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4504,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4504,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4504,[[],["w",6]]],[11,"hsof","atsamd51g::generic","Bit 2 - Host Start Of Frame Interrupt Disable",6,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",6,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",6,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",6,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",6,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",6,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",6,[[],["ddisc_r",6]]],[11,"hsof","atsamd51g::usb::host::intenclr","Bit 2 - Host Start Of Frame Interrupt Disable",4505,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",4505,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",4505,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",4505,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",4505,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",4505,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",4505,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",4505,[[],["ddisc_r",6]]],[11,"hsof","atsamd51g::generic","Bit 2 - Host Start Of Frame Interrupt Disable",7,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",7,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",7,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",7,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",7,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",7,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",7,[[],["ddisc_w",3]]],[11,"hsof","atsamd51g::usb::host::intenclr","Bit 2 - Host Start Of Frame Interrupt Disable",4506,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - BUS Reset Interrupt Disable",4506,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Disable",4506,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to Device Interrupt Disable",4506,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from Device Interrupt Disable",4506,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Disable",4506,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection Interrupt Disable",4506,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Disable",4506,[[],["ddisc_w",3]]],[0,"intenset","atsamd51g::usb::host","HOST Host Interrupt Enable Set",null,null],[3,"HSOF_W","atsamd51g::usb::host::intenset","Write proxy for field `HSOF`",null,null],[3,"RST_W","","Write proxy for field `RST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"DNRSM_W","","Write proxy for field `DNRSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"DCONN_W","","Write proxy for field `DCONN`",null,null],[3,"DDISC_W","","Write proxy for field `DDISC`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"HSOF_R","","Reader of field `HSOF`",null,null],[6,"RST_R","","Reader of field `RST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"DNRSM_R","","Reader of field `DNRSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"DCONN_R","","Reader of field `DCONN`",null,null],[6,"DDISC_R","","Reader of field `DDISC`",null,null],[11,"set_bit","","Sets the field bit",4507,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4507,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4507,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4508,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4508,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4508,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4509,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4509,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4509,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4510,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4510,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4510,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4511,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4511,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4511,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4512,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4512,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4512,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4513,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4513,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4513,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4514,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4514,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4514,[[],["w",6]]],[11,"hsof","atsamd51g::generic","Bit 2 - Host Start Of Frame Interrupt Enable",6,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",6,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",6,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",6,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",6,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",6,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",6,[[],["ddisc_r",6]]],[11,"hsof","atsamd51g::usb::host::intenset","Bit 2 - Host Start Of Frame Interrupt Enable",4515,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",4515,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",4515,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",4515,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",4515,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",4515,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",4515,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",4515,[[],["ddisc_r",6]]],[11,"hsof","atsamd51g::generic","Bit 2 - Host Start Of Frame Interrupt Enable",7,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",7,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",7,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",7,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",7,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",7,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",7,[[],["ddisc_w",3]]],[11,"hsof","atsamd51g::usb::host::intenset","Bit 2 - Host Start Of Frame Interrupt Enable",4516,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset Interrupt Enable",4516,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up Interrupt Enable",4516,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - DownStream to the Device Interrupt Enable",4516,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume fromthe device Interrupt Enable",4516,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access Interrupt Enable",4516,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Link Power Management Interrupt Enable",4516,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection Interrupt Enable",4516,[[],["ddisc_w",3]]],[0,"intflag","atsamd51g::usb::host","HOST Host Interrupt Flag",null,null],[3,"HSOF_W","atsamd51g::usb::host::intflag","Write proxy for field `HSOF`",null,null],[3,"RST_W","","Write proxy for field `RST`",null,null],[3,"WAKEUP_W","","Write proxy for field `WAKEUP`",null,null],[3,"DNRSM_W","","Write proxy for field `DNRSM`",null,null],[3,"UPRSM_W","","Write proxy for field `UPRSM`",null,null],[3,"RAMACER_W","","Write proxy for field `RAMACER`",null,null],[3,"DCONN_W","","Write proxy for field `DCONN`",null,null],[3,"DDISC_W","","Write proxy for field `DDISC`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"HSOF_R","","Reader of field `HSOF`",null,null],[6,"RST_R","","Reader of field `RST`",null,null],[6,"WAKEUP_R","","Reader of field `WAKEUP`",null,null],[6,"DNRSM_R","","Reader of field `DNRSM`",null,null],[6,"UPRSM_R","","Reader of field `UPRSM`",null,null],[6,"RAMACER_R","","Reader of field `RAMACER`",null,null],[6,"DCONN_R","","Reader of field `DCONN`",null,null],[6,"DDISC_R","","Reader of field `DDISC`",null,null],[11,"set_bit","","Sets the field bit",4517,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4517,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4517,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4518,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4518,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4518,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4519,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4519,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4519,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4520,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4520,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4520,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4521,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4521,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4521,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4522,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4522,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4522,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4523,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4523,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4523,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4524,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4524,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4524,[[],["w",6]]],[11,"hsof","atsamd51g::generic","Bit 2 - Host Start Of Frame",6,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset",6,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",6,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - Downstream",6,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",6,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",6,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection",6,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection",6,[[],["ddisc_r",6]]],[11,"hsof","atsamd51g::usb::host::intflag","Bit 2 - Host Start Of Frame",4525,[[],["hsof_r",6]]],[11,"rst","","Bit 3 - Bus Reset",4525,[[],["rst_r",6]]],[11,"wakeup","","Bit 4 - Wake Up",4525,[[],["wakeup_r",6]]],[11,"dnrsm","","Bit 5 - Downstream",4525,[[],["dnrsm_r",6]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",4525,[[],["uprsm_r",6]]],[11,"ramacer","","Bit 7 - Ram Access",4525,[[],["ramacer_r",6]]],[11,"dconn","","Bit 8 - Device Connection",4525,[[],["dconn_r",6]]],[11,"ddisc","","Bit 9 - Device Disconnection",4525,[[],["ddisc_r",6]]],[11,"hsof","atsamd51g::generic","Bit 2 - Host Start Of Frame",7,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset",7,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",7,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - Downstream",7,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",7,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",7,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection",7,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection",7,[[],["ddisc_w",3]]],[11,"hsof","atsamd51g::usb::host::intflag","Bit 2 - Host Start Of Frame",4526,[[],["hsof_w",3]]],[11,"rst","","Bit 3 - Bus Reset",4526,[[],["rst_w",3]]],[11,"wakeup","","Bit 4 - Wake Up",4526,[[],["wakeup_w",3]]],[11,"dnrsm","","Bit 5 - Downstream",4526,[[],["dnrsm_w",3]]],[11,"uprsm","","Bit 6 - Upstream Resume from the Device",4526,[[],["uprsm_w",3]]],[11,"ramacer","","Bit 7 - Ram Access",4526,[[],["ramacer_w",3]]],[11,"dconn","","Bit 8 - Device Connection",4526,[[],["dconn_w",3]]],[11,"ddisc","","Bit 9 - Device Disconnection",4526,[[],["ddisc_w",3]]],[0,"pintsmry","atsamd51g::usb::host","HOST Pipe Interrupt Summary",null,null],[6,"R","atsamd51g::usb::host::pintsmry","Reader of register PINTSMRY",null,null],[6,"EPINT0_R","","Reader of field `EPINT0`",null,null],[6,"EPINT1_R","","Reader of field `EPINT1`",null,null],[6,"EPINT2_R","","Reader of field `EPINT2`",null,null],[6,"EPINT3_R","","Reader of field `EPINT3`",null,null],[6,"EPINT4_R","","Reader of field `EPINT4`",null,null],[6,"EPINT5_R","","Reader of field `EPINT5`",null,null],[6,"EPINT6_R","","Reader of field `EPINT6`",null,null],[6,"EPINT7_R","","Reader of field `EPINT7`",null,null],[11,"epint0","atsamd51g::generic","Bit 0 - Pipe 0 Interrupt",6,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - Pipe 1 Interrupt",6,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - Pipe 2 Interrupt",6,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - Pipe 3 Interrupt",6,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - Pipe 4 Interrupt",6,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - Pipe 5 Interrupt",6,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - Pipe 6 Interrupt",6,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - Pipe 7 Interrupt",6,[[],["epint7_r",6]]],[11,"epint0","atsamd51g::usb::host::pintsmry","Bit 0 - Pipe 0 Interrupt",4527,[[],["epint0_r",6]]],[11,"epint1","","Bit 1 - Pipe 1 Interrupt",4527,[[],["epint1_r",6]]],[11,"epint2","","Bit 2 - Pipe 2 Interrupt",4527,[[],["epint2_r",6]]],[11,"epint3","","Bit 3 - Pipe 3 Interrupt",4527,[[],["epint3_r",6]]],[11,"epint4","","Bit 4 - Pipe 4 Interrupt",4527,[[],["epint4_r",6]]],[11,"epint5","","Bit 5 - Pipe 5 Interrupt",4527,[[],["epint5_r",6]]],[11,"epint6","","Bit 6 - Pipe 6 Interrupt",4527,[[],["epint6_r",6]]],[11,"epint7","","Bit 7 - Pipe 7 Interrupt",4527,[[],["epint7_r",6]]],[0,"descadd","atsamd51g::usb::host","Descriptor Address",null,null],[3,"DESCADD_W","atsamd51g::usb::host::descadd","Write proxy for field `DESCADD`",null,null],[6,"R","","Reader of register DESCADD",null,null],[6,"W","","Writer for register DESCADD",null,null],[6,"DESCADD_R","","Reader of field `DESCADD`",null,null],[11,"bits","","Writes raw bits to the field",4528,[[],["w",6]]],[11,"descadd","atsamd51g::generic","Bits 0:31 - Descriptor Address Value",6,[[],["descadd_r",6]]],[11,"descadd","atsamd51g::usb::host::descadd","Bits 0:31 - Descriptor Address Value",4529,[[],["descadd_r",6]]],[11,"descadd","atsamd51g::generic","Bits 0:31 - Descriptor Address Value",7,[[],["descadd_w",3]]],[11,"descadd","atsamd51g::usb::host::descadd","Bits 0:31 - Descriptor Address Value",4530,[[],["descadd_w",3]]],[0,"padcal","atsamd51g::usb::host","USB PAD Calibration",null,null],[3,"TRANSP_W","atsamd51g::usb::host::padcal","Write proxy for field `TRANSP`",null,null],[3,"TRANSN_W","","Write proxy for field `TRANSN`",null,null],[3,"TRIM_W","","Write proxy for field `TRIM`",null,null],[6,"R","","Reader of register PADCAL",null,null],[6,"W","","Writer for register PADCAL",null,null],[6,"TRANSP_R","","Reader of field `TRANSP`",null,null],[6,"TRANSN_R","","Reader of field `TRANSN`",null,null],[6,"TRIM_R","","Reader of field `TRIM`",null,null],[11,"bits","","Writes raw bits to the field",4531,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4532,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4533,[[],["w",6]]],[11,"transp","atsamd51g::generic","Bits 0:4 - USB Pad Transp calibration",6,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",6,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",6,[[],["trim_r",6]]],[11,"transp","atsamd51g::usb::host::padcal","Bits 0:4 - USB Pad Transp calibration",4534,[[],["transp_r",6]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",4534,[[],["transn_r",6]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",4534,[[],["trim_r",6]]],[11,"transp","atsamd51g::generic","Bits 0:4 - USB Pad Transp calibration",7,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",7,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",7,[[],["trim_w",3]]],[11,"transp","atsamd51g::usb::host::padcal","Bits 0:4 - USB Pad Transp calibration",4535,[[],["transp_w",3]]],[11,"transn","","Bits 6:10 - USB Pad Transn calibration",4535,[[],["transn_w",3]]],[11,"trim","","Bits 12:14 - USB Pad Trim calibration",4535,[[],["trim_w",3]]],[0,"host_pipe","atsamd51g::usb::host","Register block HOST_PIPE[%s]",null,null],[0,"pcfg","atsamd51g::usb::host::host_pipe","HOST_PIPE End Point Configuration",null,null],[3,"PTOKEN_W","atsamd51g::usb::host::host_pipe::pcfg","Write proxy for field `PTOKEN`",null,null],[3,"BK_W","","Write proxy for field `BK`",null,null],[3,"PTYPE_W","","Write proxy for field `PTYPE`",null,null],[6,"R","","Reader of register PCFG",null,null],[6,"W","","Writer for register PCFG",null,null],[6,"PTOKEN_R","","Reader of field `PTOKEN`",null,null],[6,"BK_R","","Reader of field `BK`",null,null],[6,"PTYPE_R","","Reader of field `PTYPE`",null,null],[11,"bits","","Writes raw bits to the field",4536,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4537,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4537,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4537,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4538,[[],["w",6]]],[11,"ptoken","atsamd51g::generic","Bits 0:1 - Pipe Token",6,[[],["ptoken_r",6]]],[11,"bk","","Bit 2 - Pipe Bank",6,[[],["bk_r",6]]],[11,"ptype","","Bits 3:5 - Pipe Type",6,[[],["ptype_r",6]]],[11,"ptoken","atsamd51g::usb::host::host_pipe::pcfg","Bits 0:1 - Pipe Token",4539,[[],["ptoken_r",6]]],[11,"bk","","Bit 2 - Pipe Bank",4539,[[],["bk_r",6]]],[11,"ptype","","Bits 3:5 - Pipe Type",4539,[[],["ptype_r",6]]],[11,"ptoken","atsamd51g::generic","Bits 0:1 - Pipe Token",7,[[],["ptoken_w",3]]],[11,"bk","","Bit 2 - Pipe Bank",7,[[],["bk_w",3]]],[11,"ptype","","Bits 3:5 - Pipe Type",7,[[],["ptype_w",3]]],[11,"ptoken","atsamd51g::usb::host::host_pipe::pcfg","Bits 0:1 - Pipe Token",4540,[[],["ptoken_w",3]]],[11,"bk","","Bit 2 - Pipe Bank",4540,[[],["bk_w",3]]],[11,"ptype","","Bits 3:5 - Pipe Type",4540,[[],["ptype_w",3]]],[0,"binterval","atsamd51g::usb::host::host_pipe","HOST_PIPE Bus Access Period of Pipe",null,null],[3,"BITINTERVAL_W","atsamd51g::usb::host::host_pipe::binterval","Write proxy for field `BITINTERVAL`",null,null],[6,"R","","Reader of register BINTERVAL",null,null],[6,"W","","Writer for register BINTERVAL",null,null],[6,"BITINTERVAL_R","","Reader of field `BITINTERVAL`",null,null],[11,"bits","","Writes raw bits to the field",4541,[[],["w",6]]],[11,"bitinterval","atsamd51g::generic","Bits 0:7 - Bit Interval",6,[[],["bitinterval_r",6]]],[11,"bitinterval","atsamd51g::usb::host::host_pipe::binterval","Bits 0:7 - Bit Interval",4542,[[],["bitinterval_r",6]]],[11,"bitinterval","atsamd51g::generic","Bits 0:7 - Bit Interval",7,[[],["bitinterval_w",3]]],[11,"bitinterval","atsamd51g::usb::host::host_pipe::binterval","Bits 0:7 - Bit Interval",4543,[[],["bitinterval_w",3]]],[0,"pstatusclr","atsamd51g::usb::host::host_pipe","HOST_PIPE End Point Pipe Status Clear",null,null],[3,"DTGL_W","atsamd51g::usb::host::host_pipe::pstatusclr","Write proxy for field `DTGL`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"PFREEZE_W","","Write proxy for field `PFREEZE`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register PSTATUSCLR",null,null],[11,"set_bit","","Sets the field bit",4544,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4544,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4544,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4545,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4545,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4545,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4546,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4546,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4546,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4547,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4547,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4547,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4548,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4548,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4548,[[],["w",6]]],[11,"dtgl","atsamd51g::generic","Bit 0 - Data Toggle clear",7,[[],["dtgl_w",3]]],[11,"curbk","","Bit 2 - Curren Bank clear",7,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Clear",7,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",7,[[],["bk1rdy_w",3]]],[11,"dtgl","atsamd51g::usb::host::host_pipe::pstatusclr","Bit 0 - Data Toggle clear",4549,[[],["dtgl_w",3]]],[11,"curbk","","Bit 2 - Curren Bank clear",4549,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Clear",4549,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Clear",4549,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Clear",4549,[[],["bk1rdy_w",3]]],[0,"pstatusset","atsamd51g::usb::host::host_pipe","HOST_PIPE End Point Pipe Status Set",null,null],[3,"DTGL_W","atsamd51g::usb::host::host_pipe::pstatusset","Write proxy for field `DTGL`",null,null],[3,"CURBK_W","","Write proxy for field `CURBK`",null,null],[3,"PFREEZE_W","","Write proxy for field `PFREEZE`",null,null],[3,"BK0RDY_W","","Write proxy for field `BK0RDY`",null,null],[3,"BK1RDY_W","","Write proxy for field `BK1RDY`",null,null],[6,"W","","Writer for register PSTATUSSET",null,null],[11,"set_bit","","Sets the field bit",4550,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4550,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4550,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4551,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4551,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4551,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4552,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4552,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4552,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4553,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4553,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4553,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4554,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4554,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4554,[[],["w",6]]],[11,"dtgl","atsamd51g::generic","Bit 0 - Data Toggle Set",7,[[],["dtgl_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",7,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Set",7,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",7,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",7,[[],["bk1rdy_w",3]]],[11,"dtgl","atsamd51g::usb::host::host_pipe::pstatusset","Bit 0 - Data Toggle Set",4555,[[],["dtgl_w",3]]],[11,"curbk","","Bit 2 - Current Bank Set",4555,[[],["curbk_w",3]]],[11,"pfreeze","","Bit 4 - Pipe Freeze Set",4555,[[],["pfreeze_w",3]]],[11,"bk0rdy","","Bit 6 - Bank 0 Ready Set",4555,[[],["bk0rdy_w",3]]],[11,"bk1rdy","","Bit 7 - Bank 1 Ready Set",4555,[[],["bk1rdy_w",3]]],[0,"pstatus","atsamd51g::usb::host::host_pipe","HOST_PIPE End Point Pipe Status",null,null],[6,"R","atsamd51g::usb::host::host_pipe::pstatus","Reader of register PSTATUS",null,null],[6,"DTGL_R","","Reader of field `DTGL`",null,null],[6,"CURBK_R","","Reader of field `CURBK`",null,null],[6,"PFREEZE_R","","Reader of field `PFREEZE`",null,null],[6,"BK0RDY_R","","Reader of field `BK0RDY`",null,null],[6,"BK1RDY_R","","Reader of field `BK1RDY`",null,null],[11,"dtgl","atsamd51g::generic","Bit 0 - Data Toggle",6,[[],["dtgl_r",6]]],[11,"curbk","","Bit 2 - Current Bank",6,[[],["curbk_r",6]]],[11,"pfreeze","","Bit 4 - Pipe Freeze",6,[[],["pfreeze_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",6,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",6,[[],["bk1rdy_r",6]]],[11,"dtgl","atsamd51g::usb::host::host_pipe::pstatus","Bit 0 - Data Toggle",4556,[[],["dtgl_r",6]]],[11,"curbk","","Bit 2 - Current Bank",4556,[[],["curbk_r",6]]],[11,"pfreeze","","Bit 4 - Pipe Freeze",4556,[[],["pfreeze_r",6]]],[11,"bk0rdy","","Bit 6 - Bank 0 ready",4556,[[],["bk0rdy_r",6]]],[11,"bk1rdy","","Bit 7 - Bank 1 ready",4556,[[],["bk1rdy_r",6]]],[0,"pintflag","atsamd51g::usb::host::host_pipe","HOST_PIPE Pipe Interrupt Flag",null,null],[3,"TRCPT0_W","atsamd51g::usb::host::host_pipe::pintflag","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL_W","","Write proxy for field `TRFAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[3,"TXSTP_W","","Write proxy for field `TXSTP`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[6,"R","","Reader of register PINTFLAG",null,null],[6,"W","","Writer for register PINTFLAG",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL_R","","Reader of field `TRFAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"TXSTP_R","","Reader of field `TXSTP`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[11,"set_bit","","Sets the field bit",4557,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4557,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4557,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4558,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4558,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4558,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4559,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4559,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4559,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4560,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4560,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4560,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4561,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4561,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4561,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4562,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4562,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4562,[[],["w",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Flag",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",6,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",6,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",6,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",6,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",6,[[],["stall_r",6]]],[11,"trcpt0","atsamd51g::usb::host::host_pipe::pintflag","Bit 0 - Transfer Complete 0 Interrupt Flag",4563,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",4563,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",4563,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",4563,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",4563,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",4563,[[],["stall_r",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Flag",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",7,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",7,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",7,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",7,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",7,[[],["stall_w",3]]],[11,"trcpt0","atsamd51g::usb::host::host_pipe::pintflag","Bit 0 - Transfer Complete 0 Interrupt Flag",4564,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Flag",4564,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Flag",4564,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Flag",4564,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Flag",4564,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Flag",4564,[[],["stall_w",3]]],[0,"pintenclr","atsamd51g::usb::host::host_pipe","HOST_PIPE Pipe Interrupt Flag Clear",null,null],[3,"TRCPT0_W","atsamd51g::usb::host::host_pipe::pintenclr","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL_W","","Write proxy for field `TRFAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[3,"TXSTP_W","","Write proxy for field `TXSTP`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[6,"R","","Reader of register PINTENCLR",null,null],[6,"W","","Writer for register PINTENCLR",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL_R","","Reader of field `TRFAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"TXSTP_R","","Reader of field `TXSTP`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[11,"set_bit","","Sets the field bit",4565,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4565,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4565,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4566,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4566,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4566,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4567,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4567,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4567,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4568,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4568,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4568,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4569,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4569,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4569,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4570,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4570,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4570,[[],["w",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Disable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",6,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",6,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",6,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",6,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",6,[[],["stall_r",6]]],[11,"trcpt0","atsamd51g::usb::host::host_pipe::pintenclr","Bit 0 - Transfer Complete 0 Disable",4571,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",4571,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",4571,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",4571,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",4571,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",4571,[[],["stall_r",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Disable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",7,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",7,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",7,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",7,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",7,[[],["stall_w",3]]],[11,"trcpt0","atsamd51g::usb::host::host_pipe::pintenclr","Bit 0 - Transfer Complete 0 Disable",4572,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Disable",4572,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Disable",4572,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Disable",4572,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Disable",4572,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Inetrrupt Disable",4572,[[],["stall_w",3]]],[0,"pintenset","atsamd51g::usb::host::host_pipe","HOST_PIPE Pipe Interrupt Flag Set",null,null],[3,"TRCPT0_W","atsamd51g::usb::host::host_pipe::pintenset","Write proxy for field `TRCPT0`",null,null],[3,"TRCPT1_W","","Write proxy for field `TRCPT1`",null,null],[3,"TRFAIL_W","","Write proxy for field `TRFAIL`",null,null],[3,"PERR_W","","Write proxy for field `PERR`",null,null],[3,"TXSTP_W","","Write proxy for field `TXSTP`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[6,"R","","Reader of register PINTENSET",null,null],[6,"W","","Writer for register PINTENSET",null,null],[6,"TRCPT0_R","","Reader of field `TRCPT0`",null,null],[6,"TRCPT1_R","","Reader of field `TRCPT1`",null,null],[6,"TRFAIL_R","","Reader of field `TRFAIL`",null,null],[6,"PERR_R","","Reader of field `PERR`",null,null],[6,"TXSTP_R","","Reader of field `TXSTP`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[11,"set_bit","","Sets the field bit",4573,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4573,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4573,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4574,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4574,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4574,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4575,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4575,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4575,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4576,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4576,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4576,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4577,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4577,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4577,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4578,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4578,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4578,[[],["w",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",6,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",6,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",6,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",6,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",6,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",6,[[],["stall_r",6]]],[11,"trcpt0","atsamd51g::usb::host::host_pipe::pintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",4579,[[],["trcpt0_r",6]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",4579,[[],["trcpt1_r",6]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",4579,[[],["trfail_r",6]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",4579,[[],["perr_r",6]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",4579,[[],["txstp_r",6]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",4579,[[],["stall_r",6]]],[11,"trcpt0","atsamd51g::generic","Bit 0 - Transfer Complete 0 Interrupt Enable",7,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",7,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",7,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",7,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",7,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",7,[[],["stall_w",3]]],[11,"trcpt0","atsamd51g::usb::host::host_pipe::pintenset","Bit 0 - Transfer Complete 0 Interrupt Enable",4580,[[],["trcpt0_w",3]]],[11,"trcpt1","","Bit 1 - Transfer Complete 1 Interrupt Enable",4580,[[],["trcpt1_w",3]]],[11,"trfail","","Bit 2 - Error Flow Interrupt Enable",4580,[[],["trfail_w",3]]],[11,"perr","","Bit 3 - Pipe Error Interrupt Enable",4580,[[],["perr_w",3]]],[11,"txstp","","Bit 4 - Transmit Setup Interrupt Enable",4580,[[],["txstp_w",3]]],[11,"stall","","Bit 5 - Stall Interrupt Enable",4580,[[],["stall_w",3]]],[6,"PCFG","atsamd51g::usb::host::host_pipe","HOST_PIPE End Point Configuration",null,null],[6,"BINTERVAL","","HOST_PIPE Bus Access Period of Pipe",null,null],[6,"PSTATUSCLR","","HOST_PIPE End Point Pipe Status Clear",null,null],[6,"PSTATUSSET","","HOST_PIPE End Point Pipe Status Set",null,null],[6,"PSTATUS","","HOST_PIPE End Point Pipe Status",null,null],[6,"PINTFLAG","","HOST_PIPE Pipe Interrupt Flag",null,null],[6,"PINTENCLR","","HOST_PIPE Pipe Interrupt Flag Clear",null,null],[6,"PINTENSET","","HOST_PIPE Pipe Interrupt Flag Set",null,null],[6,"CTRLA","atsamd51g::usb::host","Control A",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"QOSCTRL","","USB Quality Of Service",null,null],[6,"CTRLB","","HOST Control B",null,null],[6,"HSOFC","","HOST Host Start Of Frame Control",null,null],[6,"STATUS","","HOST Status",null,null],[6,"FSMSTATUS","","Finite State Machine Status",null,null],[6,"FNUM","","HOST Host Frame Number",null,null],[6,"FLENHIGH","","HOST Host Frame Length",null,null],[6,"INTENCLR","","HOST Host Interrupt Enable Clear",null,null],[6,"INTENSET","","HOST Host Interrupt Enable Set",null,null],[6,"INTFLAG","","HOST Host Interrupt Flag",null,null],[6,"PINTSMRY","","HOST Pipe Interrupt Summary",null,null],[6,"DESCADD","","Descriptor Address",null,null],[6,"PADCAL","","USB PAD Calibration",null,null],[11,"host","atsamd51g::usb","0x00 - USB is Host",4581,[[],["host",3]]],[11,"host_mut","","0x00 - USB is Host",4581,[[],["host",3]]],[11,"device","","0x00 - USB is Device",4581,[[],["device",3]]],[11,"device_mut","","0x00 - USB is Device",4581,[[],["device",3]]],[0,"wdt","atsamd51g","Watchdog Timer",null,null],[3,"RegisterBlock","atsamd51g::wdt","Register block",null,null],[12,"ctrla","","0x00 - Control",4582,null],[12,"config","","0x01 - Configuration",4582,null],[12,"ewctrl","","0x02 - Early Warning Interrupt Control",4582,null],[12,"intenclr","","0x04 - Interrupt Enable Clear",4582,null],[12,"intenset","","0x05 - Interrupt Enable Set",4582,null],[12,"intflag","","0x06 - Interrupt Flag Status and Clear",4582,null],[12,"syncbusy","","0x08 - Synchronization Busy",4582,null],[12,"clear","","0x0c - Clear",4582,null],[0,"ctrla","","Control",null,null],[3,"ENABLE_W","atsamd51g::wdt::ctrla","Write proxy for field `ENABLE`",null,null],[3,"WEN_W","","Write proxy for field `WEN`",null,null],[3,"ALWAYSON_W","","Write proxy for field `ALWAYSON`",null,null],[6,"R","","Reader of register CTRLA",null,null],[6,"W","","Writer for register CTRLA",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"WEN_R","","Reader of field `WEN`",null,null],[6,"ALWAYSON_R","","Reader of field `ALWAYSON`",null,null],[11,"set_bit","","Sets the field bit",4583,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4583,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4583,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4584,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4584,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4584,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4585,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4585,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4585,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",6,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",6,[[],["wen_r",6]]],[11,"alwayson","","Bit 7 - Always-On",6,[[],["alwayson_r",6]]],[11,"enable","atsamd51g::wdt::ctrla","Bit 1 - Enable",4586,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",4586,[[],["wen_r",6]]],[11,"alwayson","","Bit 7 - Always-On",4586,[[],["alwayson_r",6]]],[11,"enable","atsamd51g::generic","Bit 1 - Enable",7,[[],["enable_w",3]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",7,[[],["wen_w",3]]],[11,"alwayson","","Bit 7 - Always-On",7,[[],["alwayson_w",3]]],[11,"enable","atsamd51g::wdt::ctrla","Bit 1 - Enable",4587,[[],["enable_w",3]]],[11,"wen","","Bit 2 - Watchdog Timer Window Mode Enable",4587,[[],["wen_w",3]]],[11,"alwayson","","Bit 7 - Always-On",4587,[[],["alwayson_w",3]]],[0,"config","atsamd51g::wdt","Configuration",null,null],[3,"PER_W","atsamd51g::wdt::config","Write proxy for field `PER`",null,null],[3,"WINDOW_W","","Write proxy for field `WINDOW`",null,null],[4,"PER_A","","Time-Out Period",null,null],[13,"CYC8","","0: 8 clock cycles",4588,null],[13,"CYC16","","1: 16 clock cycles",4588,null],[13,"CYC32","","2: 32 clock cycles",4588,null],[13,"CYC64","","3: 64 clock cycles",4588,null],[13,"CYC128","","4: 128 clock cycles",4588,null],[13,"CYC256","","5: 256 clock cycles",4588,null],[13,"CYC512","","6: 512 clock cycles",4588,null],[13,"CYC1024","","7: 1024 clock cycles",4588,null],[13,"CYC2048","","8: 2048 clock cycles",4588,null],[13,"CYC4096","","9: 4096 clock cycles",4588,null],[13,"CYC8192","","10: 8192 clock cycles",4588,null],[13,"CYC16384","","11: 16384 clock cycles",4588,null],[4,"WINDOW_A","","Window Mode Time-Out Period",null,null],[13,"CYC8","","0: 8 clock cycles",4589,null],[13,"CYC16","","1: 16 clock cycles",4589,null],[13,"CYC32","","2: 32 clock cycles",4589,null],[13,"CYC64","","3: 64 clock cycles",4589,null],[13,"CYC128","","4: 128 clock cycles",4589,null],[13,"CYC256","","5: 256 clock cycles",4589,null],[13,"CYC512","","6: 512 clock cycles",4589,null],[13,"CYC1024","","7: 1024 clock cycles",4589,null],[13,"CYC2048","","8: 2048 clock cycles",4589,null],[13,"CYC4096","","9: 4096 clock cycles",4589,null],[13,"CYC8192","","10: 8192 clock cycles",4589,null],[13,"CYC16384","","11: 16384 clock cycles",4589,null],[6,"R","","Reader of register CONFIG",null,null],[6,"W","","Writer for register CONFIG",null,null],[6,"PER_R","","Reader of field `PER`",null,null],[6,"WINDOW_R","","Reader of field `WINDOW`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["per_a",4],["variant",4]]]],[11,"is_cyc8","","Checks if the value of the field is `CYC8`",6,[[]]],[11,"is_cyc16","","Checks if the value of the field is `CYC16`",6,[[]]],[11,"is_cyc32","","Checks if the value of the field is `CYC32`",6,[[]]],[11,"is_cyc64","","Checks if the value of the field is `CYC64`",6,[[]]],[11,"is_cyc128","","Checks if the value of the field is `CYC128`",6,[[]]],[11,"is_cyc256","","Checks if the value of the field is `CYC256`",6,[[]]],[11,"is_cyc512","","Checks if the value of the field is `CYC512`",6,[[]]],[11,"is_cyc1024","","Checks if the value of the field is `CYC1024`",6,[[]]],[11,"is_cyc2048","","Checks if the value of the field is `CYC2048`",6,[[]]],[11,"is_cyc4096","","Checks if the value of the field is `CYC4096`",6,[[]]],[11,"is_cyc8192","","Checks if the value of the field is `CYC8192`",6,[[]]],[11,"is_cyc16384","","Checks if the value of the field is `CYC16384`",6,[[]]],[11,"variant","atsamd51g::wdt::config","Get enumerated values variant",4590,[[],[["per_a",4],["variant",4]]]],[11,"is_cyc8","","Checks if the value of the field is `CYC8`",4590,[[]]],[11,"is_cyc16","","Checks if the value of the field is `CYC16`",4590,[[]]],[11,"is_cyc32","","Checks if the value of the field is `CYC32`",4590,[[]]],[11,"is_cyc64","","Checks if the value of the field is `CYC64`",4590,[[]]],[11,"is_cyc128","","Checks if the value of the field is `CYC128`",4590,[[]]],[11,"is_cyc256","","Checks if the value of the field is `CYC256`",4590,[[]]],[11,"is_cyc512","","Checks if the value of the field is `CYC512`",4590,[[]]],[11,"is_cyc1024","","Checks if the value of the field is `CYC1024`",4590,[[]]],[11,"is_cyc2048","","Checks if the value of the field is `CYC2048`",4590,[[]]],[11,"is_cyc4096","","Checks if the value of the field is `CYC4096`",4590,[[]]],[11,"is_cyc8192","","Checks if the value of the field is `CYC8192`",4590,[[]]],[11,"is_cyc16384","","Checks if the value of the field is `CYC16384`",4590,[[]]],[11,"variant","","Writes `variant` to the field",4591,[[["per_a",4]],["w",6]]],[11,"cyc8","","8 clock cycles",4591,[[],["w",6]]],[11,"cyc16","","16 clock cycles",4591,[[],["w",6]]],[11,"cyc32","","32 clock cycles",4591,[[],["w",6]]],[11,"cyc64","","64 clock cycles",4591,[[],["w",6]]],[11,"cyc128","","128 clock cycles",4591,[[],["w",6]]],[11,"cyc256","","256 clock cycles",4591,[[],["w",6]]],[11,"cyc512","","512 clock cycles",4591,[[],["w",6]]],[11,"cyc1024","","1024 clock cycles",4591,[[],["w",6]]],[11,"cyc2048","","2048 clock cycles",4591,[[],["w",6]]],[11,"cyc4096","","4096 clock cycles",4591,[[],["w",6]]],[11,"cyc8192","","8192 clock cycles",4591,[[],["w",6]]],[11,"cyc16384","","16384 clock cycles",4591,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4591,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["window_a",4],["variant",4]]]],[11,"is_cyc8","","Checks if the value of the field is `CYC8`",6,[[]]],[11,"is_cyc16","","Checks if the value of the field is `CYC16`",6,[[]]],[11,"is_cyc32","","Checks if the value of the field is `CYC32`",6,[[]]],[11,"is_cyc64","","Checks if the value of the field is `CYC64`",6,[[]]],[11,"is_cyc128","","Checks if the value of the field is `CYC128`",6,[[]]],[11,"is_cyc256","","Checks if the value of the field is `CYC256`",6,[[]]],[11,"is_cyc512","","Checks if the value of the field is `CYC512`",6,[[]]],[11,"is_cyc1024","","Checks if the value of the field is `CYC1024`",6,[[]]],[11,"is_cyc2048","","Checks if the value of the field is `CYC2048`",6,[[]]],[11,"is_cyc4096","","Checks if the value of the field is `CYC4096`",6,[[]]],[11,"is_cyc8192","","Checks if the value of the field is `CYC8192`",6,[[]]],[11,"is_cyc16384","","Checks if the value of the field is `CYC16384`",6,[[]]],[11,"variant","atsamd51g::wdt::config","Get enumerated values variant",4592,[[],[["window_a",4],["variant",4]]]],[11,"is_cyc8","","Checks if the value of the field is `CYC8`",4592,[[]]],[11,"is_cyc16","","Checks if the value of the field is `CYC16`",4592,[[]]],[11,"is_cyc32","","Checks if the value of the field is `CYC32`",4592,[[]]],[11,"is_cyc64","","Checks if the value of the field is `CYC64`",4592,[[]]],[11,"is_cyc128","","Checks if the value of the field is `CYC128`",4592,[[]]],[11,"is_cyc256","","Checks if the value of the field is `CYC256`",4592,[[]]],[11,"is_cyc512","","Checks if the value of the field is `CYC512`",4592,[[]]],[11,"is_cyc1024","","Checks if the value of the field is `CYC1024`",4592,[[]]],[11,"is_cyc2048","","Checks if the value of the field is `CYC2048`",4592,[[]]],[11,"is_cyc4096","","Checks if the value of the field is `CYC4096`",4592,[[]]],[11,"is_cyc8192","","Checks if the value of the field is `CYC8192`",4592,[[]]],[11,"is_cyc16384","","Checks if the value of the field is `CYC16384`",4592,[[]]],[11,"variant","","Writes `variant` to the field",4593,[[["window_a",4]],["w",6]]],[11,"cyc8","","8 clock cycles",4593,[[],["w",6]]],[11,"cyc16","","16 clock cycles",4593,[[],["w",6]]],[11,"cyc32","","32 clock cycles",4593,[[],["w",6]]],[11,"cyc64","","64 clock cycles",4593,[[],["w",6]]],[11,"cyc128","","128 clock cycles",4593,[[],["w",6]]],[11,"cyc256","","256 clock cycles",4593,[[],["w",6]]],[11,"cyc512","","512 clock cycles",4593,[[],["w",6]]],[11,"cyc1024","","1024 clock cycles",4593,[[],["w",6]]],[11,"cyc2048","","2048 clock cycles",4593,[[],["w",6]]],[11,"cyc4096","","4096 clock cycles",4593,[[],["w",6]]],[11,"cyc8192","","8192 clock cycles",4593,[[],["w",6]]],[11,"cyc16384","","16384 clock cycles",4593,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4593,[[],["w",6]]],[11,"per","atsamd51g::generic","Bits 0:3 - Time-Out Period",6,[[],["per_r",6]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",6,[[],["window_r",6]]],[11,"per","atsamd51g::wdt::config","Bits 0:3 - Time-Out Period",4594,[[],["per_r",6]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",4594,[[],["window_r",6]]],[11,"per","atsamd51g::generic","Bits 0:3 - Time-Out Period",7,[[],["per_w",3]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",7,[[],["window_w",3]]],[11,"per","atsamd51g::wdt::config","Bits 0:3 - Time-Out Period",4595,[[],["per_w",3]]],[11,"window","","Bits 4:7 - Window Mode Time-Out Period",4595,[[],["window_w",3]]],[0,"ewctrl","atsamd51g::wdt","Early Warning Interrupt Control",null,null],[3,"EWOFFSET_W","atsamd51g::wdt::ewctrl","Write proxy for field `EWOFFSET`",null,null],[4,"EWOFFSET_A","","Early Warning Interrupt Time Offset",null,null],[13,"CYC8","","0: 8 clock cycles",4596,null],[13,"CYC16","","1: 16 clock cycles",4596,null],[13,"CYC32","","2: 32 clock cycles",4596,null],[13,"CYC64","","3: 64 clock cycles",4596,null],[13,"CYC128","","4: 128 clock cycles",4596,null],[13,"CYC256","","5: 256 clock cycles",4596,null],[13,"CYC512","","6: 512 clock cycles",4596,null],[13,"CYC1024","","7: 1024 clock cycles",4596,null],[13,"CYC2048","","8: 2048 clock cycles",4596,null],[13,"CYC4096","","9: 4096 clock cycles",4596,null],[13,"CYC8192","","10: 8192 clock cycles",4596,null],[13,"CYC16384","","11: 16384 clock cycles",4596,null],[6,"R","","Reader of register EWCTRL",null,null],[6,"W","","Writer for register EWCTRL",null,null],[6,"EWOFFSET_R","","Reader of field `EWOFFSET`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["ewoffset_a",4],["variant",4]]]],[11,"is_cyc8","","Checks if the value of the field is `CYC8`",6,[[]]],[11,"is_cyc16","","Checks if the value of the field is `CYC16`",6,[[]]],[11,"is_cyc32","","Checks if the value of the field is `CYC32`",6,[[]]],[11,"is_cyc64","","Checks if the value of the field is `CYC64`",6,[[]]],[11,"is_cyc128","","Checks if the value of the field is `CYC128`",6,[[]]],[11,"is_cyc256","","Checks if the value of the field is `CYC256`",6,[[]]],[11,"is_cyc512","","Checks if the value of the field is `CYC512`",6,[[]]],[11,"is_cyc1024","","Checks if the value of the field is `CYC1024`",6,[[]]],[11,"is_cyc2048","","Checks if the value of the field is `CYC2048`",6,[[]]],[11,"is_cyc4096","","Checks if the value of the field is `CYC4096`",6,[[]]],[11,"is_cyc8192","","Checks if the value of the field is `CYC8192`",6,[[]]],[11,"is_cyc16384","","Checks if the value of the field is `CYC16384`",6,[[]]],[11,"variant","atsamd51g::wdt::ewctrl","Get enumerated values variant",4597,[[],[["ewoffset_a",4],["variant",4]]]],[11,"is_cyc8","","Checks if the value of the field is `CYC8`",4597,[[]]],[11,"is_cyc16","","Checks if the value of the field is `CYC16`",4597,[[]]],[11,"is_cyc32","","Checks if the value of the field is `CYC32`",4597,[[]]],[11,"is_cyc64","","Checks if the value of the field is `CYC64`",4597,[[]]],[11,"is_cyc128","","Checks if the value of the field is `CYC128`",4597,[[]]],[11,"is_cyc256","","Checks if the value of the field is `CYC256`",4597,[[]]],[11,"is_cyc512","","Checks if the value of the field is `CYC512`",4597,[[]]],[11,"is_cyc1024","","Checks if the value of the field is `CYC1024`",4597,[[]]],[11,"is_cyc2048","","Checks if the value of the field is `CYC2048`",4597,[[]]],[11,"is_cyc4096","","Checks if the value of the field is `CYC4096`",4597,[[]]],[11,"is_cyc8192","","Checks if the value of the field is `CYC8192`",4597,[[]]],[11,"is_cyc16384","","Checks if the value of the field is `CYC16384`",4597,[[]]],[11,"variant","","Writes `variant` to the field",4598,[[["ewoffset_a",4]],["w",6]]],[11,"cyc8","","8 clock cycles",4598,[[],["w",6]]],[11,"cyc16","","16 clock cycles",4598,[[],["w",6]]],[11,"cyc32","","32 clock cycles",4598,[[],["w",6]]],[11,"cyc64","","64 clock cycles",4598,[[],["w",6]]],[11,"cyc128","","128 clock cycles",4598,[[],["w",6]]],[11,"cyc256","","256 clock cycles",4598,[[],["w",6]]],[11,"cyc512","","512 clock cycles",4598,[[],["w",6]]],[11,"cyc1024","","1024 clock cycles",4598,[[],["w",6]]],[11,"cyc2048","","2048 clock cycles",4598,[[],["w",6]]],[11,"cyc4096","","4096 clock cycles",4598,[[],["w",6]]],[11,"cyc8192","","8192 clock cycles",4598,[[],["w",6]]],[11,"cyc16384","","16384 clock cycles",4598,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4598,[[],["w",6]]],[11,"ewoffset","atsamd51g::generic","Bits 0:3 - Early Warning Interrupt Time Offset",6,[[],["ewoffset_r",6]]],[11,"ewoffset","atsamd51g::wdt::ewctrl","Bits 0:3 - Early Warning Interrupt Time Offset",4599,[[],["ewoffset_r",6]]],[11,"ewoffset","atsamd51g::generic","Bits 0:3 - Early Warning Interrupt Time Offset",7,[[],["ewoffset_w",3]]],[11,"ewoffset","atsamd51g::wdt::ewctrl","Bits 0:3 - Early Warning Interrupt Time Offset",4600,[[],["ewoffset_w",3]]],[0,"intenclr","atsamd51g::wdt","Interrupt Enable Clear",null,null],[3,"EW_W","atsamd51g::wdt::intenclr","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTENCLR",null,null],[6,"W","","Writer for register INTENCLR",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",4601,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4601,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4601,[[],["w",6]]],[11,"ew","atsamd51g::generic","Bit 0 - Early Warning Interrupt Enable",6,[[],["ew_r",6]]],[11,"ew","atsamd51g::wdt::intenclr","Bit 0 - Early Warning Interrupt Enable",4602,[[],["ew_r",6]]],[11,"ew","atsamd51g::generic","Bit 0 - Early Warning Interrupt Enable",7,[[],["ew_w",3]]],[11,"ew","atsamd51g::wdt::intenclr","Bit 0 - Early Warning Interrupt Enable",4603,[[],["ew_w",3]]],[0,"intenset","atsamd51g::wdt","Interrupt Enable Set",null,null],[3,"EW_W","atsamd51g::wdt::intenset","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTENSET",null,null],[6,"W","","Writer for register INTENSET",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",4604,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4604,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4604,[[],["w",6]]],[11,"ew","atsamd51g::generic","Bit 0 - Early Warning Interrupt Enable",6,[[],["ew_r",6]]],[11,"ew","atsamd51g::wdt::intenset","Bit 0 - Early Warning Interrupt Enable",4605,[[],["ew_r",6]]],[11,"ew","atsamd51g::generic","Bit 0 - Early Warning Interrupt Enable",7,[[],["ew_w",3]]],[11,"ew","atsamd51g::wdt::intenset","Bit 0 - Early Warning Interrupt Enable",4606,[[],["ew_w",3]]],[0,"intflag","atsamd51g::wdt","Interrupt Flag Status and Clear",null,null],[3,"EW_W","atsamd51g::wdt::intflag","Write proxy for field `EW`",null,null],[6,"R","","Reader of register INTFLAG",null,null],[6,"W","","Writer for register INTFLAG",null,null],[6,"EW_R","","Reader of field `EW`",null,null],[11,"set_bit","","Sets the field bit",4607,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4607,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4607,[[],["w",6]]],[11,"ew","atsamd51g::generic","Bit 0 - Early Warning",6,[[],["ew_r",6]]],[11,"ew","atsamd51g::wdt::intflag","Bit 0 - Early Warning",4608,[[],["ew_r",6]]],[11,"ew","atsamd51g::generic","Bit 0 - Early Warning",7,[[],["ew_w",3]]],[11,"ew","atsamd51g::wdt::intflag","Bit 0 - Early Warning",4609,[[],["ew_w",3]]],[0,"syncbusy","atsamd51g::wdt","Synchronization Busy",null,null],[6,"R","atsamd51g::wdt::syncbusy","Reader of register SYNCBUSY",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"WEN_R","","Reader of field `WEN`",null,null],[6,"ALWAYSON_R","","Reader of field `ALWAYSON`",null,null],[6,"CLEAR_R","","Reader of field `CLEAR`",null,null],[11,"enable","atsamd51g::generic","Bit 1 - Enable Synchronization Busy",6,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Window Enable Synchronization Busy",6,[[],["wen_r",6]]],[11,"alwayson","","Bit 3 - Always-On Synchronization Busy",6,[[],["alwayson_r",6]]],[11,"clear","","Bit 4 - Clear Synchronization Busy",6,[[],["clear_r",6]]],[11,"enable","atsamd51g::wdt::syncbusy","Bit 1 - Enable Synchronization Busy",4610,[[],["enable_r",6]]],[11,"wen","","Bit 2 - Window Enable Synchronization Busy",4610,[[],["wen_r",6]]],[11,"alwayson","","Bit 3 - Always-On Synchronization Busy",4610,[[],["alwayson_r",6]]],[11,"clear","","Bit 4 - Clear Synchronization Busy",4610,[[],["clear_r",6]]],[0,"clear","atsamd51g::wdt","Clear",null,null],[3,"CLEAR_W","atsamd51g::wdt::clear","Write proxy for field `CLEAR`",null,null],[4,"CLEAR_AW","","Watchdog Clear",null,null],[13,"KEY","","165: Clear Key",4611,null],[6,"W","","Writer for register CLEAR",null,null],[11,"variant","","Writes `variant` to the field",4612,[[["clear_aw",4]],["w",6]]],[11,"key","","Clear Key",4612,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4612,[[],["w",6]]],[11,"clear","atsamd51g::generic","Bits 0:7 - Watchdog Clear",7,[[],["clear_w",3]]],[11,"clear","atsamd51g::wdt::clear","Bits 0:7 - Watchdog Clear",4613,[[],["clear_w",3]]],[6,"CTRLA","atsamd51g::wdt","Control",null,null],[6,"CONFIG","","Configuration",null,null],[6,"EWCTRL","","Early Warning Interrupt Control",null,null],[6,"INTENCLR","","Interrupt Enable Clear",null,null],[6,"INTENSET","","Interrupt Enable Set",null,null],[6,"INTFLAG","","Interrupt Flag Status and Clear",null,null],[6,"SYNCBUSY","","Synchronization Busy",null,null],[6,"CLEAR","","Clear",null,null],[0,"core_debug","atsamd51g","Core Debug Register",null,null],[3,"RegisterBlock","atsamd51g::core_debug","Register block",null,null],[12,"dhcsr","","0x00 - Debug Halting Control and Status Register",4614,null],[12,"dcrsr","","0x04 - Debug Core Register Selector Register",4614,null],[12,"dcrdr","","0x08 - Debug Core Register Data Register",4614,null],[12,"demcr","","0x0c - Debug Exception and Monitor Control Register",4614,null],[0,"dhcsr","","Debug Halting Control and Status Register",null,null],[3,"C_DEBUGEN_W","atsamd51g::core_debug::dhcsr","Write proxy for field `C_DEBUGEN`",null,null],[3,"C_HALT_W","","Write proxy for field `C_HALT`",null,null],[3,"C_STEP_W","","Write proxy for field `C_STEP`",null,null],[3,"C_MASKINTS_W","","Write proxy for field `C_MASKINTS`",null,null],[3,"C_SNAPSTALL_W","","Write proxy for field `C_SNAPSTALL`",null,null],[3,"DBGKEY_W","","Write proxy for field `DBGKEY`",null,null],[6,"R","","Reader of register DHCSR",null,null],[6,"W","","Writer for register DHCSR",null,null],[6,"C_DEBUGEN_R","","Reader of field `C_DEBUGEN`",null,null],[6,"C_HALT_R","","Reader of field `C_HALT`",null,null],[6,"C_STEP_R","","Reader of field `C_STEP`",null,null],[6,"C_MASKINTS_R","","Reader of field `C_MASKINTS`",null,null],[6,"C_SNAPSTALL_R","","Reader of field `C_SNAPSTALL`",null,null],[6,"S_REGRDY_R","","Reader of field `S_REGRDY`",null,null],[6,"S_HALT_R","","Reader of field `S_HALT`",null,null],[6,"S_SLEEP_R","","Reader of field `S_SLEEP`",null,null],[6,"S_LOCKUP_R","","Reader of field `S_LOCKUP`",null,null],[6,"S_RETIRE_ST_R","","Reader of field `S_RETIRE_ST`",null,null],[6,"S_RESET_ST_R","","Reader of field `S_RESET_ST`",null,null],[11,"set_bit","","Sets the field bit",4615,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4615,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4615,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4616,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4616,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4616,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4617,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4617,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4617,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4618,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4618,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4618,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4619,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4619,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4619,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4620,[[],["w",6]]],[11,"c_debugen","atsamd51g::generic","Bit 0",6,[[],["c_debugen_r",6]]],[11,"c_halt","","Bit 1",6,[[],["c_halt_r",6]]],[11,"c_step","","Bit 2",6,[[],["c_step_r",6]]],[11,"c_maskints","","Bit 3",6,[[],["c_maskints_r",6]]],[11,"c_snapstall","","Bit 5",6,[[],["c_snapstall_r",6]]],[11,"s_regrdy","","Bit 16",6,[[],["s_regrdy_r",6]]],[11,"s_halt","","Bit 17",6,[[],["s_halt_r",6]]],[11,"s_sleep","","Bit 18",6,[[],["s_sleep_r",6]]],[11,"s_lockup","","Bit 19",6,[[],["s_lockup_r",6]]],[11,"s_retire_st","","Bit 24",6,[[],["s_retire_st_r",6]]],[11,"s_reset_st","","Bit 25",6,[[],["s_reset_st_r",6]]],[11,"c_debugen","atsamd51g::core_debug::dhcsr","Bit 0",4621,[[],["c_debugen_r",6]]],[11,"c_halt","","Bit 1",4621,[[],["c_halt_r",6]]],[11,"c_step","","Bit 2",4621,[[],["c_step_r",6]]],[11,"c_maskints","","Bit 3",4621,[[],["c_maskints_r",6]]],[11,"c_snapstall","","Bit 5",4621,[[],["c_snapstall_r",6]]],[11,"s_regrdy","","Bit 16",4621,[[],["s_regrdy_r",6]]],[11,"s_halt","","Bit 17",4621,[[],["s_halt_r",6]]],[11,"s_sleep","","Bit 18",4621,[[],["s_sleep_r",6]]],[11,"s_lockup","","Bit 19",4621,[[],["s_lockup_r",6]]],[11,"s_retire_st","","Bit 24",4621,[[],["s_retire_st_r",6]]],[11,"s_reset_st","","Bit 25",4621,[[],["s_reset_st_r",6]]],[11,"c_debugen","atsamd51g::generic","Bit 0",7,[[],["c_debugen_w",3]]],[11,"c_halt","","Bit 1",7,[[],["c_halt_w",3]]],[11,"c_step","","Bit 2",7,[[],["c_step_w",3]]],[11,"c_maskints","","Bit 3",7,[[],["c_maskints_w",3]]],[11,"c_snapstall","","Bit 5",7,[[],["c_snapstall_w",3]]],[11,"dbgkey","","Bits 16:31",7,[[],["dbgkey_w",3]]],[11,"c_debugen","atsamd51g::core_debug::dhcsr","Bit 0",4622,[[],["c_debugen_w",3]]],[11,"c_halt","","Bit 1",4622,[[],["c_halt_w",3]]],[11,"c_step","","Bit 2",4622,[[],["c_step_w",3]]],[11,"c_maskints","","Bit 3",4622,[[],["c_maskints_w",3]]],[11,"c_snapstall","","Bit 5",4622,[[],["c_snapstall_w",3]]],[11,"dbgkey","","Bits 16:31",4622,[[],["dbgkey_w",3]]],[0,"dcrsr","atsamd51g::core_debug","Debug Core Register Selector Register",null,null],[3,"REGSEL_W","atsamd51g::core_debug::dcrsr","Write proxy for field `REGSEL`",null,null],[3,"REGWNR_W","","Write proxy for field `REGWnR`",null,null],[6,"W","","Writer for register DCRSR",null,null],[11,"bits","","Writes raw bits to the field",4623,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4624,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4624,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4624,[[],["w",6]]],[11,"regsel","atsamd51g::generic","Bits 0:4",7,[[],["regsel_w",3]]],[11,"regwn_r","","Bit 16",7,[[],["regwnr_w",3]]],[11,"regsel","atsamd51g::core_debug::dcrsr","Bits 0:4",4625,[[],["regsel_w",3]]],[11,"regwn_r","","Bit 16",4625,[[],["regwnr_w",3]]],[0,"dcrdr","atsamd51g::core_debug","Debug Core Register Data Register",null,null],[6,"R","atsamd51g::core_debug::dcrdr","Reader of register DCRDR",null,null],[6,"W","","Writer for register DCRDR",null,null],[0,"demcr","atsamd51g::core_debug","Debug Exception and Monitor Control Register",null,null],[3,"VC_CORERESET_W","atsamd51g::core_debug::demcr","Write proxy for field `VC_CORERESET`",null,null],[3,"VC_MMERR_W","","Write proxy for field `VC_MMERR`",null,null],[3,"VC_NOCPERR_W","","Write proxy for field `VC_NOCPERR`",null,null],[3,"VC_CHKERR_W","","Write proxy for field `VC_CHKERR`",null,null],[3,"VC_STATERR_W","","Write proxy for field `VC_STATERR`",null,null],[3,"VC_BUSERR_W","","Write proxy for field `VC_BUSERR`",null,null],[3,"VC_INTERR_W","","Write proxy for field `VC_INTERR`",null,null],[3,"VC_HARDERR_W","","Write proxy for field `VC_HARDERR`",null,null],[3,"MON_EN_W","","Write proxy for field `MON_EN`",null,null],[3,"MON_PEND_W","","Write proxy for field `MON_PEND`",null,null],[3,"MON_STEP_W","","Write proxy for field `MON_STEP`",null,null],[3,"MON_REQ_W","","Write proxy for field `MON_REQ`",null,null],[3,"TRCENA_W","","Write proxy for field `TRCENA`",null,null],[6,"R","","Reader of register DEMCR",null,null],[6,"W","","Writer for register DEMCR",null,null],[6,"VC_CORERESET_R","","Reader of field `VC_CORERESET`",null,null],[6,"VC_MMERR_R","","Reader of field `VC_MMERR`",null,null],[6,"VC_NOCPERR_R","","Reader of field `VC_NOCPERR`",null,null],[6,"VC_CHKERR_R","","Reader of field `VC_CHKERR`",null,null],[6,"VC_STATERR_R","","Reader of field `VC_STATERR`",null,null],[6,"VC_BUSERR_R","","Reader of field `VC_BUSERR`",null,null],[6,"VC_INTERR_R","","Reader of field `VC_INTERR`",null,null],[6,"VC_HARDERR_R","","Reader of field `VC_HARDERR`",null,null],[6,"MON_EN_R","","Reader of field `MON_EN`",null,null],[6,"MON_PEND_R","","Reader of field `MON_PEND`",null,null],[6,"MON_STEP_R","","Reader of field `MON_STEP`",null,null],[6,"MON_REQ_R","","Reader of field `MON_REQ`",null,null],[6,"TRCENA_R","","Reader of field `TRCENA`",null,null],[11,"set_bit","","Sets the field bit",4626,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4626,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4626,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4627,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4627,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4627,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4628,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4628,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4628,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4629,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4629,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4629,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4630,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4630,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4630,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4631,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4631,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4631,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4632,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4632,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4632,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4633,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4633,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4633,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4634,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4634,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4634,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4635,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4635,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4635,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4636,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4636,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4636,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4637,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4637,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4637,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4638,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4638,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4638,[[],["w",6]]],[11,"vc_corereset","atsamd51g::generic","Bit 0",6,[[],["vc_corereset_r",6]]],[11,"vc_mmerr","","Bit 4",6,[[],["vc_mmerr_r",6]]],[11,"vc_nocperr","","Bit 5",6,[[],["vc_nocperr_r",6]]],[11,"vc_chkerr","","Bit 6",6,[[],["vc_chkerr_r",6]]],[11,"vc_staterr","","Bit 7",6,[[],["vc_staterr_r",6]]],[11,"vc_buserr","","Bit 8",6,[[],["vc_buserr_r",6]]],[11,"vc_interr","","Bit 9",6,[[],["vc_interr_r",6]]],[11,"vc_harderr","","Bit 10",6,[[],["vc_harderr_r",6]]],[11,"mon_en","","Bit 16",6,[[],["mon_en_r",6]]],[11,"mon_pend","","Bit 17",6,[[],["mon_pend_r",6]]],[11,"mon_step","","Bit 18",6,[[],["mon_step_r",6]]],[11,"mon_req","","Bit 19",6,[[],["mon_req_r",6]]],[11,"trcena","","Bit 24",6,[[],["trcena_r",6]]],[11,"vc_corereset","atsamd51g::core_debug::demcr","Bit 0",4639,[[],["vc_corereset_r",6]]],[11,"vc_mmerr","","Bit 4",4639,[[],["vc_mmerr_r",6]]],[11,"vc_nocperr","","Bit 5",4639,[[],["vc_nocperr_r",6]]],[11,"vc_chkerr","","Bit 6",4639,[[],["vc_chkerr_r",6]]],[11,"vc_staterr","","Bit 7",4639,[[],["vc_staterr_r",6]]],[11,"vc_buserr","","Bit 8",4639,[[],["vc_buserr_r",6]]],[11,"vc_interr","","Bit 9",4639,[[],["vc_interr_r",6]]],[11,"vc_harderr","","Bit 10",4639,[[],["vc_harderr_r",6]]],[11,"mon_en","","Bit 16",4639,[[],["mon_en_r",6]]],[11,"mon_pend","","Bit 17",4639,[[],["mon_pend_r",6]]],[11,"mon_step","","Bit 18",4639,[[],["mon_step_r",6]]],[11,"mon_req","","Bit 19",4639,[[],["mon_req_r",6]]],[11,"trcena","","Bit 24",4639,[[],["trcena_r",6]]],[11,"vc_corereset","atsamd51g::generic","Bit 0",7,[[],["vc_corereset_w",3]]],[11,"vc_mmerr","","Bit 4",7,[[],["vc_mmerr_w",3]]],[11,"vc_nocperr","","Bit 5",7,[[],["vc_nocperr_w",3]]],[11,"vc_chkerr","","Bit 6",7,[[],["vc_chkerr_w",3]]],[11,"vc_staterr","","Bit 7",7,[[],["vc_staterr_w",3]]],[11,"vc_buserr","","Bit 8",7,[[],["vc_buserr_w",3]]],[11,"vc_interr","","Bit 9",7,[[],["vc_interr_w",3]]],[11,"vc_harderr","","Bit 10",7,[[],["vc_harderr_w",3]]],[11,"mon_en","","Bit 16",7,[[],["mon_en_w",3]]],[11,"mon_pend","","Bit 17",7,[[],["mon_pend_w",3]]],[11,"mon_step","","Bit 18",7,[[],["mon_step_w",3]]],[11,"mon_req","","Bit 19",7,[[],["mon_req_w",3]]],[11,"trcena","","Bit 24",7,[[],["trcena_w",3]]],[11,"vc_corereset","atsamd51g::core_debug::demcr","Bit 0",4640,[[],["vc_corereset_w",3]]],[11,"vc_mmerr","","Bit 4",4640,[[],["vc_mmerr_w",3]]],[11,"vc_nocperr","","Bit 5",4640,[[],["vc_nocperr_w",3]]],[11,"vc_chkerr","","Bit 6",4640,[[],["vc_chkerr_w",3]]],[11,"vc_staterr","","Bit 7",4640,[[],["vc_staterr_w",3]]],[11,"vc_buserr","","Bit 8",4640,[[],["vc_buserr_w",3]]],[11,"vc_interr","","Bit 9",4640,[[],["vc_interr_w",3]]],[11,"vc_harderr","","Bit 10",4640,[[],["vc_harderr_w",3]]],[11,"mon_en","","Bit 16",4640,[[],["mon_en_w",3]]],[11,"mon_pend","","Bit 17",4640,[[],["mon_pend_w",3]]],[11,"mon_step","","Bit 18",4640,[[],["mon_step_w",3]]],[11,"mon_req","","Bit 19",4640,[[],["mon_req_w",3]]],[11,"trcena","","Bit 24",4640,[[],["trcena_w",3]]],[6,"DHCSR","atsamd51g::core_debug","Debug Halting Control and Status Register",null,null],[6,"DCRSR","","Debug Core Register Selector Register",null,null],[6,"DCRDR","","Debug Core Register Data Register",null,null],[6,"DEMCR","","Debug Exception and Monitor Control Register",null,null],[0,"etm","atsamd51g","Embedded Trace Macrocell",null,null],[3,"RegisterBlock","atsamd51g::etm","Register block",null,null],[12,"cr","","0x00 - ETM Main Control Register",4641,null],[12,"ccr","","0x04 - ETM Configuration Code Register",4641,null],[12,"trigger","","0x08 - ETM Trigger Event Register",4641,null],[12,"sr","","0x10 - ETM Status Register",4641,null],[12,"scr","","0x14 - ETM System Configuration Register",4641,null],[12,"teevr","","0x20 - ETM TraceEnable Event Register",4641,null],[12,"tecr1","","0x24 - ETM TraceEnable Control 1 Register",4641,null],[12,"fflr","","0x28 - ETM FIFO Full Level Register",4641,null],[12,"cntrldvr1","","0x140 - ETM Free-running Counter Reload Value",4641,null],[12,"syncfr","","0x1e0 - ETM Synchronization Frequency Register",4641,null],[12,"idr","","0x1e4 - ETM ID Register",4641,null],[12,"ccer","","0x1e8 - ETM Configuration Code Extension Register",4641,null],[12,"tesseicr","","0x1f0 - ETM TraceEnable Start/Stop EmbeddedICE Control…",4641,null],[12,"tsevt","","0x1f8 - ETM TimeStamp Event Register",4641,null],[12,"traceidr","","0x200 - ETM CoreSight Trace ID Register",4641,null],[12,"idr2","","0x208 - ETM ID Register 2",4641,null],[12,"pdsr","","0x314 - ETM Device Power-Down Status Register",4641,null],[12,"itmiscin","","0xee0 - ETM Integration Test Miscellaneous Inputs",4641,null],[12,"ittrigout","","0xee8 - ETM Integration Test Trigger Out",4641,null],[12,"itatbctr2","","0xef0 - ETM Integration Test ATB Control 2",4641,null],[12,"itatbctr0","","0xef8 - ETM Integration Test ATB Control 0",4641,null],[12,"itctrl","","0xf00 - ETM Integration Mode Control Register",4641,null],[12,"claimset","","0xfa0 - ETM Claim Tag Set Register",4641,null],[12,"claimclr","","0xfa4 - ETM Claim Tag Clear Register",4641,null],[12,"lar","","0xfb0 - ETM Lock Access Register",4641,null],[12,"lsr","","0xfb4 - ETM Lock Status Register",4641,null],[12,"authstatus","","0xfb8 - ETM Authentication Status Register",4641,null],[12,"devtype","","0xfcc - ETM CoreSight Device Type Register",4641,null],[12,"pidr4","","0xfd0 - ETM Peripheral Identification Register #4",4641,null],[12,"pidr5","","0xfd4 - ETM Peripheral Identification Register #5",4641,null],[12,"pidr6","","0xfd8 - ETM Peripheral Identification Register #6",4641,null],[12,"pidr7","","0xfdc - ETM Peripheral Identification Register #7",4641,null],[12,"pidr0","","0xfe0 - ETM Peripheral Identification Register #0",4641,null],[12,"pidr1","","0xfe4 - ETM Peripheral Identification Register #1",4641,null],[12,"pidr2","","0xfe8 - ETM Peripheral Identification Register #2",4641,null],[12,"pidr3","","0xfec - ETM Peripheral Identification Register #3",4641,null],[12,"cidr0","","0xff0 - ETM Component Identification Register #0",4641,null],[12,"cidr1","","0xff4 - ETM Component Identification Register #1",4641,null],[12,"cidr2","","0xff8 - ETM Component Identification Register #2",4641,null],[12,"cidr3","","0xffc - ETM Component Identification Register #3",4641,null],[0,"cr","","ETM Main Control Register",null,null],[3,"ETMPD_W","atsamd51g::etm::cr","Write proxy for field `ETMPD`",null,null],[3,"PORTSIZE_W","","Write proxy for field `PORTSIZE`",null,null],[3,"STALL_W","","Write proxy for field `STALL`",null,null],[3,"BROUT_W","","Write proxy for field `BROUT`",null,null],[3,"DBGRQ_W","","Write proxy for field `DBGRQ`",null,null],[3,"PROG_W","","Write proxy for field `PROG`",null,null],[3,"PORTSEL_W","","Write proxy for field `PORTSEL`",null,null],[3,"PORTMODE2_W","","Write proxy for field `PORTMODE2`",null,null],[3,"PORTMODE_W","","Write proxy for field `PORTMODE`",null,null],[3,"PORTSIZE3_W","","Write proxy for field `PORTSIZE3`",null,null],[3,"TSEN_W","","Write proxy for field `TSEN`",null,null],[6,"R","","Reader of register CR",null,null],[6,"W","","Writer for register CR",null,null],[6,"ETMPD_R","","Reader of field `ETMPD`",null,null],[6,"PORTSIZE_R","","Reader of field `PORTSIZE`",null,null],[6,"STALL_R","","Reader of field `STALL`",null,null],[6,"BROUT_R","","Reader of field `BROUT`",null,null],[6,"DBGRQ_R","","Reader of field `DBGRQ`",null,null],[6,"PROG_R","","Reader of field `PROG`",null,null],[6,"PORTSEL_R","","Reader of field `PORTSEL`",null,null],[6,"PORTMODE2_R","","Reader of field `PORTMODE2`",null,null],[6,"PORTMODE_R","","Reader of field `PORTMODE`",null,null],[6,"PORTSIZE3_R","","Reader of field `PORTSIZE3`",null,null],[6,"TSEN_R","","Reader of field `TSEN`",null,null],[11,"set_bit","","Sets the field bit",4642,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4642,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4642,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4643,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4644,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4644,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4644,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4645,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4645,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4645,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4646,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4646,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4646,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4647,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4647,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4647,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4648,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4648,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4648,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4649,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4649,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4649,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4650,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4651,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4651,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4651,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4652,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4652,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4652,[[],["w",6]]],[11,"etmpd","atsamd51g::generic","Bit 0 - ETM Power Down",6,[[],["etmpd_r",6]]],[11,"portsize","","Bits 4:6 - Port Size bits 2:0",6,[[],["portsize_r",6]]],[11,"stall","","Bit 7 - Stall Processor",6,[[],["stall_r",6]]],[11,"brout","","Bit 8 - Branch Output",6,[[],["brout_r",6]]],[11,"dbgrq","","Bit 9 - Debug Request Control",6,[[],["dbgrq_r",6]]],[11,"prog","","Bit 10 - ETM Programming",6,[[],["prog_r",6]]],[11,"portsel","","Bit 11 - ETM Port Select",6,[[],["portsel_r",6]]],[11,"portmode2","","Bit 13 - Port Mode bit 2",6,[[],["portmode2_r",6]]],[11,"portmode","","Bits 16:17 - Port Mode bits 1:0",6,[[],["portmode_r",6]]],[11,"portsize3","","Bit 21 - Port Size bit 3",6,[[],["portsize3_r",6]]],[11,"tsen","","Bit 28 - TimeStamp Enable",6,[[],["tsen_r",6]]],[11,"etmpd","atsamd51g::etm::cr","Bit 0 - ETM Power Down",4653,[[],["etmpd_r",6]]],[11,"portsize","","Bits 4:6 - Port Size bits 2:0",4653,[[],["portsize_r",6]]],[11,"stall","","Bit 7 - Stall Processor",4653,[[],["stall_r",6]]],[11,"brout","","Bit 8 - Branch Output",4653,[[],["brout_r",6]]],[11,"dbgrq","","Bit 9 - Debug Request Control",4653,[[],["dbgrq_r",6]]],[11,"prog","","Bit 10 - ETM Programming",4653,[[],["prog_r",6]]],[11,"portsel","","Bit 11 - ETM Port Select",4653,[[],["portsel_r",6]]],[11,"portmode2","","Bit 13 - Port Mode bit 2",4653,[[],["portmode2_r",6]]],[11,"portmode","","Bits 16:17 - Port Mode bits 1:0",4653,[[],["portmode_r",6]]],[11,"portsize3","","Bit 21 - Port Size bit 3",4653,[[],["portsize3_r",6]]],[11,"tsen","","Bit 28 - TimeStamp Enable",4653,[[],["tsen_r",6]]],[11,"etmpd","atsamd51g::generic","Bit 0 - ETM Power Down",7,[[],["etmpd_w",3]]],[11,"portsize","","Bits 4:6 - Port Size bits 2:0",7,[[],["portsize_w",3]]],[11,"stall","","Bit 7 - Stall Processor",7,[[],["stall_w",3]]],[11,"brout","","Bit 8 - Branch Output",7,[[],["brout_w",3]]],[11,"dbgrq","","Bit 9 - Debug Request Control",7,[[],["dbgrq_w",3]]],[11,"prog","","Bit 10 - ETM Programming",7,[[],["prog_w",3]]],[11,"portsel","","Bit 11 - ETM Port Select",7,[[],["portsel_w",3]]],[11,"portmode2","","Bit 13 - Port Mode bit 2",7,[[],["portmode2_w",3]]],[11,"portmode","","Bits 16:17 - Port Mode bits 1:0",7,[[],["portmode_w",3]]],[11,"portsize3","","Bit 21 - Port Size bit 3",7,[[],["portsize3_w",3]]],[11,"tsen","","Bit 28 - TimeStamp Enable",7,[[],["tsen_w",3]]],[11,"etmpd","atsamd51g::etm::cr","Bit 0 - ETM Power Down",4654,[[],["etmpd_w",3]]],[11,"portsize","","Bits 4:6 - Port Size bits 2:0",4654,[[],["portsize_w",3]]],[11,"stall","","Bit 7 - Stall Processor",4654,[[],["stall_w",3]]],[11,"brout","","Bit 8 - Branch Output",4654,[[],["brout_w",3]]],[11,"dbgrq","","Bit 9 - Debug Request Control",4654,[[],["dbgrq_w",3]]],[11,"prog","","Bit 10 - ETM Programming",4654,[[],["prog_w",3]]],[11,"portsel","","Bit 11 - ETM Port Select",4654,[[],["portsel_w",3]]],[11,"portmode2","","Bit 13 - Port Mode bit 2",4654,[[],["portmode2_w",3]]],[11,"portmode","","Bits 16:17 - Port Mode bits 1:0",4654,[[],["portmode_w",3]]],[11,"portsize3","","Bit 21 - Port Size bit 3",4654,[[],["portsize3_w",3]]],[11,"tsen","","Bit 28 - TimeStamp Enable",4654,[[],["tsen_w",3]]],[0,"ccr","atsamd51g::etm","ETM Configuration Code Register",null,null],[6,"R","atsamd51g::etm::ccr","Reader of register CCR",null,null],[0,"trigger","atsamd51g::etm","ETM Trigger Event Register",null,null],[6,"R","atsamd51g::etm::trigger","Reader of register TRIGGER",null,null],[6,"W","","Writer for register TRIGGER",null,null],[0,"sr","atsamd51g::etm","ETM Status Register",null,null],[6,"R","atsamd51g::etm::sr","Reader of register SR",null,null],[6,"W","","Writer for register SR",null,null],[0,"scr","atsamd51g::etm","ETM System Configuration Register",null,null],[6,"R","atsamd51g::etm::scr","Reader of register SCR",null,null],[0,"teevr","atsamd51g::etm","ETM TraceEnable Event Register",null,null],[6,"R","atsamd51g::etm::teevr","Reader of register TEEVR",null,null],[6,"W","","Writer for register TEEVR",null,null],[0,"tecr1","atsamd51g::etm","ETM TraceEnable Control 1 Register",null,null],[6,"R","atsamd51g::etm::tecr1","Reader of register TECR1",null,null],[6,"W","","Writer for register TECR1",null,null],[0,"fflr","atsamd51g::etm","ETM FIFO Full Level Register",null,null],[6,"R","atsamd51g::etm::fflr","Reader of register FFLR",null,null],[6,"W","","Writer for register FFLR",null,null],[0,"cntrldvr1","atsamd51g::etm","ETM Free-running Counter Reload Value",null,null],[6,"R","atsamd51g::etm::cntrldvr1","Reader of register CNTRLDVR1",null,null],[6,"W","","Writer for register CNTRLDVR1",null,null],[0,"syncfr","atsamd51g::etm","ETM Synchronization Frequency Register",null,null],[6,"R","atsamd51g::etm::syncfr","Reader of register SYNCFR",null,null],[0,"idr","atsamd51g::etm","ETM ID Register",null,null],[6,"R","atsamd51g::etm::idr","Reader of register IDR",null,null],[0,"ccer","atsamd51g::etm","ETM Configuration Code Extension Register",null,null],[6,"R","atsamd51g::etm::ccer","Reader of register CCER",null,null],[0,"tesseicr","atsamd51g::etm","ETM TraceEnable Start/Stop EmbeddedICE Control Register",null,null],[6,"R","atsamd51g::etm::tesseicr","Reader of register TESSEICR",null,null],[6,"W","","Writer for register TESSEICR",null,null],[0,"tsevt","atsamd51g::etm","ETM TimeStamp Event Register",null,null],[6,"R","atsamd51g::etm::tsevt","Reader of register TSEVT",null,null],[6,"W","","Writer for register TSEVT",null,null],[0,"traceidr","atsamd51g::etm","ETM CoreSight Trace ID Register",null,null],[6,"R","atsamd51g::etm::traceidr","Reader of register TRACEIDR",null,null],[6,"W","","Writer for register TRACEIDR",null,null],[0,"idr2","atsamd51g::etm","ETM ID Register 2",null,null],[6,"R","atsamd51g::etm::idr2","Reader of register IDR2",null,null],[0,"pdsr","atsamd51g::etm","ETM Device Power-Down Status Register",null,null],[6,"R","atsamd51g::etm::pdsr","Reader of register PDSR",null,null],[0,"itmiscin","atsamd51g::etm","ETM Integration Test Miscellaneous Inputs",null,null],[6,"R","atsamd51g::etm::itmiscin","Reader of register ITMISCIN",null,null],[0,"ittrigout","atsamd51g::etm","ETM Integration Test Trigger Out",null,null],[6,"W","atsamd51g::etm::ittrigout","Writer for register ITTRIGOUT",null,null],[0,"itatbctr2","atsamd51g::etm","ETM Integration Test ATB Control 2",null,null],[6,"R","atsamd51g::etm::itatbctr2","Reader of register ITATBCTR2",null,null],[0,"itatbctr0","atsamd51g::etm","ETM Integration Test ATB Control 0",null,null],[6,"W","atsamd51g::etm::itatbctr0","Writer for register ITATBCTR0",null,null],[0,"itctrl","atsamd51g::etm","ETM Integration Mode Control Register",null,null],[3,"INTEGRATION_W","atsamd51g::etm::itctrl","Write proxy for field `INTEGRATION`",null,null],[6,"R","","Reader of register ITCTRL",null,null],[6,"W","","Writer for register ITCTRL",null,null],[6,"INTEGRATION_R","","Reader of field `INTEGRATION`",null,null],[11,"set_bit","","Sets the field bit",4655,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4655,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4655,[[],["w",6]]],[11,"integration","atsamd51g::generic","Bit 0",6,[[],["integration_r",6]]],[11,"integration","atsamd51g::etm::itctrl","Bit 0",4656,[[],["integration_r",6]]],[11,"integration","atsamd51g::generic","Bit 0",7,[[],["integration_w",3]]],[11,"integration","atsamd51g::etm::itctrl","Bit 0",4657,[[],["integration_w",3]]],[0,"claimset","atsamd51g::etm","ETM Claim Tag Set Register",null,null],[6,"R","atsamd51g::etm::claimset","Reader of register CLAIMSET",null,null],[6,"W","","Writer for register CLAIMSET",null,null],[0,"claimclr","atsamd51g::etm","ETM Claim Tag Clear Register",null,null],[6,"R","atsamd51g::etm::claimclr","Reader of register CLAIMCLR",null,null],[6,"W","","Writer for register CLAIMCLR",null,null],[0,"lar","atsamd51g::etm","ETM Lock Access Register",null,null],[6,"W","atsamd51g::etm::lar","Writer for register LAR",null,null],[0,"lsr","atsamd51g::etm","ETM Lock Status Register",null,null],[6,"R","atsamd51g::etm::lsr","Reader of register LSR",null,null],[6,"PRESENT_R","","Reader of field `Present`",null,null],[6,"ACCESS_R","","Reader of field `Access`",null,null],[6,"BYTEACC_R","","Reader of field `ByteAcc`",null,null],[11,"present","atsamd51g::generic","Bit 0",6,[[],["present_r",6]]],[11,"access","","Bit 1",6,[[],["access_r",6]]],[11,"byte_acc","","Bit 2",6,[[],["byteacc_r",6]]],[11,"present","atsamd51g::etm::lsr","Bit 0",4658,[[],["present_r",6]]],[11,"access","","Bit 1",4658,[[],["access_r",6]]],[11,"byte_acc","","Bit 2",4658,[[],["byteacc_r",6]]],[0,"authstatus","atsamd51g::etm","ETM Authentication Status Register",null,null],[6,"R","atsamd51g::etm::authstatus","Reader of register AUTHSTATUS",null,null],[0,"devtype","atsamd51g::etm","ETM CoreSight Device Type Register",null,null],[6,"R","atsamd51g::etm::devtype","Reader of register DEVTYPE",null,null],[0,"pidr4","atsamd51g::etm","ETM Peripheral Identification Register #4",null,null],[6,"R","atsamd51g::etm::pidr4","Reader of register PIDR4",null,null],[0,"pidr5","atsamd51g::etm","ETM Peripheral Identification Register #5",null,null],[6,"R","atsamd51g::etm::pidr5","Reader of register PIDR5",null,null],[0,"pidr6","atsamd51g::etm","ETM Peripheral Identification Register #6",null,null],[6,"R","atsamd51g::etm::pidr6","Reader of register PIDR6",null,null],[0,"pidr7","atsamd51g::etm","ETM Peripheral Identification Register #7",null,null],[6,"R","atsamd51g::etm::pidr7","Reader of register PIDR7",null,null],[0,"pidr0","atsamd51g::etm","ETM Peripheral Identification Register #0",null,null],[6,"R","atsamd51g::etm::pidr0","Reader of register PIDR0",null,null],[0,"pidr1","atsamd51g::etm","ETM Peripheral Identification Register #1",null,null],[6,"R","atsamd51g::etm::pidr1","Reader of register PIDR1",null,null],[0,"pidr2","atsamd51g::etm","ETM Peripheral Identification Register #2",null,null],[6,"R","atsamd51g::etm::pidr2","Reader of register PIDR2",null,null],[0,"pidr3","atsamd51g::etm","ETM Peripheral Identification Register #3",null,null],[6,"R","atsamd51g::etm::pidr3","Reader of register PIDR3",null,null],[0,"cidr0","atsamd51g::etm","ETM Component Identification Register #0",null,null],[6,"R","atsamd51g::etm::cidr0","Reader of register CIDR0",null,null],[0,"cidr1","atsamd51g::etm","ETM Component Identification Register #1",null,null],[6,"R","atsamd51g::etm::cidr1","Reader of register CIDR1",null,null],[0,"cidr2","atsamd51g::etm","ETM Component Identification Register #2",null,null],[6,"R","atsamd51g::etm::cidr2","Reader of register CIDR2",null,null],[0,"cidr3","atsamd51g::etm","ETM Component Identification Register #3",null,null],[6,"R","atsamd51g::etm::cidr3","Reader of register CIDR3",null,null],[6,"CR","atsamd51g::etm","ETM Main Control Register",null,null],[6,"CCR","","ETM Configuration Code Register",null,null],[6,"TRIGGER","","ETM Trigger Event Register",null,null],[6,"SR","","ETM Status Register",null,null],[6,"SCR","","ETM System Configuration Register",null,null],[6,"TEEVR","","ETM TraceEnable Event Register",null,null],[6,"TECR1","","ETM TraceEnable Control 1 Register",null,null],[6,"FFLR","","ETM FIFO Full Level Register",null,null],[6,"CNTRLDVR1","","ETM Free-running Counter Reload Value",null,null],[6,"SYNCFR","","ETM Synchronization Frequency Register",null,null],[6,"IDR","","ETM ID Register",null,null],[6,"CCER","","ETM Configuration Code Extension Register",null,null],[6,"TESSEICR","","ETM TraceEnable Start/Stop EmbeddedICE Control Register",null,null],[6,"TSEVT","","ETM TimeStamp Event Register",null,null],[6,"TRACEIDR","","ETM CoreSight Trace ID Register",null,null],[6,"IDR2","","ETM ID Register 2",null,null],[6,"PDSR","","ETM Device Power-Down Status Register",null,null],[6,"ITMISCIN","","ETM Integration Test Miscellaneous Inputs",null,null],[6,"ITTRIGOUT","","ETM Integration Test Trigger Out",null,null],[6,"ITATBCTR2","","ETM Integration Test ATB Control 2",null,null],[6,"ITATBCTR0","","ETM Integration Test ATB Control 0",null,null],[6,"ITCTRL","","ETM Integration Mode Control Register",null,null],[6,"CLAIMSET","","ETM Claim Tag Set Register",null,null],[6,"CLAIMCLR","","ETM Claim Tag Clear Register",null,null],[6,"LAR","","ETM Lock Access Register",null,null],[6,"LSR","","ETM Lock Status Register",null,null],[6,"AUTHSTATUS","","ETM Authentication Status Register",null,null],[6,"DEVTYPE","","ETM CoreSight Device Type Register",null,null],[6,"PIDR4","","ETM Peripheral Identification Register #4",null,null],[6,"PIDR5","","ETM Peripheral Identification Register #5",null,null],[6,"PIDR6","","ETM Peripheral Identification Register #6",null,null],[6,"PIDR7","","ETM Peripheral Identification Register #7",null,null],[6,"PIDR0","","ETM Peripheral Identification Register #0",null,null],[6,"PIDR1","","ETM Peripheral Identification Register #1",null,null],[6,"PIDR2","","ETM Peripheral Identification Register #2",null,null],[6,"PIDR3","","ETM Peripheral Identification Register #3",null,null],[6,"CIDR0","","ETM Component Identification Register #0",null,null],[6,"CIDR1","","ETM Component Identification Register #1",null,null],[6,"CIDR2","","ETM Component Identification Register #2",null,null],[6,"CIDR3","","ETM Component Identification Register #3",null,null],[0,"sys_tick","atsamd51g","System timer",null,null],[3,"RegisterBlock","atsamd51g::sys_tick","Register block",null,null],[12,"csr","","0x00 - SysTick Control and Status Register",4659,null],[12,"rvr","","0x04 - SysTick Reload Value Register",4659,null],[12,"cvr","","0x08 - SysTick Current Value Register",4659,null],[12,"calib","","0x0c - SysTick Calibration Value Register",4659,null],[0,"csr","","SysTick Control and Status Register",null,null],[3,"ENABLE_W","atsamd51g::sys_tick::csr","Write proxy for field `ENABLE`",null,null],[3,"TICKINT_W","","Write proxy for field `TICKINT`",null,null],[3,"CLKSOURCE_W","","Write proxy for field `CLKSOURCE`",null,null],[3,"COUNTFLAG_W","","Write proxy for field `COUNTFLAG`",null,null],[4,"ENABLE_A","","SysTick Counter Enable",null,null],[13,"VALUE_0","","0: Counter disabled",4660,null],[13,"VALUE_1","","1: Counter enabled",4660,null],[4,"TICKINT_A","","SysTick Exception Request Enable",null,null],[13,"VALUE_0","","0: Counting down to 0 does not assert the SysTick…",4661,null],[13,"VALUE_1","","1: Counting down to 0 asserts the SysTick exception request",4661,null],[4,"CLKSOURCE_A","","Clock Source 0=external, 1=processor",null,null],[13,"VALUE_0","","0: External clock",4662,null],[13,"VALUE_1","","1: Processor clock",4662,null],[6,"R","","Reader of register CSR",null,null],[6,"W","","Writer for register CSR",null,null],[6,"ENABLE_R","","Reader of field `ENABLE`",null,null],[6,"TICKINT_R","","Reader of field `TICKINT`",null,null],[6,"CLKSOURCE_R","","Reader of field `CLKSOURCE`",null,null],[6,"COUNTFLAG_R","","Reader of field `COUNTFLAG`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["enable_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::sys_tick::csr","Get enumerated values variant",4663,[[],["enable_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4663,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4663,[[]]],[11,"variant","","Writes `variant` to the field",4664,[[["enable_a",4]],["w",6]]],[11,"value_0","","Counter disabled",4664,[[],["w",6]]],[11,"value_1","","Counter enabled",4664,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4664,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4664,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4664,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["tickint_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::sys_tick::csr","Get enumerated values variant",4665,[[],["tickint_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4665,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4665,[[]]],[11,"variant","","Writes `variant` to the field",4666,[[["tickint_a",4]],["w",6]]],[11,"value_0","","Counting down to 0 does not assert the SysTick exception…",4666,[[],["w",6]]],[11,"value_1","","Counting down to 0 asserts the SysTick exception request",4666,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4666,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4666,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4666,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["clksource_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::sys_tick::csr","Get enumerated values variant",4667,[[],["clksource_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4667,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4667,[[]]],[11,"variant","","Writes `variant` to the field",4668,[[["clksource_a",4]],["w",6]]],[11,"value_0","","External clock",4668,[[],["w",6]]],[11,"value_1","","Processor clock",4668,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4668,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4668,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4668,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4669,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4669,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4669,[[],["w",6]]],[11,"enable","atsamd51g::generic","Bit 0 - SysTick Counter Enable",6,[[],["enable_r",6]]],[11,"tickint","","Bit 1 - SysTick Exception Request Enable",6,[[],["tickint_r",6]]],[11,"clksource","","Bit 2 - Clock Source 0=external, 1=processor",6,[[],["clksource_r",6]]],[11,"countflag","","Bit 16 - Timer counted to 0 since last read of register",6,[[],["countflag_r",6]]],[11,"enable","atsamd51g::sys_tick::csr","Bit 0 - SysTick Counter Enable",4670,[[],["enable_r",6]]],[11,"tickint","","Bit 1 - SysTick Exception Request Enable",4670,[[],["tickint_r",6]]],[11,"clksource","","Bit 2 - Clock Source 0=external, 1=processor",4670,[[],["clksource_r",6]]],[11,"countflag","","Bit 16 - Timer counted to 0 since last read of register",4670,[[],["countflag_r",6]]],[11,"enable","atsamd51g::generic","Bit 0 - SysTick Counter Enable",7,[[],["enable_w",3]]],[11,"tickint","","Bit 1 - SysTick Exception Request Enable",7,[[],["tickint_w",3]]],[11,"clksource","","Bit 2 - Clock Source 0=external, 1=processor",7,[[],["clksource_w",3]]],[11,"countflag","","Bit 16 - Timer counted to 0 since last read of register",7,[[],["countflag_w",3]]],[11,"enable","atsamd51g::sys_tick::csr","Bit 0 - SysTick Counter Enable",4671,[[],["enable_w",3]]],[11,"tickint","","Bit 1 - SysTick Exception Request Enable",4671,[[],["tickint_w",3]]],[11,"clksource","","Bit 2 - Clock Source 0=external, 1=processor",4671,[[],["clksource_w",3]]],[11,"countflag","","Bit 16 - Timer counted to 0 since last read of register",4671,[[],["countflag_w",3]]],[0,"rvr","atsamd51g::sys_tick","SysTick Reload Value Register",null,null],[3,"RELOAD_W","atsamd51g::sys_tick::rvr","Write proxy for field `RELOAD`",null,null],[6,"R","","Reader of register RVR",null,null],[6,"W","","Writer for register RVR",null,null],[6,"RELOAD_R","","Reader of field `RELOAD`",null,null],[11,"bits","","Writes raw bits to the field",4672,[[],["w",6]]],[11,"reload","atsamd51g::generic","Bits 0:23 - Value to load into the SysTick Current Value…",6,[[],["reload_r",6]]],[11,"reload","atsamd51g::sys_tick::rvr","Bits 0:23 - Value to load into the SysTick Current Value…",4673,[[],["reload_r",6]]],[11,"reload","atsamd51g::generic","Bits 0:23 - Value to load into the SysTick Current Value…",7,[[],["reload_w",3]]],[11,"reload","atsamd51g::sys_tick::rvr","Bits 0:23 - Value to load into the SysTick Current Value…",4674,[[],["reload_w",3]]],[0,"cvr","atsamd51g::sys_tick","SysTick Current Value Register",null,null],[3,"CURRENT_W","atsamd51g::sys_tick::cvr","Write proxy for field `CURRENT`",null,null],[6,"R","","Reader of register CVR",null,null],[6,"W","","Writer for register CVR",null,null],[6,"CURRENT_R","","Reader of field `CURRENT`",null,null],[11,"bits","","Writes raw bits to the field",4675,[[],["w",6]]],[11,"current","atsamd51g::generic","Bits 0:23 - Current value at the time the register is…",6,[[],["current_r",6]]],[11,"current","atsamd51g::sys_tick::cvr","Bits 0:23 - Current value at the time the register is…",4676,[[],["current_r",6]]],[11,"current","atsamd51g::generic","Bits 0:23 - Current value at the time the register is…",7,[[],["current_w",3]]],[11,"current","atsamd51g::sys_tick::cvr","Bits 0:23 - Current value at the time the register is…",4677,[[],["current_w",3]]],[0,"calib","atsamd51g::sys_tick","SysTick Calibration Value Register",null,null],[4,"SKEW_A","atsamd51g::sys_tick::calib","TENMS is rounded from non-integer ratio",null,null],[13,"VALUE_0","","0: 10ms calibration value is exact",4678,null],[13,"VALUE_1","","1: 10ms calibration value is inexact, because of the clock…",4678,null],[4,"NOREF_A","","No Separate Reference Clock",null,null],[13,"VALUE_0","","0: The reference clock is provided",4679,null],[13,"VALUE_1","","1: The reference clock is not provided",4679,null],[6,"R","","Reader of register CALIB",null,null],[6,"TENMS_R","","Reader of field `TENMS`",null,null],[6,"SKEW_R","","Reader of field `SKEW`",null,null],[6,"NOREF_R","","Reader of field `NOREF`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["skew_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::sys_tick::calib","Get enumerated values variant",4680,[[],["skew_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4680,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4680,[[]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["noref_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::sys_tick::calib","Get enumerated values variant",4681,[[],["noref_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4681,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4681,[[]]],[11,"tenms","atsamd51g::generic","Bits 0:23 - Reload value to use for 10ms timing",6,[[],["tenms_r",6]]],[11,"skew","","Bit 30 - TENMS is rounded from non-integer ratio",6,[[],["skew_r",6]]],[11,"noref","","Bit 31 - No Separate Reference Clock",6,[[],["noref_r",6]]],[11,"tenms","atsamd51g::sys_tick::calib","Bits 0:23 - Reload value to use for 10ms timing",4682,[[],["tenms_r",6]]],[11,"skew","","Bit 30 - TENMS is rounded from non-integer ratio",4682,[[],["skew_r",6]]],[11,"noref","","Bit 31 - No Separate Reference Clock",4682,[[],["noref_r",6]]],[6,"CSR","atsamd51g::sys_tick","SysTick Control and Status Register",null,null],[6,"RVR","","SysTick Reload Value Register",null,null],[6,"CVR","","SysTick Current Value Register",null,null],[6,"CALIB","","SysTick Calibration Value Register",null,null],[0,"system_control","atsamd51g","System Control Registers",null,null],[3,"RegisterBlock","atsamd51g::system_control","Register block",null,null],[12,"ictr","","0x04 - Interrupt Controller Type Register",4683,null],[12,"actlr","","0x08 - Auxiliary Control Register",4683,null],[12,"cpuid","","0xd00 - CPUID Base Register",4683,null],[12,"icsr","","0xd04 - Interrupt Control and State Register",4683,null],[12,"vtor","","0xd08 - Vector Table Offset Register",4683,null],[12,"aircr","","0xd0c - Application Interrupt and Reset Control Register",4683,null],[12,"scr","","0xd10 - System Control Register",4683,null],[12,"ccr","","0xd14 - Configuration and Control Register",4683,null],[12,"shpr1","","0xd18 - System Handler Priority Register 1",4683,null],[12,"shpr2","","0xd1c - System Handler Priority Register 2",4683,null],[12,"shpr3","","0xd20 - System Handler Priority Register 3",4683,null],[12,"shcsr","","0xd24 - System Handler Control and State Register",4683,null],[12,"cfsr","","0xd28 - Configurable Fault Status Register",4683,null],[12,"hfsr","","0xd2c - HardFault Status Register",4683,null],[12,"dfsr","","0xd30 - Debug Fault Status Register",4683,null],[12,"mmfar","","0xd34 - MemManage Fault Address Register",4683,null],[12,"bfar","","0xd38 - BusFault Address Register",4683,null],[12,"afsr","","0xd3c - Auxiliary Fault Status Register",4683,null],[12,"pfr","","0xd40 - Processor Feature Register",4683,null],[12,"dfr","","0xd48 - Debug Feature Register",4683,null],[12,"adr","","0xd4c - Auxiliary Feature Register",4683,null],[12,"mmfr","","0xd50 - Memory Model Feature Register",4683,null],[12,"isar","","0xd60 - Instruction Set Attributes Register",4683,null],[12,"cpacr","","0xd88 - Coprocessor Access Control Register",4683,null],[0,"ictr","","Interrupt Controller Type Register",null,null],[6,"R","atsamd51g::system_control::ictr","Reader of register ICTR",null,null],[6,"INTLINESNUM_R","","Reader of field `INTLINESNUM`",null,null],[11,"intlinesnum","atsamd51g::generic","Bits 0:3",6,[[],["intlinesnum_r",6]]],[11,"intlinesnum","atsamd51g::system_control::ictr","Bits 0:3",4684,[[],["intlinesnum_r",6]]],[0,"actlr","atsamd51g::system_control","Auxiliary Control Register",null,null],[3,"DISMCYCINT_W","atsamd51g::system_control::actlr","Write proxy for field `DISMCYCINT`",null,null],[3,"DISDEFWBUF_W","","Write proxy for field `DISDEFWBUF`",null,null],[3,"DISFOLD_W","","Write proxy for field `DISFOLD`",null,null],[3,"DISFPCA_W","","Write proxy for field `DISFPCA`",null,null],[3,"DISOOFP_W","","Write proxy for field `DISOOFP`",null,null],[6,"R","","Reader of register ACTLR",null,null],[6,"W","","Writer for register ACTLR",null,null],[6,"DISMCYCINT_R","","Reader of field `DISMCYCINT`",null,null],[6,"DISDEFWBUF_R","","Reader of field `DISDEFWBUF`",null,null],[6,"DISFOLD_R","","Reader of field `DISFOLD`",null,null],[6,"DISFPCA_R","","Reader of field `DISFPCA`",null,null],[6,"DISOOFP_R","","Reader of field `DISOOFP`",null,null],[11,"set_bit","","Sets the field bit",4685,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4685,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4685,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4686,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4686,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4686,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4687,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4687,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4687,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4688,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4688,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4688,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4689,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4689,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4689,[[],["w",6]]],[11,"dismcycint","atsamd51g::generic","Bit 0 - Disable interruption of LDM/STM instructions",6,[[],["dismcycint_r",6]]],[11,"disdefwbuf","","Bit 1 - Disable wruite buffer use during default memory…",6,[[],["disdefwbuf_r",6]]],[11,"disfold","","Bit 2 - Disable IT folding",6,[[],["disfold_r",6]]],[11,"disfpca","","Bit 8 - Disable automatic update of CONTROL.FPCA",6,[[],["disfpca_r",6]]],[11,"disoofp","","Bit 9 - Disable out-of-order FP instructions",6,[[],["disoofp_r",6]]],[11,"dismcycint","atsamd51g::system_control::actlr","Bit 0 - Disable interruption of LDM/STM instructions",4690,[[],["dismcycint_r",6]]],[11,"disdefwbuf","","Bit 1 - Disable wruite buffer use during default memory…",4690,[[],["disdefwbuf_r",6]]],[11,"disfold","","Bit 2 - Disable IT folding",4690,[[],["disfold_r",6]]],[11,"disfpca","","Bit 8 - Disable automatic update of CONTROL.FPCA",4690,[[],["disfpca_r",6]]],[11,"disoofp","","Bit 9 - Disable out-of-order FP instructions",4690,[[],["disoofp_r",6]]],[11,"dismcycint","atsamd51g::generic","Bit 0 - Disable interruption of LDM/STM instructions",7,[[],["dismcycint_w",3]]],[11,"disdefwbuf","","Bit 1 - Disable wruite buffer use during default memory…",7,[[],["disdefwbuf_w",3]]],[11,"disfold","","Bit 2 - Disable IT folding",7,[[],["disfold_w",3]]],[11,"disfpca","","Bit 8 - Disable automatic update of CONTROL.FPCA",7,[[],["disfpca_w",3]]],[11,"disoofp","","Bit 9 - Disable out-of-order FP instructions",7,[[],["disoofp_w",3]]],[11,"dismcycint","atsamd51g::system_control::actlr","Bit 0 - Disable interruption of LDM/STM instructions",4691,[[],["dismcycint_w",3]]],[11,"disdefwbuf","","Bit 1 - Disable wruite buffer use during default memory…",4691,[[],["disdefwbuf_w",3]]],[11,"disfold","","Bit 2 - Disable IT folding",4691,[[],["disfold_w",3]]],[11,"disfpca","","Bit 8 - Disable automatic update of CONTROL.FPCA",4691,[[],["disfpca_w",3]]],[11,"disoofp","","Bit 9 - Disable out-of-order FP instructions",4691,[[],["disoofp_w",3]]],[0,"cpuid","atsamd51g::system_control","CPUID Base Register",null,null],[6,"R","atsamd51g::system_control::cpuid","Reader of register CPUID",null,null],[6,"REVISION_R","","Reader of field `REVISION`",null,null],[6,"PARTNO_R","","Reader of field `PARTNO`",null,null],[6,"CONSTANT_R","","Reader of field `CONSTANT`",null,null],[6,"VARIANT_R","","Reader of field `VARIANT`",null,null],[6,"IMPLEMENTER_R","","Reader of field `IMPLEMENTER`",null,null],[11,"revision","atsamd51g::generic","Bits 0:3 - Processor revision number",6,[[],["revision_r",6]]],[11,"partno","","Bits 4:15 - Process Part Number, 0xC24=Cortex-M4",6,[[],["partno_r",6]]],[11,"constant","","Bits 16:19 - Constant",6,[[],["constant_r",6]]],[11,"variant","","Bits 20:23 - Variant number",6,[[],["variant_r",6]]],[11,"implementer","","Bits 24:31 - Implementer code, 0x41=ARM",6,[[],["implementer_r",6]]],[11,"revision","atsamd51g::system_control::cpuid","Bits 0:3 - Processor revision number",4692,[[],["revision_r",6]]],[11,"partno","","Bits 4:15 - Process Part Number, 0xC24=Cortex-M4",4692,[[],["partno_r",6]]],[11,"constant","","Bits 16:19 - Constant",4692,[[],["constant_r",6]]],[11,"variant","","Bits 20:23 - Variant number",4692,[[],["variant_r",6]]],[11,"implementer","","Bits 24:31 - Implementer code, 0x41=ARM",4692,[[],["implementer_r",6]]],[0,"icsr","atsamd51g::system_control","Interrupt Control and State Register",null,null],[3,"VECTACTIVE_W","atsamd51g::system_control::icsr","Write proxy for field `VECTACTIVE`",null,null],[3,"RETTOBASE_W","","Write proxy for field `RETTOBASE`",null,null],[3,"VECTPENDING_W","","Write proxy for field `VECTPENDING`",null,null],[3,"ISRPENDING_W","","Write proxy for field `ISRPENDING`",null,null],[3,"ISRPREEMPT_W","","Write proxy for field `ISRPREEMPT`",null,null],[3,"PENDSTCLR_W","","Write proxy for field `PENDSTCLR`",null,null],[3,"PENDSTSET_W","","Write proxy for field `PENDSTSET`",null,null],[3,"PENDSVCLR_W","","Write proxy for field `PENDSVCLR`",null,null],[3,"PENDSVSET_W","","Write proxy for field `PENDSVSET`",null,null],[3,"NMIPENDSET_W","","Write proxy for field `NMIPENDSET`",null,null],[4,"PENDSTCLR_A","","SysTick clear-pending bit",null,null],[13,"VALUE_0","","0: No effect",4693,null],[13,"VALUE_1","","1: Removes the pending state from the SysTick exception",4693,null],[4,"PENDSTSET_A","","SysTick set-pending bit",null,null],[13,"VALUE_0","","0: Write: no effect; read: SysTick exception is not pending",4694,null],[13,"VALUE_1","","1: Write: changes SysTick exception state to pending;…",4694,null],[4,"PENDSVCLR_A","","PendSV clear-pending bit",null,null],[13,"VALUE_0","","0: No effect",4695,null],[13,"VALUE_1","","1: Removes the pending state from the PendSV exception",4695,null],[4,"PENDSVSET_A","","PendSV set-pending bit",null,null],[13,"VALUE_0","","0: Write: no effect; read: PendSV exception is not pending",4696,null],[13,"VALUE_1","","1: Write: changes PendSV exception state to pending; read:…",4696,null],[4,"NMIPENDSET_A","","NMI set-pending bit",null,null],[13,"VALUE_0","","0: Write: no effect; read: NMI exception is not pending",4697,null],[13,"VALUE_1","","1: Write: changes NMI exception state to pending; read:…",4697,null],[6,"R","","Reader of register ICSR",null,null],[6,"W","","Writer for register ICSR",null,null],[6,"VECTACTIVE_R","","Reader of field `VECTACTIVE`",null,null],[6,"RETTOBASE_R","","Reader of field `RETTOBASE`",null,null],[6,"VECTPENDING_R","","Reader of field `VECTPENDING`",null,null],[6,"ISRPENDING_R","","Reader of field `ISRPENDING`",null,null],[6,"ISRPREEMPT_R","","Reader of field `ISRPREEMPT`",null,null],[6,"PENDSTCLR_R","","Reader of field `PENDSTCLR`",null,null],[6,"PENDSTSET_R","","Reader of field `PENDSTSET`",null,null],[6,"PENDSVCLR_R","","Reader of field `PENDSVCLR`",null,null],[6,"PENDSVSET_R","","Reader of field `PENDSVSET`",null,null],[6,"NMIPENDSET_R","","Reader of field `NMIPENDSET`",null,null],[11,"bits","","Writes raw bits to the field",4698,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4699,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4699,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4699,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4700,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4701,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4701,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4701,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4702,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4702,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4702,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pendstclr_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::icsr","Get enumerated values variant",4703,[[],["pendstclr_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4703,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4703,[[]]],[11,"variant","","Writes `variant` to the field",4704,[[["pendstclr_a",4]],["w",6]]],[11,"value_0","","No effect",4704,[[],["w",6]]],[11,"value_1","","Removes the pending state from the SysTick exception",4704,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4704,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4704,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4704,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pendstset_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::icsr","Get enumerated values variant",4705,[[],["pendstset_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4705,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4705,[[]]],[11,"variant","","Writes `variant` to the field",4706,[[["pendstset_a",4]],["w",6]]],[11,"value_0","","Write: no effect; read: SysTick exception is not pending",4706,[[],["w",6]]],[11,"value_1","","Write: changes SysTick exception state to pending; read:…",4706,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4706,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4706,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4706,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pendsvclr_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::icsr","Get enumerated values variant",4707,[[],["pendsvclr_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4707,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4707,[[]]],[11,"variant","","Writes `variant` to the field",4708,[[["pendsvclr_a",4]],["w",6]]],[11,"value_0","","No effect",4708,[[],["w",6]]],[11,"value_1","","Removes the pending state from the PendSV exception",4708,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4708,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4708,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4708,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["pendsvset_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::icsr","Get enumerated values variant",4709,[[],["pendsvset_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4709,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4709,[[]]],[11,"variant","","Writes `variant` to the field",4710,[[["pendsvset_a",4]],["w",6]]],[11,"value_0","","Write: no effect; read: PendSV exception is not pending",4710,[[],["w",6]]],[11,"value_1","","Write: changes PendSV exception state to pending; read:…",4710,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4710,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4710,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4710,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["nmipendset_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::icsr","Get enumerated values variant",4711,[[],["nmipendset_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4711,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4711,[[]]],[11,"variant","","Writes `variant` to the field",4712,[[["nmipendset_a",4]],["w",6]]],[11,"value_0","","Write: no effect; read: NMI exception is not pending",4712,[[],["w",6]]],[11,"value_1","","Write: changes NMI exception state to pending; read: NMI…",4712,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4712,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4712,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4712,[[],["w",6]]],[11,"vectactive","atsamd51g::generic","Bits 0:8 - Active exception number",6,[[],["vectactive_r",6]]],[11,"rettobase","","Bit 11 - No preempted active exceptions to execute",6,[[],["rettobase_r",6]]],[11,"vectpending","","Bits 12:17 - Exception number of the highest priority…",6,[[],["vectpending_r",6]]],[11,"isrpending","","Bit 22 - Interrupt pending flag",6,[[],["isrpending_r",6]]],[11,"isrpreempt","","Bit 23 - Debug only",6,[[],["isrpreempt_r",6]]],[11,"pendstclr","","Bit 25 - SysTick clear-pending bit",6,[[],["pendstclr_r",6]]],[11,"pendstset","","Bit 26 - SysTick set-pending bit",6,[[],["pendstset_r",6]]],[11,"pendsvclr","","Bit 27 - PendSV clear-pending bit",6,[[],["pendsvclr_r",6]]],[11,"pendsvset","","Bit 28 - PendSV set-pending bit",6,[[],["pendsvset_r",6]]],[11,"nmipendset","","Bit 31 - NMI set-pending bit",6,[[],["nmipendset_r",6]]],[11,"vectactive","atsamd51g::system_control::icsr","Bits 0:8 - Active exception number",4713,[[],["vectactive_r",6]]],[11,"rettobase","","Bit 11 - No preempted active exceptions to execute",4713,[[],["rettobase_r",6]]],[11,"vectpending","","Bits 12:17 - Exception number of the highest priority…",4713,[[],["vectpending_r",6]]],[11,"isrpending","","Bit 22 - Interrupt pending flag",4713,[[],["isrpending_r",6]]],[11,"isrpreempt","","Bit 23 - Debug only",4713,[[],["isrpreempt_r",6]]],[11,"pendstclr","","Bit 25 - SysTick clear-pending bit",4713,[[],["pendstclr_r",6]]],[11,"pendstset","","Bit 26 - SysTick set-pending bit",4713,[[],["pendstset_r",6]]],[11,"pendsvclr","","Bit 27 - PendSV clear-pending bit",4713,[[],["pendsvclr_r",6]]],[11,"pendsvset","","Bit 28 - PendSV set-pending bit",4713,[[],["pendsvset_r",6]]],[11,"nmipendset","","Bit 31 - NMI set-pending bit",4713,[[],["nmipendset_r",6]]],[11,"vectactive","atsamd51g::generic","Bits 0:8 - Active exception number",7,[[],["vectactive_w",3]]],[11,"rettobase","","Bit 11 - No preempted active exceptions to execute",7,[[],["rettobase_w",3]]],[11,"vectpending","","Bits 12:17 - Exception number of the highest priority…",7,[[],["vectpending_w",3]]],[11,"isrpending","","Bit 22 - Interrupt pending flag",7,[[],["isrpending_w",3]]],[11,"isrpreempt","","Bit 23 - Debug only",7,[[],["isrpreempt_w",3]]],[11,"pendstclr","","Bit 25 - SysTick clear-pending bit",7,[[],["pendstclr_w",3]]],[11,"pendstset","","Bit 26 - SysTick set-pending bit",7,[[],["pendstset_w",3]]],[11,"pendsvclr","","Bit 27 - PendSV clear-pending bit",7,[[],["pendsvclr_w",3]]],[11,"pendsvset","","Bit 28 - PendSV set-pending bit",7,[[],["pendsvset_w",3]]],[11,"nmipendset","","Bit 31 - NMI set-pending bit",7,[[],["nmipendset_w",3]]],[11,"vectactive","atsamd51g::system_control::icsr","Bits 0:8 - Active exception number",4714,[[],["vectactive_w",3]]],[11,"rettobase","","Bit 11 - No preempted active exceptions to execute",4714,[[],["rettobase_w",3]]],[11,"vectpending","","Bits 12:17 - Exception number of the highest priority…",4714,[[],["vectpending_w",3]]],[11,"isrpending","","Bit 22 - Interrupt pending flag",4714,[[],["isrpending_w",3]]],[11,"isrpreempt","","Bit 23 - Debug only",4714,[[],["isrpreempt_w",3]]],[11,"pendstclr","","Bit 25 - SysTick clear-pending bit",4714,[[],["pendstclr_w",3]]],[11,"pendstset","","Bit 26 - SysTick set-pending bit",4714,[[],["pendstset_w",3]]],[11,"pendsvclr","","Bit 27 - PendSV clear-pending bit",4714,[[],["pendsvclr_w",3]]],[11,"pendsvset","","Bit 28 - PendSV set-pending bit",4714,[[],["pendsvset_w",3]]],[11,"nmipendset","","Bit 31 - NMI set-pending bit",4714,[[],["nmipendset_w",3]]],[0,"vtor","atsamd51g::system_control","Vector Table Offset Register",null,null],[3,"TBLOFF_W","atsamd51g::system_control::vtor","Write proxy for field `TBLOFF`",null,null],[6,"R","","Reader of register VTOR",null,null],[6,"W","","Writer for register VTOR",null,null],[6,"TBLOFF_R","","Reader of field `TBLOFF`",null,null],[11,"bits","","Writes raw bits to the field",4715,[[],["w",6]]],[11,"tbloff","atsamd51g::generic","Bits 7:31 - Vector table base offset",6,[[],["tbloff_r",6]]],[11,"tbloff","atsamd51g::system_control::vtor","Bits 7:31 - Vector table base offset",4716,[[],["tbloff_r",6]]],[11,"tbloff","atsamd51g::generic","Bits 7:31 - Vector table base offset",7,[[],["tbloff_w",3]]],[11,"tbloff","atsamd51g::system_control::vtor","Bits 7:31 - Vector table base offset",4717,[[],["tbloff_w",3]]],[0,"aircr","atsamd51g::system_control","Application Interrupt and Reset Control Register",null,null],[3,"VECTRESET_W","atsamd51g::system_control::aircr","Write proxy for field `VECTRESET`",null,null],[3,"VECTCLRACTIVE_W","","Write proxy for field `VECTCLRACTIVE`",null,null],[3,"SYSRESETREQ_W","","Write proxy for field `SYSRESETREQ`",null,null],[3,"PRIGROUP_W","","Write proxy for field `PRIGROUP`",null,null],[3,"ENDIANNESS_W","","Write proxy for field `ENDIANNESS`",null,null],[3,"VECTKEY_W","","Write proxy for field `VECTKEY`",null,null],[4,"SYSRESETREQ_A","","System Reset Request",null,null],[13,"VALUE_0","","0: No system reset request",4718,null],[13,"VALUE_1","","1: Asserts a signal to the outer system that requests a…",4718,null],[4,"ENDIANNESS_A","","Data endianness, 0=little, 1=big",null,null],[13,"VALUE_0","","0: Little-endian",4719,null],[13,"VALUE_1","","1: Big-endian",4719,null],[6,"R","","Reader of register AIRCR",null,null],[6,"W","","Writer for register AIRCR",null,null],[6,"VECTRESET_R","","Reader of field `VECTRESET`",null,null],[6,"VECTCLRACTIVE_R","","Reader of field `VECTCLRACTIVE`",null,null],[6,"SYSRESETREQ_R","","Reader of field `SYSRESETREQ`",null,null],[6,"PRIGROUP_R","","Reader of field `PRIGROUP`",null,null],[6,"ENDIANNESS_R","","Reader of field `ENDIANNESS`",null,null],[6,"VECTKEY_R","","Reader of field `VECTKEY`",null,null],[11,"set_bit","","Sets the field bit",4720,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4720,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4720,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4721,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4721,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4721,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sysresetreq_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::aircr","Get enumerated values variant",4722,[[],["sysresetreq_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4722,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4722,[[]]],[11,"variant","","Writes `variant` to the field",4723,[[["sysresetreq_a",4]],["w",6]]],[11,"value_0","","No system reset request",4723,[[],["w",6]]],[11,"value_1","","Asserts a signal to the outer system that requests a reset",4723,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4723,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4723,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4723,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4724,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["endianness_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::aircr","Get enumerated values variant",4725,[[],["endianness_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4725,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4725,[[]]],[11,"variant","","Writes `variant` to the field",4726,[[["endianness_a",4]],["w",6]]],[11,"value_0","","Little-endian",4726,[[],["w",6]]],[11,"value_1","","Big-endian",4726,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4726,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4726,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4726,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4727,[[],["w",6]]],[11,"vectreset","atsamd51g::generic","Bit 0 - Must write 0",6,[[],["vectreset_r",6]]],[11,"vectclractive","","Bit 1 - Must write 0",6,[[],["vectclractive_r",6]]],[11,"sysresetreq","","Bit 2 - System Reset Request",6,[[],["sysresetreq_r",6]]],[11,"prigroup","","Bits 8:10 - Interrupt priority grouping",6,[[],["prigroup_r",6]]],[11,"endianness","","Bit 15 - Data endianness, 0=little, 1=big",6,[[],["endianness_r",6]]],[11,"vectkey","","Bits 16:31 - Register key",6,[[],["vectkey_r",6]]],[11,"vectreset","atsamd51g::system_control::aircr","Bit 0 - Must write 0",4728,[[],["vectreset_r",6]]],[11,"vectclractive","","Bit 1 - Must write 0",4728,[[],["vectclractive_r",6]]],[11,"sysresetreq","","Bit 2 - System Reset Request",4728,[[],["sysresetreq_r",6]]],[11,"prigroup","","Bits 8:10 - Interrupt priority grouping",4728,[[],["prigroup_r",6]]],[11,"endianness","","Bit 15 - Data endianness, 0=little, 1=big",4728,[[],["endianness_r",6]]],[11,"vectkey","","Bits 16:31 - Register key",4728,[[],["vectkey_r",6]]],[11,"vectreset","atsamd51g::generic","Bit 0 - Must write 0",7,[[],["vectreset_w",3]]],[11,"vectclractive","","Bit 1 - Must write 0",7,[[],["vectclractive_w",3]]],[11,"sysresetreq","","Bit 2 - System Reset Request",7,[[],["sysresetreq_w",3]]],[11,"prigroup","","Bits 8:10 - Interrupt priority grouping",7,[[],["prigroup_w",3]]],[11,"endianness","","Bit 15 - Data endianness, 0=little, 1=big",7,[[],["endianness_w",3]]],[11,"vectkey","","Bits 16:31 - Register key",7,[[],["vectkey_w",3]]],[11,"vectreset","atsamd51g::system_control::aircr","Bit 0 - Must write 0",4729,[[],["vectreset_w",3]]],[11,"vectclractive","","Bit 1 - Must write 0",4729,[[],["vectclractive_w",3]]],[11,"sysresetreq","","Bit 2 - System Reset Request",4729,[[],["sysresetreq_w",3]]],[11,"prigroup","","Bits 8:10 - Interrupt priority grouping",4729,[[],["prigroup_w",3]]],[11,"endianness","","Bit 15 - Data endianness, 0=little, 1=big",4729,[[],["endianness_w",3]]],[11,"vectkey","","Bits 16:31 - Register key",4729,[[],["vectkey_w",3]]],[0,"scr","atsamd51g::system_control","System Control Register",null,null],[3,"SLEEPONEXIT_W","atsamd51g::system_control::scr","Write proxy for field `SLEEPONEXIT`",null,null],[3,"SLEEPDEEP_W","","Write proxy for field `SLEEPDEEP`",null,null],[3,"SEVONPEND_W","","Write proxy for field `SEVONPEND`",null,null],[4,"SLEEPONEXIT_A","","Sleep-on-exit on handler return",null,null],[13,"VALUE_0","","0: Do not sleep when returning to Thread mode",4730,null],[13,"VALUE_1","","1: Enter sleep, or deep sleep, on return from an ISR",4730,null],[4,"SLEEPDEEP_A","","Deep Sleep used as low power mode",null,null],[13,"VALUE_0","","0: Sleep",4731,null],[13,"VALUE_1","","1: Deep sleep",4731,null],[4,"SEVONPEND_A","","Send Event on Pending bit",null,null],[13,"VALUE_0","","0: Only enabled interrupts or events can wakeup the…",4732,null],[13,"VALUE_1","","1: Enabled events and all interrupts, including disabled…",4732,null],[6,"R","","Reader of register SCR",null,null],[6,"W","","Writer for register SCR",null,null],[6,"SLEEPONEXIT_R","","Reader of field `SLEEPONEXIT`",null,null],[6,"SLEEPDEEP_R","","Reader of field `SLEEPDEEP`",null,null],[6,"SEVONPEND_R","","Reader of field `SEVONPEND`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sleeponexit_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::scr","Get enumerated values variant",4733,[[],["sleeponexit_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4733,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4733,[[]]],[11,"variant","","Writes `variant` to the field",4734,[[["sleeponexit_a",4]],["w",6]]],[11,"value_0","","Do not sleep when returning to Thread mode",4734,[[],["w",6]]],[11,"value_1","","Enter sleep, or deep sleep, on return from an ISR",4734,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4734,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4734,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4734,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sleepdeep_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::scr","Get enumerated values variant",4735,[[],["sleepdeep_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4735,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4735,[[]]],[11,"variant","","Writes `variant` to the field",4736,[[["sleepdeep_a",4]],["w",6]]],[11,"value_0","","Sleep",4736,[[],["w",6]]],[11,"value_1","","Deep sleep",4736,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4736,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4736,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4736,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["sevonpend_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::scr","Get enumerated values variant",4737,[[],["sevonpend_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4737,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4737,[[]]],[11,"variant","","Writes `variant` to the field",4738,[[["sevonpend_a",4]],["w",6]]],[11,"value_0","","Only enabled interrupts or events can wakeup the…",4738,[[],["w",6]]],[11,"value_1","","Enabled events and all interrupts, including disabled…",4738,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4738,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4738,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4738,[[],["w",6]]],[11,"sleeponexit","atsamd51g::generic","Bit 1 - Sleep-on-exit on handler return",6,[[],["sleeponexit_r",6]]],[11,"sleepdeep","","Bit 2 - Deep Sleep used as low power mode",6,[[],["sleepdeep_r",6]]],[11,"sevonpend","","Bit 4 - Send Event on Pending bit",6,[[],["sevonpend_r",6]]],[11,"sleeponexit","atsamd51g::system_control::scr","Bit 1 - Sleep-on-exit on handler return",4739,[[],["sleeponexit_r",6]]],[11,"sleepdeep","","Bit 2 - Deep Sleep used as low power mode",4739,[[],["sleepdeep_r",6]]],[11,"sevonpend","","Bit 4 - Send Event on Pending bit",4739,[[],["sevonpend_r",6]]],[11,"sleeponexit","atsamd51g::generic","Bit 1 - Sleep-on-exit on handler return",7,[[],["sleeponexit_w",3]]],[11,"sleepdeep","","Bit 2 - Deep Sleep used as low power mode",7,[[],["sleepdeep_w",3]]],[11,"sevonpend","","Bit 4 - Send Event on Pending bit",7,[[],["sevonpend_w",3]]],[11,"sleeponexit","atsamd51g::system_control::scr","Bit 1 - Sleep-on-exit on handler return",4740,[[],["sleeponexit_w",3]]],[11,"sleepdeep","","Bit 2 - Deep Sleep used as low power mode",4740,[[],["sleepdeep_w",3]]],[11,"sevonpend","","Bit 4 - Send Event on Pending bit",4740,[[],["sevonpend_w",3]]],[0,"ccr","atsamd51g::system_control","Configuration and Control Register",null,null],[3,"NONBASETHRDENA_W","atsamd51g::system_control::ccr","Write proxy for field `NONBASETHRDENA`",null,null],[3,"USERSETMPEND_W","","Write proxy for field `USERSETMPEND`",null,null],[3,"UNALIGN_TRP_W","","Write proxy for field `UNALIGN_TRP`",null,null],[3,"DIV_0_TRP_W","","Write proxy for field `DIV_0_TRP`",null,null],[3,"BFHFNMIGN_W","","Write proxy for field `BFHFNMIGN`",null,null],[3,"STKALIGN_W","","Write proxy for field `STKALIGN`",null,null],[4,"UNALIGN_TRP_A","","Enables unaligned access traps",null,null],[13,"VALUE_0","","0: Do not trap unaligned halfword and word accesses",4741,null],[13,"VALUE_1","","1: Trap unaligned halfword and word accesses",4741,null],[4,"STKALIGN_A","","Indicates stack alignment on exception entry",null,null],[13,"VALUE_0","","0: 4-byte aligned",4742,null],[13,"VALUE_1","","1: 8-byte aligned",4742,null],[6,"R","","Reader of register CCR",null,null],[6,"W","","Writer for register CCR",null,null],[6,"NONBASETHRDENA_R","","Reader of field `NONBASETHRDENA`",null,null],[6,"USERSETMPEND_R","","Reader of field `USERSETMPEND`",null,null],[6,"UNALIGN_TRP_R","","Reader of field `UNALIGN_TRP`",null,null],[6,"DIV_0_TRP_R","","Reader of field `DIV_0_TRP`",null,null],[6,"BFHFNMIGN_R","","Reader of field `BFHFNMIGN`",null,null],[6,"STKALIGN_R","","Reader of field `STKALIGN`",null,null],[11,"set_bit","","Sets the field bit",4743,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4743,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4743,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4744,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4744,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4744,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["unalign_trp_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::ccr","Get enumerated values variant",4745,[[],["unalign_trp_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4745,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4745,[[]]],[11,"variant","","Writes `variant` to the field",4746,[[["unalign_trp_a",4]],["w",6]]],[11,"value_0","","Do not trap unaligned halfword and word accesses",4746,[[],["w",6]]],[11,"value_1","","Trap unaligned halfword and word accesses",4746,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4746,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4746,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4746,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4747,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4747,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4747,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4748,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4748,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4748,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],["stkalign_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",6,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",6,[[]]],[11,"variant","atsamd51g::system_control::ccr","Get enumerated values variant",4749,[[],["stkalign_a",4]]],[11,"is_value_0","","Checks if the value of the field is `VALUE_0`",4749,[[]]],[11,"is_value_1","","Checks if the value of the field is `VALUE_1`",4749,[[]]],[11,"variant","","Writes `variant` to the field",4750,[[["stkalign_a",4]],["w",6]]],[11,"value_0","","4-byte aligned",4750,[[],["w",6]]],[11,"value_1","","8-byte aligned",4750,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4750,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4750,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4750,[[],["w",6]]],[11,"nonbasethrdena","atsamd51g::generic","Bit 0 - Indicates how processor enters Thread mode",6,[[],["nonbasethrdena_r",6]]],[11,"usersetmpend","","Bit 1 - Enables unprivileged software access to STIR…",6,[[],["usersetmpend_r",6]]],[11,"unalign_trp","","Bit 3 - Enables unaligned access traps",6,[[],["unalign_trp_r",6]]],[11,"div_0_trp","","Bit 4 - Enables divide by 0 trap",6,[[],["div_0_trp_r",6]]],[11,"bfhfnmign","","Bit 8 - Ignore LDM/STM BusFault for -1/-2 priority handlers",6,[[],["bfhfnmign_r",6]]],[11,"stkalign","","Bit 9 - Indicates stack alignment on exception entry",6,[[],["stkalign_r",6]]],[11,"nonbasethrdena","atsamd51g::system_control::ccr","Bit 0 - Indicates how processor enters Thread mode",4751,[[],["nonbasethrdena_r",6]]],[11,"usersetmpend","","Bit 1 - Enables unprivileged software access to STIR…",4751,[[],["usersetmpend_r",6]]],[11,"unalign_trp","","Bit 3 - Enables unaligned access traps",4751,[[],["unalign_trp_r",6]]],[11,"div_0_trp","","Bit 4 - Enables divide by 0 trap",4751,[[],["div_0_trp_r",6]]],[11,"bfhfnmign","","Bit 8 - Ignore LDM/STM BusFault for -1/-2 priority handlers",4751,[[],["bfhfnmign_r",6]]],[11,"stkalign","","Bit 9 - Indicates stack alignment on exception entry",4751,[[],["stkalign_r",6]]],[11,"nonbasethrdena","atsamd51g::generic","Bit 0 - Indicates how processor enters Thread mode",7,[[],["nonbasethrdena_w",3]]],[11,"usersetmpend","","Bit 1 - Enables unprivileged software access to STIR…",7,[[],["usersetmpend_w",3]]],[11,"unalign_trp","","Bit 3 - Enables unaligned access traps",7,[[],["unalign_trp_w",3]]],[11,"div_0_trp","","Bit 4 - Enables divide by 0 trap",7,[[],["div_0_trp_w",3]]],[11,"bfhfnmign","","Bit 8 - Ignore LDM/STM BusFault for -1/-2 priority handlers",7,[[],["bfhfnmign_w",3]]],[11,"stkalign","","Bit 9 - Indicates stack alignment on exception entry",7,[[],["stkalign_w",3]]],[11,"nonbasethrdena","atsamd51g::system_control::ccr","Bit 0 - Indicates how processor enters Thread mode",4752,[[],["nonbasethrdena_w",3]]],[11,"usersetmpend","","Bit 1 - Enables unprivileged software access to STIR…",4752,[[],["usersetmpend_w",3]]],[11,"unalign_trp","","Bit 3 - Enables unaligned access traps",4752,[[],["unalign_trp_w",3]]],[11,"div_0_trp","","Bit 4 - Enables divide by 0 trap",4752,[[],["div_0_trp_w",3]]],[11,"bfhfnmign","","Bit 8 - Ignore LDM/STM BusFault for -1/-2 priority handlers",4752,[[],["bfhfnmign_w",3]]],[11,"stkalign","","Bit 9 - Indicates stack alignment on exception entry",4752,[[],["stkalign_w",3]]],[0,"shpr1","atsamd51g::system_control","System Handler Priority Register 1",null,null],[3,"PRI_4_W","atsamd51g::system_control::shpr1","Write proxy for field `PRI_4`",null,null],[3,"PRI_5_W","","Write proxy for field `PRI_5`",null,null],[3,"PRI_6_W","","Write proxy for field `PRI_6`",null,null],[6,"R","","Reader of register SHPR1",null,null],[6,"W","","Writer for register SHPR1",null,null],[6,"PRI_4_R","","Reader of field `PRI_4`",null,null],[6,"PRI_5_R","","Reader of field `PRI_5`",null,null],[6,"PRI_6_R","","Reader of field `PRI_6`",null,null],[11,"bits","","Writes raw bits to the field",4753,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4754,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4755,[[],["w",6]]],[11,"pri_4","atsamd51g::generic","Bits 0:7 - Priority of system handler 4, MemManage",6,[[],["pri_4_r",6]]],[11,"pri_5","","Bits 8:15 - Priority of system handler 5, BusFault",6,[[],["pri_5_r",6]]],[11,"pri_6","","Bits 16:23 - Priority of system handler 6, UsageFault",6,[[],["pri_6_r",6]]],[11,"pri_4","atsamd51g::system_control::shpr1","Bits 0:7 - Priority of system handler 4, MemManage",4756,[[],["pri_4_r",6]]],[11,"pri_5","","Bits 8:15 - Priority of system handler 5, BusFault",4756,[[],["pri_5_r",6]]],[11,"pri_6","","Bits 16:23 - Priority of system handler 6, UsageFault",4756,[[],["pri_6_r",6]]],[11,"pri_4","atsamd51g::generic","Bits 0:7 - Priority of system handler 4, MemManage",7,[[],["pri_4_w",3]]],[11,"pri_5","","Bits 8:15 - Priority of system handler 5, BusFault",7,[[],["pri_5_w",3]]],[11,"pri_6","","Bits 16:23 - Priority of system handler 6, UsageFault",7,[[],["pri_6_w",3]]],[11,"pri_4","atsamd51g::system_control::shpr1","Bits 0:7 - Priority of system handler 4, MemManage",4757,[[],["pri_4_w",3]]],[11,"pri_5","","Bits 8:15 - Priority of system handler 5, BusFault",4757,[[],["pri_5_w",3]]],[11,"pri_6","","Bits 16:23 - Priority of system handler 6, UsageFault",4757,[[],["pri_6_w",3]]],[0,"shpr2","atsamd51g::system_control","System Handler Priority Register 2",null,null],[3,"PRI_11_W","atsamd51g::system_control::shpr2","Write proxy for field `PRI_11`",null,null],[6,"R","","Reader of register SHPR2",null,null],[6,"W","","Writer for register SHPR2",null,null],[6,"PRI_11_R","","Reader of field `PRI_11`",null,null],[11,"bits","","Writes raw bits to the field",4758,[[],["w",6]]],[11,"pri_11","atsamd51g::generic","Bits 24:31 - Priority of system handler 11, SVCall",6,[[],["pri_11_r",6]]],[11,"pri_11","atsamd51g::system_control::shpr2","Bits 24:31 - Priority of system handler 11, SVCall",4759,[[],["pri_11_r",6]]],[11,"pri_11","atsamd51g::generic","Bits 24:31 - Priority of system handler 11, SVCall",7,[[],["pri_11_w",3]]],[11,"pri_11","atsamd51g::system_control::shpr2","Bits 24:31 - Priority of system handler 11, SVCall",4760,[[],["pri_11_w",3]]],[0,"shpr3","atsamd51g::system_control","System Handler Priority Register 3",null,null],[3,"PRI_14_W","atsamd51g::system_control::shpr3","Write proxy for field `PRI_14`",null,null],[3,"PRI_15_W","","Write proxy for field `PRI_15`",null,null],[6,"R","","Reader of register SHPR3",null,null],[6,"W","","Writer for register SHPR3",null,null],[6,"PRI_14_R","","Reader of field `PRI_14`",null,null],[6,"PRI_15_R","","Reader of field `PRI_15`",null,null],[11,"bits","","Writes raw bits to the field",4761,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4762,[[],["w",6]]],[11,"pri_14","atsamd51g::generic","Bits 16:23 - Priority of system handler 14, PendSV",6,[[],["pri_14_r",6]]],[11,"pri_15","","Bits 24:31 - Priority of system handler 15, SysTick…",6,[[],["pri_15_r",6]]],[11,"pri_14","atsamd51g::system_control::shpr3","Bits 16:23 - Priority of system handler 14, PendSV",4763,[[],["pri_14_r",6]]],[11,"pri_15","","Bits 24:31 - Priority of system handler 15, SysTick…",4763,[[],["pri_15_r",6]]],[11,"pri_14","atsamd51g::generic","Bits 16:23 - Priority of system handler 14, PendSV",7,[[],["pri_14_w",3]]],[11,"pri_15","","Bits 24:31 - Priority of system handler 15, SysTick…",7,[[],["pri_15_w",3]]],[11,"pri_14","atsamd51g::system_control::shpr3","Bits 16:23 - Priority of system handler 14, PendSV",4764,[[],["pri_14_w",3]]],[11,"pri_15","","Bits 24:31 - Priority of system handler 15, SysTick…",4764,[[],["pri_15_w",3]]],[0,"shcsr","atsamd51g::system_control","System Handler Control and State Register",null,null],[3,"MEMFAULTACT_W","atsamd51g::system_control::shcsr","Write proxy for field `MEMFAULTACT`",null,null],[3,"BUSFAULTACT_W","","Write proxy for field `BUSFAULTACT`",null,null],[3,"USGFAULTACT_W","","Write proxy for field `USGFAULTACT`",null,null],[3,"SVCALLACT_W","","Write proxy for field `SVCALLACT`",null,null],[3,"MONITORACT_W","","Write proxy for field `MONITORACT`",null,null],[3,"PENDSVACT_W","","Write proxy for field `PENDSVACT`",null,null],[3,"SYSTICKACT_W","","Write proxy for field `SYSTICKACT`",null,null],[3,"USGFAULTPENDED_W","","Write proxy for field `USGFAULTPENDED`",null,null],[3,"MEMFAULTPENDED_W","","Write proxy for field `MEMFAULTPENDED`",null,null],[3,"BUSFAULTPENDED_W","","Write proxy for field `BUSFAULTPENDED`",null,null],[3,"SVCALLPENDED_W","","Write proxy for field `SVCALLPENDED`",null,null],[3,"MEMFAULTENA_W","","Write proxy for field `MEMFAULTENA`",null,null],[3,"BUSFAULTENA_W","","Write proxy for field `BUSFAULTENA`",null,null],[3,"USGFAULTENA_W","","Write proxy for field `USGFAULTENA`",null,null],[6,"R","","Reader of register SHCSR",null,null],[6,"W","","Writer for register SHCSR",null,null],[6,"MEMFAULTACT_R","","Reader of field `MEMFAULTACT`",null,null],[6,"BUSFAULTACT_R","","Reader of field `BUSFAULTACT`",null,null],[6,"USGFAULTACT_R","","Reader of field `USGFAULTACT`",null,null],[6,"SVCALLACT_R","","Reader of field `SVCALLACT`",null,null],[6,"MONITORACT_R","","Reader of field `MONITORACT`",null,null],[6,"PENDSVACT_R","","Reader of field `PENDSVACT`",null,null],[6,"SYSTICKACT_R","","Reader of field `SYSTICKACT`",null,null],[6,"USGFAULTPENDED_R","","Reader of field `USGFAULTPENDED`",null,null],[6,"MEMFAULTPENDED_R","","Reader of field `MEMFAULTPENDED`",null,null],[6,"BUSFAULTPENDED_R","","Reader of field `BUSFAULTPENDED`",null,null],[6,"SVCALLPENDED_R","","Reader of field `SVCALLPENDED`",null,null],[6,"MEMFAULTENA_R","","Reader of field `MEMFAULTENA`",null,null],[6,"BUSFAULTENA_R","","Reader of field `BUSFAULTENA`",null,null],[6,"USGFAULTENA_R","","Reader of field `USGFAULTENA`",null,null],[11,"set_bit","","Sets the field bit",4765,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4765,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4765,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4766,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4766,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4766,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4767,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4767,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4767,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4768,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4768,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4768,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4769,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4769,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4769,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4770,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4770,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4770,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4771,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4771,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4771,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4772,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4772,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4772,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4773,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4773,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4773,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4774,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4774,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4774,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4775,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4775,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4775,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4776,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4776,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4776,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4777,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4777,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4777,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4778,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4778,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4778,[[],["w",6]]],[11,"memfaultact","atsamd51g::generic","Bit 0 - MemManage exception active bit",6,[[],["memfaultact_r",6]]],[11,"busfaultact","","Bit 1 - BusFault exception active bit",6,[[],["busfaultact_r",6]]],[11,"usgfaultact","","Bit 3 - UsageFault exception active bit",6,[[],["usgfaultact_r",6]]],[11,"svcallact","","Bit 7 - SVCall active bit",6,[[],["svcallact_r",6]]],[11,"monitoract","","Bit 8 - DebugMonitor exception active bit",6,[[],["monitoract_r",6]]],[11,"pendsvact","","Bit 10 - PendSV exception active bit",6,[[],["pendsvact_r",6]]],[11,"systickact","","Bit 11 - SysTick exception active bit",6,[[],["systickact_r",6]]],[11,"usgfaultpended","","Bit 12 - UsageFault exception pending bit",6,[[],["usgfaultpended_r",6]]],[11,"memfaultpended","","Bit 13 - MemManage exception pending bit",6,[[],["memfaultpended_r",6]]],[11,"busfaultpended","","Bit 14 - BusFault exception pending bit",6,[[],["busfaultpended_r",6]]],[11,"svcallpended","","Bit 15 - SVCall pending bit",6,[[],["svcallpended_r",6]]],[11,"memfaultena","","Bit 16 - MemManage enable bit",6,[[],["memfaultena_r",6]]],[11,"busfaultena","","Bit 17 - BusFault enable bit",6,[[],["busfaultena_r",6]]],[11,"usgfaultena","","Bit 18 - UsageFault enable bit",6,[[],["usgfaultena_r",6]]],[11,"memfaultact","atsamd51g::system_control::shcsr","Bit 0 - MemManage exception active bit",4779,[[],["memfaultact_r",6]]],[11,"busfaultact","","Bit 1 - BusFault exception active bit",4779,[[],["busfaultact_r",6]]],[11,"usgfaultact","","Bit 3 - UsageFault exception active bit",4779,[[],["usgfaultact_r",6]]],[11,"svcallact","","Bit 7 - SVCall active bit",4779,[[],["svcallact_r",6]]],[11,"monitoract","","Bit 8 - DebugMonitor exception active bit",4779,[[],["monitoract_r",6]]],[11,"pendsvact","","Bit 10 - PendSV exception active bit",4779,[[],["pendsvact_r",6]]],[11,"systickact","","Bit 11 - SysTick exception active bit",4779,[[],["systickact_r",6]]],[11,"usgfaultpended","","Bit 12 - UsageFault exception pending bit",4779,[[],["usgfaultpended_r",6]]],[11,"memfaultpended","","Bit 13 - MemManage exception pending bit",4779,[[],["memfaultpended_r",6]]],[11,"busfaultpended","","Bit 14 - BusFault exception pending bit",4779,[[],["busfaultpended_r",6]]],[11,"svcallpended","","Bit 15 - SVCall pending bit",4779,[[],["svcallpended_r",6]]],[11,"memfaultena","","Bit 16 - MemManage enable bit",4779,[[],["memfaultena_r",6]]],[11,"busfaultena","","Bit 17 - BusFault enable bit",4779,[[],["busfaultena_r",6]]],[11,"usgfaultena","","Bit 18 - UsageFault enable bit",4779,[[],["usgfaultena_r",6]]],[11,"memfaultact","atsamd51g::generic","Bit 0 - MemManage exception active bit",7,[[],["memfaultact_w",3]]],[11,"busfaultact","","Bit 1 - BusFault exception active bit",7,[[],["busfaultact_w",3]]],[11,"usgfaultact","","Bit 3 - UsageFault exception active bit",7,[[],["usgfaultact_w",3]]],[11,"svcallact","","Bit 7 - SVCall active bit",7,[[],["svcallact_w",3]]],[11,"monitoract","","Bit 8 - DebugMonitor exception active bit",7,[[],["monitoract_w",3]]],[11,"pendsvact","","Bit 10 - PendSV exception active bit",7,[[],["pendsvact_w",3]]],[11,"systickact","","Bit 11 - SysTick exception active bit",7,[[],["systickact_w",3]]],[11,"usgfaultpended","","Bit 12 - UsageFault exception pending bit",7,[[],["usgfaultpended_w",3]]],[11,"memfaultpended","","Bit 13 - MemManage exception pending bit",7,[[],["memfaultpended_w",3]]],[11,"busfaultpended","","Bit 14 - BusFault exception pending bit",7,[[],["busfaultpended_w",3]]],[11,"svcallpended","","Bit 15 - SVCall pending bit",7,[[],["svcallpended_w",3]]],[11,"memfaultena","","Bit 16 - MemManage enable bit",7,[[],["memfaultena_w",3]]],[11,"busfaultena","","Bit 17 - BusFault enable bit",7,[[],["busfaultena_w",3]]],[11,"usgfaultena","","Bit 18 - UsageFault enable bit",7,[[],["usgfaultena_w",3]]],[11,"memfaultact","atsamd51g::system_control::shcsr","Bit 0 - MemManage exception active bit",4780,[[],["memfaultact_w",3]]],[11,"busfaultact","","Bit 1 - BusFault exception active bit",4780,[[],["busfaultact_w",3]]],[11,"usgfaultact","","Bit 3 - UsageFault exception active bit",4780,[[],["usgfaultact_w",3]]],[11,"svcallact","","Bit 7 - SVCall active bit",4780,[[],["svcallact_w",3]]],[11,"monitoract","","Bit 8 - DebugMonitor exception active bit",4780,[[],["monitoract_w",3]]],[11,"pendsvact","","Bit 10 - PendSV exception active bit",4780,[[],["pendsvact_w",3]]],[11,"systickact","","Bit 11 - SysTick exception active bit",4780,[[],["systickact_w",3]]],[11,"usgfaultpended","","Bit 12 - UsageFault exception pending bit",4780,[[],["usgfaultpended_w",3]]],[11,"memfaultpended","","Bit 13 - MemManage exception pending bit",4780,[[],["memfaultpended_w",3]]],[11,"busfaultpended","","Bit 14 - BusFault exception pending bit",4780,[[],["busfaultpended_w",3]]],[11,"svcallpended","","Bit 15 - SVCall pending bit",4780,[[],["svcallpended_w",3]]],[11,"memfaultena","","Bit 16 - MemManage enable bit",4780,[[],["memfaultena_w",3]]],[11,"busfaultena","","Bit 17 - BusFault enable bit",4780,[[],["busfaultena_w",3]]],[11,"usgfaultena","","Bit 18 - UsageFault enable bit",4780,[[],["usgfaultena_w",3]]],[0,"cfsr","atsamd51g::system_control","Configurable Fault Status Register",null,null],[3,"IACCVIOL_W","atsamd51g::system_control::cfsr","Write proxy for field `IACCVIOL`",null,null],[3,"DACCVIOL_W","","Write proxy for field `DACCVIOL`",null,null],[3,"MUNSTKERR_W","","Write proxy for field `MUNSTKERR`",null,null],[3,"MSTKERR_W","","Write proxy for field `MSTKERR`",null,null],[3,"MLSPERR_W","","Write proxy for field `MLSPERR`",null,null],[3,"MMARVALID_W","","Write proxy for field `MMARVALID`",null,null],[3,"IBUSERR_W","","Write proxy for field `IBUSERR`",null,null],[3,"PRECISERR_W","","Write proxy for field `PRECISERR`",null,null],[3,"IMPRECISERR_W","","Write proxy for field `IMPRECISERR`",null,null],[3,"UNSTKERR_W","","Write proxy for field `UNSTKERR`",null,null],[3,"STKERR_W","","Write proxy for field `STKERR`",null,null],[3,"LSPERR_W","","Write proxy for field `LSPERR`",null,null],[3,"BFARVALID_W","","Write proxy for field `BFARVALID`",null,null],[3,"UNDEFINSTR_W","","Write proxy for field `UNDEFINSTR`",null,null],[3,"INVSTATE_W","","Write proxy for field `INVSTATE`",null,null],[3,"INVPC_W","","Write proxy for field `INVPC`",null,null],[3,"NOCP_W","","Write proxy for field `NOCP`",null,null],[3,"UNALIGNED_W","","Write proxy for field `UNALIGNED`",null,null],[3,"DIVBYZERO_W","","Write proxy for field `DIVBYZERO`",null,null],[6,"R","","Reader of register CFSR",null,null],[6,"W","","Writer for register CFSR",null,null],[6,"IACCVIOL_R","","Reader of field `IACCVIOL`",null,null],[6,"DACCVIOL_R","","Reader of field `DACCVIOL`",null,null],[6,"MUNSTKERR_R","","Reader of field `MUNSTKERR`",null,null],[6,"MSTKERR_R","","Reader of field `MSTKERR`",null,null],[6,"MLSPERR_R","","Reader of field `MLSPERR`",null,null],[6,"MMARVALID_R","","Reader of field `MMARVALID`",null,null],[6,"IBUSERR_R","","Reader of field `IBUSERR`",null,null],[6,"PRECISERR_R","","Reader of field `PRECISERR`",null,null],[6,"IMPRECISERR_R","","Reader of field `IMPRECISERR`",null,null],[6,"UNSTKERR_R","","Reader of field `UNSTKERR`",null,null],[6,"STKERR_R","","Reader of field `STKERR`",null,null],[6,"LSPERR_R","","Reader of field `LSPERR`",null,null],[6,"BFARVALID_R","","Reader of field `BFARVALID`",null,null],[6,"UNDEFINSTR_R","","Reader of field `UNDEFINSTR`",null,null],[6,"INVSTATE_R","","Reader of field `INVSTATE`",null,null],[6,"INVPC_R","","Reader of field `INVPC`",null,null],[6,"NOCP_R","","Reader of field `NOCP`",null,null],[6,"UNALIGNED_R","","Reader of field `UNALIGNED`",null,null],[6,"DIVBYZERO_R","","Reader of field `DIVBYZERO`",null,null],[11,"set_bit","","Sets the field bit",4781,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4781,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4781,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4782,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4782,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4782,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4783,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4783,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4783,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4784,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4784,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4784,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4785,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4785,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4785,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4786,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4786,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4786,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4787,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4787,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4787,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4788,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4788,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4788,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4789,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4789,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4789,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4790,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4790,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4790,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4791,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4791,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4791,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4792,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4792,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4792,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4793,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4793,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4793,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4794,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4794,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4794,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4795,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4795,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4795,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4796,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4796,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4796,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4797,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4797,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4797,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4798,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4798,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4798,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4799,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4799,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4799,[[],["w",6]]],[11,"iaccviol","atsamd51g::generic","Bit 0 - Instruction access violation",6,[[],["iaccviol_r",6]]],[11,"daccviol","","Bit 1 - Data access violation",6,[[],["daccviol_r",6]]],[11,"munstkerr","","Bit 3 - MemManage Fault on unstacking for exception return",6,[[],["munstkerr_r",6]]],[11,"mstkerr","","Bit 4 - MemManage Fault on stacking for exception entry",6,[[],["mstkerr_r",6]]],[11,"mlsperr","","Bit 5 - MemManager Fault occured during FP lazy state…",6,[[],["mlsperr_r",6]]],[11,"mmarvalid","","Bit 7 - MemManage Fault Address Register valid",6,[[],["mmarvalid_r",6]]],[11,"ibuserr","","Bit 8 - Instruction bus error",6,[[],["ibuserr_r",6]]],[11,"preciserr","","Bit 9 - Precise data bus error",6,[[],["preciserr_r",6]]],[11,"impreciserr","","Bit 10 - Imprecise data bus error",6,[[],["impreciserr_r",6]]],[11,"unstkerr","","Bit 11 - BusFault on unstacking for exception return",6,[[],["unstkerr_r",6]]],[11,"stkerr","","Bit 12 - BusFault on stacking for exception entry",6,[[],["stkerr_r",6]]],[11,"lsperr","","Bit 13 - BusFault occured during FP lazy state preservation",6,[[],["lsperr_r",6]]],[11,"bfarvalid","","Bit 15 - BusFault Address Register valid",6,[[],["bfarvalid_r",6]]],[11,"undefinstr","","Bit 16 - Undefined instruction UsageFault",6,[[],["undefinstr_r",6]]],[11,"invstate","","Bit 17 - Invalid state UsageFault",6,[[],["invstate_r",6]]],[11,"invpc","","Bit 18 - Invalid PC load UsageFault",6,[[],["invpc_r",6]]],[11,"nocp","","Bit 19 - No coprocessor UsageFault",6,[[],["nocp_r",6]]],[11,"unaligned","","Bit 24 - Unaligned access UsageFault",6,[[],["unaligned_r",6]]],[11,"divbyzero","","Bit 25 - Divide by zero UsageFault",6,[[],["divbyzero_r",6]]],[11,"iaccviol","atsamd51g::system_control::cfsr","Bit 0 - Instruction access violation",4800,[[],["iaccviol_r",6]]],[11,"daccviol","","Bit 1 - Data access violation",4800,[[],["daccviol_r",6]]],[11,"munstkerr","","Bit 3 - MemManage Fault on unstacking for exception return",4800,[[],["munstkerr_r",6]]],[11,"mstkerr","","Bit 4 - MemManage Fault on stacking for exception entry",4800,[[],["mstkerr_r",6]]],[11,"mlsperr","","Bit 5 - MemManager Fault occured during FP lazy state…",4800,[[],["mlsperr_r",6]]],[11,"mmarvalid","","Bit 7 - MemManage Fault Address Register valid",4800,[[],["mmarvalid_r",6]]],[11,"ibuserr","","Bit 8 - Instruction bus error",4800,[[],["ibuserr_r",6]]],[11,"preciserr","","Bit 9 - Precise data bus error",4800,[[],["preciserr_r",6]]],[11,"impreciserr","","Bit 10 - Imprecise data bus error",4800,[[],["impreciserr_r",6]]],[11,"unstkerr","","Bit 11 - BusFault on unstacking for exception return",4800,[[],["unstkerr_r",6]]],[11,"stkerr","","Bit 12 - BusFault on stacking for exception entry",4800,[[],["stkerr_r",6]]],[11,"lsperr","","Bit 13 - BusFault occured during FP lazy state preservation",4800,[[],["lsperr_r",6]]],[11,"bfarvalid","","Bit 15 - BusFault Address Register valid",4800,[[],["bfarvalid_r",6]]],[11,"undefinstr","","Bit 16 - Undefined instruction UsageFault",4800,[[],["undefinstr_r",6]]],[11,"invstate","","Bit 17 - Invalid state UsageFault",4800,[[],["invstate_r",6]]],[11,"invpc","","Bit 18 - Invalid PC load UsageFault",4800,[[],["invpc_r",6]]],[11,"nocp","","Bit 19 - No coprocessor UsageFault",4800,[[],["nocp_r",6]]],[11,"unaligned","","Bit 24 - Unaligned access UsageFault",4800,[[],["unaligned_r",6]]],[11,"divbyzero","","Bit 25 - Divide by zero UsageFault",4800,[[],["divbyzero_r",6]]],[11,"iaccviol","atsamd51g::generic","Bit 0 - Instruction access violation",7,[[],["iaccviol_w",3]]],[11,"daccviol","","Bit 1 - Data access violation",7,[[],["daccviol_w",3]]],[11,"munstkerr","","Bit 3 - MemManage Fault on unstacking for exception return",7,[[],["munstkerr_w",3]]],[11,"mstkerr","","Bit 4 - MemManage Fault on stacking for exception entry",7,[[],["mstkerr_w",3]]],[11,"mlsperr","","Bit 5 - MemManager Fault occured during FP lazy state…",7,[[],["mlsperr_w",3]]],[11,"mmarvalid","","Bit 7 - MemManage Fault Address Register valid",7,[[],["mmarvalid_w",3]]],[11,"ibuserr","","Bit 8 - Instruction bus error",7,[[],["ibuserr_w",3]]],[11,"preciserr","","Bit 9 - Precise data bus error",7,[[],["preciserr_w",3]]],[11,"impreciserr","","Bit 10 - Imprecise data bus error",7,[[],["impreciserr_w",3]]],[11,"unstkerr","","Bit 11 - BusFault on unstacking for exception return",7,[[],["unstkerr_w",3]]],[11,"stkerr","","Bit 12 - BusFault on stacking for exception entry",7,[[],["stkerr_w",3]]],[11,"lsperr","","Bit 13 - BusFault occured during FP lazy state preservation",7,[[],["lsperr_w",3]]],[11,"bfarvalid","","Bit 15 - BusFault Address Register valid",7,[[],["bfarvalid_w",3]]],[11,"undefinstr","","Bit 16 - Undefined instruction UsageFault",7,[[],["undefinstr_w",3]]],[11,"invstate","","Bit 17 - Invalid state UsageFault",7,[[],["invstate_w",3]]],[11,"invpc","","Bit 18 - Invalid PC load UsageFault",7,[[],["invpc_w",3]]],[11,"nocp","","Bit 19 - No coprocessor UsageFault",7,[[],["nocp_w",3]]],[11,"unaligned","","Bit 24 - Unaligned access UsageFault",7,[[],["unaligned_w",3]]],[11,"divbyzero","","Bit 25 - Divide by zero UsageFault",7,[[],["divbyzero_w",3]]],[11,"iaccviol","atsamd51g::system_control::cfsr","Bit 0 - Instruction access violation",4801,[[],["iaccviol_w",3]]],[11,"daccviol","","Bit 1 - Data access violation",4801,[[],["daccviol_w",3]]],[11,"munstkerr","","Bit 3 - MemManage Fault on unstacking for exception return",4801,[[],["munstkerr_w",3]]],[11,"mstkerr","","Bit 4 - MemManage Fault on stacking for exception entry",4801,[[],["mstkerr_w",3]]],[11,"mlsperr","","Bit 5 - MemManager Fault occured during FP lazy state…",4801,[[],["mlsperr_w",3]]],[11,"mmarvalid","","Bit 7 - MemManage Fault Address Register valid",4801,[[],["mmarvalid_w",3]]],[11,"ibuserr","","Bit 8 - Instruction bus error",4801,[[],["ibuserr_w",3]]],[11,"preciserr","","Bit 9 - Precise data bus error",4801,[[],["preciserr_w",3]]],[11,"impreciserr","","Bit 10 - Imprecise data bus error",4801,[[],["impreciserr_w",3]]],[11,"unstkerr","","Bit 11 - BusFault on unstacking for exception return",4801,[[],["unstkerr_w",3]]],[11,"stkerr","","Bit 12 - BusFault on stacking for exception entry",4801,[[],["stkerr_w",3]]],[11,"lsperr","","Bit 13 - BusFault occured during FP lazy state preservation",4801,[[],["lsperr_w",3]]],[11,"bfarvalid","","Bit 15 - BusFault Address Register valid",4801,[[],["bfarvalid_w",3]]],[11,"undefinstr","","Bit 16 - Undefined instruction UsageFault",4801,[[],["undefinstr_w",3]]],[11,"invstate","","Bit 17 - Invalid state UsageFault",4801,[[],["invstate_w",3]]],[11,"invpc","","Bit 18 - Invalid PC load UsageFault",4801,[[],["invpc_w",3]]],[11,"nocp","","Bit 19 - No coprocessor UsageFault",4801,[[],["nocp_w",3]]],[11,"unaligned","","Bit 24 - Unaligned access UsageFault",4801,[[],["unaligned_w",3]]],[11,"divbyzero","","Bit 25 - Divide by zero UsageFault",4801,[[],["divbyzero_w",3]]],[0,"hfsr","atsamd51g::system_control","HardFault Status Register",null,null],[3,"VECTTBL_W","atsamd51g::system_control::hfsr","Write proxy for field `VECTTBL`",null,null],[3,"FORCED_W","","Write proxy for field `FORCED`",null,null],[3,"DEBUGEVT_W","","Write proxy for field `DEBUGEVT`",null,null],[6,"R","","Reader of register HFSR",null,null],[6,"W","","Writer for register HFSR",null,null],[6,"VECTTBL_R","","Reader of field `VECTTBL`",null,null],[6,"FORCED_R","","Reader of field `FORCED`",null,null],[6,"DEBUGEVT_R","","Reader of field `DEBUGEVT`",null,null],[11,"set_bit","","Sets the field bit",4802,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4802,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4802,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4803,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4803,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4803,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4804,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4804,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4804,[[],["w",6]]],[11,"vecttbl","atsamd51g::generic","Bit 1 - BusFault on a Vector Table read during exception…",6,[[],["vecttbl_r",6]]],[11,"forced","","Bit 30 - Forced Hard Fault",6,[[],["forced_r",6]]],[11,"debugevt","","Bit 31 - Debug: always write 0",6,[[],["debugevt_r",6]]],[11,"vecttbl","atsamd51g::system_control::hfsr","Bit 1 - BusFault on a Vector Table read during exception…",4805,[[],["vecttbl_r",6]]],[11,"forced","","Bit 30 - Forced Hard Fault",4805,[[],["forced_r",6]]],[11,"debugevt","","Bit 31 - Debug: always write 0",4805,[[],["debugevt_r",6]]],[11,"vecttbl","atsamd51g::generic","Bit 1 - BusFault on a Vector Table read during exception…",7,[[],["vecttbl_w",3]]],[11,"forced","","Bit 30 - Forced Hard Fault",7,[[],["forced_w",3]]],[11,"debugevt","","Bit 31 - Debug: always write 0",7,[[],["debugevt_w",3]]],[11,"vecttbl","atsamd51g::system_control::hfsr","Bit 1 - BusFault on a Vector Table read during exception…",4806,[[],["vecttbl_w",3]]],[11,"forced","","Bit 30 - Forced Hard Fault",4806,[[],["forced_w",3]]],[11,"debugevt","","Bit 31 - Debug: always write 0",4806,[[],["debugevt_w",3]]],[0,"dfsr","atsamd51g::system_control","Debug Fault Status Register",null,null],[3,"HALTED_W","atsamd51g::system_control::dfsr","Write proxy for field `HALTED`",null,null],[3,"BKPT_W","","Write proxy for field `BKPT`",null,null],[3,"DWTTRAP_W","","Write proxy for field `DWTTRAP`",null,null],[3,"VCATCH_W","","Write proxy for field `VCATCH`",null,null],[3,"EXTERNAL_W","","Write proxy for field `EXTERNAL`",null,null],[6,"R","","Reader of register DFSR",null,null],[6,"W","","Writer for register DFSR",null,null],[6,"HALTED_R","","Reader of field `HALTED`",null,null],[6,"BKPT_R","","Reader of field `BKPT`",null,null],[6,"DWTTRAP_R","","Reader of field `DWTTRAP`",null,null],[6,"VCATCH_R","","Reader of field `VCATCH`",null,null],[6,"EXTERNAL_R","","Reader of field `EXTERNAL`",null,null],[11,"set_bit","","Sets the field bit",4807,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4807,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4807,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4808,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4808,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4808,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4809,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4809,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4809,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4810,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4810,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4810,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4811,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4811,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4811,[[],["w",6]]],[11,"halted","atsamd51g::generic","Bit 0",6,[[],["halted_r",6]]],[11,"bkpt","","Bit 1",6,[[],["bkpt_r",6]]],[11,"dwttrap","","Bit 2",6,[[],["dwttrap_r",6]]],[11,"vcatch","","Bit 3",6,[[],["vcatch_r",6]]],[11,"external","","Bit 4",6,[[],["external_r",6]]],[11,"halted","atsamd51g::system_control::dfsr","Bit 0",4812,[[],["halted_r",6]]],[11,"bkpt","","Bit 1",4812,[[],["bkpt_r",6]]],[11,"dwttrap","","Bit 2",4812,[[],["dwttrap_r",6]]],[11,"vcatch","","Bit 3",4812,[[],["vcatch_r",6]]],[11,"external","","Bit 4",4812,[[],["external_r",6]]],[11,"halted","atsamd51g::generic","Bit 0",7,[[],["halted_w",3]]],[11,"bkpt","","Bit 1",7,[[],["bkpt_w",3]]],[11,"dwttrap","","Bit 2",7,[[],["dwttrap_w",3]]],[11,"vcatch","","Bit 3",7,[[],["vcatch_w",3]]],[11,"external","","Bit 4",7,[[],["external_w",3]]],[11,"halted","atsamd51g::system_control::dfsr","Bit 0",4813,[[],["halted_w",3]]],[11,"bkpt","","Bit 1",4813,[[],["bkpt_w",3]]],[11,"dwttrap","","Bit 2",4813,[[],["dwttrap_w",3]]],[11,"vcatch","","Bit 3",4813,[[],["vcatch_w",3]]],[11,"external","","Bit 4",4813,[[],["external_w",3]]],[0,"mmfar","atsamd51g::system_control","MemManage Fault Address Register",null,null],[3,"ADDRESS_W","atsamd51g::system_control::mmfar","Write proxy for field `ADDRESS`",null,null],[6,"R","","Reader of register MMFAR",null,null],[6,"W","","Writer for register MMFAR",null,null],[6,"ADDRESS_R","","Reader of field `ADDRESS`",null,null],[11,"bits","","Writes raw bits to the field",4814,[[],["w",6]]],[11,"address","atsamd51g::generic","Bits 0:31 - Address that generated the MemManage fault",6,[[],["address_r",6]]],[11,"address","atsamd51g::system_control::mmfar","Bits 0:31 - Address that generated the MemManage fault",4815,[[],["address_r",6]]],[11,"address","atsamd51g::generic","Bits 0:31 - Address that generated the MemManage fault",7,[[],["address_w",3]]],[11,"address","atsamd51g::system_control::mmfar","Bits 0:31 - Address that generated the MemManage fault",4816,[[],["address_w",3]]],[0,"bfar","atsamd51g::system_control","BusFault Address Register",null,null],[3,"ADDRESS_W","atsamd51g::system_control::bfar","Write proxy for field `ADDRESS`",null,null],[6,"R","","Reader of register BFAR",null,null],[6,"W","","Writer for register BFAR",null,null],[6,"ADDRESS_R","","Reader of field `ADDRESS`",null,null],[11,"bits","","Writes raw bits to the field",4817,[[],["w",6]]],[11,"address","atsamd51g::generic","Bits 0:31 - Address that generated the BusFault",6,[[],["address_r",6]]],[11,"address","atsamd51g::system_control::bfar","Bits 0:31 - Address that generated the BusFault",4818,[[],["address_r",6]]],[11,"address","atsamd51g::generic","Bits 0:31 - Address that generated the BusFault",7,[[],["address_w",3]]],[11,"address","atsamd51g::system_control::bfar","Bits 0:31 - Address that generated the BusFault",4819,[[],["address_w",3]]],[0,"afsr","atsamd51g::system_control","Auxiliary Fault Status Register",null,null],[3,"IMPDEF_W","atsamd51g::system_control::afsr","Write proxy for field `IMPDEF`",null,null],[6,"R","","Reader of register AFSR",null,null],[6,"W","","Writer for register AFSR",null,null],[6,"IMPDEF_R","","Reader of field `IMPDEF`",null,null],[11,"bits","","Writes raw bits to the field",4820,[[],["w",6]]],[11,"impdef","atsamd51g::generic","Bits 0:31 - AUXFAULT input signals",6,[[],["impdef_r",6]]],[11,"impdef","atsamd51g::system_control::afsr","Bits 0:31 - AUXFAULT input signals",4821,[[],["impdef_r",6]]],[11,"impdef","atsamd51g::generic","Bits 0:31 - AUXFAULT input signals",7,[[],["impdef_w",3]]],[11,"impdef","atsamd51g::system_control::afsr","Bits 0:31 - AUXFAULT input signals",4822,[[],["impdef_w",3]]],[0,"pfr","atsamd51g::system_control","Processor Feature Register",null,null],[6,"R","atsamd51g::system_control::pfr","Reader of register PFR[%s]",null,null],[6,"W","","Writer for register PFR[%s]",null,null],[0,"dfr","atsamd51g::system_control","Debug Feature Register",null,null],[6,"R","atsamd51g::system_control::dfr","Reader of register DFR",null,null],[0,"adr","atsamd51g::system_control","Auxiliary Feature Register",null,null],[6,"R","atsamd51g::system_control::adr","Reader of register ADR",null,null],[0,"mmfr","atsamd51g::system_control","Memory Model Feature Register",null,null],[6,"R","atsamd51g::system_control::mmfr","Reader of register MMFR[%s]",null,null],[0,"isar","atsamd51g::system_control","Instruction Set Attributes Register",null,null],[6,"R","atsamd51g::system_control::isar","Reader of register ISAR[%s]",null,null],[0,"cpacr","atsamd51g::system_control","Coprocessor Access Control Register",null,null],[3,"CP10_W","atsamd51g::system_control::cpacr","Write proxy for field `CP10`",null,null],[3,"CP11_W","","Write proxy for field `CP11`",null,null],[4,"CP10_A","","Access privileges for coprocessor 10",null,null],[13,"DENIED","","0: Access denied",4823,null],[13,"PRIV","","1: Privileged access only",4823,null],[13,"FULL","","3: Full access",4823,null],[4,"CP11_A","","Access privileges for coprocessor 11",null,null],[13,"DENIED","","0: Access denied",4824,null],[13,"PRIV","","1: Privileged access only",4824,null],[13,"FULL","","3: Full access",4824,null],[6,"R","","Reader of register CPACR",null,null],[6,"W","","Writer for register CPACR",null,null],[6,"CP10_R","","Reader of field `CP10`",null,null],[6,"CP11_R","","Reader of field `CP11`",null,null],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cp10_a",4]]]],[11,"is_denied","","Checks if the value of the field is `DENIED`",6,[[]]],[11,"is_priv_","","Checks if the value of the field is `PRIV`",6,[[]]],[11,"is_full","","Checks if the value of the field is `FULL`",6,[[]]],[11,"variant","atsamd51g::system_control::cpacr","Get enumerated values variant",4825,[[],[["variant",4],["cp10_a",4]]]],[11,"is_denied","","Checks if the value of the field is `DENIED`",4825,[[]]],[11,"is_priv_","","Checks if the value of the field is `PRIV`",4825,[[]]],[11,"is_full","","Checks if the value of the field is `FULL`",4825,[[]]],[11,"variant","","Writes `variant` to the field",4826,[[["cp10_a",4]],["w",6]]],[11,"denied","","Access denied",4826,[[],["w",6]]],[11,"priv_","","Privileged access only",4826,[[],["w",6]]],[11,"full","","Full access",4826,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4826,[[],["w",6]]],[11,"variant","atsamd51g::generic","Get enumerated values variant",6,[[],[["variant",4],["cp11_a",4]]]],[11,"is_denied","","Checks if the value of the field is `DENIED`",6,[[]]],[11,"is_priv_","","Checks if the value of the field is `PRIV`",6,[[]]],[11,"is_full","","Checks if the value of the field is `FULL`",6,[[]]],[11,"variant","atsamd51g::system_control::cpacr","Get enumerated values variant",4827,[[],[["variant",4],["cp11_a",4]]]],[11,"is_denied","","Checks if the value of the field is `DENIED`",4827,[[]]],[11,"is_priv_","","Checks if the value of the field is `PRIV`",4827,[[]]],[11,"is_full","","Checks if the value of the field is `FULL`",4827,[[]]],[11,"variant","","Writes `variant` to the field",4828,[[["cp11_a",4]],["w",6]]],[11,"denied","","Access denied",4828,[[],["w",6]]],[11,"priv_","","Privileged access only",4828,[[],["w",6]]],[11,"full","","Full access",4828,[[],["w",6]]],[11,"bits","","Writes raw bits to the field",4828,[[],["w",6]]],[11,"cp10","atsamd51g::generic","Bits 20:21 - Access privileges for coprocessor 10",6,[[],["cp10_r",6]]],[11,"cp11","","Bits 22:23 - Access privileges for coprocessor 11",6,[[],["cp11_r",6]]],[11,"cp10","atsamd51g::system_control::cpacr","Bits 20:21 - Access privileges for coprocessor 10",4829,[[],["cp10_r",6]]],[11,"cp11","","Bits 22:23 - Access privileges for coprocessor 11",4829,[[],["cp11_r",6]]],[11,"cp10","atsamd51g::generic","Bits 20:21 - Access privileges for coprocessor 10",7,[[],["cp10_w",3]]],[11,"cp11","","Bits 22:23 - Access privileges for coprocessor 11",7,[[],["cp11_w",3]]],[11,"cp10","atsamd51g::system_control::cpacr","Bits 20:21 - Access privileges for coprocessor 10",4830,[[],["cp10_w",3]]],[11,"cp11","","Bits 22:23 - Access privileges for coprocessor 11",4830,[[],["cp11_w",3]]],[6,"ICTR","atsamd51g::system_control","Interrupt Controller Type Register",null,null],[6,"ACTLR","","Auxiliary Control Register",null,null],[6,"CPUID","","CPUID Base Register",null,null],[6,"ICSR","","Interrupt Control and State Register",null,null],[6,"VTOR","","Vector Table Offset Register",null,null],[6,"AIRCR","","Application Interrupt and Reset Control Register",null,null],[6,"SCR","","System Control Register",null,null],[6,"CCR","","Configuration and Control Register",null,null],[6,"SHPR1","","System Handler Priority Register 1",null,null],[6,"SHPR2","","System Handler Priority Register 2",null,null],[6,"SHPR3","","System Handler Priority Register 3",null,null],[6,"SHCSR","","System Handler Control and State Register",null,null],[6,"CFSR","","Configurable Fault Status Register",null,null],[6,"HFSR","","HardFault Status Register",null,null],[6,"DFSR","","Debug Fault Status Register",null,null],[6,"MMFAR","","MemManage Fault Address Register",null,null],[6,"BFAR","","BusFault Address Register",null,null],[6,"AFSR","","Auxiliary Fault Status Register",null,null],[6,"PFR","","Processor Feature Register",null,null],[6,"DFR","","Debug Feature Register",null,null],[6,"ADR","","Auxiliary Feature Register",null,null],[6,"MMFR","","Memory Model Feature Register",null,null],[6,"ISAR","","Instruction Set Attributes Register",null,null],[6,"CPACR","","Coprocessor Access Control Register",null,null],[0,"tpi","atsamd51g","Trace Port Interface Register",null,null],[3,"RegisterBlock","atsamd51g::tpi","Register block",null,null],[12,"sspsr","","0x00 - Supported Parallel Port Size Register",4831,null],[12,"cspsr","","0x04 - Current Parallel Port Size Register",4831,null],[12,"acpr","","0x10 - Asynchronous Clock Prescaler Register",4831,null],[12,"sppr","","0xf0 - Selected Pin Protocol Register",4831,null],[12,"ffsr","","0x300 - Formatter and Flush Status Register",4831,null],[12,"ffcr","","0x304 - Formatter and Flush Control Register",4831,null],[12,"fscr","","0x308 - Formatter Synchronization Counter Register",4831,null],[12,"trigger","","0xee8 - TRIGGER",4831,null],[12,"fifo0","","0xeec - Integration ETM Data",4831,null],[12,"itatbctr2","","0xef0 - ITATBCTR2",4831,null],[12,"itatbctr0","","0xef8 - ITATBCTR0",4831,null],[12,"fifo1","","0xefc - Integration ITM Data",4831,null],[12,"itctrl","","0xf00 - Integration Mode Control",4831,null],[12,"claimset","","0xfa0 - Claim tag set",4831,null],[12,"claimclr","","0xfa4 - Claim tag clear",4831,null],[12,"devid","","0xfc8 - TPIU_DEVID",4831,null],[12,"devtype","","0xfcc - TPIU_DEVTYPE",4831,null],[0,"sspsr","","Supported Parallel Port Size Register",null,null],[6,"R","atsamd51g::tpi::sspsr","Reader of register SSPSR",null,null],[0,"cspsr","atsamd51g::tpi","Current Parallel Port Size Register",null,null],[6,"R","atsamd51g::tpi::cspsr","Reader of register CSPSR",null,null],[6,"W","","Writer for register CSPSR",null,null],[0,"acpr","atsamd51g::tpi","Asynchronous Clock Prescaler Register",null,null],[3,"PRESCALER_W","atsamd51g::tpi::acpr","Write proxy for field `PRESCALER`",null,null],[6,"R","","Reader of register ACPR",null,null],[6,"W","","Writer for register ACPR",null,null],[6,"PRESCALER_R","","Reader of field `PRESCALER`",null,null],[11,"bits","","Writes raw bits to the field",4832,[[],["w",6]]],[11,"prescaler","atsamd51g::generic","Bits 0:12",6,[[],["prescaler_r",6]]],[11,"prescaler","atsamd51g::tpi::acpr","Bits 0:12",4833,[[],["prescaler_r",6]]],[11,"prescaler","atsamd51g::generic","Bits 0:12",7,[[],["prescaler_w",3]]],[11,"prescaler","atsamd51g::tpi::acpr","Bits 0:12",4834,[[],["prescaler_w",3]]],[0,"sppr","atsamd51g::tpi","Selected Pin Protocol Register",null,null],[3,"TXMODE_W","atsamd51g::tpi::sppr","Write proxy for field `TXMODE`",null,null],[6,"R","","Reader of register SPPR",null,null],[6,"W","","Writer for register SPPR",null,null],[6,"TXMODE_R","","Reader of field `TXMODE`",null,null],[11,"bits","","Writes raw bits to the field",4835,[[],["w",6]]],[11,"txmode","atsamd51g::generic","Bits 0:1",6,[[],["txmode_r",6]]],[11,"txmode","atsamd51g::tpi::sppr","Bits 0:1",4836,[[],["txmode_r",6]]],[11,"txmode","atsamd51g::generic","Bits 0:1",7,[[],["txmode_w",3]]],[11,"txmode","atsamd51g::tpi::sppr","Bits 0:1",4837,[[],["txmode_w",3]]],[0,"ffsr","atsamd51g::tpi","Formatter and Flush Status Register",null,null],[6,"R","atsamd51g::tpi::ffsr","Reader of register FFSR",null,null],[6,"FLINPROG_R","","Reader of field `FlInProg`",null,null],[6,"FTSTOPPED_R","","Reader of field `FtStopped`",null,null],[6,"TCPRESENT_R","","Reader of field `TCPresent`",null,null],[6,"FTNONSTOP_R","","Reader of field `FtNonStop`",null,null],[11,"fl_in_prog","atsamd51g::generic","Bit 0",6,[[],["flinprog_r",6]]],[11,"ft_stopped","","Bit 1",6,[[],["ftstopped_r",6]]],[11,"tcpresent","","Bit 2",6,[[],["tcpresent_r",6]]],[11,"ft_non_stop","","Bit 3",6,[[],["ftnonstop_r",6]]],[11,"fl_in_prog","atsamd51g::tpi::ffsr","Bit 0",4838,[[],["flinprog_r",6]]],[11,"ft_stopped","","Bit 1",4838,[[],["ftstopped_r",6]]],[11,"tcpresent","","Bit 2",4838,[[],["tcpresent_r",6]]],[11,"ft_non_stop","","Bit 3",4838,[[],["ftnonstop_r",6]]],[0,"ffcr","atsamd51g::tpi","Formatter and Flush Control Register",null,null],[3,"ENFCONT_W","atsamd51g::tpi::ffcr","Write proxy for field `EnFCont`",null,null],[3,"TRIGIN_W","","Write proxy for field `TrigIn`",null,null],[6,"R","","Reader of register FFCR",null,null],[6,"W","","Writer for register FFCR",null,null],[6,"ENFCONT_R","","Reader of field `EnFCont`",null,null],[6,"TRIGIN_R","","Reader of field `TrigIn`",null,null],[11,"set_bit","","Sets the field bit",4839,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4839,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4839,[[],["w",6]]],[11,"set_bit","","Sets the field bit",4840,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4840,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4840,[[],["w",6]]],[11,"en_fcont","atsamd51g::generic","Bit 1",6,[[],["enfcont_r",6]]],[11,"trig_in","","Bit 8",6,[[],["trigin_r",6]]],[11,"en_fcont","atsamd51g::tpi::ffcr","Bit 1",4841,[[],["enfcont_r",6]]],[11,"trig_in","","Bit 8",4841,[[],["trigin_r",6]]],[11,"en_fcont","atsamd51g::generic","Bit 1",7,[[],["enfcont_w",3]]],[11,"trig_in","","Bit 8",7,[[],["trigin_w",3]]],[11,"en_fcont","atsamd51g::tpi::ffcr","Bit 1",4842,[[],["enfcont_w",3]]],[11,"trig_in","","Bit 8",4842,[[],["trigin_w",3]]],[0,"fscr","atsamd51g::tpi","Formatter Synchronization Counter Register",null,null],[6,"R","atsamd51g::tpi::fscr","Reader of register FSCR",null,null],[0,"trigger","atsamd51g::tpi","TRIGGER",null,null],[6,"R","atsamd51g::tpi::trigger","Reader of register TRIGGER",null,null],[6,"TRIGGER_R","","Reader of field `TRIGGER`",null,null],[11,"trigger","atsamd51g::generic","Bit 0",6,[[],["trigger_r",6]]],[11,"trigger","atsamd51g::tpi::trigger","Bit 0",4843,[[],["trigger_r",6]]],[0,"fifo0","atsamd51g::tpi","Integration ETM Data",null,null],[6,"R","atsamd51g::tpi::fifo0","Reader of register FIFO0",null,null],[6,"ETM0_R","","Reader of field `ETM0`",null,null],[6,"ETM1_R","","Reader of field `ETM1`",null,null],[6,"ETM2_R","","Reader of field `ETM2`",null,null],[6,"ETM_BYTECOUNT_R","","Reader of field `ETM_bytecount`",null,null],[6,"ETM_ATVALID_R","","Reader of field `ETM_ATVALID`",null,null],[6,"ITM_BYTECOUNT_R","","Reader of field `ITM_bytecount`",null,null],[6,"ITM_ATVALID_R","","Reader of field `ITM_ATVALID`",null,null],[11,"etm0","atsamd51g::generic","Bits 0:7",6,[[],["etm0_r",6]]],[11,"etm1","","Bits 8:15",6,[[],["etm1_r",6]]],[11,"etm2","","Bits 16:23",6,[[],["etm2_r",6]]],[11,"etm_bytecount","","Bits 24:25",6,[[],["etm_bytecount_r",6]]],[11,"etm_atvalid","","Bit 26",6,[[],["etm_atvalid_r",6]]],[11,"itm_bytecount","","Bits 27:28",6,[[],["itm_bytecount_r",6]]],[11,"itm_atvalid","","Bit 29",6,[[],["itm_atvalid_r",6]]],[11,"etm0","atsamd51g::tpi::fifo0","Bits 0:7",4844,[[],["etm0_r",6]]],[11,"etm1","","Bits 8:15",4844,[[],["etm1_r",6]]],[11,"etm2","","Bits 16:23",4844,[[],["etm2_r",6]]],[11,"etm_bytecount","","Bits 24:25",4844,[[],["etm_bytecount_r",6]]],[11,"etm_atvalid","","Bit 26",4844,[[],["etm_atvalid_r",6]]],[11,"itm_bytecount","","Bits 27:28",4844,[[],["itm_bytecount_r",6]]],[11,"itm_atvalid","","Bit 29",4844,[[],["itm_atvalid_r",6]]],[0,"itatbctr2","atsamd51g::tpi","ITATBCTR2",null,null],[6,"R","atsamd51g::tpi::itatbctr2","Reader of register ITATBCTR2",null,null],[6,"ATREADY_R","","Reader of field `ATREADY`",null,null],[11,"atready","atsamd51g::generic","Bit 0",6,[[],["atready_r",6]]],[11,"atready","atsamd51g::tpi::itatbctr2","Bit 0",4845,[[],["atready_r",6]]],[0,"itatbctr0","atsamd51g::tpi","ITATBCTR0",null,null],[6,"R","atsamd51g::tpi::itatbctr0","Reader of register ITATBCTR0",null,null],[6,"ATREADY_R","","Reader of field `ATREADY`",null,null],[11,"atready","atsamd51g::generic","Bit 0",6,[[],["atready_r",6]]],[11,"atready","atsamd51g::tpi::itatbctr0","Bit 0",4846,[[],["atready_r",6]]],[0,"fifo1","atsamd51g::tpi","Integration ITM Data",null,null],[6,"R","atsamd51g::tpi::fifo1","Reader of register FIFO1",null,null],[6,"ITM0_R","","Reader of field `ITM0`",null,null],[6,"ITM1_R","","Reader of field `ITM1`",null,null],[6,"ITM2_R","","Reader of field `ITM2`",null,null],[6,"ETM_BYTECOUNT_R","","Reader of field `ETM_bytecount`",null,null],[6,"ETM_ATVALID_R","","Reader of field `ETM_ATVALID`",null,null],[6,"ITM_BYTECOUNT_R","","Reader of field `ITM_bytecount`",null,null],[6,"ITM_ATVALID_R","","Reader of field `ITM_ATVALID`",null,null],[11,"itm0","atsamd51g::generic","Bits 0:7",6,[[],["itm0_r",6]]],[11,"itm1","","Bits 8:15",6,[[],["itm1_r",6]]],[11,"itm2","","Bits 16:23",6,[[],["itm2_r",6]]],[11,"etm_bytecount","","Bits 24:25",6,[[],["etm_bytecount_r",6]]],[11,"etm_atvalid","","Bit 26",6,[[],["etm_atvalid_r",6]]],[11,"itm_bytecount","","Bits 27:28",6,[[],["itm_bytecount_r",6]]],[11,"itm_atvalid","","Bit 29",6,[[],["itm_atvalid_r",6]]],[11,"itm0","atsamd51g::tpi::fifo1","Bits 0:7",4847,[[],["itm0_r",6]]],[11,"itm1","","Bits 8:15",4847,[[],["itm1_r",6]]],[11,"itm2","","Bits 16:23",4847,[[],["itm2_r",6]]],[11,"etm_bytecount","","Bits 24:25",4847,[[],["etm_bytecount_r",6]]],[11,"etm_atvalid","","Bit 26",4847,[[],["etm_atvalid_r",6]]],[11,"itm_bytecount","","Bits 27:28",4847,[[],["itm_bytecount_r",6]]],[11,"itm_atvalid","","Bit 29",4847,[[],["itm_atvalid_r",6]]],[0,"itctrl","atsamd51g::tpi","Integration Mode Control",null,null],[3,"MODE_W","atsamd51g::tpi::itctrl","Write proxy for field `Mode`",null,null],[6,"R","","Reader of register ITCTRL",null,null],[6,"W","","Writer for register ITCTRL",null,null],[6,"MODE_R","","Reader of field `Mode`",null,null],[11,"set_bit","","Sets the field bit",4848,[[],["w",6]]],[11,"clear_bit","","Clears the field bit",4848,[[],["w",6]]],[11,"bit","","Writes raw bits to the field",4848,[[],["w",6]]],[11,"mode","atsamd51g::generic","Bit 0",6,[[],["mode_r",6]]],[11,"mode","atsamd51g::tpi::itctrl","Bit 0",4849,[[],["mode_r",6]]],[11,"mode","atsamd51g::generic","Bit 0",7,[[],["mode_w",3]]],[11,"mode","atsamd51g::tpi::itctrl","Bit 0",4850,[[],["mode_w",3]]],[0,"claimset","atsamd51g::tpi","Claim tag set",null,null],[6,"R","atsamd51g::tpi::claimset","Reader of register CLAIMSET",null,null],[6,"W","","Writer for register CLAIMSET",null,null],[0,"claimclr","atsamd51g::tpi","Claim tag clear",null,null],[6,"R","atsamd51g::tpi::claimclr","Reader of register CLAIMCLR",null,null],[6,"W","","Writer for register CLAIMCLR",null,null],[0,"devid","atsamd51g::tpi","TPIU_DEVID",null,null],[6,"R","atsamd51g::tpi::devid","Reader of register DEVID",null,null],[6,"NRTRACEINPUT_R","","Reader of field `NrTraceInput`",null,null],[6,"ASYNCLKIN_R","","Reader of field `AsynClkIn`",null,null],[6,"MINBUFSZ_R","","Reader of field `MinBufSz`",null,null],[6,"PTINVALID_R","","Reader of field `PTINVALID`",null,null],[6,"MANCVALID_R","","Reader of field `MANCVALID`",null,null],[6,"NRZVALID_R","","Reader of field `NRZVALID`",null,null],[11,"nr_trace_input","atsamd51g::generic","Bit 0",6,[[],["nrtraceinput_r",6]]],[11,"asyn_clk_in","","Bit 5",6,[[],["asynclkin_r",6]]],[11,"min_buf_sz","","Bits 6:8",6,[[],["minbufsz_r",6]]],[11,"ptinvalid","","Bit 9",6,[[],["ptinvalid_r",6]]],[11,"mancvalid","","Bit 10",6,[[],["mancvalid_r",6]]],[11,"nrzvalid","","Bit 11",6,[[],["nrzvalid_r",6]]],[11,"nr_trace_input","atsamd51g::tpi::devid","Bit 0",4851,[[],["nrtraceinput_r",6]]],[11,"asyn_clk_in","","Bit 5",4851,[[],["asynclkin_r",6]]],[11,"min_buf_sz","","Bits 6:8",4851,[[],["minbufsz_r",6]]],[11,"ptinvalid","","Bit 9",4851,[[],["ptinvalid_r",6]]],[11,"mancvalid","","Bit 10",4851,[[],["mancvalid_r",6]]],[11,"nrzvalid","","Bit 11",4851,[[],["nrzvalid_r",6]]],[0,"devtype","atsamd51g::tpi","TPIU_DEVTYPE",null,null],[6,"R","atsamd51g::tpi::devtype","Reader of register DEVTYPE",null,null],[6,"SUBTYPE_R","","Reader of field `SubType`",null,null],[6,"MAJORTYPE_R","","Reader of field `MajorType`",null,null],[11,"sub_type","atsamd51g::generic","Bits 0:3",6,[[],["subtype_r",6]]],[11,"major_type","","Bits 4:7",6,[[],["majortype_r",6]]],[11,"sub_type","atsamd51g::tpi::devtype","Bits 0:3",4852,[[],["subtype_r",6]]],[11,"major_type","","Bits 4:7",4852,[[],["majortype_r",6]]],[6,"SSPSR","atsamd51g::tpi","Supported Parallel Port Size Register",null,null],[6,"CSPSR","","Current Parallel Port Size Register",null,null],[6,"ACPR","","Asynchronous Clock Prescaler Register",null,null],[6,"SPPR","","Selected Pin Protocol Register",null,null],[6,"FFSR","","Formatter and Flush Status Register",null,null],[6,"FFCR","","Formatter and Flush Control Register",null,null],[6,"FSCR","","Formatter Synchronization Counter Register",null,null],[6,"TRIGGER","","TRIGGER",null,null],[6,"FIFO0","","Integration ETM Data",null,null],[6,"ITATBCTR2","","ITATBCTR2",null,null],[6,"ITATBCTR0","","ITATBCTR0",null,null],[6,"FIFO1","","Integration ITM Data",null,null],[6,"ITCTRL","","Integration Mode Control",null,null],[6,"CLAIMSET","","Claim tag set",null,null],[6,"CLAIMCLR","","Claim tag clear",null,null],[6,"DEVID","","TPIU_DEVID",null,null],[6,"DEVTYPE","","TPIU_DEVTYPE",null,null],[17,"NVIC_PRIO_BITS","atsamd51g","Number available in the NVIC for configuring priority",null,null],[11,"ptr","","Returns a pointer to the register block",4853,[[]]],[11,"ptr","","Returns a pointer to the register block",4854,[[]]],[11,"ptr","","Returns a pointer to the register block",4855,[[]]],[11,"ptr","","Returns a pointer to the register block",4856,[[]]],[11,"ptr","","Returns a pointer to the register block",4857,[[]]],[11,"ptr","","Returns a pointer to the register block",4858,[[]]],[11,"ptr","","Returns a pointer to the register block",4859,[[]]],[11,"ptr","","Returns a pointer to the register block",4860,[[]]],[11,"ptr","","Returns a pointer to the register block",4861,[[]]],[11,"ptr","","Returns a pointer to the register block",4862,[[]]],[11,"ptr","","Returns a pointer to the register block",4863,[[]]],[11,"ptr","","Returns a pointer to the register block",4864,[[]]],[11,"ptr","","Returns a pointer to the register block",4865,[[]]],[11,"ptr","","Returns a pointer to the register block",4866,[[]]],[11,"ptr","","Returns a pointer to the register block",4867,[[]]],[11,"ptr","","Returns a pointer to the register block",4868,[[]]],[11,"ptr","","Returns a pointer to the register block",4869,[[]]],[11,"ptr","","Returns a pointer to the register block",4870,[[]]],[11,"ptr","","Returns a pointer to the register block",4871,[[]]],[11,"ptr","","Returns a pointer to the register block",4872,[[]]],[11,"ptr","","Returns a pointer to the register block",4873,[[]]],[11,"ptr","","Returns a pointer to the register block",4874,[[]]],[11,"ptr","","Returns a pointer to the register block",4875,[[]]],[11,"ptr","","Returns a pointer to the register block",4876,[[]]],[11,"ptr","","Returns a pointer to the register block",4877,[[]]],[11,"ptr","","Returns a pointer to the register block",4878,[[]]],[11,"ptr","","Returns a pointer to the register block",4879,[[]]],[11,"ptr","","Returns a pointer to the register block",4880,[[]]],[11,"ptr","","Returns a pointer to the register block",4881,[[]]],[11,"ptr","","Returns a pointer to the register block",4882,[[]]],[11,"ptr","","Returns a pointer to the register block",4883,[[]]],[11,"ptr","","Returns a pointer to the register block",4884,[[]]],[11,"ptr","","Returns a pointer to the register block",4885,[[]]],[11,"ptr","","Returns a pointer to the register block",4886,[[]]],[11,"ptr","","Returns a pointer to the register block",4887,[[]]],[11,"ptr","","Returns a pointer to the register block",4888,[[]]],[11,"ptr","","Returns a pointer to the register block",4889,[[]]],[11,"ptr","","Returns a pointer to the register block",4890,[[]]],[11,"ptr","","Returns a pointer to the register block",4891,[[]]],[11,"ptr","","Returns a pointer to the register block",4892,[[]]],[11,"ptr","","Returns a pointer to the register block",4893,[[]]],[11,"ptr","","Returns a pointer to the register block",4894,[[]]],[11,"ptr","","Returns a pointer to the register block",4895,[[]]],[11,"ptr","","Returns a pointer to the register block",4896,[[]]],[11,"ptr","","Returns a pointer to the register block",4897,[[]]],[11,"ptr","","Returns a pointer to the register block",4898,[[]]],[11,"ptr","","Returns a pointer to the register block",4899,[[]]],[11,"ptr","","Returns a pointer to the register block",4900,[[]]],[11,"ptr","","Returns a pointer to the register block",4901,[[]]],[11,"ptr","","Returns a pointer to the register block",4902,[[]]],[11,"ptr","","Returns a pointer to the register block",4903,[[]]],[11,"take","","Returns all the peripherals once",1,[[],["option",4]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4904,[[]]],[11,"borrow","","",4904,[[]]],[11,"borrow_mut","","",4904,[[]]],[11,"try_from","","",4904,[[],["result",4]]],[11,"into","","",4904,[[]]],[11,"try_into","","",4904,[[],["result",4]]],[11,"type_id","","",4904,[[],["typeid",3]]],[11,"from","","",4905,[[]]],[11,"borrow","","",4905,[[]]],[11,"borrow_mut","","",4905,[[]]],[11,"try_from","","",4905,[[],["result",4]]],[11,"into","","",4905,[[]]],[11,"try_into","","",4905,[[],["result",4]]],[11,"type_id","","",4905,[[],["typeid",3]]],[11,"from","","",4906,[[]]],[11,"borrow","","",4906,[[]]],[11,"borrow_mut","","",4906,[[]]],[11,"try_from","","",4906,[[],["result",4]]],[11,"into","","",4906,[[]]],[11,"try_into","","",4906,[[],["result",4]]],[11,"type_id","","",4906,[[],["typeid",3]]],[11,"from","","",4907,[[]]],[11,"borrow","","",4907,[[]]],[11,"borrow_mut","","",4907,[[]]],[11,"try_from","","",4907,[[],["result",4]]],[11,"into","","",4907,[[]]],[11,"try_into","","",4907,[[],["result",4]]],[11,"type_id","","",4907,[[],["typeid",3]]],[11,"from","","",4908,[[]]],[11,"borrow","","",4908,[[]]],[11,"borrow_mut","","",4908,[[]]],[11,"try_from","","",4908,[[],["result",4]]],[11,"into","","",4908,[[]]],[11,"try_into","","",4908,[[],["result",4]]],[11,"type_id","","",4908,[[],["typeid",3]]],[11,"from","","",4909,[[]]],[11,"borrow","","",4909,[[]]],[11,"borrow_mut","","",4909,[[]]],[11,"try_from","","",4909,[[],["result",4]]],[11,"into","","",4909,[[]]],[11,"try_into","","",4909,[[],["result",4]]],[11,"type_id","","",4909,[[],["typeid",3]]],[11,"from","","",4910,[[]]],[11,"borrow","","",4910,[[]]],[11,"borrow_mut","","",4910,[[]]],[11,"try_from","","",4910,[[],["result",4]]],[11,"into","","",4910,[[]]],[11,"try_into","","",4910,[[],["result",4]]],[11,"type_id","","",4910,[[],["typeid",3]]],[11,"from","","",4911,[[]]],[11,"borrow","","",4911,[[]]],[11,"borrow_mut","","",4911,[[]]],[11,"try_from","","",4911,[[],["result",4]]],[11,"into","","",4911,[[]]],[11,"try_into","","",4911,[[],["result",4]]],[11,"type_id","","",4911,[[],["typeid",3]]],[11,"from","","",4912,[[]]],[11,"borrow","","",4912,[[]]],[11,"borrow_mut","","",4912,[[]]],[11,"try_from","","",4912,[[],["result",4]]],[11,"into","","",4912,[[]]],[11,"try_into","","",4912,[[],["result",4]]],[11,"type_id","","",4912,[[],["typeid",3]]],[11,"from","","",4913,[[]]],[11,"borrow","","",4913,[[]]],[11,"borrow_mut","","",4913,[[]]],[11,"try_from","","",4913,[[],["result",4]]],[11,"into","","",4913,[[]]],[11,"try_into","","",4913,[[],["result",4]]],[11,"type_id","","",4913,[[],["typeid",3]]],[11,"from","","",4914,[[]]],[11,"borrow","","",4914,[[]]],[11,"borrow_mut","","",4914,[[]]],[11,"try_from","","",4914,[[],["result",4]]],[11,"into","","",4914,[[]]],[11,"try_into","","",4914,[[],["result",4]]],[11,"type_id","","",4914,[[],["typeid",3]]],[11,"from","","",4915,[[]]],[11,"borrow","","",4915,[[]]],[11,"borrow_mut","","",4915,[[]]],[11,"try_from","","",4915,[[],["result",4]]],[11,"into","","",4915,[[]]],[11,"try_into","","",4915,[[],["result",4]]],[11,"type_id","","",4915,[[],["typeid",3]]],[11,"from","","",4853,[[]]],[11,"borrow","","",4853,[[]]],[11,"borrow_mut","","",4853,[[]]],[11,"try_from","","",4853,[[],["result",4]]],[11,"into","","",4853,[[]]],[11,"try_into","","",4853,[[],["result",4]]],[11,"type_id","","",4853,[[],["typeid",3]]],[11,"from","","",4854,[[]]],[11,"borrow","","",4854,[[]]],[11,"borrow_mut","","",4854,[[]]],[11,"try_from","","",4854,[[],["result",4]]],[11,"into","","",4854,[[]]],[11,"try_into","","",4854,[[],["result",4]]],[11,"type_id","","",4854,[[],["typeid",3]]],[11,"from","","",4855,[[]]],[11,"borrow","","",4855,[[]]],[11,"borrow_mut","","",4855,[[]]],[11,"try_from","","",4855,[[],["result",4]]],[11,"into","","",4855,[[]]],[11,"try_into","","",4855,[[],["result",4]]],[11,"type_id","","",4855,[[],["typeid",3]]],[11,"from","","",4856,[[]]],[11,"borrow","","",4856,[[]]],[11,"borrow_mut","","",4856,[[]]],[11,"try_from","","",4856,[[],["result",4]]],[11,"into","","",4856,[[]]],[11,"try_into","","",4856,[[],["result",4]]],[11,"type_id","","",4856,[[],["typeid",3]]],[11,"from","","",4857,[[]]],[11,"borrow","","",4857,[[]]],[11,"borrow_mut","","",4857,[[]]],[11,"try_from","","",4857,[[],["result",4]]],[11,"into","","",4857,[[]]],[11,"try_into","","",4857,[[],["result",4]]],[11,"type_id","","",4857,[[],["typeid",3]]],[11,"from","","",4858,[[]]],[11,"borrow","","",4858,[[]]],[11,"borrow_mut","","",4858,[[]]],[11,"try_from","","",4858,[[],["result",4]]],[11,"into","","",4858,[[]]],[11,"try_into","","",4858,[[],["result",4]]],[11,"type_id","","",4858,[[],["typeid",3]]],[11,"from","","",4859,[[]]],[11,"borrow","","",4859,[[]]],[11,"borrow_mut","","",4859,[[]]],[11,"try_from","","",4859,[[],["result",4]]],[11,"into","","",4859,[[]]],[11,"try_into","","",4859,[[],["result",4]]],[11,"type_id","","",4859,[[],["typeid",3]]],[11,"from","","",4860,[[]]],[11,"borrow","","",4860,[[]]],[11,"borrow_mut","","",4860,[[]]],[11,"try_from","","",4860,[[],["result",4]]],[11,"into","","",4860,[[]]],[11,"try_into","","",4860,[[],["result",4]]],[11,"type_id","","",4860,[[],["typeid",3]]],[11,"from","","",4861,[[]]],[11,"borrow","","",4861,[[]]],[11,"borrow_mut","","",4861,[[]]],[11,"try_from","","",4861,[[],["result",4]]],[11,"into","","",4861,[[]]],[11,"try_into","","",4861,[[],["result",4]]],[11,"type_id","","",4861,[[],["typeid",3]]],[11,"from","","",4862,[[]]],[11,"borrow","","",4862,[[]]],[11,"borrow_mut","","",4862,[[]]],[11,"try_from","","",4862,[[],["result",4]]],[11,"into","","",4862,[[]]],[11,"try_into","","",4862,[[],["result",4]]],[11,"type_id","","",4862,[[],["typeid",3]]],[11,"from","","",4863,[[]]],[11,"borrow","","",4863,[[]]],[11,"borrow_mut","","",4863,[[]]],[11,"try_from","","",4863,[[],["result",4]]],[11,"into","","",4863,[[]]],[11,"try_into","","",4863,[[],["result",4]]],[11,"type_id","","",4863,[[],["typeid",3]]],[11,"from","","",4864,[[]]],[11,"borrow","","",4864,[[]]],[11,"borrow_mut","","",4864,[[]]],[11,"try_from","","",4864,[[],["result",4]]],[11,"into","","",4864,[[]]],[11,"try_into","","",4864,[[],["result",4]]],[11,"type_id","","",4864,[[],["typeid",3]]],[11,"from","","",4865,[[]]],[11,"borrow","","",4865,[[]]],[11,"borrow_mut","","",4865,[[]]],[11,"try_from","","",4865,[[],["result",4]]],[11,"into","","",4865,[[]]],[11,"try_into","","",4865,[[],["result",4]]],[11,"type_id","","",4865,[[],["typeid",3]]],[11,"from","","",4866,[[]]],[11,"borrow","","",4866,[[]]],[11,"borrow_mut","","",4866,[[]]],[11,"try_from","","",4866,[[],["result",4]]],[11,"into","","",4866,[[]]],[11,"try_into","","",4866,[[],["result",4]]],[11,"type_id","","",4866,[[],["typeid",3]]],[11,"from","","",4867,[[]]],[11,"borrow","","",4867,[[]]],[11,"borrow_mut","","",4867,[[]]],[11,"try_from","","",4867,[[],["result",4]]],[11,"into","","",4867,[[]]],[11,"try_into","","",4867,[[],["result",4]]],[11,"type_id","","",4867,[[],["typeid",3]]],[11,"from","","",4868,[[]]],[11,"borrow","","",4868,[[]]],[11,"borrow_mut","","",4868,[[]]],[11,"try_from","","",4868,[[],["result",4]]],[11,"into","","",4868,[[]]],[11,"try_into","","",4868,[[],["result",4]]],[11,"type_id","","",4868,[[],["typeid",3]]],[11,"from","","",4869,[[]]],[11,"borrow","","",4869,[[]]],[11,"borrow_mut","","",4869,[[]]],[11,"try_from","","",4869,[[],["result",4]]],[11,"into","","",4869,[[]]],[11,"try_into","","",4869,[[],["result",4]]],[11,"type_id","","",4869,[[],["typeid",3]]],[11,"from","","",4870,[[]]],[11,"borrow","","",4870,[[]]],[11,"borrow_mut","","",4870,[[]]],[11,"try_from","","",4870,[[],["result",4]]],[11,"into","","",4870,[[]]],[11,"try_into","","",4870,[[],["result",4]]],[11,"type_id","","",4870,[[],["typeid",3]]],[11,"from","","",4871,[[]]],[11,"borrow","","",4871,[[]]],[11,"borrow_mut","","",4871,[[]]],[11,"try_from","","",4871,[[],["result",4]]],[11,"into","","",4871,[[]]],[11,"try_into","","",4871,[[],["result",4]]],[11,"type_id","","",4871,[[],["typeid",3]]],[11,"from","","",4872,[[]]],[11,"borrow","","",4872,[[]]],[11,"borrow_mut","","",4872,[[]]],[11,"try_from","","",4872,[[],["result",4]]],[11,"into","","",4872,[[]]],[11,"try_into","","",4872,[[],["result",4]]],[11,"type_id","","",4872,[[],["typeid",3]]],[11,"from","","",4873,[[]]],[11,"borrow","","",4873,[[]]],[11,"borrow_mut","","",4873,[[]]],[11,"try_from","","",4873,[[],["result",4]]],[11,"into","","",4873,[[]]],[11,"try_into","","",4873,[[],["result",4]]],[11,"type_id","","",4873,[[],["typeid",3]]],[11,"from","","",4874,[[]]],[11,"borrow","","",4874,[[]]],[11,"borrow_mut","","",4874,[[]]],[11,"try_from","","",4874,[[],["result",4]]],[11,"into","","",4874,[[]]],[11,"try_into","","",4874,[[],["result",4]]],[11,"type_id","","",4874,[[],["typeid",3]]],[11,"from","","",4875,[[]]],[11,"borrow","","",4875,[[]]],[11,"borrow_mut","","",4875,[[]]],[11,"try_from","","",4875,[[],["result",4]]],[11,"into","","",4875,[[]]],[11,"try_into","","",4875,[[],["result",4]]],[11,"type_id","","",4875,[[],["typeid",3]]],[11,"from","","",4876,[[]]],[11,"borrow","","",4876,[[]]],[11,"borrow_mut","","",4876,[[]]],[11,"try_from","","",4876,[[],["result",4]]],[11,"into","","",4876,[[]]],[11,"try_into","","",4876,[[],["result",4]]],[11,"type_id","","",4876,[[],["typeid",3]]],[11,"from","","",4877,[[]]],[11,"borrow","","",4877,[[]]],[11,"borrow_mut","","",4877,[[]]],[11,"try_from","","",4877,[[],["result",4]]],[11,"into","","",4877,[[]]],[11,"try_into","","",4877,[[],["result",4]]],[11,"type_id","","",4877,[[],["typeid",3]]],[11,"from","","",4878,[[]]],[11,"borrow","","",4878,[[]]],[11,"borrow_mut","","",4878,[[]]],[11,"try_from","","",4878,[[],["result",4]]],[11,"into","","",4878,[[]]],[11,"try_into","","",4878,[[],["result",4]]],[11,"type_id","","",4878,[[],["typeid",3]]],[11,"from","","",4879,[[]]],[11,"borrow","","",4879,[[]]],[11,"borrow_mut","","",4879,[[]]],[11,"try_from","","",4879,[[],["result",4]]],[11,"into","","",4879,[[]]],[11,"try_into","","",4879,[[],["result",4]]],[11,"type_id","","",4879,[[],["typeid",3]]],[11,"from","","",4880,[[]]],[11,"borrow","","",4880,[[]]],[11,"borrow_mut","","",4880,[[]]],[11,"try_from","","",4880,[[],["result",4]]],[11,"into","","",4880,[[]]],[11,"try_into","","",4880,[[],["result",4]]],[11,"type_id","","",4880,[[],["typeid",3]]],[11,"from","","",4881,[[]]],[11,"borrow","","",4881,[[]]],[11,"borrow_mut","","",4881,[[]]],[11,"try_from","","",4881,[[],["result",4]]],[11,"into","","",4881,[[]]],[11,"try_into","","",4881,[[],["result",4]]],[11,"type_id","","",4881,[[],["typeid",3]]],[11,"from","","",4882,[[]]],[11,"borrow","","",4882,[[]]],[11,"borrow_mut","","",4882,[[]]],[11,"try_from","","",4882,[[],["result",4]]],[11,"into","","",4882,[[]]],[11,"try_into","","",4882,[[],["result",4]]],[11,"type_id","","",4882,[[],["typeid",3]]],[11,"from","","",4883,[[]]],[11,"borrow","","",4883,[[]]],[11,"borrow_mut","","",4883,[[]]],[11,"try_from","","",4883,[[],["result",4]]],[11,"into","","",4883,[[]]],[11,"try_into","","",4883,[[],["result",4]]],[11,"type_id","","",4883,[[],["typeid",3]]],[11,"from","","",4884,[[]]],[11,"borrow","","",4884,[[]]],[11,"borrow_mut","","",4884,[[]]],[11,"try_from","","",4884,[[],["result",4]]],[11,"into","","",4884,[[]]],[11,"try_into","","",4884,[[],["result",4]]],[11,"type_id","","",4884,[[],["typeid",3]]],[11,"from","","",4885,[[]]],[11,"borrow","","",4885,[[]]],[11,"borrow_mut","","",4885,[[]]],[11,"try_from","","",4885,[[],["result",4]]],[11,"into","","",4885,[[]]],[11,"try_into","","",4885,[[],["result",4]]],[11,"type_id","","",4885,[[],["typeid",3]]],[11,"from","","",4886,[[]]],[11,"borrow","","",4886,[[]]],[11,"borrow_mut","","",4886,[[]]],[11,"try_from","","",4886,[[],["result",4]]],[11,"into","","",4886,[[]]],[11,"try_into","","",4886,[[],["result",4]]],[11,"type_id","","",4886,[[],["typeid",3]]],[11,"from","","",4887,[[]]],[11,"borrow","","",4887,[[]]],[11,"borrow_mut","","",4887,[[]]],[11,"try_from","","",4887,[[],["result",4]]],[11,"into","","",4887,[[]]],[11,"try_into","","",4887,[[],["result",4]]],[11,"type_id","","",4887,[[],["typeid",3]]],[11,"from","","",4888,[[]]],[11,"borrow","","",4888,[[]]],[11,"borrow_mut","","",4888,[[]]],[11,"try_from","","",4888,[[],["result",4]]],[11,"into","","",4888,[[]]],[11,"try_into","","",4888,[[],["result",4]]],[11,"type_id","","",4888,[[],["typeid",3]]],[11,"from","","",4889,[[]]],[11,"borrow","","",4889,[[]]],[11,"borrow_mut","","",4889,[[]]],[11,"try_from","","",4889,[[],["result",4]]],[11,"into","","",4889,[[]]],[11,"try_into","","",4889,[[],["result",4]]],[11,"type_id","","",4889,[[],["typeid",3]]],[11,"from","","",4890,[[]]],[11,"borrow","","",4890,[[]]],[11,"borrow_mut","","",4890,[[]]],[11,"try_from","","",4890,[[],["result",4]]],[11,"into","","",4890,[[]]],[11,"try_into","","",4890,[[],["result",4]]],[11,"type_id","","",4890,[[],["typeid",3]]],[11,"from","","",4891,[[]]],[11,"borrow","","",4891,[[]]],[11,"borrow_mut","","",4891,[[]]],[11,"try_from","","",4891,[[],["result",4]]],[11,"into","","",4891,[[]]],[11,"try_into","","",4891,[[],["result",4]]],[11,"type_id","","",4891,[[],["typeid",3]]],[11,"from","","",4892,[[]]],[11,"borrow","","",4892,[[]]],[11,"borrow_mut","","",4892,[[]]],[11,"try_from","","",4892,[[],["result",4]]],[11,"into","","",4892,[[]]],[11,"try_into","","",4892,[[],["result",4]]],[11,"type_id","","",4892,[[],["typeid",3]]],[11,"from","","",4893,[[]]],[11,"borrow","","",4893,[[]]],[11,"borrow_mut","","",4893,[[]]],[11,"try_from","","",4893,[[],["result",4]]],[11,"into","","",4893,[[]]],[11,"try_into","","",4893,[[],["result",4]]],[11,"type_id","","",4893,[[],["typeid",3]]],[11,"from","","",4894,[[]]],[11,"borrow","","",4894,[[]]],[11,"borrow_mut","","",4894,[[]]],[11,"try_from","","",4894,[[],["result",4]]],[11,"into","","",4894,[[]]],[11,"try_into","","",4894,[[],["result",4]]],[11,"type_id","","",4894,[[],["typeid",3]]],[11,"from","","",4895,[[]]],[11,"borrow","","",4895,[[]]],[11,"borrow_mut","","",4895,[[]]],[11,"try_from","","",4895,[[],["result",4]]],[11,"into","","",4895,[[]]],[11,"try_into","","",4895,[[],["result",4]]],[11,"type_id","","",4895,[[],["typeid",3]]],[11,"from","","",4896,[[]]],[11,"borrow","","",4896,[[]]],[11,"borrow_mut","","",4896,[[]]],[11,"try_from","","",4896,[[],["result",4]]],[11,"into","","",4896,[[]]],[11,"try_into","","",4896,[[],["result",4]]],[11,"type_id","","",4896,[[],["typeid",3]]],[11,"from","","",4897,[[]]],[11,"borrow","","",4897,[[]]],[11,"borrow_mut","","",4897,[[]]],[11,"try_from","","",4897,[[],["result",4]]],[11,"into","","",4897,[[]]],[11,"try_into","","",4897,[[],["result",4]]],[11,"type_id","","",4897,[[],["typeid",3]]],[11,"from","","",4898,[[]]],[11,"borrow","","",4898,[[]]],[11,"borrow_mut","","",4898,[[]]],[11,"try_from","","",4898,[[],["result",4]]],[11,"into","","",4898,[[]]],[11,"try_into","","",4898,[[],["result",4]]],[11,"type_id","","",4898,[[],["typeid",3]]],[11,"from","","",4899,[[]]],[11,"borrow","","",4899,[[]]],[11,"borrow_mut","","",4899,[[]]],[11,"try_from","","",4899,[[],["result",4]]],[11,"into","","",4899,[[]]],[11,"try_into","","",4899,[[],["result",4]]],[11,"type_id","","",4899,[[],["typeid",3]]],[11,"from","","",4900,[[]]],[11,"borrow","","",4900,[[]]],[11,"borrow_mut","","",4900,[[]]],[11,"try_from","","",4900,[[],["result",4]]],[11,"into","","",4900,[[]]],[11,"try_into","","",4900,[[],["result",4]]],[11,"type_id","","",4900,[[],["typeid",3]]],[11,"from","","",4901,[[]]],[11,"borrow","","",4901,[[]]],[11,"borrow_mut","","",4901,[[]]],[11,"try_from","","",4901,[[],["result",4]]],[11,"into","","",4901,[[]]],[11,"try_into","","",4901,[[],["result",4]]],[11,"type_id","","",4901,[[],["typeid",3]]],[11,"from","","",4902,[[]]],[11,"borrow","","",4902,[[]]],[11,"borrow_mut","","",4902,[[]]],[11,"try_from","","",4902,[[],["result",4]]],[11,"into","","",4902,[[]]],[11,"try_into","","",4902,[[],["result",4]]],[11,"type_id","","",4902,[[],["typeid",3]]],[11,"from","","",4903,[[]]],[11,"borrow","","",4903,[[]]],[11,"borrow_mut","","",4903,[[]]],[11,"try_from","","",4903,[[],["result",4]]],[11,"into","","",4903,[[]]],[11,"try_into","","",4903,[[],["result",4]]],[11,"type_id","","",4903,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","atsamd51g::generic","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","atsamd51g::ac","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","atsamd51g::ac::ctrla","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","atsamd51g::ac::ctrlb","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","atsamd51g::ac::evctrl","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","atsamd51g::ac::intenclr","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","atsamd51g::ac::intenset","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","atsamd51g::ac::intflag","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","atsamd51g::ac::statusa","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","atsamd51g::ac::dbgctrl","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","atsamd51g::ac::winctrl","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","atsamd51g::ac::scaler","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","atsamd51g::ac::compctrl","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","atsamd51g::ac::calib","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","atsamd51g::adc0","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::ctrla","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::evctrl","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::dbgctrl","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::inputctrl","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::ctrlb","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::refctrl","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::avgctrl","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::sampctrl","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::winlt","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::winut","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::gaincorr","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::offsetcorr","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::swtrig","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::intenclr","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::intenset","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::intflag","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::dseqdata","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::dseqctrl","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","atsamd51g::adc0::calib","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","atsamd51g::aes","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","atsamd51g::aes::ctrla","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","atsamd51g::aes::ctrlb","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","atsamd51g::aes::intenclr","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","atsamd51g::aes::intenset","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","atsamd51g::aes::intflag","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","atsamd51g::aes::databufptr","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","atsamd51g::aes::dbgctrl","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","atsamd51g::ccl","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","atsamd51g::ccl::ctrl","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","atsamd51g::ccl::seqctrl","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","atsamd51g::ccl::lutctrl","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"into","","",288,[[]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"into","","",289,[[]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::type_","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"into","","",295,[[]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::cfg","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"into","","",301,[[]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"into","","",302,[[]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"into","","",304,[[]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"into","","",300,[[]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::ctrl","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"into","","",307,[[]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::lckway","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"into","","",310,[[]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::maint0","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"into","","",313,[[]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::maint1","",316,[[]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"into","","",316,[[]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"into","","",317,[[]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"from","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"into","","",315,[[]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::mcfg","",321,[[]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"into","","",321,[[]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"from","","",319,[[]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"into","","",319,[[]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::men","",324,[[]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"into","","",324,[[]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"from","atsamd51g::cmcc::mctrl","",327,[[]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"into","","",327,[[]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","atsamd51g::dac","",330,[[]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"into","","",330,[[]]],[11,"try_into","","",330,[[],["result",4]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"from","atsamd51g::dac::ctrla","",331,[[]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"into","","",331,[[]]],[11,"try_into","","",331,[[],["result",4]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"from","","",332,[[]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"into","","",332,[[]]],[11,"try_into","","",332,[[],["result",4]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"from","atsamd51g::dac::ctrlb","",336,[[]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"into","","",336,[[]]],[11,"try_into","","",336,[[],["result",4]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"from","","",338,[[]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"into","","",338,[[]]],[11,"try_into","","",338,[[],["result",4]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"from","","",335,[[]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"into","","",335,[[]]],[11,"try_into","","",335,[[],["result",4]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"from","atsamd51g::dac::evctrl","",341,[[]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"into","","",341,[[]]],[11,"try_into","","",341,[[],["result",4]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"from","","",342,[[]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"into","","",342,[[]]],[11,"try_into","","",342,[[],["result",4]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"from","","",343,[[]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"into","","",343,[[]]],[11,"try_into","","",343,[[],["result",4]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"from","","",344,[[]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"into","","",344,[[]]],[11,"try_into","","",344,[[],["result",4]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"from","","",345,[[]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"into","","",345,[[]]],[11,"try_into","","",345,[[],["result",4]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"from","","",346,[[]]],[11,"borrow","","",346,[[]]],[11,"borrow_mut","","",346,[[]]],[11,"try_from","","",346,[[],["result",4]]],[11,"into","","",346,[[]]],[11,"try_into","","",346,[[],["result",4]]],[11,"type_id","","",346,[[],["typeid",3]]],[11,"from","","",347,[[]]],[11,"borrow","","",347,[[]]],[11,"borrow_mut","","",347,[[]]],[11,"try_from","","",347,[[],["result",4]]],[11,"into","","",347,[[]]],[11,"try_into","","",347,[[],["result",4]]],[11,"type_id","","",347,[[],["typeid",3]]],[11,"from","","",348,[[]]],[11,"borrow","","",348,[[]]],[11,"borrow_mut","","",348,[[]]],[11,"try_from","","",348,[[],["result",4]]],[11,"into","","",348,[[]]],[11,"try_into","","",348,[[],["result",4]]],[11,"type_id","","",348,[[],["typeid",3]]],[11,"from","atsamd51g::dac::intenclr","",351,[[]]],[11,"borrow","","",351,[[]]],[11,"borrow_mut","","",351,[[]]],[11,"try_from","","",351,[[],["result",4]]],[11,"into","","",351,[[]]],[11,"try_into","","",351,[[],["result",4]]],[11,"type_id","","",351,[[],["typeid",3]]],[11,"from","","",352,[[]]],[11,"borrow","","",352,[[]]],[11,"borrow_mut","","",352,[[]]],[11,"try_from","","",352,[[],["result",4]]],[11,"into","","",352,[[]]],[11,"try_into","","",352,[[],["result",4]]],[11,"type_id","","",352,[[],["typeid",3]]],[11,"from","","",353,[[]]],[11,"borrow","","",353,[[]]],[11,"borrow_mut","","",353,[[]]],[11,"try_from","","",353,[[],["result",4]]],[11,"into","","",353,[[]]],[11,"try_into","","",353,[[],["result",4]]],[11,"type_id","","",353,[[],["typeid",3]]],[11,"from","","",354,[[]]],[11,"borrow","","",354,[[]]],[11,"borrow_mut","","",354,[[]]],[11,"try_from","","",354,[[],["result",4]]],[11,"into","","",354,[[]]],[11,"try_into","","",354,[[],["result",4]]],[11,"type_id","","",354,[[],["typeid",3]]],[11,"from","","",355,[[]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"into","","",355,[[]]],[11,"try_into","","",355,[[],["result",4]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"from","","",356,[[]]],[11,"borrow","","",356,[[]]],[11,"borrow_mut","","",356,[[]]],[11,"try_from","","",356,[[],["result",4]]],[11,"into","","",356,[[]]],[11,"try_into","","",356,[[],["result",4]]],[11,"type_id","","",356,[[],["typeid",3]]],[11,"from","","",357,[[]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"into","","",357,[[]]],[11,"try_into","","",357,[[],["result",4]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"from","","",358,[[]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"into","","",358,[[]]],[11,"try_into","","",358,[[],["result",4]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"from","atsamd51g::dac::intenset","",361,[[]]],[11,"borrow","","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"into","","",361,[[]]],[11,"try_into","","",361,[[],["result",4]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"from","","",362,[[]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"into","","",362,[[]]],[11,"try_into","","",362,[[],["result",4]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"from","","",363,[[]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"into","","",363,[[]]],[11,"try_into","","",363,[[],["result",4]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"from","","",364,[[]]],[11,"borrow","","",364,[[]]],[11,"borrow_mut","","",364,[[]]],[11,"try_from","","",364,[[],["result",4]]],[11,"into","","",364,[[]]],[11,"try_into","","",364,[[],["result",4]]],[11,"type_id","","",364,[[],["typeid",3]]],[11,"from","","",365,[[]]],[11,"borrow","","",365,[[]]],[11,"borrow_mut","","",365,[[]]],[11,"try_from","","",365,[[],["result",4]]],[11,"into","","",365,[[]]],[11,"try_into","","",365,[[],["result",4]]],[11,"type_id","","",365,[[],["typeid",3]]],[11,"from","","",366,[[]]],[11,"borrow","","",366,[[]]],[11,"borrow_mut","","",366,[[]]],[11,"try_from","","",366,[[],["result",4]]],[11,"into","","",366,[[]]],[11,"try_into","","",366,[[],["result",4]]],[11,"type_id","","",366,[[],["typeid",3]]],[11,"from","","",367,[[]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"into","","",367,[[]]],[11,"try_into","","",367,[[],["result",4]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"from","","",368,[[]]],[11,"borrow","","",368,[[]]],[11,"borrow_mut","","",368,[[]]],[11,"try_from","","",368,[[],["result",4]]],[11,"into","","",368,[[]]],[11,"try_into","","",368,[[],["result",4]]],[11,"type_id","","",368,[[],["typeid",3]]],[11,"from","atsamd51g::dac::intflag","",371,[[]]],[11,"borrow","","",371,[[]]],[11,"borrow_mut","","",371,[[]]],[11,"try_from","","",371,[[],["result",4]]],[11,"into","","",371,[[]]],[11,"try_into","","",371,[[],["result",4]]],[11,"type_id","","",371,[[],["typeid",3]]],[11,"from","","",372,[[]]],[11,"borrow","","",372,[[]]],[11,"borrow_mut","","",372,[[]]],[11,"try_from","","",372,[[],["result",4]]],[11,"into","","",372,[[]]],[11,"try_into","","",372,[[],["result",4]]],[11,"type_id","","",372,[[],["typeid",3]]],[11,"from","","",373,[[]]],[11,"borrow","","",373,[[]]],[11,"borrow_mut","","",373,[[]]],[11,"try_from","","",373,[[],["result",4]]],[11,"into","","",373,[[]]],[11,"try_into","","",373,[[],["result",4]]],[11,"type_id","","",373,[[],["typeid",3]]],[11,"from","","",374,[[]]],[11,"borrow","","",374,[[]]],[11,"borrow_mut","","",374,[[]]],[11,"try_from","","",374,[[],["result",4]]],[11,"into","","",374,[[]]],[11,"try_into","","",374,[[],["result",4]]],[11,"type_id","","",374,[[],["typeid",3]]],[11,"from","","",375,[[]]],[11,"borrow","","",375,[[]]],[11,"borrow_mut","","",375,[[]]],[11,"try_from","","",375,[[],["result",4]]],[11,"into","","",375,[[]]],[11,"try_into","","",375,[[],["result",4]]],[11,"type_id","","",375,[[],["typeid",3]]],[11,"from","","",376,[[]]],[11,"borrow","","",376,[[]]],[11,"borrow_mut","","",376,[[]]],[11,"try_from","","",376,[[],["result",4]]],[11,"into","","",376,[[]]],[11,"try_into","","",376,[[],["result",4]]],[11,"type_id","","",376,[[],["typeid",3]]],[11,"from","","",377,[[]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"into","","",377,[[]]],[11,"try_into","","",377,[[],["result",4]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"from","","",378,[[]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"into","","",378,[[]]],[11,"try_into","","",378,[[],["result",4]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"from","atsamd51g::dac::dacctrl","",386,[[]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"into","","",386,[[]]],[11,"try_into","","",386,[[],["result",4]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"from","","",387,[[]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"into","","",387,[[]]],[11,"try_into","","",387,[[],["result",4]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"from","","",389,[[]]],[11,"borrow","","",389,[[]]],[11,"borrow_mut","","",389,[[]]],[11,"try_from","","",389,[[],["result",4]]],[11,"into","","",389,[[]]],[11,"try_into","","",389,[[],["result",4]]],[11,"type_id","","",389,[[],["typeid",3]]],[11,"from","","",390,[[]]],[11,"borrow","","",390,[[]]],[11,"borrow_mut","","",390,[[]]],[11,"try_from","","",390,[[],["result",4]]],[11,"into","","",390,[[]]],[11,"try_into","","",390,[[],["result",4]]],[11,"type_id","","",390,[[],["typeid",3]]],[11,"from","","",391,[[]]],[11,"borrow","","",391,[[]]],[11,"borrow_mut","","",391,[[]]],[11,"try_from","","",391,[[],["result",4]]],[11,"into","","",391,[[]]],[11,"try_into","","",391,[[],["result",4]]],[11,"type_id","","",391,[[],["typeid",3]]],[11,"from","","",392,[[]]],[11,"borrow","","",392,[[]]],[11,"borrow_mut","","",392,[[]]],[11,"try_from","","",392,[[],["result",4]]],[11,"into","","",392,[[]]],[11,"try_into","","",392,[[],["result",4]]],[11,"type_id","","",392,[[],["typeid",3]]],[11,"from","","",394,[[]]],[11,"borrow","","",394,[[]]],[11,"borrow_mut","","",394,[[]]],[11,"try_from","","",394,[[],["result",4]]],[11,"into","","",394,[[]]],[11,"try_into","","",394,[[],["result",4]]],[11,"type_id","","",394,[[],["typeid",3]]],[11,"from","","",396,[[]]],[11,"borrow","","",396,[[]]],[11,"borrow_mut","","",396,[[]]],[11,"try_from","","",396,[[],["result",4]]],[11,"into","","",396,[[]]],[11,"try_into","","",396,[[],["result",4]]],[11,"type_id","","",396,[[],["typeid",3]]],[11,"from","","",383,[[]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"into","","",383,[[]]],[11,"try_into","","",383,[[],["result",4]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"from","","",384,[[]]],[11,"borrow","","",384,[[]]],[11,"borrow_mut","","",384,[[]]],[11,"try_from","","",384,[[],["result",4]]],[11,"into","","",384,[[]]],[11,"try_into","","",384,[[],["result",4]]],[11,"type_id","","",384,[[],["typeid",3]]],[11,"from","","",385,[[]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"into","","",385,[[]]],[11,"try_into","","",385,[[],["result",4]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"from","atsamd51g::dac::data","",399,[[]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"into","","",399,[[]]],[11,"try_into","","",399,[[],["result",4]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"from","atsamd51g::dac::databuf","",401,[[]]],[11,"borrow","","",401,[[]]],[11,"borrow_mut","","",401,[[]]],[11,"try_from","","",401,[[],["result",4]]],[11,"into","","",401,[[]]],[11,"try_into","","",401,[[],["result",4]]],[11,"type_id","","",401,[[],["typeid",3]]],[11,"from","atsamd51g::dac::dbgctrl","",403,[[]]],[11,"borrow","","",403,[[]]],[11,"borrow_mut","","",403,[[]]],[11,"try_from","","",403,[[],["result",4]]],[11,"into","","",403,[[]]],[11,"try_into","","",403,[[],["result",4]]],[11,"type_id","","",403,[[],["typeid",3]]],[11,"from","atsamd51g::dmac","",407,[[]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"into","","",407,[[]]],[11,"try_into","","",407,[[],["result",4]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"from","","",408,[[]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"into","","",408,[[]]],[11,"try_into","","",408,[[],["result",4]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chctrla","",413,[[]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"into","","",413,[[]]],[11,"try_into","","",413,[[],["result",4]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"from","","",414,[[]]],[11,"borrow","","",414,[[]]],[11,"borrow_mut","","",414,[[]]],[11,"try_from","","",414,[[],["result",4]]],[11,"into","","",414,[[]]],[11,"try_into","","",414,[[],["result",4]]],[11,"type_id","","",414,[[],["typeid",3]]],[11,"from","","",415,[[]]],[11,"borrow","","",415,[[]]],[11,"borrow_mut","","",415,[[]]],[11,"try_from","","",415,[[],["result",4]]],[11,"into","","",415,[[]]],[11,"try_into","","",415,[[],["result",4]]],[11,"type_id","","",415,[[],["typeid",3]]],[11,"from","","",417,[[]]],[11,"borrow","","",417,[[]]],[11,"borrow_mut","","",417,[[]]],[11,"try_from","","",417,[[],["result",4]]],[11,"into","","",417,[[]]],[11,"try_into","","",417,[[],["result",4]]],[11,"type_id","","",417,[[],["typeid",3]]],[11,"from","","",419,[[]]],[11,"borrow","","",419,[[]]],[11,"borrow_mut","","",419,[[]]],[11,"try_from","","",419,[[],["result",4]]],[11,"into","","",419,[[]]],[11,"try_into","","",419,[[],["result",4]]],[11,"type_id","","",419,[[],["typeid",3]]],[11,"from","","",421,[[]]],[11,"borrow","","",421,[[]]],[11,"borrow_mut","","",421,[[]]],[11,"try_from","","",421,[[],["result",4]]],[11,"into","","",421,[[]]],[11,"try_into","","",421,[[],["result",4]]],[11,"type_id","","",421,[[],["typeid",3]]],[11,"from","","",423,[[]]],[11,"borrow","","",423,[[]]],[11,"borrow_mut","","",423,[[]]],[11,"try_from","","",423,[[],["result",4]]],[11,"into","","",423,[[]]],[11,"try_into","","",423,[[],["result",4]]],[11,"type_id","","",423,[[],["typeid",3]]],[11,"from","","",409,[[]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"into","","",409,[[]]],[11,"try_into","","",409,[[],["result",4]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"from","","",410,[[]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"into","","",410,[[]]],[11,"try_into","","",410,[[],["result",4]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"from","","",411,[[]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"into","","",411,[[]]],[11,"try_into","","",411,[[],["result",4]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"from","","",412,[[]]],[11,"borrow","","",412,[[]]],[11,"borrow_mut","","",412,[[]]],[11,"try_from","","",412,[[],["result",4]]],[11,"into","","",412,[[]]],[11,"try_into","","",412,[[],["result",4]]],[11,"type_id","","",412,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chctrlb","",428,[[]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"into","","",428,[[]]],[11,"try_into","","",428,[[],["result",4]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"from","","",426,[[]]],[11,"borrow","","",426,[[]]],[11,"borrow_mut","","",426,[[]]],[11,"try_from","","",426,[[],["result",4]]],[11,"into","","",426,[[]]],[11,"try_into","","",426,[[],["result",4]]],[11,"type_id","","",426,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chprilvl","",433,[[]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"into","","",433,[[]]],[11,"try_into","","",433,[[],["result",4]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"from","","",431,[[]]],[11,"borrow","","",431,[[]]],[11,"borrow_mut","","",431,[[]]],[11,"try_from","","",431,[[],["result",4]]],[11,"into","","",431,[[]]],[11,"try_into","","",431,[[],["result",4]]],[11,"type_id","","",431,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chevctrl","",439,[[]]],[11,"borrow","","",439,[[]]],[11,"borrow_mut","","",439,[[]]],[11,"try_from","","",439,[[],["result",4]]],[11,"into","","",439,[[]]],[11,"try_into","","",439,[[],["result",4]]],[11,"type_id","","",439,[[],["typeid",3]]],[11,"from","","",441,[[]]],[11,"borrow","","",441,[[]]],[11,"borrow_mut","","",441,[[]]],[11,"try_from","","",441,[[],["result",4]]],[11,"into","","",441,[[]]],[11,"try_into","","",441,[[],["result",4]]],[11,"type_id","","",441,[[],["typeid",3]]],[11,"from","","",442,[[]]],[11,"borrow","","",442,[[]]],[11,"borrow_mut","","",442,[[]]],[11,"try_from","","",442,[[],["result",4]]],[11,"into","","",442,[[]]],[11,"try_into","","",442,[[],["result",4]]],[11,"type_id","","",442,[[],["typeid",3]]],[11,"from","","",443,[[]]],[11,"borrow","","",443,[[]]],[11,"borrow_mut","","",443,[[]]],[11,"try_from","","",443,[[],["result",4]]],[11,"into","","",443,[[]]],[11,"try_into","","",443,[[],["result",4]]],[11,"type_id","","",443,[[],["typeid",3]]],[11,"from","","",436,[[]]],[11,"borrow","","",436,[[]]],[11,"borrow_mut","","",436,[[]]],[11,"try_from","","",436,[[],["result",4]]],[11,"into","","",436,[[]]],[11,"try_into","","",436,[[],["result",4]]],[11,"type_id","","",436,[[],["typeid",3]]],[11,"from","","",437,[[]]],[11,"borrow","","",437,[[]]],[11,"borrow_mut","","",437,[[]]],[11,"try_from","","",437,[[],["result",4]]],[11,"into","","",437,[[]]],[11,"try_into","","",437,[[],["result",4]]],[11,"type_id","","",437,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chintenclr","",446,[[]]],[11,"borrow","","",446,[[]]],[11,"borrow_mut","","",446,[[]]],[11,"try_from","","",446,[[],["result",4]]],[11,"into","","",446,[[]]],[11,"try_into","","",446,[[],["result",4]]],[11,"type_id","","",446,[[],["typeid",3]]],[11,"from","","",447,[[]]],[11,"borrow","","",447,[[]]],[11,"borrow_mut","","",447,[[]]],[11,"try_from","","",447,[[],["result",4]]],[11,"into","","",447,[[]]],[11,"try_into","","",447,[[],["result",4]]],[11,"type_id","","",447,[[],["typeid",3]]],[11,"from","","",448,[[]]],[11,"borrow","","",448,[[]]],[11,"borrow_mut","","",448,[[]]],[11,"try_from","","",448,[[],["result",4]]],[11,"into","","",448,[[]]],[11,"try_into","","",448,[[],["result",4]]],[11,"type_id","","",448,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chintenset","",451,[[]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"into","","",451,[[]]],[11,"try_into","","",451,[[],["result",4]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"from","","",452,[[]]],[11,"borrow","","",452,[[]]],[11,"borrow_mut","","",452,[[]]],[11,"try_from","","",452,[[],["result",4]]],[11,"into","","",452,[[]]],[11,"try_into","","",452,[[],["result",4]]],[11,"type_id","","",452,[[],["typeid",3]]],[11,"from","","",453,[[]]],[11,"borrow","","",453,[[]]],[11,"borrow_mut","","",453,[[]]],[11,"try_from","","",453,[[],["result",4]]],[11,"into","","",453,[[]]],[11,"try_into","","",453,[[],["result",4]]],[11,"type_id","","",453,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chintflag","",456,[[]]],[11,"borrow","","",456,[[]]],[11,"borrow_mut","","",456,[[]]],[11,"try_from","","",456,[[],["result",4]]],[11,"into","","",456,[[]]],[11,"try_into","","",456,[[],["result",4]]],[11,"type_id","","",456,[[],["typeid",3]]],[11,"from","","",457,[[]]],[11,"borrow","","",457,[[]]],[11,"borrow_mut","","",457,[[]]],[11,"try_from","","",457,[[],["result",4]]],[11,"into","","",457,[[]]],[11,"try_into","","",457,[[],["result",4]]],[11,"type_id","","",457,[[],["typeid",3]]],[11,"from","","",458,[[]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"into","","",458,[[]]],[11,"try_into","","",458,[[],["result",4]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::channel::chstatus","",461,[[]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"into","","",461,[[]]],[11,"try_into","","",461,[[],["result",4]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"from","","",462,[[]]],[11,"borrow","","",462,[[]]],[11,"borrow_mut","","",462,[[]]],[11,"try_from","","",462,[[],["result",4]]],[11,"into","","",462,[[]]],[11,"try_into","","",462,[[],["result",4]]],[11,"type_id","","",462,[[],["typeid",3]]],[11,"from","","",463,[[]]],[11,"borrow","","",463,[[]]],[11,"borrow_mut","","",463,[[]]],[11,"try_from","","",463,[[],["result",4]]],[11,"into","","",463,[[]]],[11,"try_into","","",463,[[],["result",4]]],[11,"type_id","","",463,[[],["typeid",3]]],[11,"from","","",464,[[]]],[11,"borrow","","",464,[[]]],[11,"borrow_mut","","",464,[[]]],[11,"try_from","","",464,[[],["result",4]]],[11,"into","","",464,[[]]],[11,"try_into","","",464,[[],["result",4]]],[11,"type_id","","",464,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::ctrl","",467,[[]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"into","","",467,[[]]],[11,"try_into","","",467,[[],["result",4]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"from","","",468,[[]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"into","","",468,[[]]],[11,"try_into","","",468,[[],["result",4]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"from","","",469,[[]]],[11,"borrow","","",469,[[]]],[11,"borrow_mut","","",469,[[]]],[11,"try_from","","",469,[[],["result",4]]],[11,"into","","",469,[[]]],[11,"try_into","","",469,[[],["result",4]]],[11,"type_id","","",469,[[],["typeid",3]]],[11,"from","","",470,[[]]],[11,"borrow","","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"into","","",470,[[]]],[11,"try_into","","",470,[[],["result",4]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"from","","",471,[[]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"into","","",471,[[]]],[11,"try_into","","",471,[[],["result",4]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"from","","",472,[[]]],[11,"borrow","","",472,[[]]],[11,"borrow_mut","","",472,[[]]],[11,"try_from","","",472,[[],["result",4]]],[11,"into","","",472,[[]]],[11,"try_into","","",472,[[],["result",4]]],[11,"type_id","","",472,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::crcctrl","",480,[[]]],[11,"borrow","","",480,[[]]],[11,"borrow_mut","","",480,[[]]],[11,"try_from","","",480,[[],["result",4]]],[11,"into","","",480,[[]]],[11,"try_into","","",480,[[],["result",4]]],[11,"type_id","","",480,[[],["typeid",3]]],[11,"from","","",482,[[]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"into","","",482,[[]]],[11,"try_into","","",482,[[],["result",4]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"from","","",484,[[]]],[11,"borrow","","",484,[[]]],[11,"borrow_mut","","",484,[[]]],[11,"try_from","","",484,[[],["result",4]]],[11,"into","","",484,[[]]],[11,"try_into","","",484,[[],["result",4]]],[11,"type_id","","",484,[[],["typeid",3]]],[11,"from","","",486,[[]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"into","","",486,[[]]],[11,"try_into","","",486,[[],["result",4]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"from","","",475,[[]]],[11,"borrow","","",475,[[]]],[11,"borrow_mut","","",475,[[]]],[11,"try_from","","",475,[[],["result",4]]],[11,"into","","",475,[[]]],[11,"try_into","","",475,[[],["result",4]]],[11,"type_id","","",475,[[],["typeid",3]]],[11,"from","","",476,[[]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"into","","",476,[[]]],[11,"try_into","","",476,[[],["result",4]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"from","","",477,[[]]],[11,"borrow","","",477,[[]]],[11,"borrow_mut","","",477,[[]]],[11,"try_from","","",477,[[],["result",4]]],[11,"into","","",477,[[]]],[11,"try_into","","",477,[[],["result",4]]],[11,"type_id","","",477,[[],["typeid",3]]],[11,"from","","",478,[[]]],[11,"borrow","","",478,[[]]],[11,"borrow_mut","","",478,[[]]],[11,"try_from","","",478,[[],["result",4]]],[11,"into","","",478,[[]]],[11,"try_into","","",478,[[],["result",4]]],[11,"type_id","","",478,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::crcdatain","",489,[[]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"into","","",489,[[]]],[11,"try_into","","",489,[[],["result",4]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::crcchksum","",492,[[]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"into","","",492,[[]]],[11,"try_into","","",492,[[],["result",4]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::crcstatus","",495,[[]]],[11,"borrow","","",495,[[]]],[11,"borrow_mut","","",495,[[]]],[11,"try_from","","",495,[[],["result",4]]],[11,"into","","",495,[[]]],[11,"try_into","","",495,[[],["result",4]]],[11,"type_id","","",495,[[],["typeid",3]]],[11,"from","","",496,[[]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"into","","",496,[[]]],[11,"try_into","","",496,[[],["result",4]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"from","","",497,[[]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"into","","",497,[[]]],[11,"try_into","","",497,[[],["result",4]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::dbgctrl","",500,[[]]],[11,"borrow","","",500,[[]]],[11,"borrow_mut","","",500,[[]]],[11,"try_from","","",500,[[],["result",4]]],[11,"into","","",500,[[]]],[11,"try_into","","",500,[[],["result",4]]],[11,"type_id","","",500,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::swtrigctrl","",503,[[]]],[11,"borrow","","",503,[[]]],[11,"borrow_mut","","",503,[[]]],[11,"try_from","","",503,[[],["result",4]]],[11,"into","","",503,[[]]],[11,"try_into","","",503,[[],["result",4]]],[11,"type_id","","",503,[[],["typeid",3]]],[11,"from","","",504,[[]]],[11,"borrow","","",504,[[]]],[11,"borrow_mut","","",504,[[]]],[11,"try_from","","",504,[[],["result",4]]],[11,"into","","",504,[[]]],[11,"try_into","","",504,[[],["result",4]]],[11,"type_id","","",504,[[],["typeid",3]]],[11,"from","","",505,[[]]],[11,"borrow","","",505,[[]]],[11,"borrow_mut","","",505,[[]]],[11,"try_from","","",505,[[],["result",4]]],[11,"into","","",505,[[]]],[11,"try_into","","",505,[[],["result",4]]],[11,"type_id","","",505,[[],["typeid",3]]],[11,"from","","",506,[[]]],[11,"borrow","","",506,[[]]],[11,"borrow_mut","","",506,[[]]],[11,"try_from","","",506,[[],["result",4]]],[11,"into","","",506,[[]]],[11,"try_into","","",506,[[],["result",4]]],[11,"type_id","","",506,[[],["typeid",3]]],[11,"from","","",507,[[]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"into","","",507,[[]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"from","","",508,[[]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"into","","",508,[[]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"from","","",509,[[]]],[11,"borrow","","",509,[[]]],[11,"borrow_mut","","",509,[[]]],[11,"try_from","","",509,[[],["result",4]]],[11,"into","","",509,[[]]],[11,"try_into","","",509,[[],["result",4]]],[11,"type_id","","",509,[[],["typeid",3]]],[11,"from","","",510,[[]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"into","","",510,[[]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"from","","",511,[[]]],[11,"borrow","","",511,[[]]],[11,"borrow_mut","","",511,[[]]],[11,"try_from","","",511,[[],["result",4]]],[11,"into","","",511,[[]]],[11,"try_into","","",511,[[],["result",4]]],[11,"type_id","","",511,[[],["typeid",3]]],[11,"from","","",512,[[]]],[11,"borrow","","",512,[[]]],[11,"borrow_mut","","",512,[[]]],[11,"try_from","","",512,[[],["result",4]]],[11,"into","","",512,[[]]],[11,"try_into","","",512,[[],["result",4]]],[11,"type_id","","",512,[[],["typeid",3]]],[11,"from","","",513,[[]]],[11,"borrow","","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"into","","",513,[[]]],[11,"try_into","","",513,[[],["result",4]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"from","","",514,[[]]],[11,"borrow","","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"into","","",514,[[]]],[11,"try_into","","",514,[[],["result",4]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"from","","",515,[[]]],[11,"borrow","","",515,[[]]],[11,"borrow_mut","","",515,[[]]],[11,"try_from","","",515,[[],["result",4]]],[11,"into","","",515,[[]]],[11,"try_into","","",515,[[],["result",4]]],[11,"type_id","","",515,[[],["typeid",3]]],[11,"from","","",516,[[]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"into","","",516,[[]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"from","","",517,[[]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"into","","",517,[[]]],[11,"try_into","","",517,[[],["result",4]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"from","","",518,[[]]],[11,"borrow","","",518,[[]]],[11,"borrow_mut","","",518,[[]]],[11,"try_from","","",518,[[],["result",4]]],[11,"into","","",518,[[]]],[11,"try_into","","",518,[[],["result",4]]],[11,"type_id","","",518,[[],["typeid",3]]],[11,"from","","",519,[[]]],[11,"borrow","","",519,[[]]],[11,"borrow_mut","","",519,[[]]],[11,"try_from","","",519,[[],["result",4]]],[11,"into","","",519,[[]]],[11,"try_into","","",519,[[],["result",4]]],[11,"type_id","","",519,[[],["typeid",3]]],[11,"from","","",520,[[]]],[11,"borrow","","",520,[[]]],[11,"borrow_mut","","",520,[[]]],[11,"try_from","","",520,[[],["result",4]]],[11,"into","","",520,[[]]],[11,"try_into","","",520,[[],["result",4]]],[11,"type_id","","",520,[[],["typeid",3]]],[11,"from","","",521,[[]]],[11,"borrow","","",521,[[]]],[11,"borrow_mut","","",521,[[]]],[11,"try_from","","",521,[[],["result",4]]],[11,"into","","",521,[[]]],[11,"try_into","","",521,[[],["result",4]]],[11,"type_id","","",521,[[],["typeid",3]]],[11,"from","","",522,[[]]],[11,"borrow","","",522,[[]]],[11,"borrow_mut","","",522,[[]]],[11,"try_from","","",522,[[],["result",4]]],[11,"into","","",522,[[]]],[11,"try_into","","",522,[[],["result",4]]],[11,"type_id","","",522,[[],["typeid",3]]],[11,"from","","",523,[[]]],[11,"borrow","","",523,[[]]],[11,"borrow_mut","","",523,[[]]],[11,"try_from","","",523,[[],["result",4]]],[11,"into","","",523,[[]]],[11,"try_into","","",523,[[],["result",4]]],[11,"type_id","","",523,[[],["typeid",3]]],[11,"from","","",524,[[]]],[11,"borrow","","",524,[[]]],[11,"borrow_mut","","",524,[[]]],[11,"try_from","","",524,[[],["result",4]]],[11,"into","","",524,[[]]],[11,"try_into","","",524,[[],["result",4]]],[11,"type_id","","",524,[[],["typeid",3]]],[11,"from","","",525,[[]]],[11,"borrow","","",525,[[]]],[11,"borrow_mut","","",525,[[]]],[11,"try_from","","",525,[[],["result",4]]],[11,"into","","",525,[[]]],[11,"try_into","","",525,[[],["result",4]]],[11,"type_id","","",525,[[],["typeid",3]]],[11,"from","","",526,[[]]],[11,"borrow","","",526,[[]]],[11,"borrow_mut","","",526,[[]]],[11,"try_from","","",526,[[],["result",4]]],[11,"into","","",526,[[]]],[11,"try_into","","",526,[[],["result",4]]],[11,"type_id","","",526,[[],["typeid",3]]],[11,"from","","",527,[[]]],[11,"borrow","","",527,[[]]],[11,"borrow_mut","","",527,[[]]],[11,"try_from","","",527,[[],["result",4]]],[11,"into","","",527,[[]]],[11,"try_into","","",527,[[],["result",4]]],[11,"type_id","","",527,[[],["typeid",3]]],[11,"from","","",528,[[]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"into","","",528,[[]]],[11,"try_into","","",528,[[],["result",4]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"from","","",529,[[]]],[11,"borrow","","",529,[[]]],[11,"borrow_mut","","",529,[[]]],[11,"try_from","","",529,[[],["result",4]]],[11,"into","","",529,[[]]],[11,"try_into","","",529,[[],["result",4]]],[11,"type_id","","",529,[[],["typeid",3]]],[11,"from","","",530,[[]]],[11,"borrow","","",530,[[]]],[11,"borrow_mut","","",530,[[]]],[11,"try_from","","",530,[[],["result",4]]],[11,"into","","",530,[[]]],[11,"try_into","","",530,[[],["result",4]]],[11,"type_id","","",530,[[],["typeid",3]]],[11,"from","","",531,[[]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"into","","",531,[[]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"from","","",532,[[]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"into","","",532,[[]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"from","","",533,[[]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"into","","",533,[[]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"from","","",534,[[]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"into","","",534,[[]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::prictrl0","",541,[[]]],[11,"borrow","","",541,[[]]],[11,"borrow_mut","","",541,[[]]],[11,"try_from","","",541,[[],["result",4]]],[11,"into","","",541,[[]]],[11,"try_into","","",541,[[],["result",4]]],[11,"type_id","","",541,[[],["typeid",3]]],[11,"from","","",543,[[]]],[11,"borrow","","",543,[[]]],[11,"borrow_mut","","",543,[[]]],[11,"try_from","","",543,[[],["result",4]]],[11,"into","","",543,[[]]],[11,"try_into","","",543,[[],["result",4]]],[11,"type_id","","",543,[[],["typeid",3]]],[11,"from","","",544,[[]]],[11,"borrow","","",544,[[]]],[11,"borrow_mut","","",544,[[]]],[11,"try_from","","",544,[[],["result",4]]],[11,"into","","",544,[[]]],[11,"try_into","","",544,[[],["result",4]]],[11,"type_id","","",544,[[],["typeid",3]]],[11,"from","","",545,[[]]],[11,"borrow","","",545,[[]]],[11,"borrow_mut","","",545,[[]]],[11,"try_from","","",545,[[],["result",4]]],[11,"into","","",545,[[]]],[11,"try_into","","",545,[[],["result",4]]],[11,"type_id","","",545,[[],["typeid",3]]],[11,"from","","",547,[[]]],[11,"borrow","","",547,[[]]],[11,"borrow_mut","","",547,[[]]],[11,"try_from","","",547,[[],["result",4]]],[11,"into","","",547,[[]]],[11,"try_into","","",547,[[],["result",4]]],[11,"type_id","","",547,[[],["typeid",3]]],[11,"from","","",548,[[]]],[11,"borrow","","",548,[[]]],[11,"borrow_mut","","",548,[[]]],[11,"try_from","","",548,[[],["result",4]]],[11,"into","","",548,[[]]],[11,"try_into","","",548,[[],["result",4]]],[11,"type_id","","",548,[[],["typeid",3]]],[11,"from","","",549,[[]]],[11,"borrow","","",549,[[]]],[11,"borrow_mut","","",549,[[]]],[11,"try_from","","",549,[[],["result",4]]],[11,"into","","",549,[[]]],[11,"try_into","","",549,[[],["result",4]]],[11,"type_id","","",549,[[],["typeid",3]]],[11,"from","","",551,[[]]],[11,"borrow","","",551,[[]]],[11,"borrow_mut","","",551,[[]]],[11,"try_from","","",551,[[],["result",4]]],[11,"into","","",551,[[]]],[11,"try_into","","",551,[[],["result",4]]],[11,"type_id","","",551,[[],["typeid",3]]],[11,"from","","",552,[[]]],[11,"borrow","","",552,[[]]],[11,"borrow_mut","","",552,[[]]],[11,"try_from","","",552,[[],["result",4]]],[11,"into","","",552,[[]]],[11,"try_into","","",552,[[],["result",4]]],[11,"type_id","","",552,[[],["typeid",3]]],[11,"from","","",553,[[]]],[11,"borrow","","",553,[[]]],[11,"borrow_mut","","",553,[[]]],[11,"try_from","","",553,[[],["result",4]]],[11,"into","","",553,[[]]],[11,"try_into","","",553,[[],["result",4]]],[11,"type_id","","",553,[[],["typeid",3]]],[11,"from","","",555,[[]]],[11,"borrow","","",555,[[]]],[11,"borrow_mut","","",555,[[]]],[11,"try_from","","",555,[[],["result",4]]],[11,"into","","",555,[[]]],[11,"try_into","","",555,[[],["result",4]]],[11,"type_id","","",555,[[],["typeid",3]]],[11,"from","","",556,[[]]],[11,"borrow","","",556,[[]]],[11,"borrow_mut","","",556,[[]]],[11,"try_from","","",556,[[],["result",4]]],[11,"into","","",556,[[]]],[11,"try_into","","",556,[[],["result",4]]],[11,"type_id","","",556,[[],["typeid",3]]],[11,"from","","",537,[[]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"into","","",537,[[]]],[11,"try_into","","",537,[[],["result",4]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"from","","",538,[[]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"into","","",538,[[]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"from","","",539,[[]]],[11,"borrow","","",539,[[]]],[11,"borrow_mut","","",539,[[]]],[11,"try_from","","",539,[[],["result",4]]],[11,"into","","",539,[[]]],[11,"try_into","","",539,[[],["result",4]]],[11,"type_id","","",539,[[],["typeid",3]]],[11,"from","","",540,[[]]],[11,"borrow","","",540,[[]]],[11,"borrow_mut","","",540,[[]]],[11,"try_from","","",540,[[],["result",4]]],[11,"into","","",540,[[]]],[11,"try_into","","",540,[[],["result",4]]],[11,"type_id","","",540,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::intpend","",559,[[]]],[11,"borrow","","",559,[[]]],[11,"borrow_mut","","",559,[[]]],[11,"try_from","","",559,[[],["result",4]]],[11,"into","","",559,[[]]],[11,"try_into","","",559,[[],["result",4]]],[11,"type_id","","",559,[[],["typeid",3]]],[11,"from","","",560,[[]]],[11,"borrow","","",560,[[]]],[11,"borrow_mut","","",560,[[]]],[11,"try_from","","",560,[[],["result",4]]],[11,"into","","",560,[[]]],[11,"try_into","","",560,[[],["result",4]]],[11,"type_id","","",560,[[],["typeid",3]]],[11,"from","","",561,[[]]],[11,"borrow","","",561,[[]]],[11,"borrow_mut","","",561,[[]]],[11,"try_from","","",561,[[],["result",4]]],[11,"into","","",561,[[]]],[11,"try_into","","",561,[[],["result",4]]],[11,"type_id","","",561,[[],["typeid",3]]],[11,"from","","",562,[[]]],[11,"borrow","","",562,[[]]],[11,"borrow_mut","","",562,[[]]],[11,"try_from","","",562,[[],["result",4]]],[11,"into","","",562,[[]]],[11,"try_into","","",562,[[],["result",4]]],[11,"type_id","","",562,[[],["typeid",3]]],[11,"from","","",563,[[]]],[11,"borrow","","",563,[[]]],[11,"borrow_mut","","",563,[[]]],[11,"try_from","","",563,[[],["result",4]]],[11,"into","","",563,[[]]],[11,"try_into","","",563,[[],["result",4]]],[11,"type_id","","",563,[[],["typeid",3]]],[11,"from","","",564,[[]]],[11,"borrow","","",564,[[]]],[11,"borrow_mut","","",564,[[]]],[11,"try_from","","",564,[[],["result",4]]],[11,"into","","",564,[[]]],[11,"try_into","","",564,[[],["result",4]]],[11,"type_id","","",564,[[],["typeid",3]]],[11,"from","","",565,[[]]],[11,"borrow","","",565,[[]]],[11,"borrow_mut","","",565,[[]]],[11,"try_from","","",565,[[],["result",4]]],[11,"into","","",565,[[]]],[11,"try_into","","",565,[[],["result",4]]],[11,"type_id","","",565,[[],["typeid",3]]],[11,"from","","",566,[[]]],[11,"borrow","","",566,[[]]],[11,"borrow_mut","","",566,[[]]],[11,"try_from","","",566,[[],["result",4]]],[11,"into","","",566,[[]]],[11,"try_into","","",566,[[],["result",4]]],[11,"type_id","","",566,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::baseaddr","",573,[[]]],[11,"borrow","","",573,[[]]],[11,"borrow_mut","","",573,[[]]],[11,"try_from","","",573,[[],["result",4]]],[11,"into","","",573,[[]]],[11,"try_into","","",573,[[],["result",4]]],[11,"type_id","","",573,[[],["typeid",3]]],[11,"from","atsamd51g::dmac::wrbaddr","",576,[[]]],[11,"borrow","","",576,[[]]],[11,"borrow_mut","","",576,[[]]],[11,"try_from","","",576,[[],["result",4]]],[11,"into","","",576,[[]]],[11,"try_into","","",576,[[],["result",4]]],[11,"type_id","","",576,[[],["typeid",3]]],[11,"from","atsamd51g::dsu","",579,[[]]],[11,"borrow","","",579,[[]]],[11,"borrow_mut","","",579,[[]]],[11,"try_from","","",579,[[],["result",4]]],[11,"into","","",579,[[]]],[11,"try_into","","",579,[[],["result",4]]],[11,"type_id","","",579,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::ctrl","",580,[[]]],[11,"borrow","","",580,[[]]],[11,"borrow_mut","","",580,[[]]],[11,"try_from","","",580,[[],["result",4]]],[11,"into","","",580,[[]]],[11,"try_into","","",580,[[],["result",4]]],[11,"type_id","","",580,[[],["typeid",3]]],[11,"from","","",581,[[]]],[11,"borrow","","",581,[[]]],[11,"borrow_mut","","",581,[[]]],[11,"try_from","","",581,[[],["result",4]]],[11,"into","","",581,[[]]],[11,"try_into","","",581,[[],["result",4]]],[11,"type_id","","",581,[[],["typeid",3]]],[11,"from","","",582,[[]]],[11,"borrow","","",582,[[]]],[11,"borrow_mut","","",582,[[]]],[11,"try_from","","",582,[[],["result",4]]],[11,"into","","",582,[[]]],[11,"try_into","","",582,[[],["result",4]]],[11,"type_id","","",582,[[],["typeid",3]]],[11,"from","","",583,[[]]],[11,"borrow","","",583,[[]]],[11,"borrow_mut","","",583,[[]]],[11,"try_from","","",583,[[],["result",4]]],[11,"into","","",583,[[]]],[11,"try_into","","",583,[[],["result",4]]],[11,"type_id","","",583,[[],["typeid",3]]],[11,"from","","",584,[[]]],[11,"borrow","","",584,[[]]],[11,"borrow_mut","","",584,[[]]],[11,"try_from","","",584,[[],["result",4]]],[11,"into","","",584,[[]]],[11,"try_into","","",584,[[],["result",4]]],[11,"type_id","","",584,[[],["typeid",3]]],[11,"from","","",585,[[]]],[11,"borrow","","",585,[[]]],[11,"borrow_mut","","",585,[[]]],[11,"try_from","","",585,[[],["result",4]]],[11,"into","","",585,[[]]],[11,"try_into","","",585,[[],["result",4]]],[11,"type_id","","",585,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::statusa","",587,[[]]],[11,"borrow","","",587,[[]]],[11,"borrow_mut","","",587,[[]]],[11,"try_from","","",587,[[],["result",4]]],[11,"into","","",587,[[]]],[11,"try_into","","",587,[[],["result",4]]],[11,"type_id","","",587,[[],["typeid",3]]],[11,"from","","",588,[[]]],[11,"borrow","","",588,[[]]],[11,"borrow_mut","","",588,[[]]],[11,"try_from","","",588,[[],["result",4]]],[11,"into","","",588,[[]]],[11,"try_into","","",588,[[],["result",4]]],[11,"type_id","","",588,[[],["typeid",3]]],[11,"from","","",589,[[]]],[11,"borrow","","",589,[[]]],[11,"borrow_mut","","",589,[[]]],[11,"try_from","","",589,[[],["result",4]]],[11,"into","","",589,[[]]],[11,"try_into","","",589,[[],["result",4]]],[11,"type_id","","",589,[[],["typeid",3]]],[11,"from","","",590,[[]]],[11,"borrow","","",590,[[]]],[11,"borrow_mut","","",590,[[]]],[11,"try_from","","",590,[[],["result",4]]],[11,"into","","",590,[[]]],[11,"try_into","","",590,[[],["result",4]]],[11,"type_id","","",590,[[],["typeid",3]]],[11,"from","","",591,[[]]],[11,"borrow","","",591,[[]]],[11,"borrow_mut","","",591,[[]]],[11,"try_from","","",591,[[],["result",4]]],[11,"into","","",591,[[]]],[11,"try_into","","",591,[[],["result",4]]],[11,"type_id","","",591,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::addr","",595,[[]]],[11,"borrow","","",595,[[]]],[11,"borrow_mut","","",595,[[]]],[11,"try_from","","",595,[[],["result",4]]],[11,"into","","",595,[[]]],[11,"try_into","","",595,[[],["result",4]]],[11,"type_id","","",595,[[],["typeid",3]]],[11,"from","","",596,[[]]],[11,"borrow","","",596,[[]]],[11,"borrow_mut","","",596,[[]]],[11,"try_from","","",596,[[],["result",4]]],[11,"into","","",596,[[]]],[11,"try_into","","",596,[[],["result",4]]],[11,"type_id","","",596,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::length","",599,[[]]],[11,"borrow","","",599,[[]]],[11,"borrow_mut","","",599,[[]]],[11,"try_from","","",599,[[],["result",4]]],[11,"into","","",599,[[]]],[11,"try_into","","",599,[[],["result",4]]],[11,"type_id","","",599,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::data","",602,[[]]],[11,"borrow","","",602,[[]]],[11,"borrow_mut","","",602,[[]]],[11,"try_from","","",602,[[],["result",4]]],[11,"into","","",602,[[]]],[11,"try_into","","",602,[[],["result",4]]],[11,"type_id","","",602,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::dcc","",605,[[]]],[11,"borrow","","",605,[[]]],[11,"borrow_mut","","",605,[[]]],[11,"try_from","","",605,[[],["result",4]]],[11,"into","","",605,[[]]],[11,"try_into","","",605,[[],["result",4]]],[11,"type_id","","",605,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::did","",608,[[]]],[11,"borrow","","",608,[[]]],[11,"borrow_mut","","",608,[[]]],[11,"try_from","","",608,[[],["result",4]]],[11,"into","","",608,[[]]],[11,"try_into","","",608,[[],["result",4]]],[11,"type_id","","",608,[[],["typeid",3]]],[11,"from","","",609,[[]]],[11,"borrow","","",609,[[]]],[11,"borrow_mut","","",609,[[]]],[11,"try_from","","",609,[[],["result",4]]],[11,"into","","",609,[[]]],[11,"try_into","","",609,[[],["result",4]]],[11,"type_id","","",609,[[],["typeid",3]]],[11,"from","","",610,[[]]],[11,"borrow","","",610,[[]]],[11,"borrow_mut","","",610,[[]]],[11,"try_from","","",610,[[],["result",4]]],[11,"into","","",610,[[]]],[11,"try_into","","",610,[[],["result",4]]],[11,"type_id","","",610,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::cfg","",616,[[]]],[11,"borrow","","",616,[[]]],[11,"borrow_mut","","",616,[[]]],[11,"try_from","","",616,[[],["result",4]]],[11,"into","","",616,[[]]],[11,"try_into","","",616,[[],["result",4]]],[11,"type_id","","",616,[[],["typeid",3]]],[11,"from","","",618,[[]]],[11,"borrow","","",618,[[]]],[11,"borrow_mut","","",618,[[]]],[11,"try_from","","",618,[[],["result",4]]],[11,"into","","",618,[[]]],[11,"try_into","","",618,[[],["result",4]]],[11,"type_id","","",618,[[],["typeid",3]]],[11,"from","","",619,[[]]],[11,"borrow","","",619,[[]]],[11,"borrow_mut","","",619,[[]]],[11,"try_from","","",619,[[],["result",4]]],[11,"into","","",619,[[]]],[11,"try_into","","",619,[[],["result",4]]],[11,"type_id","","",619,[[],["typeid",3]]],[11,"from","","",615,[[]]],[11,"borrow","","",615,[[]]],[11,"borrow_mut","","",615,[[]]],[11,"try_from","","",615,[[],["result",4]]],[11,"into","","",615,[[]]],[11,"try_into","","",615,[[],["result",4]]],[11,"type_id","","",615,[[],["typeid",3]]],[11,"from","atsamd51g::dsu::dcfg","",622,[[]]],[11,"borrow","","",622,[[]]],[11,"borrow_mut","","",622,[[]]],[11,"try_from","","",622,[[],["result",4]]],[11,"into","","",622,[[]]],[11,"try_into","","",622,[[],["result",4]]],[11,"type_id","","",622,[[],["typeid",3]]],[11,"from","atsamd51g::eic","",637,[[]]],[11,"borrow","","",637,[[]]],[11,"borrow_mut","","",637,[[]]],[11,"try_from","","",637,[[],["result",4]]],[11,"into","","",637,[[]]],[11,"try_into","","",637,[[],["result",4]]],[11,"type_id","","",637,[[],["typeid",3]]],[11,"from","atsamd51g::eic::ctrla","",639,[[]]],[11,"borrow","","",639,[[]]],[11,"borrow_mut","","",639,[[]]],[11,"try_from","","",639,[[],["result",4]]],[11,"into","","",639,[[]]],[11,"try_into","","",639,[[],["result",4]]],[11,"type_id","","",639,[[],["typeid",3]]],[11,"from","","",640,[[]]],[11,"borrow","","",640,[[]]],[11,"borrow_mut","","",640,[[]]],[11,"try_from","","",640,[[],["result",4]]],[11,"into","","",640,[[]]],[11,"try_into","","",640,[[],["result",4]]],[11,"type_id","","",640,[[],["typeid",3]]],[11,"from","","",642,[[]]],[11,"borrow","","",642,[[]]],[11,"borrow_mut","","",642,[[]]],[11,"try_from","","",642,[[],["result",4]]],[11,"into","","",642,[[]]],[11,"try_into","","",642,[[],["result",4]]],[11,"type_id","","",642,[[],["typeid",3]]],[11,"from","","",638,[[]]],[11,"borrow","","",638,[[]]],[11,"borrow_mut","","",638,[[]]],[11,"try_from","","",638,[[],["result",4]]],[11,"into","","",638,[[]]],[11,"try_into","","",638,[[],["result",4]]],[11,"type_id","","",638,[[],["typeid",3]]],[11,"from","atsamd51g::eic::nmictrl","",648,[[]]],[11,"borrow","","",648,[[]]],[11,"borrow_mut","","",648,[[]]],[11,"try_from","","",648,[[],["result",4]]],[11,"into","","",648,[[]]],[11,"try_into","","",648,[[],["result",4]]],[11,"type_id","","",648,[[],["typeid",3]]],[11,"from","","",649,[[]]],[11,"borrow","","",649,[[]]],[11,"borrow_mut","","",649,[[]]],[11,"try_from","","",649,[[],["result",4]]],[11,"into","","",649,[[]]],[11,"try_into","","",649,[[],["result",4]]],[11,"type_id","","",649,[[],["typeid",3]]],[11,"from","","",651,[[]]],[11,"borrow","","",651,[[]]],[11,"borrow_mut","","",651,[[]]],[11,"try_from","","",651,[[],["result",4]]],[11,"into","","",651,[[]]],[11,"try_into","","",651,[[],["result",4]]],[11,"type_id","","",651,[[],["typeid",3]]],[11,"from","","",645,[[]]],[11,"borrow","","",645,[[]]],[11,"borrow_mut","","",645,[[]]],[11,"try_from","","",645,[[],["result",4]]],[11,"into","","",645,[[]]],[11,"try_into","","",645,[[],["result",4]]],[11,"type_id","","",645,[[],["typeid",3]]],[11,"from","","",646,[[]]],[11,"borrow","","",646,[[]]],[11,"borrow_mut","","",646,[[]]],[11,"try_from","","",646,[[],["result",4]]],[11,"into","","",646,[[]]],[11,"try_into","","",646,[[],["result",4]]],[11,"type_id","","",646,[[],["typeid",3]]],[11,"from","atsamd51g::eic::nmiflag","",654,[[]]],[11,"borrow","","",654,[[]]],[11,"borrow_mut","","",654,[[]]],[11,"try_from","","",654,[[],["result",4]]],[11,"into","","",654,[[]]],[11,"try_into","","",654,[[],["result",4]]],[11,"type_id","","",654,[[],["typeid",3]]],[11,"from","atsamd51g::eic::evctrl","",658,[[]]],[11,"borrow","","",658,[[]]],[11,"borrow_mut","","",658,[[]]],[11,"try_from","","",658,[[],["result",4]]],[11,"into","","",658,[[]]],[11,"try_into","","",658,[[],["result",4]]],[11,"type_id","","",658,[[],["typeid",3]]],[11,"from","atsamd51g::eic::intenclr","",661,[[]]],[11,"borrow","","",661,[[]]],[11,"borrow_mut","","",661,[[]]],[11,"try_from","","",661,[[],["result",4]]],[11,"into","","",661,[[]]],[11,"try_into","","",661,[[],["result",4]]],[11,"type_id","","",661,[[],["typeid",3]]],[11,"from","atsamd51g::eic::intenset","",664,[[]]],[11,"borrow","","",664,[[]]],[11,"borrow_mut","","",664,[[]]],[11,"try_from","","",664,[[],["result",4]]],[11,"into","","",664,[[]]],[11,"try_into","","",664,[[],["result",4]]],[11,"type_id","","",664,[[],["typeid",3]]],[11,"from","atsamd51g::eic::intflag","",667,[[]]],[11,"borrow","","",667,[[]]],[11,"borrow_mut","","",667,[[]]],[11,"try_from","","",667,[[],["result",4]]],[11,"into","","",667,[[]]],[11,"try_into","","",667,[[],["result",4]]],[11,"type_id","","",667,[[],["typeid",3]]],[11,"from","atsamd51g::eic::asynch","",672,[[]]],[11,"borrow","","",672,[[]]],[11,"borrow_mut","","",672,[[]]],[11,"try_from","","",672,[[],["result",4]]],[11,"into","","",672,[[]]],[11,"try_into","","",672,[[],["result",4]]],[11,"type_id","","",672,[[],["typeid",3]]],[11,"from","","",670,[[]]],[11,"borrow","","",670,[[]]],[11,"borrow_mut","","",670,[[]]],[11,"try_from","","",670,[[],["result",4]]],[11,"into","","",670,[[]]],[11,"try_into","","",670,[[],["result",4]]],[11,"type_id","","",670,[[],["typeid",3]]],[11,"from","atsamd51g::eic::config","",684,[[]]],[11,"borrow","","",684,[[]]],[11,"borrow_mut","","",684,[[]]],[11,"try_from","","",684,[[],["result",4]]],[11,"into","","",684,[[]]],[11,"try_into","","",684,[[],["result",4]]],[11,"type_id","","",684,[[],["typeid",3]]],[11,"from","","",685,[[]]],[11,"borrow","","",685,[[]]],[11,"borrow_mut","","",685,[[]]],[11,"try_from","","",685,[[],["result",4]]],[11,"into","","",685,[[]]],[11,"try_into","","",685,[[],["result",4]]],[11,"type_id","","",685,[[],["typeid",3]]],[11,"from","","",687,[[]]],[11,"borrow","","",687,[[]]],[11,"borrow_mut","","",687,[[]]],[11,"try_from","","",687,[[],["result",4]]],[11,"into","","",687,[[]]],[11,"try_into","","",687,[[],["result",4]]],[11,"type_id","","",687,[[],["typeid",3]]],[11,"from","","",688,[[]]],[11,"borrow","","",688,[[]]],[11,"borrow_mut","","",688,[[]]],[11,"try_from","","",688,[[],["result",4]]],[11,"into","","",688,[[]]],[11,"try_into","","",688,[[],["result",4]]],[11,"type_id","","",688,[[],["typeid",3]]],[11,"from","","",690,[[]]],[11,"borrow","","",690,[[]]],[11,"borrow_mut","","",690,[[]]],[11,"try_from","","",690,[[],["result",4]]],[11,"into","","",690,[[]]],[11,"try_into","","",690,[[],["result",4]]],[11,"type_id","","",690,[[],["typeid",3]]],[11,"from","","",691,[[]]],[11,"borrow","","",691,[[]]],[11,"borrow_mut","","",691,[[]]],[11,"try_from","","",691,[[],["result",4]]],[11,"into","","",691,[[]]],[11,"try_into","","",691,[[],["result",4]]],[11,"type_id","","",691,[[],["typeid",3]]],[11,"from","","",693,[[]]],[11,"borrow","","",693,[[]]],[11,"borrow_mut","","",693,[[]]],[11,"try_from","","",693,[[],["result",4]]],[11,"into","","",693,[[]]],[11,"try_into","","",693,[[],["result",4]]],[11,"type_id","","",693,[[],["typeid",3]]],[11,"from","","",694,[[]]],[11,"borrow","","",694,[[]]],[11,"borrow_mut","","",694,[[]]],[11,"try_from","","",694,[[],["result",4]]],[11,"into","","",694,[[]]],[11,"try_into","","",694,[[],["result",4]]],[11,"type_id","","",694,[[],["typeid",3]]],[11,"from","","",696,[[]]],[11,"borrow","","",696,[[]]],[11,"borrow_mut","","",696,[[]]],[11,"try_from","","",696,[[],["result",4]]],[11,"into","","",696,[[]]],[11,"try_into","","",696,[[],["result",4]]],[11,"type_id","","",696,[[],["typeid",3]]],[11,"from","","",697,[[]]],[11,"borrow","","",697,[[]]],[11,"borrow_mut","","",697,[[]]],[11,"try_from","","",697,[[],["result",4]]],[11,"into","","",697,[[]]],[11,"try_into","","",697,[[],["result",4]]],[11,"type_id","","",697,[[],["typeid",3]]],[11,"from","","",699,[[]]],[11,"borrow","","",699,[[]]],[11,"borrow_mut","","",699,[[]]],[11,"try_from","","",699,[[],["result",4]]],[11,"into","","",699,[[]]],[11,"try_into","","",699,[[],["result",4]]],[11,"type_id","","",699,[[],["typeid",3]]],[11,"from","","",700,[[]]],[11,"borrow","","",700,[[]]],[11,"borrow_mut","","",700,[[]]],[11,"try_from","","",700,[[],["result",4]]],[11,"into","","",700,[[]]],[11,"try_into","","",700,[[],["result",4]]],[11,"type_id","","",700,[[],["typeid",3]]],[11,"from","","",702,[[]]],[11,"borrow","","",702,[[]]],[11,"borrow_mut","","",702,[[]]],[11,"try_from","","",702,[[],["result",4]]],[11,"into","","",702,[[]]],[11,"try_into","","",702,[[],["result",4]]],[11,"type_id","","",702,[[],["typeid",3]]],[11,"from","","",703,[[]]],[11,"borrow","","",703,[[]]],[11,"borrow_mut","","",703,[[]]],[11,"try_from","","",703,[[],["result",4]]],[11,"into","","",703,[[]]],[11,"try_into","","",703,[[],["result",4]]],[11,"type_id","","",703,[[],["typeid",3]]],[11,"from","","",705,[[]]],[11,"borrow","","",705,[[]]],[11,"borrow_mut","","",705,[[]]],[11,"try_from","","",705,[[],["result",4]]],[11,"into","","",705,[[]]],[11,"try_into","","",705,[[],["result",4]]],[11,"type_id","","",705,[[],["typeid",3]]],[11,"from","","",706,[[]]],[11,"borrow","","",706,[[]]],[11,"borrow_mut","","",706,[[]]],[11,"try_from","","",706,[[],["result",4]]],[11,"into","","",706,[[]]],[11,"try_into","","",706,[[],["result",4]]],[11,"type_id","","",706,[[],["typeid",3]]],[11,"from","","",675,[[]]],[11,"borrow","","",675,[[]]],[11,"borrow_mut","","",675,[[]]],[11,"try_from","","",675,[[],["result",4]]],[11,"into","","",675,[[]]],[11,"try_into","","",675,[[],["result",4]]],[11,"type_id","","",675,[[],["typeid",3]]],[11,"from","","",676,[[]]],[11,"borrow","","",676,[[]]],[11,"borrow_mut","","",676,[[]]],[11,"try_from","","",676,[[],["result",4]]],[11,"into","","",676,[[]]],[11,"try_into","","",676,[[],["result",4]]],[11,"type_id","","",676,[[],["typeid",3]]],[11,"from","","",677,[[]]],[11,"borrow","","",677,[[]]],[11,"borrow_mut","","",677,[[]]],[11,"try_from","","",677,[[],["result",4]]],[11,"into","","",677,[[]]],[11,"try_into","","",677,[[],["result",4]]],[11,"type_id","","",677,[[],["typeid",3]]],[11,"from","","",678,[[]]],[11,"borrow","","",678,[[]]],[11,"borrow_mut","","",678,[[]]],[11,"try_from","","",678,[[],["result",4]]],[11,"into","","",678,[[]]],[11,"try_into","","",678,[[],["result",4]]],[11,"type_id","","",678,[[],["typeid",3]]],[11,"from","","",679,[[]]],[11,"borrow","","",679,[[]]],[11,"borrow_mut","","",679,[[]]],[11,"try_from","","",679,[[],["result",4]]],[11,"into","","",679,[[]]],[11,"try_into","","",679,[[],["result",4]]],[11,"type_id","","",679,[[],["typeid",3]]],[11,"from","","",680,[[]]],[11,"borrow","","",680,[[]]],[11,"borrow_mut","","",680,[[]]],[11,"try_from","","",680,[[],["result",4]]],[11,"into","","",680,[[]]],[11,"try_into","","",680,[[],["result",4]]],[11,"type_id","","",680,[[],["typeid",3]]],[11,"from","","",681,[[]]],[11,"borrow","","",681,[[]]],[11,"borrow_mut","","",681,[[]]],[11,"try_from","","",681,[[],["result",4]]],[11,"into","","",681,[[]]],[11,"try_into","","",681,[[],["result",4]]],[11,"type_id","","",681,[[],["typeid",3]]],[11,"from","","",682,[[]]],[11,"borrow","","",682,[[]]],[11,"borrow_mut","","",682,[[]]],[11,"try_from","","",682,[[],["result",4]]],[11,"into","","",682,[[]]],[11,"try_into","","",682,[[],["result",4]]],[11,"type_id","","",682,[[],["typeid",3]]],[11,"from","atsamd51g::eic::debouncen","",709,[[]]],[11,"borrow","","",709,[[]]],[11,"borrow_mut","","",709,[[]]],[11,"try_from","","",709,[[],["result",4]]],[11,"into","","",709,[[]]],[11,"try_into","","",709,[[],["result",4]]],[11,"type_id","","",709,[[],["typeid",3]]],[11,"from","atsamd51g::eic::dprescaler","",718,[[]]],[11,"borrow","","",718,[[]]],[11,"borrow_mut","","",718,[[]]],[11,"try_from","","",718,[[],["result",4]]],[11,"into","","",718,[[]]],[11,"try_into","","",718,[[],["result",4]]],[11,"type_id","","",718,[[],["typeid",3]]],[11,"from","","",720,[[]]],[11,"borrow","","",720,[[]]],[11,"borrow_mut","","",720,[[]]],[11,"try_from","","",720,[[],["result",4]]],[11,"into","","",720,[[]]],[11,"try_into","","",720,[[],["result",4]]],[11,"type_id","","",720,[[],["typeid",3]]],[11,"from","","",722,[[]]],[11,"borrow","","",722,[[]]],[11,"borrow_mut","","",722,[[]]],[11,"try_from","","",722,[[],["result",4]]],[11,"into","","",722,[[]]],[11,"try_into","","",722,[[],["result",4]]],[11,"type_id","","",722,[[],["typeid",3]]],[11,"from","","",724,[[]]],[11,"borrow","","",724,[[]]],[11,"borrow_mut","","",724,[[]]],[11,"try_from","","",724,[[],["result",4]]],[11,"into","","",724,[[]]],[11,"try_into","","",724,[[],["result",4]]],[11,"type_id","","",724,[[],["typeid",3]]],[11,"from","","",726,[[]]],[11,"borrow","","",726,[[]]],[11,"borrow_mut","","",726,[[]]],[11,"try_from","","",726,[[],["result",4]]],[11,"into","","",726,[[]]],[11,"try_into","","",726,[[],["result",4]]],[11,"type_id","","",726,[[],["typeid",3]]],[11,"from","","",712,[[]]],[11,"borrow","","",712,[[]]],[11,"borrow_mut","","",712,[[]]],[11,"try_from","","",712,[[],["result",4]]],[11,"into","","",712,[[]]],[11,"try_into","","",712,[[],["result",4]]],[11,"type_id","","",712,[[],["typeid",3]]],[11,"from","","",713,[[]]],[11,"borrow","","",713,[[]]],[11,"borrow_mut","","",713,[[]]],[11,"try_from","","",713,[[],["result",4]]],[11,"into","","",713,[[]]],[11,"try_into","","",713,[[],["result",4]]],[11,"type_id","","",713,[[],["typeid",3]]],[11,"from","","",714,[[]]],[11,"borrow","","",714,[[]]],[11,"borrow_mut","","",714,[[]]],[11,"try_from","","",714,[[],["result",4]]],[11,"into","","",714,[[]]],[11,"try_into","","",714,[[],["result",4]]],[11,"type_id","","",714,[[],["typeid",3]]],[11,"from","","",715,[[]]],[11,"borrow","","",715,[[]]],[11,"borrow_mut","","",715,[[]]],[11,"try_from","","",715,[[],["result",4]]],[11,"into","","",715,[[]]],[11,"try_into","","",715,[[],["result",4]]],[11,"type_id","","",715,[[],["typeid",3]]],[11,"from","","",716,[[]]],[11,"borrow","","",716,[[]]],[11,"borrow_mut","","",716,[[]]],[11,"try_from","","",716,[[],["result",4]]],[11,"into","","",716,[[]]],[11,"try_into","","",716,[[],["result",4]]],[11,"type_id","","",716,[[],["typeid",3]]],[11,"from","atsamd51g::evsys","",730,[[]]],[11,"borrow","","",730,[[]]],[11,"borrow_mut","","",730,[[]]],[11,"try_from","","",730,[[],["result",4]]],[11,"into","","",730,[[]]],[11,"try_into","","",730,[[],["result",4]]],[11,"type_id","","",730,[[],["typeid",3]]],[11,"from","","",731,[[]]],[11,"borrow","","",731,[[]]],[11,"borrow_mut","","",731,[[]]],[11,"try_from","","",731,[[],["result",4]]],[11,"into","","",731,[[]]],[11,"try_into","","",731,[[],["result",4]]],[11,"type_id","","",731,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::channel::channel","",734,[[]]],[11,"borrow","","",734,[[]]],[11,"borrow_mut","","",734,[[]]],[11,"try_from","","",734,[[],["result",4]]],[11,"into","","",734,[[]]],[11,"try_into","","",734,[[],["result",4]]],[11,"type_id","","",734,[[],["typeid",3]]],[11,"from","","",736,[[]]],[11,"borrow","","",736,[[]]],[11,"borrow_mut","","",736,[[]]],[11,"try_from","","",736,[[],["result",4]]],[11,"into","","",736,[[]]],[11,"try_into","","",736,[[],["result",4]]],[11,"type_id","","",736,[[],["typeid",3]]],[11,"from","","",738,[[]]],[11,"borrow","","",738,[[]]],[11,"borrow_mut","","",738,[[]]],[11,"try_from","","",738,[[],["result",4]]],[11,"into","","",738,[[]]],[11,"try_into","","",738,[[],["result",4]]],[11,"type_id","","",738,[[],["typeid",3]]],[11,"from","","",739,[[]]],[11,"borrow","","",739,[[]]],[11,"borrow_mut","","",739,[[]]],[11,"try_from","","",739,[[],["result",4]]],[11,"into","","",739,[[]]],[11,"try_into","","",739,[[],["result",4]]],[11,"type_id","","",739,[[],["typeid",3]]],[11,"from","","",740,[[]]],[11,"borrow","","",740,[[]]],[11,"borrow_mut","","",740,[[]]],[11,"try_from","","",740,[[],["result",4]]],[11,"into","","",740,[[]]],[11,"try_into","","",740,[[],["result",4]]],[11,"type_id","","",740,[[],["typeid",3]]],[11,"from","","",732,[[]]],[11,"borrow","","",732,[[]]],[11,"borrow_mut","","",732,[[]]],[11,"try_from","","",732,[[],["result",4]]],[11,"into","","",732,[[]]],[11,"try_into","","",732,[[],["result",4]]],[11,"type_id","","",732,[[],["typeid",3]]],[11,"from","","",733,[[]]],[11,"borrow","","",733,[[]]],[11,"borrow_mut","","",733,[[]]],[11,"try_from","","",733,[[],["result",4]]],[11,"into","","",733,[[]]],[11,"try_into","","",733,[[],["result",4]]],[11,"type_id","","",733,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::channel::chintenclr","",743,[[]]],[11,"borrow","","",743,[[]]],[11,"borrow_mut","","",743,[[]]],[11,"try_from","","",743,[[],["result",4]]],[11,"into","","",743,[[]]],[11,"try_into","","",743,[[],["result",4]]],[11,"type_id","","",743,[[],["typeid",3]]],[11,"from","","",744,[[]]],[11,"borrow","","",744,[[]]],[11,"borrow_mut","","",744,[[]]],[11,"try_from","","",744,[[],["result",4]]],[11,"into","","",744,[[]]],[11,"try_into","","",744,[[],["result",4]]],[11,"type_id","","",744,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::channel::chintenset","",747,[[]]],[11,"borrow","","",747,[[]]],[11,"borrow_mut","","",747,[[]]],[11,"try_from","","",747,[[],["result",4]]],[11,"into","","",747,[[]]],[11,"try_into","","",747,[[],["result",4]]],[11,"type_id","","",747,[[],["typeid",3]]],[11,"from","","",748,[[]]],[11,"borrow","","",748,[[]]],[11,"borrow_mut","","",748,[[]]],[11,"try_from","","",748,[[],["result",4]]],[11,"into","","",748,[[]]],[11,"try_into","","",748,[[],["result",4]]],[11,"type_id","","",748,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::channel::chintflag","",751,[[]]],[11,"borrow","","",751,[[]]],[11,"borrow_mut","","",751,[[]]],[11,"try_from","","",751,[[],["result",4]]],[11,"into","","",751,[[]]],[11,"try_into","","",751,[[],["result",4]]],[11,"type_id","","",751,[[],["typeid",3]]],[11,"from","","",752,[[]]],[11,"borrow","","",752,[[]]],[11,"borrow_mut","","",752,[[]]],[11,"try_from","","",752,[[],["result",4]]],[11,"into","","",752,[[]]],[11,"try_into","","",752,[[],["result",4]]],[11,"type_id","","",752,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::ctrla","",756,[[]]],[11,"borrow","","",756,[[]]],[11,"borrow_mut","","",756,[[]]],[11,"try_from","","",756,[[],["result",4]]],[11,"into","","",756,[[]]],[11,"try_into","","",756,[[],["result",4]]],[11,"type_id","","",756,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::swevt","",759,[[]]],[11,"borrow","","",759,[[]]],[11,"borrow_mut","","",759,[[]]],[11,"try_from","","",759,[[],["result",4]]],[11,"into","","",759,[[]]],[11,"try_into","","",759,[[],["result",4]]],[11,"type_id","","",759,[[],["typeid",3]]],[11,"from","","",760,[[]]],[11,"borrow","","",760,[[]]],[11,"borrow_mut","","",760,[[]]],[11,"try_from","","",760,[[],["result",4]]],[11,"into","","",760,[[]]],[11,"try_into","","",760,[[],["result",4]]],[11,"type_id","","",760,[[],["typeid",3]]],[11,"from","","",761,[[]]],[11,"borrow","","",761,[[]]],[11,"borrow_mut","","",761,[[]]],[11,"try_from","","",761,[[],["result",4]]],[11,"into","","",761,[[]]],[11,"try_into","","",761,[[],["result",4]]],[11,"type_id","","",761,[[],["typeid",3]]],[11,"from","","",762,[[]]],[11,"borrow","","",762,[[]]],[11,"borrow_mut","","",762,[[]]],[11,"try_from","","",762,[[],["result",4]]],[11,"into","","",762,[[]]],[11,"try_into","","",762,[[],["result",4]]],[11,"type_id","","",762,[[],["typeid",3]]],[11,"from","","",763,[[]]],[11,"borrow","","",763,[[]]],[11,"borrow_mut","","",763,[[]]],[11,"try_from","","",763,[[],["result",4]]],[11,"into","","",763,[[]]],[11,"try_into","","",763,[[],["result",4]]],[11,"type_id","","",763,[[],["typeid",3]]],[11,"from","","",764,[[]]],[11,"borrow","","",764,[[]]],[11,"borrow_mut","","",764,[[]]],[11,"try_from","","",764,[[],["result",4]]],[11,"into","","",764,[[]]],[11,"try_into","","",764,[[],["result",4]]],[11,"type_id","","",764,[[],["typeid",3]]],[11,"from","","",765,[[]]],[11,"borrow","","",765,[[]]],[11,"borrow_mut","","",765,[[]]],[11,"try_from","","",765,[[],["result",4]]],[11,"into","","",765,[[]]],[11,"try_into","","",765,[[],["result",4]]],[11,"type_id","","",765,[[],["typeid",3]]],[11,"from","","",766,[[]]],[11,"borrow","","",766,[[]]],[11,"borrow_mut","","",766,[[]]],[11,"try_from","","",766,[[],["result",4]]],[11,"into","","",766,[[]]],[11,"try_into","","",766,[[],["result",4]]],[11,"type_id","","",766,[[],["typeid",3]]],[11,"from","","",767,[[]]],[11,"borrow","","",767,[[]]],[11,"borrow_mut","","",767,[[]]],[11,"try_from","","",767,[[],["result",4]]],[11,"into","","",767,[[]]],[11,"try_into","","",767,[[],["result",4]]],[11,"type_id","","",767,[[],["typeid",3]]],[11,"from","","",768,[[]]],[11,"borrow","","",768,[[]]],[11,"borrow_mut","","",768,[[]]],[11,"try_from","","",768,[[],["result",4]]],[11,"into","","",768,[[]]],[11,"try_into","","",768,[[],["result",4]]],[11,"type_id","","",768,[[],["typeid",3]]],[11,"from","","",769,[[]]],[11,"borrow","","",769,[[]]],[11,"borrow_mut","","",769,[[]]],[11,"try_from","","",769,[[],["result",4]]],[11,"into","","",769,[[]]],[11,"try_into","","",769,[[],["result",4]]],[11,"type_id","","",769,[[],["typeid",3]]],[11,"from","","",770,[[]]],[11,"borrow","","",770,[[]]],[11,"borrow_mut","","",770,[[]]],[11,"try_from","","",770,[[],["result",4]]],[11,"into","","",770,[[]]],[11,"try_into","","",770,[[],["result",4]]],[11,"type_id","","",770,[[],["typeid",3]]],[11,"from","","",771,[[]]],[11,"borrow","","",771,[[]]],[11,"borrow_mut","","",771,[[]]],[11,"try_from","","",771,[[],["result",4]]],[11,"into","","",771,[[]]],[11,"try_into","","",771,[[],["result",4]]],[11,"type_id","","",771,[[],["typeid",3]]],[11,"from","","",772,[[]]],[11,"borrow","","",772,[[]]],[11,"borrow_mut","","",772,[[]]],[11,"try_from","","",772,[[],["result",4]]],[11,"into","","",772,[[]]],[11,"try_into","","",772,[[],["result",4]]],[11,"type_id","","",772,[[],["typeid",3]]],[11,"from","","",773,[[]]],[11,"borrow","","",773,[[]]],[11,"borrow_mut","","",773,[[]]],[11,"try_from","","",773,[[],["result",4]]],[11,"into","","",773,[[]]],[11,"try_into","","",773,[[],["result",4]]],[11,"type_id","","",773,[[],["typeid",3]]],[11,"from","","",774,[[]]],[11,"borrow","","",774,[[]]],[11,"borrow_mut","","",774,[[]]],[11,"try_from","","",774,[[],["result",4]]],[11,"into","","",774,[[]]],[11,"try_into","","",774,[[],["result",4]]],[11,"type_id","","",774,[[],["typeid",3]]],[11,"from","","",775,[[]]],[11,"borrow","","",775,[[]]],[11,"borrow_mut","","",775,[[]]],[11,"try_from","","",775,[[],["result",4]]],[11,"into","","",775,[[]]],[11,"try_into","","",775,[[],["result",4]]],[11,"type_id","","",775,[[],["typeid",3]]],[11,"from","","",776,[[]]],[11,"borrow","","",776,[[]]],[11,"borrow_mut","","",776,[[]]],[11,"try_from","","",776,[[],["result",4]]],[11,"into","","",776,[[]]],[11,"try_into","","",776,[[],["result",4]]],[11,"type_id","","",776,[[],["typeid",3]]],[11,"from","","",777,[[]]],[11,"borrow","","",777,[[]]],[11,"borrow_mut","","",777,[[]]],[11,"try_from","","",777,[[],["result",4]]],[11,"into","","",777,[[]]],[11,"try_into","","",777,[[],["result",4]]],[11,"type_id","","",777,[[],["typeid",3]]],[11,"from","","",778,[[]]],[11,"borrow","","",778,[[]]],[11,"borrow_mut","","",778,[[]]],[11,"try_from","","",778,[[],["result",4]]],[11,"into","","",778,[[]]],[11,"try_into","","",778,[[],["result",4]]],[11,"type_id","","",778,[[],["typeid",3]]],[11,"from","","",779,[[]]],[11,"borrow","","",779,[[]]],[11,"borrow_mut","","",779,[[]]],[11,"try_from","","",779,[[],["result",4]]],[11,"into","","",779,[[]]],[11,"try_into","","",779,[[],["result",4]]],[11,"type_id","","",779,[[],["typeid",3]]],[11,"from","","",780,[[]]],[11,"borrow","","",780,[[]]],[11,"borrow_mut","","",780,[[]]],[11,"try_from","","",780,[[],["result",4]]],[11,"into","","",780,[[]]],[11,"try_into","","",780,[[],["result",4]]],[11,"type_id","","",780,[[],["typeid",3]]],[11,"from","","",781,[[]]],[11,"borrow","","",781,[[]]],[11,"borrow_mut","","",781,[[]]],[11,"try_from","","",781,[[],["result",4]]],[11,"into","","",781,[[]]],[11,"try_into","","",781,[[],["result",4]]],[11,"type_id","","",781,[[],["typeid",3]]],[11,"from","","",782,[[]]],[11,"borrow","","",782,[[]]],[11,"borrow_mut","","",782,[[]]],[11,"try_from","","",782,[[],["result",4]]],[11,"into","","",782,[[]]],[11,"try_into","","",782,[[],["result",4]]],[11,"type_id","","",782,[[],["typeid",3]]],[11,"from","","",783,[[]]],[11,"borrow","","",783,[[]]],[11,"borrow_mut","","",783,[[]]],[11,"try_from","","",783,[[],["result",4]]],[11,"into","","",783,[[]]],[11,"try_into","","",783,[[],["result",4]]],[11,"type_id","","",783,[[],["typeid",3]]],[11,"from","","",784,[[]]],[11,"borrow","","",784,[[]]],[11,"borrow_mut","","",784,[[]]],[11,"try_from","","",784,[[],["result",4]]],[11,"into","","",784,[[]]],[11,"try_into","","",784,[[],["result",4]]],[11,"type_id","","",784,[[],["typeid",3]]],[11,"from","","",785,[[]]],[11,"borrow","","",785,[[]]],[11,"borrow_mut","","",785,[[]]],[11,"try_from","","",785,[[],["result",4]]],[11,"into","","",785,[[]]],[11,"try_into","","",785,[[],["result",4]]],[11,"type_id","","",785,[[],["typeid",3]]],[11,"from","","",786,[[]]],[11,"borrow","","",786,[[]]],[11,"borrow_mut","","",786,[[]]],[11,"try_from","","",786,[[],["result",4]]],[11,"into","","",786,[[]]],[11,"try_into","","",786,[[],["result",4]]],[11,"type_id","","",786,[[],["typeid",3]]],[11,"from","","",787,[[]]],[11,"borrow","","",787,[[]]],[11,"borrow_mut","","",787,[[]]],[11,"try_from","","",787,[[],["result",4]]],[11,"into","","",787,[[]]],[11,"try_into","","",787,[[],["result",4]]],[11,"type_id","","",787,[[],["typeid",3]]],[11,"from","","",788,[[]]],[11,"borrow","","",788,[[]]],[11,"borrow_mut","","",788,[[]]],[11,"try_from","","",788,[[],["result",4]]],[11,"into","","",788,[[]]],[11,"try_into","","",788,[[],["result",4]]],[11,"type_id","","",788,[[],["typeid",3]]],[11,"from","","",789,[[]]],[11,"borrow","","",789,[[]]],[11,"borrow_mut","","",789,[[]]],[11,"try_from","","",789,[[],["result",4]]],[11,"into","","",789,[[]]],[11,"try_into","","",789,[[],["result",4]]],[11,"type_id","","",789,[[],["typeid",3]]],[11,"from","","",790,[[]]],[11,"borrow","","",790,[[]]],[11,"borrow_mut","","",790,[[]]],[11,"try_from","","",790,[[],["result",4]]],[11,"into","","",790,[[]]],[11,"try_into","","",790,[[],["result",4]]],[11,"type_id","","",790,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::prictrl","",792,[[]]],[11,"borrow","","",792,[[]]],[11,"borrow_mut","","",792,[[]]],[11,"try_from","","",792,[[],["result",4]]],[11,"into","","",792,[[]]],[11,"try_into","","",792,[[],["result",4]]],[11,"type_id","","",792,[[],["typeid",3]]],[11,"from","","",793,[[]]],[11,"borrow","","",793,[[]]],[11,"borrow_mut","","",793,[[]]],[11,"try_from","","",793,[[],["result",4]]],[11,"into","","",793,[[]]],[11,"try_into","","",793,[[],["result",4]]],[11,"type_id","","",793,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::intpend","",796,[[]]],[11,"borrow","","",796,[[]]],[11,"borrow_mut","","",796,[[]]],[11,"try_from","","",796,[[],["result",4]]],[11,"into","","",796,[[]]],[11,"try_into","","",796,[[],["result",4]]],[11,"type_id","","",796,[[],["typeid",3]]],[11,"from","","",797,[[]]],[11,"borrow","","",797,[[]]],[11,"borrow_mut","","",797,[[]]],[11,"try_from","","",797,[[],["result",4]]],[11,"into","","",797,[[]]],[11,"try_into","","",797,[[],["result",4]]],[11,"type_id","","",797,[[],["typeid",3]]],[11,"from","","",798,[[]]],[11,"borrow","","",798,[[]]],[11,"borrow_mut","","",798,[[]]],[11,"try_from","","",798,[[],["result",4]]],[11,"into","","",798,[[]]],[11,"try_into","","",798,[[],["result",4]]],[11,"type_id","","",798,[[],["typeid",3]]],[11,"from","","",799,[[]]],[11,"borrow","","",799,[[]]],[11,"borrow_mut","","",799,[[]]],[11,"try_from","","",799,[[],["result",4]]],[11,"into","","",799,[[]]],[11,"try_into","","",799,[[],["result",4]]],[11,"type_id","","",799,[[],["typeid",3]]],[11,"from","","",800,[[]]],[11,"borrow","","",800,[[]]],[11,"borrow_mut","","",800,[[]]],[11,"try_from","","",800,[[],["result",4]]],[11,"into","","",800,[[]]],[11,"try_into","","",800,[[],["result",4]]],[11,"type_id","","",800,[[],["typeid",3]]],[11,"from","atsamd51g::evsys::user","",806,[[]]],[11,"borrow","","",806,[[]]],[11,"borrow_mut","","",806,[[]]],[11,"try_from","","",806,[[],["result",4]]],[11,"into","","",806,[[]]],[11,"try_into","","",806,[[],["result",4]]],[11,"type_id","","",806,[[],["typeid",3]]],[11,"from","atsamd51g::freqm","",809,[[]]],[11,"borrow","","",809,[[]]],[11,"borrow_mut","","",809,[[]]],[11,"try_from","","",809,[[],["result",4]]],[11,"into","","",809,[[]]],[11,"try_into","","",809,[[],["result",4]]],[11,"type_id","","",809,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::ctrla","",810,[[]]],[11,"borrow","","",810,[[]]],[11,"borrow_mut","","",810,[[]]],[11,"try_from","","",810,[[],["result",4]]],[11,"into","","",810,[[]]],[11,"try_into","","",810,[[],["result",4]]],[11,"type_id","","",810,[[],["typeid",3]]],[11,"from","","",811,[[]]],[11,"borrow","","",811,[[]]],[11,"borrow_mut","","",811,[[]]],[11,"try_from","","",811,[[],["result",4]]],[11,"into","","",811,[[]]],[11,"try_into","","",811,[[],["result",4]]],[11,"type_id","","",811,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::ctrlb","",814,[[]]],[11,"borrow","","",814,[[]]],[11,"borrow_mut","","",814,[[]]],[11,"try_from","","",814,[[],["result",4]]],[11,"into","","",814,[[]]],[11,"try_into","","",814,[[],["result",4]]],[11,"type_id","","",814,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::cfga","",816,[[]]],[11,"borrow","","",816,[[]]],[11,"borrow_mut","","",816,[[]]],[11,"try_from","","",816,[[],["result",4]]],[11,"into","","",816,[[]]],[11,"try_into","","",816,[[],["result",4]]],[11,"type_id","","",816,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::intenclr","",819,[[]]],[11,"borrow","","",819,[[]]],[11,"borrow_mut","","",819,[[]]],[11,"try_from","","",819,[[],["result",4]]],[11,"into","","",819,[[]]],[11,"try_into","","",819,[[],["result",4]]],[11,"type_id","","",819,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::intenset","",822,[[]]],[11,"borrow","","",822,[[]]],[11,"borrow_mut","","",822,[[]]],[11,"try_from","","",822,[[],["result",4]]],[11,"into","","",822,[[]]],[11,"try_into","","",822,[[],["result",4]]],[11,"type_id","","",822,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::intflag","",825,[[]]],[11,"borrow","","",825,[[]]],[11,"borrow_mut","","",825,[[]]],[11,"try_from","","",825,[[],["result",4]]],[11,"into","","",825,[[]]],[11,"try_into","","",825,[[],["result",4]]],[11,"type_id","","",825,[[],["typeid",3]]],[11,"from","atsamd51g::freqm::status","",828,[[]]],[11,"borrow","","",828,[[]]],[11,"borrow_mut","","",828,[[]]],[11,"try_from","","",828,[[],["result",4]]],[11,"into","","",828,[[]]],[11,"try_into","","",828,[[],["result",4]]],[11,"type_id","","",828,[[],["typeid",3]]],[11,"from","","",829,[[]]],[11,"borrow","","",829,[[]]],[11,"borrow_mut","","",829,[[]]],[11,"try_from","","",829,[[],["result",4]]],[11,"into","","",829,[[]]],[11,"try_into","","",829,[[],["result",4]]],[11,"type_id","","",829,[[],["typeid",3]]],[11,"from","atsamd51g::gclk","",834,[[]]],[11,"borrow","","",834,[[]]],[11,"borrow_mut","","",834,[[]]],[11,"try_from","","",834,[[],["result",4]]],[11,"into","","",834,[[]]],[11,"try_into","","",834,[[],["result",4]]],[11,"type_id","","",834,[[],["typeid",3]]],[11,"from","atsamd51g::gclk::ctrla","",835,[[]]],[11,"borrow","","",835,[[]]],[11,"borrow_mut","","",835,[[]]],[11,"try_from","","",835,[[],["result",4]]],[11,"into","","",835,[[]]],[11,"try_into","","",835,[[],["result",4]]],[11,"type_id","","",835,[[],["typeid",3]]],[11,"from","atsamd51g::gclk::syncbusy","",838,[[]]],[11,"borrow","","",838,[[]]],[11,"borrow_mut","","",838,[[]]],[11,"try_from","","",838,[[],["result",4]]],[11,"into","","",838,[[]]],[11,"try_into","","",838,[[],["result",4]]],[11,"type_id","","",838,[[],["typeid",3]]],[11,"from","atsamd51g::gclk::genctrl","",844,[[]]],[11,"borrow","","",844,[[]]],[11,"borrow_mut","","",844,[[]]],[11,"try_from","","",844,[[],["result",4]]],[11,"into","","",844,[[]]],[11,"try_into","","",844,[[],["result",4]]],[11,"type_id","","",844,[[],["typeid",3]]],[11,"from","","",845,[[]]],[11,"borrow","","",845,[[]]],[11,"borrow_mut","","",845,[[]]],[11,"try_from","","",845,[[],["result",4]]],[11,"into","","",845,[[]]],[11,"try_into","","",845,[[],["result",4]]],[11,"type_id","","",845,[[],["typeid",3]]],[11,"from","","",846,[[]]],[11,"borrow","","",846,[[]]],[11,"borrow_mut","","",846,[[]]],[11,"try_from","","",846,[[],["result",4]]],[11,"into","","",846,[[]]],[11,"try_into","","",846,[[],["result",4]]],[11,"type_id","","",846,[[],["typeid",3]]],[11,"from","","",847,[[]]],[11,"borrow","","",847,[[]]],[11,"borrow_mut","","",847,[[]]],[11,"try_from","","",847,[[],["result",4]]],[11,"into","","",847,[[]]],[11,"try_into","","",847,[[],["result",4]]],[11,"type_id","","",847,[[],["typeid",3]]],[11,"from","","",848,[[]]],[11,"borrow","","",848,[[]]],[11,"borrow_mut","","",848,[[]]],[11,"try_from","","",848,[[],["result",4]]],[11,"into","","",848,[[]]],[11,"try_into","","",848,[[],["result",4]]],[11,"type_id","","",848,[[],["typeid",3]]],[11,"from","","",850,[[]]],[11,"borrow","","",850,[[]]],[11,"borrow_mut","","",850,[[]]],[11,"try_from","","",850,[[],["result",4]]],[11,"into","","",850,[[]]],[11,"try_into","","",850,[[],["result",4]]],[11,"type_id","","",850,[[],["typeid",3]]],[11,"from","","",851,[[]]],[11,"borrow","","",851,[[]]],[11,"borrow_mut","","",851,[[]]],[11,"try_from","","",851,[[],["result",4]]],[11,"into","","",851,[[]]],[11,"try_into","","",851,[[],["result",4]]],[11,"type_id","","",851,[[],["typeid",3]]],[11,"from","","",852,[[]]],[11,"borrow","","",852,[[]]],[11,"borrow_mut","","",852,[[]]],[11,"try_from","","",852,[[],["result",4]]],[11,"into","","",852,[[]]],[11,"try_into","","",852,[[],["result",4]]],[11,"type_id","","",852,[[],["typeid",3]]],[11,"from","","",841,[[]]],[11,"borrow","","",841,[[]]],[11,"borrow_mut","","",841,[[]]],[11,"try_from","","",841,[[],["result",4]]],[11,"into","","",841,[[]]],[11,"try_into","","",841,[[],["result",4]]],[11,"type_id","","",841,[[],["typeid",3]]],[11,"from","","",842,[[]]],[11,"borrow","","",842,[[]]],[11,"borrow_mut","","",842,[[]]],[11,"try_from","","",842,[[],["result",4]]],[11,"into","","",842,[[]]],[11,"try_into","","",842,[[],["result",4]]],[11,"type_id","","",842,[[],["typeid",3]]],[11,"from","atsamd51g::gclk::pchctrl","",857,[[]]],[11,"borrow","","",857,[[]]],[11,"borrow_mut","","",857,[[]]],[11,"try_from","","",857,[[],["result",4]]],[11,"into","","",857,[[]]],[11,"try_into","","",857,[[],["result",4]]],[11,"type_id","","",857,[[],["typeid",3]]],[11,"from","","",858,[[]]],[11,"borrow","","",858,[[]]],[11,"borrow_mut","","",858,[[]]],[11,"try_from","","",858,[[],["result",4]]],[11,"into","","",858,[[]]],[11,"try_into","","",858,[[],["result",4]]],[11,"type_id","","",858,[[],["typeid",3]]],[11,"from","","",859,[[]]],[11,"borrow","","",859,[[]]],[11,"borrow_mut","","",859,[[]]],[11,"try_from","","",859,[[],["result",4]]],[11,"into","","",859,[[]]],[11,"try_into","","",859,[[],["result",4]]],[11,"type_id","","",859,[[],["typeid",3]]],[11,"from","","",855,[[]]],[11,"borrow","","",855,[[]]],[11,"borrow_mut","","",855,[[]]],[11,"try_from","","",855,[[],["result",4]]],[11,"into","","",855,[[]]],[11,"try_into","","",855,[[],["result",4]]],[11,"type_id","","",855,[[],["typeid",3]]],[11,"from","atsamd51g::hmatrix","",862,[[]]],[11,"borrow","","",862,[[]]],[11,"borrow_mut","","",862,[[]]],[11,"try_from","","",862,[[],["result",4]]],[11,"into","","",862,[[]]],[11,"try_into","","",862,[[],["result",4]]],[11,"type_id","","",862,[[],["typeid",3]]],[11,"from","","",863,[[]]],[11,"borrow","","",863,[[]]],[11,"borrow_mut","","",863,[[]]],[11,"try_from","","",863,[[],["result",4]]],[11,"into","","",863,[[]]],[11,"try_into","","",863,[[],["result",4]]],[11,"type_id","","",863,[[],["typeid",3]]],[11,"from","atsamd51g::icm","",864,[[]]],[11,"borrow","","",864,[[]]],[11,"borrow_mut","","",864,[[]]],[11,"try_from","","",864,[[],["result",4]]],[11,"into","","",864,[[]]],[11,"try_into","","",864,[[],["result",4]]],[11,"type_id","","",864,[[],["typeid",3]]],[11,"from","atsamd51g::icm::cfg","",866,[[]]],[11,"borrow","","",866,[[]]],[11,"borrow_mut","","",866,[[]]],[11,"try_from","","",866,[[],["result",4]]],[11,"into","","",866,[[]]],[11,"try_into","","",866,[[],["result",4]]],[11,"type_id","","",866,[[],["typeid",3]]],[11,"from","","",867,[[]]],[11,"borrow","","",867,[[]]],[11,"borrow_mut","","",867,[[]]],[11,"try_from","","",867,[[],["result",4]]],[11,"into","","",867,[[]]],[11,"try_into","","",867,[[],["result",4]]],[11,"type_id","","",867,[[],["typeid",3]]],[11,"from","","",868,[[]]],[11,"borrow","","",868,[[]]],[11,"borrow_mut","","",868,[[]]],[11,"try_from","","",868,[[],["result",4]]],[11,"into","","",868,[[]]],[11,"try_into","","",868,[[],["result",4]]],[11,"type_id","","",868,[[],["typeid",3]]],[11,"from","","",869,[[]]],[11,"borrow","","",869,[[]]],[11,"borrow_mut","","",869,[[]]],[11,"try_from","","",869,[[],["result",4]]],[11,"into","","",869,[[]]],[11,"try_into","","",869,[[],["result",4]]],[11,"type_id","","",869,[[],["typeid",3]]],[11,"from","","",870,[[]]],[11,"borrow","","",870,[[]]],[11,"borrow_mut","","",870,[[]]],[11,"try_from","","",870,[[],["result",4]]],[11,"into","","",870,[[]]],[11,"try_into","","",870,[[],["result",4]]],[11,"type_id","","",870,[[],["typeid",3]]],[11,"from","","",871,[[]]],[11,"borrow","","",871,[[]]],[11,"borrow_mut","","",871,[[]]],[11,"try_from","","",871,[[],["result",4]]],[11,"into","","",871,[[]]],[11,"try_into","","",871,[[],["result",4]]],[11,"type_id","","",871,[[],["typeid",3]]],[11,"from","","",872,[[]]],[11,"borrow","","",872,[[]]],[11,"borrow_mut","","",872,[[]]],[11,"try_from","","",872,[[],["result",4]]],[11,"into","","",872,[[]]],[11,"try_into","","",872,[[],["result",4]]],[11,"type_id","","",872,[[],["typeid",3]]],[11,"from","","",874,[[]]],[11,"borrow","","",874,[[]]],[11,"borrow_mut","","",874,[[]]],[11,"try_from","","",874,[[],["result",4]]],[11,"into","","",874,[[]]],[11,"try_into","","",874,[[],["result",4]]],[11,"type_id","","",874,[[],["typeid",3]]],[11,"from","","",875,[[]]],[11,"borrow","","",875,[[]]],[11,"borrow_mut","","",875,[[]]],[11,"try_from","","",875,[[],["result",4]]],[11,"into","","",875,[[]]],[11,"try_into","","",875,[[],["result",4]]],[11,"type_id","","",875,[[],["typeid",3]]],[11,"from","","",876,[[]]],[11,"borrow","","",876,[[]]],[11,"borrow_mut","","",876,[[]]],[11,"try_from","","",876,[[],["result",4]]],[11,"into","","",876,[[]]],[11,"try_into","","",876,[[],["result",4]]],[11,"type_id","","",876,[[],["typeid",3]]],[11,"from","","",865,[[]]],[11,"borrow","","",865,[[]]],[11,"borrow_mut","","",865,[[]]],[11,"try_from","","",865,[[],["result",4]]],[11,"into","","",865,[[]]],[11,"try_into","","",865,[[],["result",4]]],[11,"type_id","","",865,[[],["typeid",3]]],[11,"from","atsamd51g::icm::ctrl","",879,[[]]],[11,"borrow","","",879,[[]]],[11,"borrow_mut","","",879,[[]]],[11,"try_from","","",879,[[],["result",4]]],[11,"into","","",879,[[]]],[11,"try_into","","",879,[[],["result",4]]],[11,"type_id","","",879,[[],["typeid",3]]],[11,"from","","",880,[[]]],[11,"borrow","","",880,[[]]],[11,"borrow_mut","","",880,[[]]],[11,"try_from","","",880,[[],["result",4]]],[11,"into","","",880,[[]]],[11,"try_into","","",880,[[],["result",4]]],[11,"type_id","","",880,[[],["typeid",3]]],[11,"from","","",881,[[]]],[11,"borrow","","",881,[[]]],[11,"borrow_mut","","",881,[[]]],[11,"try_from","","",881,[[],["result",4]]],[11,"into","","",881,[[]]],[11,"try_into","","",881,[[],["result",4]]],[11,"type_id","","",881,[[],["typeid",3]]],[11,"from","","",882,[[]]],[11,"borrow","","",882,[[]]],[11,"borrow_mut","","",882,[[]]],[11,"try_from","","",882,[[],["result",4]]],[11,"into","","",882,[[]]],[11,"try_into","","",882,[[],["result",4]]],[11,"type_id","","",882,[[],["typeid",3]]],[11,"from","","",883,[[]]],[11,"borrow","","",883,[[]]],[11,"borrow_mut","","",883,[[]]],[11,"try_from","","",883,[[],["result",4]]],[11,"into","","",883,[[]]],[11,"try_into","","",883,[[],["result",4]]],[11,"type_id","","",883,[[],["typeid",3]]],[11,"from","","",884,[[]]],[11,"borrow","","",884,[[]]],[11,"borrow_mut","","",884,[[]]],[11,"try_from","","",884,[[],["result",4]]],[11,"into","","",884,[[]]],[11,"try_into","","",884,[[],["result",4]]],[11,"type_id","","",884,[[],["typeid",3]]],[11,"from","atsamd51g::icm::ier","",887,[[]]],[11,"borrow","","",887,[[]]],[11,"borrow_mut","","",887,[[]]],[11,"try_from","","",887,[[],["result",4]]],[11,"into","","",887,[[]]],[11,"try_into","","",887,[[],["result",4]]],[11,"type_id","","",887,[[],["typeid",3]]],[11,"from","","",888,[[]]],[11,"borrow","","",888,[[]]],[11,"borrow_mut","","",888,[[]]],[11,"try_from","","",888,[[],["result",4]]],[11,"into","","",888,[[]]],[11,"try_into","","",888,[[],["result",4]]],[11,"type_id","","",888,[[],["typeid",3]]],[11,"from","","",889,[[]]],[11,"borrow","","",889,[[]]],[11,"borrow_mut","","",889,[[]]],[11,"try_from","","",889,[[],["result",4]]],[11,"into","","",889,[[]]],[11,"try_into","","",889,[[],["result",4]]],[11,"type_id","","",889,[[],["typeid",3]]],[11,"from","","",890,[[]]],[11,"borrow","","",890,[[]]],[11,"borrow_mut","","",890,[[]]],[11,"try_from","","",890,[[],["result",4]]],[11,"into","","",890,[[]]],[11,"try_into","","",890,[[],["result",4]]],[11,"type_id","","",890,[[],["typeid",3]]],[11,"from","","",891,[[]]],[11,"borrow","","",891,[[]]],[11,"borrow_mut","","",891,[[]]],[11,"try_from","","",891,[[],["result",4]]],[11,"into","","",891,[[]]],[11,"try_into","","",891,[[],["result",4]]],[11,"type_id","","",891,[[],["typeid",3]]],[11,"from","","",892,[[]]],[11,"borrow","","",892,[[]]],[11,"borrow_mut","","",892,[[]]],[11,"try_from","","",892,[[],["result",4]]],[11,"into","","",892,[[]]],[11,"try_into","","",892,[[],["result",4]]],[11,"type_id","","",892,[[],["typeid",3]]],[11,"from","","",893,[[]]],[11,"borrow","","",893,[[]]],[11,"borrow_mut","","",893,[[]]],[11,"try_from","","",893,[[],["result",4]]],[11,"into","","",893,[[]]],[11,"try_into","","",893,[[],["result",4]]],[11,"type_id","","",893,[[],["typeid",3]]],[11,"from","atsamd51g::icm::idr","",895,[[]]],[11,"borrow","","",895,[[]]],[11,"borrow_mut","","",895,[[]]],[11,"try_from","","",895,[[],["result",4]]],[11,"into","","",895,[[]]],[11,"try_into","","",895,[[],["result",4]]],[11,"type_id","","",895,[[],["typeid",3]]],[11,"from","","",896,[[]]],[11,"borrow","","",896,[[]]],[11,"borrow_mut","","",896,[[]]],[11,"try_from","","",896,[[],["result",4]]],[11,"into","","",896,[[]]],[11,"try_into","","",896,[[],["result",4]]],[11,"type_id","","",896,[[],["typeid",3]]],[11,"from","","",897,[[]]],[11,"borrow","","",897,[[]]],[11,"borrow_mut","","",897,[[]]],[11,"try_from","","",897,[[],["result",4]]],[11,"into","","",897,[[]]],[11,"try_into","","",897,[[],["result",4]]],[11,"type_id","","",897,[[],["typeid",3]]],[11,"from","","",898,[[]]],[11,"borrow","","",898,[[]]],[11,"borrow_mut","","",898,[[]]],[11,"try_from","","",898,[[],["result",4]]],[11,"into","","",898,[[]]],[11,"try_into","","",898,[[],["result",4]]],[11,"type_id","","",898,[[],["typeid",3]]],[11,"from","","",899,[[]]],[11,"borrow","","",899,[[]]],[11,"borrow_mut","","",899,[[]]],[11,"try_from","","",899,[[],["result",4]]],[11,"into","","",899,[[]]],[11,"try_into","","",899,[[],["result",4]]],[11,"type_id","","",899,[[],["typeid",3]]],[11,"from","","",900,[[]]],[11,"borrow","","",900,[[]]],[11,"borrow_mut","","",900,[[]]],[11,"try_from","","",900,[[],["result",4]]],[11,"into","","",900,[[]]],[11,"try_into","","",900,[[],["result",4]]],[11,"type_id","","",900,[[],["typeid",3]]],[11,"from","","",901,[[]]],[11,"borrow","","",901,[[]]],[11,"borrow_mut","","",901,[[]]],[11,"try_from","","",901,[[],["result",4]]],[11,"into","","",901,[[]]],[11,"try_into","","",901,[[],["result",4]]],[11,"type_id","","",901,[[],["typeid",3]]],[11,"from","atsamd51g::icm::uasr","",905,[[]]],[11,"borrow","","",905,[[]]],[11,"borrow_mut","","",905,[[]]],[11,"try_from","","",905,[[],["result",4]]],[11,"into","","",905,[[]]],[11,"try_into","","",905,[[],["result",4]]],[11,"type_id","","",905,[[],["typeid",3]]],[11,"from","atsamd51g::icm::dscr","",908,[[]]],[11,"borrow","","",908,[[]]],[11,"borrow_mut","","",908,[[]]],[11,"try_from","","",908,[[],["result",4]]],[11,"into","","",908,[[]]],[11,"try_into","","",908,[[],["result",4]]],[11,"type_id","","",908,[[],["typeid",3]]],[11,"from","atsamd51g::icm::hash","",911,[[]]],[11,"borrow","","",911,[[]]],[11,"borrow_mut","","",911,[[]]],[11,"try_from","","",911,[[],["result",4]]],[11,"into","","",911,[[]]],[11,"try_into","","",911,[[],["result",4]]],[11,"type_id","","",911,[[],["typeid",3]]],[11,"from","atsamd51g::icm::uihval","",914,[[]]],[11,"borrow","","",914,[[]]],[11,"borrow_mut","","",914,[[]]],[11,"try_from","","",914,[[],["result",4]]],[11,"into","","",914,[[]]],[11,"try_into","","",914,[[],["result",4]]],[11,"type_id","","",914,[[],["typeid",3]]],[11,"from","atsamd51g::mclk","",916,[[]]],[11,"borrow","","",916,[[]]],[11,"borrow_mut","","",916,[[]]],[11,"try_from","","",916,[[],["result",4]]],[11,"into","","",916,[[]]],[11,"try_into","","",916,[[],["result",4]]],[11,"type_id","","",916,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::intenclr","",917,[[]]],[11,"borrow","","",917,[[]]],[11,"borrow_mut","","",917,[[]]],[11,"try_from","","",917,[[],["result",4]]],[11,"into","","",917,[[]]],[11,"try_into","","",917,[[],["result",4]]],[11,"type_id","","",917,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::intenset","",920,[[]]],[11,"borrow","","",920,[[]]],[11,"borrow_mut","","",920,[[]]],[11,"try_from","","",920,[[],["result",4]]],[11,"into","","",920,[[]]],[11,"try_into","","",920,[[],["result",4]]],[11,"type_id","","",920,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::intflag","",923,[[]]],[11,"borrow","","",923,[[]]],[11,"borrow_mut","","",923,[[]]],[11,"try_from","","",923,[[],["result",4]]],[11,"into","","",923,[[]]],[11,"try_into","","",923,[[],["result",4]]],[11,"type_id","","",923,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::hsdiv","",926,[[]]],[11,"borrow","","",926,[[]]],[11,"borrow_mut","","",926,[[]]],[11,"try_from","","",926,[[],["result",4]]],[11,"into","","",926,[[]]],[11,"try_into","","",926,[[],["result",4]]],[11,"type_id","","",926,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::cpudiv","",931,[[]]],[11,"borrow","","",931,[[]]],[11,"borrow_mut","","",931,[[]]],[11,"try_from","","",931,[[],["result",4]]],[11,"into","","",931,[[]]],[11,"try_into","","",931,[[],["result",4]]],[11,"type_id","","",931,[[],["typeid",3]]],[11,"from","","",929,[[]]],[11,"borrow","","",929,[[]]],[11,"borrow_mut","","",929,[[]]],[11,"try_from","","",929,[[],["result",4]]],[11,"into","","",929,[[]]],[11,"try_into","","",929,[[],["result",4]]],[11,"type_id","","",929,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::ahbmask","",934,[[]]],[11,"borrow","","",934,[[]]],[11,"borrow_mut","","",934,[[]]],[11,"try_from","","",934,[[],["result",4]]],[11,"into","","",934,[[]]],[11,"try_into","","",934,[[],["result",4]]],[11,"type_id","","",934,[[],["typeid",3]]],[11,"from","","",935,[[]]],[11,"borrow","","",935,[[]]],[11,"borrow_mut","","",935,[[]]],[11,"try_from","","",935,[[],["result",4]]],[11,"into","","",935,[[]]],[11,"try_into","","",935,[[],["result",4]]],[11,"type_id","","",935,[[],["typeid",3]]],[11,"from","","",936,[[]]],[11,"borrow","","",936,[[]]],[11,"borrow_mut","","",936,[[]]],[11,"try_from","","",936,[[],["result",4]]],[11,"into","","",936,[[]]],[11,"try_into","","",936,[[],["result",4]]],[11,"type_id","","",936,[[],["typeid",3]]],[11,"from","","",937,[[]]],[11,"borrow","","",937,[[]]],[11,"borrow_mut","","",937,[[]]],[11,"try_from","","",937,[[],["result",4]]],[11,"into","","",937,[[]]],[11,"try_into","","",937,[[],["result",4]]],[11,"type_id","","",937,[[],["typeid",3]]],[11,"from","","",938,[[]]],[11,"borrow","","",938,[[]]],[11,"borrow_mut","","",938,[[]]],[11,"try_from","","",938,[[],["result",4]]],[11,"into","","",938,[[]]],[11,"try_into","","",938,[[],["result",4]]],[11,"type_id","","",938,[[],["typeid",3]]],[11,"from","","",939,[[]]],[11,"borrow","","",939,[[]]],[11,"borrow_mut","","",939,[[]]],[11,"try_from","","",939,[[],["result",4]]],[11,"into","","",939,[[]]],[11,"try_into","","",939,[[],["result",4]]],[11,"type_id","","",939,[[],["typeid",3]]],[11,"from","","",940,[[]]],[11,"borrow","","",940,[[]]],[11,"borrow_mut","","",940,[[]]],[11,"try_from","","",940,[[],["result",4]]],[11,"into","","",940,[[]]],[11,"try_into","","",940,[[],["result",4]]],[11,"type_id","","",940,[[],["typeid",3]]],[11,"from","","",941,[[]]],[11,"borrow","","",941,[[]]],[11,"borrow_mut","","",941,[[]]],[11,"try_from","","",941,[[],["result",4]]],[11,"into","","",941,[[]]],[11,"try_into","","",941,[[],["result",4]]],[11,"type_id","","",941,[[],["typeid",3]]],[11,"from","","",942,[[]]],[11,"borrow","","",942,[[]]],[11,"borrow_mut","","",942,[[]]],[11,"try_from","","",942,[[],["result",4]]],[11,"into","","",942,[[]]],[11,"try_into","","",942,[[],["result",4]]],[11,"type_id","","",942,[[],["typeid",3]]],[11,"from","","",943,[[]]],[11,"borrow","","",943,[[]]],[11,"borrow_mut","","",943,[[]]],[11,"try_from","","",943,[[],["result",4]]],[11,"into","","",943,[[]]],[11,"try_into","","",943,[[],["result",4]]],[11,"type_id","","",943,[[],["typeid",3]]],[11,"from","","",944,[[]]],[11,"borrow","","",944,[[]]],[11,"borrow_mut","","",944,[[]]],[11,"try_from","","",944,[[],["result",4]]],[11,"into","","",944,[[]]],[11,"try_into","","",944,[[],["result",4]]],[11,"type_id","","",944,[[],["typeid",3]]],[11,"from","","",945,[[]]],[11,"borrow","","",945,[[]]],[11,"borrow_mut","","",945,[[]]],[11,"try_from","","",945,[[],["result",4]]],[11,"into","","",945,[[]]],[11,"try_into","","",945,[[],["result",4]]],[11,"type_id","","",945,[[],["typeid",3]]],[11,"from","","",946,[[]]],[11,"borrow","","",946,[[]]],[11,"borrow_mut","","",946,[[]]],[11,"try_from","","",946,[[],["result",4]]],[11,"into","","",946,[[]]],[11,"try_into","","",946,[[],["result",4]]],[11,"type_id","","",946,[[],["typeid",3]]],[11,"from","","",947,[[]]],[11,"borrow","","",947,[[]]],[11,"borrow_mut","","",947,[[]]],[11,"try_from","","",947,[[],["result",4]]],[11,"into","","",947,[[]]],[11,"try_into","","",947,[[],["result",4]]],[11,"type_id","","",947,[[],["typeid",3]]],[11,"from","","",948,[[]]],[11,"borrow","","",948,[[]]],[11,"borrow_mut","","",948,[[]]],[11,"try_from","","",948,[[],["result",4]]],[11,"into","","",948,[[]]],[11,"try_into","","",948,[[],["result",4]]],[11,"type_id","","",948,[[],["typeid",3]]],[11,"from","","",949,[[]]],[11,"borrow","","",949,[[]]],[11,"borrow_mut","","",949,[[]]],[11,"try_from","","",949,[[],["result",4]]],[11,"into","","",949,[[]]],[11,"try_into","","",949,[[],["result",4]]],[11,"type_id","","",949,[[],["typeid",3]]],[11,"from","","",950,[[]]],[11,"borrow","","",950,[[]]],[11,"borrow_mut","","",950,[[]]],[11,"try_from","","",950,[[],["result",4]]],[11,"into","","",950,[[]]],[11,"try_into","","",950,[[],["result",4]]],[11,"type_id","","",950,[[],["typeid",3]]],[11,"from","","",951,[[]]],[11,"borrow","","",951,[[]]],[11,"borrow_mut","","",951,[[]]],[11,"try_from","","",951,[[],["result",4]]],[11,"into","","",951,[[]]],[11,"try_into","","",951,[[],["result",4]]],[11,"type_id","","",951,[[],["typeid",3]]],[11,"from","","",952,[[]]],[11,"borrow","","",952,[[]]],[11,"borrow_mut","","",952,[[]]],[11,"try_from","","",952,[[],["result",4]]],[11,"into","","",952,[[]]],[11,"try_into","","",952,[[],["result",4]]],[11,"type_id","","",952,[[],["typeid",3]]],[11,"from","","",953,[[]]],[11,"borrow","","",953,[[]]],[11,"borrow_mut","","",953,[[]]],[11,"try_from","","",953,[[],["result",4]]],[11,"into","","",953,[[]]],[11,"try_into","","",953,[[],["result",4]]],[11,"type_id","","",953,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::apbamask","",956,[[]]],[11,"borrow","","",956,[[]]],[11,"borrow_mut","","",956,[[]]],[11,"try_from","","",956,[[],["result",4]]],[11,"into","","",956,[[]]],[11,"try_into","","",956,[[],["result",4]]],[11,"type_id","","",956,[[],["typeid",3]]],[11,"from","","",957,[[]]],[11,"borrow","","",957,[[]]],[11,"borrow_mut","","",957,[[]]],[11,"try_from","","",957,[[],["result",4]]],[11,"into","","",957,[[]]],[11,"try_into","","",957,[[],["result",4]]],[11,"type_id","","",957,[[],["typeid",3]]],[11,"from","","",958,[[]]],[11,"borrow","","",958,[[]]],[11,"borrow_mut","","",958,[[]]],[11,"try_from","","",958,[[],["result",4]]],[11,"into","","",958,[[]]],[11,"try_into","","",958,[[],["result",4]]],[11,"type_id","","",958,[[],["typeid",3]]],[11,"from","","",959,[[]]],[11,"borrow","","",959,[[]]],[11,"borrow_mut","","",959,[[]]],[11,"try_from","","",959,[[],["result",4]]],[11,"into","","",959,[[]]],[11,"try_into","","",959,[[],["result",4]]],[11,"type_id","","",959,[[],["typeid",3]]],[11,"from","","",960,[[]]],[11,"borrow","","",960,[[]]],[11,"borrow_mut","","",960,[[]]],[11,"try_from","","",960,[[],["result",4]]],[11,"into","","",960,[[]]],[11,"try_into","","",960,[[],["result",4]]],[11,"type_id","","",960,[[],["typeid",3]]],[11,"from","","",961,[[]]],[11,"borrow","","",961,[[]]],[11,"borrow_mut","","",961,[[]]],[11,"try_from","","",961,[[],["result",4]]],[11,"into","","",961,[[]]],[11,"try_into","","",961,[[],["result",4]]],[11,"type_id","","",961,[[],["typeid",3]]],[11,"from","","",962,[[]]],[11,"borrow","","",962,[[]]],[11,"borrow_mut","","",962,[[]]],[11,"try_from","","",962,[[],["result",4]]],[11,"into","","",962,[[]]],[11,"try_into","","",962,[[],["result",4]]],[11,"type_id","","",962,[[],["typeid",3]]],[11,"from","","",963,[[]]],[11,"borrow","","",963,[[]]],[11,"borrow_mut","","",963,[[]]],[11,"try_from","","",963,[[],["result",4]]],[11,"into","","",963,[[]]],[11,"try_into","","",963,[[],["result",4]]],[11,"type_id","","",963,[[],["typeid",3]]],[11,"from","","",964,[[]]],[11,"borrow","","",964,[[]]],[11,"borrow_mut","","",964,[[]]],[11,"try_from","","",964,[[],["result",4]]],[11,"into","","",964,[[]]],[11,"try_into","","",964,[[],["result",4]]],[11,"type_id","","",964,[[],["typeid",3]]],[11,"from","","",965,[[]]],[11,"borrow","","",965,[[]]],[11,"borrow_mut","","",965,[[]]],[11,"try_from","","",965,[[],["result",4]]],[11,"into","","",965,[[]]],[11,"try_into","","",965,[[],["result",4]]],[11,"type_id","","",965,[[],["typeid",3]]],[11,"from","","",966,[[]]],[11,"borrow","","",966,[[]]],[11,"borrow_mut","","",966,[[]]],[11,"try_from","","",966,[[],["result",4]]],[11,"into","","",966,[[]]],[11,"try_into","","",966,[[],["result",4]]],[11,"type_id","","",966,[[],["typeid",3]]],[11,"from","","",967,[[]]],[11,"borrow","","",967,[[]]],[11,"borrow_mut","","",967,[[]]],[11,"try_from","","",967,[[],["result",4]]],[11,"into","","",967,[[]]],[11,"try_into","","",967,[[],["result",4]]],[11,"type_id","","",967,[[],["typeid",3]]],[11,"from","","",968,[[]]],[11,"borrow","","",968,[[]]],[11,"borrow_mut","","",968,[[]]],[11,"try_from","","",968,[[],["result",4]]],[11,"into","","",968,[[]]],[11,"try_into","","",968,[[],["result",4]]],[11,"type_id","","",968,[[],["typeid",3]]],[11,"from","","",969,[[]]],[11,"borrow","","",969,[[]]],[11,"borrow_mut","","",969,[[]]],[11,"try_from","","",969,[[],["result",4]]],[11,"into","","",969,[[]]],[11,"try_into","","",969,[[],["result",4]]],[11,"type_id","","",969,[[],["typeid",3]]],[11,"from","","",970,[[]]],[11,"borrow","","",970,[[]]],[11,"borrow_mut","","",970,[[]]],[11,"try_from","","",970,[[],["result",4]]],[11,"into","","",970,[[]]],[11,"try_into","","",970,[[],["result",4]]],[11,"type_id","","",970,[[],["typeid",3]]],[11,"from","","",971,[[]]],[11,"borrow","","",971,[[]]],[11,"borrow_mut","","",971,[[]]],[11,"try_from","","",971,[[],["result",4]]],[11,"into","","",971,[[]]],[11,"try_into","","",971,[[],["result",4]]],[11,"type_id","","",971,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::apbbmask","",974,[[]]],[11,"borrow","","",974,[[]]],[11,"borrow_mut","","",974,[[]]],[11,"try_from","","",974,[[],["result",4]]],[11,"into","","",974,[[]]],[11,"try_into","","",974,[[],["result",4]]],[11,"type_id","","",974,[[],["typeid",3]]],[11,"from","","",975,[[]]],[11,"borrow","","",975,[[]]],[11,"borrow_mut","","",975,[[]]],[11,"try_from","","",975,[[],["result",4]]],[11,"into","","",975,[[]]],[11,"try_into","","",975,[[],["result",4]]],[11,"type_id","","",975,[[],["typeid",3]]],[11,"from","","",976,[[]]],[11,"borrow","","",976,[[]]],[11,"borrow_mut","","",976,[[]]],[11,"try_from","","",976,[[],["result",4]]],[11,"into","","",976,[[]]],[11,"try_into","","",976,[[],["result",4]]],[11,"type_id","","",976,[[],["typeid",3]]],[11,"from","","",977,[[]]],[11,"borrow","","",977,[[]]],[11,"borrow_mut","","",977,[[]]],[11,"try_from","","",977,[[],["result",4]]],[11,"into","","",977,[[]]],[11,"try_into","","",977,[[],["result",4]]],[11,"type_id","","",977,[[],["typeid",3]]],[11,"from","","",978,[[]]],[11,"borrow","","",978,[[]]],[11,"borrow_mut","","",978,[[]]],[11,"try_from","","",978,[[],["result",4]]],[11,"into","","",978,[[]]],[11,"try_into","","",978,[[],["result",4]]],[11,"type_id","","",978,[[],["typeid",3]]],[11,"from","","",979,[[]]],[11,"borrow","","",979,[[]]],[11,"borrow_mut","","",979,[[]]],[11,"try_from","","",979,[[],["result",4]]],[11,"into","","",979,[[]]],[11,"try_into","","",979,[[],["result",4]]],[11,"type_id","","",979,[[],["typeid",3]]],[11,"from","","",980,[[]]],[11,"borrow","","",980,[[]]],[11,"borrow_mut","","",980,[[]]],[11,"try_from","","",980,[[],["result",4]]],[11,"into","","",980,[[]]],[11,"try_into","","",980,[[],["result",4]]],[11,"type_id","","",980,[[],["typeid",3]]],[11,"from","","",981,[[]]],[11,"borrow","","",981,[[]]],[11,"borrow_mut","","",981,[[]]],[11,"try_from","","",981,[[],["result",4]]],[11,"into","","",981,[[]]],[11,"try_into","","",981,[[],["result",4]]],[11,"type_id","","",981,[[],["typeid",3]]],[11,"from","","",982,[[]]],[11,"borrow","","",982,[[]]],[11,"borrow_mut","","",982,[[]]],[11,"try_from","","",982,[[],["result",4]]],[11,"into","","",982,[[]]],[11,"try_into","","",982,[[],["result",4]]],[11,"type_id","","",982,[[],["typeid",3]]],[11,"from","","",983,[[]]],[11,"borrow","","",983,[[]]],[11,"borrow_mut","","",983,[[]]],[11,"try_from","","",983,[[],["result",4]]],[11,"into","","",983,[[]]],[11,"try_into","","",983,[[],["result",4]]],[11,"type_id","","",983,[[],["typeid",3]]],[11,"from","","",984,[[]]],[11,"borrow","","",984,[[]]],[11,"borrow_mut","","",984,[[]]],[11,"try_from","","",984,[[],["result",4]]],[11,"into","","",984,[[]]],[11,"try_into","","",984,[[],["result",4]]],[11,"type_id","","",984,[[],["typeid",3]]],[11,"from","","",985,[[]]],[11,"borrow","","",985,[[]]],[11,"borrow_mut","","",985,[[]]],[11,"try_from","","",985,[[],["result",4]]],[11,"into","","",985,[[]]],[11,"try_into","","",985,[[],["result",4]]],[11,"type_id","","",985,[[],["typeid",3]]],[11,"from","","",986,[[]]],[11,"borrow","","",986,[[]]],[11,"borrow_mut","","",986,[[]]],[11,"try_from","","",986,[[],["result",4]]],[11,"into","","",986,[[]]],[11,"try_into","","",986,[[],["result",4]]],[11,"type_id","","",986,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::apbcmask","",989,[[]]],[11,"borrow","","",989,[[]]],[11,"borrow_mut","","",989,[[]]],[11,"try_from","","",989,[[],["result",4]]],[11,"into","","",989,[[]]],[11,"try_into","","",989,[[],["result",4]]],[11,"type_id","","",989,[[],["typeid",3]]],[11,"from","","",990,[[]]],[11,"borrow","","",990,[[]]],[11,"borrow_mut","","",990,[[]]],[11,"try_from","","",990,[[],["result",4]]],[11,"into","","",990,[[]]],[11,"try_into","","",990,[[],["result",4]]],[11,"type_id","","",990,[[],["typeid",3]]],[11,"from","","",991,[[]]],[11,"borrow","","",991,[[]]],[11,"borrow_mut","","",991,[[]]],[11,"try_from","","",991,[[],["result",4]]],[11,"into","","",991,[[]]],[11,"try_into","","",991,[[],["result",4]]],[11,"type_id","","",991,[[],["typeid",3]]],[11,"from","","",992,[[]]],[11,"borrow","","",992,[[]]],[11,"borrow_mut","","",992,[[]]],[11,"try_from","","",992,[[],["result",4]]],[11,"into","","",992,[[]]],[11,"try_into","","",992,[[],["result",4]]],[11,"type_id","","",992,[[],["typeid",3]]],[11,"from","","",993,[[]]],[11,"borrow","","",993,[[]]],[11,"borrow_mut","","",993,[[]]],[11,"try_from","","",993,[[],["result",4]]],[11,"into","","",993,[[]]],[11,"try_into","","",993,[[],["result",4]]],[11,"type_id","","",993,[[],["typeid",3]]],[11,"from","","",994,[[]]],[11,"borrow","","",994,[[]]],[11,"borrow_mut","","",994,[[]]],[11,"try_from","","",994,[[],["result",4]]],[11,"into","","",994,[[]]],[11,"try_into","","",994,[[],["result",4]]],[11,"type_id","","",994,[[],["typeid",3]]],[11,"from","","",995,[[]]],[11,"borrow","","",995,[[]]],[11,"borrow_mut","","",995,[[]]],[11,"try_from","","",995,[[],["result",4]]],[11,"into","","",995,[[]]],[11,"try_into","","",995,[[],["result",4]]],[11,"type_id","","",995,[[],["typeid",3]]],[11,"from","","",996,[[]]],[11,"borrow","","",996,[[]]],[11,"borrow_mut","","",996,[[]]],[11,"try_from","","",996,[[],["result",4]]],[11,"into","","",996,[[]]],[11,"try_into","","",996,[[],["result",4]]],[11,"type_id","","",996,[[],["typeid",3]]],[11,"from","atsamd51g::mclk::apbdmask","",999,[[]]],[11,"borrow","","",999,[[]]],[11,"borrow_mut","","",999,[[]]],[11,"try_from","","",999,[[],["result",4]]],[11,"into","","",999,[[]]],[11,"try_into","","",999,[[],["result",4]]],[11,"type_id","","",999,[[],["typeid",3]]],[11,"from","","",1000,[[]]],[11,"borrow","","",1000,[[]]],[11,"borrow_mut","","",1000,[[]]],[11,"try_from","","",1000,[[],["result",4]]],[11,"into","","",1000,[[]]],[11,"try_into","","",1000,[[],["result",4]]],[11,"type_id","","",1000,[[],["typeid",3]]],[11,"from","","",1001,[[]]],[11,"borrow","","",1001,[[]]],[11,"borrow_mut","","",1001,[[]]],[11,"try_from","","",1001,[[],["result",4]]],[11,"into","","",1001,[[]]],[11,"try_into","","",1001,[[],["result",4]]],[11,"type_id","","",1001,[[],["typeid",3]]],[11,"from","","",1002,[[]]],[11,"borrow","","",1002,[[]]],[11,"borrow_mut","","",1002,[[]]],[11,"try_from","","",1002,[[],["result",4]]],[11,"into","","",1002,[[]]],[11,"try_into","","",1002,[[],["result",4]]],[11,"type_id","","",1002,[[],["typeid",3]]],[11,"from","","",1003,[[]]],[11,"borrow","","",1003,[[]]],[11,"borrow_mut","","",1003,[[]]],[11,"try_from","","",1003,[[],["result",4]]],[11,"into","","",1003,[[]]],[11,"try_into","","",1003,[[],["result",4]]],[11,"type_id","","",1003,[[],["typeid",3]]],[11,"from","","",1004,[[]]],[11,"borrow","","",1004,[[]]],[11,"borrow_mut","","",1004,[[]]],[11,"try_from","","",1004,[[],["result",4]]],[11,"into","","",1004,[[]]],[11,"try_into","","",1004,[[],["result",4]]],[11,"type_id","","",1004,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl","",1007,[[]]],[11,"borrow","","",1007,[[]]],[11,"borrow_mut","","",1007,[[]]],[11,"try_from","","",1007,[[],["result",4]]],[11,"into","","",1007,[[]]],[11,"try_into","","",1007,[[],["result",4]]],[11,"type_id","","",1007,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::ctrla","",1010,[[]]],[11,"borrow","","",1010,[[]]],[11,"borrow_mut","","",1010,[[]]],[11,"try_from","","",1010,[[],["result",4]]],[11,"into","","",1010,[[]]],[11,"try_into","","",1010,[[],["result",4]]],[11,"type_id","","",1010,[[],["typeid",3]]],[11,"from","","",1011,[[]]],[11,"borrow","","",1011,[[]]],[11,"borrow_mut","","",1011,[[]]],[11,"try_from","","",1011,[[],["result",4]]],[11,"into","","",1011,[[]]],[11,"try_into","","",1011,[[],["result",4]]],[11,"type_id","","",1011,[[],["typeid",3]]],[11,"from","","",1013,[[]]],[11,"borrow","","",1013,[[]]],[11,"borrow_mut","","",1013,[[]]],[11,"try_from","","",1013,[[],["result",4]]],[11,"into","","",1013,[[]]],[11,"try_into","","",1013,[[],["result",4]]],[11,"type_id","","",1013,[[],["typeid",3]]],[11,"from","","",1015,[[]]],[11,"borrow","","",1015,[[]]],[11,"borrow_mut","","",1015,[[]]],[11,"try_from","","",1015,[[],["result",4]]],[11,"into","","",1015,[[]]],[11,"try_into","","",1015,[[],["result",4]]],[11,"type_id","","",1015,[[],["typeid",3]]],[11,"from","","",1016,[[]]],[11,"borrow","","",1016,[[]]],[11,"borrow_mut","","",1016,[[]]],[11,"try_from","","",1016,[[],["result",4]]],[11,"into","","",1016,[[]]],[11,"try_into","","",1016,[[],["result",4]]],[11,"type_id","","",1016,[[],["typeid",3]]],[11,"from","","",1017,[[]]],[11,"borrow","","",1017,[[]]],[11,"borrow_mut","","",1017,[[]]],[11,"try_from","","",1017,[[],["result",4]]],[11,"into","","",1017,[[]]],[11,"try_into","","",1017,[[],["result",4]]],[11,"type_id","","",1017,[[],["typeid",3]]],[11,"from","","",1018,[[]]],[11,"borrow","","",1018,[[]]],[11,"borrow_mut","","",1018,[[]]],[11,"try_from","","",1018,[[],["result",4]]],[11,"into","","",1018,[[]]],[11,"try_into","","",1018,[[],["result",4]]],[11,"type_id","","",1018,[[],["typeid",3]]],[11,"from","","",1019,[[]]],[11,"borrow","","",1019,[[]]],[11,"borrow_mut","","",1019,[[]]],[11,"try_from","","",1019,[[],["result",4]]],[11,"into","","",1019,[[]]],[11,"try_into","","",1019,[[],["result",4]]],[11,"type_id","","",1019,[[],["typeid",3]]],[11,"from","","",1020,[[]]],[11,"borrow","","",1020,[[]]],[11,"borrow_mut","","",1020,[[]]],[11,"try_from","","",1020,[[],["result",4]]],[11,"into","","",1020,[[]]],[11,"try_into","","",1020,[[],["result",4]]],[11,"type_id","","",1020,[[],["typeid",3]]],[11,"from","","",1008,[[]]],[11,"borrow","","",1008,[[]]],[11,"borrow_mut","","",1008,[[]]],[11,"try_from","","",1008,[[],["result",4]]],[11,"into","","",1008,[[]]],[11,"try_into","","",1008,[[],["result",4]]],[11,"type_id","","",1008,[[],["typeid",3]]],[11,"from","","",1009,[[]]],[11,"borrow","","",1009,[[]]],[11,"borrow_mut","","",1009,[[]]],[11,"try_from","","",1009,[[],["result",4]]],[11,"into","","",1009,[[]]],[11,"try_into","","",1009,[[],["result",4]]],[11,"type_id","","",1009,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::ctrlb","",1025,[[]]],[11,"borrow","","",1025,[[]]],[11,"borrow_mut","","",1025,[[]]],[11,"try_from","","",1025,[[],["result",4]]],[11,"into","","",1025,[[]]],[11,"try_into","","",1025,[[],["result",4]]],[11,"type_id","","",1025,[[],["typeid",3]]],[11,"from","","",1026,[[]]],[11,"borrow","","",1026,[[]]],[11,"borrow_mut","","",1026,[[]]],[11,"try_from","","",1026,[[],["result",4]]],[11,"into","","",1026,[[]]],[11,"try_into","","",1026,[[],["result",4]]],[11,"type_id","","",1026,[[],["typeid",3]]],[11,"from","","",1023,[[]]],[11,"borrow","","",1023,[[]]],[11,"borrow_mut","","",1023,[[]]],[11,"try_from","","",1023,[[],["result",4]]],[11,"into","","",1023,[[]]],[11,"try_into","","",1023,[[],["result",4]]],[11,"type_id","","",1023,[[],["typeid",3]]],[11,"from","","",1024,[[]]],[11,"borrow","","",1024,[[]]],[11,"borrow_mut","","",1024,[[]]],[11,"try_from","","",1024,[[],["result",4]]],[11,"into","","",1024,[[]]],[11,"try_into","","",1024,[[],["result",4]]],[11,"type_id","","",1024,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::param","",1028,[[]]],[11,"borrow","","",1028,[[]]],[11,"borrow_mut","","",1028,[[]]],[11,"try_from","","",1028,[[],["result",4]]],[11,"into","","",1028,[[]]],[11,"try_into","","",1028,[[],["result",4]]],[11,"type_id","","",1028,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::intenclr","",1031,[[]]],[11,"borrow","","",1031,[[]]],[11,"borrow_mut","","",1031,[[]]],[11,"try_from","","",1031,[[],["result",4]]],[11,"into","","",1031,[[]]],[11,"try_into","","",1031,[[],["result",4]]],[11,"type_id","","",1031,[[],["typeid",3]]],[11,"from","","",1032,[[]]],[11,"borrow","","",1032,[[]]],[11,"borrow_mut","","",1032,[[]]],[11,"try_from","","",1032,[[],["result",4]]],[11,"into","","",1032,[[]]],[11,"try_into","","",1032,[[],["result",4]]],[11,"type_id","","",1032,[[],["typeid",3]]],[11,"from","","",1033,[[]]],[11,"borrow","","",1033,[[]]],[11,"borrow_mut","","",1033,[[]]],[11,"try_from","","",1033,[[],["result",4]]],[11,"into","","",1033,[[]]],[11,"try_into","","",1033,[[],["result",4]]],[11,"type_id","","",1033,[[],["typeid",3]]],[11,"from","","",1034,[[]]],[11,"borrow","","",1034,[[]]],[11,"borrow_mut","","",1034,[[]]],[11,"try_from","","",1034,[[],["result",4]]],[11,"into","","",1034,[[]]],[11,"try_into","","",1034,[[],["result",4]]],[11,"type_id","","",1034,[[],["typeid",3]]],[11,"from","","",1035,[[]]],[11,"borrow","","",1035,[[]]],[11,"borrow_mut","","",1035,[[]]],[11,"try_from","","",1035,[[],["result",4]]],[11,"into","","",1035,[[]]],[11,"try_into","","",1035,[[],["result",4]]],[11,"type_id","","",1035,[[],["typeid",3]]],[11,"from","","",1036,[[]]],[11,"borrow","","",1036,[[]]],[11,"borrow_mut","","",1036,[[]]],[11,"try_from","","",1036,[[],["result",4]]],[11,"into","","",1036,[[]]],[11,"try_into","","",1036,[[],["result",4]]],[11,"type_id","","",1036,[[],["typeid",3]]],[11,"from","","",1037,[[]]],[11,"borrow","","",1037,[[]]],[11,"borrow_mut","","",1037,[[]]],[11,"try_from","","",1037,[[],["result",4]]],[11,"into","","",1037,[[]]],[11,"try_into","","",1037,[[],["result",4]]],[11,"type_id","","",1037,[[],["typeid",3]]],[11,"from","","",1038,[[]]],[11,"borrow","","",1038,[[]]],[11,"borrow_mut","","",1038,[[]]],[11,"try_from","","",1038,[[],["result",4]]],[11,"into","","",1038,[[]]],[11,"try_into","","",1038,[[],["result",4]]],[11,"type_id","","",1038,[[],["typeid",3]]],[11,"from","","",1039,[[]]],[11,"borrow","","",1039,[[]]],[11,"borrow_mut","","",1039,[[]]],[11,"try_from","","",1039,[[],["result",4]]],[11,"into","","",1039,[[]]],[11,"try_into","","",1039,[[],["result",4]]],[11,"type_id","","",1039,[[],["typeid",3]]],[11,"from","","",1040,[[]]],[11,"borrow","","",1040,[[]]],[11,"borrow_mut","","",1040,[[]]],[11,"try_from","","",1040,[[],["result",4]]],[11,"into","","",1040,[[]]],[11,"try_into","","",1040,[[],["result",4]]],[11,"type_id","","",1040,[[],["typeid",3]]],[11,"from","","",1041,[[]]],[11,"borrow","","",1041,[[]]],[11,"borrow_mut","","",1041,[[]]],[11,"try_from","","",1041,[[],["result",4]]],[11,"into","","",1041,[[]]],[11,"try_into","","",1041,[[],["result",4]]],[11,"type_id","","",1041,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::intenset","",1044,[[]]],[11,"borrow","","",1044,[[]]],[11,"borrow_mut","","",1044,[[]]],[11,"try_from","","",1044,[[],["result",4]]],[11,"into","","",1044,[[]]],[11,"try_into","","",1044,[[],["result",4]]],[11,"type_id","","",1044,[[],["typeid",3]]],[11,"from","","",1045,[[]]],[11,"borrow","","",1045,[[]]],[11,"borrow_mut","","",1045,[[]]],[11,"try_from","","",1045,[[],["result",4]]],[11,"into","","",1045,[[]]],[11,"try_into","","",1045,[[],["result",4]]],[11,"type_id","","",1045,[[],["typeid",3]]],[11,"from","","",1046,[[]]],[11,"borrow","","",1046,[[]]],[11,"borrow_mut","","",1046,[[]]],[11,"try_from","","",1046,[[],["result",4]]],[11,"into","","",1046,[[]]],[11,"try_into","","",1046,[[],["result",4]]],[11,"type_id","","",1046,[[],["typeid",3]]],[11,"from","","",1047,[[]]],[11,"borrow","","",1047,[[]]],[11,"borrow_mut","","",1047,[[]]],[11,"try_from","","",1047,[[],["result",4]]],[11,"into","","",1047,[[]]],[11,"try_into","","",1047,[[],["result",4]]],[11,"type_id","","",1047,[[],["typeid",3]]],[11,"from","","",1048,[[]]],[11,"borrow","","",1048,[[]]],[11,"borrow_mut","","",1048,[[]]],[11,"try_from","","",1048,[[],["result",4]]],[11,"into","","",1048,[[]]],[11,"try_into","","",1048,[[],["result",4]]],[11,"type_id","","",1048,[[],["typeid",3]]],[11,"from","","",1049,[[]]],[11,"borrow","","",1049,[[]]],[11,"borrow_mut","","",1049,[[]]],[11,"try_from","","",1049,[[],["result",4]]],[11,"into","","",1049,[[]]],[11,"try_into","","",1049,[[],["result",4]]],[11,"type_id","","",1049,[[],["typeid",3]]],[11,"from","","",1050,[[]]],[11,"borrow","","",1050,[[]]],[11,"borrow_mut","","",1050,[[]]],[11,"try_from","","",1050,[[],["result",4]]],[11,"into","","",1050,[[]]],[11,"try_into","","",1050,[[],["result",4]]],[11,"type_id","","",1050,[[],["typeid",3]]],[11,"from","","",1051,[[]]],[11,"borrow","","",1051,[[]]],[11,"borrow_mut","","",1051,[[]]],[11,"try_from","","",1051,[[],["result",4]]],[11,"into","","",1051,[[]]],[11,"try_into","","",1051,[[],["result",4]]],[11,"type_id","","",1051,[[],["typeid",3]]],[11,"from","","",1052,[[]]],[11,"borrow","","",1052,[[]]],[11,"borrow_mut","","",1052,[[]]],[11,"try_from","","",1052,[[],["result",4]]],[11,"into","","",1052,[[]]],[11,"try_into","","",1052,[[],["result",4]]],[11,"type_id","","",1052,[[],["typeid",3]]],[11,"from","","",1053,[[]]],[11,"borrow","","",1053,[[]]],[11,"borrow_mut","","",1053,[[]]],[11,"try_from","","",1053,[[],["result",4]]],[11,"into","","",1053,[[]]],[11,"try_into","","",1053,[[],["result",4]]],[11,"type_id","","",1053,[[],["typeid",3]]],[11,"from","","",1054,[[]]],[11,"borrow","","",1054,[[]]],[11,"borrow_mut","","",1054,[[]]],[11,"try_from","","",1054,[[],["result",4]]],[11,"into","","",1054,[[]]],[11,"try_into","","",1054,[[],["result",4]]],[11,"type_id","","",1054,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::intflag","",1057,[[]]],[11,"borrow","","",1057,[[]]],[11,"borrow_mut","","",1057,[[]]],[11,"try_from","","",1057,[[],["result",4]]],[11,"into","","",1057,[[]]],[11,"try_into","","",1057,[[],["result",4]]],[11,"type_id","","",1057,[[],["typeid",3]]],[11,"from","","",1058,[[]]],[11,"borrow","","",1058,[[]]],[11,"borrow_mut","","",1058,[[]]],[11,"try_from","","",1058,[[],["result",4]]],[11,"into","","",1058,[[]]],[11,"try_into","","",1058,[[],["result",4]]],[11,"type_id","","",1058,[[],["typeid",3]]],[11,"from","","",1059,[[]]],[11,"borrow","","",1059,[[]]],[11,"borrow_mut","","",1059,[[]]],[11,"try_from","","",1059,[[],["result",4]]],[11,"into","","",1059,[[]]],[11,"try_into","","",1059,[[],["result",4]]],[11,"type_id","","",1059,[[],["typeid",3]]],[11,"from","","",1060,[[]]],[11,"borrow","","",1060,[[]]],[11,"borrow_mut","","",1060,[[]]],[11,"try_from","","",1060,[[],["result",4]]],[11,"into","","",1060,[[]]],[11,"try_into","","",1060,[[],["result",4]]],[11,"type_id","","",1060,[[],["typeid",3]]],[11,"from","","",1061,[[]]],[11,"borrow","","",1061,[[]]],[11,"borrow_mut","","",1061,[[]]],[11,"try_from","","",1061,[[],["result",4]]],[11,"into","","",1061,[[]]],[11,"try_into","","",1061,[[],["result",4]]],[11,"type_id","","",1061,[[],["typeid",3]]],[11,"from","","",1062,[[]]],[11,"borrow","","",1062,[[]]],[11,"borrow_mut","","",1062,[[]]],[11,"try_from","","",1062,[[],["result",4]]],[11,"into","","",1062,[[]]],[11,"try_into","","",1062,[[],["result",4]]],[11,"type_id","","",1062,[[],["typeid",3]]],[11,"from","","",1063,[[]]],[11,"borrow","","",1063,[[]]],[11,"borrow_mut","","",1063,[[]]],[11,"try_from","","",1063,[[],["result",4]]],[11,"into","","",1063,[[]]],[11,"try_into","","",1063,[[],["result",4]]],[11,"type_id","","",1063,[[],["typeid",3]]],[11,"from","","",1064,[[]]],[11,"borrow","","",1064,[[]]],[11,"borrow_mut","","",1064,[[]]],[11,"try_from","","",1064,[[],["result",4]]],[11,"into","","",1064,[[]]],[11,"try_into","","",1064,[[],["result",4]]],[11,"type_id","","",1064,[[],["typeid",3]]],[11,"from","","",1065,[[]]],[11,"borrow","","",1065,[[]]],[11,"borrow_mut","","",1065,[[]]],[11,"try_from","","",1065,[[],["result",4]]],[11,"into","","",1065,[[]]],[11,"try_into","","",1065,[[],["result",4]]],[11,"type_id","","",1065,[[],["typeid",3]]],[11,"from","","",1066,[[]]],[11,"borrow","","",1066,[[]]],[11,"borrow_mut","","",1066,[[]]],[11,"try_from","","",1066,[[],["result",4]]],[11,"into","","",1066,[[]]],[11,"try_into","","",1066,[[],["result",4]]],[11,"type_id","","",1066,[[],["typeid",3]]],[11,"from","","",1067,[[]]],[11,"borrow","","",1067,[[]]],[11,"borrow_mut","","",1067,[[]]],[11,"try_from","","",1067,[[],["result",4]]],[11,"into","","",1067,[[]]],[11,"try_into","","",1067,[[],["result",4]]],[11,"type_id","","",1067,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::status","",1070,[[]]],[11,"borrow","","",1070,[[]]],[11,"borrow_mut","","",1070,[[]]],[11,"try_from","","",1070,[[],["result",4]]],[11,"into","","",1070,[[]]],[11,"try_into","","",1070,[[],["result",4]]],[11,"type_id","","",1070,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::addr","",1073,[[]]],[11,"borrow","","",1073,[[]]],[11,"borrow_mut","","",1073,[[]]],[11,"try_from","","",1073,[[],["result",4]]],[11,"into","","",1073,[[]]],[11,"try_into","","",1073,[[],["result",4]]],[11,"type_id","","",1073,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::eccerr","",1078,[[]]],[11,"borrow","","",1078,[[]]],[11,"borrow_mut","","",1078,[[]]],[11,"try_from","","",1078,[[],["result",4]]],[11,"into","","",1078,[[]]],[11,"try_into","","",1078,[[],["result",4]]],[11,"type_id","","",1078,[[],["typeid",3]]],[11,"from","","",1079,[[]]],[11,"borrow","","",1079,[[]]],[11,"borrow_mut","","",1079,[[]]],[11,"try_from","","",1079,[[],["result",4]]],[11,"into","","",1079,[[]]],[11,"try_into","","",1079,[[],["result",4]]],[11,"type_id","","",1079,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::dbgctrl","",1083,[[]]],[11,"borrow","","",1083,[[]]],[11,"borrow_mut","","",1083,[[]]],[11,"try_from","","",1083,[[],["result",4]]],[11,"into","","",1083,[[]]],[11,"try_into","","",1083,[[],["result",4]]],[11,"type_id","","",1083,[[],["typeid",3]]],[11,"from","","",1084,[[]]],[11,"borrow","","",1084,[[]]],[11,"borrow_mut","","",1084,[[]]],[11,"try_from","","",1084,[[],["result",4]]],[11,"into","","",1084,[[]]],[11,"try_into","","",1084,[[],["result",4]]],[11,"type_id","","",1084,[[],["typeid",3]]],[11,"from","atsamd51g::nvmctrl::seecfg","",1089,[[]]],[11,"borrow","","",1089,[[]]],[11,"borrow_mut","","",1089,[[]]],[11,"try_from","","",1089,[[],["result",4]]],[11,"into","","",1089,[[]]],[11,"try_into","","",1089,[[],["result",4]]],[11,"type_id","","",1089,[[],["typeid",3]]],[11,"from","","",1090,[[]]],[11,"borrow","","",1090,[[]]],[11,"borrow_mut","","",1090,[[]]],[11,"try_from","","",1090,[[],["result",4]]],[11,"into","","",1090,[[]]],[11,"try_into","","",1090,[[],["result",4]]],[11,"type_id","","",1090,[[],["typeid",3]]],[11,"from","","",1087,[[]]],[11,"borrow","","",1087,[[]]],[11,"borrow_mut","","",1087,[[]]],[11,"try_from","","",1087,[[],["result",4]]],[11,"into","","",1087,[[]]],[11,"try_into","","",1087,[[],["result",4]]],[11,"type_id","","",1087,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl","",1094,[[]]],[11,"borrow","","",1094,[[]]],[11,"borrow_mut","","",1094,[[]]],[11,"try_from","","",1094,[[],["result",4]]],[11,"into","","",1094,[[]]],[11,"try_into","","",1094,[[],["result",4]]],[11,"type_id","","",1094,[[],["typeid",3]]],[11,"from","","",1095,[[]]],[11,"borrow","","",1095,[[]]],[11,"borrow_mut","","",1095,[[]]],[11,"try_from","","",1095,[[],["result",4]]],[11,"into","","",1095,[[]]],[11,"try_into","","",1095,[[],["result",4]]],[11,"type_id","","",1095,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dpll::dpllctrla","",1096,[[]]],[11,"borrow","","",1096,[[]]],[11,"borrow_mut","","",1096,[[]]],[11,"try_from","","",1096,[[],["result",4]]],[11,"into","","",1096,[[]]],[11,"try_into","","",1096,[[],["result",4]]],[11,"type_id","","",1096,[[],["typeid",3]]],[11,"from","","",1097,[[]]],[11,"borrow","","",1097,[[]]],[11,"borrow_mut","","",1097,[[]]],[11,"try_from","","",1097,[[],["result",4]]],[11,"into","","",1097,[[]]],[11,"try_into","","",1097,[[],["result",4]]],[11,"type_id","","",1097,[[],["typeid",3]]],[11,"from","","",1098,[[]]],[11,"borrow","","",1098,[[]]],[11,"borrow_mut","","",1098,[[]]],[11,"try_from","","",1098,[[],["result",4]]],[11,"into","","",1098,[[]]],[11,"try_into","","",1098,[[],["result",4]]],[11,"type_id","","",1098,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dpll::dpllratio","",1101,[[]]],[11,"borrow","","",1101,[[]]],[11,"borrow_mut","","",1101,[[]]],[11,"try_from","","",1101,[[],["result",4]]],[11,"into","","",1101,[[]]],[11,"try_into","","",1101,[[],["result",4]]],[11,"type_id","","",1101,[[],["typeid",3]]],[11,"from","","",1102,[[]]],[11,"borrow","","",1102,[[]]],[11,"borrow_mut","","",1102,[[]]],[11,"try_from","","",1102,[[],["result",4]]],[11,"into","","",1102,[[]]],[11,"try_into","","",1102,[[],["result",4]]],[11,"type_id","","",1102,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dpll::dpllctrlb","",1110,[[]]],[11,"borrow","","",1110,[[]]],[11,"borrow_mut","","",1110,[[]]],[11,"try_from","","",1110,[[],["result",4]]],[11,"into","","",1110,[[]]],[11,"try_into","","",1110,[[],["result",4]]],[11,"type_id","","",1110,[[],["typeid",3]]],[11,"from","","",1111,[[]]],[11,"borrow","","",1111,[[]]],[11,"borrow_mut","","",1111,[[]]],[11,"try_from","","",1111,[[],["result",4]]],[11,"into","","",1111,[[]]],[11,"try_into","","",1111,[[],["result",4]]],[11,"type_id","","",1111,[[],["typeid",3]]],[11,"from","","",1113,[[]]],[11,"borrow","","",1113,[[]]],[11,"borrow_mut","","",1113,[[]]],[11,"try_from","","",1113,[[],["result",4]]],[11,"into","","",1113,[[]]],[11,"try_into","","",1113,[[],["result",4]]],[11,"type_id","","",1113,[[],["typeid",3]]],[11,"from","","",1115,[[]]],[11,"borrow","","",1115,[[]]],[11,"borrow_mut","","",1115,[[]]],[11,"try_from","","",1115,[[],["result",4]]],[11,"into","","",1115,[[]]],[11,"try_into","","",1115,[[],["result",4]]],[11,"type_id","","",1115,[[],["typeid",3]]],[11,"from","","",1116,[[]]],[11,"borrow","","",1116,[[]]],[11,"borrow_mut","","",1116,[[]]],[11,"try_from","","",1116,[[],["result",4]]],[11,"into","","",1116,[[]]],[11,"try_into","","",1116,[[],["result",4]]],[11,"type_id","","",1116,[[],["typeid",3]]],[11,"from","","",1118,[[]]],[11,"borrow","","",1118,[[]]],[11,"borrow_mut","","",1118,[[]]],[11,"try_from","","",1118,[[],["result",4]]],[11,"into","","",1118,[[]]],[11,"try_into","","",1118,[[],["result",4]]],[11,"type_id","","",1118,[[],["typeid",3]]],[11,"from","","",1119,[[]]],[11,"borrow","","",1119,[[]]],[11,"borrow_mut","","",1119,[[]]],[11,"try_from","","",1119,[[],["result",4]]],[11,"into","","",1119,[[]]],[11,"try_into","","",1119,[[],["result",4]]],[11,"type_id","","",1119,[[],["typeid",3]]],[11,"from","","",1120,[[]]],[11,"borrow","","",1120,[[]]],[11,"borrow_mut","","",1120,[[]]],[11,"try_from","","",1120,[[],["result",4]]],[11,"into","","",1120,[[]]],[11,"try_into","","",1120,[[],["result",4]]],[11,"type_id","","",1120,[[],["typeid",3]]],[11,"from","","",1105,[[]]],[11,"borrow","","",1105,[[]]],[11,"borrow_mut","","",1105,[[]]],[11,"try_from","","",1105,[[],["result",4]]],[11,"into","","",1105,[[]]],[11,"try_into","","",1105,[[],["result",4]]],[11,"type_id","","",1105,[[],["typeid",3]]],[11,"from","","",1106,[[]]],[11,"borrow","","",1106,[[]]],[11,"borrow_mut","","",1106,[[]]],[11,"try_from","","",1106,[[],["result",4]]],[11,"into","","",1106,[[]]],[11,"try_into","","",1106,[[],["result",4]]],[11,"type_id","","",1106,[[],["typeid",3]]],[11,"from","","",1107,[[]]],[11,"borrow","","",1107,[[]]],[11,"borrow_mut","","",1107,[[]]],[11,"try_from","","",1107,[[],["result",4]]],[11,"into","","",1107,[[]]],[11,"try_into","","",1107,[[],["result",4]]],[11,"type_id","","",1107,[[],["typeid",3]]],[11,"from","","",1108,[[]]],[11,"borrow","","",1108,[[]]],[11,"borrow_mut","","",1108,[[]]],[11,"try_from","","",1108,[[],["result",4]]],[11,"into","","",1108,[[]]],[11,"try_into","","",1108,[[],["result",4]]],[11,"type_id","","",1108,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::evctrl","",1125,[[]]],[11,"borrow","","",1125,[[]]],[11,"borrow_mut","","",1125,[[]]],[11,"try_from","","",1125,[[],["result",4]]],[11,"into","","",1125,[[]]],[11,"try_into","","",1125,[[],["result",4]]],[11,"type_id","","",1125,[[],["typeid",3]]],[11,"from","","",1126,[[]]],[11,"borrow","","",1126,[[]]],[11,"borrow_mut","","",1126,[[]]],[11,"try_from","","",1126,[[],["result",4]]],[11,"into","","",1126,[[]]],[11,"try_into","","",1126,[[],["result",4]]],[11,"type_id","","",1126,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::intenclr","",1129,[[]]],[11,"borrow","","",1129,[[]]],[11,"borrow_mut","","",1129,[[]]],[11,"try_from","","",1129,[[],["result",4]]],[11,"into","","",1129,[[]]],[11,"try_into","","",1129,[[],["result",4]]],[11,"type_id","","",1129,[[],["typeid",3]]],[11,"from","","",1130,[[]]],[11,"borrow","","",1130,[[]]],[11,"borrow_mut","","",1130,[[]]],[11,"try_from","","",1130,[[],["result",4]]],[11,"into","","",1130,[[]]],[11,"try_into","","",1130,[[],["result",4]]],[11,"type_id","","",1130,[[],["typeid",3]]],[11,"from","","",1131,[[]]],[11,"borrow","","",1131,[[]]],[11,"borrow_mut","","",1131,[[]]],[11,"try_from","","",1131,[[],["result",4]]],[11,"into","","",1131,[[]]],[11,"try_into","","",1131,[[],["result",4]]],[11,"type_id","","",1131,[[],["typeid",3]]],[11,"from","","",1132,[[]]],[11,"borrow","","",1132,[[]]],[11,"borrow_mut","","",1132,[[]]],[11,"try_from","","",1132,[[],["result",4]]],[11,"into","","",1132,[[]]],[11,"try_into","","",1132,[[],["result",4]]],[11,"type_id","","",1132,[[],["typeid",3]]],[11,"from","","",1133,[[]]],[11,"borrow","","",1133,[[]]],[11,"borrow_mut","","",1133,[[]]],[11,"try_from","","",1133,[[],["result",4]]],[11,"into","","",1133,[[]]],[11,"try_into","","",1133,[[],["result",4]]],[11,"type_id","","",1133,[[],["typeid",3]]],[11,"from","","",1134,[[]]],[11,"borrow","","",1134,[[]]],[11,"borrow_mut","","",1134,[[]]],[11,"try_from","","",1134,[[],["result",4]]],[11,"into","","",1134,[[]]],[11,"try_into","","",1134,[[],["result",4]]],[11,"type_id","","",1134,[[],["typeid",3]]],[11,"from","","",1135,[[]]],[11,"borrow","","",1135,[[]]],[11,"borrow_mut","","",1135,[[]]],[11,"try_from","","",1135,[[],["result",4]]],[11,"into","","",1135,[[]]],[11,"try_into","","",1135,[[],["result",4]]],[11,"type_id","","",1135,[[],["typeid",3]]],[11,"from","","",1136,[[]]],[11,"borrow","","",1136,[[]]],[11,"borrow_mut","","",1136,[[]]],[11,"try_from","","",1136,[[],["result",4]]],[11,"into","","",1136,[[]]],[11,"try_into","","",1136,[[],["result",4]]],[11,"type_id","","",1136,[[],["typeid",3]]],[11,"from","","",1137,[[]]],[11,"borrow","","",1137,[[]]],[11,"borrow_mut","","",1137,[[]]],[11,"try_from","","",1137,[[],["result",4]]],[11,"into","","",1137,[[]]],[11,"try_into","","",1137,[[],["result",4]]],[11,"type_id","","",1137,[[],["typeid",3]]],[11,"from","","",1138,[[]]],[11,"borrow","","",1138,[[]]],[11,"borrow_mut","","",1138,[[]]],[11,"try_from","","",1138,[[],["result",4]]],[11,"into","","",1138,[[]]],[11,"try_into","","",1138,[[],["result",4]]],[11,"type_id","","",1138,[[],["typeid",3]]],[11,"from","","",1139,[[]]],[11,"borrow","","",1139,[[]]],[11,"borrow_mut","","",1139,[[]]],[11,"try_from","","",1139,[[],["result",4]]],[11,"into","","",1139,[[]]],[11,"try_into","","",1139,[[],["result",4]]],[11,"type_id","","",1139,[[],["typeid",3]]],[11,"from","","",1140,[[]]],[11,"borrow","","",1140,[[]]],[11,"borrow_mut","","",1140,[[]]],[11,"try_from","","",1140,[[],["result",4]]],[11,"into","","",1140,[[]]],[11,"try_into","","",1140,[[],["result",4]]],[11,"type_id","","",1140,[[],["typeid",3]]],[11,"from","","",1141,[[]]],[11,"borrow","","",1141,[[]]],[11,"borrow_mut","","",1141,[[]]],[11,"try_from","","",1141,[[],["result",4]]],[11,"into","","",1141,[[]]],[11,"try_into","","",1141,[[],["result",4]]],[11,"type_id","","",1141,[[],["typeid",3]]],[11,"from","","",1142,[[]]],[11,"borrow","","",1142,[[]]],[11,"borrow_mut","","",1142,[[]]],[11,"try_from","","",1142,[[],["result",4]]],[11,"into","","",1142,[[]]],[11,"try_into","","",1142,[[],["result",4]]],[11,"type_id","","",1142,[[],["typeid",3]]],[11,"from","","",1143,[[]]],[11,"borrow","","",1143,[[]]],[11,"borrow_mut","","",1143,[[]]],[11,"try_from","","",1143,[[],["result",4]]],[11,"into","","",1143,[[]]],[11,"try_into","","",1143,[[],["result",4]]],[11,"type_id","","",1143,[[],["typeid",3]]],[11,"from","","",1144,[[]]],[11,"borrow","","",1144,[[]]],[11,"borrow_mut","","",1144,[[]]],[11,"try_from","","",1144,[[],["result",4]]],[11,"into","","",1144,[[]]],[11,"try_into","","",1144,[[],["result",4]]],[11,"type_id","","",1144,[[],["typeid",3]]],[11,"from","","",1145,[[]]],[11,"borrow","","",1145,[[]]],[11,"borrow_mut","","",1145,[[]]],[11,"try_from","","",1145,[[],["result",4]]],[11,"into","","",1145,[[]]],[11,"try_into","","",1145,[[],["result",4]]],[11,"type_id","","",1145,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::intenset","",1148,[[]]],[11,"borrow","","",1148,[[]]],[11,"borrow_mut","","",1148,[[]]],[11,"try_from","","",1148,[[],["result",4]]],[11,"into","","",1148,[[]]],[11,"try_into","","",1148,[[],["result",4]]],[11,"type_id","","",1148,[[],["typeid",3]]],[11,"from","","",1149,[[]]],[11,"borrow","","",1149,[[]]],[11,"borrow_mut","","",1149,[[]]],[11,"try_from","","",1149,[[],["result",4]]],[11,"into","","",1149,[[]]],[11,"try_into","","",1149,[[],["result",4]]],[11,"type_id","","",1149,[[],["typeid",3]]],[11,"from","","",1150,[[]]],[11,"borrow","","",1150,[[]]],[11,"borrow_mut","","",1150,[[]]],[11,"try_from","","",1150,[[],["result",4]]],[11,"into","","",1150,[[]]],[11,"try_into","","",1150,[[],["result",4]]],[11,"type_id","","",1150,[[],["typeid",3]]],[11,"from","","",1151,[[]]],[11,"borrow","","",1151,[[]]],[11,"borrow_mut","","",1151,[[]]],[11,"try_from","","",1151,[[],["result",4]]],[11,"into","","",1151,[[]]],[11,"try_into","","",1151,[[],["result",4]]],[11,"type_id","","",1151,[[],["typeid",3]]],[11,"from","","",1152,[[]]],[11,"borrow","","",1152,[[]]],[11,"borrow_mut","","",1152,[[]]],[11,"try_from","","",1152,[[],["result",4]]],[11,"into","","",1152,[[]]],[11,"try_into","","",1152,[[],["result",4]]],[11,"type_id","","",1152,[[],["typeid",3]]],[11,"from","","",1153,[[]]],[11,"borrow","","",1153,[[]]],[11,"borrow_mut","","",1153,[[]]],[11,"try_from","","",1153,[[],["result",4]]],[11,"into","","",1153,[[]]],[11,"try_into","","",1153,[[],["result",4]]],[11,"type_id","","",1153,[[],["typeid",3]]],[11,"from","","",1154,[[]]],[11,"borrow","","",1154,[[]]],[11,"borrow_mut","","",1154,[[]]],[11,"try_from","","",1154,[[],["result",4]]],[11,"into","","",1154,[[]]],[11,"try_into","","",1154,[[],["result",4]]],[11,"type_id","","",1154,[[],["typeid",3]]],[11,"from","","",1155,[[]]],[11,"borrow","","",1155,[[]]],[11,"borrow_mut","","",1155,[[]]],[11,"try_from","","",1155,[[],["result",4]]],[11,"into","","",1155,[[]]],[11,"try_into","","",1155,[[],["result",4]]],[11,"type_id","","",1155,[[],["typeid",3]]],[11,"from","","",1156,[[]]],[11,"borrow","","",1156,[[]]],[11,"borrow_mut","","",1156,[[]]],[11,"try_from","","",1156,[[],["result",4]]],[11,"into","","",1156,[[]]],[11,"try_into","","",1156,[[],["result",4]]],[11,"type_id","","",1156,[[],["typeid",3]]],[11,"from","","",1157,[[]]],[11,"borrow","","",1157,[[]]],[11,"borrow_mut","","",1157,[[]]],[11,"try_from","","",1157,[[],["result",4]]],[11,"into","","",1157,[[]]],[11,"try_into","","",1157,[[],["result",4]]],[11,"type_id","","",1157,[[],["typeid",3]]],[11,"from","","",1158,[[]]],[11,"borrow","","",1158,[[]]],[11,"borrow_mut","","",1158,[[]]],[11,"try_from","","",1158,[[],["result",4]]],[11,"into","","",1158,[[]]],[11,"try_into","","",1158,[[],["result",4]]],[11,"type_id","","",1158,[[],["typeid",3]]],[11,"from","","",1159,[[]]],[11,"borrow","","",1159,[[]]],[11,"borrow_mut","","",1159,[[]]],[11,"try_from","","",1159,[[],["result",4]]],[11,"into","","",1159,[[]]],[11,"try_into","","",1159,[[],["result",4]]],[11,"type_id","","",1159,[[],["typeid",3]]],[11,"from","","",1160,[[]]],[11,"borrow","","",1160,[[]]],[11,"borrow_mut","","",1160,[[]]],[11,"try_from","","",1160,[[],["result",4]]],[11,"into","","",1160,[[]]],[11,"try_into","","",1160,[[],["result",4]]],[11,"type_id","","",1160,[[],["typeid",3]]],[11,"from","","",1161,[[]]],[11,"borrow","","",1161,[[]]],[11,"borrow_mut","","",1161,[[]]],[11,"try_from","","",1161,[[],["result",4]]],[11,"into","","",1161,[[]]],[11,"try_into","","",1161,[[],["result",4]]],[11,"type_id","","",1161,[[],["typeid",3]]],[11,"from","","",1162,[[]]],[11,"borrow","","",1162,[[]]],[11,"borrow_mut","","",1162,[[]]],[11,"try_from","","",1162,[[],["result",4]]],[11,"into","","",1162,[[]]],[11,"try_into","","",1162,[[],["result",4]]],[11,"type_id","","",1162,[[],["typeid",3]]],[11,"from","","",1163,[[]]],[11,"borrow","","",1163,[[]]],[11,"borrow_mut","","",1163,[[]]],[11,"try_from","","",1163,[[],["result",4]]],[11,"into","","",1163,[[]]],[11,"try_into","","",1163,[[],["result",4]]],[11,"type_id","","",1163,[[],["typeid",3]]],[11,"from","","",1164,[[]]],[11,"borrow","","",1164,[[]]],[11,"borrow_mut","","",1164,[[]]],[11,"try_from","","",1164,[[],["result",4]]],[11,"into","","",1164,[[]]],[11,"try_into","","",1164,[[],["result",4]]],[11,"type_id","","",1164,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::intflag","",1167,[[]]],[11,"borrow","","",1167,[[]]],[11,"borrow_mut","","",1167,[[]]],[11,"try_from","","",1167,[[],["result",4]]],[11,"into","","",1167,[[]]],[11,"try_into","","",1167,[[],["result",4]]],[11,"type_id","","",1167,[[],["typeid",3]]],[11,"from","","",1168,[[]]],[11,"borrow","","",1168,[[]]],[11,"borrow_mut","","",1168,[[]]],[11,"try_from","","",1168,[[],["result",4]]],[11,"into","","",1168,[[]]],[11,"try_into","","",1168,[[],["result",4]]],[11,"type_id","","",1168,[[],["typeid",3]]],[11,"from","","",1169,[[]]],[11,"borrow","","",1169,[[]]],[11,"borrow_mut","","",1169,[[]]],[11,"try_from","","",1169,[[],["result",4]]],[11,"into","","",1169,[[]]],[11,"try_into","","",1169,[[],["result",4]]],[11,"type_id","","",1169,[[],["typeid",3]]],[11,"from","","",1170,[[]]],[11,"borrow","","",1170,[[]]],[11,"borrow_mut","","",1170,[[]]],[11,"try_from","","",1170,[[],["result",4]]],[11,"into","","",1170,[[]]],[11,"try_into","","",1170,[[],["result",4]]],[11,"type_id","","",1170,[[],["typeid",3]]],[11,"from","","",1171,[[]]],[11,"borrow","","",1171,[[]]],[11,"borrow_mut","","",1171,[[]]],[11,"try_from","","",1171,[[],["result",4]]],[11,"into","","",1171,[[]]],[11,"try_into","","",1171,[[],["result",4]]],[11,"type_id","","",1171,[[],["typeid",3]]],[11,"from","","",1172,[[]]],[11,"borrow","","",1172,[[]]],[11,"borrow_mut","","",1172,[[]]],[11,"try_from","","",1172,[[],["result",4]]],[11,"into","","",1172,[[]]],[11,"try_into","","",1172,[[],["result",4]]],[11,"type_id","","",1172,[[],["typeid",3]]],[11,"from","","",1173,[[]]],[11,"borrow","","",1173,[[]]],[11,"borrow_mut","","",1173,[[]]],[11,"try_from","","",1173,[[],["result",4]]],[11,"into","","",1173,[[]]],[11,"try_into","","",1173,[[],["result",4]]],[11,"type_id","","",1173,[[],["typeid",3]]],[11,"from","","",1174,[[]]],[11,"borrow","","",1174,[[]]],[11,"borrow_mut","","",1174,[[]]],[11,"try_from","","",1174,[[],["result",4]]],[11,"into","","",1174,[[]]],[11,"try_into","","",1174,[[],["result",4]]],[11,"type_id","","",1174,[[],["typeid",3]]],[11,"from","","",1175,[[]]],[11,"borrow","","",1175,[[]]],[11,"borrow_mut","","",1175,[[]]],[11,"try_from","","",1175,[[],["result",4]]],[11,"into","","",1175,[[]]],[11,"try_into","","",1175,[[],["result",4]]],[11,"type_id","","",1175,[[],["typeid",3]]],[11,"from","","",1176,[[]]],[11,"borrow","","",1176,[[]]],[11,"borrow_mut","","",1176,[[]]],[11,"try_from","","",1176,[[],["result",4]]],[11,"into","","",1176,[[]]],[11,"try_into","","",1176,[[],["result",4]]],[11,"type_id","","",1176,[[],["typeid",3]]],[11,"from","","",1177,[[]]],[11,"borrow","","",1177,[[]]],[11,"borrow_mut","","",1177,[[]]],[11,"try_from","","",1177,[[],["result",4]]],[11,"into","","",1177,[[]]],[11,"try_into","","",1177,[[],["result",4]]],[11,"type_id","","",1177,[[],["typeid",3]]],[11,"from","","",1178,[[]]],[11,"borrow","","",1178,[[]]],[11,"borrow_mut","","",1178,[[]]],[11,"try_from","","",1178,[[],["result",4]]],[11,"into","","",1178,[[]]],[11,"try_into","","",1178,[[],["result",4]]],[11,"type_id","","",1178,[[],["typeid",3]]],[11,"from","","",1179,[[]]],[11,"borrow","","",1179,[[]]],[11,"borrow_mut","","",1179,[[]]],[11,"try_from","","",1179,[[],["result",4]]],[11,"into","","",1179,[[]]],[11,"try_into","","",1179,[[],["result",4]]],[11,"type_id","","",1179,[[],["typeid",3]]],[11,"from","","",1180,[[]]],[11,"borrow","","",1180,[[]]],[11,"borrow_mut","","",1180,[[]]],[11,"try_from","","",1180,[[],["result",4]]],[11,"into","","",1180,[[]]],[11,"try_into","","",1180,[[],["result",4]]],[11,"type_id","","",1180,[[],["typeid",3]]],[11,"from","","",1181,[[]]],[11,"borrow","","",1181,[[]]],[11,"borrow_mut","","",1181,[[]]],[11,"try_from","","",1181,[[],["result",4]]],[11,"into","","",1181,[[]]],[11,"try_into","","",1181,[[],["result",4]]],[11,"type_id","","",1181,[[],["typeid",3]]],[11,"from","","",1182,[[]]],[11,"borrow","","",1182,[[]]],[11,"borrow_mut","","",1182,[[]]],[11,"try_from","","",1182,[[],["result",4]]],[11,"into","","",1182,[[]]],[11,"try_into","","",1182,[[],["result",4]]],[11,"type_id","","",1182,[[],["typeid",3]]],[11,"from","","",1183,[[]]],[11,"borrow","","",1183,[[]]],[11,"borrow_mut","","",1183,[[]]],[11,"try_from","","",1183,[[],["result",4]]],[11,"into","","",1183,[[]]],[11,"try_into","","",1183,[[],["result",4]]],[11,"type_id","","",1183,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::xoscctrl","",1189,[[]]],[11,"borrow","","",1189,[[]]],[11,"borrow_mut","","",1189,[[]]],[11,"try_from","","",1189,[[],["result",4]]],[11,"into","","",1189,[[]]],[11,"try_into","","",1189,[[],["result",4]]],[11,"type_id","","",1189,[[],["typeid",3]]],[11,"from","","",1190,[[]]],[11,"borrow","","",1190,[[]]],[11,"borrow_mut","","",1190,[[]]],[11,"try_from","","",1190,[[],["result",4]]],[11,"into","","",1190,[[]]],[11,"try_into","","",1190,[[],["result",4]]],[11,"type_id","","",1190,[[],["typeid",3]]],[11,"from","","",1191,[[]]],[11,"borrow","","",1191,[[]]],[11,"borrow_mut","","",1191,[[]]],[11,"try_from","","",1191,[[],["result",4]]],[11,"into","","",1191,[[]]],[11,"try_into","","",1191,[[],["result",4]]],[11,"type_id","","",1191,[[],["typeid",3]]],[11,"from","","",1192,[[]]],[11,"borrow","","",1192,[[]]],[11,"borrow_mut","","",1192,[[]]],[11,"try_from","","",1192,[[],["result",4]]],[11,"into","","",1192,[[]]],[11,"try_into","","",1192,[[],["result",4]]],[11,"type_id","","",1192,[[],["typeid",3]]],[11,"from","","",1193,[[]]],[11,"borrow","","",1193,[[]]],[11,"borrow_mut","","",1193,[[]]],[11,"try_from","","",1193,[[],["result",4]]],[11,"into","","",1193,[[]]],[11,"try_into","","",1193,[[],["result",4]]],[11,"type_id","","",1193,[[],["typeid",3]]],[11,"from","","",1194,[[]]],[11,"borrow","","",1194,[[]]],[11,"borrow_mut","","",1194,[[]]],[11,"try_from","","",1194,[[],["result",4]]],[11,"into","","",1194,[[]]],[11,"try_into","","",1194,[[],["result",4]]],[11,"type_id","","",1194,[[],["typeid",3]]],[11,"from","","",1195,[[]]],[11,"borrow","","",1195,[[]]],[11,"borrow_mut","","",1195,[[]]],[11,"try_from","","",1195,[[],["result",4]]],[11,"into","","",1195,[[]]],[11,"try_into","","",1195,[[],["result",4]]],[11,"type_id","","",1195,[[],["typeid",3]]],[11,"from","","",1196,[[]]],[11,"borrow","","",1196,[[]]],[11,"borrow_mut","","",1196,[[]]],[11,"try_from","","",1196,[[],["result",4]]],[11,"into","","",1196,[[]]],[11,"try_into","","",1196,[[],["result",4]]],[11,"type_id","","",1196,[[],["typeid",3]]],[11,"from","","",1197,[[]]],[11,"borrow","","",1197,[[]]],[11,"borrow_mut","","",1197,[[]]],[11,"try_from","","",1197,[[],["result",4]]],[11,"into","","",1197,[[]]],[11,"try_into","","",1197,[[],["result",4]]],[11,"type_id","","",1197,[[],["typeid",3]]],[11,"from","","",1198,[[]]],[11,"borrow","","",1198,[[]]],[11,"borrow_mut","","",1198,[[]]],[11,"try_from","","",1198,[[],["result",4]]],[11,"into","","",1198,[[]]],[11,"try_into","","",1198,[[],["result",4]]],[11,"type_id","","",1198,[[],["typeid",3]]],[11,"from","","",1200,[[]]],[11,"borrow","","",1200,[[]]],[11,"borrow_mut","","",1200,[[]]],[11,"try_from","","",1200,[[],["result",4]]],[11,"into","","",1200,[[]]],[11,"try_into","","",1200,[[],["result",4]]],[11,"type_id","","",1200,[[],["typeid",3]]],[11,"from","","",1202,[[]]],[11,"borrow","","",1202,[[]]],[11,"borrow_mut","","",1202,[[]]],[11,"try_from","","",1202,[[],["result",4]]],[11,"into","","",1202,[[]]],[11,"try_into","","",1202,[[],["result",4]]],[11,"type_id","","",1202,[[],["typeid",3]]],[11,"from","","",1187,[[]]],[11,"borrow","","",1187,[[]]],[11,"borrow_mut","","",1187,[[]]],[11,"try_from","","",1187,[[],["result",4]]],[11,"into","","",1187,[[]]],[11,"try_into","","",1187,[[],["result",4]]],[11,"type_id","","",1187,[[],["typeid",3]]],[11,"from","","",1188,[[]]],[11,"borrow","","",1188,[[]]],[11,"borrow_mut","","",1188,[[]]],[11,"try_from","","",1188,[[],["result",4]]],[11,"into","","",1188,[[]]],[11,"try_into","","",1188,[[],["result",4]]],[11,"type_id","","",1188,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dfllctrla","",1205,[[]]],[11,"borrow","","",1205,[[]]],[11,"borrow_mut","","",1205,[[]]],[11,"try_from","","",1205,[[],["result",4]]],[11,"into","","",1205,[[]]],[11,"try_into","","",1205,[[],["result",4]]],[11,"type_id","","",1205,[[],["typeid",3]]],[11,"from","","",1206,[[]]],[11,"borrow","","",1206,[[]]],[11,"borrow_mut","","",1206,[[]]],[11,"try_from","","",1206,[[],["result",4]]],[11,"into","","",1206,[[]]],[11,"try_into","","",1206,[[],["result",4]]],[11,"type_id","","",1206,[[],["typeid",3]]],[11,"from","","",1207,[[]]],[11,"borrow","","",1207,[[]]],[11,"borrow_mut","","",1207,[[]]],[11,"try_from","","",1207,[[],["result",4]]],[11,"into","","",1207,[[]]],[11,"try_into","","",1207,[[],["result",4]]],[11,"type_id","","",1207,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dfllctrlb","",1210,[[]]],[11,"borrow","","",1210,[[]]],[11,"borrow_mut","","",1210,[[]]],[11,"try_from","","",1210,[[],["result",4]]],[11,"into","","",1210,[[]]],[11,"try_into","","",1210,[[],["result",4]]],[11,"type_id","","",1210,[[],["typeid",3]]],[11,"from","","",1211,[[]]],[11,"borrow","","",1211,[[]]],[11,"borrow_mut","","",1211,[[]]],[11,"try_from","","",1211,[[],["result",4]]],[11,"into","","",1211,[[]]],[11,"try_into","","",1211,[[],["result",4]]],[11,"type_id","","",1211,[[],["typeid",3]]],[11,"from","","",1212,[[]]],[11,"borrow","","",1212,[[]]],[11,"borrow_mut","","",1212,[[]]],[11,"try_from","","",1212,[[],["result",4]]],[11,"into","","",1212,[[]]],[11,"try_into","","",1212,[[],["result",4]]],[11,"type_id","","",1212,[[],["typeid",3]]],[11,"from","","",1213,[[]]],[11,"borrow","","",1213,[[]]],[11,"borrow_mut","","",1213,[[]]],[11,"try_from","","",1213,[[],["result",4]]],[11,"into","","",1213,[[]]],[11,"try_into","","",1213,[[],["result",4]]],[11,"type_id","","",1213,[[],["typeid",3]]],[11,"from","","",1214,[[]]],[11,"borrow","","",1214,[[]]],[11,"borrow_mut","","",1214,[[]]],[11,"try_from","","",1214,[[],["result",4]]],[11,"into","","",1214,[[]]],[11,"try_into","","",1214,[[],["result",4]]],[11,"type_id","","",1214,[[],["typeid",3]]],[11,"from","","",1215,[[]]],[11,"borrow","","",1215,[[]]],[11,"borrow_mut","","",1215,[[]]],[11,"try_from","","",1215,[[],["result",4]]],[11,"into","","",1215,[[]]],[11,"try_into","","",1215,[[],["result",4]]],[11,"type_id","","",1215,[[],["typeid",3]]],[11,"from","","",1216,[[]]],[11,"borrow","","",1216,[[]]],[11,"borrow_mut","","",1216,[[]]],[11,"try_from","","",1216,[[],["result",4]]],[11,"into","","",1216,[[]]],[11,"try_into","","",1216,[[],["result",4]]],[11,"type_id","","",1216,[[],["typeid",3]]],[11,"from","","",1217,[[]]],[11,"borrow","","",1217,[[]]],[11,"borrow_mut","","",1217,[[]]],[11,"try_from","","",1217,[[],["result",4]]],[11,"into","","",1217,[[]]],[11,"try_into","","",1217,[[],["result",4]]],[11,"type_id","","",1217,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dfllval","",1220,[[]]],[11,"borrow","","",1220,[[]]],[11,"borrow_mut","","",1220,[[]]],[11,"try_from","","",1220,[[],["result",4]]],[11,"into","","",1220,[[]]],[11,"try_into","","",1220,[[],["result",4]]],[11,"type_id","","",1220,[[],["typeid",3]]],[11,"from","","",1221,[[]]],[11,"borrow","","",1221,[[]]],[11,"borrow_mut","","",1221,[[]]],[11,"try_from","","",1221,[[],["result",4]]],[11,"into","","",1221,[[]]],[11,"try_into","","",1221,[[],["result",4]]],[11,"type_id","","",1221,[[],["typeid",3]]],[11,"from","","",1222,[[]]],[11,"borrow","","",1222,[[]]],[11,"borrow_mut","","",1222,[[]]],[11,"try_from","","",1222,[[],["result",4]]],[11,"into","","",1222,[[]]],[11,"try_into","","",1222,[[],["result",4]]],[11,"type_id","","",1222,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dfllmul","",1225,[[]]],[11,"borrow","","",1225,[[]]],[11,"borrow_mut","","",1225,[[]]],[11,"try_from","","",1225,[[],["result",4]]],[11,"into","","",1225,[[]]],[11,"try_into","","",1225,[[],["result",4]]],[11,"type_id","","",1225,[[],["typeid",3]]],[11,"from","","",1226,[[]]],[11,"borrow","","",1226,[[]]],[11,"borrow_mut","","",1226,[[]]],[11,"try_from","","",1226,[[],["result",4]]],[11,"into","","",1226,[[]]],[11,"try_into","","",1226,[[],["result",4]]],[11,"type_id","","",1226,[[],["typeid",3]]],[11,"from","","",1227,[[]]],[11,"borrow","","",1227,[[]]],[11,"borrow_mut","","",1227,[[]]],[11,"try_from","","",1227,[[],["result",4]]],[11,"into","","",1227,[[]]],[11,"try_into","","",1227,[[],["result",4]]],[11,"type_id","","",1227,[[],["typeid",3]]],[11,"from","atsamd51g::oscctrl::dfllsync","",1230,[[]]],[11,"borrow","","",1230,[[]]],[11,"borrow_mut","","",1230,[[]]],[11,"try_from","","",1230,[[],["result",4]]],[11,"into","","",1230,[[]]],[11,"try_into","","",1230,[[],["result",4]]],[11,"type_id","","",1230,[[],["typeid",3]]],[11,"from","","",1231,[[]]],[11,"borrow","","",1231,[[]]],[11,"borrow_mut","","",1231,[[]]],[11,"try_from","","",1231,[[],["result",4]]],[11,"into","","",1231,[[]]],[11,"try_into","","",1231,[[],["result",4]]],[11,"type_id","","",1231,[[],["typeid",3]]],[11,"from","","",1232,[[]]],[11,"borrow","","",1232,[[]]],[11,"borrow_mut","","",1232,[[]]],[11,"try_from","","",1232,[[],["result",4]]],[11,"into","","",1232,[[]]],[11,"try_into","","",1232,[[],["result",4]]],[11,"type_id","","",1232,[[],["typeid",3]]],[11,"from","","",1233,[[]]],[11,"borrow","","",1233,[[]]],[11,"borrow_mut","","",1233,[[]]],[11,"try_from","","",1233,[[],["result",4]]],[11,"into","","",1233,[[]]],[11,"try_into","","",1233,[[],["result",4]]],[11,"type_id","","",1233,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl","",1236,[[]]],[11,"borrow","","",1236,[[]]],[11,"borrow_mut","","",1236,[[]]],[11,"try_from","","",1236,[[],["result",4]]],[11,"into","","",1236,[[]]],[11,"try_into","","",1236,[[],["result",4]]],[11,"type_id","","",1236,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::intenclr","",1237,[[]]],[11,"borrow","","",1237,[[]]],[11,"borrow_mut","","",1237,[[]]],[11,"try_from","","",1237,[[],["result",4]]],[11,"into","","",1237,[[]]],[11,"try_into","","",1237,[[],["result",4]]],[11,"type_id","","",1237,[[],["typeid",3]]],[11,"from","","",1238,[[]]],[11,"borrow","","",1238,[[]]],[11,"borrow_mut","","",1238,[[]]],[11,"try_from","","",1238,[[],["result",4]]],[11,"into","","",1238,[[]]],[11,"try_into","","",1238,[[],["result",4]]],[11,"type_id","","",1238,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::intenset","",1241,[[]]],[11,"borrow","","",1241,[[]]],[11,"borrow_mut","","",1241,[[]]],[11,"try_from","","",1241,[[],["result",4]]],[11,"into","","",1241,[[]]],[11,"try_into","","",1241,[[],["result",4]]],[11,"type_id","","",1241,[[],["typeid",3]]],[11,"from","","",1242,[[]]],[11,"borrow","","",1242,[[]]],[11,"borrow_mut","","",1242,[[]]],[11,"try_from","","",1242,[[],["result",4]]],[11,"into","","",1242,[[]]],[11,"try_into","","",1242,[[],["result",4]]],[11,"type_id","","",1242,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::intflag","",1245,[[]]],[11,"borrow","","",1245,[[]]],[11,"borrow_mut","","",1245,[[]]],[11,"try_from","","",1245,[[],["result",4]]],[11,"into","","",1245,[[]]],[11,"try_into","","",1245,[[],["result",4]]],[11,"type_id","","",1245,[[],["typeid",3]]],[11,"from","","",1246,[[]]],[11,"borrow","","",1246,[[]]],[11,"borrow_mut","","",1246,[[]]],[11,"try_from","","",1246,[[],["result",4]]],[11,"into","","",1246,[[]]],[11,"try_into","","",1246,[[],["result",4]]],[11,"type_id","","",1246,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::rtcctrl","",1252,[[]]],[11,"borrow","","",1252,[[]]],[11,"borrow_mut","","",1252,[[]]],[11,"try_from","","",1252,[[],["result",4]]],[11,"into","","",1252,[[]]],[11,"try_into","","",1252,[[],["result",4]]],[11,"type_id","","",1252,[[],["typeid",3]]],[11,"from","","",1250,[[]]],[11,"borrow","","",1250,[[]]],[11,"borrow_mut","","",1250,[[]]],[11,"try_from","","",1250,[[],["result",4]]],[11,"into","","",1250,[[]]],[11,"try_into","","",1250,[[],["result",4]]],[11,"type_id","","",1250,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::xosc32k","",1257,[[]]],[11,"borrow","","",1257,[[]]],[11,"borrow_mut","","",1257,[[]]],[11,"try_from","","",1257,[[],["result",4]]],[11,"into","","",1257,[[]]],[11,"try_into","","",1257,[[],["result",4]]],[11,"type_id","","",1257,[[],["typeid",3]]],[11,"from","","",1258,[[]]],[11,"borrow","","",1258,[[]]],[11,"borrow_mut","","",1258,[[]]],[11,"try_from","","",1258,[[],["result",4]]],[11,"into","","",1258,[[]]],[11,"try_into","","",1258,[[],["result",4]]],[11,"type_id","","",1258,[[],["typeid",3]]],[11,"from","","",1259,[[]]],[11,"borrow","","",1259,[[]]],[11,"borrow_mut","","",1259,[[]]],[11,"try_from","","",1259,[[],["result",4]]],[11,"into","","",1259,[[]]],[11,"try_into","","",1259,[[],["result",4]]],[11,"type_id","","",1259,[[],["typeid",3]]],[11,"from","","",1260,[[]]],[11,"borrow","","",1260,[[]]],[11,"borrow_mut","","",1260,[[]]],[11,"try_from","","",1260,[[],["result",4]]],[11,"into","","",1260,[[]]],[11,"try_into","","",1260,[[],["result",4]]],[11,"type_id","","",1260,[[],["typeid",3]]],[11,"from","","",1261,[[]]],[11,"borrow","","",1261,[[]]],[11,"borrow_mut","","",1261,[[]]],[11,"try_from","","",1261,[[],["result",4]]],[11,"into","","",1261,[[]]],[11,"try_into","","",1261,[[],["result",4]]],[11,"type_id","","",1261,[[],["typeid",3]]],[11,"from","","",1262,[[]]],[11,"borrow","","",1262,[[]]],[11,"borrow_mut","","",1262,[[]]],[11,"try_from","","",1262,[[],["result",4]]],[11,"into","","",1262,[[]]],[11,"try_into","","",1262,[[],["result",4]]],[11,"type_id","","",1262,[[],["typeid",3]]],[11,"from","","",1264,[[]]],[11,"borrow","","",1264,[[]]],[11,"borrow_mut","","",1264,[[]]],[11,"try_from","","",1264,[[],["result",4]]],[11,"into","","",1264,[[]]],[11,"try_into","","",1264,[[],["result",4]]],[11,"type_id","","",1264,[[],["typeid",3]]],[11,"from","","",1265,[[]]],[11,"borrow","","",1265,[[]]],[11,"borrow_mut","","",1265,[[]]],[11,"try_from","","",1265,[[],["result",4]]],[11,"into","","",1265,[[]]],[11,"try_into","","",1265,[[],["result",4]]],[11,"type_id","","",1265,[[],["typeid",3]]],[11,"from","","",1267,[[]]],[11,"borrow","","",1267,[[]]],[11,"borrow_mut","","",1267,[[]]],[11,"try_from","","",1267,[[],["result",4]]],[11,"into","","",1267,[[]]],[11,"try_into","","",1267,[[],["result",4]]],[11,"type_id","","",1267,[[],["typeid",3]]],[11,"from","","",1255,[[]]],[11,"borrow","","",1255,[[]]],[11,"borrow_mut","","",1255,[[]]],[11,"try_from","","",1255,[[],["result",4]]],[11,"into","","",1255,[[]]],[11,"try_into","","",1255,[[],["result",4]]],[11,"type_id","","",1255,[[],["typeid",3]]],[11,"from","","",1256,[[]]],[11,"borrow","","",1256,[[]]],[11,"borrow_mut","","",1256,[[]]],[11,"try_from","","",1256,[[],["result",4]]],[11,"into","","",1256,[[]]],[11,"try_into","","",1256,[[],["result",4]]],[11,"type_id","","",1256,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::cfdctrl","",1270,[[]]],[11,"borrow","","",1270,[[]]],[11,"borrow_mut","","",1270,[[]]],[11,"try_from","","",1270,[[],["result",4]]],[11,"into","","",1270,[[]]],[11,"try_into","","",1270,[[],["result",4]]],[11,"type_id","","",1270,[[],["typeid",3]]],[11,"from","","",1271,[[]]],[11,"borrow","","",1271,[[]]],[11,"borrow_mut","","",1271,[[]]],[11,"try_from","","",1271,[[],["result",4]]],[11,"into","","",1271,[[]]],[11,"try_into","","",1271,[[],["result",4]]],[11,"type_id","","",1271,[[],["typeid",3]]],[11,"from","","",1272,[[]]],[11,"borrow","","",1272,[[]]],[11,"borrow_mut","","",1272,[[]]],[11,"try_from","","",1272,[[],["result",4]]],[11,"into","","",1272,[[]]],[11,"try_into","","",1272,[[],["result",4]]],[11,"type_id","","",1272,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::evctrl","",1275,[[]]],[11,"borrow","","",1275,[[]]],[11,"borrow_mut","","",1275,[[]]],[11,"try_from","","",1275,[[],["result",4]]],[11,"into","","",1275,[[]]],[11,"try_into","","",1275,[[],["result",4]]],[11,"type_id","","",1275,[[],["typeid",3]]],[11,"from","atsamd51g::osc32kctrl::osculp32k","",1278,[[]]],[11,"borrow","","",1278,[[]]],[11,"borrow_mut","","",1278,[[]]],[11,"try_from","","",1278,[[],["result",4]]],[11,"into","","",1278,[[]]],[11,"try_into","","",1278,[[],["result",4]]],[11,"type_id","","",1278,[[],["typeid",3]]],[11,"from","","",1279,[[]]],[11,"borrow","","",1279,[[]]],[11,"borrow_mut","","",1279,[[]]],[11,"try_from","","",1279,[[],["result",4]]],[11,"into","","",1279,[[]]],[11,"try_into","","",1279,[[],["result",4]]],[11,"type_id","","",1279,[[],["typeid",3]]],[11,"from","","",1280,[[]]],[11,"borrow","","",1280,[[]]],[11,"borrow_mut","","",1280,[[]]],[11,"try_from","","",1280,[[],["result",4]]],[11,"into","","",1280,[[]]],[11,"try_into","","",1280,[[],["result",4]]],[11,"type_id","","",1280,[[],["typeid",3]]],[11,"from","","",1281,[[]]],[11,"borrow","","",1281,[[]]],[11,"borrow_mut","","",1281,[[]]],[11,"try_from","","",1281,[[],["result",4]]],[11,"into","","",1281,[[]]],[11,"try_into","","",1281,[[],["result",4]]],[11,"type_id","","",1281,[[],["typeid",3]]],[11,"from","atsamd51g::pac","",1284,[[]]],[11,"borrow","","",1284,[[]]],[11,"borrow_mut","","",1284,[[]]],[11,"try_from","","",1284,[[],["result",4]]],[11,"into","","",1284,[[]]],[11,"try_into","","",1284,[[],["result",4]]],[11,"type_id","","",1284,[[],["typeid",3]]],[11,"from","atsamd51g::pac::wrctrl","",1286,[[]]],[11,"borrow","","",1286,[[]]],[11,"borrow_mut","","",1286,[[]]],[11,"try_from","","",1286,[[],["result",4]]],[11,"into","","",1286,[[]]],[11,"try_into","","",1286,[[],["result",4]]],[11,"type_id","","",1286,[[],["typeid",3]]],[11,"from","","",1288,[[]]],[11,"borrow","","",1288,[[]]],[11,"borrow_mut","","",1288,[[]]],[11,"try_from","","",1288,[[],["result",4]]],[11,"into","","",1288,[[]]],[11,"try_into","","",1288,[[],["result",4]]],[11,"type_id","","",1288,[[],["typeid",3]]],[11,"from","","",1285,[[]]],[11,"borrow","","",1285,[[]]],[11,"borrow_mut","","",1285,[[]]],[11,"try_from","","",1285,[[],["result",4]]],[11,"into","","",1285,[[]]],[11,"try_into","","",1285,[[],["result",4]]],[11,"type_id","","",1285,[[],["typeid",3]]],[11,"from","atsamd51g::pac::evctrl","",1291,[[]]],[11,"borrow","","",1291,[[]]],[11,"borrow_mut","","",1291,[[]]],[11,"try_from","","",1291,[[],["result",4]]],[11,"into","","",1291,[[]]],[11,"try_into","","",1291,[[],["result",4]]],[11,"type_id","","",1291,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intenclr","",1294,[[]]],[11,"borrow","","",1294,[[]]],[11,"borrow_mut","","",1294,[[]]],[11,"try_from","","",1294,[[],["result",4]]],[11,"into","","",1294,[[]]],[11,"try_into","","",1294,[[],["result",4]]],[11,"type_id","","",1294,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intenset","",1297,[[]]],[11,"borrow","","",1297,[[]]],[11,"borrow_mut","","",1297,[[]]],[11,"try_from","","",1297,[[],["result",4]]],[11,"into","","",1297,[[]]],[11,"try_into","","",1297,[[],["result",4]]],[11,"type_id","","",1297,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intflagahb","",1300,[[]]],[11,"borrow","","",1300,[[]]],[11,"borrow_mut","","",1300,[[]]],[11,"try_from","","",1300,[[],["result",4]]],[11,"into","","",1300,[[]]],[11,"try_into","","",1300,[[],["result",4]]],[11,"type_id","","",1300,[[],["typeid",3]]],[11,"from","","",1301,[[]]],[11,"borrow","","",1301,[[]]],[11,"borrow_mut","","",1301,[[]]],[11,"try_from","","",1301,[[],["result",4]]],[11,"into","","",1301,[[]]],[11,"try_into","","",1301,[[],["result",4]]],[11,"type_id","","",1301,[[],["typeid",3]]],[11,"from","","",1302,[[]]],[11,"borrow","","",1302,[[]]],[11,"borrow_mut","","",1302,[[]]],[11,"try_from","","",1302,[[],["result",4]]],[11,"into","","",1302,[[]]],[11,"try_into","","",1302,[[],["result",4]]],[11,"type_id","","",1302,[[],["typeid",3]]],[11,"from","","",1303,[[]]],[11,"borrow","","",1303,[[]]],[11,"borrow_mut","","",1303,[[]]],[11,"try_from","","",1303,[[],["result",4]]],[11,"into","","",1303,[[]]],[11,"try_into","","",1303,[[],["result",4]]],[11,"type_id","","",1303,[[],["typeid",3]]],[11,"from","","",1304,[[]]],[11,"borrow","","",1304,[[]]],[11,"borrow_mut","","",1304,[[]]],[11,"try_from","","",1304,[[],["result",4]]],[11,"into","","",1304,[[]]],[11,"try_into","","",1304,[[],["result",4]]],[11,"type_id","","",1304,[[],["typeid",3]]],[11,"from","","",1305,[[]]],[11,"borrow","","",1305,[[]]],[11,"borrow_mut","","",1305,[[]]],[11,"try_from","","",1305,[[],["result",4]]],[11,"into","","",1305,[[]]],[11,"try_into","","",1305,[[],["result",4]]],[11,"type_id","","",1305,[[],["typeid",3]]],[11,"from","","",1306,[[]]],[11,"borrow","","",1306,[[]]],[11,"borrow_mut","","",1306,[[]]],[11,"try_from","","",1306,[[],["result",4]]],[11,"into","","",1306,[[]]],[11,"try_into","","",1306,[[],["result",4]]],[11,"type_id","","",1306,[[],["typeid",3]]],[11,"from","","",1307,[[]]],[11,"borrow","","",1307,[[]]],[11,"borrow_mut","","",1307,[[]]],[11,"try_from","","",1307,[[],["result",4]]],[11,"into","","",1307,[[]]],[11,"try_into","","",1307,[[],["result",4]]],[11,"type_id","","",1307,[[],["typeid",3]]],[11,"from","","",1308,[[]]],[11,"borrow","","",1308,[[]]],[11,"borrow_mut","","",1308,[[]]],[11,"try_from","","",1308,[[],["result",4]]],[11,"into","","",1308,[[]]],[11,"try_into","","",1308,[[],["result",4]]],[11,"type_id","","",1308,[[],["typeid",3]]],[11,"from","","",1309,[[]]],[11,"borrow","","",1309,[[]]],[11,"borrow_mut","","",1309,[[]]],[11,"try_from","","",1309,[[],["result",4]]],[11,"into","","",1309,[[]]],[11,"try_into","","",1309,[[],["result",4]]],[11,"type_id","","",1309,[[],["typeid",3]]],[11,"from","","",1310,[[]]],[11,"borrow","","",1310,[[]]],[11,"borrow_mut","","",1310,[[]]],[11,"try_from","","",1310,[[],["result",4]]],[11,"into","","",1310,[[]]],[11,"try_into","","",1310,[[],["result",4]]],[11,"type_id","","",1310,[[],["typeid",3]]],[11,"from","","",1311,[[]]],[11,"borrow","","",1311,[[]]],[11,"borrow_mut","","",1311,[[]]],[11,"try_from","","",1311,[[],["result",4]]],[11,"into","","",1311,[[]]],[11,"try_into","","",1311,[[],["result",4]]],[11,"type_id","","",1311,[[],["typeid",3]]],[11,"from","","",1312,[[]]],[11,"borrow","","",1312,[[]]],[11,"borrow_mut","","",1312,[[]]],[11,"try_from","","",1312,[[],["result",4]]],[11,"into","","",1312,[[]]],[11,"try_into","","",1312,[[],["result",4]]],[11,"type_id","","",1312,[[],["typeid",3]]],[11,"from","","",1313,[[]]],[11,"borrow","","",1313,[[]]],[11,"borrow_mut","","",1313,[[]]],[11,"try_from","","",1313,[[],["result",4]]],[11,"into","","",1313,[[]]],[11,"try_into","","",1313,[[],["result",4]]],[11,"type_id","","",1313,[[],["typeid",3]]],[11,"from","","",1314,[[]]],[11,"borrow","","",1314,[[]]],[11,"borrow_mut","","",1314,[[]]],[11,"try_from","","",1314,[[],["result",4]]],[11,"into","","",1314,[[]]],[11,"try_into","","",1314,[[],["result",4]]],[11,"type_id","","",1314,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intflaga","",1317,[[]]],[11,"borrow","","",1317,[[]]],[11,"borrow_mut","","",1317,[[]]],[11,"try_from","","",1317,[[],["result",4]]],[11,"into","","",1317,[[]]],[11,"try_into","","",1317,[[],["result",4]]],[11,"type_id","","",1317,[[],["typeid",3]]],[11,"from","","",1318,[[]]],[11,"borrow","","",1318,[[]]],[11,"borrow_mut","","",1318,[[]]],[11,"try_from","","",1318,[[],["result",4]]],[11,"into","","",1318,[[]]],[11,"try_into","","",1318,[[],["result",4]]],[11,"type_id","","",1318,[[],["typeid",3]]],[11,"from","","",1319,[[]]],[11,"borrow","","",1319,[[]]],[11,"borrow_mut","","",1319,[[]]],[11,"try_from","","",1319,[[],["result",4]]],[11,"into","","",1319,[[]]],[11,"try_into","","",1319,[[],["result",4]]],[11,"type_id","","",1319,[[],["typeid",3]]],[11,"from","","",1320,[[]]],[11,"borrow","","",1320,[[]]],[11,"borrow_mut","","",1320,[[]]],[11,"try_from","","",1320,[[],["result",4]]],[11,"into","","",1320,[[]]],[11,"try_into","","",1320,[[],["result",4]]],[11,"type_id","","",1320,[[],["typeid",3]]],[11,"from","","",1321,[[]]],[11,"borrow","","",1321,[[]]],[11,"borrow_mut","","",1321,[[]]],[11,"try_from","","",1321,[[],["result",4]]],[11,"into","","",1321,[[]]],[11,"try_into","","",1321,[[],["result",4]]],[11,"type_id","","",1321,[[],["typeid",3]]],[11,"from","","",1322,[[]]],[11,"borrow","","",1322,[[]]],[11,"borrow_mut","","",1322,[[]]],[11,"try_from","","",1322,[[],["result",4]]],[11,"into","","",1322,[[]]],[11,"try_into","","",1322,[[],["result",4]]],[11,"type_id","","",1322,[[],["typeid",3]]],[11,"from","","",1323,[[]]],[11,"borrow","","",1323,[[]]],[11,"borrow_mut","","",1323,[[]]],[11,"try_from","","",1323,[[],["result",4]]],[11,"into","","",1323,[[]]],[11,"try_into","","",1323,[[],["result",4]]],[11,"type_id","","",1323,[[],["typeid",3]]],[11,"from","","",1324,[[]]],[11,"borrow","","",1324,[[]]],[11,"borrow_mut","","",1324,[[]]],[11,"try_from","","",1324,[[],["result",4]]],[11,"into","","",1324,[[]]],[11,"try_into","","",1324,[[],["result",4]]],[11,"type_id","","",1324,[[],["typeid",3]]],[11,"from","","",1325,[[]]],[11,"borrow","","",1325,[[]]],[11,"borrow_mut","","",1325,[[]]],[11,"try_from","","",1325,[[],["result",4]]],[11,"into","","",1325,[[]]],[11,"try_into","","",1325,[[],["result",4]]],[11,"type_id","","",1325,[[],["typeid",3]]],[11,"from","","",1326,[[]]],[11,"borrow","","",1326,[[]]],[11,"borrow_mut","","",1326,[[]]],[11,"try_from","","",1326,[[],["result",4]]],[11,"into","","",1326,[[]]],[11,"try_into","","",1326,[[],["result",4]]],[11,"type_id","","",1326,[[],["typeid",3]]],[11,"from","","",1327,[[]]],[11,"borrow","","",1327,[[]]],[11,"borrow_mut","","",1327,[[]]],[11,"try_from","","",1327,[[],["result",4]]],[11,"into","","",1327,[[]]],[11,"try_into","","",1327,[[],["result",4]]],[11,"type_id","","",1327,[[],["typeid",3]]],[11,"from","","",1328,[[]]],[11,"borrow","","",1328,[[]]],[11,"borrow_mut","","",1328,[[]]],[11,"try_from","","",1328,[[],["result",4]]],[11,"into","","",1328,[[]]],[11,"try_into","","",1328,[[],["result",4]]],[11,"type_id","","",1328,[[],["typeid",3]]],[11,"from","","",1329,[[]]],[11,"borrow","","",1329,[[]]],[11,"borrow_mut","","",1329,[[]]],[11,"try_from","","",1329,[[],["result",4]]],[11,"into","","",1329,[[]]],[11,"try_into","","",1329,[[],["result",4]]],[11,"type_id","","",1329,[[],["typeid",3]]],[11,"from","","",1330,[[]]],[11,"borrow","","",1330,[[]]],[11,"borrow_mut","","",1330,[[]]],[11,"try_from","","",1330,[[],["result",4]]],[11,"into","","",1330,[[]]],[11,"try_into","","",1330,[[],["result",4]]],[11,"type_id","","",1330,[[],["typeid",3]]],[11,"from","","",1331,[[]]],[11,"borrow","","",1331,[[]]],[11,"borrow_mut","","",1331,[[]]],[11,"try_from","","",1331,[[],["result",4]]],[11,"into","","",1331,[[]]],[11,"try_into","","",1331,[[],["result",4]]],[11,"type_id","","",1331,[[],["typeid",3]]],[11,"from","","",1332,[[]]],[11,"borrow","","",1332,[[]]],[11,"borrow_mut","","",1332,[[]]],[11,"try_from","","",1332,[[],["result",4]]],[11,"into","","",1332,[[]]],[11,"try_into","","",1332,[[],["result",4]]],[11,"type_id","","",1332,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intflagb","",1335,[[]]],[11,"borrow","","",1335,[[]]],[11,"borrow_mut","","",1335,[[]]],[11,"try_from","","",1335,[[],["result",4]]],[11,"into","","",1335,[[]]],[11,"try_into","","",1335,[[],["result",4]]],[11,"type_id","","",1335,[[],["typeid",3]]],[11,"from","","",1336,[[]]],[11,"borrow","","",1336,[[]]],[11,"borrow_mut","","",1336,[[]]],[11,"try_from","","",1336,[[],["result",4]]],[11,"into","","",1336,[[]]],[11,"try_into","","",1336,[[],["result",4]]],[11,"type_id","","",1336,[[],["typeid",3]]],[11,"from","","",1337,[[]]],[11,"borrow","","",1337,[[]]],[11,"borrow_mut","","",1337,[[]]],[11,"try_from","","",1337,[[],["result",4]]],[11,"into","","",1337,[[]]],[11,"try_into","","",1337,[[],["result",4]]],[11,"type_id","","",1337,[[],["typeid",3]]],[11,"from","","",1338,[[]]],[11,"borrow","","",1338,[[]]],[11,"borrow_mut","","",1338,[[]]],[11,"try_from","","",1338,[[],["result",4]]],[11,"into","","",1338,[[]]],[11,"try_into","","",1338,[[],["result",4]]],[11,"type_id","","",1338,[[],["typeid",3]]],[11,"from","","",1339,[[]]],[11,"borrow","","",1339,[[]]],[11,"borrow_mut","","",1339,[[]]],[11,"try_from","","",1339,[[],["result",4]]],[11,"into","","",1339,[[]]],[11,"try_into","","",1339,[[],["result",4]]],[11,"type_id","","",1339,[[],["typeid",3]]],[11,"from","","",1340,[[]]],[11,"borrow","","",1340,[[]]],[11,"borrow_mut","","",1340,[[]]],[11,"try_from","","",1340,[[],["result",4]]],[11,"into","","",1340,[[]]],[11,"try_into","","",1340,[[],["result",4]]],[11,"type_id","","",1340,[[],["typeid",3]]],[11,"from","","",1341,[[]]],[11,"borrow","","",1341,[[]]],[11,"borrow_mut","","",1341,[[]]],[11,"try_from","","",1341,[[],["result",4]]],[11,"into","","",1341,[[]]],[11,"try_into","","",1341,[[],["result",4]]],[11,"type_id","","",1341,[[],["typeid",3]]],[11,"from","","",1342,[[]]],[11,"borrow","","",1342,[[]]],[11,"borrow_mut","","",1342,[[]]],[11,"try_from","","",1342,[[],["result",4]]],[11,"into","","",1342,[[]]],[11,"try_into","","",1342,[[],["result",4]]],[11,"type_id","","",1342,[[],["typeid",3]]],[11,"from","","",1343,[[]]],[11,"borrow","","",1343,[[]]],[11,"borrow_mut","","",1343,[[]]],[11,"try_from","","",1343,[[],["result",4]]],[11,"into","","",1343,[[]]],[11,"try_into","","",1343,[[],["result",4]]],[11,"type_id","","",1343,[[],["typeid",3]]],[11,"from","","",1344,[[]]],[11,"borrow","","",1344,[[]]],[11,"borrow_mut","","",1344,[[]]],[11,"try_from","","",1344,[[],["result",4]]],[11,"into","","",1344,[[]]],[11,"try_into","","",1344,[[],["result",4]]],[11,"type_id","","",1344,[[],["typeid",3]]],[11,"from","","",1345,[[]]],[11,"borrow","","",1345,[[]]],[11,"borrow_mut","","",1345,[[]]],[11,"try_from","","",1345,[[],["result",4]]],[11,"into","","",1345,[[]]],[11,"try_into","","",1345,[[],["result",4]]],[11,"type_id","","",1345,[[],["typeid",3]]],[11,"from","","",1346,[[]]],[11,"borrow","","",1346,[[]]],[11,"borrow_mut","","",1346,[[]]],[11,"try_from","","",1346,[[],["result",4]]],[11,"into","","",1346,[[]]],[11,"try_into","","",1346,[[],["result",4]]],[11,"type_id","","",1346,[[],["typeid",3]]],[11,"from","","",1347,[[]]],[11,"borrow","","",1347,[[]]],[11,"borrow_mut","","",1347,[[]]],[11,"try_from","","",1347,[[],["result",4]]],[11,"into","","",1347,[[]]],[11,"try_into","","",1347,[[],["result",4]]],[11,"type_id","","",1347,[[],["typeid",3]]],[11,"from","","",1348,[[]]],[11,"borrow","","",1348,[[]]],[11,"borrow_mut","","",1348,[[]]],[11,"try_from","","",1348,[[],["result",4]]],[11,"into","","",1348,[[]]],[11,"try_into","","",1348,[[],["result",4]]],[11,"type_id","","",1348,[[],["typeid",3]]],[11,"from","","",1349,[[]]],[11,"borrow","","",1349,[[]]],[11,"borrow_mut","","",1349,[[]]],[11,"try_from","","",1349,[[],["result",4]]],[11,"into","","",1349,[[]]],[11,"try_into","","",1349,[[],["result",4]]],[11,"type_id","","",1349,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intflagc","",1352,[[]]],[11,"borrow","","",1352,[[]]],[11,"borrow_mut","","",1352,[[]]],[11,"try_from","","",1352,[[],["result",4]]],[11,"into","","",1352,[[]]],[11,"try_into","","",1352,[[],["result",4]]],[11,"type_id","","",1352,[[],["typeid",3]]],[11,"from","","",1353,[[]]],[11,"borrow","","",1353,[[]]],[11,"borrow_mut","","",1353,[[]]],[11,"try_from","","",1353,[[],["result",4]]],[11,"into","","",1353,[[]]],[11,"try_into","","",1353,[[],["result",4]]],[11,"type_id","","",1353,[[],["typeid",3]]],[11,"from","","",1354,[[]]],[11,"borrow","","",1354,[[]]],[11,"borrow_mut","","",1354,[[]]],[11,"try_from","","",1354,[[],["result",4]]],[11,"into","","",1354,[[]]],[11,"try_into","","",1354,[[],["result",4]]],[11,"type_id","","",1354,[[],["typeid",3]]],[11,"from","","",1355,[[]]],[11,"borrow","","",1355,[[]]],[11,"borrow_mut","","",1355,[[]]],[11,"try_from","","",1355,[[],["result",4]]],[11,"into","","",1355,[[]]],[11,"try_into","","",1355,[[],["result",4]]],[11,"type_id","","",1355,[[],["typeid",3]]],[11,"from","","",1356,[[]]],[11,"borrow","","",1356,[[]]],[11,"borrow_mut","","",1356,[[]]],[11,"try_from","","",1356,[[],["result",4]]],[11,"into","","",1356,[[]]],[11,"try_into","","",1356,[[],["result",4]]],[11,"type_id","","",1356,[[],["typeid",3]]],[11,"from","","",1357,[[]]],[11,"borrow","","",1357,[[]]],[11,"borrow_mut","","",1357,[[]]],[11,"try_from","","",1357,[[],["result",4]]],[11,"into","","",1357,[[]]],[11,"try_into","","",1357,[[],["result",4]]],[11,"type_id","","",1357,[[],["typeid",3]]],[11,"from","","",1358,[[]]],[11,"borrow","","",1358,[[]]],[11,"borrow_mut","","",1358,[[]]],[11,"try_from","","",1358,[[],["result",4]]],[11,"into","","",1358,[[]]],[11,"try_into","","",1358,[[],["result",4]]],[11,"type_id","","",1358,[[],["typeid",3]]],[11,"from","","",1359,[[]]],[11,"borrow","","",1359,[[]]],[11,"borrow_mut","","",1359,[[]]],[11,"try_from","","",1359,[[],["result",4]]],[11,"into","","",1359,[[]]],[11,"try_into","","",1359,[[],["result",4]]],[11,"type_id","","",1359,[[],["typeid",3]]],[11,"from","","",1360,[[]]],[11,"borrow","","",1360,[[]]],[11,"borrow_mut","","",1360,[[]]],[11,"try_from","","",1360,[[],["result",4]]],[11,"into","","",1360,[[]]],[11,"try_into","","",1360,[[],["result",4]]],[11,"type_id","","",1360,[[],["typeid",3]]],[11,"from","atsamd51g::pac::intflagd","",1363,[[]]],[11,"borrow","","",1363,[[]]],[11,"borrow_mut","","",1363,[[]]],[11,"try_from","","",1363,[[],["result",4]]],[11,"into","","",1363,[[]]],[11,"try_into","","",1363,[[],["result",4]]],[11,"type_id","","",1363,[[],["typeid",3]]],[11,"from","","",1364,[[]]],[11,"borrow","","",1364,[[]]],[11,"borrow_mut","","",1364,[[]]],[11,"try_from","","",1364,[[],["result",4]]],[11,"into","","",1364,[[]]],[11,"try_into","","",1364,[[],["result",4]]],[11,"type_id","","",1364,[[],["typeid",3]]],[11,"from","","",1365,[[]]],[11,"borrow","","",1365,[[]]],[11,"borrow_mut","","",1365,[[]]],[11,"try_from","","",1365,[[],["result",4]]],[11,"into","","",1365,[[]]],[11,"try_into","","",1365,[[],["result",4]]],[11,"type_id","","",1365,[[],["typeid",3]]],[11,"from","","",1366,[[]]],[11,"borrow","","",1366,[[]]],[11,"borrow_mut","","",1366,[[]]],[11,"try_from","","",1366,[[],["result",4]]],[11,"into","","",1366,[[]]],[11,"try_into","","",1366,[[],["result",4]]],[11,"type_id","","",1366,[[],["typeid",3]]],[11,"from","","",1367,[[]]],[11,"borrow","","",1367,[[]]],[11,"borrow_mut","","",1367,[[]]],[11,"try_from","","",1367,[[],["result",4]]],[11,"into","","",1367,[[]]],[11,"try_into","","",1367,[[],["result",4]]],[11,"type_id","","",1367,[[],["typeid",3]]],[11,"from","","",1368,[[]]],[11,"borrow","","",1368,[[]]],[11,"borrow_mut","","",1368,[[]]],[11,"try_from","","",1368,[[],["result",4]]],[11,"into","","",1368,[[]]],[11,"try_into","","",1368,[[],["result",4]]],[11,"type_id","","",1368,[[],["typeid",3]]],[11,"from","atsamd51g::pcc","",1375,[[]]],[11,"borrow","","",1375,[[]]],[11,"borrow_mut","","",1375,[[]]],[11,"try_from","","",1375,[[],["result",4]]],[11,"into","","",1375,[[]]],[11,"try_into","","",1375,[[],["result",4]]],[11,"type_id","","",1375,[[],["typeid",3]]],[11,"from","atsamd51g::pcc::mr","",1376,[[]]],[11,"borrow","","",1376,[[]]],[11,"borrow_mut","","",1376,[[]]],[11,"try_from","","",1376,[[],["result",4]]],[11,"into","","",1376,[[]]],[11,"try_into","","",1376,[[],["result",4]]],[11,"type_id","","",1376,[[],["typeid",3]]],[11,"from","","",1377,[[]]],[11,"borrow","","",1377,[[]]],[11,"borrow_mut","","",1377,[[]]],[11,"try_from","","",1377,[[],["result",4]]],[11,"into","","",1377,[[]]],[11,"try_into","","",1377,[[],["result",4]]],[11,"type_id","","",1377,[[],["typeid",3]]],[11,"from","","",1378,[[]]],[11,"borrow","","",1378,[[]]],[11,"borrow_mut","","",1378,[[]]],[11,"try_from","","",1378,[[],["result",4]]],[11,"into","","",1378,[[]]],[11,"try_into","","",1378,[[],["result",4]]],[11,"type_id","","",1378,[[],["typeid",3]]],[11,"from","","",1379,[[]]],[11,"borrow","","",1379,[[]]],[11,"borrow_mut","","",1379,[[]]],[11,"try_from","","",1379,[[],["result",4]]],[11,"into","","",1379,[[]]],[11,"try_into","","",1379,[[],["result",4]]],[11,"type_id","","",1379,[[],["typeid",3]]],[11,"from","","",1380,[[]]],[11,"borrow","","",1380,[[]]],[11,"borrow_mut","","",1380,[[]]],[11,"try_from","","",1380,[[],["result",4]]],[11,"into","","",1380,[[]]],[11,"try_into","","",1380,[[],["result",4]]],[11,"type_id","","",1380,[[],["typeid",3]]],[11,"from","","",1381,[[]]],[11,"borrow","","",1381,[[]]],[11,"borrow_mut","","",1381,[[]]],[11,"try_from","","",1381,[[],["result",4]]],[11,"into","","",1381,[[]]],[11,"try_into","","",1381,[[],["result",4]]],[11,"type_id","","",1381,[[],["typeid",3]]],[11,"from","","",1382,[[]]],[11,"borrow","","",1382,[[]]],[11,"borrow_mut","","",1382,[[]]],[11,"try_from","","",1382,[[],["result",4]]],[11,"into","","",1382,[[]]],[11,"try_into","","",1382,[[],["result",4]]],[11,"type_id","","",1382,[[],["typeid",3]]],[11,"from","","",1383,[[]]],[11,"borrow","","",1383,[[]]],[11,"borrow_mut","","",1383,[[]]],[11,"try_from","","",1383,[[],["result",4]]],[11,"into","","",1383,[[]]],[11,"try_into","","",1383,[[],["result",4]]],[11,"type_id","","",1383,[[],["typeid",3]]],[11,"from","atsamd51g::pcc::ier","",1386,[[]]],[11,"borrow","","",1386,[[]]],[11,"borrow_mut","","",1386,[[]]],[11,"try_from","","",1386,[[],["result",4]]],[11,"into","","",1386,[[]]],[11,"try_into","","",1386,[[],["result",4]]],[11,"type_id","","",1386,[[],["typeid",3]]],[11,"from","","",1387,[[]]],[11,"borrow","","",1387,[[]]],[11,"borrow_mut","","",1387,[[]]],[11,"try_from","","",1387,[[],["result",4]]],[11,"into","","",1387,[[]]],[11,"try_into","","",1387,[[],["result",4]]],[11,"type_id","","",1387,[[],["typeid",3]]],[11,"from","atsamd51g::pcc::idr","",1389,[[]]],[11,"borrow","","",1389,[[]]],[11,"borrow_mut","","",1389,[[]]],[11,"try_from","","",1389,[[],["result",4]]],[11,"into","","",1389,[[]]],[11,"try_into","","",1389,[[],["result",4]]],[11,"type_id","","",1389,[[],["typeid",3]]],[11,"from","","",1390,[[]]],[11,"borrow","","",1390,[[]]],[11,"borrow_mut","","",1390,[[]]],[11,"try_from","","",1390,[[],["result",4]]],[11,"into","","",1390,[[]]],[11,"try_into","","",1390,[[],["result",4]]],[11,"type_id","","",1390,[[],["typeid",3]]],[11,"from","atsamd51g::pcc::wpmr","",1395,[[]]],[11,"borrow","","",1395,[[]]],[11,"borrow_mut","","",1395,[[]]],[11,"try_from","","",1395,[[],["result",4]]],[11,"into","","",1395,[[]]],[11,"try_into","","",1395,[[],["result",4]]],[11,"type_id","","",1395,[[],["typeid",3]]],[11,"from","","",1396,[[]]],[11,"borrow","","",1396,[[]]],[11,"borrow_mut","","",1396,[[]]],[11,"try_from","","",1396,[[],["result",4]]],[11,"into","","",1396,[[]]],[11,"try_into","","",1396,[[],["result",4]]],[11,"type_id","","",1396,[[],["typeid",3]]],[11,"from","atsamd51g::pdec","",1400,[[]]],[11,"borrow","","",1400,[[]]],[11,"borrow_mut","","",1400,[[]]],[11,"try_from","","",1400,[[],["result",4]]],[11,"into","","",1400,[[]]],[11,"try_into","","",1400,[[],["result",4]]],[11,"type_id","","",1400,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::ctrla","",1403,[[]]],[11,"borrow","","",1403,[[]]],[11,"borrow_mut","","",1403,[[]]],[11,"try_from","","",1403,[[],["result",4]]],[11,"into","","",1403,[[]]],[11,"try_into","","",1403,[[],["result",4]]],[11,"type_id","","",1403,[[],["typeid",3]]],[11,"from","","",1404,[[]]],[11,"borrow","","",1404,[[]]],[11,"borrow_mut","","",1404,[[]]],[11,"try_from","","",1404,[[],["result",4]]],[11,"into","","",1404,[[]]],[11,"try_into","","",1404,[[],["result",4]]],[11,"type_id","","",1404,[[],["typeid",3]]],[11,"from","","",1406,[[]]],[11,"borrow","","",1406,[[]]],[11,"borrow_mut","","",1406,[[]]],[11,"try_from","","",1406,[[],["result",4]]],[11,"into","","",1406,[[]]],[11,"try_into","","",1406,[[],["result",4]]],[11,"type_id","","",1406,[[],["typeid",3]]],[11,"from","","",1407,[[]]],[11,"borrow","","",1407,[[]]],[11,"borrow_mut","","",1407,[[]]],[11,"try_from","","",1407,[[],["result",4]]],[11,"into","","",1407,[[]]],[11,"try_into","","",1407,[[],["result",4]]],[11,"type_id","","",1407,[[],["typeid",3]]],[11,"from","","",1409,[[]]],[11,"borrow","","",1409,[[]]],[11,"borrow_mut","","",1409,[[]]],[11,"try_from","","",1409,[[],["result",4]]],[11,"into","","",1409,[[]]],[11,"try_into","","",1409,[[],["result",4]]],[11,"type_id","","",1409,[[],["typeid",3]]],[11,"from","","",1410,[[]]],[11,"borrow","","",1410,[[]]],[11,"borrow_mut","","",1410,[[]]],[11,"try_from","","",1410,[[],["result",4]]],[11,"into","","",1410,[[]]],[11,"try_into","","",1410,[[],["result",4]]],[11,"type_id","","",1410,[[],["typeid",3]]],[11,"from","","",1411,[[]]],[11,"borrow","","",1411,[[]]],[11,"borrow_mut","","",1411,[[]]],[11,"try_from","","",1411,[[],["result",4]]],[11,"into","","",1411,[[]]],[11,"try_into","","",1411,[[],["result",4]]],[11,"type_id","","",1411,[[],["typeid",3]]],[11,"from","","",1412,[[]]],[11,"borrow","","",1412,[[]]],[11,"borrow_mut","","",1412,[[]]],[11,"try_from","","",1412,[[],["result",4]]],[11,"into","","",1412,[[]]],[11,"try_into","","",1412,[[],["result",4]]],[11,"type_id","","",1412,[[],["typeid",3]]],[11,"from","","",1413,[[]]],[11,"borrow","","",1413,[[]]],[11,"borrow_mut","","",1413,[[]]],[11,"try_from","","",1413,[[],["result",4]]],[11,"into","","",1413,[[]]],[11,"try_into","","",1413,[[],["result",4]]],[11,"type_id","","",1413,[[],["typeid",3]]],[11,"from","","",1414,[[]]],[11,"borrow","","",1414,[[]]],[11,"borrow_mut","","",1414,[[]]],[11,"try_from","","",1414,[[],["result",4]]],[11,"into","","",1414,[[]]],[11,"try_into","","",1414,[[],["result",4]]],[11,"type_id","","",1414,[[],["typeid",3]]],[11,"from","","",1415,[[]]],[11,"borrow","","",1415,[[]]],[11,"borrow_mut","","",1415,[[]]],[11,"try_from","","",1415,[[],["result",4]]],[11,"into","","",1415,[[]]],[11,"try_into","","",1415,[[],["result",4]]],[11,"type_id","","",1415,[[],["typeid",3]]],[11,"from","","",1416,[[]]],[11,"borrow","","",1416,[[]]],[11,"borrow_mut","","",1416,[[]]],[11,"try_from","","",1416,[[],["result",4]]],[11,"into","","",1416,[[]]],[11,"try_into","","",1416,[[],["result",4]]],[11,"type_id","","",1416,[[],["typeid",3]]],[11,"from","","",1417,[[]]],[11,"borrow","","",1417,[[]]],[11,"borrow_mut","","",1417,[[]]],[11,"try_from","","",1417,[[],["result",4]]],[11,"into","","",1417,[[]]],[11,"try_into","","",1417,[[],["result",4]]],[11,"type_id","","",1417,[[],["typeid",3]]],[11,"from","","",1418,[[]]],[11,"borrow","","",1418,[[]]],[11,"borrow_mut","","",1418,[[]]],[11,"try_from","","",1418,[[],["result",4]]],[11,"into","","",1418,[[]]],[11,"try_into","","",1418,[[],["result",4]]],[11,"type_id","","",1418,[[],["typeid",3]]],[11,"from","","",1419,[[]]],[11,"borrow","","",1419,[[]]],[11,"borrow_mut","","",1419,[[]]],[11,"try_from","","",1419,[[],["result",4]]],[11,"into","","",1419,[[]]],[11,"try_into","","",1419,[[],["result",4]]],[11,"type_id","","",1419,[[],["typeid",3]]],[11,"from","","",1420,[[]]],[11,"borrow","","",1420,[[]]],[11,"borrow_mut","","",1420,[[]]],[11,"try_from","","",1420,[[],["result",4]]],[11,"into","","",1420,[[]]],[11,"try_into","","",1420,[[],["result",4]]],[11,"type_id","","",1420,[[],["typeid",3]]],[11,"from","","",1401,[[]]],[11,"borrow","","",1401,[[]]],[11,"borrow_mut","","",1401,[[]]],[11,"try_from","","",1401,[[],["result",4]]],[11,"into","","",1401,[[]]],[11,"try_into","","",1401,[[],["result",4]]],[11,"type_id","","",1401,[[],["typeid",3]]],[11,"from","","",1402,[[]]],[11,"borrow","","",1402,[[]]],[11,"borrow_mut","","",1402,[[]]],[11,"try_from","","",1402,[[],["result",4]]],[11,"into","","",1402,[[]]],[11,"try_into","","",1402,[[],["result",4]]],[11,"type_id","","",1402,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::ctrlbclr","",1424,[[]]],[11,"borrow","","",1424,[[]]],[11,"borrow_mut","","",1424,[[]]],[11,"try_from","","",1424,[[],["result",4]]],[11,"into","","",1424,[[]]],[11,"try_into","","",1424,[[],["result",4]]],[11,"type_id","","",1424,[[],["typeid",3]]],[11,"from","","",1426,[[]]],[11,"borrow","","",1426,[[]]],[11,"borrow_mut","","",1426,[[]]],[11,"try_from","","",1426,[[],["result",4]]],[11,"into","","",1426,[[]]],[11,"try_into","","",1426,[[],["result",4]]],[11,"type_id","","",1426,[[],["typeid",3]]],[11,"from","","",1423,[[]]],[11,"borrow","","",1423,[[]]],[11,"borrow_mut","","",1423,[[]]],[11,"try_from","","",1423,[[],["result",4]]],[11,"into","","",1423,[[]]],[11,"try_into","","",1423,[[],["result",4]]],[11,"type_id","","",1423,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::ctrlbset","",1430,[[]]],[11,"borrow","","",1430,[[]]],[11,"borrow_mut","","",1430,[[]]],[11,"try_from","","",1430,[[],["result",4]]],[11,"into","","",1430,[[]]],[11,"try_into","","",1430,[[],["result",4]]],[11,"type_id","","",1430,[[],["typeid",3]]],[11,"from","","",1432,[[]]],[11,"borrow","","",1432,[[]]],[11,"borrow_mut","","",1432,[[]]],[11,"try_from","","",1432,[[],["result",4]]],[11,"into","","",1432,[[]]],[11,"try_into","","",1432,[[],["result",4]]],[11,"type_id","","",1432,[[],["typeid",3]]],[11,"from","","",1429,[[]]],[11,"borrow","","",1429,[[]]],[11,"borrow_mut","","",1429,[[]]],[11,"try_from","","",1429,[[],["result",4]]],[11,"into","","",1429,[[]]],[11,"try_into","","",1429,[[],["result",4]]],[11,"type_id","","",1429,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::evctrl","",1437,[[]]],[11,"borrow","","",1437,[[]]],[11,"borrow_mut","","",1437,[[]]],[11,"try_from","","",1437,[[],["result",4]]],[11,"into","","",1437,[[]]],[11,"try_into","","",1437,[[],["result",4]]],[11,"type_id","","",1437,[[],["typeid",3]]],[11,"from","","",1438,[[]]],[11,"borrow","","",1438,[[]]],[11,"borrow_mut","","",1438,[[]]],[11,"try_from","","",1438,[[],["result",4]]],[11,"into","","",1438,[[]]],[11,"try_into","","",1438,[[],["result",4]]],[11,"type_id","","",1438,[[],["typeid",3]]],[11,"from","","",1439,[[]]],[11,"borrow","","",1439,[[]]],[11,"borrow_mut","","",1439,[[]]],[11,"try_from","","",1439,[[],["result",4]]],[11,"into","","",1439,[[]]],[11,"try_into","","",1439,[[],["result",4]]],[11,"type_id","","",1439,[[],["typeid",3]]],[11,"from","","",1440,[[]]],[11,"borrow","","",1440,[[]]],[11,"borrow_mut","","",1440,[[]]],[11,"try_from","","",1440,[[],["result",4]]],[11,"into","","",1440,[[]]],[11,"try_into","","",1440,[[],["result",4]]],[11,"type_id","","",1440,[[],["typeid",3]]],[11,"from","","",1441,[[]]],[11,"borrow","","",1441,[[]]],[11,"borrow_mut","","",1441,[[]]],[11,"try_from","","",1441,[[],["result",4]]],[11,"into","","",1441,[[]]],[11,"try_into","","",1441,[[],["result",4]]],[11,"type_id","","",1441,[[],["typeid",3]]],[11,"from","","",1442,[[]]],[11,"borrow","","",1442,[[]]],[11,"borrow_mut","","",1442,[[]]],[11,"try_from","","",1442,[[],["result",4]]],[11,"into","","",1442,[[]]],[11,"try_into","","",1442,[[],["result",4]]],[11,"type_id","","",1442,[[],["typeid",3]]],[11,"from","","",1443,[[]]],[11,"borrow","","",1443,[[]]],[11,"borrow_mut","","",1443,[[]]],[11,"try_from","","",1443,[[],["result",4]]],[11,"into","","",1443,[[]]],[11,"try_into","","",1443,[[],["result",4]]],[11,"type_id","","",1443,[[],["typeid",3]]],[11,"from","","",1444,[[]]],[11,"borrow","","",1444,[[]]],[11,"borrow_mut","","",1444,[[]]],[11,"try_from","","",1444,[[],["result",4]]],[11,"into","","",1444,[[]]],[11,"try_into","","",1444,[[],["result",4]]],[11,"type_id","","",1444,[[],["typeid",3]]],[11,"from","","",1445,[[]]],[11,"borrow","","",1445,[[]]],[11,"borrow_mut","","",1445,[[]]],[11,"try_from","","",1445,[[],["result",4]]],[11,"into","","",1445,[[]]],[11,"try_into","","",1445,[[],["result",4]]],[11,"type_id","","",1445,[[],["typeid",3]]],[11,"from","","",1435,[[]]],[11,"borrow","","",1435,[[]]],[11,"borrow_mut","","",1435,[[]]],[11,"try_from","","",1435,[[],["result",4]]],[11,"into","","",1435,[[]]],[11,"try_into","","",1435,[[],["result",4]]],[11,"type_id","","",1435,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::intenclr","",1448,[[]]],[11,"borrow","","",1448,[[]]],[11,"borrow_mut","","",1448,[[]]],[11,"try_from","","",1448,[[],["result",4]]],[11,"into","","",1448,[[]]],[11,"try_into","","",1448,[[],["result",4]]],[11,"type_id","","",1448,[[],["typeid",3]]],[11,"from","","",1449,[[]]],[11,"borrow","","",1449,[[]]],[11,"borrow_mut","","",1449,[[]]],[11,"try_from","","",1449,[[],["result",4]]],[11,"into","","",1449,[[]]],[11,"try_into","","",1449,[[],["result",4]]],[11,"type_id","","",1449,[[],["typeid",3]]],[11,"from","","",1450,[[]]],[11,"borrow","","",1450,[[]]],[11,"borrow_mut","","",1450,[[]]],[11,"try_from","","",1450,[[],["result",4]]],[11,"into","","",1450,[[]]],[11,"try_into","","",1450,[[],["result",4]]],[11,"type_id","","",1450,[[],["typeid",3]]],[11,"from","","",1451,[[]]],[11,"borrow","","",1451,[[]]],[11,"borrow_mut","","",1451,[[]]],[11,"try_from","","",1451,[[],["result",4]]],[11,"into","","",1451,[[]]],[11,"try_into","","",1451,[[],["result",4]]],[11,"type_id","","",1451,[[],["typeid",3]]],[11,"from","","",1452,[[]]],[11,"borrow","","",1452,[[]]],[11,"borrow_mut","","",1452,[[]]],[11,"try_from","","",1452,[[],["result",4]]],[11,"into","","",1452,[[]]],[11,"try_into","","",1452,[[],["result",4]]],[11,"type_id","","",1452,[[],["typeid",3]]],[11,"from","","",1453,[[]]],[11,"borrow","","",1453,[[]]],[11,"borrow_mut","","",1453,[[]]],[11,"try_from","","",1453,[[],["result",4]]],[11,"into","","",1453,[[]]],[11,"try_into","","",1453,[[],["result",4]]],[11,"type_id","","",1453,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::intenset","",1456,[[]]],[11,"borrow","","",1456,[[]]],[11,"borrow_mut","","",1456,[[]]],[11,"try_from","","",1456,[[],["result",4]]],[11,"into","","",1456,[[]]],[11,"try_into","","",1456,[[],["result",4]]],[11,"type_id","","",1456,[[],["typeid",3]]],[11,"from","","",1457,[[]]],[11,"borrow","","",1457,[[]]],[11,"borrow_mut","","",1457,[[]]],[11,"try_from","","",1457,[[],["result",4]]],[11,"into","","",1457,[[]]],[11,"try_into","","",1457,[[],["result",4]]],[11,"type_id","","",1457,[[],["typeid",3]]],[11,"from","","",1458,[[]]],[11,"borrow","","",1458,[[]]],[11,"borrow_mut","","",1458,[[]]],[11,"try_from","","",1458,[[],["result",4]]],[11,"into","","",1458,[[]]],[11,"try_into","","",1458,[[],["result",4]]],[11,"type_id","","",1458,[[],["typeid",3]]],[11,"from","","",1459,[[]]],[11,"borrow","","",1459,[[]]],[11,"borrow_mut","","",1459,[[]]],[11,"try_from","","",1459,[[],["result",4]]],[11,"into","","",1459,[[]]],[11,"try_into","","",1459,[[],["result",4]]],[11,"type_id","","",1459,[[],["typeid",3]]],[11,"from","","",1460,[[]]],[11,"borrow","","",1460,[[]]],[11,"borrow_mut","","",1460,[[]]],[11,"try_from","","",1460,[[],["result",4]]],[11,"into","","",1460,[[]]],[11,"try_into","","",1460,[[],["result",4]]],[11,"type_id","","",1460,[[],["typeid",3]]],[11,"from","","",1461,[[]]],[11,"borrow","","",1461,[[]]],[11,"borrow_mut","","",1461,[[]]],[11,"try_from","","",1461,[[],["result",4]]],[11,"into","","",1461,[[]]],[11,"try_into","","",1461,[[],["result",4]]],[11,"type_id","","",1461,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::intflag","",1464,[[]]],[11,"borrow","","",1464,[[]]],[11,"borrow_mut","","",1464,[[]]],[11,"try_from","","",1464,[[],["result",4]]],[11,"into","","",1464,[[]]],[11,"try_into","","",1464,[[],["result",4]]],[11,"type_id","","",1464,[[],["typeid",3]]],[11,"from","","",1465,[[]]],[11,"borrow","","",1465,[[]]],[11,"borrow_mut","","",1465,[[]]],[11,"try_from","","",1465,[[],["result",4]]],[11,"into","","",1465,[[]]],[11,"try_into","","",1465,[[],["result",4]]],[11,"type_id","","",1465,[[],["typeid",3]]],[11,"from","","",1466,[[]]],[11,"borrow","","",1466,[[]]],[11,"borrow_mut","","",1466,[[]]],[11,"try_from","","",1466,[[],["result",4]]],[11,"into","","",1466,[[]]],[11,"try_into","","",1466,[[],["result",4]]],[11,"type_id","","",1466,[[],["typeid",3]]],[11,"from","","",1467,[[]]],[11,"borrow","","",1467,[[]]],[11,"borrow_mut","","",1467,[[]]],[11,"try_from","","",1467,[[],["result",4]]],[11,"into","","",1467,[[]]],[11,"try_into","","",1467,[[],["result",4]]],[11,"type_id","","",1467,[[],["typeid",3]]],[11,"from","","",1468,[[]]],[11,"borrow","","",1468,[[]]],[11,"borrow_mut","","",1468,[[]]],[11,"try_from","","",1468,[[],["result",4]]],[11,"into","","",1468,[[]]],[11,"try_into","","",1468,[[],["result",4]]],[11,"type_id","","",1468,[[],["typeid",3]]],[11,"from","","",1469,[[]]],[11,"borrow","","",1469,[[]]],[11,"borrow_mut","","",1469,[[]]],[11,"try_from","","",1469,[[],["result",4]]],[11,"into","","",1469,[[]]],[11,"try_into","","",1469,[[],["result",4]]],[11,"type_id","","",1469,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::status","",1472,[[]]],[11,"borrow","","",1472,[[]]],[11,"borrow_mut","","",1472,[[]]],[11,"try_from","","",1472,[[],["result",4]]],[11,"into","","",1472,[[]]],[11,"try_into","","",1472,[[],["result",4]]],[11,"type_id","","",1472,[[],["typeid",3]]],[11,"from","","",1473,[[]]],[11,"borrow","","",1473,[[]]],[11,"borrow_mut","","",1473,[[]]],[11,"try_from","","",1473,[[],["result",4]]],[11,"into","","",1473,[[]]],[11,"try_into","","",1473,[[],["result",4]]],[11,"type_id","","",1473,[[],["typeid",3]]],[11,"from","","",1474,[[]]],[11,"borrow","","",1474,[[]]],[11,"borrow_mut","","",1474,[[]]],[11,"try_from","","",1474,[[],["result",4]]],[11,"into","","",1474,[[]]],[11,"try_into","","",1474,[[],["result",4]]],[11,"type_id","","",1474,[[],["typeid",3]]],[11,"from","","",1475,[[]]],[11,"borrow","","",1475,[[]]],[11,"borrow_mut","","",1475,[[]]],[11,"try_from","","",1475,[[],["result",4]]],[11,"into","","",1475,[[]]],[11,"try_into","","",1475,[[],["result",4]]],[11,"type_id","","",1475,[[],["typeid",3]]],[11,"from","","",1476,[[]]],[11,"borrow","","",1476,[[]]],[11,"borrow_mut","","",1476,[[]]],[11,"try_from","","",1476,[[],["result",4]]],[11,"into","","",1476,[[]]],[11,"try_into","","",1476,[[],["result",4]]],[11,"type_id","","",1476,[[],["typeid",3]]],[11,"from","","",1477,[[]]],[11,"borrow","","",1477,[[]]],[11,"borrow_mut","","",1477,[[]]],[11,"try_from","","",1477,[[],["result",4]]],[11,"into","","",1477,[[]]],[11,"try_into","","",1477,[[],["result",4]]],[11,"type_id","","",1477,[[],["typeid",3]]],[11,"from","","",1478,[[]]],[11,"borrow","","",1478,[[]]],[11,"borrow_mut","","",1478,[[]]],[11,"try_from","","",1478,[[],["result",4]]],[11,"into","","",1478,[[]]],[11,"try_into","","",1478,[[],["result",4]]],[11,"type_id","","",1478,[[],["typeid",3]]],[11,"from","","",1479,[[]]],[11,"borrow","","",1479,[[]]],[11,"borrow_mut","","",1479,[[]]],[11,"try_from","","",1479,[[],["result",4]]],[11,"into","","",1479,[[]]],[11,"try_into","","",1479,[[],["result",4]]],[11,"type_id","","",1479,[[],["typeid",3]]],[11,"from","","",1480,[[]]],[11,"borrow","","",1480,[[]]],[11,"borrow_mut","","",1480,[[]]],[11,"try_from","","",1480,[[],["result",4]]],[11,"into","","",1480,[[]]],[11,"try_into","","",1480,[[],["result",4]]],[11,"type_id","","",1480,[[],["typeid",3]]],[11,"from","","",1481,[[]]],[11,"borrow","","",1481,[[]]],[11,"borrow_mut","","",1481,[[]]],[11,"try_from","","",1481,[[],["result",4]]],[11,"into","","",1481,[[]]],[11,"try_into","","",1481,[[],["result",4]]],[11,"type_id","","",1481,[[],["typeid",3]]],[11,"from","","",1482,[[]]],[11,"borrow","","",1482,[[]]],[11,"borrow_mut","","",1482,[[]]],[11,"try_from","","",1482,[[],["result",4]]],[11,"into","","",1482,[[]]],[11,"try_into","","",1482,[[],["result",4]]],[11,"type_id","","",1482,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::dbgctrl","",1485,[[]]],[11,"borrow","","",1485,[[]]],[11,"borrow_mut","","",1485,[[]]],[11,"try_from","","",1485,[[],["result",4]]],[11,"into","","",1485,[[]]],[11,"try_into","","",1485,[[],["result",4]]],[11,"type_id","","",1485,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::presc","",1491,[[]]],[11,"borrow","","",1491,[[]]],[11,"borrow_mut","","",1491,[[]]],[11,"try_from","","",1491,[[],["result",4]]],[11,"into","","",1491,[[]]],[11,"try_into","","",1491,[[],["result",4]]],[11,"type_id","","",1491,[[],["typeid",3]]],[11,"from","","",1489,[[]]],[11,"borrow","","",1489,[[]]],[11,"borrow_mut","","",1489,[[]]],[11,"try_from","","",1489,[[],["result",4]]],[11,"into","","",1489,[[]]],[11,"try_into","","",1489,[[],["result",4]]],[11,"type_id","","",1489,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::filter","",1494,[[]]],[11,"borrow","","",1494,[[]]],[11,"borrow_mut","","",1494,[[]]],[11,"try_from","","",1494,[[],["result",4]]],[11,"into","","",1494,[[]]],[11,"try_into","","",1494,[[],["result",4]]],[11,"type_id","","",1494,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::prescbuf","",1499,[[]]],[11,"borrow","","",1499,[[]]],[11,"borrow_mut","","",1499,[[]]],[11,"try_from","","",1499,[[],["result",4]]],[11,"into","","",1499,[[]]],[11,"try_into","","",1499,[[],["result",4]]],[11,"type_id","","",1499,[[],["typeid",3]]],[11,"from","","",1497,[[]]],[11,"borrow","","",1497,[[]]],[11,"borrow_mut","","",1497,[[]]],[11,"try_from","","",1497,[[],["result",4]]],[11,"into","","",1497,[[]]],[11,"try_into","","",1497,[[],["result",4]]],[11,"type_id","","",1497,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::filterbuf","",1502,[[]]],[11,"borrow","","",1502,[[]]],[11,"borrow_mut","","",1502,[[]]],[11,"try_from","","",1502,[[],["result",4]]],[11,"into","","",1502,[[]]],[11,"try_into","","",1502,[[],["result",4]]],[11,"type_id","","",1502,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::count","",1505,[[]]],[11,"borrow","","",1505,[[]]],[11,"borrow_mut","","",1505,[[]]],[11,"try_from","","",1505,[[],["result",4]]],[11,"into","","",1505,[[]]],[11,"try_into","","",1505,[[],["result",4]]],[11,"type_id","","",1505,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::cc","",1508,[[]]],[11,"borrow","","",1508,[[]]],[11,"borrow_mut","","",1508,[[]]],[11,"try_from","","",1508,[[],["result",4]]],[11,"into","","",1508,[[]]],[11,"try_into","","",1508,[[],["result",4]]],[11,"type_id","","",1508,[[],["typeid",3]]],[11,"from","atsamd51g::pdec::ccbuf","",1511,[[]]],[11,"borrow","","",1511,[[]]],[11,"borrow_mut","","",1511,[[]]],[11,"try_from","","",1511,[[],["result",4]]],[11,"into","","",1511,[[]]],[11,"try_into","","",1511,[[],["result",4]]],[11,"type_id","","",1511,[[],["typeid",3]]],[11,"from","atsamd51g::pm","",1514,[[]]],[11,"borrow","","",1514,[[]]],[11,"borrow_mut","","",1514,[[]]],[11,"try_from","","",1514,[[],["result",4]]],[11,"into","","",1514,[[]]],[11,"try_into","","",1514,[[],["result",4]]],[11,"type_id","","",1514,[[],["typeid",3]]],[11,"from","atsamd51g::pm::ctrla","",1515,[[]]],[11,"borrow","","",1515,[[]]],[11,"borrow_mut","","",1515,[[]]],[11,"try_from","","",1515,[[],["result",4]]],[11,"into","","",1515,[[]]],[11,"try_into","","",1515,[[],["result",4]]],[11,"type_id","","",1515,[[],["typeid",3]]],[11,"from","atsamd51g::pm::sleepcfg","",1520,[[]]],[11,"borrow","","",1520,[[]]],[11,"borrow_mut","","",1520,[[]]],[11,"try_from","","",1520,[[],["result",4]]],[11,"into","","",1520,[[]]],[11,"try_into","","",1520,[[],["result",4]]],[11,"type_id","","",1520,[[],["typeid",3]]],[11,"from","","",1518,[[]]],[11,"borrow","","",1518,[[]]],[11,"borrow_mut","","",1518,[[]]],[11,"try_from","","",1518,[[],["result",4]]],[11,"into","","",1518,[[]]],[11,"try_into","","",1518,[[],["result",4]]],[11,"type_id","","",1518,[[],["typeid",3]]],[11,"from","atsamd51g::pm::intenclr","",1523,[[]]],[11,"borrow","","",1523,[[]]],[11,"borrow_mut","","",1523,[[]]],[11,"try_from","","",1523,[[],["result",4]]],[11,"into","","",1523,[[]]],[11,"try_into","","",1523,[[],["result",4]]],[11,"type_id","","",1523,[[],["typeid",3]]],[11,"from","atsamd51g::pm::intenset","",1526,[[]]],[11,"borrow","","",1526,[[]]],[11,"borrow_mut","","",1526,[[]]],[11,"try_from","","",1526,[[],["result",4]]],[11,"into","","",1526,[[]]],[11,"try_into","","",1526,[[],["result",4]]],[11,"type_id","","",1526,[[],["typeid",3]]],[11,"from","atsamd51g::pm::intflag","",1529,[[]]],[11,"borrow","","",1529,[[]]],[11,"borrow_mut","","",1529,[[]]],[11,"try_from","","",1529,[[],["result",4]]],[11,"into","","",1529,[[]]],[11,"try_into","","",1529,[[],["result",4]]],[11,"type_id","","",1529,[[],["typeid",3]]],[11,"from","atsamd51g::pm::stdbycfg","",1535,[[]]],[11,"borrow","","",1535,[[]]],[11,"borrow_mut","","",1535,[[]]],[11,"try_from","","",1535,[[],["result",4]]],[11,"into","","",1535,[[]]],[11,"try_into","","",1535,[[],["result",4]]],[11,"type_id","","",1535,[[],["typeid",3]]],[11,"from","","",1537,[[]]],[11,"borrow","","",1537,[[]]],[11,"borrow_mut","","",1537,[[]]],[11,"try_from","","",1537,[[],["result",4]]],[11,"into","","",1537,[[]]],[11,"try_into","","",1537,[[],["result",4]]],[11,"type_id","","",1537,[[],["typeid",3]]],[11,"from","","",1532,[[]]],[11,"borrow","","",1532,[[]]],[11,"borrow_mut","","",1532,[[]]],[11,"try_from","","",1532,[[],["result",4]]],[11,"into","","",1532,[[]]],[11,"try_into","","",1532,[[],["result",4]]],[11,"type_id","","",1532,[[],["typeid",3]]],[11,"from","","",1533,[[]]],[11,"borrow","","",1533,[[]]],[11,"borrow_mut","","",1533,[[]]],[11,"try_from","","",1533,[[],["result",4]]],[11,"into","","",1533,[[]]],[11,"try_into","","",1533,[[],["result",4]]],[11,"type_id","","",1533,[[],["typeid",3]]],[11,"from","atsamd51g::pm::hibcfg","",1543,[[]]],[11,"borrow","","",1543,[[]]],[11,"borrow_mut","","",1543,[[]]],[11,"try_from","","",1543,[[],["result",4]]],[11,"into","","",1543,[[]]],[11,"try_into","","",1543,[[],["result",4]]],[11,"type_id","","",1543,[[],["typeid",3]]],[11,"from","","",1545,[[]]],[11,"borrow","","",1545,[[]]],[11,"borrow_mut","","",1545,[[]]],[11,"try_from","","",1545,[[],["result",4]]],[11,"into","","",1545,[[]]],[11,"try_into","","",1545,[[],["result",4]]],[11,"type_id","","",1545,[[],["typeid",3]]],[11,"from","","",1540,[[]]],[11,"borrow","","",1540,[[]]],[11,"borrow_mut","","",1540,[[]]],[11,"try_from","","",1540,[[],["result",4]]],[11,"into","","",1540,[[]]],[11,"try_into","","",1540,[[],["result",4]]],[11,"type_id","","",1540,[[],["typeid",3]]],[11,"from","","",1541,[[]]],[11,"borrow","","",1541,[[]]],[11,"borrow_mut","","",1541,[[]]],[11,"try_from","","",1541,[[],["result",4]]],[11,"into","","",1541,[[]]],[11,"try_into","","",1541,[[],["result",4]]],[11,"type_id","","",1541,[[],["typeid",3]]],[11,"from","atsamd51g::pm::bkupcfg","",1550,[[]]],[11,"borrow","","",1550,[[]]],[11,"borrow_mut","","",1550,[[]]],[11,"try_from","","",1550,[[],["result",4]]],[11,"into","","",1550,[[]]],[11,"try_into","","",1550,[[],["result",4]]],[11,"type_id","","",1550,[[],["typeid",3]]],[11,"from","","",1548,[[]]],[11,"borrow","","",1548,[[]]],[11,"borrow_mut","","",1548,[[]]],[11,"try_from","","",1548,[[],["result",4]]],[11,"into","","",1548,[[]]],[11,"try_into","","",1548,[[],["result",4]]],[11,"type_id","","",1548,[[],["typeid",3]]],[11,"from","atsamd51g::pm::pwsakdly","",1553,[[]]],[11,"borrow","","",1553,[[]]],[11,"borrow_mut","","",1553,[[]]],[11,"try_from","","",1553,[[],["result",4]]],[11,"into","","",1553,[[]]],[11,"try_into","","",1553,[[],["result",4]]],[11,"type_id","","",1553,[[],["typeid",3]]],[11,"from","","",1554,[[]]],[11,"borrow","","",1554,[[]]],[11,"borrow_mut","","",1554,[[]]],[11,"try_from","","",1554,[[],["result",4]]],[11,"into","","",1554,[[]]],[11,"try_into","","",1554,[[],["result",4]]],[11,"type_id","","",1554,[[],["typeid",3]]],[11,"from","atsamd51g::port","",1557,[[]]],[11,"borrow","","",1557,[[]]],[11,"borrow_mut","","",1557,[[]]],[11,"try_from","","",1557,[[],["result",4]]],[11,"into","","",1557,[[]]],[11,"try_into","","",1557,[[],["result",4]]],[11,"type_id","","",1557,[[],["typeid",3]]],[11,"from","","",1558,[[]]],[11,"borrow","","",1558,[[]]],[11,"borrow_mut","","",1558,[[]]],[11,"try_from","","",1558,[[],["result",4]]],[11,"into","","",1558,[[]]],[11,"try_into","","",1558,[[],["result",4]]],[11,"type_id","","",1558,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::dir","",1559,[[]]],[11,"borrow","","",1559,[[]]],[11,"borrow_mut","","",1559,[[]]],[11,"try_from","","",1559,[[],["result",4]]],[11,"into","","",1559,[[]]],[11,"try_into","","",1559,[[],["result",4]]],[11,"type_id","","",1559,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::dirclr","",1562,[[]]],[11,"borrow","","",1562,[[]]],[11,"borrow_mut","","",1562,[[]]],[11,"try_from","","",1562,[[],["result",4]]],[11,"into","","",1562,[[]]],[11,"try_into","","",1562,[[],["result",4]]],[11,"type_id","","",1562,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::dirset","",1565,[[]]],[11,"borrow","","",1565,[[]]],[11,"borrow_mut","","",1565,[[]]],[11,"try_from","","",1565,[[],["result",4]]],[11,"into","","",1565,[[]]],[11,"try_into","","",1565,[[],["result",4]]],[11,"type_id","","",1565,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::dirtgl","",1568,[[]]],[11,"borrow","","",1568,[[]]],[11,"borrow_mut","","",1568,[[]]],[11,"try_from","","",1568,[[],["result",4]]],[11,"into","","",1568,[[]]],[11,"try_into","","",1568,[[],["result",4]]],[11,"type_id","","",1568,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::out","",1571,[[]]],[11,"borrow","","",1571,[[]]],[11,"borrow_mut","","",1571,[[]]],[11,"try_from","","",1571,[[],["result",4]]],[11,"into","","",1571,[[]]],[11,"try_into","","",1571,[[],["result",4]]],[11,"type_id","","",1571,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::outclr","",1574,[[]]],[11,"borrow","","",1574,[[]]],[11,"borrow_mut","","",1574,[[]]],[11,"try_from","","",1574,[[],["result",4]]],[11,"into","","",1574,[[]]],[11,"try_into","","",1574,[[],["result",4]]],[11,"type_id","","",1574,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::outset","",1577,[[]]],[11,"borrow","","",1577,[[]]],[11,"borrow_mut","","",1577,[[]]],[11,"try_from","","",1577,[[],["result",4]]],[11,"into","","",1577,[[]]],[11,"try_into","","",1577,[[],["result",4]]],[11,"type_id","","",1577,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::outtgl","",1580,[[]]],[11,"borrow","","",1580,[[]]],[11,"borrow_mut","","",1580,[[]]],[11,"try_from","","",1580,[[],["result",4]]],[11,"into","","",1580,[[]]],[11,"try_into","","",1580,[[],["result",4]]],[11,"type_id","","",1580,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::ctrl","",1584,[[]]],[11,"borrow","","",1584,[[]]],[11,"borrow_mut","","",1584,[[]]],[11,"try_from","","",1584,[[],["result",4]]],[11,"into","","",1584,[[]]],[11,"try_into","","",1584,[[],["result",4]]],[11,"type_id","","",1584,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::wrconfig","",1587,[[]]],[11,"borrow","","",1587,[[]]],[11,"borrow_mut","","",1587,[[]]],[11,"try_from","","",1587,[[],["result",4]]],[11,"into","","",1587,[[]]],[11,"try_into","","",1587,[[],["result",4]]],[11,"type_id","","",1587,[[],["typeid",3]]],[11,"from","","",1588,[[]]],[11,"borrow","","",1588,[[]]],[11,"borrow_mut","","",1588,[[]]],[11,"try_from","","",1588,[[],["result",4]]],[11,"into","","",1588,[[]]],[11,"try_into","","",1588,[[],["result",4]]],[11,"type_id","","",1588,[[],["typeid",3]]],[11,"from","","",1589,[[]]],[11,"borrow","","",1589,[[]]],[11,"borrow_mut","","",1589,[[]]],[11,"try_from","","",1589,[[],["result",4]]],[11,"into","","",1589,[[]]],[11,"try_into","","",1589,[[],["result",4]]],[11,"type_id","","",1589,[[],["typeid",3]]],[11,"from","","",1590,[[]]],[11,"borrow","","",1590,[[]]],[11,"borrow_mut","","",1590,[[]]],[11,"try_from","","",1590,[[],["result",4]]],[11,"into","","",1590,[[]]],[11,"try_into","","",1590,[[],["result",4]]],[11,"type_id","","",1590,[[],["typeid",3]]],[11,"from","","",1591,[[]]],[11,"borrow","","",1591,[[]]],[11,"borrow_mut","","",1591,[[]]],[11,"try_from","","",1591,[[],["result",4]]],[11,"into","","",1591,[[]]],[11,"try_into","","",1591,[[],["result",4]]],[11,"type_id","","",1591,[[],["typeid",3]]],[11,"from","","",1592,[[]]],[11,"borrow","","",1592,[[]]],[11,"borrow_mut","","",1592,[[]]],[11,"try_from","","",1592,[[],["result",4]]],[11,"into","","",1592,[[]]],[11,"try_into","","",1592,[[],["result",4]]],[11,"type_id","","",1592,[[],["typeid",3]]],[11,"from","","",1593,[[]]],[11,"borrow","","",1593,[[]]],[11,"borrow_mut","","",1593,[[]]],[11,"try_from","","",1593,[[],["result",4]]],[11,"into","","",1593,[[]]],[11,"try_into","","",1593,[[],["result",4]]],[11,"type_id","","",1593,[[],["typeid",3]]],[11,"from","","",1594,[[]]],[11,"borrow","","",1594,[[]]],[11,"borrow_mut","","",1594,[[]]],[11,"try_from","","",1594,[[],["result",4]]],[11,"into","","",1594,[[]]],[11,"try_into","","",1594,[[],["result",4]]],[11,"type_id","","",1594,[[],["typeid",3]]],[11,"from","","",1595,[[]]],[11,"borrow","","",1595,[[]]],[11,"borrow_mut","","",1595,[[]]],[11,"try_from","","",1595,[[],["result",4]]],[11,"into","","",1595,[[]]],[11,"try_into","","",1595,[[],["result",4]]],[11,"type_id","","",1595,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::evctrl","",1598,[[]]],[11,"borrow","","",1598,[[]]],[11,"borrow_mut","","",1598,[[]]],[11,"try_from","","",1598,[[],["result",4]]],[11,"into","","",1598,[[]]],[11,"try_into","","",1598,[[],["result",4]]],[11,"type_id","","",1598,[[],["typeid",3]]],[11,"from","","",1600,[[]]],[11,"borrow","","",1600,[[]]],[11,"borrow_mut","","",1600,[[]]],[11,"try_from","","",1600,[[],["result",4]]],[11,"into","","",1600,[[]]],[11,"try_into","","",1600,[[],["result",4]]],[11,"type_id","","",1600,[[],["typeid",3]]],[11,"from","","",1601,[[]]],[11,"borrow","","",1601,[[]]],[11,"borrow_mut","","",1601,[[]]],[11,"try_from","","",1601,[[],["result",4]]],[11,"into","","",1601,[[]]],[11,"try_into","","",1601,[[],["result",4]]],[11,"type_id","","",1601,[[],["typeid",3]]],[11,"from","","",1602,[[]]],[11,"borrow","","",1602,[[]]],[11,"borrow_mut","","",1602,[[]]],[11,"try_from","","",1602,[[],["result",4]]],[11,"into","","",1602,[[]]],[11,"try_into","","",1602,[[],["result",4]]],[11,"type_id","","",1602,[[],["typeid",3]]],[11,"from","","",1603,[[]]],[11,"borrow","","",1603,[[]]],[11,"borrow_mut","","",1603,[[]]],[11,"try_from","","",1603,[[],["result",4]]],[11,"into","","",1603,[[]]],[11,"try_into","","",1603,[[],["result",4]]],[11,"type_id","","",1603,[[],["typeid",3]]],[11,"from","","",1604,[[]]],[11,"borrow","","",1604,[[]]],[11,"borrow_mut","","",1604,[[]]],[11,"try_from","","",1604,[[],["result",4]]],[11,"into","","",1604,[[]]],[11,"try_into","","",1604,[[],["result",4]]],[11,"type_id","","",1604,[[],["typeid",3]]],[11,"from","","",1605,[[]]],[11,"borrow","","",1605,[[]]],[11,"borrow_mut","","",1605,[[]]],[11,"try_from","","",1605,[[],["result",4]]],[11,"into","","",1605,[[]]],[11,"try_into","","",1605,[[],["result",4]]],[11,"type_id","","",1605,[[],["typeid",3]]],[11,"from","","",1606,[[]]],[11,"borrow","","",1606,[[]]],[11,"borrow_mut","","",1606,[[]]],[11,"try_from","","",1606,[[],["result",4]]],[11,"into","","",1606,[[]]],[11,"try_into","","",1606,[[],["result",4]]],[11,"type_id","","",1606,[[],["typeid",3]]],[11,"from","","",1607,[[]]],[11,"borrow","","",1607,[[]]],[11,"borrow_mut","","",1607,[[]]],[11,"try_from","","",1607,[[],["result",4]]],[11,"into","","",1607,[[]]],[11,"try_into","","",1607,[[],["result",4]]],[11,"type_id","","",1607,[[],["typeid",3]]],[11,"from","","",1608,[[]]],[11,"borrow","","",1608,[[]]],[11,"borrow_mut","","",1608,[[]]],[11,"try_from","","",1608,[[],["result",4]]],[11,"into","","",1608,[[]]],[11,"try_into","","",1608,[[],["result",4]]],[11,"type_id","","",1608,[[],["typeid",3]]],[11,"from","","",1609,[[]]],[11,"borrow","","",1609,[[]]],[11,"borrow_mut","","",1609,[[]]],[11,"try_from","","",1609,[[],["result",4]]],[11,"into","","",1609,[[]]],[11,"try_into","","",1609,[[],["result",4]]],[11,"type_id","","",1609,[[],["typeid",3]]],[11,"from","","",1610,[[]]],[11,"borrow","","",1610,[[]]],[11,"borrow_mut","","",1610,[[]]],[11,"try_from","","",1610,[[],["result",4]]],[11,"into","","",1610,[[]]],[11,"try_into","","",1610,[[],["result",4]]],[11,"type_id","","",1610,[[],["typeid",3]]],[11,"from","","",1597,[[]]],[11,"borrow","","",1597,[[]]],[11,"borrow_mut","","",1597,[[]]],[11,"try_from","","",1597,[[],["result",4]]],[11,"into","","",1597,[[]]],[11,"try_into","","",1597,[[],["result",4]]],[11,"type_id","","",1597,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::pmux","",1613,[[]]],[11,"borrow","","",1613,[[]]],[11,"borrow_mut","","",1613,[[]]],[11,"try_from","","",1613,[[],["result",4]]],[11,"into","","",1613,[[]]],[11,"try_into","","",1613,[[],["result",4]]],[11,"type_id","","",1613,[[],["typeid",3]]],[11,"from","","",1614,[[]]],[11,"borrow","","",1614,[[]]],[11,"borrow_mut","","",1614,[[]]],[11,"try_from","","",1614,[[],["result",4]]],[11,"into","","",1614,[[]]],[11,"try_into","","",1614,[[],["result",4]]],[11,"type_id","","",1614,[[],["typeid",3]]],[11,"from","atsamd51g::port::group::pincfg","",1617,[[]]],[11,"borrow","","",1617,[[]]],[11,"borrow_mut","","",1617,[[]]],[11,"try_from","","",1617,[[],["result",4]]],[11,"into","","",1617,[[]]],[11,"try_into","","",1617,[[],["result",4]]],[11,"type_id","","",1617,[[],["typeid",3]]],[11,"from","","",1618,[[]]],[11,"borrow","","",1618,[[]]],[11,"borrow_mut","","",1618,[[]]],[11,"try_from","","",1618,[[],["result",4]]],[11,"into","","",1618,[[]]],[11,"try_into","","",1618,[[],["result",4]]],[11,"type_id","","",1618,[[],["typeid",3]]],[11,"from","","",1619,[[]]],[11,"borrow","","",1619,[[]]],[11,"borrow_mut","","",1619,[[]]],[11,"try_from","","",1619,[[],["result",4]]],[11,"into","","",1619,[[]]],[11,"try_into","","",1619,[[],["result",4]]],[11,"type_id","","",1619,[[],["typeid",3]]],[11,"from","","",1620,[[]]],[11,"borrow","","",1620,[[]]],[11,"borrow_mut","","",1620,[[]]],[11,"try_from","","",1620,[[],["result",4]]],[11,"into","","",1620,[[]]],[11,"try_into","","",1620,[[],["result",4]]],[11,"type_id","","",1620,[[],["typeid",3]]],[11,"from","atsamd51g::qspi","",1623,[[]]],[11,"borrow","","",1623,[[]]],[11,"borrow_mut","","",1623,[[]]],[11,"try_from","","",1623,[[],["result",4]]],[11,"into","","",1623,[[]]],[11,"try_into","","",1623,[[],["result",4]]],[11,"type_id","","",1623,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::ctrla","",1624,[[]]],[11,"borrow","","",1624,[[]]],[11,"borrow_mut","","",1624,[[]]],[11,"try_from","","",1624,[[],["result",4]]],[11,"into","","",1624,[[]]],[11,"try_into","","",1624,[[],["result",4]]],[11,"type_id","","",1624,[[],["typeid",3]]],[11,"from","","",1625,[[]]],[11,"borrow","","",1625,[[]]],[11,"borrow_mut","","",1625,[[]]],[11,"try_from","","",1625,[[],["result",4]]],[11,"into","","",1625,[[]]],[11,"try_into","","",1625,[[],["result",4]]],[11,"type_id","","",1625,[[],["typeid",3]]],[11,"from","","",1626,[[]]],[11,"borrow","","",1626,[[]]],[11,"borrow_mut","","",1626,[[]]],[11,"try_from","","",1626,[[],["result",4]]],[11,"into","","",1626,[[]]],[11,"try_into","","",1626,[[],["result",4]]],[11,"type_id","","",1626,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::ctrlb","",1633,[[]]],[11,"borrow","","",1633,[[]]],[11,"borrow_mut","","",1633,[[]]],[11,"try_from","","",1633,[[],["result",4]]],[11,"into","","",1633,[[]]],[11,"try_into","","",1633,[[],["result",4]]],[11,"type_id","","",1633,[[],["typeid",3]]],[11,"from","","",1634,[[]]],[11,"borrow","","",1634,[[]]],[11,"borrow_mut","","",1634,[[]]],[11,"try_from","","",1634,[[],["result",4]]],[11,"into","","",1634,[[]]],[11,"try_into","","",1634,[[],["result",4]]],[11,"type_id","","",1634,[[],["typeid",3]]],[11,"from","","",1635,[[]]],[11,"borrow","","",1635,[[]]],[11,"borrow_mut","","",1635,[[]]],[11,"try_from","","",1635,[[],["result",4]]],[11,"into","","",1635,[[]]],[11,"try_into","","",1635,[[],["result",4]]],[11,"type_id","","",1635,[[],["typeid",3]]],[11,"from","","",1636,[[]]],[11,"borrow","","",1636,[[]]],[11,"borrow_mut","","",1636,[[]]],[11,"try_from","","",1636,[[],["result",4]]],[11,"into","","",1636,[[]]],[11,"try_into","","",1636,[[],["result",4]]],[11,"type_id","","",1636,[[],["typeid",3]]],[11,"from","","",1638,[[]]],[11,"borrow","","",1638,[[]]],[11,"borrow_mut","","",1638,[[]]],[11,"try_from","","",1638,[[],["result",4]]],[11,"into","","",1638,[[]]],[11,"try_into","","",1638,[[],["result",4]]],[11,"type_id","","",1638,[[],["typeid",3]]],[11,"from","","",1640,[[]]],[11,"borrow","","",1640,[[]]],[11,"borrow_mut","","",1640,[[]]],[11,"try_from","","",1640,[[],["result",4]]],[11,"into","","",1640,[[]]],[11,"try_into","","",1640,[[],["result",4]]],[11,"type_id","","",1640,[[],["typeid",3]]],[11,"from","","",1641,[[]]],[11,"borrow","","",1641,[[]]],[11,"borrow_mut","","",1641,[[]]],[11,"try_from","","",1641,[[],["result",4]]],[11,"into","","",1641,[[]]],[11,"try_into","","",1641,[[],["result",4]]],[11,"type_id","","",1641,[[],["typeid",3]]],[11,"from","","",1642,[[]]],[11,"borrow","","",1642,[[]]],[11,"borrow_mut","","",1642,[[]]],[11,"try_from","","",1642,[[],["result",4]]],[11,"into","","",1642,[[]]],[11,"try_into","","",1642,[[],["result",4]]],[11,"type_id","","",1642,[[],["typeid",3]]],[11,"from","","",1629,[[]]],[11,"borrow","","",1629,[[]]],[11,"borrow_mut","","",1629,[[]]],[11,"try_from","","",1629,[[],["result",4]]],[11,"into","","",1629,[[]]],[11,"try_into","","",1629,[[],["result",4]]],[11,"type_id","","",1629,[[],["typeid",3]]],[11,"from","","",1630,[[]]],[11,"borrow","","",1630,[[]]],[11,"borrow_mut","","",1630,[[]]],[11,"try_from","","",1630,[[],["result",4]]],[11,"into","","",1630,[[]]],[11,"try_into","","",1630,[[],["result",4]]],[11,"type_id","","",1630,[[],["typeid",3]]],[11,"from","","",1631,[[]]],[11,"borrow","","",1631,[[]]],[11,"borrow_mut","","",1631,[[]]],[11,"try_from","","",1631,[[],["result",4]]],[11,"into","","",1631,[[]]],[11,"try_into","","",1631,[[],["result",4]]],[11,"type_id","","",1631,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::baud","",1645,[[]]],[11,"borrow","","",1645,[[]]],[11,"borrow_mut","","",1645,[[]]],[11,"try_from","","",1645,[[],["result",4]]],[11,"into","","",1645,[[]]],[11,"try_into","","",1645,[[],["result",4]]],[11,"type_id","","",1645,[[],["typeid",3]]],[11,"from","","",1646,[[]]],[11,"borrow","","",1646,[[]]],[11,"borrow_mut","","",1646,[[]]],[11,"try_from","","",1646,[[],["result",4]]],[11,"into","","",1646,[[]]],[11,"try_into","","",1646,[[],["result",4]]],[11,"type_id","","",1646,[[],["typeid",3]]],[11,"from","","",1647,[[]]],[11,"borrow","","",1647,[[]]],[11,"borrow_mut","","",1647,[[]]],[11,"try_from","","",1647,[[],["result",4]]],[11,"into","","",1647,[[]]],[11,"try_into","","",1647,[[],["result",4]]],[11,"type_id","","",1647,[[],["typeid",3]]],[11,"from","","",1648,[[]]],[11,"borrow","","",1648,[[]]],[11,"borrow_mut","","",1648,[[]]],[11,"try_from","","",1648,[[],["result",4]]],[11,"into","","",1648,[[]]],[11,"try_into","","",1648,[[],["result",4]]],[11,"type_id","","",1648,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::txdata","",1652,[[]]],[11,"borrow","","",1652,[[]]],[11,"borrow_mut","","",1652,[[]]],[11,"try_from","","",1652,[[],["result",4]]],[11,"into","","",1652,[[]]],[11,"try_into","","",1652,[[],["result",4]]],[11,"type_id","","",1652,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::intenclr","",1654,[[]]],[11,"borrow","","",1654,[[]]],[11,"borrow_mut","","",1654,[[]]],[11,"try_from","","",1654,[[],["result",4]]],[11,"into","","",1654,[[]]],[11,"try_into","","",1654,[[],["result",4]]],[11,"type_id","","",1654,[[],["typeid",3]]],[11,"from","","",1655,[[]]],[11,"borrow","","",1655,[[]]],[11,"borrow_mut","","",1655,[[]]],[11,"try_from","","",1655,[[],["result",4]]],[11,"into","","",1655,[[]]],[11,"try_into","","",1655,[[],["result",4]]],[11,"type_id","","",1655,[[],["typeid",3]]],[11,"from","","",1656,[[]]],[11,"borrow","","",1656,[[]]],[11,"borrow_mut","","",1656,[[]]],[11,"try_from","","",1656,[[],["result",4]]],[11,"into","","",1656,[[]]],[11,"try_into","","",1656,[[],["result",4]]],[11,"type_id","","",1656,[[],["typeid",3]]],[11,"from","","",1657,[[]]],[11,"borrow","","",1657,[[]]],[11,"borrow_mut","","",1657,[[]]],[11,"try_from","","",1657,[[],["result",4]]],[11,"into","","",1657,[[]]],[11,"try_into","","",1657,[[],["result",4]]],[11,"type_id","","",1657,[[],["typeid",3]]],[11,"from","","",1658,[[]]],[11,"borrow","","",1658,[[]]],[11,"borrow_mut","","",1658,[[]]],[11,"try_from","","",1658,[[],["result",4]]],[11,"into","","",1658,[[]]],[11,"try_into","","",1658,[[],["result",4]]],[11,"type_id","","",1658,[[],["typeid",3]]],[11,"from","","",1659,[[]]],[11,"borrow","","",1659,[[]]],[11,"borrow_mut","","",1659,[[]]],[11,"try_from","","",1659,[[],["result",4]]],[11,"into","","",1659,[[]]],[11,"try_into","","",1659,[[],["result",4]]],[11,"type_id","","",1659,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::intenset","",1662,[[]]],[11,"borrow","","",1662,[[]]],[11,"borrow_mut","","",1662,[[]]],[11,"try_from","","",1662,[[],["result",4]]],[11,"into","","",1662,[[]]],[11,"try_into","","",1662,[[],["result",4]]],[11,"type_id","","",1662,[[],["typeid",3]]],[11,"from","","",1663,[[]]],[11,"borrow","","",1663,[[]]],[11,"borrow_mut","","",1663,[[]]],[11,"try_from","","",1663,[[],["result",4]]],[11,"into","","",1663,[[]]],[11,"try_into","","",1663,[[],["result",4]]],[11,"type_id","","",1663,[[],["typeid",3]]],[11,"from","","",1664,[[]]],[11,"borrow","","",1664,[[]]],[11,"borrow_mut","","",1664,[[]]],[11,"try_from","","",1664,[[],["result",4]]],[11,"into","","",1664,[[]]],[11,"try_into","","",1664,[[],["result",4]]],[11,"type_id","","",1664,[[],["typeid",3]]],[11,"from","","",1665,[[]]],[11,"borrow","","",1665,[[]]],[11,"borrow_mut","","",1665,[[]]],[11,"try_from","","",1665,[[],["result",4]]],[11,"into","","",1665,[[]]],[11,"try_into","","",1665,[[],["result",4]]],[11,"type_id","","",1665,[[],["typeid",3]]],[11,"from","","",1666,[[]]],[11,"borrow","","",1666,[[]]],[11,"borrow_mut","","",1666,[[]]],[11,"try_from","","",1666,[[],["result",4]]],[11,"into","","",1666,[[]]],[11,"try_into","","",1666,[[],["result",4]]],[11,"type_id","","",1666,[[],["typeid",3]]],[11,"from","","",1667,[[]]],[11,"borrow","","",1667,[[]]],[11,"borrow_mut","","",1667,[[]]],[11,"try_from","","",1667,[[],["result",4]]],[11,"into","","",1667,[[]]],[11,"try_into","","",1667,[[],["result",4]]],[11,"type_id","","",1667,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::intflag","",1670,[[]]],[11,"borrow","","",1670,[[]]],[11,"borrow_mut","","",1670,[[]]],[11,"try_from","","",1670,[[],["result",4]]],[11,"into","","",1670,[[]]],[11,"try_into","","",1670,[[],["result",4]]],[11,"type_id","","",1670,[[],["typeid",3]]],[11,"from","","",1671,[[]]],[11,"borrow","","",1671,[[]]],[11,"borrow_mut","","",1671,[[]]],[11,"try_from","","",1671,[[],["result",4]]],[11,"into","","",1671,[[]]],[11,"try_into","","",1671,[[],["result",4]]],[11,"type_id","","",1671,[[],["typeid",3]]],[11,"from","","",1672,[[]]],[11,"borrow","","",1672,[[]]],[11,"borrow_mut","","",1672,[[]]],[11,"try_from","","",1672,[[],["result",4]]],[11,"into","","",1672,[[]]],[11,"try_into","","",1672,[[],["result",4]]],[11,"type_id","","",1672,[[],["typeid",3]]],[11,"from","","",1673,[[]]],[11,"borrow","","",1673,[[]]],[11,"borrow_mut","","",1673,[[]]],[11,"try_from","","",1673,[[],["result",4]]],[11,"into","","",1673,[[]]],[11,"try_into","","",1673,[[],["result",4]]],[11,"type_id","","",1673,[[],["typeid",3]]],[11,"from","","",1674,[[]]],[11,"borrow","","",1674,[[]]],[11,"borrow_mut","","",1674,[[]]],[11,"try_from","","",1674,[[],["result",4]]],[11,"into","","",1674,[[]]],[11,"try_into","","",1674,[[],["result",4]]],[11,"type_id","","",1674,[[],["typeid",3]]],[11,"from","","",1675,[[]]],[11,"borrow","","",1675,[[]]],[11,"borrow_mut","","",1675,[[]]],[11,"try_from","","",1675,[[],["result",4]]],[11,"into","","",1675,[[]]],[11,"try_into","","",1675,[[],["result",4]]],[11,"type_id","","",1675,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::instraddr","",1679,[[]]],[11,"borrow","","",1679,[[]]],[11,"borrow_mut","","",1679,[[]]],[11,"try_from","","",1679,[[],["result",4]]],[11,"into","","",1679,[[]]],[11,"try_into","","",1679,[[],["result",4]]],[11,"type_id","","",1679,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::instrctrl","",1682,[[]]],[11,"borrow","","",1682,[[]]],[11,"borrow_mut","","",1682,[[]]],[11,"try_from","","",1682,[[],["result",4]]],[11,"into","","",1682,[[]]],[11,"try_into","","",1682,[[],["result",4]]],[11,"type_id","","",1682,[[],["typeid",3]]],[11,"from","","",1683,[[]]],[11,"borrow","","",1683,[[]]],[11,"borrow_mut","","",1683,[[]]],[11,"try_from","","",1683,[[],["result",4]]],[11,"into","","",1683,[[]]],[11,"try_into","","",1683,[[],["result",4]]],[11,"type_id","","",1683,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::instrframe","",1691,[[]]],[11,"borrow","","",1691,[[]]],[11,"borrow_mut","","",1691,[[]]],[11,"try_from","","",1691,[[],["result",4]]],[11,"into","","",1691,[[]]],[11,"try_into","","",1691,[[],["result",4]]],[11,"type_id","","",1691,[[],["typeid",3]]],[11,"from","","",1692,[[]]],[11,"borrow","","",1692,[[]]],[11,"borrow_mut","","",1692,[[]]],[11,"try_from","","",1692,[[],["result",4]]],[11,"into","","",1692,[[]]],[11,"try_into","","",1692,[[],["result",4]]],[11,"type_id","","",1692,[[],["typeid",3]]],[11,"from","","",1693,[[]]],[11,"borrow","","",1693,[[]]],[11,"borrow_mut","","",1693,[[]]],[11,"try_from","","",1693,[[],["result",4]]],[11,"into","","",1693,[[]]],[11,"try_into","","",1693,[[],["result",4]]],[11,"type_id","","",1693,[[],["typeid",3]]],[11,"from","","",1694,[[]]],[11,"borrow","","",1694,[[]]],[11,"borrow_mut","","",1694,[[]]],[11,"try_from","","",1694,[[],["result",4]]],[11,"into","","",1694,[[]]],[11,"try_into","","",1694,[[],["result",4]]],[11,"type_id","","",1694,[[],["typeid",3]]],[11,"from","","",1695,[[]]],[11,"borrow","","",1695,[[]]],[11,"borrow_mut","","",1695,[[]]],[11,"try_from","","",1695,[[],["result",4]]],[11,"into","","",1695,[[]]],[11,"try_into","","",1695,[[],["result",4]]],[11,"type_id","","",1695,[[],["typeid",3]]],[11,"from","","",1697,[[]]],[11,"borrow","","",1697,[[]]],[11,"borrow_mut","","",1697,[[]]],[11,"try_from","","",1697,[[],["result",4]]],[11,"into","","",1697,[[]]],[11,"try_into","","",1697,[[],["result",4]]],[11,"type_id","","",1697,[[],["typeid",3]]],[11,"from","","",1699,[[]]],[11,"borrow","","",1699,[[]]],[11,"borrow_mut","","",1699,[[]]],[11,"try_from","","",1699,[[],["result",4]]],[11,"into","","",1699,[[]]],[11,"try_into","","",1699,[[],["result",4]]],[11,"type_id","","",1699,[[],["typeid",3]]],[11,"from","","",1701,[[]]],[11,"borrow","","",1701,[[]]],[11,"borrow_mut","","",1701,[[]]],[11,"try_from","","",1701,[[],["result",4]]],[11,"into","","",1701,[[]]],[11,"try_into","","",1701,[[],["result",4]]],[11,"type_id","","",1701,[[],["typeid",3]]],[11,"from","","",1702,[[]]],[11,"borrow","","",1702,[[]]],[11,"borrow_mut","","",1702,[[]]],[11,"try_from","","",1702,[[],["result",4]]],[11,"into","","",1702,[[]]],[11,"try_into","","",1702,[[],["result",4]]],[11,"type_id","","",1702,[[],["typeid",3]]],[11,"from","","",1703,[[]]],[11,"borrow","","",1703,[[]]],[11,"borrow_mut","","",1703,[[]]],[11,"try_from","","",1703,[[],["result",4]]],[11,"into","","",1703,[[]]],[11,"try_into","","",1703,[[],["result",4]]],[11,"type_id","","",1703,[[],["typeid",3]]],[11,"from","","",1704,[[]]],[11,"borrow","","",1704,[[]]],[11,"borrow_mut","","",1704,[[]]],[11,"try_from","","",1704,[[],["result",4]]],[11,"into","","",1704,[[]]],[11,"try_into","","",1704,[[],["result",4]]],[11,"type_id","","",1704,[[],["typeid",3]]],[11,"from","","",1686,[[]]],[11,"borrow","","",1686,[[]]],[11,"borrow_mut","","",1686,[[]]],[11,"try_from","","",1686,[[],["result",4]]],[11,"into","","",1686,[[]]],[11,"try_into","","",1686,[[],["result",4]]],[11,"type_id","","",1686,[[],["typeid",3]]],[11,"from","","",1687,[[]]],[11,"borrow","","",1687,[[]]],[11,"borrow_mut","","",1687,[[]]],[11,"try_from","","",1687,[[],["result",4]]],[11,"into","","",1687,[[]]],[11,"try_into","","",1687,[[],["result",4]]],[11,"type_id","","",1687,[[],["typeid",3]]],[11,"from","","",1688,[[]]],[11,"borrow","","",1688,[[]]],[11,"borrow_mut","","",1688,[[]]],[11,"try_from","","",1688,[[],["result",4]]],[11,"into","","",1688,[[]]],[11,"try_into","","",1688,[[],["result",4]]],[11,"type_id","","",1688,[[],["typeid",3]]],[11,"from","","",1689,[[]]],[11,"borrow","","",1689,[[]]],[11,"borrow_mut","","",1689,[[]]],[11,"try_from","","",1689,[[],["result",4]]],[11,"into","","",1689,[[]]],[11,"try_into","","",1689,[[],["result",4]]],[11,"type_id","","",1689,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::scrambctrl","",1707,[[]]],[11,"borrow","","",1707,[[]]],[11,"borrow_mut","","",1707,[[]]],[11,"try_from","","",1707,[[],["result",4]]],[11,"into","","",1707,[[]]],[11,"try_into","","",1707,[[],["result",4]]],[11,"type_id","","",1707,[[],["typeid",3]]],[11,"from","","",1708,[[]]],[11,"borrow","","",1708,[[]]],[11,"borrow_mut","","",1708,[[]]],[11,"try_from","","",1708,[[],["result",4]]],[11,"into","","",1708,[[]]],[11,"try_into","","",1708,[[],["result",4]]],[11,"type_id","","",1708,[[],["typeid",3]]],[11,"from","atsamd51g::qspi::scrambkey","",1711,[[]]],[11,"borrow","","",1711,[[]]],[11,"borrow_mut","","",1711,[[]]],[11,"try_from","","",1711,[[],["result",4]]],[11,"into","","",1711,[[]]],[11,"try_into","","",1711,[[],["result",4]]],[11,"type_id","","",1711,[[],["typeid",3]]],[11,"from","atsamd51g::ramecc","",1713,[[]]],[11,"borrow","","",1713,[[]]],[11,"borrow_mut","","",1713,[[]]],[11,"try_from","","",1713,[[],["result",4]]],[11,"into","","",1713,[[]]],[11,"try_into","","",1713,[[],["result",4]]],[11,"type_id","","",1713,[[],["typeid",3]]],[11,"from","atsamd51g::ramecc::intenclr","",1714,[[]]],[11,"borrow","","",1714,[[]]],[11,"borrow_mut","","",1714,[[]]],[11,"try_from","","",1714,[[],["result",4]]],[11,"into","","",1714,[[]]],[11,"try_into","","",1714,[[],["result",4]]],[11,"type_id","","",1714,[[],["typeid",3]]],[11,"from","","",1715,[[]]],[11,"borrow","","",1715,[[]]],[11,"borrow_mut","","",1715,[[]]],[11,"try_from","","",1715,[[],["result",4]]],[11,"into","","",1715,[[]]],[11,"try_into","","",1715,[[],["result",4]]],[11,"type_id","","",1715,[[],["typeid",3]]],[11,"from","atsamd51g::ramecc::intenset","",1718,[[]]],[11,"borrow","","",1718,[[]]],[11,"borrow_mut","","",1718,[[]]],[11,"try_from","","",1718,[[],["result",4]]],[11,"into","","",1718,[[]]],[11,"try_into","","",1718,[[],["result",4]]],[11,"type_id","","",1718,[[],["typeid",3]]],[11,"from","","",1719,[[]]],[11,"borrow","","",1719,[[]]],[11,"borrow_mut","","",1719,[[]]],[11,"try_from","","",1719,[[],["result",4]]],[11,"into","","",1719,[[]]],[11,"try_into","","",1719,[[],["result",4]]],[11,"type_id","","",1719,[[],["typeid",3]]],[11,"from","atsamd51g::ramecc::intflag","",1722,[[]]],[11,"borrow","","",1722,[[]]],[11,"borrow_mut","","",1722,[[]]],[11,"try_from","","",1722,[[],["result",4]]],[11,"into","","",1722,[[]]],[11,"try_into","","",1722,[[],["result",4]]],[11,"type_id","","",1722,[[],["typeid",3]]],[11,"from","","",1723,[[]]],[11,"borrow","","",1723,[[]]],[11,"borrow_mut","","",1723,[[]]],[11,"try_from","","",1723,[[],["result",4]]],[11,"into","","",1723,[[]]],[11,"try_into","","",1723,[[],["result",4]]],[11,"type_id","","",1723,[[],["typeid",3]]],[11,"from","atsamd51g::ramecc::dbgctrl","",1728,[[]]],[11,"borrow","","",1728,[[]]],[11,"borrow_mut","","",1728,[[]]],[11,"try_from","","",1728,[[],["result",4]]],[11,"into","","",1728,[[]]],[11,"try_into","","",1728,[[],["result",4]]],[11,"type_id","","",1728,[[],["typeid",3]]],[11,"from","","",1729,[[]]],[11,"borrow","","",1729,[[]]],[11,"borrow_mut","","",1729,[[]]],[11,"try_from","","",1729,[[],["result",4]]],[11,"into","","",1729,[[]]],[11,"try_into","","",1729,[[],["result",4]]],[11,"type_id","","",1729,[[],["typeid",3]]],[11,"from","atsamd51g::rstc","",1732,[[]]],[11,"borrow","","",1732,[[]]],[11,"borrow_mut","","",1732,[[]]],[11,"try_from","","",1732,[[],["result",4]]],[11,"into","","",1732,[[]]],[11,"try_into","","",1732,[[],["result",4]]],[11,"type_id","","",1732,[[],["typeid",3]]],[11,"from","atsamd51g::rtc","",2208,[[]]],[11,"borrow","","",2208,[[]]],[11,"borrow_mut","","",2208,[[]]],[11,"try_from","","",2208,[[],["result",4]]],[11,"into","","",2208,[[]]],[11,"try_into","","",2208,[[],["result",4]]],[11,"type_id","","",2208,[[],["typeid",3]]],[11,"from","","",1735,[[]]],[11,"borrow","","",1735,[[]]],[11,"borrow_mut","","",1735,[[]]],[11,"try_from","","",1735,[[],["result",4]]],[11,"into","","",1735,[[]]],[11,"try_into","","",1735,[[],["result",4]]],[11,"type_id","","",1735,[[],["typeid",3]]],[11,"from","","",1736,[[]]],[11,"borrow","","",1736,[[]]],[11,"borrow_mut","","",1736,[[]]],[11,"try_from","","",1736,[[],["result",4]]],[11,"into","","",1736,[[]]],[11,"try_into","","",1736,[[],["result",4]]],[11,"type_id","","",1736,[[],["typeid",3]]],[11,"from","","",1737,[[]]],[11,"borrow","","",1737,[[]]],[11,"borrow_mut","","",1737,[[]]],[11,"try_from","","",1737,[[],["result",4]]],[11,"into","","",1737,[[]]],[11,"try_into","","",1737,[[],["result",4]]],[11,"type_id","","",1737,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::ctrla","",1740,[[]]],[11,"borrow","","",1740,[[]]],[11,"borrow_mut","","",1740,[[]]],[11,"try_from","","",1740,[[],["result",4]]],[11,"into","","",1740,[[]]],[11,"try_into","","",1740,[[],["result",4]]],[11,"type_id","","",1740,[[],["typeid",3]]],[11,"from","","",1741,[[]]],[11,"borrow","","",1741,[[]]],[11,"borrow_mut","","",1741,[[]]],[11,"try_from","","",1741,[[],["result",4]]],[11,"into","","",1741,[[]]],[11,"try_into","","",1741,[[],["result",4]]],[11,"type_id","","",1741,[[],["typeid",3]]],[11,"from","","",1743,[[]]],[11,"borrow","","",1743,[[]]],[11,"borrow_mut","","",1743,[[]]],[11,"try_from","","",1743,[[],["result",4]]],[11,"into","","",1743,[[]]],[11,"try_into","","",1743,[[],["result",4]]],[11,"type_id","","",1743,[[],["typeid",3]]],[11,"from","","",1744,[[]]],[11,"borrow","","",1744,[[]]],[11,"borrow_mut","","",1744,[[]]],[11,"try_from","","",1744,[[],["result",4]]],[11,"into","","",1744,[[]]],[11,"try_into","","",1744,[[],["result",4]]],[11,"type_id","","",1744,[[],["typeid",3]]],[11,"from","","",1746,[[]]],[11,"borrow","","",1746,[[]]],[11,"borrow_mut","","",1746,[[]]],[11,"try_from","","",1746,[[],["result",4]]],[11,"into","","",1746,[[]]],[11,"try_into","","",1746,[[],["result",4]]],[11,"type_id","","",1746,[[],["typeid",3]]],[11,"from","","",1747,[[]]],[11,"borrow","","",1747,[[]]],[11,"borrow_mut","","",1747,[[]]],[11,"try_from","","",1747,[[],["result",4]]],[11,"into","","",1747,[[]]],[11,"try_into","","",1747,[[],["result",4]]],[11,"type_id","","",1747,[[],["typeid",3]]],[11,"from","","",1748,[[]]],[11,"borrow","","",1748,[[]]],[11,"borrow_mut","","",1748,[[]]],[11,"try_from","","",1748,[[],["result",4]]],[11,"into","","",1748,[[]]],[11,"try_into","","",1748,[[],["result",4]]],[11,"type_id","","",1748,[[],["typeid",3]]],[11,"from","","",1749,[[]]],[11,"borrow","","",1749,[[]]],[11,"borrow_mut","","",1749,[[]]],[11,"try_from","","",1749,[[],["result",4]]],[11,"into","","",1749,[[]]],[11,"try_into","","",1749,[[],["result",4]]],[11,"type_id","","",1749,[[],["typeid",3]]],[11,"from","","",1738,[[]]],[11,"borrow","","",1738,[[]]],[11,"borrow_mut","","",1738,[[]]],[11,"try_from","","",1738,[[],["result",4]]],[11,"into","","",1738,[[]]],[11,"try_into","","",1738,[[],["result",4]]],[11,"type_id","","",1738,[[],["typeid",3]]],[11,"from","","",1739,[[]]],[11,"borrow","","",1739,[[]]],[11,"borrow_mut","","",1739,[[]]],[11,"try_from","","",1739,[[],["result",4]]],[11,"into","","",1739,[[]]],[11,"try_into","","",1739,[[],["result",4]]],[11,"type_id","","",1739,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::ctrlb","",1754,[[]]],[11,"borrow","","",1754,[[]]],[11,"borrow_mut","","",1754,[[]]],[11,"try_from","","",1754,[[],["result",4]]],[11,"into","","",1754,[[]]],[11,"try_into","","",1754,[[],["result",4]]],[11,"type_id","","",1754,[[],["typeid",3]]],[11,"from","","",1755,[[]]],[11,"borrow","","",1755,[[]]],[11,"borrow_mut","","",1755,[[]]],[11,"try_from","","",1755,[[],["result",4]]],[11,"into","","",1755,[[]]],[11,"try_into","","",1755,[[],["result",4]]],[11,"type_id","","",1755,[[],["typeid",3]]],[11,"from","","",1756,[[]]],[11,"borrow","","",1756,[[]]],[11,"borrow_mut","","",1756,[[]]],[11,"try_from","","",1756,[[],["result",4]]],[11,"into","","",1756,[[]]],[11,"try_into","","",1756,[[],["result",4]]],[11,"type_id","","",1756,[[],["typeid",3]]],[11,"from","","",1757,[[]]],[11,"borrow","","",1757,[[]]],[11,"borrow_mut","","",1757,[[]]],[11,"try_from","","",1757,[[],["result",4]]],[11,"into","","",1757,[[]]],[11,"try_into","","",1757,[[],["result",4]]],[11,"type_id","","",1757,[[],["typeid",3]]],[11,"from","","",1758,[[]]],[11,"borrow","","",1758,[[]]],[11,"borrow_mut","","",1758,[[]]],[11,"try_from","","",1758,[[],["result",4]]],[11,"into","","",1758,[[]]],[11,"try_into","","",1758,[[],["result",4]]],[11,"type_id","","",1758,[[],["typeid",3]]],[11,"from","","",1759,[[]]],[11,"borrow","","",1759,[[]]],[11,"borrow_mut","","",1759,[[]]],[11,"try_from","","",1759,[[],["result",4]]],[11,"into","","",1759,[[]]],[11,"try_into","","",1759,[[],["result",4]]],[11,"type_id","","",1759,[[],["typeid",3]]],[11,"from","","",1761,[[]]],[11,"borrow","","",1761,[[]]],[11,"borrow_mut","","",1761,[[]]],[11,"try_from","","",1761,[[],["result",4]]],[11,"into","","",1761,[[]]],[11,"try_into","","",1761,[[],["result",4]]],[11,"type_id","","",1761,[[],["typeid",3]]],[11,"from","","",1763,[[]]],[11,"borrow","","",1763,[[]]],[11,"borrow_mut","","",1763,[[]]],[11,"try_from","","",1763,[[],["result",4]]],[11,"into","","",1763,[[]]],[11,"try_into","","",1763,[[],["result",4]]],[11,"type_id","","",1763,[[],["typeid",3]]],[11,"from","","",1752,[[]]],[11,"borrow","","",1752,[[]]],[11,"borrow_mut","","",1752,[[]]],[11,"try_from","","",1752,[[],["result",4]]],[11,"into","","",1752,[[]]],[11,"try_into","","",1752,[[],["result",4]]],[11,"type_id","","",1752,[[],["typeid",3]]],[11,"from","","",1753,[[]]],[11,"borrow","","",1753,[[]]],[11,"borrow_mut","","",1753,[[]]],[11,"try_from","","",1753,[[],["result",4]]],[11,"into","","",1753,[[]]],[11,"try_into","","",1753,[[],["result",4]]],[11,"type_id","","",1753,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::evctrl","",1766,[[]]],[11,"borrow","","",1766,[[]]],[11,"borrow_mut","","",1766,[[]]],[11,"try_from","","",1766,[[],["result",4]]],[11,"into","","",1766,[[]]],[11,"try_into","","",1766,[[],["result",4]]],[11,"type_id","","",1766,[[],["typeid",3]]],[11,"from","","",1767,[[]]],[11,"borrow","","",1767,[[]]],[11,"borrow_mut","","",1767,[[]]],[11,"try_from","","",1767,[[],["result",4]]],[11,"into","","",1767,[[]]],[11,"try_into","","",1767,[[],["result",4]]],[11,"type_id","","",1767,[[],["typeid",3]]],[11,"from","","",1768,[[]]],[11,"borrow","","",1768,[[]]],[11,"borrow_mut","","",1768,[[]]],[11,"try_from","","",1768,[[],["result",4]]],[11,"into","","",1768,[[]]],[11,"try_into","","",1768,[[],["result",4]]],[11,"type_id","","",1768,[[],["typeid",3]]],[11,"from","","",1769,[[]]],[11,"borrow","","",1769,[[]]],[11,"borrow_mut","","",1769,[[]]],[11,"try_from","","",1769,[[],["result",4]]],[11,"into","","",1769,[[]]],[11,"try_into","","",1769,[[],["result",4]]],[11,"type_id","","",1769,[[],["typeid",3]]],[11,"from","","",1770,[[]]],[11,"borrow","","",1770,[[]]],[11,"borrow_mut","","",1770,[[]]],[11,"try_from","","",1770,[[],["result",4]]],[11,"into","","",1770,[[]]],[11,"try_into","","",1770,[[],["result",4]]],[11,"type_id","","",1770,[[],["typeid",3]]],[11,"from","","",1771,[[]]],[11,"borrow","","",1771,[[]]],[11,"borrow_mut","","",1771,[[]]],[11,"try_from","","",1771,[[],["result",4]]],[11,"into","","",1771,[[]]],[11,"try_into","","",1771,[[],["result",4]]],[11,"type_id","","",1771,[[],["typeid",3]]],[11,"from","","",1772,[[]]],[11,"borrow","","",1772,[[]]],[11,"borrow_mut","","",1772,[[]]],[11,"try_from","","",1772,[[],["result",4]]],[11,"into","","",1772,[[]]],[11,"try_into","","",1772,[[],["result",4]]],[11,"type_id","","",1772,[[],["typeid",3]]],[11,"from","","",1773,[[]]],[11,"borrow","","",1773,[[]]],[11,"borrow_mut","","",1773,[[]]],[11,"try_from","","",1773,[[],["result",4]]],[11,"into","","",1773,[[]]],[11,"try_into","","",1773,[[],["result",4]]],[11,"type_id","","",1773,[[],["typeid",3]]],[11,"from","","",1774,[[]]],[11,"borrow","","",1774,[[]]],[11,"borrow_mut","","",1774,[[]]],[11,"try_from","","",1774,[[],["result",4]]],[11,"into","","",1774,[[]]],[11,"try_into","","",1774,[[],["result",4]]],[11,"type_id","","",1774,[[],["typeid",3]]],[11,"from","","",1775,[[]]],[11,"borrow","","",1775,[[]]],[11,"borrow_mut","","",1775,[[]]],[11,"try_from","","",1775,[[],["result",4]]],[11,"into","","",1775,[[]]],[11,"try_into","","",1775,[[],["result",4]]],[11,"type_id","","",1775,[[],["typeid",3]]],[11,"from","","",1776,[[]]],[11,"borrow","","",1776,[[]]],[11,"borrow_mut","","",1776,[[]]],[11,"try_from","","",1776,[[],["result",4]]],[11,"into","","",1776,[[]]],[11,"try_into","","",1776,[[],["result",4]]],[11,"type_id","","",1776,[[],["typeid",3]]],[11,"from","","",1777,[[]]],[11,"borrow","","",1777,[[]]],[11,"borrow_mut","","",1777,[[]]],[11,"try_from","","",1777,[[],["result",4]]],[11,"into","","",1777,[[]]],[11,"try_into","","",1777,[[],["result",4]]],[11,"type_id","","",1777,[[],["typeid",3]]],[11,"from","","",1778,[[]]],[11,"borrow","","",1778,[[]]],[11,"borrow_mut","","",1778,[[]]],[11,"try_from","","",1778,[[],["result",4]]],[11,"into","","",1778,[[]]],[11,"try_into","","",1778,[[],["result",4]]],[11,"type_id","","",1778,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::intenclr","",1781,[[]]],[11,"borrow","","",1781,[[]]],[11,"borrow_mut","","",1781,[[]]],[11,"try_from","","",1781,[[],["result",4]]],[11,"into","","",1781,[[]]],[11,"try_into","","",1781,[[],["result",4]]],[11,"type_id","","",1781,[[],["typeid",3]]],[11,"from","","",1782,[[]]],[11,"borrow","","",1782,[[]]],[11,"borrow_mut","","",1782,[[]]],[11,"try_from","","",1782,[[],["result",4]]],[11,"into","","",1782,[[]]],[11,"try_into","","",1782,[[],["result",4]]],[11,"type_id","","",1782,[[],["typeid",3]]],[11,"from","","",1783,[[]]],[11,"borrow","","",1783,[[]]],[11,"borrow_mut","","",1783,[[]]],[11,"try_from","","",1783,[[],["result",4]]],[11,"into","","",1783,[[]]],[11,"try_into","","",1783,[[],["result",4]]],[11,"type_id","","",1783,[[],["typeid",3]]],[11,"from","","",1784,[[]]],[11,"borrow","","",1784,[[]]],[11,"borrow_mut","","",1784,[[]]],[11,"try_from","","",1784,[[],["result",4]]],[11,"into","","",1784,[[]]],[11,"try_into","","",1784,[[],["result",4]]],[11,"type_id","","",1784,[[],["typeid",3]]],[11,"from","","",1785,[[]]],[11,"borrow","","",1785,[[]]],[11,"borrow_mut","","",1785,[[]]],[11,"try_from","","",1785,[[],["result",4]]],[11,"into","","",1785,[[]]],[11,"try_into","","",1785,[[],["result",4]]],[11,"type_id","","",1785,[[],["typeid",3]]],[11,"from","","",1786,[[]]],[11,"borrow","","",1786,[[]]],[11,"borrow_mut","","",1786,[[]]],[11,"try_from","","",1786,[[],["result",4]]],[11,"into","","",1786,[[]]],[11,"try_into","","",1786,[[],["result",4]]],[11,"type_id","","",1786,[[],["typeid",3]]],[11,"from","","",1787,[[]]],[11,"borrow","","",1787,[[]]],[11,"borrow_mut","","",1787,[[]]],[11,"try_from","","",1787,[[],["result",4]]],[11,"into","","",1787,[[]]],[11,"try_into","","",1787,[[],["result",4]]],[11,"type_id","","",1787,[[],["typeid",3]]],[11,"from","","",1788,[[]]],[11,"borrow","","",1788,[[]]],[11,"borrow_mut","","",1788,[[]]],[11,"try_from","","",1788,[[],["result",4]]],[11,"into","","",1788,[[]]],[11,"try_into","","",1788,[[],["result",4]]],[11,"type_id","","",1788,[[],["typeid",3]]],[11,"from","","",1789,[[]]],[11,"borrow","","",1789,[[]]],[11,"borrow_mut","","",1789,[[]]],[11,"try_from","","",1789,[[],["result",4]]],[11,"into","","",1789,[[]]],[11,"try_into","","",1789,[[],["result",4]]],[11,"type_id","","",1789,[[],["typeid",3]]],[11,"from","","",1790,[[]]],[11,"borrow","","",1790,[[]]],[11,"borrow_mut","","",1790,[[]]],[11,"try_from","","",1790,[[],["result",4]]],[11,"into","","",1790,[[]]],[11,"try_into","","",1790,[[],["result",4]]],[11,"type_id","","",1790,[[],["typeid",3]]],[11,"from","","",1791,[[]]],[11,"borrow","","",1791,[[]]],[11,"borrow_mut","","",1791,[[]]],[11,"try_from","","",1791,[[],["result",4]]],[11,"into","","",1791,[[]]],[11,"try_into","","",1791,[[],["result",4]]],[11,"type_id","","",1791,[[],["typeid",3]]],[11,"from","","",1792,[[]]],[11,"borrow","","",1792,[[]]],[11,"borrow_mut","","",1792,[[]]],[11,"try_from","","",1792,[[],["result",4]]],[11,"into","","",1792,[[]]],[11,"try_into","","",1792,[[],["result",4]]],[11,"type_id","","",1792,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::intenset","",1795,[[]]],[11,"borrow","","",1795,[[]]],[11,"borrow_mut","","",1795,[[]]],[11,"try_from","","",1795,[[],["result",4]]],[11,"into","","",1795,[[]]],[11,"try_into","","",1795,[[],["result",4]]],[11,"type_id","","",1795,[[],["typeid",3]]],[11,"from","","",1796,[[]]],[11,"borrow","","",1796,[[]]],[11,"borrow_mut","","",1796,[[]]],[11,"try_from","","",1796,[[],["result",4]]],[11,"into","","",1796,[[]]],[11,"try_into","","",1796,[[],["result",4]]],[11,"type_id","","",1796,[[],["typeid",3]]],[11,"from","","",1797,[[]]],[11,"borrow","","",1797,[[]]],[11,"borrow_mut","","",1797,[[]]],[11,"try_from","","",1797,[[],["result",4]]],[11,"into","","",1797,[[]]],[11,"try_into","","",1797,[[],["result",4]]],[11,"type_id","","",1797,[[],["typeid",3]]],[11,"from","","",1798,[[]]],[11,"borrow","","",1798,[[]]],[11,"borrow_mut","","",1798,[[]]],[11,"try_from","","",1798,[[],["result",4]]],[11,"into","","",1798,[[]]],[11,"try_into","","",1798,[[],["result",4]]],[11,"type_id","","",1798,[[],["typeid",3]]],[11,"from","","",1799,[[]]],[11,"borrow","","",1799,[[]]],[11,"borrow_mut","","",1799,[[]]],[11,"try_from","","",1799,[[],["result",4]]],[11,"into","","",1799,[[]]],[11,"try_into","","",1799,[[],["result",4]]],[11,"type_id","","",1799,[[],["typeid",3]]],[11,"from","","",1800,[[]]],[11,"borrow","","",1800,[[]]],[11,"borrow_mut","","",1800,[[]]],[11,"try_from","","",1800,[[],["result",4]]],[11,"into","","",1800,[[]]],[11,"try_into","","",1800,[[],["result",4]]],[11,"type_id","","",1800,[[],["typeid",3]]],[11,"from","","",1801,[[]]],[11,"borrow","","",1801,[[]]],[11,"borrow_mut","","",1801,[[]]],[11,"try_from","","",1801,[[],["result",4]]],[11,"into","","",1801,[[]]],[11,"try_into","","",1801,[[],["result",4]]],[11,"type_id","","",1801,[[],["typeid",3]]],[11,"from","","",1802,[[]]],[11,"borrow","","",1802,[[]]],[11,"borrow_mut","","",1802,[[]]],[11,"try_from","","",1802,[[],["result",4]]],[11,"into","","",1802,[[]]],[11,"try_into","","",1802,[[],["result",4]]],[11,"type_id","","",1802,[[],["typeid",3]]],[11,"from","","",1803,[[]]],[11,"borrow","","",1803,[[]]],[11,"borrow_mut","","",1803,[[]]],[11,"try_from","","",1803,[[],["result",4]]],[11,"into","","",1803,[[]]],[11,"try_into","","",1803,[[],["result",4]]],[11,"type_id","","",1803,[[],["typeid",3]]],[11,"from","","",1804,[[]]],[11,"borrow","","",1804,[[]]],[11,"borrow_mut","","",1804,[[]]],[11,"try_from","","",1804,[[],["result",4]]],[11,"into","","",1804,[[]]],[11,"try_into","","",1804,[[],["result",4]]],[11,"type_id","","",1804,[[],["typeid",3]]],[11,"from","","",1805,[[]]],[11,"borrow","","",1805,[[]]],[11,"borrow_mut","","",1805,[[]]],[11,"try_from","","",1805,[[],["result",4]]],[11,"into","","",1805,[[]]],[11,"try_into","","",1805,[[],["result",4]]],[11,"type_id","","",1805,[[],["typeid",3]]],[11,"from","","",1806,[[]]],[11,"borrow","","",1806,[[]]],[11,"borrow_mut","","",1806,[[]]],[11,"try_from","","",1806,[[],["result",4]]],[11,"into","","",1806,[[]]],[11,"try_into","","",1806,[[],["result",4]]],[11,"type_id","","",1806,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::intflag","",1809,[[]]],[11,"borrow","","",1809,[[]]],[11,"borrow_mut","","",1809,[[]]],[11,"try_from","","",1809,[[],["result",4]]],[11,"into","","",1809,[[]]],[11,"try_into","","",1809,[[],["result",4]]],[11,"type_id","","",1809,[[],["typeid",3]]],[11,"from","","",1810,[[]]],[11,"borrow","","",1810,[[]]],[11,"borrow_mut","","",1810,[[]]],[11,"try_from","","",1810,[[],["result",4]]],[11,"into","","",1810,[[]]],[11,"try_into","","",1810,[[],["result",4]]],[11,"type_id","","",1810,[[],["typeid",3]]],[11,"from","","",1811,[[]]],[11,"borrow","","",1811,[[]]],[11,"borrow_mut","","",1811,[[]]],[11,"try_from","","",1811,[[],["result",4]]],[11,"into","","",1811,[[]]],[11,"try_into","","",1811,[[],["result",4]]],[11,"type_id","","",1811,[[],["typeid",3]]],[11,"from","","",1812,[[]]],[11,"borrow","","",1812,[[]]],[11,"borrow_mut","","",1812,[[]]],[11,"try_from","","",1812,[[],["result",4]]],[11,"into","","",1812,[[]]],[11,"try_into","","",1812,[[],["result",4]]],[11,"type_id","","",1812,[[],["typeid",3]]],[11,"from","","",1813,[[]]],[11,"borrow","","",1813,[[]]],[11,"borrow_mut","","",1813,[[]]],[11,"try_from","","",1813,[[],["result",4]]],[11,"into","","",1813,[[]]],[11,"try_into","","",1813,[[],["result",4]]],[11,"type_id","","",1813,[[],["typeid",3]]],[11,"from","","",1814,[[]]],[11,"borrow","","",1814,[[]]],[11,"borrow_mut","","",1814,[[]]],[11,"try_from","","",1814,[[],["result",4]]],[11,"into","","",1814,[[]]],[11,"try_into","","",1814,[[],["result",4]]],[11,"type_id","","",1814,[[],["typeid",3]]],[11,"from","","",1815,[[]]],[11,"borrow","","",1815,[[]]],[11,"borrow_mut","","",1815,[[]]],[11,"try_from","","",1815,[[],["result",4]]],[11,"into","","",1815,[[]]],[11,"try_into","","",1815,[[],["result",4]]],[11,"type_id","","",1815,[[],["typeid",3]]],[11,"from","","",1816,[[]]],[11,"borrow","","",1816,[[]]],[11,"borrow_mut","","",1816,[[]]],[11,"try_from","","",1816,[[],["result",4]]],[11,"into","","",1816,[[]]],[11,"try_into","","",1816,[[],["result",4]]],[11,"type_id","","",1816,[[],["typeid",3]]],[11,"from","","",1817,[[]]],[11,"borrow","","",1817,[[]]],[11,"borrow_mut","","",1817,[[]]],[11,"try_from","","",1817,[[],["result",4]]],[11,"into","","",1817,[[]]],[11,"try_into","","",1817,[[],["result",4]]],[11,"type_id","","",1817,[[],["typeid",3]]],[11,"from","","",1818,[[]]],[11,"borrow","","",1818,[[]]],[11,"borrow_mut","","",1818,[[]]],[11,"try_from","","",1818,[[],["result",4]]],[11,"into","","",1818,[[]]],[11,"try_into","","",1818,[[],["result",4]]],[11,"type_id","","",1818,[[],["typeid",3]]],[11,"from","","",1819,[[]]],[11,"borrow","","",1819,[[]]],[11,"borrow_mut","","",1819,[[]]],[11,"try_from","","",1819,[[],["result",4]]],[11,"into","","",1819,[[]]],[11,"try_into","","",1819,[[],["result",4]]],[11,"type_id","","",1819,[[],["typeid",3]]],[11,"from","","",1820,[[]]],[11,"borrow","","",1820,[[]]],[11,"borrow_mut","","",1820,[[]]],[11,"try_from","","",1820,[[],["result",4]]],[11,"into","","",1820,[[]]],[11,"try_into","","",1820,[[],["result",4]]],[11,"type_id","","",1820,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::dbgctrl","",1823,[[]]],[11,"borrow","","",1823,[[]]],[11,"borrow_mut","","",1823,[[]]],[11,"try_from","","",1823,[[],["result",4]]],[11,"into","","",1823,[[]]],[11,"try_into","","",1823,[[],["result",4]]],[11,"type_id","","",1823,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::freqcorr","",1827,[[]]],[11,"borrow","","",1827,[[]]],[11,"borrow_mut","","",1827,[[]]],[11,"try_from","","",1827,[[],["result",4]]],[11,"into","","",1827,[[]]],[11,"try_into","","",1827,[[],["result",4]]],[11,"type_id","","",1827,[[],["typeid",3]]],[11,"from","","",1828,[[]]],[11,"borrow","","",1828,[[]]],[11,"borrow_mut","","",1828,[[]]],[11,"try_from","","",1828,[[],["result",4]]],[11,"into","","",1828,[[]]],[11,"try_into","","",1828,[[],["result",4]]],[11,"type_id","","",1828,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::count","",1831,[[]]],[11,"borrow","","",1831,[[]]],[11,"borrow_mut","","",1831,[[]]],[11,"try_from","","",1831,[[],["result",4]]],[11,"into","","",1831,[[]]],[11,"try_into","","",1831,[[],["result",4]]],[11,"type_id","","",1831,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::comp","",1834,[[]]],[11,"borrow","","",1834,[[]]],[11,"borrow_mut","","",1834,[[]]],[11,"try_from","","",1834,[[],["result",4]]],[11,"into","","",1834,[[]]],[11,"try_into","","",1834,[[],["result",4]]],[11,"type_id","","",1834,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::gp","",1837,[[]]],[11,"borrow","","",1837,[[]]],[11,"borrow_mut","","",1837,[[]]],[11,"try_from","","",1837,[[],["result",4]]],[11,"into","","",1837,[[]]],[11,"try_into","","",1837,[[],["result",4]]],[11,"type_id","","",1837,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::tampctrl","",1846,[[]]],[11,"borrow","","",1846,[[]]],[11,"borrow_mut","","",1846,[[]]],[11,"try_from","","",1846,[[],["result",4]]],[11,"into","","",1846,[[]]],[11,"try_into","","",1846,[[],["result",4]]],[11,"type_id","","",1846,[[],["typeid",3]]],[11,"from","","",1848,[[]]],[11,"borrow","","",1848,[[]]],[11,"borrow_mut","","",1848,[[]]],[11,"try_from","","",1848,[[],["result",4]]],[11,"into","","",1848,[[]]],[11,"try_into","","",1848,[[],["result",4]]],[11,"type_id","","",1848,[[],["typeid",3]]],[11,"from","","",1850,[[]]],[11,"borrow","","",1850,[[]]],[11,"borrow_mut","","",1850,[[]]],[11,"try_from","","",1850,[[],["result",4]]],[11,"into","","",1850,[[]]],[11,"try_into","","",1850,[[],["result",4]]],[11,"type_id","","",1850,[[],["typeid",3]]],[11,"from","","",1852,[[]]],[11,"borrow","","",1852,[[]]],[11,"borrow_mut","","",1852,[[]]],[11,"try_from","","",1852,[[],["result",4]]],[11,"into","","",1852,[[]]],[11,"try_into","","",1852,[[],["result",4]]],[11,"type_id","","",1852,[[],["typeid",3]]],[11,"from","","",1854,[[]]],[11,"borrow","","",1854,[[]]],[11,"borrow_mut","","",1854,[[]]],[11,"try_from","","",1854,[[],["result",4]]],[11,"into","","",1854,[[]]],[11,"try_into","","",1854,[[],["result",4]]],[11,"type_id","","",1854,[[],["typeid",3]]],[11,"from","","",1855,[[]]],[11,"borrow","","",1855,[[]]],[11,"borrow_mut","","",1855,[[]]],[11,"try_from","","",1855,[[],["result",4]]],[11,"into","","",1855,[[]]],[11,"try_into","","",1855,[[],["result",4]]],[11,"type_id","","",1855,[[],["typeid",3]]],[11,"from","","",1856,[[]]],[11,"borrow","","",1856,[[]]],[11,"borrow_mut","","",1856,[[]]],[11,"try_from","","",1856,[[],["result",4]]],[11,"into","","",1856,[[]]],[11,"try_into","","",1856,[[],["result",4]]],[11,"type_id","","",1856,[[],["typeid",3]]],[11,"from","","",1857,[[]]],[11,"borrow","","",1857,[[]]],[11,"borrow_mut","","",1857,[[]]],[11,"try_from","","",1857,[[],["result",4]]],[11,"into","","",1857,[[]]],[11,"try_into","","",1857,[[],["result",4]]],[11,"type_id","","",1857,[[],["typeid",3]]],[11,"from","","",1858,[[]]],[11,"borrow","","",1858,[[]]],[11,"borrow_mut","","",1858,[[]]],[11,"try_from","","",1858,[[],["result",4]]],[11,"into","","",1858,[[]]],[11,"try_into","","",1858,[[],["result",4]]],[11,"type_id","","",1858,[[],["typeid",3]]],[11,"from","","",1859,[[]]],[11,"borrow","","",1859,[[]]],[11,"borrow_mut","","",1859,[[]]],[11,"try_from","","",1859,[[],["result",4]]],[11,"into","","",1859,[[]]],[11,"try_into","","",1859,[[],["result",4]]],[11,"type_id","","",1859,[[],["typeid",3]]],[11,"from","","",1860,[[]]],[11,"borrow","","",1860,[[]]],[11,"borrow_mut","","",1860,[[]]],[11,"try_from","","",1860,[[],["result",4]]],[11,"into","","",1860,[[]]],[11,"try_into","","",1860,[[],["result",4]]],[11,"type_id","","",1860,[[],["typeid",3]]],[11,"from","","",1861,[[]]],[11,"borrow","","",1861,[[]]],[11,"borrow_mut","","",1861,[[]]],[11,"try_from","","",1861,[[],["result",4]]],[11,"into","","",1861,[[]]],[11,"try_into","","",1861,[[],["result",4]]],[11,"type_id","","",1861,[[],["typeid",3]]],[11,"from","","",1862,[[]]],[11,"borrow","","",1862,[[]]],[11,"borrow_mut","","",1862,[[]]],[11,"try_from","","",1862,[[],["result",4]]],[11,"into","","",1862,[[]]],[11,"try_into","","",1862,[[],["result",4]]],[11,"type_id","","",1862,[[],["typeid",3]]],[11,"from","","",1863,[[]]],[11,"borrow","","",1863,[[]]],[11,"borrow_mut","","",1863,[[]]],[11,"try_from","","",1863,[[],["result",4]]],[11,"into","","",1863,[[]]],[11,"try_into","","",1863,[[],["result",4]]],[11,"type_id","","",1863,[[],["typeid",3]]],[11,"from","","",1864,[[]]],[11,"borrow","","",1864,[[]]],[11,"borrow_mut","","",1864,[[]]],[11,"try_from","","",1864,[[],["result",4]]],[11,"into","","",1864,[[]]],[11,"try_into","","",1864,[[],["result",4]]],[11,"type_id","","",1864,[[],["typeid",3]]],[11,"from","","",1840,[[]]],[11,"borrow","","",1840,[[]]],[11,"borrow_mut","","",1840,[[]]],[11,"try_from","","",1840,[[],["result",4]]],[11,"into","","",1840,[[]]],[11,"try_into","","",1840,[[],["result",4]]],[11,"type_id","","",1840,[[],["typeid",3]]],[11,"from","","",1841,[[]]],[11,"borrow","","",1841,[[]]],[11,"borrow_mut","","",1841,[[]]],[11,"try_from","","",1841,[[],["result",4]]],[11,"into","","",1841,[[]]],[11,"try_into","","",1841,[[],["result",4]]],[11,"type_id","","",1841,[[],["typeid",3]]],[11,"from","","",1842,[[]]],[11,"borrow","","",1842,[[]]],[11,"borrow_mut","","",1842,[[]]],[11,"try_from","","",1842,[[],["result",4]]],[11,"into","","",1842,[[]]],[11,"try_into","","",1842,[[],["result",4]]],[11,"type_id","","",1842,[[],["typeid",3]]],[11,"from","","",1843,[[]]],[11,"borrow","","",1843,[[]]],[11,"borrow_mut","","",1843,[[]]],[11,"try_from","","",1843,[[],["result",4]]],[11,"into","","",1843,[[]]],[11,"try_into","","",1843,[[],["result",4]]],[11,"type_id","","",1843,[[],["typeid",3]]],[11,"from","","",1844,[[]]],[11,"borrow","","",1844,[[]]],[11,"borrow_mut","","",1844,[[]]],[11,"try_from","","",1844,[[],["result",4]]],[11,"into","","",1844,[[]]],[11,"try_into","","",1844,[[],["result",4]]],[11,"type_id","","",1844,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::tampid","",1868,[[]]],[11,"borrow","","",1868,[[]]],[11,"borrow_mut","","",1868,[[]]],[11,"try_from","","",1868,[[],["result",4]]],[11,"into","","",1868,[[]]],[11,"try_into","","",1868,[[],["result",4]]],[11,"type_id","","",1868,[[],["typeid",3]]],[11,"from","","",1869,[[]]],[11,"borrow","","",1869,[[]]],[11,"borrow_mut","","",1869,[[]]],[11,"try_from","","",1869,[[],["result",4]]],[11,"into","","",1869,[[]]],[11,"try_into","","",1869,[[],["result",4]]],[11,"type_id","","",1869,[[],["typeid",3]]],[11,"from","","",1870,[[]]],[11,"borrow","","",1870,[[]]],[11,"borrow_mut","","",1870,[[]]],[11,"try_from","","",1870,[[],["result",4]]],[11,"into","","",1870,[[]]],[11,"try_into","","",1870,[[],["result",4]]],[11,"type_id","","",1870,[[],["typeid",3]]],[11,"from","","",1871,[[]]],[11,"borrow","","",1871,[[]]],[11,"borrow_mut","","",1871,[[]]],[11,"try_from","","",1871,[[],["result",4]]],[11,"into","","",1871,[[]]],[11,"try_into","","",1871,[[],["result",4]]],[11,"type_id","","",1871,[[],["typeid",3]]],[11,"from","","",1872,[[]]],[11,"borrow","","",1872,[[]]],[11,"borrow_mut","","",1872,[[]]],[11,"try_from","","",1872,[[],["result",4]]],[11,"into","","",1872,[[]]],[11,"try_into","","",1872,[[],["result",4]]],[11,"type_id","","",1872,[[],["typeid",3]]],[11,"from","","",1873,[[]]],[11,"borrow","","",1873,[[]]],[11,"borrow_mut","","",1873,[[]]],[11,"try_from","","",1873,[[],["result",4]]],[11,"into","","",1873,[[]]],[11,"try_into","","",1873,[[],["result",4]]],[11,"type_id","","",1873,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode0::bkup","",1876,[[]]],[11,"borrow","","",1876,[[]]],[11,"borrow_mut","","",1876,[[]]],[11,"try_from","","",1876,[[],["result",4]]],[11,"into","","",1876,[[]]],[11,"try_into","","",1876,[[],["result",4]]],[11,"type_id","","",1876,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::ctrla","",1881,[[]]],[11,"borrow","","",1881,[[]]],[11,"borrow_mut","","",1881,[[]]],[11,"try_from","","",1881,[[],["result",4]]],[11,"into","","",1881,[[]]],[11,"try_into","","",1881,[[],["result",4]]],[11,"type_id","","",1881,[[],["typeid",3]]],[11,"from","","",1882,[[]]],[11,"borrow","","",1882,[[]]],[11,"borrow_mut","","",1882,[[]]],[11,"try_from","","",1882,[[],["result",4]]],[11,"into","","",1882,[[]]],[11,"try_into","","",1882,[[],["result",4]]],[11,"type_id","","",1882,[[],["typeid",3]]],[11,"from","","",1884,[[]]],[11,"borrow","","",1884,[[]]],[11,"borrow_mut","","",1884,[[]]],[11,"try_from","","",1884,[[],["result",4]]],[11,"into","","",1884,[[]]],[11,"try_into","","",1884,[[],["result",4]]],[11,"type_id","","",1884,[[],["typeid",3]]],[11,"from","","",1886,[[]]],[11,"borrow","","",1886,[[]]],[11,"borrow_mut","","",1886,[[]]],[11,"try_from","","",1886,[[],["result",4]]],[11,"into","","",1886,[[]]],[11,"try_into","","",1886,[[],["result",4]]],[11,"type_id","","",1886,[[],["typeid",3]]],[11,"from","","",1887,[[]]],[11,"borrow","","",1887,[[]]],[11,"borrow_mut","","",1887,[[]]],[11,"try_from","","",1887,[[],["result",4]]],[11,"into","","",1887,[[]]],[11,"try_into","","",1887,[[],["result",4]]],[11,"type_id","","",1887,[[],["typeid",3]]],[11,"from","","",1888,[[]]],[11,"borrow","","",1888,[[]]],[11,"borrow_mut","","",1888,[[]]],[11,"try_from","","",1888,[[],["result",4]]],[11,"into","","",1888,[[]]],[11,"try_into","","",1888,[[],["result",4]]],[11,"type_id","","",1888,[[],["typeid",3]]],[11,"from","","",1889,[[]]],[11,"borrow","","",1889,[[]]],[11,"borrow_mut","","",1889,[[]]],[11,"try_from","","",1889,[[],["result",4]]],[11,"into","","",1889,[[]]],[11,"try_into","","",1889,[[],["result",4]]],[11,"type_id","","",1889,[[],["typeid",3]]],[11,"from","","",1879,[[]]],[11,"borrow","","",1879,[[]]],[11,"borrow_mut","","",1879,[[]]],[11,"try_from","","",1879,[[],["result",4]]],[11,"into","","",1879,[[]]],[11,"try_into","","",1879,[[],["result",4]]],[11,"type_id","","",1879,[[],["typeid",3]]],[11,"from","","",1880,[[]]],[11,"borrow","","",1880,[[]]],[11,"borrow_mut","","",1880,[[]]],[11,"try_from","","",1880,[[],["result",4]]],[11,"into","","",1880,[[]]],[11,"try_into","","",1880,[[],["result",4]]],[11,"type_id","","",1880,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::ctrlb","",1894,[[]]],[11,"borrow","","",1894,[[]]],[11,"borrow_mut","","",1894,[[]]],[11,"try_from","","",1894,[[],["result",4]]],[11,"into","","",1894,[[]]],[11,"try_into","","",1894,[[],["result",4]]],[11,"type_id","","",1894,[[],["typeid",3]]],[11,"from","","",1895,[[]]],[11,"borrow","","",1895,[[]]],[11,"borrow_mut","","",1895,[[]]],[11,"try_from","","",1895,[[],["result",4]]],[11,"into","","",1895,[[]]],[11,"try_into","","",1895,[[],["result",4]]],[11,"type_id","","",1895,[[],["typeid",3]]],[11,"from","","",1896,[[]]],[11,"borrow","","",1896,[[]]],[11,"borrow_mut","","",1896,[[]]],[11,"try_from","","",1896,[[],["result",4]]],[11,"into","","",1896,[[]]],[11,"try_into","","",1896,[[],["result",4]]],[11,"type_id","","",1896,[[],["typeid",3]]],[11,"from","","",1897,[[]]],[11,"borrow","","",1897,[[]]],[11,"borrow_mut","","",1897,[[]]],[11,"try_from","","",1897,[[],["result",4]]],[11,"into","","",1897,[[]]],[11,"try_into","","",1897,[[],["result",4]]],[11,"type_id","","",1897,[[],["typeid",3]]],[11,"from","","",1898,[[]]],[11,"borrow","","",1898,[[]]],[11,"borrow_mut","","",1898,[[]]],[11,"try_from","","",1898,[[],["result",4]]],[11,"into","","",1898,[[]]],[11,"try_into","","",1898,[[],["result",4]]],[11,"type_id","","",1898,[[],["typeid",3]]],[11,"from","","",1899,[[]]],[11,"borrow","","",1899,[[]]],[11,"borrow_mut","","",1899,[[]]],[11,"try_from","","",1899,[[],["result",4]]],[11,"into","","",1899,[[]]],[11,"try_into","","",1899,[[],["result",4]]],[11,"type_id","","",1899,[[],["typeid",3]]],[11,"from","","",1901,[[]]],[11,"borrow","","",1901,[[]]],[11,"borrow_mut","","",1901,[[]]],[11,"try_from","","",1901,[[],["result",4]]],[11,"into","","",1901,[[]]],[11,"try_into","","",1901,[[],["result",4]]],[11,"type_id","","",1901,[[],["typeid",3]]],[11,"from","","",1903,[[]]],[11,"borrow","","",1903,[[]]],[11,"borrow_mut","","",1903,[[]]],[11,"try_from","","",1903,[[],["result",4]]],[11,"into","","",1903,[[]]],[11,"try_into","","",1903,[[],["result",4]]],[11,"type_id","","",1903,[[],["typeid",3]]],[11,"from","","",1892,[[]]],[11,"borrow","","",1892,[[]]],[11,"borrow_mut","","",1892,[[]]],[11,"try_from","","",1892,[[],["result",4]]],[11,"into","","",1892,[[]]],[11,"try_into","","",1892,[[],["result",4]]],[11,"type_id","","",1892,[[],["typeid",3]]],[11,"from","","",1893,[[]]],[11,"borrow","","",1893,[[]]],[11,"borrow_mut","","",1893,[[]]],[11,"try_from","","",1893,[[],["result",4]]],[11,"into","","",1893,[[]]],[11,"try_into","","",1893,[[],["result",4]]],[11,"type_id","","",1893,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::evctrl","",1906,[[]]],[11,"borrow","","",1906,[[]]],[11,"borrow_mut","","",1906,[[]]],[11,"try_from","","",1906,[[],["result",4]]],[11,"into","","",1906,[[]]],[11,"try_into","","",1906,[[],["result",4]]],[11,"type_id","","",1906,[[],["typeid",3]]],[11,"from","","",1907,[[]]],[11,"borrow","","",1907,[[]]],[11,"borrow_mut","","",1907,[[]]],[11,"try_from","","",1907,[[],["result",4]]],[11,"into","","",1907,[[]]],[11,"try_into","","",1907,[[],["result",4]]],[11,"type_id","","",1907,[[],["typeid",3]]],[11,"from","","",1908,[[]]],[11,"borrow","","",1908,[[]]],[11,"borrow_mut","","",1908,[[]]],[11,"try_from","","",1908,[[],["result",4]]],[11,"into","","",1908,[[]]],[11,"try_into","","",1908,[[],["result",4]]],[11,"type_id","","",1908,[[],["typeid",3]]],[11,"from","","",1909,[[]]],[11,"borrow","","",1909,[[]]],[11,"borrow_mut","","",1909,[[]]],[11,"try_from","","",1909,[[],["result",4]]],[11,"into","","",1909,[[]]],[11,"try_into","","",1909,[[],["result",4]]],[11,"type_id","","",1909,[[],["typeid",3]]],[11,"from","","",1910,[[]]],[11,"borrow","","",1910,[[]]],[11,"borrow_mut","","",1910,[[]]],[11,"try_from","","",1910,[[],["result",4]]],[11,"into","","",1910,[[]]],[11,"try_into","","",1910,[[],["result",4]]],[11,"type_id","","",1910,[[],["typeid",3]]],[11,"from","","",1911,[[]]],[11,"borrow","","",1911,[[]]],[11,"borrow_mut","","",1911,[[]]],[11,"try_from","","",1911,[[],["result",4]]],[11,"into","","",1911,[[]]],[11,"try_into","","",1911,[[],["result",4]]],[11,"type_id","","",1911,[[],["typeid",3]]],[11,"from","","",1912,[[]]],[11,"borrow","","",1912,[[]]],[11,"borrow_mut","","",1912,[[]]],[11,"try_from","","",1912,[[],["result",4]]],[11,"into","","",1912,[[]]],[11,"try_into","","",1912,[[],["result",4]]],[11,"type_id","","",1912,[[],["typeid",3]]],[11,"from","","",1913,[[]]],[11,"borrow","","",1913,[[]]],[11,"borrow_mut","","",1913,[[]]],[11,"try_from","","",1913,[[],["result",4]]],[11,"into","","",1913,[[]]],[11,"try_into","","",1913,[[],["result",4]]],[11,"type_id","","",1913,[[],["typeid",3]]],[11,"from","","",1914,[[]]],[11,"borrow","","",1914,[[]]],[11,"borrow_mut","","",1914,[[]]],[11,"try_from","","",1914,[[],["result",4]]],[11,"into","","",1914,[[]]],[11,"try_into","","",1914,[[],["result",4]]],[11,"type_id","","",1914,[[],["typeid",3]]],[11,"from","","",1915,[[]]],[11,"borrow","","",1915,[[]]],[11,"borrow_mut","","",1915,[[]]],[11,"try_from","","",1915,[[],["result",4]]],[11,"into","","",1915,[[]]],[11,"try_into","","",1915,[[],["result",4]]],[11,"type_id","","",1915,[[],["typeid",3]]],[11,"from","","",1916,[[]]],[11,"borrow","","",1916,[[]]],[11,"borrow_mut","","",1916,[[]]],[11,"try_from","","",1916,[[],["result",4]]],[11,"into","","",1916,[[]]],[11,"try_into","","",1916,[[],["result",4]]],[11,"type_id","","",1916,[[],["typeid",3]]],[11,"from","","",1917,[[]]],[11,"borrow","","",1917,[[]]],[11,"borrow_mut","","",1917,[[]]],[11,"try_from","","",1917,[[],["result",4]]],[11,"into","","",1917,[[]]],[11,"try_into","","",1917,[[],["result",4]]],[11,"type_id","","",1917,[[],["typeid",3]]],[11,"from","","",1918,[[]]],[11,"borrow","","",1918,[[]]],[11,"borrow_mut","","",1918,[[]]],[11,"try_from","","",1918,[[],["result",4]]],[11,"into","","",1918,[[]]],[11,"try_into","","",1918,[[],["result",4]]],[11,"type_id","","",1918,[[],["typeid",3]]],[11,"from","","",1919,[[]]],[11,"borrow","","",1919,[[]]],[11,"borrow_mut","","",1919,[[]]],[11,"try_from","","",1919,[[],["result",4]]],[11,"into","","",1919,[[]]],[11,"try_into","","",1919,[[],["result",4]]],[11,"type_id","","",1919,[[],["typeid",3]]],[11,"from","","",1920,[[]]],[11,"borrow","","",1920,[[]]],[11,"borrow_mut","","",1920,[[]]],[11,"try_from","","",1920,[[],["result",4]]],[11,"into","","",1920,[[]]],[11,"try_into","","",1920,[[],["result",4]]],[11,"type_id","","",1920,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::intenclr","",1923,[[]]],[11,"borrow","","",1923,[[]]],[11,"borrow_mut","","",1923,[[]]],[11,"try_from","","",1923,[[],["result",4]]],[11,"into","","",1923,[[]]],[11,"try_into","","",1923,[[],["result",4]]],[11,"type_id","","",1923,[[],["typeid",3]]],[11,"from","","",1924,[[]]],[11,"borrow","","",1924,[[]]],[11,"borrow_mut","","",1924,[[]]],[11,"try_from","","",1924,[[],["result",4]]],[11,"into","","",1924,[[]]],[11,"try_into","","",1924,[[],["result",4]]],[11,"type_id","","",1924,[[],["typeid",3]]],[11,"from","","",1925,[[]]],[11,"borrow","","",1925,[[]]],[11,"borrow_mut","","",1925,[[]]],[11,"try_from","","",1925,[[],["result",4]]],[11,"into","","",1925,[[]]],[11,"try_into","","",1925,[[],["result",4]]],[11,"type_id","","",1925,[[],["typeid",3]]],[11,"from","","",1926,[[]]],[11,"borrow","","",1926,[[]]],[11,"borrow_mut","","",1926,[[]]],[11,"try_from","","",1926,[[],["result",4]]],[11,"into","","",1926,[[]]],[11,"try_into","","",1926,[[],["result",4]]],[11,"type_id","","",1926,[[],["typeid",3]]],[11,"from","","",1927,[[]]],[11,"borrow","","",1927,[[]]],[11,"borrow_mut","","",1927,[[]]],[11,"try_from","","",1927,[[],["result",4]]],[11,"into","","",1927,[[]]],[11,"try_into","","",1927,[[],["result",4]]],[11,"type_id","","",1927,[[],["typeid",3]]],[11,"from","","",1928,[[]]],[11,"borrow","","",1928,[[]]],[11,"borrow_mut","","",1928,[[]]],[11,"try_from","","",1928,[[],["result",4]]],[11,"into","","",1928,[[]]],[11,"try_into","","",1928,[[],["result",4]]],[11,"type_id","","",1928,[[],["typeid",3]]],[11,"from","","",1929,[[]]],[11,"borrow","","",1929,[[]]],[11,"borrow_mut","","",1929,[[]]],[11,"try_from","","",1929,[[],["result",4]]],[11,"into","","",1929,[[]]],[11,"try_into","","",1929,[[],["result",4]]],[11,"type_id","","",1929,[[],["typeid",3]]],[11,"from","","",1930,[[]]],[11,"borrow","","",1930,[[]]],[11,"borrow_mut","","",1930,[[]]],[11,"try_from","","",1930,[[],["result",4]]],[11,"into","","",1930,[[]]],[11,"try_into","","",1930,[[],["result",4]]],[11,"type_id","","",1930,[[],["typeid",3]]],[11,"from","","",1931,[[]]],[11,"borrow","","",1931,[[]]],[11,"borrow_mut","","",1931,[[]]],[11,"try_from","","",1931,[[],["result",4]]],[11,"into","","",1931,[[]]],[11,"try_into","","",1931,[[],["result",4]]],[11,"type_id","","",1931,[[],["typeid",3]]],[11,"from","","",1932,[[]]],[11,"borrow","","",1932,[[]]],[11,"borrow_mut","","",1932,[[]]],[11,"try_from","","",1932,[[],["result",4]]],[11,"into","","",1932,[[]]],[11,"try_into","","",1932,[[],["result",4]]],[11,"type_id","","",1932,[[],["typeid",3]]],[11,"from","","",1933,[[]]],[11,"borrow","","",1933,[[]]],[11,"borrow_mut","","",1933,[[]]],[11,"try_from","","",1933,[[],["result",4]]],[11,"into","","",1933,[[]]],[11,"try_into","","",1933,[[],["result",4]]],[11,"type_id","","",1933,[[],["typeid",3]]],[11,"from","","",1934,[[]]],[11,"borrow","","",1934,[[]]],[11,"borrow_mut","","",1934,[[]]],[11,"try_from","","",1934,[[],["result",4]]],[11,"into","","",1934,[[]]],[11,"try_into","","",1934,[[],["result",4]]],[11,"type_id","","",1934,[[],["typeid",3]]],[11,"from","","",1935,[[]]],[11,"borrow","","",1935,[[]]],[11,"borrow_mut","","",1935,[[]]],[11,"try_from","","",1935,[[],["result",4]]],[11,"into","","",1935,[[]]],[11,"try_into","","",1935,[[],["result",4]]],[11,"type_id","","",1935,[[],["typeid",3]]],[11,"from","","",1936,[[]]],[11,"borrow","","",1936,[[]]],[11,"borrow_mut","","",1936,[[]]],[11,"try_from","","",1936,[[],["result",4]]],[11,"into","","",1936,[[]]],[11,"try_into","","",1936,[[],["result",4]]],[11,"type_id","","",1936,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::intenset","",1939,[[]]],[11,"borrow","","",1939,[[]]],[11,"borrow_mut","","",1939,[[]]],[11,"try_from","","",1939,[[],["result",4]]],[11,"into","","",1939,[[]]],[11,"try_into","","",1939,[[],["result",4]]],[11,"type_id","","",1939,[[],["typeid",3]]],[11,"from","","",1940,[[]]],[11,"borrow","","",1940,[[]]],[11,"borrow_mut","","",1940,[[]]],[11,"try_from","","",1940,[[],["result",4]]],[11,"into","","",1940,[[]]],[11,"try_into","","",1940,[[],["result",4]]],[11,"type_id","","",1940,[[],["typeid",3]]],[11,"from","","",1941,[[]]],[11,"borrow","","",1941,[[]]],[11,"borrow_mut","","",1941,[[]]],[11,"try_from","","",1941,[[],["result",4]]],[11,"into","","",1941,[[]]],[11,"try_into","","",1941,[[],["result",4]]],[11,"type_id","","",1941,[[],["typeid",3]]],[11,"from","","",1942,[[]]],[11,"borrow","","",1942,[[]]],[11,"borrow_mut","","",1942,[[]]],[11,"try_from","","",1942,[[],["result",4]]],[11,"into","","",1942,[[]]],[11,"try_into","","",1942,[[],["result",4]]],[11,"type_id","","",1942,[[],["typeid",3]]],[11,"from","","",1943,[[]]],[11,"borrow","","",1943,[[]]],[11,"borrow_mut","","",1943,[[]]],[11,"try_from","","",1943,[[],["result",4]]],[11,"into","","",1943,[[]]],[11,"try_into","","",1943,[[],["result",4]]],[11,"type_id","","",1943,[[],["typeid",3]]],[11,"from","","",1944,[[]]],[11,"borrow","","",1944,[[]]],[11,"borrow_mut","","",1944,[[]]],[11,"try_from","","",1944,[[],["result",4]]],[11,"into","","",1944,[[]]],[11,"try_into","","",1944,[[],["result",4]]],[11,"type_id","","",1944,[[],["typeid",3]]],[11,"from","","",1945,[[]]],[11,"borrow","","",1945,[[]]],[11,"borrow_mut","","",1945,[[]]],[11,"try_from","","",1945,[[],["result",4]]],[11,"into","","",1945,[[]]],[11,"try_into","","",1945,[[],["result",4]]],[11,"type_id","","",1945,[[],["typeid",3]]],[11,"from","","",1946,[[]]],[11,"borrow","","",1946,[[]]],[11,"borrow_mut","","",1946,[[]]],[11,"try_from","","",1946,[[],["result",4]]],[11,"into","","",1946,[[]]],[11,"try_into","","",1946,[[],["result",4]]],[11,"type_id","","",1946,[[],["typeid",3]]],[11,"from","","",1947,[[]]],[11,"borrow","","",1947,[[]]],[11,"borrow_mut","","",1947,[[]]],[11,"try_from","","",1947,[[],["result",4]]],[11,"into","","",1947,[[]]],[11,"try_into","","",1947,[[],["result",4]]],[11,"type_id","","",1947,[[],["typeid",3]]],[11,"from","","",1948,[[]]],[11,"borrow","","",1948,[[]]],[11,"borrow_mut","","",1948,[[]]],[11,"try_from","","",1948,[[],["result",4]]],[11,"into","","",1948,[[]]],[11,"try_into","","",1948,[[],["result",4]]],[11,"type_id","","",1948,[[],["typeid",3]]],[11,"from","","",1949,[[]]],[11,"borrow","","",1949,[[]]],[11,"borrow_mut","","",1949,[[]]],[11,"try_from","","",1949,[[],["result",4]]],[11,"into","","",1949,[[]]],[11,"try_into","","",1949,[[],["result",4]]],[11,"type_id","","",1949,[[],["typeid",3]]],[11,"from","","",1950,[[]]],[11,"borrow","","",1950,[[]]],[11,"borrow_mut","","",1950,[[]]],[11,"try_from","","",1950,[[],["result",4]]],[11,"into","","",1950,[[]]],[11,"try_into","","",1950,[[],["result",4]]],[11,"type_id","","",1950,[[],["typeid",3]]],[11,"from","","",1951,[[]]],[11,"borrow","","",1951,[[]]],[11,"borrow_mut","","",1951,[[]]],[11,"try_from","","",1951,[[],["result",4]]],[11,"into","","",1951,[[]]],[11,"try_into","","",1951,[[],["result",4]]],[11,"type_id","","",1951,[[],["typeid",3]]],[11,"from","","",1952,[[]]],[11,"borrow","","",1952,[[]]],[11,"borrow_mut","","",1952,[[]]],[11,"try_from","","",1952,[[],["result",4]]],[11,"into","","",1952,[[]]],[11,"try_into","","",1952,[[],["result",4]]],[11,"type_id","","",1952,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::intflag","",1955,[[]]],[11,"borrow","","",1955,[[]]],[11,"borrow_mut","","",1955,[[]]],[11,"try_from","","",1955,[[],["result",4]]],[11,"into","","",1955,[[]]],[11,"try_into","","",1955,[[],["result",4]]],[11,"type_id","","",1955,[[],["typeid",3]]],[11,"from","","",1956,[[]]],[11,"borrow","","",1956,[[]]],[11,"borrow_mut","","",1956,[[]]],[11,"try_from","","",1956,[[],["result",4]]],[11,"into","","",1956,[[]]],[11,"try_into","","",1956,[[],["result",4]]],[11,"type_id","","",1956,[[],["typeid",3]]],[11,"from","","",1957,[[]]],[11,"borrow","","",1957,[[]]],[11,"borrow_mut","","",1957,[[]]],[11,"try_from","","",1957,[[],["result",4]]],[11,"into","","",1957,[[]]],[11,"try_into","","",1957,[[],["result",4]]],[11,"type_id","","",1957,[[],["typeid",3]]],[11,"from","","",1958,[[]]],[11,"borrow","","",1958,[[]]],[11,"borrow_mut","","",1958,[[]]],[11,"try_from","","",1958,[[],["result",4]]],[11,"into","","",1958,[[]]],[11,"try_into","","",1958,[[],["result",4]]],[11,"type_id","","",1958,[[],["typeid",3]]],[11,"from","","",1959,[[]]],[11,"borrow","","",1959,[[]]],[11,"borrow_mut","","",1959,[[]]],[11,"try_from","","",1959,[[],["result",4]]],[11,"into","","",1959,[[]]],[11,"try_into","","",1959,[[],["result",4]]],[11,"type_id","","",1959,[[],["typeid",3]]],[11,"from","","",1960,[[]]],[11,"borrow","","",1960,[[]]],[11,"borrow_mut","","",1960,[[]]],[11,"try_from","","",1960,[[],["result",4]]],[11,"into","","",1960,[[]]],[11,"try_into","","",1960,[[],["result",4]]],[11,"type_id","","",1960,[[],["typeid",3]]],[11,"from","","",1961,[[]]],[11,"borrow","","",1961,[[]]],[11,"borrow_mut","","",1961,[[]]],[11,"try_from","","",1961,[[],["result",4]]],[11,"into","","",1961,[[]]],[11,"try_into","","",1961,[[],["result",4]]],[11,"type_id","","",1961,[[],["typeid",3]]],[11,"from","","",1962,[[]]],[11,"borrow","","",1962,[[]]],[11,"borrow_mut","","",1962,[[]]],[11,"try_from","","",1962,[[],["result",4]]],[11,"into","","",1962,[[]]],[11,"try_into","","",1962,[[],["result",4]]],[11,"type_id","","",1962,[[],["typeid",3]]],[11,"from","","",1963,[[]]],[11,"borrow","","",1963,[[]]],[11,"borrow_mut","","",1963,[[]]],[11,"try_from","","",1963,[[],["result",4]]],[11,"into","","",1963,[[]]],[11,"try_into","","",1963,[[],["result",4]]],[11,"type_id","","",1963,[[],["typeid",3]]],[11,"from","","",1964,[[]]],[11,"borrow","","",1964,[[]]],[11,"borrow_mut","","",1964,[[]]],[11,"try_from","","",1964,[[],["result",4]]],[11,"into","","",1964,[[]]],[11,"try_into","","",1964,[[],["result",4]]],[11,"type_id","","",1964,[[],["typeid",3]]],[11,"from","","",1965,[[]]],[11,"borrow","","",1965,[[]]],[11,"borrow_mut","","",1965,[[]]],[11,"try_from","","",1965,[[],["result",4]]],[11,"into","","",1965,[[]]],[11,"try_into","","",1965,[[],["result",4]]],[11,"type_id","","",1965,[[],["typeid",3]]],[11,"from","","",1966,[[]]],[11,"borrow","","",1966,[[]]],[11,"borrow_mut","","",1966,[[]]],[11,"try_from","","",1966,[[],["result",4]]],[11,"into","","",1966,[[]]],[11,"try_into","","",1966,[[],["result",4]]],[11,"type_id","","",1966,[[],["typeid",3]]],[11,"from","","",1967,[[]]],[11,"borrow","","",1967,[[]]],[11,"borrow_mut","","",1967,[[]]],[11,"try_from","","",1967,[[],["result",4]]],[11,"into","","",1967,[[]]],[11,"try_into","","",1967,[[],["result",4]]],[11,"type_id","","",1967,[[],["typeid",3]]],[11,"from","","",1968,[[]]],[11,"borrow","","",1968,[[]]],[11,"borrow_mut","","",1968,[[]]],[11,"try_from","","",1968,[[],["result",4]]],[11,"into","","",1968,[[]]],[11,"try_into","","",1968,[[],["result",4]]],[11,"type_id","","",1968,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::dbgctrl","",1971,[[]]],[11,"borrow","","",1971,[[]]],[11,"borrow_mut","","",1971,[[]]],[11,"try_from","","",1971,[[],["result",4]]],[11,"into","","",1971,[[]]],[11,"try_into","","",1971,[[],["result",4]]],[11,"type_id","","",1971,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::freqcorr","",1975,[[]]],[11,"borrow","","",1975,[[]]],[11,"borrow_mut","","",1975,[[]]],[11,"try_from","","",1975,[[],["result",4]]],[11,"into","","",1975,[[]]],[11,"try_into","","",1975,[[],["result",4]]],[11,"type_id","","",1975,[[],["typeid",3]]],[11,"from","","",1976,[[]]],[11,"borrow","","",1976,[[]]],[11,"borrow_mut","","",1976,[[]]],[11,"try_from","","",1976,[[],["result",4]]],[11,"into","","",1976,[[]]],[11,"try_into","","",1976,[[],["result",4]]],[11,"type_id","","",1976,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::count","",1979,[[]]],[11,"borrow","","",1979,[[]]],[11,"borrow_mut","","",1979,[[]]],[11,"try_from","","",1979,[[],["result",4]]],[11,"into","","",1979,[[]]],[11,"try_into","","",1979,[[],["result",4]]],[11,"type_id","","",1979,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::per","",1982,[[]]],[11,"borrow","","",1982,[[]]],[11,"borrow_mut","","",1982,[[]]],[11,"try_from","","",1982,[[],["result",4]]],[11,"into","","",1982,[[]]],[11,"try_into","","",1982,[[],["result",4]]],[11,"type_id","","",1982,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::comp","",1985,[[]]],[11,"borrow","","",1985,[[]]],[11,"borrow_mut","","",1985,[[]]],[11,"try_from","","",1985,[[],["result",4]]],[11,"into","","",1985,[[]]],[11,"try_into","","",1985,[[],["result",4]]],[11,"type_id","","",1985,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::gp","",1988,[[]]],[11,"borrow","","",1988,[[]]],[11,"borrow_mut","","",1988,[[]]],[11,"try_from","","",1988,[[],["result",4]]],[11,"into","","",1988,[[]]],[11,"try_into","","",1988,[[],["result",4]]],[11,"type_id","","",1988,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::tampctrl","",1997,[[]]],[11,"borrow","","",1997,[[]]],[11,"borrow_mut","","",1997,[[]]],[11,"try_from","","",1997,[[],["result",4]]],[11,"into","","",1997,[[]]],[11,"try_into","","",1997,[[],["result",4]]],[11,"type_id","","",1997,[[],["typeid",3]]],[11,"from","","",1999,[[]]],[11,"borrow","","",1999,[[]]],[11,"borrow_mut","","",1999,[[]]],[11,"try_from","","",1999,[[],["result",4]]],[11,"into","","",1999,[[]]],[11,"try_into","","",1999,[[],["result",4]]],[11,"type_id","","",1999,[[],["typeid",3]]],[11,"from","","",2001,[[]]],[11,"borrow","","",2001,[[]]],[11,"borrow_mut","","",2001,[[]]],[11,"try_from","","",2001,[[],["result",4]]],[11,"into","","",2001,[[]]],[11,"try_into","","",2001,[[],["result",4]]],[11,"type_id","","",2001,[[],["typeid",3]]],[11,"from","","",2003,[[]]],[11,"borrow","","",2003,[[]]],[11,"borrow_mut","","",2003,[[]]],[11,"try_from","","",2003,[[],["result",4]]],[11,"into","","",2003,[[]]],[11,"try_into","","",2003,[[],["result",4]]],[11,"type_id","","",2003,[[],["typeid",3]]],[11,"from","","",2005,[[]]],[11,"borrow","","",2005,[[]]],[11,"borrow_mut","","",2005,[[]]],[11,"try_from","","",2005,[[],["result",4]]],[11,"into","","",2005,[[]]],[11,"try_into","","",2005,[[],["result",4]]],[11,"type_id","","",2005,[[],["typeid",3]]],[11,"from","","",2006,[[]]],[11,"borrow","","",2006,[[]]],[11,"borrow_mut","","",2006,[[]]],[11,"try_from","","",2006,[[],["result",4]]],[11,"into","","",2006,[[]]],[11,"try_into","","",2006,[[],["result",4]]],[11,"type_id","","",2006,[[],["typeid",3]]],[11,"from","","",2007,[[]]],[11,"borrow","","",2007,[[]]],[11,"borrow_mut","","",2007,[[]]],[11,"try_from","","",2007,[[],["result",4]]],[11,"into","","",2007,[[]]],[11,"try_into","","",2007,[[],["result",4]]],[11,"type_id","","",2007,[[],["typeid",3]]],[11,"from","","",2008,[[]]],[11,"borrow","","",2008,[[]]],[11,"borrow_mut","","",2008,[[]]],[11,"try_from","","",2008,[[],["result",4]]],[11,"into","","",2008,[[]]],[11,"try_into","","",2008,[[],["result",4]]],[11,"type_id","","",2008,[[],["typeid",3]]],[11,"from","","",2009,[[]]],[11,"borrow","","",2009,[[]]],[11,"borrow_mut","","",2009,[[]]],[11,"try_from","","",2009,[[],["result",4]]],[11,"into","","",2009,[[]]],[11,"try_into","","",2009,[[],["result",4]]],[11,"type_id","","",2009,[[],["typeid",3]]],[11,"from","","",2010,[[]]],[11,"borrow","","",2010,[[]]],[11,"borrow_mut","","",2010,[[]]],[11,"try_from","","",2010,[[],["result",4]]],[11,"into","","",2010,[[]]],[11,"try_into","","",2010,[[],["result",4]]],[11,"type_id","","",2010,[[],["typeid",3]]],[11,"from","","",2011,[[]]],[11,"borrow","","",2011,[[]]],[11,"borrow_mut","","",2011,[[]]],[11,"try_from","","",2011,[[],["result",4]]],[11,"into","","",2011,[[]]],[11,"try_into","","",2011,[[],["result",4]]],[11,"type_id","","",2011,[[],["typeid",3]]],[11,"from","","",2012,[[]]],[11,"borrow","","",2012,[[]]],[11,"borrow_mut","","",2012,[[]]],[11,"try_from","","",2012,[[],["result",4]]],[11,"into","","",2012,[[]]],[11,"try_into","","",2012,[[],["result",4]]],[11,"type_id","","",2012,[[],["typeid",3]]],[11,"from","","",2013,[[]]],[11,"borrow","","",2013,[[]]],[11,"borrow_mut","","",2013,[[]]],[11,"try_from","","",2013,[[],["result",4]]],[11,"into","","",2013,[[]]],[11,"try_into","","",2013,[[],["result",4]]],[11,"type_id","","",2013,[[],["typeid",3]]],[11,"from","","",2014,[[]]],[11,"borrow","","",2014,[[]]],[11,"borrow_mut","","",2014,[[]]],[11,"try_from","","",2014,[[],["result",4]]],[11,"into","","",2014,[[]]],[11,"try_into","","",2014,[[],["result",4]]],[11,"type_id","","",2014,[[],["typeid",3]]],[11,"from","","",2015,[[]]],[11,"borrow","","",2015,[[]]],[11,"borrow_mut","","",2015,[[]]],[11,"try_from","","",2015,[[],["result",4]]],[11,"into","","",2015,[[]]],[11,"try_into","","",2015,[[],["result",4]]],[11,"type_id","","",2015,[[],["typeid",3]]],[11,"from","","",1991,[[]]],[11,"borrow","","",1991,[[]]],[11,"borrow_mut","","",1991,[[]]],[11,"try_from","","",1991,[[],["result",4]]],[11,"into","","",1991,[[]]],[11,"try_into","","",1991,[[],["result",4]]],[11,"type_id","","",1991,[[],["typeid",3]]],[11,"from","","",1992,[[]]],[11,"borrow","","",1992,[[]]],[11,"borrow_mut","","",1992,[[]]],[11,"try_from","","",1992,[[],["result",4]]],[11,"into","","",1992,[[]]],[11,"try_into","","",1992,[[],["result",4]]],[11,"type_id","","",1992,[[],["typeid",3]]],[11,"from","","",1993,[[]]],[11,"borrow","","",1993,[[]]],[11,"borrow_mut","","",1993,[[]]],[11,"try_from","","",1993,[[],["result",4]]],[11,"into","","",1993,[[]]],[11,"try_into","","",1993,[[],["result",4]]],[11,"type_id","","",1993,[[],["typeid",3]]],[11,"from","","",1994,[[]]],[11,"borrow","","",1994,[[]]],[11,"borrow_mut","","",1994,[[]]],[11,"try_from","","",1994,[[],["result",4]]],[11,"into","","",1994,[[]]],[11,"try_into","","",1994,[[],["result",4]]],[11,"type_id","","",1994,[[],["typeid",3]]],[11,"from","","",1995,[[]]],[11,"borrow","","",1995,[[]]],[11,"borrow_mut","","",1995,[[]]],[11,"try_from","","",1995,[[],["result",4]]],[11,"into","","",1995,[[]]],[11,"try_into","","",1995,[[],["result",4]]],[11,"type_id","","",1995,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::tampid","",2019,[[]]],[11,"borrow","","",2019,[[]]],[11,"borrow_mut","","",2019,[[]]],[11,"try_from","","",2019,[[],["result",4]]],[11,"into","","",2019,[[]]],[11,"try_into","","",2019,[[],["result",4]]],[11,"type_id","","",2019,[[],["typeid",3]]],[11,"from","","",2020,[[]]],[11,"borrow","","",2020,[[]]],[11,"borrow_mut","","",2020,[[]]],[11,"try_from","","",2020,[[],["result",4]]],[11,"into","","",2020,[[]]],[11,"try_into","","",2020,[[],["result",4]]],[11,"type_id","","",2020,[[],["typeid",3]]],[11,"from","","",2021,[[]]],[11,"borrow","","",2021,[[]]],[11,"borrow_mut","","",2021,[[]]],[11,"try_from","","",2021,[[],["result",4]]],[11,"into","","",2021,[[]]],[11,"try_into","","",2021,[[],["result",4]]],[11,"type_id","","",2021,[[],["typeid",3]]],[11,"from","","",2022,[[]]],[11,"borrow","","",2022,[[]]],[11,"borrow_mut","","",2022,[[]]],[11,"try_from","","",2022,[[],["result",4]]],[11,"into","","",2022,[[]]],[11,"try_into","","",2022,[[],["result",4]]],[11,"type_id","","",2022,[[],["typeid",3]]],[11,"from","","",2023,[[]]],[11,"borrow","","",2023,[[]]],[11,"borrow_mut","","",2023,[[]]],[11,"try_from","","",2023,[[],["result",4]]],[11,"into","","",2023,[[]]],[11,"try_into","","",2023,[[],["result",4]]],[11,"type_id","","",2023,[[],["typeid",3]]],[11,"from","","",2024,[[]]],[11,"borrow","","",2024,[[]]],[11,"borrow_mut","","",2024,[[]]],[11,"try_from","","",2024,[[],["result",4]]],[11,"into","","",2024,[[]]],[11,"try_into","","",2024,[[],["result",4]]],[11,"type_id","","",2024,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode1::bkup","",2027,[[]]],[11,"borrow","","",2027,[[]]],[11,"borrow_mut","","",2027,[[]]],[11,"try_from","","",2027,[[],["result",4]]],[11,"into","","",2027,[[]]],[11,"try_into","","",2027,[[],["result",4]]],[11,"type_id","","",2027,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::ctrla","",2032,[[]]],[11,"borrow","","",2032,[[]]],[11,"borrow_mut","","",2032,[[]]],[11,"try_from","","",2032,[[],["result",4]]],[11,"into","","",2032,[[]]],[11,"try_into","","",2032,[[],["result",4]]],[11,"type_id","","",2032,[[],["typeid",3]]],[11,"from","","",2033,[[]]],[11,"borrow","","",2033,[[]]],[11,"borrow_mut","","",2033,[[]]],[11,"try_from","","",2033,[[],["result",4]]],[11,"into","","",2033,[[]]],[11,"try_into","","",2033,[[],["result",4]]],[11,"type_id","","",2033,[[],["typeid",3]]],[11,"from","","",2035,[[]]],[11,"borrow","","",2035,[[]]],[11,"borrow_mut","","",2035,[[]]],[11,"try_from","","",2035,[[],["result",4]]],[11,"into","","",2035,[[]]],[11,"try_into","","",2035,[[],["result",4]]],[11,"type_id","","",2035,[[],["typeid",3]]],[11,"from","","",2036,[[]]],[11,"borrow","","",2036,[[]]],[11,"borrow_mut","","",2036,[[]]],[11,"try_from","","",2036,[[],["result",4]]],[11,"into","","",2036,[[]]],[11,"try_into","","",2036,[[],["result",4]]],[11,"type_id","","",2036,[[],["typeid",3]]],[11,"from","","",2037,[[]]],[11,"borrow","","",2037,[[]]],[11,"borrow_mut","","",2037,[[]]],[11,"try_from","","",2037,[[],["result",4]]],[11,"into","","",2037,[[]]],[11,"try_into","","",2037,[[],["result",4]]],[11,"type_id","","",2037,[[],["typeid",3]]],[11,"from","","",2039,[[]]],[11,"borrow","","",2039,[[]]],[11,"borrow_mut","","",2039,[[]]],[11,"try_from","","",2039,[[],["result",4]]],[11,"into","","",2039,[[]]],[11,"try_into","","",2039,[[],["result",4]]],[11,"type_id","","",2039,[[],["typeid",3]]],[11,"from","","",2040,[[]]],[11,"borrow","","",2040,[[]]],[11,"borrow_mut","","",2040,[[]]],[11,"try_from","","",2040,[[],["result",4]]],[11,"into","","",2040,[[]]],[11,"try_into","","",2040,[[],["result",4]]],[11,"type_id","","",2040,[[],["typeid",3]]],[11,"from","","",2041,[[]]],[11,"borrow","","",2041,[[]]],[11,"borrow_mut","","",2041,[[]]],[11,"try_from","","",2041,[[],["result",4]]],[11,"into","","",2041,[[]]],[11,"try_into","","",2041,[[],["result",4]]],[11,"type_id","","",2041,[[],["typeid",3]]],[11,"from","","",2042,[[]]],[11,"borrow","","",2042,[[]]],[11,"borrow_mut","","",2042,[[]]],[11,"try_from","","",2042,[[],["result",4]]],[11,"into","","",2042,[[]]],[11,"try_into","","",2042,[[],["result",4]]],[11,"type_id","","",2042,[[],["typeid",3]]],[11,"from","","",2030,[[]]],[11,"borrow","","",2030,[[]]],[11,"borrow_mut","","",2030,[[]]],[11,"try_from","","",2030,[[],["result",4]]],[11,"into","","",2030,[[]]],[11,"try_into","","",2030,[[],["result",4]]],[11,"type_id","","",2030,[[],["typeid",3]]],[11,"from","","",2031,[[]]],[11,"borrow","","",2031,[[]]],[11,"borrow_mut","","",2031,[[]]],[11,"try_from","","",2031,[[],["result",4]]],[11,"into","","",2031,[[]]],[11,"try_into","","",2031,[[],["result",4]]],[11,"type_id","","",2031,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::ctrlb","",2047,[[]]],[11,"borrow","","",2047,[[]]],[11,"borrow_mut","","",2047,[[]]],[11,"try_from","","",2047,[[],["result",4]]],[11,"into","","",2047,[[]]],[11,"try_into","","",2047,[[],["result",4]]],[11,"type_id","","",2047,[[],["typeid",3]]],[11,"from","","",2048,[[]]],[11,"borrow","","",2048,[[]]],[11,"borrow_mut","","",2048,[[]]],[11,"try_from","","",2048,[[],["result",4]]],[11,"into","","",2048,[[]]],[11,"try_into","","",2048,[[],["result",4]]],[11,"type_id","","",2048,[[],["typeid",3]]],[11,"from","","",2049,[[]]],[11,"borrow","","",2049,[[]]],[11,"borrow_mut","","",2049,[[]]],[11,"try_from","","",2049,[[],["result",4]]],[11,"into","","",2049,[[]]],[11,"try_into","","",2049,[[],["result",4]]],[11,"type_id","","",2049,[[],["typeid",3]]],[11,"from","","",2050,[[]]],[11,"borrow","","",2050,[[]]],[11,"borrow_mut","","",2050,[[]]],[11,"try_from","","",2050,[[],["result",4]]],[11,"into","","",2050,[[]]],[11,"try_into","","",2050,[[],["result",4]]],[11,"type_id","","",2050,[[],["typeid",3]]],[11,"from","","",2051,[[]]],[11,"borrow","","",2051,[[]]],[11,"borrow_mut","","",2051,[[]]],[11,"try_from","","",2051,[[],["result",4]]],[11,"into","","",2051,[[]]],[11,"try_into","","",2051,[[],["result",4]]],[11,"type_id","","",2051,[[],["typeid",3]]],[11,"from","","",2052,[[]]],[11,"borrow","","",2052,[[]]],[11,"borrow_mut","","",2052,[[]]],[11,"try_from","","",2052,[[],["result",4]]],[11,"into","","",2052,[[]]],[11,"try_into","","",2052,[[],["result",4]]],[11,"type_id","","",2052,[[],["typeid",3]]],[11,"from","","",2054,[[]]],[11,"borrow","","",2054,[[]]],[11,"borrow_mut","","",2054,[[]]],[11,"try_from","","",2054,[[],["result",4]]],[11,"into","","",2054,[[]]],[11,"try_into","","",2054,[[],["result",4]]],[11,"type_id","","",2054,[[],["typeid",3]]],[11,"from","","",2056,[[]]],[11,"borrow","","",2056,[[]]],[11,"borrow_mut","","",2056,[[]]],[11,"try_from","","",2056,[[],["result",4]]],[11,"into","","",2056,[[]]],[11,"try_into","","",2056,[[],["result",4]]],[11,"type_id","","",2056,[[],["typeid",3]]],[11,"from","","",2045,[[]]],[11,"borrow","","",2045,[[]]],[11,"borrow_mut","","",2045,[[]]],[11,"try_from","","",2045,[[],["result",4]]],[11,"into","","",2045,[[]]],[11,"try_into","","",2045,[[],["result",4]]],[11,"type_id","","",2045,[[],["typeid",3]]],[11,"from","","",2046,[[]]],[11,"borrow","","",2046,[[]]],[11,"borrow_mut","","",2046,[[]]],[11,"try_from","","",2046,[[],["result",4]]],[11,"into","","",2046,[[]]],[11,"try_into","","",2046,[[],["result",4]]],[11,"type_id","","",2046,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::evctrl","",2059,[[]]],[11,"borrow","","",2059,[[]]],[11,"borrow_mut","","",2059,[[]]],[11,"try_from","","",2059,[[],["result",4]]],[11,"into","","",2059,[[]]],[11,"try_into","","",2059,[[],["result",4]]],[11,"type_id","","",2059,[[],["typeid",3]]],[11,"from","","",2060,[[]]],[11,"borrow","","",2060,[[]]],[11,"borrow_mut","","",2060,[[]]],[11,"try_from","","",2060,[[],["result",4]]],[11,"into","","",2060,[[]]],[11,"try_into","","",2060,[[],["result",4]]],[11,"type_id","","",2060,[[],["typeid",3]]],[11,"from","","",2061,[[]]],[11,"borrow","","",2061,[[]]],[11,"borrow_mut","","",2061,[[]]],[11,"try_from","","",2061,[[],["result",4]]],[11,"into","","",2061,[[]]],[11,"try_into","","",2061,[[],["result",4]]],[11,"type_id","","",2061,[[],["typeid",3]]],[11,"from","","",2062,[[]]],[11,"borrow","","",2062,[[]]],[11,"borrow_mut","","",2062,[[]]],[11,"try_from","","",2062,[[],["result",4]]],[11,"into","","",2062,[[]]],[11,"try_into","","",2062,[[],["result",4]]],[11,"type_id","","",2062,[[],["typeid",3]]],[11,"from","","",2063,[[]]],[11,"borrow","","",2063,[[]]],[11,"borrow_mut","","",2063,[[]]],[11,"try_from","","",2063,[[],["result",4]]],[11,"into","","",2063,[[]]],[11,"try_into","","",2063,[[],["result",4]]],[11,"type_id","","",2063,[[],["typeid",3]]],[11,"from","","",2064,[[]]],[11,"borrow","","",2064,[[]]],[11,"borrow_mut","","",2064,[[]]],[11,"try_from","","",2064,[[],["result",4]]],[11,"into","","",2064,[[]]],[11,"try_into","","",2064,[[],["result",4]]],[11,"type_id","","",2064,[[],["typeid",3]]],[11,"from","","",2065,[[]]],[11,"borrow","","",2065,[[]]],[11,"borrow_mut","","",2065,[[]]],[11,"try_from","","",2065,[[],["result",4]]],[11,"into","","",2065,[[]]],[11,"try_into","","",2065,[[],["result",4]]],[11,"type_id","","",2065,[[],["typeid",3]]],[11,"from","","",2066,[[]]],[11,"borrow","","",2066,[[]]],[11,"borrow_mut","","",2066,[[]]],[11,"try_from","","",2066,[[],["result",4]]],[11,"into","","",2066,[[]]],[11,"try_into","","",2066,[[],["result",4]]],[11,"type_id","","",2066,[[],["typeid",3]]],[11,"from","","",2067,[[]]],[11,"borrow","","",2067,[[]]],[11,"borrow_mut","","",2067,[[]]],[11,"try_from","","",2067,[[],["result",4]]],[11,"into","","",2067,[[]]],[11,"try_into","","",2067,[[],["result",4]]],[11,"type_id","","",2067,[[],["typeid",3]]],[11,"from","","",2068,[[]]],[11,"borrow","","",2068,[[]]],[11,"borrow_mut","","",2068,[[]]],[11,"try_from","","",2068,[[],["result",4]]],[11,"into","","",2068,[[]]],[11,"try_into","","",2068,[[],["result",4]]],[11,"type_id","","",2068,[[],["typeid",3]]],[11,"from","","",2069,[[]]],[11,"borrow","","",2069,[[]]],[11,"borrow_mut","","",2069,[[]]],[11,"try_from","","",2069,[[],["result",4]]],[11,"into","","",2069,[[]]],[11,"try_into","","",2069,[[],["result",4]]],[11,"type_id","","",2069,[[],["typeid",3]]],[11,"from","","",2070,[[]]],[11,"borrow","","",2070,[[]]],[11,"borrow_mut","","",2070,[[]]],[11,"try_from","","",2070,[[],["result",4]]],[11,"into","","",2070,[[]]],[11,"try_into","","",2070,[[],["result",4]]],[11,"type_id","","",2070,[[],["typeid",3]]],[11,"from","","",2071,[[]]],[11,"borrow","","",2071,[[]]],[11,"borrow_mut","","",2071,[[]]],[11,"try_from","","",2071,[[],["result",4]]],[11,"into","","",2071,[[]]],[11,"try_into","","",2071,[[],["result",4]]],[11,"type_id","","",2071,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::intenclr","",2074,[[]]],[11,"borrow","","",2074,[[]]],[11,"borrow_mut","","",2074,[[]]],[11,"try_from","","",2074,[[],["result",4]]],[11,"into","","",2074,[[]]],[11,"try_into","","",2074,[[],["result",4]]],[11,"type_id","","",2074,[[],["typeid",3]]],[11,"from","","",2075,[[]]],[11,"borrow","","",2075,[[]]],[11,"borrow_mut","","",2075,[[]]],[11,"try_from","","",2075,[[],["result",4]]],[11,"into","","",2075,[[]]],[11,"try_into","","",2075,[[],["result",4]]],[11,"type_id","","",2075,[[],["typeid",3]]],[11,"from","","",2076,[[]]],[11,"borrow","","",2076,[[]]],[11,"borrow_mut","","",2076,[[]]],[11,"try_from","","",2076,[[],["result",4]]],[11,"into","","",2076,[[]]],[11,"try_into","","",2076,[[],["result",4]]],[11,"type_id","","",2076,[[],["typeid",3]]],[11,"from","","",2077,[[]]],[11,"borrow","","",2077,[[]]],[11,"borrow_mut","","",2077,[[]]],[11,"try_from","","",2077,[[],["result",4]]],[11,"into","","",2077,[[]]],[11,"try_into","","",2077,[[],["result",4]]],[11,"type_id","","",2077,[[],["typeid",3]]],[11,"from","","",2078,[[]]],[11,"borrow","","",2078,[[]]],[11,"borrow_mut","","",2078,[[]]],[11,"try_from","","",2078,[[],["result",4]]],[11,"into","","",2078,[[]]],[11,"try_into","","",2078,[[],["result",4]]],[11,"type_id","","",2078,[[],["typeid",3]]],[11,"from","","",2079,[[]]],[11,"borrow","","",2079,[[]]],[11,"borrow_mut","","",2079,[[]]],[11,"try_from","","",2079,[[],["result",4]]],[11,"into","","",2079,[[]]],[11,"try_into","","",2079,[[],["result",4]]],[11,"type_id","","",2079,[[],["typeid",3]]],[11,"from","","",2080,[[]]],[11,"borrow","","",2080,[[]]],[11,"borrow_mut","","",2080,[[]]],[11,"try_from","","",2080,[[],["result",4]]],[11,"into","","",2080,[[]]],[11,"try_into","","",2080,[[],["result",4]]],[11,"type_id","","",2080,[[],["typeid",3]]],[11,"from","","",2081,[[]]],[11,"borrow","","",2081,[[]]],[11,"borrow_mut","","",2081,[[]]],[11,"try_from","","",2081,[[],["result",4]]],[11,"into","","",2081,[[]]],[11,"try_into","","",2081,[[],["result",4]]],[11,"type_id","","",2081,[[],["typeid",3]]],[11,"from","","",2082,[[]]],[11,"borrow","","",2082,[[]]],[11,"borrow_mut","","",2082,[[]]],[11,"try_from","","",2082,[[],["result",4]]],[11,"into","","",2082,[[]]],[11,"try_into","","",2082,[[],["result",4]]],[11,"type_id","","",2082,[[],["typeid",3]]],[11,"from","","",2083,[[]]],[11,"borrow","","",2083,[[]]],[11,"borrow_mut","","",2083,[[]]],[11,"try_from","","",2083,[[],["result",4]]],[11,"into","","",2083,[[]]],[11,"try_into","","",2083,[[],["result",4]]],[11,"type_id","","",2083,[[],["typeid",3]]],[11,"from","","",2084,[[]]],[11,"borrow","","",2084,[[]]],[11,"borrow_mut","","",2084,[[]]],[11,"try_from","","",2084,[[],["result",4]]],[11,"into","","",2084,[[]]],[11,"try_into","","",2084,[[],["result",4]]],[11,"type_id","","",2084,[[],["typeid",3]]],[11,"from","","",2085,[[]]],[11,"borrow","","",2085,[[]]],[11,"borrow_mut","","",2085,[[]]],[11,"try_from","","",2085,[[],["result",4]]],[11,"into","","",2085,[[]]],[11,"try_into","","",2085,[[],["result",4]]],[11,"type_id","","",2085,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::intenset","",2088,[[]]],[11,"borrow","","",2088,[[]]],[11,"borrow_mut","","",2088,[[]]],[11,"try_from","","",2088,[[],["result",4]]],[11,"into","","",2088,[[]]],[11,"try_into","","",2088,[[],["result",4]]],[11,"type_id","","",2088,[[],["typeid",3]]],[11,"from","","",2089,[[]]],[11,"borrow","","",2089,[[]]],[11,"borrow_mut","","",2089,[[]]],[11,"try_from","","",2089,[[],["result",4]]],[11,"into","","",2089,[[]]],[11,"try_into","","",2089,[[],["result",4]]],[11,"type_id","","",2089,[[],["typeid",3]]],[11,"from","","",2090,[[]]],[11,"borrow","","",2090,[[]]],[11,"borrow_mut","","",2090,[[]]],[11,"try_from","","",2090,[[],["result",4]]],[11,"into","","",2090,[[]]],[11,"try_into","","",2090,[[],["result",4]]],[11,"type_id","","",2090,[[],["typeid",3]]],[11,"from","","",2091,[[]]],[11,"borrow","","",2091,[[]]],[11,"borrow_mut","","",2091,[[]]],[11,"try_from","","",2091,[[],["result",4]]],[11,"into","","",2091,[[]]],[11,"try_into","","",2091,[[],["result",4]]],[11,"type_id","","",2091,[[],["typeid",3]]],[11,"from","","",2092,[[]]],[11,"borrow","","",2092,[[]]],[11,"borrow_mut","","",2092,[[]]],[11,"try_from","","",2092,[[],["result",4]]],[11,"into","","",2092,[[]]],[11,"try_into","","",2092,[[],["result",4]]],[11,"type_id","","",2092,[[],["typeid",3]]],[11,"from","","",2093,[[]]],[11,"borrow","","",2093,[[]]],[11,"borrow_mut","","",2093,[[]]],[11,"try_from","","",2093,[[],["result",4]]],[11,"into","","",2093,[[]]],[11,"try_into","","",2093,[[],["result",4]]],[11,"type_id","","",2093,[[],["typeid",3]]],[11,"from","","",2094,[[]]],[11,"borrow","","",2094,[[]]],[11,"borrow_mut","","",2094,[[]]],[11,"try_from","","",2094,[[],["result",4]]],[11,"into","","",2094,[[]]],[11,"try_into","","",2094,[[],["result",4]]],[11,"type_id","","",2094,[[],["typeid",3]]],[11,"from","","",2095,[[]]],[11,"borrow","","",2095,[[]]],[11,"borrow_mut","","",2095,[[]]],[11,"try_from","","",2095,[[],["result",4]]],[11,"into","","",2095,[[]]],[11,"try_into","","",2095,[[],["result",4]]],[11,"type_id","","",2095,[[],["typeid",3]]],[11,"from","","",2096,[[]]],[11,"borrow","","",2096,[[]]],[11,"borrow_mut","","",2096,[[]]],[11,"try_from","","",2096,[[],["result",4]]],[11,"into","","",2096,[[]]],[11,"try_into","","",2096,[[],["result",4]]],[11,"type_id","","",2096,[[],["typeid",3]]],[11,"from","","",2097,[[]]],[11,"borrow","","",2097,[[]]],[11,"borrow_mut","","",2097,[[]]],[11,"try_from","","",2097,[[],["result",4]]],[11,"into","","",2097,[[]]],[11,"try_into","","",2097,[[],["result",4]]],[11,"type_id","","",2097,[[],["typeid",3]]],[11,"from","","",2098,[[]]],[11,"borrow","","",2098,[[]]],[11,"borrow_mut","","",2098,[[]]],[11,"try_from","","",2098,[[],["result",4]]],[11,"into","","",2098,[[]]],[11,"try_into","","",2098,[[],["result",4]]],[11,"type_id","","",2098,[[],["typeid",3]]],[11,"from","","",2099,[[]]],[11,"borrow","","",2099,[[]]],[11,"borrow_mut","","",2099,[[]]],[11,"try_from","","",2099,[[],["result",4]]],[11,"into","","",2099,[[]]],[11,"try_into","","",2099,[[],["result",4]]],[11,"type_id","","",2099,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::intflag","",2102,[[]]],[11,"borrow","","",2102,[[]]],[11,"borrow_mut","","",2102,[[]]],[11,"try_from","","",2102,[[],["result",4]]],[11,"into","","",2102,[[]]],[11,"try_into","","",2102,[[],["result",4]]],[11,"type_id","","",2102,[[],["typeid",3]]],[11,"from","","",2103,[[]]],[11,"borrow","","",2103,[[]]],[11,"borrow_mut","","",2103,[[]]],[11,"try_from","","",2103,[[],["result",4]]],[11,"into","","",2103,[[]]],[11,"try_into","","",2103,[[],["result",4]]],[11,"type_id","","",2103,[[],["typeid",3]]],[11,"from","","",2104,[[]]],[11,"borrow","","",2104,[[]]],[11,"borrow_mut","","",2104,[[]]],[11,"try_from","","",2104,[[],["result",4]]],[11,"into","","",2104,[[]]],[11,"try_into","","",2104,[[],["result",4]]],[11,"type_id","","",2104,[[],["typeid",3]]],[11,"from","","",2105,[[]]],[11,"borrow","","",2105,[[]]],[11,"borrow_mut","","",2105,[[]]],[11,"try_from","","",2105,[[],["result",4]]],[11,"into","","",2105,[[]]],[11,"try_into","","",2105,[[],["result",4]]],[11,"type_id","","",2105,[[],["typeid",3]]],[11,"from","","",2106,[[]]],[11,"borrow","","",2106,[[]]],[11,"borrow_mut","","",2106,[[]]],[11,"try_from","","",2106,[[],["result",4]]],[11,"into","","",2106,[[]]],[11,"try_into","","",2106,[[],["result",4]]],[11,"type_id","","",2106,[[],["typeid",3]]],[11,"from","","",2107,[[]]],[11,"borrow","","",2107,[[]]],[11,"borrow_mut","","",2107,[[]]],[11,"try_from","","",2107,[[],["result",4]]],[11,"into","","",2107,[[]]],[11,"try_into","","",2107,[[],["result",4]]],[11,"type_id","","",2107,[[],["typeid",3]]],[11,"from","","",2108,[[]]],[11,"borrow","","",2108,[[]]],[11,"borrow_mut","","",2108,[[]]],[11,"try_from","","",2108,[[],["result",4]]],[11,"into","","",2108,[[]]],[11,"try_into","","",2108,[[],["result",4]]],[11,"type_id","","",2108,[[],["typeid",3]]],[11,"from","","",2109,[[]]],[11,"borrow","","",2109,[[]]],[11,"borrow_mut","","",2109,[[]]],[11,"try_from","","",2109,[[],["result",4]]],[11,"into","","",2109,[[]]],[11,"try_into","","",2109,[[],["result",4]]],[11,"type_id","","",2109,[[],["typeid",3]]],[11,"from","","",2110,[[]]],[11,"borrow","","",2110,[[]]],[11,"borrow_mut","","",2110,[[]]],[11,"try_from","","",2110,[[],["result",4]]],[11,"into","","",2110,[[]]],[11,"try_into","","",2110,[[],["result",4]]],[11,"type_id","","",2110,[[],["typeid",3]]],[11,"from","","",2111,[[]]],[11,"borrow","","",2111,[[]]],[11,"borrow_mut","","",2111,[[]]],[11,"try_from","","",2111,[[],["result",4]]],[11,"into","","",2111,[[]]],[11,"try_into","","",2111,[[],["result",4]]],[11,"type_id","","",2111,[[],["typeid",3]]],[11,"from","","",2112,[[]]],[11,"borrow","","",2112,[[]]],[11,"borrow_mut","","",2112,[[]]],[11,"try_from","","",2112,[[],["result",4]]],[11,"into","","",2112,[[]]],[11,"try_into","","",2112,[[],["result",4]]],[11,"type_id","","",2112,[[],["typeid",3]]],[11,"from","","",2113,[[]]],[11,"borrow","","",2113,[[]]],[11,"borrow_mut","","",2113,[[]]],[11,"try_from","","",2113,[[],["result",4]]],[11,"into","","",2113,[[]]],[11,"try_into","","",2113,[[],["result",4]]],[11,"type_id","","",2113,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::dbgctrl","",2116,[[]]],[11,"borrow","","",2116,[[]]],[11,"borrow_mut","","",2116,[[]]],[11,"try_from","","",2116,[[],["result",4]]],[11,"into","","",2116,[[]]],[11,"try_into","","",2116,[[],["result",4]]],[11,"type_id","","",2116,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::freqcorr","",2120,[[]]],[11,"borrow","","",2120,[[]]],[11,"borrow_mut","","",2120,[[]]],[11,"try_from","","",2120,[[],["result",4]]],[11,"into","","",2120,[[]]],[11,"try_into","","",2120,[[],["result",4]]],[11,"type_id","","",2120,[[],["typeid",3]]],[11,"from","","",2121,[[]]],[11,"borrow","","",2121,[[]]],[11,"borrow_mut","","",2121,[[]]],[11,"try_from","","",2121,[[],["result",4]]],[11,"into","","",2121,[[]]],[11,"try_into","","",2121,[[],["result",4]]],[11,"type_id","","",2121,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::clock","",2125,[[]]],[11,"borrow","","",2125,[[]]],[11,"borrow_mut","","",2125,[[]]],[11,"try_from","","",2125,[[],["result",4]]],[11,"into","","",2125,[[]]],[11,"try_into","","",2125,[[],["result",4]]],[11,"type_id","","",2125,[[],["typeid",3]]],[11,"from","","",2126,[[]]],[11,"borrow","","",2126,[[]]],[11,"borrow_mut","","",2126,[[]]],[11,"try_from","","",2126,[[],["result",4]]],[11,"into","","",2126,[[]]],[11,"try_into","","",2126,[[],["result",4]]],[11,"type_id","","",2126,[[],["typeid",3]]],[11,"from","","",2128,[[]]],[11,"borrow","","",2128,[[]]],[11,"borrow_mut","","",2128,[[]]],[11,"try_from","","",2128,[[],["result",4]]],[11,"into","","",2128,[[]]],[11,"try_into","","",2128,[[],["result",4]]],[11,"type_id","","",2128,[[],["typeid",3]]],[11,"from","","",2129,[[]]],[11,"borrow","","",2129,[[]]],[11,"borrow_mut","","",2129,[[]]],[11,"try_from","","",2129,[[],["result",4]]],[11,"into","","",2129,[[]]],[11,"try_into","","",2129,[[],["result",4]]],[11,"type_id","","",2129,[[],["typeid",3]]],[11,"from","","",2130,[[]]],[11,"borrow","","",2130,[[]]],[11,"borrow_mut","","",2130,[[]]],[11,"try_from","","",2130,[[],["result",4]]],[11,"into","","",2130,[[]]],[11,"try_into","","",2130,[[],["result",4]]],[11,"type_id","","",2130,[[],["typeid",3]]],[11,"from","","",2131,[[]]],[11,"borrow","","",2131,[[]]],[11,"borrow_mut","","",2131,[[]]],[11,"try_from","","",2131,[[],["result",4]]],[11,"into","","",2131,[[]]],[11,"try_into","","",2131,[[],["result",4]]],[11,"type_id","","",2131,[[],["typeid",3]]],[11,"from","","",2124,[[]]],[11,"borrow","","",2124,[[]]],[11,"borrow_mut","","",2124,[[]]],[11,"try_from","","",2124,[[],["result",4]]],[11,"into","","",2124,[[]]],[11,"try_into","","",2124,[[],["result",4]]],[11,"type_id","","",2124,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::gp","",2134,[[]]],[11,"borrow","","",2134,[[]]],[11,"borrow_mut","","",2134,[[]]],[11,"try_from","","",2134,[[],["result",4]]],[11,"into","","",2134,[[]]],[11,"try_into","","",2134,[[],["result",4]]],[11,"type_id","","",2134,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::alarm0","",2138,[[]]],[11,"borrow","","",2138,[[]]],[11,"borrow_mut","","",2138,[[]]],[11,"try_from","","",2138,[[],["result",4]]],[11,"into","","",2138,[[]]],[11,"try_into","","",2138,[[],["result",4]]],[11,"type_id","","",2138,[[],["typeid",3]]],[11,"from","","",2139,[[]]],[11,"borrow","","",2139,[[]]],[11,"borrow_mut","","",2139,[[]]],[11,"try_from","","",2139,[[],["result",4]]],[11,"into","","",2139,[[]]],[11,"try_into","","",2139,[[],["result",4]]],[11,"type_id","","",2139,[[],["typeid",3]]],[11,"from","","",2141,[[]]],[11,"borrow","","",2141,[[]]],[11,"borrow_mut","","",2141,[[]]],[11,"try_from","","",2141,[[],["result",4]]],[11,"into","","",2141,[[]]],[11,"try_into","","",2141,[[],["result",4]]],[11,"type_id","","",2141,[[],["typeid",3]]],[11,"from","","",2142,[[]]],[11,"borrow","","",2142,[[]]],[11,"borrow_mut","","",2142,[[]]],[11,"try_from","","",2142,[[],["result",4]]],[11,"into","","",2142,[[]]],[11,"try_into","","",2142,[[],["result",4]]],[11,"type_id","","",2142,[[],["typeid",3]]],[11,"from","","",2143,[[]]],[11,"borrow","","",2143,[[]]],[11,"borrow_mut","","",2143,[[]]],[11,"try_from","","",2143,[[],["result",4]]],[11,"into","","",2143,[[]]],[11,"try_into","","",2143,[[],["result",4]]],[11,"type_id","","",2143,[[],["typeid",3]]],[11,"from","","",2144,[[]]],[11,"borrow","","",2144,[[]]],[11,"borrow_mut","","",2144,[[]]],[11,"try_from","","",2144,[[],["result",4]]],[11,"into","","",2144,[[]]],[11,"try_into","","",2144,[[],["result",4]]],[11,"type_id","","",2144,[[],["typeid",3]]],[11,"from","","",2137,[[]]],[11,"borrow","","",2137,[[]]],[11,"borrow_mut","","",2137,[[]]],[11,"try_from","","",2137,[[],["result",4]]],[11,"into","","",2137,[[]]],[11,"try_into","","",2137,[[],["result",4]]],[11,"type_id","","",2137,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::mask0","",2149,[[]]],[11,"borrow","","",2149,[[]]],[11,"borrow_mut","","",2149,[[]]],[11,"try_from","","",2149,[[],["result",4]]],[11,"into","","",2149,[[]]],[11,"try_into","","",2149,[[],["result",4]]],[11,"type_id","","",2149,[[],["typeid",3]]],[11,"from","","",2147,[[]]],[11,"borrow","","",2147,[[]]],[11,"borrow_mut","","",2147,[[]]],[11,"try_from","","",2147,[[],["result",4]]],[11,"into","","",2147,[[]]],[11,"try_into","","",2147,[[],["result",4]]],[11,"type_id","","",2147,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::alarm1","",2153,[[]]],[11,"borrow","","",2153,[[]]],[11,"borrow_mut","","",2153,[[]]],[11,"try_from","","",2153,[[],["result",4]]],[11,"into","","",2153,[[]]],[11,"try_into","","",2153,[[],["result",4]]],[11,"type_id","","",2153,[[],["typeid",3]]],[11,"from","","",2154,[[]]],[11,"borrow","","",2154,[[]]],[11,"borrow_mut","","",2154,[[]]],[11,"try_from","","",2154,[[],["result",4]]],[11,"into","","",2154,[[]]],[11,"try_into","","",2154,[[],["result",4]]],[11,"type_id","","",2154,[[],["typeid",3]]],[11,"from","","",2156,[[]]],[11,"borrow","","",2156,[[]]],[11,"borrow_mut","","",2156,[[]]],[11,"try_from","","",2156,[[],["result",4]]],[11,"into","","",2156,[[]]],[11,"try_into","","",2156,[[],["result",4]]],[11,"type_id","","",2156,[[],["typeid",3]]],[11,"from","","",2157,[[]]],[11,"borrow","","",2157,[[]]],[11,"borrow_mut","","",2157,[[]]],[11,"try_from","","",2157,[[],["result",4]]],[11,"into","","",2157,[[]]],[11,"try_into","","",2157,[[],["result",4]]],[11,"type_id","","",2157,[[],["typeid",3]]],[11,"from","","",2158,[[]]],[11,"borrow","","",2158,[[]]],[11,"borrow_mut","","",2158,[[]]],[11,"try_from","","",2158,[[],["result",4]]],[11,"into","","",2158,[[]]],[11,"try_into","","",2158,[[],["result",4]]],[11,"type_id","","",2158,[[],["typeid",3]]],[11,"from","","",2159,[[]]],[11,"borrow","","",2159,[[]]],[11,"borrow_mut","","",2159,[[]]],[11,"try_from","","",2159,[[],["result",4]]],[11,"into","","",2159,[[]]],[11,"try_into","","",2159,[[],["result",4]]],[11,"type_id","","",2159,[[],["typeid",3]]],[11,"from","","",2152,[[]]],[11,"borrow","","",2152,[[]]],[11,"borrow_mut","","",2152,[[]]],[11,"try_from","","",2152,[[],["result",4]]],[11,"into","","",2152,[[]]],[11,"try_into","","",2152,[[],["result",4]]],[11,"type_id","","",2152,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::mask1","",2164,[[]]],[11,"borrow","","",2164,[[]]],[11,"borrow_mut","","",2164,[[]]],[11,"try_from","","",2164,[[],["result",4]]],[11,"into","","",2164,[[]]],[11,"try_into","","",2164,[[],["result",4]]],[11,"type_id","","",2164,[[],["typeid",3]]],[11,"from","","",2162,[[]]],[11,"borrow","","",2162,[[]]],[11,"borrow_mut","","",2162,[[]]],[11,"try_from","","",2162,[[],["result",4]]],[11,"into","","",2162,[[]]],[11,"try_into","","",2162,[[],["result",4]]],[11,"type_id","","",2162,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::tampctrl","",2173,[[]]],[11,"borrow","","",2173,[[]]],[11,"borrow_mut","","",2173,[[]]],[11,"try_from","","",2173,[[],["result",4]]],[11,"into","","",2173,[[]]],[11,"try_into","","",2173,[[],["result",4]]],[11,"type_id","","",2173,[[],["typeid",3]]],[11,"from","","",2175,[[]]],[11,"borrow","","",2175,[[]]],[11,"borrow_mut","","",2175,[[]]],[11,"try_from","","",2175,[[],["result",4]]],[11,"into","","",2175,[[]]],[11,"try_into","","",2175,[[],["result",4]]],[11,"type_id","","",2175,[[],["typeid",3]]],[11,"from","","",2177,[[]]],[11,"borrow","","",2177,[[]]],[11,"borrow_mut","","",2177,[[]]],[11,"try_from","","",2177,[[],["result",4]]],[11,"into","","",2177,[[]]],[11,"try_into","","",2177,[[],["result",4]]],[11,"type_id","","",2177,[[],["typeid",3]]],[11,"from","","",2179,[[]]],[11,"borrow","","",2179,[[]]],[11,"borrow_mut","","",2179,[[]]],[11,"try_from","","",2179,[[],["result",4]]],[11,"into","","",2179,[[]]],[11,"try_into","","",2179,[[],["result",4]]],[11,"type_id","","",2179,[[],["typeid",3]]],[11,"from","","",2181,[[]]],[11,"borrow","","",2181,[[]]],[11,"borrow_mut","","",2181,[[]]],[11,"try_from","","",2181,[[],["result",4]]],[11,"into","","",2181,[[]]],[11,"try_into","","",2181,[[],["result",4]]],[11,"type_id","","",2181,[[],["typeid",3]]],[11,"from","","",2182,[[]]],[11,"borrow","","",2182,[[]]],[11,"borrow_mut","","",2182,[[]]],[11,"try_from","","",2182,[[],["result",4]]],[11,"into","","",2182,[[]]],[11,"try_into","","",2182,[[],["result",4]]],[11,"type_id","","",2182,[[],["typeid",3]]],[11,"from","","",2183,[[]]],[11,"borrow","","",2183,[[]]],[11,"borrow_mut","","",2183,[[]]],[11,"try_from","","",2183,[[],["result",4]]],[11,"into","","",2183,[[]]],[11,"try_into","","",2183,[[],["result",4]]],[11,"type_id","","",2183,[[],["typeid",3]]],[11,"from","","",2184,[[]]],[11,"borrow","","",2184,[[]]],[11,"borrow_mut","","",2184,[[]]],[11,"try_from","","",2184,[[],["result",4]]],[11,"into","","",2184,[[]]],[11,"try_into","","",2184,[[],["result",4]]],[11,"type_id","","",2184,[[],["typeid",3]]],[11,"from","","",2185,[[]]],[11,"borrow","","",2185,[[]]],[11,"borrow_mut","","",2185,[[]]],[11,"try_from","","",2185,[[],["result",4]]],[11,"into","","",2185,[[]]],[11,"try_into","","",2185,[[],["result",4]]],[11,"type_id","","",2185,[[],["typeid",3]]],[11,"from","","",2186,[[]]],[11,"borrow","","",2186,[[]]],[11,"borrow_mut","","",2186,[[]]],[11,"try_from","","",2186,[[],["result",4]]],[11,"into","","",2186,[[]]],[11,"try_into","","",2186,[[],["result",4]]],[11,"type_id","","",2186,[[],["typeid",3]]],[11,"from","","",2187,[[]]],[11,"borrow","","",2187,[[]]],[11,"borrow_mut","","",2187,[[]]],[11,"try_from","","",2187,[[],["result",4]]],[11,"into","","",2187,[[]]],[11,"try_into","","",2187,[[],["result",4]]],[11,"type_id","","",2187,[[],["typeid",3]]],[11,"from","","",2188,[[]]],[11,"borrow","","",2188,[[]]],[11,"borrow_mut","","",2188,[[]]],[11,"try_from","","",2188,[[],["result",4]]],[11,"into","","",2188,[[]]],[11,"try_into","","",2188,[[],["result",4]]],[11,"type_id","","",2188,[[],["typeid",3]]],[11,"from","","",2189,[[]]],[11,"borrow","","",2189,[[]]],[11,"borrow_mut","","",2189,[[]]],[11,"try_from","","",2189,[[],["result",4]]],[11,"into","","",2189,[[]]],[11,"try_into","","",2189,[[],["result",4]]],[11,"type_id","","",2189,[[],["typeid",3]]],[11,"from","","",2190,[[]]],[11,"borrow","","",2190,[[]]],[11,"borrow_mut","","",2190,[[]]],[11,"try_from","","",2190,[[],["result",4]]],[11,"into","","",2190,[[]]],[11,"try_into","","",2190,[[],["result",4]]],[11,"type_id","","",2190,[[],["typeid",3]]],[11,"from","","",2191,[[]]],[11,"borrow","","",2191,[[]]],[11,"borrow_mut","","",2191,[[]]],[11,"try_from","","",2191,[[],["result",4]]],[11,"into","","",2191,[[]]],[11,"try_into","","",2191,[[],["result",4]]],[11,"type_id","","",2191,[[],["typeid",3]]],[11,"from","","",2167,[[]]],[11,"borrow","","",2167,[[]]],[11,"borrow_mut","","",2167,[[]]],[11,"try_from","","",2167,[[],["result",4]]],[11,"into","","",2167,[[]]],[11,"try_into","","",2167,[[],["result",4]]],[11,"type_id","","",2167,[[],["typeid",3]]],[11,"from","","",2168,[[]]],[11,"borrow","","",2168,[[]]],[11,"borrow_mut","","",2168,[[]]],[11,"try_from","","",2168,[[],["result",4]]],[11,"into","","",2168,[[]]],[11,"try_into","","",2168,[[],["result",4]]],[11,"type_id","","",2168,[[],["typeid",3]]],[11,"from","","",2169,[[]]],[11,"borrow","","",2169,[[]]],[11,"borrow_mut","","",2169,[[]]],[11,"try_from","","",2169,[[],["result",4]]],[11,"into","","",2169,[[]]],[11,"try_into","","",2169,[[],["result",4]]],[11,"type_id","","",2169,[[],["typeid",3]]],[11,"from","","",2170,[[]]],[11,"borrow","","",2170,[[]]],[11,"borrow_mut","","",2170,[[]]],[11,"try_from","","",2170,[[],["result",4]]],[11,"into","","",2170,[[]]],[11,"try_into","","",2170,[[],["result",4]]],[11,"type_id","","",2170,[[],["typeid",3]]],[11,"from","","",2171,[[]]],[11,"borrow","","",2171,[[]]],[11,"borrow_mut","","",2171,[[]]],[11,"try_from","","",2171,[[],["result",4]]],[11,"into","","",2171,[[]]],[11,"try_into","","",2171,[[],["result",4]]],[11,"type_id","","",2171,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::timestamp","",2194,[[]]],[11,"borrow","","",2194,[[]]],[11,"borrow_mut","","",2194,[[]]],[11,"try_from","","",2194,[[],["result",4]]],[11,"into","","",2194,[[]]],[11,"try_into","","",2194,[[],["result",4]]],[11,"type_id","","",2194,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::tampid","",2197,[[]]],[11,"borrow","","",2197,[[]]],[11,"borrow_mut","","",2197,[[]]],[11,"try_from","","",2197,[[],["result",4]]],[11,"into","","",2197,[[]]],[11,"try_into","","",2197,[[],["result",4]]],[11,"type_id","","",2197,[[],["typeid",3]]],[11,"from","","",2198,[[]]],[11,"borrow","","",2198,[[]]],[11,"borrow_mut","","",2198,[[]]],[11,"try_from","","",2198,[[],["result",4]]],[11,"into","","",2198,[[]]],[11,"try_into","","",2198,[[],["result",4]]],[11,"type_id","","",2198,[[],["typeid",3]]],[11,"from","","",2199,[[]]],[11,"borrow","","",2199,[[]]],[11,"borrow_mut","","",2199,[[]]],[11,"try_from","","",2199,[[],["result",4]]],[11,"into","","",2199,[[]]],[11,"try_into","","",2199,[[],["result",4]]],[11,"type_id","","",2199,[[],["typeid",3]]],[11,"from","","",2200,[[]]],[11,"borrow","","",2200,[[]]],[11,"borrow_mut","","",2200,[[]]],[11,"try_from","","",2200,[[],["result",4]]],[11,"into","","",2200,[[]]],[11,"try_into","","",2200,[[],["result",4]]],[11,"type_id","","",2200,[[],["typeid",3]]],[11,"from","","",2201,[[]]],[11,"borrow","","",2201,[[]]],[11,"borrow_mut","","",2201,[[]]],[11,"try_from","","",2201,[[],["result",4]]],[11,"into","","",2201,[[]]],[11,"try_into","","",2201,[[],["result",4]]],[11,"type_id","","",2201,[[],["typeid",3]]],[11,"from","","",2202,[[]]],[11,"borrow","","",2202,[[]]],[11,"borrow_mut","","",2202,[[]]],[11,"try_from","","",2202,[[],["result",4]]],[11,"into","","",2202,[[]]],[11,"try_into","","",2202,[[],["result",4]]],[11,"type_id","","",2202,[[],["typeid",3]]],[11,"from","atsamd51g::rtc::mode2::bkup","",2205,[[]]],[11,"borrow","","",2205,[[]]],[11,"borrow_mut","","",2205,[[]]],[11,"try_from","","",2205,[[],["result",4]]],[11,"into","","",2205,[[]]],[11,"try_into","","",2205,[[],["result",4]]],[11,"type_id","","",2205,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0","",2209,[[]]],[11,"borrow","","",2209,[[]]],[11,"borrow_mut","","",2209,[[]]],[11,"try_from","","",2209,[[],["result",4]]],[11,"into","","",2209,[[]]],[11,"try_into","","",2209,[[],["result",4]]],[11,"type_id","","",2209,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::ssar","",2210,[[]]],[11,"borrow","","",2210,[[]]],[11,"borrow_mut","","",2210,[[]]],[11,"try_from","","",2210,[[],["result",4]]],[11,"into","","",2210,[[]]],[11,"try_into","","",2210,[[],["result",4]]],[11,"type_id","","",2210,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::ssar_cmd23_mode","",2213,[[]]],[11,"borrow","","",2213,[[]]],[11,"borrow_mut","","",2213,[[]]],[11,"try_from","","",2213,[[],["result",4]]],[11,"into","","",2213,[[]]],[11,"try_into","","",2213,[[],["result",4]]],[11,"type_id","","",2213,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::bsr","",2217,[[]]],[11,"borrow","","",2217,[[]]],[11,"borrow_mut","","",2217,[[]]],[11,"try_from","","",2217,[[],["result",4]]],[11,"into","","",2217,[[]]],[11,"try_into","","",2217,[[],["result",4]]],[11,"type_id","","",2217,[[],["typeid",3]]],[11,"from","","",2219,[[]]],[11,"borrow","","",2219,[[]]],[11,"borrow_mut","","",2219,[[]]],[11,"try_from","","",2219,[[],["result",4]]],[11,"into","","",2219,[[]]],[11,"try_into","","",2219,[[],["result",4]]],[11,"type_id","","",2219,[[],["typeid",3]]],[11,"from","","",2216,[[]]],[11,"borrow","","",2216,[[]]],[11,"borrow_mut","","",2216,[[]]],[11,"try_from","","",2216,[[],["result",4]]],[11,"into","","",2216,[[]]],[11,"try_into","","",2216,[[],["result",4]]],[11,"type_id","","",2216,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::bcr","",2222,[[]]],[11,"borrow","","",2222,[[]]],[11,"borrow_mut","","",2222,[[]]],[11,"try_from","","",2222,[[],["result",4]]],[11,"into","","",2222,[[]]],[11,"try_into","","",2222,[[],["result",4]]],[11,"type_id","","",2222,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::arg1r","",2225,[[]]],[11,"borrow","","",2225,[[]]],[11,"borrow_mut","","",2225,[[]]],[11,"try_from","","",2225,[[],["result",4]]],[11,"into","","",2225,[[]]],[11,"try_into","","",2225,[[],["result",4]]],[11,"type_id","","",2225,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::tmr","",2234,[[]]],[11,"borrow","","",2234,[[]]],[11,"borrow_mut","","",2234,[[]]],[11,"try_from","","",2234,[[],["result",4]]],[11,"into","","",2234,[[]]],[11,"try_into","","",2234,[[],["result",4]]],[11,"type_id","","",2234,[[],["typeid",3]]],[11,"from","","",2236,[[]]],[11,"borrow","","",2236,[[]]],[11,"borrow_mut","","",2236,[[]]],[11,"try_from","","",2236,[[],["result",4]]],[11,"into","","",2236,[[]]],[11,"try_into","","",2236,[[],["result",4]]],[11,"type_id","","",2236,[[],["typeid",3]]],[11,"from","","",2238,[[]]],[11,"borrow","","",2238,[[]]],[11,"borrow_mut","","",2238,[[]]],[11,"try_from","","",2238,[[],["result",4]]],[11,"into","","",2238,[[]]],[11,"try_into","","",2238,[[],["result",4]]],[11,"type_id","","",2238,[[],["typeid",3]]],[11,"from","","",2240,[[]]],[11,"borrow","","",2240,[[]]],[11,"borrow_mut","","",2240,[[]]],[11,"try_from","","",2240,[[],["result",4]]],[11,"into","","",2240,[[]]],[11,"try_into","","",2240,[[],["result",4]]],[11,"type_id","","",2240,[[],["typeid",3]]],[11,"from","","",2242,[[]]],[11,"borrow","","",2242,[[]]],[11,"borrow_mut","","",2242,[[]]],[11,"try_from","","",2242,[[],["result",4]]],[11,"into","","",2242,[[]]],[11,"try_into","","",2242,[[],["result",4]]],[11,"type_id","","",2242,[[],["typeid",3]]],[11,"from","","",2228,[[]]],[11,"borrow","","",2228,[[]]],[11,"borrow_mut","","",2228,[[]]],[11,"try_from","","",2228,[[],["result",4]]],[11,"into","","",2228,[[]]],[11,"try_into","","",2228,[[],["result",4]]],[11,"type_id","","",2228,[[],["typeid",3]]],[11,"from","","",2229,[[]]],[11,"borrow","","",2229,[[]]],[11,"borrow_mut","","",2229,[[]]],[11,"try_from","","",2229,[[],["result",4]]],[11,"into","","",2229,[[]]],[11,"try_into","","",2229,[[],["result",4]]],[11,"type_id","","",2229,[[],["typeid",3]]],[11,"from","","",2230,[[]]],[11,"borrow","","",2230,[[]]],[11,"borrow_mut","","",2230,[[]]],[11,"try_from","","",2230,[[],["result",4]]],[11,"into","","",2230,[[]]],[11,"try_into","","",2230,[[],["result",4]]],[11,"type_id","","",2230,[[],["typeid",3]]],[11,"from","","",2231,[[]]],[11,"borrow","","",2231,[[]]],[11,"borrow_mut","","",2231,[[]]],[11,"try_from","","",2231,[[],["result",4]]],[11,"into","","",2231,[[]]],[11,"try_into","","",2231,[[],["result",4]]],[11,"type_id","","",2231,[[],["typeid",3]]],[11,"from","","",2232,[[]]],[11,"borrow","","",2232,[[]]],[11,"borrow_mut","","",2232,[[]]],[11,"try_from","","",2232,[[],["result",4]]],[11,"into","","",2232,[[]]],[11,"try_into","","",2232,[[],["result",4]]],[11,"type_id","","",2232,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::cr","",2251,[[]]],[11,"borrow","","",2251,[[]]],[11,"borrow_mut","","",2251,[[]]],[11,"try_from","","",2251,[[],["result",4]]],[11,"into","","",2251,[[]]],[11,"try_into","","",2251,[[],["result",4]]],[11,"type_id","","",2251,[[],["typeid",3]]],[11,"from","","",2253,[[]]],[11,"borrow","","",2253,[[]]],[11,"borrow_mut","","",2253,[[]]],[11,"try_from","","",2253,[[],["result",4]]],[11,"into","","",2253,[[]]],[11,"try_into","","",2253,[[],["result",4]]],[11,"type_id","","",2253,[[],["typeid",3]]],[11,"from","","",2255,[[]]],[11,"borrow","","",2255,[[]]],[11,"borrow_mut","","",2255,[[]]],[11,"try_from","","",2255,[[],["result",4]]],[11,"into","","",2255,[[]]],[11,"try_into","","",2255,[[],["result",4]]],[11,"type_id","","",2255,[[],["typeid",3]]],[11,"from","","",2257,[[]]],[11,"borrow","","",2257,[[]]],[11,"borrow_mut","","",2257,[[]]],[11,"try_from","","",2257,[[],["result",4]]],[11,"into","","",2257,[[]]],[11,"try_into","","",2257,[[],["result",4]]],[11,"type_id","","",2257,[[],["typeid",3]]],[11,"from","","",2259,[[]]],[11,"borrow","","",2259,[[]]],[11,"borrow_mut","","",2259,[[]]],[11,"try_from","","",2259,[[],["result",4]]],[11,"into","","",2259,[[]]],[11,"try_into","","",2259,[[],["result",4]]],[11,"type_id","","",2259,[[],["typeid",3]]],[11,"from","","",2260,[[]]],[11,"borrow","","",2260,[[]]],[11,"borrow_mut","","",2260,[[]]],[11,"try_from","","",2260,[[],["result",4]]],[11,"into","","",2260,[[]]],[11,"try_into","","",2260,[[],["result",4]]],[11,"type_id","","",2260,[[],["typeid",3]]],[11,"from","","",2245,[[]]],[11,"borrow","","",2245,[[]]],[11,"borrow_mut","","",2245,[[]]],[11,"try_from","","",2245,[[],["result",4]]],[11,"into","","",2245,[[]]],[11,"try_into","","",2245,[[],["result",4]]],[11,"type_id","","",2245,[[],["typeid",3]]],[11,"from","","",2246,[[]]],[11,"borrow","","",2246,[[]]],[11,"borrow_mut","","",2246,[[]]],[11,"try_from","","",2246,[[],["result",4]]],[11,"into","","",2246,[[]]],[11,"try_into","","",2246,[[],["result",4]]],[11,"type_id","","",2246,[[],["typeid",3]]],[11,"from","","",2247,[[]]],[11,"borrow","","",2247,[[]]],[11,"borrow_mut","","",2247,[[]]],[11,"try_from","","",2247,[[],["result",4]]],[11,"into","","",2247,[[]]],[11,"try_into","","",2247,[[],["result",4]]],[11,"type_id","","",2247,[[],["typeid",3]]],[11,"from","","",2248,[[]]],[11,"borrow","","",2248,[[]]],[11,"borrow_mut","","",2248,[[]]],[11,"try_from","","",2248,[[],["result",4]]],[11,"into","","",2248,[[]]],[11,"try_into","","",2248,[[],["result",4]]],[11,"type_id","","",2248,[[],["typeid",3]]],[11,"from","","",2249,[[]]],[11,"borrow","","",2249,[[]]],[11,"borrow_mut","","",2249,[[]]],[11,"try_from","","",2249,[[],["result",4]]],[11,"into","","",2249,[[]]],[11,"try_into","","",2249,[[],["result",4]]],[11,"type_id","","",2249,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::bdpr","",2264,[[]]],[11,"borrow","","",2264,[[]]],[11,"borrow_mut","","",2264,[[]]],[11,"try_from","","",2264,[[],["result",4]]],[11,"into","","",2264,[[]]],[11,"try_into","","",2264,[[],["result",4]]],[11,"type_id","","",2264,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::psr","",2267,[[]]],[11,"borrow","","",2267,[[]]],[11,"borrow_mut","","",2267,[[]]],[11,"try_from","","",2267,[[],["result",4]]],[11,"into","","",2267,[[]]],[11,"try_into","","",2267,[[],["result",4]]],[11,"type_id","","",2267,[[],["typeid",3]]],[11,"from","","",2268,[[]]],[11,"borrow","","",2268,[[]]],[11,"borrow_mut","","",2268,[[]]],[11,"try_from","","",2268,[[],["result",4]]],[11,"into","","",2268,[[]]],[11,"try_into","","",2268,[[],["result",4]]],[11,"type_id","","",2268,[[],["typeid",3]]],[11,"from","","",2269,[[]]],[11,"borrow","","",2269,[[]]],[11,"borrow_mut","","",2269,[[]]],[11,"try_from","","",2269,[[],["result",4]]],[11,"into","","",2269,[[]]],[11,"try_into","","",2269,[[],["result",4]]],[11,"type_id","","",2269,[[],["typeid",3]]],[11,"from","","",2270,[[]]],[11,"borrow","","",2270,[[]]],[11,"borrow_mut","","",2270,[[]]],[11,"try_from","","",2270,[[],["result",4]]],[11,"into","","",2270,[[]]],[11,"try_into","","",2270,[[],["result",4]]],[11,"type_id","","",2270,[[],["typeid",3]]],[11,"from","","",2271,[[]]],[11,"borrow","","",2271,[[]]],[11,"borrow_mut","","",2271,[[]]],[11,"try_from","","",2271,[[],["result",4]]],[11,"into","","",2271,[[]]],[11,"try_into","","",2271,[[],["result",4]]],[11,"type_id","","",2271,[[],["typeid",3]]],[11,"from","","",2272,[[]]],[11,"borrow","","",2272,[[]]],[11,"borrow_mut","","",2272,[[]]],[11,"try_from","","",2272,[[],["result",4]]],[11,"into","","",2272,[[]]],[11,"try_into","","",2272,[[],["result",4]]],[11,"type_id","","",2272,[[],["typeid",3]]],[11,"from","","",2273,[[]]],[11,"borrow","","",2273,[[]]],[11,"borrow_mut","","",2273,[[]]],[11,"try_from","","",2273,[[],["result",4]]],[11,"into","","",2273,[[]]],[11,"try_into","","",2273,[[],["result",4]]],[11,"type_id","","",2273,[[],["typeid",3]]],[11,"from","","",2274,[[]]],[11,"borrow","","",2274,[[]]],[11,"borrow_mut","","",2274,[[]]],[11,"try_from","","",2274,[[],["result",4]]],[11,"into","","",2274,[[]]],[11,"try_into","","",2274,[[],["result",4]]],[11,"type_id","","",2274,[[],["typeid",3]]],[11,"from","","",2275,[[]]],[11,"borrow","","",2275,[[]]],[11,"borrow_mut","","",2275,[[]]],[11,"try_from","","",2275,[[],["result",4]]],[11,"into","","",2275,[[]]],[11,"try_into","","",2275,[[],["result",4]]],[11,"type_id","","",2275,[[],["typeid",3]]],[11,"from","","",2276,[[]]],[11,"borrow","","",2276,[[]]],[11,"borrow_mut","","",2276,[[]]],[11,"try_from","","",2276,[[],["result",4]]],[11,"into","","",2276,[[]]],[11,"try_into","","",2276,[[],["result",4]]],[11,"type_id","","",2276,[[],["typeid",3]]],[11,"from","","",2277,[[]]],[11,"borrow","","",2277,[[]]],[11,"borrow_mut","","",2277,[[]]],[11,"try_from","","",2277,[[],["result",4]]],[11,"into","","",2277,[[]]],[11,"try_into","","",2277,[[],["result",4]]],[11,"type_id","","",2277,[[],["typeid",3]]],[11,"from","","",2278,[[]]],[11,"borrow","","",2278,[[]]],[11,"borrow_mut","","",2278,[[]]],[11,"try_from","","",2278,[[],["result",4]]],[11,"into","","",2278,[[]]],[11,"try_into","","",2278,[[],["result",4]]],[11,"type_id","","",2278,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::hc1r","",2299,[[]]],[11,"borrow","","",2299,[[]]],[11,"borrow_mut","","",2299,[[]]],[11,"try_from","","",2299,[[],["result",4]]],[11,"into","","",2299,[[]]],[11,"try_into","","",2299,[[],["result",4]]],[11,"type_id","","",2299,[[],["typeid",3]]],[11,"from","","",2301,[[]]],[11,"borrow","","",2301,[[]]],[11,"borrow_mut","","",2301,[[]]],[11,"try_from","","",2301,[[],["result",4]]],[11,"into","","",2301,[[]]],[11,"try_into","","",2301,[[],["result",4]]],[11,"type_id","","",2301,[[],["typeid",3]]],[11,"from","","",2303,[[]]],[11,"borrow","","",2303,[[]]],[11,"borrow_mut","","",2303,[[]]],[11,"try_from","","",2303,[[],["result",4]]],[11,"into","","",2303,[[]]],[11,"try_into","","",2303,[[],["result",4]]],[11,"type_id","","",2303,[[],["typeid",3]]],[11,"from","","",2305,[[]]],[11,"borrow","","",2305,[[]]],[11,"borrow_mut","","",2305,[[]]],[11,"try_from","","",2305,[[],["result",4]]],[11,"into","","",2305,[[]]],[11,"try_into","","",2305,[[],["result",4]]],[11,"type_id","","",2305,[[],["typeid",3]]],[11,"from","","",2307,[[]]],[11,"borrow","","",2307,[[]]],[11,"borrow_mut","","",2307,[[]]],[11,"try_from","","",2307,[[],["result",4]]],[11,"into","","",2307,[[]]],[11,"try_into","","",2307,[[],["result",4]]],[11,"type_id","","",2307,[[],["typeid",3]]],[11,"from","","",2309,[[]]],[11,"borrow","","",2309,[[]]],[11,"borrow_mut","","",2309,[[]]],[11,"try_from","","",2309,[[],["result",4]]],[11,"into","","",2309,[[]]],[11,"try_into","","",2309,[[],["result",4]]],[11,"type_id","","",2309,[[],["typeid",3]]],[11,"from","","",2292,[[]]],[11,"borrow","","",2292,[[]]],[11,"borrow_mut","","",2292,[[]]],[11,"try_from","","",2292,[[],["result",4]]],[11,"into","","",2292,[[]]],[11,"try_into","","",2292,[[],["result",4]]],[11,"type_id","","",2292,[[],["typeid",3]]],[11,"from","","",2293,[[]]],[11,"borrow","","",2293,[[]]],[11,"borrow_mut","","",2293,[[]]],[11,"try_from","","",2293,[[],["result",4]]],[11,"into","","",2293,[[]]],[11,"try_into","","",2293,[[],["result",4]]],[11,"type_id","","",2293,[[],["typeid",3]]],[11,"from","","",2294,[[]]],[11,"borrow","","",2294,[[]]],[11,"borrow_mut","","",2294,[[]]],[11,"try_from","","",2294,[[],["result",4]]],[11,"into","","",2294,[[]]],[11,"try_into","","",2294,[[],["result",4]]],[11,"type_id","","",2294,[[],["typeid",3]]],[11,"from","","",2295,[[]]],[11,"borrow","","",2295,[[]]],[11,"borrow_mut","","",2295,[[]]],[11,"try_from","","",2295,[[],["result",4]]],[11,"into","","",2295,[[]]],[11,"try_into","","",2295,[[],["result",4]]],[11,"type_id","","",2295,[[],["typeid",3]]],[11,"from","","",2296,[[]]],[11,"borrow","","",2296,[[]]],[11,"borrow_mut","","",2296,[[]]],[11,"try_from","","",2296,[[],["result",4]]],[11,"into","","",2296,[[]]],[11,"try_into","","",2296,[[],["result",4]]],[11,"type_id","","",2296,[[],["typeid",3]]],[11,"from","","",2297,[[]]],[11,"borrow","","",2297,[[]]],[11,"borrow_mut","","",2297,[[]]],[11,"try_from","","",2297,[[],["result",4]]],[11,"into","","",2297,[[]]],[11,"try_into","","",2297,[[],["result",4]]],[11,"type_id","","",2297,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::hc1r_emmc_mode","",2316,[[]]],[11,"borrow","","",2316,[[]]],[11,"borrow_mut","","",2316,[[]]],[11,"try_from","","",2316,[[],["result",4]]],[11,"into","","",2316,[[]]],[11,"try_into","","",2316,[[],["result",4]]],[11,"type_id","","",2316,[[],["typeid",3]]],[11,"from","","",2318,[[]]],[11,"borrow","","",2318,[[]]],[11,"borrow_mut","","",2318,[[]]],[11,"try_from","","",2318,[[],["result",4]]],[11,"into","","",2318,[[]]],[11,"try_into","","",2318,[[],["result",4]]],[11,"type_id","","",2318,[[],["typeid",3]]],[11,"from","","",2320,[[]]],[11,"borrow","","",2320,[[]]],[11,"borrow_mut","","",2320,[[]]],[11,"try_from","","",2320,[[],["result",4]]],[11,"into","","",2320,[[]]],[11,"try_into","","",2320,[[],["result",4]]],[11,"type_id","","",2320,[[],["typeid",3]]],[11,"from","","",2312,[[]]],[11,"borrow","","",2312,[[]]],[11,"borrow_mut","","",2312,[[]]],[11,"try_from","","",2312,[[],["result",4]]],[11,"into","","",2312,[[]]],[11,"try_into","","",2312,[[],["result",4]]],[11,"type_id","","",2312,[[],["typeid",3]]],[11,"from","","",2313,[[]]],[11,"borrow","","",2313,[[]]],[11,"borrow_mut","","",2313,[[]]],[11,"try_from","","",2313,[[],["result",4]]],[11,"into","","",2313,[[]]],[11,"try_into","","",2313,[[],["result",4]]],[11,"type_id","","",2313,[[],["typeid",3]]],[11,"from","","",2314,[[]]],[11,"borrow","","",2314,[[]]],[11,"borrow_mut","","",2314,[[]]],[11,"try_from","","",2314,[[],["result",4]]],[11,"into","","",2314,[[]]],[11,"try_into","","",2314,[[],["result",4]]],[11,"type_id","","",2314,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::pcr","",2326,[[]]],[11,"borrow","","",2326,[[]]],[11,"borrow_mut","","",2326,[[]]],[11,"try_from","","",2326,[[],["result",4]]],[11,"into","","",2326,[[]]],[11,"try_into","","",2326,[[],["result",4]]],[11,"type_id","","",2326,[[],["typeid",3]]],[11,"from","","",2328,[[]]],[11,"borrow","","",2328,[[]]],[11,"borrow_mut","","",2328,[[]]],[11,"try_from","","",2328,[[],["result",4]]],[11,"into","","",2328,[[]]],[11,"try_into","","",2328,[[],["result",4]]],[11,"type_id","","",2328,[[],["typeid",3]]],[11,"from","","",2323,[[]]],[11,"borrow","","",2323,[[]]],[11,"borrow_mut","","",2323,[[]]],[11,"try_from","","",2323,[[],["result",4]]],[11,"into","","",2323,[[]]],[11,"try_into","","",2323,[[],["result",4]]],[11,"type_id","","",2323,[[],["typeid",3]]],[11,"from","","",2324,[[]]],[11,"borrow","","",2324,[[]]],[11,"borrow_mut","","",2324,[[]]],[11,"try_from","","",2324,[[],["result",4]]],[11,"into","","",2324,[[]]],[11,"try_into","","",2324,[[],["result",4]]],[11,"type_id","","",2324,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::bgcr","",2336,[[]]],[11,"borrow","","",2336,[[]]],[11,"borrow_mut","","",2336,[[]]],[11,"try_from","","",2336,[[],["result",4]]],[11,"into","","",2336,[[]]],[11,"try_into","","",2336,[[],["result",4]]],[11,"type_id","","",2336,[[],["typeid",3]]],[11,"from","","",2338,[[]]],[11,"borrow","","",2338,[[]]],[11,"borrow_mut","","",2338,[[]]],[11,"try_from","","",2338,[[],["result",4]]],[11,"into","","",2338,[[]]],[11,"try_into","","",2338,[[],["result",4]]],[11,"type_id","","",2338,[[],["typeid",3]]],[11,"from","","",2340,[[]]],[11,"borrow","","",2340,[[]]],[11,"borrow_mut","","",2340,[[]]],[11,"try_from","","",2340,[[],["result",4]]],[11,"into","","",2340,[[]]],[11,"try_into","","",2340,[[],["result",4]]],[11,"type_id","","",2340,[[],["typeid",3]]],[11,"from","","",2342,[[]]],[11,"borrow","","",2342,[[]]],[11,"borrow_mut","","",2342,[[]]],[11,"try_from","","",2342,[[],["result",4]]],[11,"into","","",2342,[[]]],[11,"try_into","","",2342,[[],["result",4]]],[11,"type_id","","",2342,[[],["typeid",3]]],[11,"from","","",2331,[[]]],[11,"borrow","","",2331,[[]]],[11,"borrow_mut","","",2331,[[]]],[11,"try_from","","",2331,[[],["result",4]]],[11,"into","","",2331,[[]]],[11,"try_into","","",2331,[[],["result",4]]],[11,"type_id","","",2331,[[],["typeid",3]]],[11,"from","","",2332,[[]]],[11,"borrow","","",2332,[[]]],[11,"borrow_mut","","",2332,[[]]],[11,"try_from","","",2332,[[],["result",4]]],[11,"into","","",2332,[[]]],[11,"try_into","","",2332,[[],["result",4]]],[11,"type_id","","",2332,[[],["typeid",3]]],[11,"from","","",2333,[[]]],[11,"borrow","","",2333,[[]]],[11,"borrow_mut","","",2333,[[]]],[11,"try_from","","",2333,[[],["result",4]]],[11,"into","","",2333,[[]]],[11,"try_into","","",2333,[[],["result",4]]],[11,"type_id","","",2333,[[],["typeid",3]]],[11,"from","","",2334,[[]]],[11,"borrow","","",2334,[[]]],[11,"borrow_mut","","",2334,[[]]],[11,"try_from","","",2334,[[],["result",4]]],[11,"into","","",2334,[[]]],[11,"try_into","","",2334,[[],["result",4]]],[11,"type_id","","",2334,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::bgcr_emmc_mode","",2348,[[]]],[11,"borrow","","",2348,[[]]],[11,"borrow_mut","","",2348,[[]]],[11,"try_from","","",2348,[[],["result",4]]],[11,"into","","",2348,[[]]],[11,"try_into","","",2348,[[],["result",4]]],[11,"type_id","","",2348,[[],["typeid",3]]],[11,"from","","",2350,[[]]],[11,"borrow","","",2350,[[]]],[11,"borrow_mut","","",2350,[[]]],[11,"try_from","","",2350,[[],["result",4]]],[11,"into","","",2350,[[]]],[11,"try_into","","",2350,[[],["result",4]]],[11,"type_id","","",2350,[[],["typeid",3]]],[11,"from","","",2345,[[]]],[11,"borrow","","",2345,[[]]],[11,"borrow_mut","","",2345,[[]]],[11,"try_from","","",2345,[[],["result",4]]],[11,"into","","",2345,[[]]],[11,"try_into","","",2345,[[],["result",4]]],[11,"type_id","","",2345,[[],["typeid",3]]],[11,"from","","",2346,[[]]],[11,"borrow","","",2346,[[]]],[11,"borrow_mut","","",2346,[[]]],[11,"try_from","","",2346,[[],["result",4]]],[11,"into","","",2346,[[]]],[11,"try_into","","",2346,[[],["result",4]]],[11,"type_id","","",2346,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::wcr","",2357,[[]]],[11,"borrow","","",2357,[[]]],[11,"borrow_mut","","",2357,[[]]],[11,"try_from","","",2357,[[],["result",4]]],[11,"into","","",2357,[[]]],[11,"try_into","","",2357,[[],["result",4]]],[11,"type_id","","",2357,[[],["typeid",3]]],[11,"from","","",2359,[[]]],[11,"borrow","","",2359,[[]]],[11,"borrow_mut","","",2359,[[]]],[11,"try_from","","",2359,[[],["result",4]]],[11,"into","","",2359,[[]]],[11,"try_into","","",2359,[[],["result",4]]],[11,"type_id","","",2359,[[],["typeid",3]]],[11,"from","","",2361,[[]]],[11,"borrow","","",2361,[[]]],[11,"borrow_mut","","",2361,[[]]],[11,"try_from","","",2361,[[],["result",4]]],[11,"into","","",2361,[[]]],[11,"try_into","","",2361,[[],["result",4]]],[11,"type_id","","",2361,[[],["typeid",3]]],[11,"from","","",2353,[[]]],[11,"borrow","","",2353,[[]]],[11,"borrow_mut","","",2353,[[]]],[11,"try_from","","",2353,[[],["result",4]]],[11,"into","","",2353,[[]]],[11,"try_into","","",2353,[[],["result",4]]],[11,"type_id","","",2353,[[],["typeid",3]]],[11,"from","","",2354,[[]]],[11,"borrow","","",2354,[[]]],[11,"borrow_mut","","",2354,[[]]],[11,"try_from","","",2354,[[],["result",4]]],[11,"into","","",2354,[[]]],[11,"try_into","","",2354,[[],["result",4]]],[11,"type_id","","",2354,[[],["typeid",3]]],[11,"from","","",2355,[[]]],[11,"borrow","","",2355,[[]]],[11,"borrow_mut","","",2355,[[]]],[11,"try_from","","",2355,[[],["result",4]]],[11,"into","","",2355,[[]]],[11,"try_into","","",2355,[[],["result",4]]],[11,"type_id","","",2355,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::ccr","",2369,[[]]],[11,"borrow","","",2369,[[]]],[11,"borrow_mut","","",2369,[[]]],[11,"try_from","","",2369,[[],["result",4]]],[11,"into","","",2369,[[]]],[11,"try_into","","",2369,[[],["result",4]]],[11,"type_id","","",2369,[[],["typeid",3]]],[11,"from","","",2371,[[]]],[11,"borrow","","",2371,[[]]],[11,"borrow_mut","","",2371,[[]]],[11,"try_from","","",2371,[[],["result",4]]],[11,"into","","",2371,[[]]],[11,"try_into","","",2371,[[],["result",4]]],[11,"type_id","","",2371,[[],["typeid",3]]],[11,"from","","",2373,[[]]],[11,"borrow","","",2373,[[]]],[11,"borrow_mut","","",2373,[[]]],[11,"try_from","","",2373,[[],["result",4]]],[11,"into","","",2373,[[]]],[11,"try_into","","",2373,[[],["result",4]]],[11,"type_id","","",2373,[[],["typeid",3]]],[11,"from","","",2375,[[]]],[11,"borrow","","",2375,[[]]],[11,"borrow_mut","","",2375,[[]]],[11,"try_from","","",2375,[[],["result",4]]],[11,"into","","",2375,[[]]],[11,"try_into","","",2375,[[],["result",4]]],[11,"type_id","","",2375,[[],["typeid",3]]],[11,"from","","",2376,[[]]],[11,"borrow","","",2376,[[]]],[11,"borrow_mut","","",2376,[[]]],[11,"try_from","","",2376,[[],["result",4]]],[11,"into","","",2376,[[]]],[11,"try_into","","",2376,[[],["result",4]]],[11,"type_id","","",2376,[[],["typeid",3]]],[11,"from","","",2377,[[]]],[11,"borrow","","",2377,[[]]],[11,"borrow_mut","","",2377,[[]]],[11,"try_from","","",2377,[[],["result",4]]],[11,"into","","",2377,[[]]],[11,"try_into","","",2377,[[],["result",4]]],[11,"type_id","","",2377,[[],["typeid",3]]],[11,"from","","",2364,[[]]],[11,"borrow","","",2364,[[]]],[11,"borrow_mut","","",2364,[[]]],[11,"try_from","","",2364,[[],["result",4]]],[11,"into","","",2364,[[]]],[11,"try_into","","",2364,[[],["result",4]]],[11,"type_id","","",2364,[[],["typeid",3]]],[11,"from","","",2365,[[]]],[11,"borrow","","",2365,[[]]],[11,"borrow_mut","","",2365,[[]]],[11,"try_from","","",2365,[[],["result",4]]],[11,"into","","",2365,[[]]],[11,"try_into","","",2365,[[],["result",4]]],[11,"type_id","","",2365,[[],["typeid",3]]],[11,"from","","",2366,[[]]],[11,"borrow","","",2366,[[]]],[11,"borrow_mut","","",2366,[[]]],[11,"try_from","","",2366,[[],["result",4]]],[11,"into","","",2366,[[]]],[11,"try_into","","",2366,[[],["result",4]]],[11,"type_id","","",2366,[[],["typeid",3]]],[11,"from","","",2367,[[]]],[11,"borrow","","",2367,[[]]],[11,"borrow_mut","","",2367,[[]]],[11,"try_from","","",2367,[[],["result",4]]],[11,"into","","",2367,[[]]],[11,"try_into","","",2367,[[],["result",4]]],[11,"type_id","","",2367,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::tcr","",2380,[[]]],[11,"borrow","","",2380,[[]]],[11,"borrow_mut","","",2380,[[]]],[11,"try_from","","",2380,[[],["result",4]]],[11,"into","","",2380,[[]]],[11,"try_into","","",2380,[[],["result",4]]],[11,"type_id","","",2380,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::srr","",2387,[[]]],[11,"borrow","","",2387,[[]]],[11,"borrow_mut","","",2387,[[]]],[11,"try_from","","",2387,[[],["result",4]]],[11,"into","","",2387,[[]]],[11,"try_into","","",2387,[[],["result",4]]],[11,"type_id","","",2387,[[],["typeid",3]]],[11,"from","","",2389,[[]]],[11,"borrow","","",2389,[[]]],[11,"borrow_mut","","",2389,[[]]],[11,"try_from","","",2389,[[],["result",4]]],[11,"into","","",2389,[[]]],[11,"try_into","","",2389,[[],["result",4]]],[11,"type_id","","",2389,[[],["typeid",3]]],[11,"from","","",2391,[[]]],[11,"borrow","","",2391,[[]]],[11,"borrow_mut","","",2391,[[]]],[11,"try_from","","",2391,[[],["result",4]]],[11,"into","","",2391,[[]]],[11,"try_into","","",2391,[[],["result",4]]],[11,"type_id","","",2391,[[],["typeid",3]]],[11,"from","","",2383,[[]]],[11,"borrow","","",2383,[[]]],[11,"borrow_mut","","",2383,[[]]],[11,"try_from","","",2383,[[],["result",4]]],[11,"into","","",2383,[[]]],[11,"try_into","","",2383,[[],["result",4]]],[11,"type_id","","",2383,[[],["typeid",3]]],[11,"from","","",2384,[[]]],[11,"borrow","","",2384,[[]]],[11,"borrow_mut","","",2384,[[]]],[11,"try_from","","",2384,[[],["result",4]]],[11,"into","","",2384,[[]]],[11,"try_into","","",2384,[[],["result",4]]],[11,"type_id","","",2384,[[],["typeid",3]]],[11,"from","","",2385,[[]]],[11,"borrow","","",2385,[[]]],[11,"borrow_mut","","",2385,[[]]],[11,"try_from","","",2385,[[],["result",4]]],[11,"into","","",2385,[[]]],[11,"try_into","","",2385,[[],["result",4]]],[11,"type_id","","",2385,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::nistr","",2405,[[]]],[11,"borrow","","",2405,[[]]],[11,"borrow_mut","","",2405,[[]]],[11,"try_from","","",2405,[[],["result",4]]],[11,"into","","",2405,[[]]],[11,"try_into","","",2405,[[],["result",4]]],[11,"type_id","","",2405,[[],["typeid",3]]],[11,"from","","",2407,[[]]],[11,"borrow","","",2407,[[]]],[11,"borrow_mut","","",2407,[[]]],[11,"try_from","","",2407,[[],["result",4]]],[11,"into","","",2407,[[]]],[11,"try_into","","",2407,[[],["result",4]]],[11,"type_id","","",2407,[[],["typeid",3]]],[11,"from","","",2409,[[]]],[11,"borrow","","",2409,[[]]],[11,"borrow_mut","","",2409,[[]]],[11,"try_from","","",2409,[[],["result",4]]],[11,"into","","",2409,[[]]],[11,"try_into","","",2409,[[],["result",4]]],[11,"type_id","","",2409,[[],["typeid",3]]],[11,"from","","",2411,[[]]],[11,"borrow","","",2411,[[]]],[11,"borrow_mut","","",2411,[[]]],[11,"try_from","","",2411,[[],["result",4]]],[11,"into","","",2411,[[]]],[11,"try_into","","",2411,[[],["result",4]]],[11,"type_id","","",2411,[[],["typeid",3]]],[11,"from","","",2413,[[]]],[11,"borrow","","",2413,[[]]],[11,"borrow_mut","","",2413,[[]]],[11,"try_from","","",2413,[[],["result",4]]],[11,"into","","",2413,[[]]],[11,"try_into","","",2413,[[],["result",4]]],[11,"type_id","","",2413,[[],["typeid",3]]],[11,"from","","",2415,[[]]],[11,"borrow","","",2415,[[]]],[11,"borrow_mut","","",2415,[[]]],[11,"try_from","","",2415,[[],["result",4]]],[11,"into","","",2415,[[]]],[11,"try_into","","",2415,[[],["result",4]]],[11,"type_id","","",2415,[[],["typeid",3]]],[11,"from","","",2417,[[]]],[11,"borrow","","",2417,[[]]],[11,"borrow_mut","","",2417,[[]]],[11,"try_from","","",2417,[[],["result",4]]],[11,"into","","",2417,[[]]],[11,"try_into","","",2417,[[],["result",4]]],[11,"type_id","","",2417,[[],["typeid",3]]],[11,"from","","",2419,[[]]],[11,"borrow","","",2419,[[]]],[11,"borrow_mut","","",2419,[[]]],[11,"try_from","","",2419,[[],["result",4]]],[11,"into","","",2419,[[]]],[11,"try_into","","",2419,[[],["result",4]]],[11,"type_id","","",2419,[[],["typeid",3]]],[11,"from","","",2421,[[]]],[11,"borrow","","",2421,[[]]],[11,"borrow_mut","","",2421,[[]]],[11,"try_from","","",2421,[[],["result",4]]],[11,"into","","",2421,[[]]],[11,"try_into","","",2421,[[],["result",4]]],[11,"type_id","","",2421,[[],["typeid",3]]],[11,"from","","",2423,[[]]],[11,"borrow","","",2423,[[]]],[11,"borrow_mut","","",2423,[[]]],[11,"try_from","","",2423,[[],["result",4]]],[11,"into","","",2423,[[]]],[11,"try_into","","",2423,[[],["result",4]]],[11,"type_id","","",2423,[[],["typeid",3]]],[11,"from","","",2394,[[]]],[11,"borrow","","",2394,[[]]],[11,"borrow_mut","","",2394,[[]]],[11,"try_from","","",2394,[[],["result",4]]],[11,"into","","",2394,[[]]],[11,"try_into","","",2394,[[],["result",4]]],[11,"type_id","","",2394,[[],["typeid",3]]],[11,"from","","",2395,[[]]],[11,"borrow","","",2395,[[]]],[11,"borrow_mut","","",2395,[[]]],[11,"try_from","","",2395,[[],["result",4]]],[11,"into","","",2395,[[]]],[11,"try_into","","",2395,[[],["result",4]]],[11,"type_id","","",2395,[[],["typeid",3]]],[11,"from","","",2396,[[]]],[11,"borrow","","",2396,[[]]],[11,"borrow_mut","","",2396,[[]]],[11,"try_from","","",2396,[[],["result",4]]],[11,"into","","",2396,[[]]],[11,"try_into","","",2396,[[],["result",4]]],[11,"type_id","","",2396,[[],["typeid",3]]],[11,"from","","",2397,[[]]],[11,"borrow","","",2397,[[]]],[11,"borrow_mut","","",2397,[[]]],[11,"try_from","","",2397,[[],["result",4]]],[11,"into","","",2397,[[]]],[11,"try_into","","",2397,[[],["result",4]]],[11,"type_id","","",2397,[[],["typeid",3]]],[11,"from","","",2398,[[]]],[11,"borrow","","",2398,[[]]],[11,"borrow_mut","","",2398,[[]]],[11,"try_from","","",2398,[[],["result",4]]],[11,"into","","",2398,[[]]],[11,"try_into","","",2398,[[],["result",4]]],[11,"type_id","","",2398,[[],["typeid",3]]],[11,"from","","",2399,[[]]],[11,"borrow","","",2399,[[]]],[11,"borrow_mut","","",2399,[[]]],[11,"try_from","","",2399,[[],["result",4]]],[11,"into","","",2399,[[]]],[11,"try_into","","",2399,[[],["result",4]]],[11,"type_id","","",2399,[[],["typeid",3]]],[11,"from","","",2400,[[]]],[11,"borrow","","",2400,[[]]],[11,"borrow_mut","","",2400,[[]]],[11,"try_from","","",2400,[[],["result",4]]],[11,"into","","",2400,[[]]],[11,"try_into","","",2400,[[],["result",4]]],[11,"type_id","","",2400,[[],["typeid",3]]],[11,"from","","",2401,[[]]],[11,"borrow","","",2401,[[]]],[11,"borrow_mut","","",2401,[[]]],[11,"try_from","","",2401,[[],["result",4]]],[11,"into","","",2401,[[]]],[11,"try_into","","",2401,[[],["result",4]]],[11,"type_id","","",2401,[[],["typeid",3]]],[11,"from","","",2402,[[]]],[11,"borrow","","",2402,[[]]],[11,"borrow_mut","","",2402,[[]]],[11,"try_from","","",2402,[[],["result",4]]],[11,"into","","",2402,[[]]],[11,"try_into","","",2402,[[],["result",4]]],[11,"type_id","","",2402,[[],["typeid",3]]],[11,"from","","",2403,[[]]],[11,"borrow","","",2403,[[]]],[11,"borrow_mut","","",2403,[[]]],[11,"try_from","","",2403,[[],["result",4]]],[11,"into","","",2403,[[]]],[11,"try_into","","",2403,[[],["result",4]]],[11,"type_id","","",2403,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::nistr_emmc_mode","",2434,[[]]],[11,"borrow","","",2434,[[]]],[11,"borrow_mut","","",2434,[[]]],[11,"try_from","","",2434,[[],["result",4]]],[11,"into","","",2434,[[]]],[11,"try_into","","",2434,[[],["result",4]]],[11,"type_id","","",2434,[[],["typeid",3]]],[11,"from","","",2436,[[]]],[11,"borrow","","",2436,[[]]],[11,"borrow_mut","","",2436,[[]]],[11,"try_from","","",2436,[[],["result",4]]],[11,"into","","",2436,[[]]],[11,"try_into","","",2436,[[],["result",4]]],[11,"type_id","","",2436,[[],["typeid",3]]],[11,"from","","",2438,[[]]],[11,"borrow","","",2438,[[]]],[11,"borrow_mut","","",2438,[[]]],[11,"try_from","","",2438,[[],["result",4]]],[11,"into","","",2438,[[]]],[11,"try_into","","",2438,[[],["result",4]]],[11,"type_id","","",2438,[[],["typeid",3]]],[11,"from","","",2440,[[]]],[11,"borrow","","",2440,[[]]],[11,"borrow_mut","","",2440,[[]]],[11,"try_from","","",2440,[[],["result",4]]],[11,"into","","",2440,[[]]],[11,"try_into","","",2440,[[],["result",4]]],[11,"type_id","","",2440,[[],["typeid",3]]],[11,"from","","",2442,[[]]],[11,"borrow","","",2442,[[]]],[11,"borrow_mut","","",2442,[[]]],[11,"try_from","","",2442,[[],["result",4]]],[11,"into","","",2442,[[]]],[11,"try_into","","",2442,[[],["result",4]]],[11,"type_id","","",2442,[[],["typeid",3]]],[11,"from","","",2444,[[]]],[11,"borrow","","",2444,[[]]],[11,"borrow_mut","","",2444,[[]]],[11,"try_from","","",2444,[[],["result",4]]],[11,"into","","",2444,[[]]],[11,"try_into","","",2444,[[],["result",4]]],[11,"type_id","","",2444,[[],["typeid",3]]],[11,"from","","",2445,[[]]],[11,"borrow","","",2445,[[]]],[11,"borrow_mut","","",2445,[[]]],[11,"try_from","","",2445,[[],["result",4]]],[11,"into","","",2445,[[]]],[11,"try_into","","",2445,[[],["result",4]]],[11,"type_id","","",2445,[[],["typeid",3]]],[11,"from","","",2447,[[]]],[11,"borrow","","",2447,[[]]],[11,"borrow_mut","","",2447,[[]]],[11,"try_from","","",2447,[[],["result",4]]],[11,"into","","",2447,[[]]],[11,"try_into","","",2447,[[],["result",4]]],[11,"type_id","","",2447,[[],["typeid",3]]],[11,"from","","",2426,[[]]],[11,"borrow","","",2426,[[]]],[11,"borrow_mut","","",2426,[[]]],[11,"try_from","","",2426,[[],["result",4]]],[11,"into","","",2426,[[]]],[11,"try_into","","",2426,[[],["result",4]]],[11,"type_id","","",2426,[[],["typeid",3]]],[11,"from","","",2427,[[]]],[11,"borrow","","",2427,[[]]],[11,"borrow_mut","","",2427,[[]]],[11,"try_from","","",2427,[[],["result",4]]],[11,"into","","",2427,[[]]],[11,"try_into","","",2427,[[],["result",4]]],[11,"type_id","","",2427,[[],["typeid",3]]],[11,"from","","",2428,[[]]],[11,"borrow","","",2428,[[]]],[11,"borrow_mut","","",2428,[[]]],[11,"try_from","","",2428,[[],["result",4]]],[11,"into","","",2428,[[]]],[11,"try_into","","",2428,[[],["result",4]]],[11,"type_id","","",2428,[[],["typeid",3]]],[11,"from","","",2429,[[]]],[11,"borrow","","",2429,[[]]],[11,"borrow_mut","","",2429,[[]]],[11,"try_from","","",2429,[[],["result",4]]],[11,"into","","",2429,[[]]],[11,"try_into","","",2429,[[],["result",4]]],[11,"type_id","","",2429,[[],["typeid",3]]],[11,"from","","",2430,[[]]],[11,"borrow","","",2430,[[]]],[11,"borrow_mut","","",2430,[[]]],[11,"try_from","","",2430,[[],["result",4]]],[11,"into","","",2430,[[]]],[11,"try_into","","",2430,[[],["result",4]]],[11,"type_id","","",2430,[[],["typeid",3]]],[11,"from","","",2431,[[]]],[11,"borrow","","",2431,[[]]],[11,"borrow_mut","","",2431,[[]]],[11,"try_from","","",2431,[[],["result",4]]],[11,"into","","",2431,[[]]],[11,"try_into","","",2431,[[],["result",4]]],[11,"type_id","","",2431,[[],["typeid",3]]],[11,"from","","",2432,[[]]],[11,"borrow","","",2432,[[]]],[11,"borrow_mut","","",2432,[[]]],[11,"try_from","","",2432,[[],["result",4]]],[11,"into","","",2432,[[]]],[11,"try_into","","",2432,[[],["result",4]]],[11,"type_id","","",2432,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::eistr","",2461,[[]]],[11,"borrow","","",2461,[[]]],[11,"borrow_mut","","",2461,[[]]],[11,"try_from","","",2461,[[],["result",4]]],[11,"into","","",2461,[[]]],[11,"try_into","","",2461,[[],["result",4]]],[11,"type_id","","",2461,[[],["typeid",3]]],[11,"from","","",2463,[[]]],[11,"borrow","","",2463,[[]]],[11,"borrow_mut","","",2463,[[]]],[11,"try_from","","",2463,[[],["result",4]]],[11,"into","","",2463,[[]]],[11,"try_into","","",2463,[[],["result",4]]],[11,"type_id","","",2463,[[],["typeid",3]]],[11,"from","","",2465,[[]]],[11,"borrow","","",2465,[[]]],[11,"borrow_mut","","",2465,[[]]],[11,"try_from","","",2465,[[],["result",4]]],[11,"into","","",2465,[[]]],[11,"try_into","","",2465,[[],["result",4]]],[11,"type_id","","",2465,[[],["typeid",3]]],[11,"from","","",2467,[[]]],[11,"borrow","","",2467,[[]]],[11,"borrow_mut","","",2467,[[]]],[11,"try_from","","",2467,[[],["result",4]]],[11,"into","","",2467,[[]]],[11,"try_into","","",2467,[[],["result",4]]],[11,"type_id","","",2467,[[],["typeid",3]]],[11,"from","","",2469,[[]]],[11,"borrow","","",2469,[[]]],[11,"borrow_mut","","",2469,[[]]],[11,"try_from","","",2469,[[],["result",4]]],[11,"into","","",2469,[[]]],[11,"try_into","","",2469,[[],["result",4]]],[11,"type_id","","",2469,[[],["typeid",3]]],[11,"from","","",2471,[[]]],[11,"borrow","","",2471,[[]]],[11,"borrow_mut","","",2471,[[]]],[11,"try_from","","",2471,[[],["result",4]]],[11,"into","","",2471,[[]]],[11,"try_into","","",2471,[[],["result",4]]],[11,"type_id","","",2471,[[],["typeid",3]]],[11,"from","","",2473,[[]]],[11,"borrow","","",2473,[[]]],[11,"borrow_mut","","",2473,[[]]],[11,"try_from","","",2473,[[],["result",4]]],[11,"into","","",2473,[[]]],[11,"try_into","","",2473,[[],["result",4]]],[11,"type_id","","",2473,[[],["typeid",3]]],[11,"from","","",2475,[[]]],[11,"borrow","","",2475,[[]]],[11,"borrow_mut","","",2475,[[]]],[11,"try_from","","",2475,[[],["result",4]]],[11,"into","","",2475,[[]]],[11,"try_into","","",2475,[[],["result",4]]],[11,"type_id","","",2475,[[],["typeid",3]]],[11,"from","","",2477,[[]]],[11,"borrow","","",2477,[[]]],[11,"borrow_mut","","",2477,[[]]],[11,"try_from","","",2477,[[],["result",4]]],[11,"into","","",2477,[[]]],[11,"try_into","","",2477,[[],["result",4]]],[11,"type_id","","",2477,[[],["typeid",3]]],[11,"from","","",2479,[[]]],[11,"borrow","","",2479,[[]]],[11,"borrow_mut","","",2479,[[]]],[11,"try_from","","",2479,[[],["result",4]]],[11,"into","","",2479,[[]]],[11,"try_into","","",2479,[[],["result",4]]],[11,"type_id","","",2479,[[],["typeid",3]]],[11,"from","","",2450,[[]]],[11,"borrow","","",2450,[[]]],[11,"borrow_mut","","",2450,[[]]],[11,"try_from","","",2450,[[],["result",4]]],[11,"into","","",2450,[[]]],[11,"try_into","","",2450,[[],["result",4]]],[11,"type_id","","",2450,[[],["typeid",3]]],[11,"from","","",2451,[[]]],[11,"borrow","","",2451,[[]]],[11,"borrow_mut","","",2451,[[]]],[11,"try_from","","",2451,[[],["result",4]]],[11,"into","","",2451,[[]]],[11,"try_into","","",2451,[[],["result",4]]],[11,"type_id","","",2451,[[],["typeid",3]]],[11,"from","","",2452,[[]]],[11,"borrow","","",2452,[[]]],[11,"borrow_mut","","",2452,[[]]],[11,"try_from","","",2452,[[],["result",4]]],[11,"into","","",2452,[[]]],[11,"try_into","","",2452,[[],["result",4]]],[11,"type_id","","",2452,[[],["typeid",3]]],[11,"from","","",2453,[[]]],[11,"borrow","","",2453,[[]]],[11,"borrow_mut","","",2453,[[]]],[11,"try_from","","",2453,[[],["result",4]]],[11,"into","","",2453,[[]]],[11,"try_into","","",2453,[[],["result",4]]],[11,"type_id","","",2453,[[],["typeid",3]]],[11,"from","","",2454,[[]]],[11,"borrow","","",2454,[[]]],[11,"borrow_mut","","",2454,[[]]],[11,"try_from","","",2454,[[],["result",4]]],[11,"into","","",2454,[[]]],[11,"try_into","","",2454,[[],["result",4]]],[11,"type_id","","",2454,[[],["typeid",3]]],[11,"from","","",2455,[[]]],[11,"borrow","","",2455,[[]]],[11,"borrow_mut","","",2455,[[]]],[11,"try_from","","",2455,[[],["result",4]]],[11,"into","","",2455,[[]]],[11,"try_into","","",2455,[[],["result",4]]],[11,"type_id","","",2455,[[],["typeid",3]]],[11,"from","","",2456,[[]]],[11,"borrow","","",2456,[[]]],[11,"borrow_mut","","",2456,[[]]],[11,"try_from","","",2456,[[],["result",4]]],[11,"into","","",2456,[[]]],[11,"try_into","","",2456,[[],["result",4]]],[11,"type_id","","",2456,[[],["typeid",3]]],[11,"from","","",2457,[[]]],[11,"borrow","","",2457,[[]]],[11,"borrow_mut","","",2457,[[]]],[11,"try_from","","",2457,[[],["result",4]]],[11,"into","","",2457,[[]]],[11,"try_into","","",2457,[[],["result",4]]],[11,"type_id","","",2457,[[],["typeid",3]]],[11,"from","","",2458,[[]]],[11,"borrow","","",2458,[[]]],[11,"borrow_mut","","",2458,[[]]],[11,"try_from","","",2458,[[],["result",4]]],[11,"into","","",2458,[[]]],[11,"try_into","","",2458,[[],["result",4]]],[11,"type_id","","",2458,[[],["typeid",3]]],[11,"from","","",2459,[[]]],[11,"borrow","","",2459,[[]]],[11,"borrow_mut","","",2459,[[]]],[11,"try_from","","",2459,[[],["result",4]]],[11,"into","","",2459,[[]]],[11,"try_into","","",2459,[[],["result",4]]],[11,"type_id","","",2459,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::eistr_emmc_mode","",2494,[[]]],[11,"borrow","","",2494,[[]]],[11,"borrow_mut","","",2494,[[]]],[11,"try_from","","",2494,[[],["result",4]]],[11,"into","","",2494,[[]]],[11,"try_into","","",2494,[[],["result",4]]],[11,"type_id","","",2494,[[],["typeid",3]]],[11,"from","","",2496,[[]]],[11,"borrow","","",2496,[[]]],[11,"borrow_mut","","",2496,[[]]],[11,"try_from","","",2496,[[],["result",4]]],[11,"into","","",2496,[[]]],[11,"try_into","","",2496,[[],["result",4]]],[11,"type_id","","",2496,[[],["typeid",3]]],[11,"from","","",2498,[[]]],[11,"borrow","","",2498,[[]]],[11,"borrow_mut","","",2498,[[]]],[11,"try_from","","",2498,[[],["result",4]]],[11,"into","","",2498,[[]]],[11,"try_into","","",2498,[[],["result",4]]],[11,"type_id","","",2498,[[],["typeid",3]]],[11,"from","","",2500,[[]]],[11,"borrow","","",2500,[[]]],[11,"borrow_mut","","",2500,[[]]],[11,"try_from","","",2500,[[],["result",4]]],[11,"into","","",2500,[[]]],[11,"try_into","","",2500,[[],["result",4]]],[11,"type_id","","",2500,[[],["typeid",3]]],[11,"from","","",2502,[[]]],[11,"borrow","","",2502,[[]]],[11,"borrow_mut","","",2502,[[]]],[11,"try_from","","",2502,[[],["result",4]]],[11,"into","","",2502,[[]]],[11,"try_into","","",2502,[[],["result",4]]],[11,"type_id","","",2502,[[],["typeid",3]]],[11,"from","","",2504,[[]]],[11,"borrow","","",2504,[[]]],[11,"borrow_mut","","",2504,[[]]],[11,"try_from","","",2504,[[],["result",4]]],[11,"into","","",2504,[[]]],[11,"try_into","","",2504,[[],["result",4]]],[11,"type_id","","",2504,[[],["typeid",3]]],[11,"from","","",2506,[[]]],[11,"borrow","","",2506,[[]]],[11,"borrow_mut","","",2506,[[]]],[11,"try_from","","",2506,[[],["result",4]]],[11,"into","","",2506,[[]]],[11,"try_into","","",2506,[[],["result",4]]],[11,"type_id","","",2506,[[],["typeid",3]]],[11,"from","","",2508,[[]]],[11,"borrow","","",2508,[[]]],[11,"borrow_mut","","",2508,[[]]],[11,"try_from","","",2508,[[],["result",4]]],[11,"into","","",2508,[[]]],[11,"try_into","","",2508,[[],["result",4]]],[11,"type_id","","",2508,[[],["typeid",3]]],[11,"from","","",2510,[[]]],[11,"borrow","","",2510,[[]]],[11,"borrow_mut","","",2510,[[]]],[11,"try_from","","",2510,[[],["result",4]]],[11,"into","","",2510,[[]]],[11,"try_into","","",2510,[[],["result",4]]],[11,"type_id","","",2510,[[],["typeid",3]]],[11,"from","","",2512,[[]]],[11,"borrow","","",2512,[[]]],[11,"borrow_mut","","",2512,[[]]],[11,"try_from","","",2512,[[],["result",4]]],[11,"into","","",2512,[[]]],[11,"try_into","","",2512,[[],["result",4]]],[11,"type_id","","",2512,[[],["typeid",3]]],[11,"from","","",2514,[[]]],[11,"borrow","","",2514,[[]]],[11,"borrow_mut","","",2514,[[]]],[11,"try_from","","",2514,[[],["result",4]]],[11,"into","","",2514,[[]]],[11,"try_into","","",2514,[[],["result",4]]],[11,"type_id","","",2514,[[],["typeid",3]]],[11,"from","","",2482,[[]]],[11,"borrow","","",2482,[[]]],[11,"borrow_mut","","",2482,[[]]],[11,"try_from","","",2482,[[],["result",4]]],[11,"into","","",2482,[[]]],[11,"try_into","","",2482,[[],["result",4]]],[11,"type_id","","",2482,[[],["typeid",3]]],[11,"from","","",2483,[[]]],[11,"borrow","","",2483,[[]]],[11,"borrow_mut","","",2483,[[]]],[11,"try_from","","",2483,[[],["result",4]]],[11,"into","","",2483,[[]]],[11,"try_into","","",2483,[[],["result",4]]],[11,"type_id","","",2483,[[],["typeid",3]]],[11,"from","","",2484,[[]]],[11,"borrow","","",2484,[[]]],[11,"borrow_mut","","",2484,[[]]],[11,"try_from","","",2484,[[],["result",4]]],[11,"into","","",2484,[[]]],[11,"try_into","","",2484,[[],["result",4]]],[11,"type_id","","",2484,[[],["typeid",3]]],[11,"from","","",2485,[[]]],[11,"borrow","","",2485,[[]]],[11,"borrow_mut","","",2485,[[]]],[11,"try_from","","",2485,[[],["result",4]]],[11,"into","","",2485,[[]]],[11,"try_into","","",2485,[[],["result",4]]],[11,"type_id","","",2485,[[],["typeid",3]]],[11,"from","","",2486,[[]]],[11,"borrow","","",2486,[[]]],[11,"borrow_mut","","",2486,[[]]],[11,"try_from","","",2486,[[],["result",4]]],[11,"into","","",2486,[[]]],[11,"try_into","","",2486,[[],["result",4]]],[11,"type_id","","",2486,[[],["typeid",3]]],[11,"from","","",2487,[[]]],[11,"borrow","","",2487,[[]]],[11,"borrow_mut","","",2487,[[]]],[11,"try_from","","",2487,[[],["result",4]]],[11,"into","","",2487,[[]]],[11,"try_into","","",2487,[[],["result",4]]],[11,"type_id","","",2487,[[],["typeid",3]]],[11,"from","","",2488,[[]]],[11,"borrow","","",2488,[[]]],[11,"borrow_mut","","",2488,[[]]],[11,"try_from","","",2488,[[],["result",4]]],[11,"into","","",2488,[[]]],[11,"try_into","","",2488,[[],["result",4]]],[11,"type_id","","",2488,[[],["typeid",3]]],[11,"from","","",2489,[[]]],[11,"borrow","","",2489,[[]]],[11,"borrow_mut","","",2489,[[]]],[11,"try_from","","",2489,[[],["result",4]]],[11,"into","","",2489,[[]]],[11,"try_into","","",2489,[[],["result",4]]],[11,"type_id","","",2489,[[],["typeid",3]]],[11,"from","","",2490,[[]]],[11,"borrow","","",2490,[[]]],[11,"borrow_mut","","",2490,[[]]],[11,"try_from","","",2490,[[],["result",4]]],[11,"into","","",2490,[[]]],[11,"try_into","","",2490,[[],["result",4]]],[11,"type_id","","",2490,[[],["typeid",3]]],[11,"from","","",2491,[[]]],[11,"borrow","","",2491,[[]]],[11,"borrow_mut","","",2491,[[]]],[11,"try_from","","",2491,[[],["result",4]]],[11,"into","","",2491,[[]]],[11,"try_into","","",2491,[[],["result",4]]],[11,"type_id","","",2491,[[],["typeid",3]]],[11,"from","","",2492,[[]]],[11,"borrow","","",2492,[[]]],[11,"borrow_mut","","",2492,[[]]],[11,"try_from","","",2492,[[],["result",4]]],[11,"into","","",2492,[[]]],[11,"try_into","","",2492,[[],["result",4]]],[11,"type_id","","",2492,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::nister","",2527,[[]]],[11,"borrow","","",2527,[[]]],[11,"borrow_mut","","",2527,[[]]],[11,"try_from","","",2527,[[],["result",4]]],[11,"into","","",2527,[[]]],[11,"try_into","","",2527,[[],["result",4]]],[11,"type_id","","",2527,[[],["typeid",3]]],[11,"from","","",2529,[[]]],[11,"borrow","","",2529,[[]]],[11,"borrow_mut","","",2529,[[]]],[11,"try_from","","",2529,[[],["result",4]]],[11,"into","","",2529,[[]]],[11,"try_into","","",2529,[[],["result",4]]],[11,"type_id","","",2529,[[],["typeid",3]]],[11,"from","","",2531,[[]]],[11,"borrow","","",2531,[[]]],[11,"borrow_mut","","",2531,[[]]],[11,"try_from","","",2531,[[],["result",4]]],[11,"into","","",2531,[[]]],[11,"try_into","","",2531,[[],["result",4]]],[11,"type_id","","",2531,[[],["typeid",3]]],[11,"from","","",2533,[[]]],[11,"borrow","","",2533,[[]]],[11,"borrow_mut","","",2533,[[]]],[11,"try_from","","",2533,[[],["result",4]]],[11,"into","","",2533,[[]]],[11,"try_into","","",2533,[[],["result",4]]],[11,"type_id","","",2533,[[],["typeid",3]]],[11,"from","","",2535,[[]]],[11,"borrow","","",2535,[[]]],[11,"borrow_mut","","",2535,[[]]],[11,"try_from","","",2535,[[],["result",4]]],[11,"into","","",2535,[[]]],[11,"try_into","","",2535,[[],["result",4]]],[11,"type_id","","",2535,[[],["typeid",3]]],[11,"from","","",2537,[[]]],[11,"borrow","","",2537,[[]]],[11,"borrow_mut","","",2537,[[]]],[11,"try_from","","",2537,[[],["result",4]]],[11,"into","","",2537,[[]]],[11,"try_into","","",2537,[[],["result",4]]],[11,"type_id","","",2537,[[],["typeid",3]]],[11,"from","","",2539,[[]]],[11,"borrow","","",2539,[[]]],[11,"borrow_mut","","",2539,[[]]],[11,"try_from","","",2539,[[],["result",4]]],[11,"into","","",2539,[[]]],[11,"try_into","","",2539,[[],["result",4]]],[11,"type_id","","",2539,[[],["typeid",3]]],[11,"from","","",2541,[[]]],[11,"borrow","","",2541,[[]]],[11,"borrow_mut","","",2541,[[]]],[11,"try_from","","",2541,[[],["result",4]]],[11,"into","","",2541,[[]]],[11,"try_into","","",2541,[[],["result",4]]],[11,"type_id","","",2541,[[],["typeid",3]]],[11,"from","","",2543,[[]]],[11,"borrow","","",2543,[[]]],[11,"borrow_mut","","",2543,[[]]],[11,"try_from","","",2543,[[],["result",4]]],[11,"into","","",2543,[[]]],[11,"try_into","","",2543,[[],["result",4]]],[11,"type_id","","",2543,[[],["typeid",3]]],[11,"from","","",2517,[[]]],[11,"borrow","","",2517,[[]]],[11,"borrow_mut","","",2517,[[]]],[11,"try_from","","",2517,[[],["result",4]]],[11,"into","","",2517,[[]]],[11,"try_into","","",2517,[[],["result",4]]],[11,"type_id","","",2517,[[],["typeid",3]]],[11,"from","","",2518,[[]]],[11,"borrow","","",2518,[[]]],[11,"borrow_mut","","",2518,[[]]],[11,"try_from","","",2518,[[],["result",4]]],[11,"into","","",2518,[[]]],[11,"try_into","","",2518,[[],["result",4]]],[11,"type_id","","",2518,[[],["typeid",3]]],[11,"from","","",2519,[[]]],[11,"borrow","","",2519,[[]]],[11,"borrow_mut","","",2519,[[]]],[11,"try_from","","",2519,[[],["result",4]]],[11,"into","","",2519,[[]]],[11,"try_into","","",2519,[[],["result",4]]],[11,"type_id","","",2519,[[],["typeid",3]]],[11,"from","","",2520,[[]]],[11,"borrow","","",2520,[[]]],[11,"borrow_mut","","",2520,[[]]],[11,"try_from","","",2520,[[],["result",4]]],[11,"into","","",2520,[[]]],[11,"try_into","","",2520,[[],["result",4]]],[11,"type_id","","",2520,[[],["typeid",3]]],[11,"from","","",2521,[[]]],[11,"borrow","","",2521,[[]]],[11,"borrow_mut","","",2521,[[]]],[11,"try_from","","",2521,[[],["result",4]]],[11,"into","","",2521,[[]]],[11,"try_into","","",2521,[[],["result",4]]],[11,"type_id","","",2521,[[],["typeid",3]]],[11,"from","","",2522,[[]]],[11,"borrow","","",2522,[[]]],[11,"borrow_mut","","",2522,[[]]],[11,"try_from","","",2522,[[],["result",4]]],[11,"into","","",2522,[[]]],[11,"try_into","","",2522,[[],["result",4]]],[11,"type_id","","",2522,[[],["typeid",3]]],[11,"from","","",2523,[[]]],[11,"borrow","","",2523,[[]]],[11,"borrow_mut","","",2523,[[]]],[11,"try_from","","",2523,[[],["result",4]]],[11,"into","","",2523,[[]]],[11,"try_into","","",2523,[[],["result",4]]],[11,"type_id","","",2523,[[],["typeid",3]]],[11,"from","","",2524,[[]]],[11,"borrow","","",2524,[[]]],[11,"borrow_mut","","",2524,[[]]],[11,"try_from","","",2524,[[],["result",4]]],[11,"into","","",2524,[[]]],[11,"try_into","","",2524,[[],["result",4]]],[11,"type_id","","",2524,[[],["typeid",3]]],[11,"from","","",2525,[[]]],[11,"borrow","","",2525,[[]]],[11,"borrow_mut","","",2525,[[]]],[11,"try_from","","",2525,[[],["result",4]]],[11,"into","","",2525,[[]]],[11,"try_into","","",2525,[[],["result",4]]],[11,"type_id","","",2525,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::nister_emmc_mode","",2553,[[]]],[11,"borrow","","",2553,[[]]],[11,"borrow_mut","","",2553,[[]]],[11,"try_from","","",2553,[[],["result",4]]],[11,"into","","",2553,[[]]],[11,"try_into","","",2553,[[],["result",4]]],[11,"type_id","","",2553,[[],["typeid",3]]],[11,"from","","",2555,[[]]],[11,"borrow","","",2555,[[]]],[11,"borrow_mut","","",2555,[[]]],[11,"try_from","","",2555,[[],["result",4]]],[11,"into","","",2555,[[]]],[11,"try_into","","",2555,[[],["result",4]]],[11,"type_id","","",2555,[[],["typeid",3]]],[11,"from","","",2557,[[]]],[11,"borrow","","",2557,[[]]],[11,"borrow_mut","","",2557,[[]]],[11,"try_from","","",2557,[[],["result",4]]],[11,"into","","",2557,[[]]],[11,"try_into","","",2557,[[],["result",4]]],[11,"type_id","","",2557,[[],["typeid",3]]],[11,"from","","",2559,[[]]],[11,"borrow","","",2559,[[]]],[11,"borrow_mut","","",2559,[[]]],[11,"try_from","","",2559,[[],["result",4]]],[11,"into","","",2559,[[]]],[11,"try_into","","",2559,[[],["result",4]]],[11,"type_id","","",2559,[[],["typeid",3]]],[11,"from","","",2561,[[]]],[11,"borrow","","",2561,[[]]],[11,"borrow_mut","","",2561,[[]]],[11,"try_from","","",2561,[[],["result",4]]],[11,"into","","",2561,[[]]],[11,"try_into","","",2561,[[],["result",4]]],[11,"type_id","","",2561,[[],["typeid",3]]],[11,"from","","",2563,[[]]],[11,"borrow","","",2563,[[]]],[11,"borrow_mut","","",2563,[[]]],[11,"try_from","","",2563,[[],["result",4]]],[11,"into","","",2563,[[]]],[11,"try_into","","",2563,[[],["result",4]]],[11,"type_id","","",2563,[[],["typeid",3]]],[11,"from","","",2564,[[]]],[11,"borrow","","",2564,[[]]],[11,"borrow_mut","","",2564,[[]]],[11,"try_from","","",2564,[[],["result",4]]],[11,"into","","",2564,[[]]],[11,"try_into","","",2564,[[],["result",4]]],[11,"type_id","","",2564,[[],["typeid",3]]],[11,"from","","",2546,[[]]],[11,"borrow","","",2546,[[]]],[11,"borrow_mut","","",2546,[[]]],[11,"try_from","","",2546,[[],["result",4]]],[11,"into","","",2546,[[]]],[11,"try_into","","",2546,[[],["result",4]]],[11,"type_id","","",2546,[[],["typeid",3]]],[11,"from","","",2547,[[]]],[11,"borrow","","",2547,[[]]],[11,"borrow_mut","","",2547,[[]]],[11,"try_from","","",2547,[[],["result",4]]],[11,"into","","",2547,[[]]],[11,"try_into","","",2547,[[],["result",4]]],[11,"type_id","","",2547,[[],["typeid",3]]],[11,"from","","",2548,[[]]],[11,"borrow","","",2548,[[]]],[11,"borrow_mut","","",2548,[[]]],[11,"try_from","","",2548,[[],["result",4]]],[11,"into","","",2548,[[]]],[11,"try_into","","",2548,[[],["result",4]]],[11,"type_id","","",2548,[[],["typeid",3]]],[11,"from","","",2549,[[]]],[11,"borrow","","",2549,[[]]],[11,"borrow_mut","","",2549,[[]]],[11,"try_from","","",2549,[[],["result",4]]],[11,"into","","",2549,[[]]],[11,"try_into","","",2549,[[],["result",4]]],[11,"type_id","","",2549,[[],["typeid",3]]],[11,"from","","",2550,[[]]],[11,"borrow","","",2550,[[]]],[11,"borrow_mut","","",2550,[[]]],[11,"try_from","","",2550,[[],["result",4]]],[11,"into","","",2550,[[]]],[11,"try_into","","",2550,[[],["result",4]]],[11,"type_id","","",2550,[[],["typeid",3]]],[11,"from","","",2551,[[]]],[11,"borrow","","",2551,[[]]],[11,"borrow_mut","","",2551,[[]]],[11,"try_from","","",2551,[[],["result",4]]],[11,"into","","",2551,[[]]],[11,"try_into","","",2551,[[],["result",4]]],[11,"type_id","","",2551,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::eister","",2578,[[]]],[11,"borrow","","",2578,[[]]],[11,"borrow_mut","","",2578,[[]]],[11,"try_from","","",2578,[[],["result",4]]],[11,"into","","",2578,[[]]],[11,"try_into","","",2578,[[],["result",4]]],[11,"type_id","","",2578,[[],["typeid",3]]],[11,"from","","",2580,[[]]],[11,"borrow","","",2580,[[]]],[11,"borrow_mut","","",2580,[[]]],[11,"try_from","","",2580,[[],["result",4]]],[11,"into","","",2580,[[]]],[11,"try_into","","",2580,[[],["result",4]]],[11,"type_id","","",2580,[[],["typeid",3]]],[11,"from","","",2582,[[]]],[11,"borrow","","",2582,[[]]],[11,"borrow_mut","","",2582,[[]]],[11,"try_from","","",2582,[[],["result",4]]],[11,"into","","",2582,[[]]],[11,"try_into","","",2582,[[],["result",4]]],[11,"type_id","","",2582,[[],["typeid",3]]],[11,"from","","",2584,[[]]],[11,"borrow","","",2584,[[]]],[11,"borrow_mut","","",2584,[[]]],[11,"try_from","","",2584,[[],["result",4]]],[11,"into","","",2584,[[]]],[11,"try_into","","",2584,[[],["result",4]]],[11,"type_id","","",2584,[[],["typeid",3]]],[11,"from","","",2586,[[]]],[11,"borrow","","",2586,[[]]],[11,"borrow_mut","","",2586,[[]]],[11,"try_from","","",2586,[[],["result",4]]],[11,"into","","",2586,[[]]],[11,"try_into","","",2586,[[],["result",4]]],[11,"type_id","","",2586,[[],["typeid",3]]],[11,"from","","",2588,[[]]],[11,"borrow","","",2588,[[]]],[11,"borrow_mut","","",2588,[[]]],[11,"try_from","","",2588,[[],["result",4]]],[11,"into","","",2588,[[]]],[11,"try_into","","",2588,[[],["result",4]]],[11,"type_id","","",2588,[[],["typeid",3]]],[11,"from","","",2590,[[]]],[11,"borrow","","",2590,[[]]],[11,"borrow_mut","","",2590,[[]]],[11,"try_from","","",2590,[[],["result",4]]],[11,"into","","",2590,[[]]],[11,"try_into","","",2590,[[],["result",4]]],[11,"type_id","","",2590,[[],["typeid",3]]],[11,"from","","",2592,[[]]],[11,"borrow","","",2592,[[]]],[11,"borrow_mut","","",2592,[[]]],[11,"try_from","","",2592,[[],["result",4]]],[11,"into","","",2592,[[]]],[11,"try_into","","",2592,[[],["result",4]]],[11,"type_id","","",2592,[[],["typeid",3]]],[11,"from","","",2594,[[]]],[11,"borrow","","",2594,[[]]],[11,"borrow_mut","","",2594,[[]]],[11,"try_from","","",2594,[[],["result",4]]],[11,"into","","",2594,[[]]],[11,"try_into","","",2594,[[],["result",4]]],[11,"type_id","","",2594,[[],["typeid",3]]],[11,"from","","",2596,[[]]],[11,"borrow","","",2596,[[]]],[11,"borrow_mut","","",2596,[[]]],[11,"try_from","","",2596,[[],["result",4]]],[11,"into","","",2596,[[]]],[11,"try_into","","",2596,[[],["result",4]]],[11,"type_id","","",2596,[[],["typeid",3]]],[11,"from","","",2567,[[]]],[11,"borrow","","",2567,[[]]],[11,"borrow_mut","","",2567,[[]]],[11,"try_from","","",2567,[[],["result",4]]],[11,"into","","",2567,[[]]],[11,"try_into","","",2567,[[],["result",4]]],[11,"type_id","","",2567,[[],["typeid",3]]],[11,"from","","",2568,[[]]],[11,"borrow","","",2568,[[]]],[11,"borrow_mut","","",2568,[[]]],[11,"try_from","","",2568,[[],["result",4]]],[11,"into","","",2568,[[]]],[11,"try_into","","",2568,[[],["result",4]]],[11,"type_id","","",2568,[[],["typeid",3]]],[11,"from","","",2569,[[]]],[11,"borrow","","",2569,[[]]],[11,"borrow_mut","","",2569,[[]]],[11,"try_from","","",2569,[[],["result",4]]],[11,"into","","",2569,[[]]],[11,"try_into","","",2569,[[],["result",4]]],[11,"type_id","","",2569,[[],["typeid",3]]],[11,"from","","",2570,[[]]],[11,"borrow","","",2570,[[]]],[11,"borrow_mut","","",2570,[[]]],[11,"try_from","","",2570,[[],["result",4]]],[11,"into","","",2570,[[]]],[11,"try_into","","",2570,[[],["result",4]]],[11,"type_id","","",2570,[[],["typeid",3]]],[11,"from","","",2571,[[]]],[11,"borrow","","",2571,[[]]],[11,"borrow_mut","","",2571,[[]]],[11,"try_from","","",2571,[[],["result",4]]],[11,"into","","",2571,[[]]],[11,"try_into","","",2571,[[],["result",4]]],[11,"type_id","","",2571,[[],["typeid",3]]],[11,"from","","",2572,[[]]],[11,"borrow","","",2572,[[]]],[11,"borrow_mut","","",2572,[[]]],[11,"try_from","","",2572,[[],["result",4]]],[11,"into","","",2572,[[]]],[11,"try_into","","",2572,[[],["result",4]]],[11,"type_id","","",2572,[[],["typeid",3]]],[11,"from","","",2573,[[]]],[11,"borrow","","",2573,[[]]],[11,"borrow_mut","","",2573,[[]]],[11,"try_from","","",2573,[[],["result",4]]],[11,"into","","",2573,[[]]],[11,"try_into","","",2573,[[],["result",4]]],[11,"type_id","","",2573,[[],["typeid",3]]],[11,"from","","",2574,[[]]],[11,"borrow","","",2574,[[]]],[11,"borrow_mut","","",2574,[[]]],[11,"try_from","","",2574,[[],["result",4]]],[11,"into","","",2574,[[]]],[11,"try_into","","",2574,[[],["result",4]]],[11,"type_id","","",2574,[[],["typeid",3]]],[11,"from","","",2575,[[]]],[11,"borrow","","",2575,[[]]],[11,"borrow_mut","","",2575,[[]]],[11,"try_from","","",2575,[[],["result",4]]],[11,"into","","",2575,[[]]],[11,"try_into","","",2575,[[],["result",4]]],[11,"type_id","","",2575,[[],["typeid",3]]],[11,"from","","",2576,[[]]],[11,"borrow","","",2576,[[]]],[11,"borrow_mut","","",2576,[[]]],[11,"try_from","","",2576,[[],["result",4]]],[11,"into","","",2576,[[]]],[11,"try_into","","",2576,[[],["result",4]]],[11,"type_id","","",2576,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::eister_emmc_mode","",2610,[[]]],[11,"borrow","","",2610,[[]]],[11,"borrow_mut","","",2610,[[]]],[11,"try_from","","",2610,[[],["result",4]]],[11,"into","","",2610,[[]]],[11,"try_into","","",2610,[[],["result",4]]],[11,"type_id","","",2610,[[],["typeid",3]]],[11,"from","","",2612,[[]]],[11,"borrow","","",2612,[[]]],[11,"borrow_mut","","",2612,[[]]],[11,"try_from","","",2612,[[],["result",4]]],[11,"into","","",2612,[[]]],[11,"try_into","","",2612,[[],["result",4]]],[11,"type_id","","",2612,[[],["typeid",3]]],[11,"from","","",2614,[[]]],[11,"borrow","","",2614,[[]]],[11,"borrow_mut","","",2614,[[]]],[11,"try_from","","",2614,[[],["result",4]]],[11,"into","","",2614,[[]]],[11,"try_into","","",2614,[[],["result",4]]],[11,"type_id","","",2614,[[],["typeid",3]]],[11,"from","","",2616,[[]]],[11,"borrow","","",2616,[[]]],[11,"borrow_mut","","",2616,[[]]],[11,"try_from","","",2616,[[],["result",4]]],[11,"into","","",2616,[[]]],[11,"try_into","","",2616,[[],["result",4]]],[11,"type_id","","",2616,[[],["typeid",3]]],[11,"from","","",2618,[[]]],[11,"borrow","","",2618,[[]]],[11,"borrow_mut","","",2618,[[]]],[11,"try_from","","",2618,[[],["result",4]]],[11,"into","","",2618,[[]]],[11,"try_into","","",2618,[[],["result",4]]],[11,"type_id","","",2618,[[],["typeid",3]]],[11,"from","","",2620,[[]]],[11,"borrow","","",2620,[[]]],[11,"borrow_mut","","",2620,[[]]],[11,"try_from","","",2620,[[],["result",4]]],[11,"into","","",2620,[[]]],[11,"try_into","","",2620,[[],["result",4]]],[11,"type_id","","",2620,[[],["typeid",3]]],[11,"from","","",2622,[[]]],[11,"borrow","","",2622,[[]]],[11,"borrow_mut","","",2622,[[]]],[11,"try_from","","",2622,[[],["result",4]]],[11,"into","","",2622,[[]]],[11,"try_into","","",2622,[[],["result",4]]],[11,"type_id","","",2622,[[],["typeid",3]]],[11,"from","","",2624,[[]]],[11,"borrow","","",2624,[[]]],[11,"borrow_mut","","",2624,[[]]],[11,"try_from","","",2624,[[],["result",4]]],[11,"into","","",2624,[[]]],[11,"try_into","","",2624,[[],["result",4]]],[11,"type_id","","",2624,[[],["typeid",3]]],[11,"from","","",2626,[[]]],[11,"borrow","","",2626,[[]]],[11,"borrow_mut","","",2626,[[]]],[11,"try_from","","",2626,[[],["result",4]]],[11,"into","","",2626,[[]]],[11,"try_into","","",2626,[[],["result",4]]],[11,"type_id","","",2626,[[],["typeid",3]]],[11,"from","","",2628,[[]]],[11,"borrow","","",2628,[[]]],[11,"borrow_mut","","",2628,[[]]],[11,"try_from","","",2628,[[],["result",4]]],[11,"into","","",2628,[[]]],[11,"try_into","","",2628,[[],["result",4]]],[11,"type_id","","",2628,[[],["typeid",3]]],[11,"from","","",2629,[[]]],[11,"borrow","","",2629,[[]]],[11,"borrow_mut","","",2629,[[]]],[11,"try_from","","",2629,[[],["result",4]]],[11,"into","","",2629,[[]]],[11,"try_into","","",2629,[[],["result",4]]],[11,"type_id","","",2629,[[],["typeid",3]]],[11,"from","","",2599,[[]]],[11,"borrow","","",2599,[[]]],[11,"borrow_mut","","",2599,[[]]],[11,"try_from","","",2599,[[],["result",4]]],[11,"into","","",2599,[[]]],[11,"try_into","","",2599,[[],["result",4]]],[11,"type_id","","",2599,[[],["typeid",3]]],[11,"from","","",2600,[[]]],[11,"borrow","","",2600,[[]]],[11,"borrow_mut","","",2600,[[]]],[11,"try_from","","",2600,[[],["result",4]]],[11,"into","","",2600,[[]]],[11,"try_into","","",2600,[[],["result",4]]],[11,"type_id","","",2600,[[],["typeid",3]]],[11,"from","","",2601,[[]]],[11,"borrow","","",2601,[[]]],[11,"borrow_mut","","",2601,[[]]],[11,"try_from","","",2601,[[],["result",4]]],[11,"into","","",2601,[[]]],[11,"try_into","","",2601,[[],["result",4]]],[11,"type_id","","",2601,[[],["typeid",3]]],[11,"from","","",2602,[[]]],[11,"borrow","","",2602,[[]]],[11,"borrow_mut","","",2602,[[]]],[11,"try_from","","",2602,[[],["result",4]]],[11,"into","","",2602,[[]]],[11,"try_into","","",2602,[[],["result",4]]],[11,"type_id","","",2602,[[],["typeid",3]]],[11,"from","","",2603,[[]]],[11,"borrow","","",2603,[[]]],[11,"borrow_mut","","",2603,[[]]],[11,"try_from","","",2603,[[],["result",4]]],[11,"into","","",2603,[[]]],[11,"try_into","","",2603,[[],["result",4]]],[11,"type_id","","",2603,[[],["typeid",3]]],[11,"from","","",2604,[[]]],[11,"borrow","","",2604,[[]]],[11,"borrow_mut","","",2604,[[]]],[11,"try_from","","",2604,[[],["result",4]]],[11,"into","","",2604,[[]]],[11,"try_into","","",2604,[[],["result",4]]],[11,"type_id","","",2604,[[],["typeid",3]]],[11,"from","","",2605,[[]]],[11,"borrow","","",2605,[[]]],[11,"borrow_mut","","",2605,[[]]],[11,"try_from","","",2605,[[],["result",4]]],[11,"into","","",2605,[[]]],[11,"try_into","","",2605,[[],["result",4]]],[11,"type_id","","",2605,[[],["typeid",3]]],[11,"from","","",2606,[[]]],[11,"borrow","","",2606,[[]]],[11,"borrow_mut","","",2606,[[]]],[11,"try_from","","",2606,[[],["result",4]]],[11,"into","","",2606,[[]]],[11,"try_into","","",2606,[[],["result",4]]],[11,"type_id","","",2606,[[],["typeid",3]]],[11,"from","","",2607,[[]]],[11,"borrow","","",2607,[[]]],[11,"borrow_mut","","",2607,[[]]],[11,"try_from","","",2607,[[],["result",4]]],[11,"into","","",2607,[[]]],[11,"try_into","","",2607,[[],["result",4]]],[11,"type_id","","",2607,[[],["typeid",3]]],[11,"from","","",2608,[[]]],[11,"borrow","","",2608,[[]]],[11,"borrow_mut","","",2608,[[]]],[11,"try_from","","",2608,[[],["result",4]]],[11,"into","","",2608,[[]]],[11,"try_into","","",2608,[[],["result",4]]],[11,"type_id","","",2608,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::nisier","",2642,[[]]],[11,"borrow","","",2642,[[]]],[11,"borrow_mut","","",2642,[[]]],[11,"try_from","","",2642,[[],["result",4]]],[11,"into","","",2642,[[]]],[11,"try_into","","",2642,[[],["result",4]]],[11,"type_id","","",2642,[[],["typeid",3]]],[11,"from","","",2644,[[]]],[11,"borrow","","",2644,[[]]],[11,"borrow_mut","","",2644,[[]]],[11,"try_from","","",2644,[[],["result",4]]],[11,"into","","",2644,[[]]],[11,"try_into","","",2644,[[],["result",4]]],[11,"type_id","","",2644,[[],["typeid",3]]],[11,"from","","",2646,[[]]],[11,"borrow","","",2646,[[]]],[11,"borrow_mut","","",2646,[[]]],[11,"try_from","","",2646,[[],["result",4]]],[11,"into","","",2646,[[]]],[11,"try_into","","",2646,[[],["result",4]]],[11,"type_id","","",2646,[[],["typeid",3]]],[11,"from","","",2648,[[]]],[11,"borrow","","",2648,[[]]],[11,"borrow_mut","","",2648,[[]]],[11,"try_from","","",2648,[[],["result",4]]],[11,"into","","",2648,[[]]],[11,"try_into","","",2648,[[],["result",4]]],[11,"type_id","","",2648,[[],["typeid",3]]],[11,"from","","",2650,[[]]],[11,"borrow","","",2650,[[]]],[11,"borrow_mut","","",2650,[[]]],[11,"try_from","","",2650,[[],["result",4]]],[11,"into","","",2650,[[]]],[11,"try_into","","",2650,[[],["result",4]]],[11,"type_id","","",2650,[[],["typeid",3]]],[11,"from","","",2652,[[]]],[11,"borrow","","",2652,[[]]],[11,"borrow_mut","","",2652,[[]]],[11,"try_from","","",2652,[[],["result",4]]],[11,"into","","",2652,[[]]],[11,"try_into","","",2652,[[],["result",4]]],[11,"type_id","","",2652,[[],["typeid",3]]],[11,"from","","",2654,[[]]],[11,"borrow","","",2654,[[]]],[11,"borrow_mut","","",2654,[[]]],[11,"try_from","","",2654,[[],["result",4]]],[11,"into","","",2654,[[]]],[11,"try_into","","",2654,[[],["result",4]]],[11,"type_id","","",2654,[[],["typeid",3]]],[11,"from","","",2656,[[]]],[11,"borrow","","",2656,[[]]],[11,"borrow_mut","","",2656,[[]]],[11,"try_from","","",2656,[[],["result",4]]],[11,"into","","",2656,[[]]],[11,"try_into","","",2656,[[],["result",4]]],[11,"type_id","","",2656,[[],["typeid",3]]],[11,"from","","",2658,[[]]],[11,"borrow","","",2658,[[]]],[11,"borrow_mut","","",2658,[[]]],[11,"try_from","","",2658,[[],["result",4]]],[11,"into","","",2658,[[]]],[11,"try_into","","",2658,[[],["result",4]]],[11,"type_id","","",2658,[[],["typeid",3]]],[11,"from","","",2632,[[]]],[11,"borrow","","",2632,[[]]],[11,"borrow_mut","","",2632,[[]]],[11,"try_from","","",2632,[[],["result",4]]],[11,"into","","",2632,[[]]],[11,"try_into","","",2632,[[],["result",4]]],[11,"type_id","","",2632,[[],["typeid",3]]],[11,"from","","",2633,[[]]],[11,"borrow","","",2633,[[]]],[11,"borrow_mut","","",2633,[[]]],[11,"try_from","","",2633,[[],["result",4]]],[11,"into","","",2633,[[]]],[11,"try_into","","",2633,[[],["result",4]]],[11,"type_id","","",2633,[[],["typeid",3]]],[11,"from","","",2634,[[]]],[11,"borrow","","",2634,[[]]],[11,"borrow_mut","","",2634,[[]]],[11,"try_from","","",2634,[[],["result",4]]],[11,"into","","",2634,[[]]],[11,"try_into","","",2634,[[],["result",4]]],[11,"type_id","","",2634,[[],["typeid",3]]],[11,"from","","",2635,[[]]],[11,"borrow","","",2635,[[]]],[11,"borrow_mut","","",2635,[[]]],[11,"try_from","","",2635,[[],["result",4]]],[11,"into","","",2635,[[]]],[11,"try_into","","",2635,[[],["result",4]]],[11,"type_id","","",2635,[[],["typeid",3]]],[11,"from","","",2636,[[]]],[11,"borrow","","",2636,[[]]],[11,"borrow_mut","","",2636,[[]]],[11,"try_from","","",2636,[[],["result",4]]],[11,"into","","",2636,[[]]],[11,"try_into","","",2636,[[],["result",4]]],[11,"type_id","","",2636,[[],["typeid",3]]],[11,"from","","",2637,[[]]],[11,"borrow","","",2637,[[]]],[11,"borrow_mut","","",2637,[[]]],[11,"try_from","","",2637,[[],["result",4]]],[11,"into","","",2637,[[]]],[11,"try_into","","",2637,[[],["result",4]]],[11,"type_id","","",2637,[[],["typeid",3]]],[11,"from","","",2638,[[]]],[11,"borrow","","",2638,[[]]],[11,"borrow_mut","","",2638,[[]]],[11,"try_from","","",2638,[[],["result",4]]],[11,"into","","",2638,[[]]],[11,"try_into","","",2638,[[],["result",4]]],[11,"type_id","","",2638,[[],["typeid",3]]],[11,"from","","",2639,[[]]],[11,"borrow","","",2639,[[]]],[11,"borrow_mut","","",2639,[[]]],[11,"try_from","","",2639,[[],["result",4]]],[11,"into","","",2639,[[]]],[11,"try_into","","",2639,[[],["result",4]]],[11,"type_id","","",2639,[[],["typeid",3]]],[11,"from","","",2640,[[]]],[11,"borrow","","",2640,[[]]],[11,"borrow_mut","","",2640,[[]]],[11,"try_from","","",2640,[[],["result",4]]],[11,"into","","",2640,[[]]],[11,"try_into","","",2640,[[],["result",4]]],[11,"type_id","","",2640,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::nisier_emmc_mode","",2668,[[]]],[11,"borrow","","",2668,[[]]],[11,"borrow_mut","","",2668,[[]]],[11,"try_from","","",2668,[[],["result",4]]],[11,"into","","",2668,[[]]],[11,"try_into","","",2668,[[],["result",4]]],[11,"type_id","","",2668,[[],["typeid",3]]],[11,"from","","",2670,[[]]],[11,"borrow","","",2670,[[]]],[11,"borrow_mut","","",2670,[[]]],[11,"try_from","","",2670,[[],["result",4]]],[11,"into","","",2670,[[]]],[11,"try_into","","",2670,[[],["result",4]]],[11,"type_id","","",2670,[[],["typeid",3]]],[11,"from","","",2672,[[]]],[11,"borrow","","",2672,[[]]],[11,"borrow_mut","","",2672,[[]]],[11,"try_from","","",2672,[[],["result",4]]],[11,"into","","",2672,[[]]],[11,"try_into","","",2672,[[],["result",4]]],[11,"type_id","","",2672,[[],["typeid",3]]],[11,"from","","",2674,[[]]],[11,"borrow","","",2674,[[]]],[11,"borrow_mut","","",2674,[[]]],[11,"try_from","","",2674,[[],["result",4]]],[11,"into","","",2674,[[]]],[11,"try_into","","",2674,[[],["result",4]]],[11,"type_id","","",2674,[[],["typeid",3]]],[11,"from","","",2676,[[]]],[11,"borrow","","",2676,[[]]],[11,"borrow_mut","","",2676,[[]]],[11,"try_from","","",2676,[[],["result",4]]],[11,"into","","",2676,[[]]],[11,"try_into","","",2676,[[],["result",4]]],[11,"type_id","","",2676,[[],["typeid",3]]],[11,"from","","",2678,[[]]],[11,"borrow","","",2678,[[]]],[11,"borrow_mut","","",2678,[[]]],[11,"try_from","","",2678,[[],["result",4]]],[11,"into","","",2678,[[]]],[11,"try_into","","",2678,[[],["result",4]]],[11,"type_id","","",2678,[[],["typeid",3]]],[11,"from","","",2679,[[]]],[11,"borrow","","",2679,[[]]],[11,"borrow_mut","","",2679,[[]]],[11,"try_from","","",2679,[[],["result",4]]],[11,"into","","",2679,[[]]],[11,"try_into","","",2679,[[],["result",4]]],[11,"type_id","","",2679,[[],["typeid",3]]],[11,"from","","",2661,[[]]],[11,"borrow","","",2661,[[]]],[11,"borrow_mut","","",2661,[[]]],[11,"try_from","","",2661,[[],["result",4]]],[11,"into","","",2661,[[]]],[11,"try_into","","",2661,[[],["result",4]]],[11,"type_id","","",2661,[[],["typeid",3]]],[11,"from","","",2662,[[]]],[11,"borrow","","",2662,[[]]],[11,"borrow_mut","","",2662,[[]]],[11,"try_from","","",2662,[[],["result",4]]],[11,"into","","",2662,[[]]],[11,"try_into","","",2662,[[],["result",4]]],[11,"type_id","","",2662,[[],["typeid",3]]],[11,"from","","",2663,[[]]],[11,"borrow","","",2663,[[]]],[11,"borrow_mut","","",2663,[[]]],[11,"try_from","","",2663,[[],["result",4]]],[11,"into","","",2663,[[]]],[11,"try_into","","",2663,[[],["result",4]]],[11,"type_id","","",2663,[[],["typeid",3]]],[11,"from","","",2664,[[]]],[11,"borrow","","",2664,[[]]],[11,"borrow_mut","","",2664,[[]]],[11,"try_from","","",2664,[[],["result",4]]],[11,"into","","",2664,[[]]],[11,"try_into","","",2664,[[],["result",4]]],[11,"type_id","","",2664,[[],["typeid",3]]],[11,"from","","",2665,[[]]],[11,"borrow","","",2665,[[]]],[11,"borrow_mut","","",2665,[[]]],[11,"try_from","","",2665,[[],["result",4]]],[11,"into","","",2665,[[]]],[11,"try_into","","",2665,[[],["result",4]]],[11,"type_id","","",2665,[[],["typeid",3]]],[11,"from","","",2666,[[]]],[11,"borrow","","",2666,[[]]],[11,"borrow_mut","","",2666,[[]]],[11,"try_from","","",2666,[[],["result",4]]],[11,"into","","",2666,[[]]],[11,"try_into","","",2666,[[],["result",4]]],[11,"type_id","","",2666,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::eisier","",2693,[[]]],[11,"borrow","","",2693,[[]]],[11,"borrow_mut","","",2693,[[]]],[11,"try_from","","",2693,[[],["result",4]]],[11,"into","","",2693,[[]]],[11,"try_into","","",2693,[[],["result",4]]],[11,"type_id","","",2693,[[],["typeid",3]]],[11,"from","","",2695,[[]]],[11,"borrow","","",2695,[[]]],[11,"borrow_mut","","",2695,[[]]],[11,"try_from","","",2695,[[],["result",4]]],[11,"into","","",2695,[[]]],[11,"try_into","","",2695,[[],["result",4]]],[11,"type_id","","",2695,[[],["typeid",3]]],[11,"from","","",2697,[[]]],[11,"borrow","","",2697,[[]]],[11,"borrow_mut","","",2697,[[]]],[11,"try_from","","",2697,[[],["result",4]]],[11,"into","","",2697,[[]]],[11,"try_into","","",2697,[[],["result",4]]],[11,"type_id","","",2697,[[],["typeid",3]]],[11,"from","","",2699,[[]]],[11,"borrow","","",2699,[[]]],[11,"borrow_mut","","",2699,[[]]],[11,"try_from","","",2699,[[],["result",4]]],[11,"into","","",2699,[[]]],[11,"try_into","","",2699,[[],["result",4]]],[11,"type_id","","",2699,[[],["typeid",3]]],[11,"from","","",2701,[[]]],[11,"borrow","","",2701,[[]]],[11,"borrow_mut","","",2701,[[]]],[11,"try_from","","",2701,[[],["result",4]]],[11,"into","","",2701,[[]]],[11,"try_into","","",2701,[[],["result",4]]],[11,"type_id","","",2701,[[],["typeid",3]]],[11,"from","","",2703,[[]]],[11,"borrow","","",2703,[[]]],[11,"borrow_mut","","",2703,[[]]],[11,"try_from","","",2703,[[],["result",4]]],[11,"into","","",2703,[[]]],[11,"try_into","","",2703,[[],["result",4]]],[11,"type_id","","",2703,[[],["typeid",3]]],[11,"from","","",2705,[[]]],[11,"borrow","","",2705,[[]]],[11,"borrow_mut","","",2705,[[]]],[11,"try_from","","",2705,[[],["result",4]]],[11,"into","","",2705,[[]]],[11,"try_into","","",2705,[[],["result",4]]],[11,"type_id","","",2705,[[],["typeid",3]]],[11,"from","","",2707,[[]]],[11,"borrow","","",2707,[[]]],[11,"borrow_mut","","",2707,[[]]],[11,"try_from","","",2707,[[],["result",4]]],[11,"into","","",2707,[[]]],[11,"try_into","","",2707,[[],["result",4]]],[11,"type_id","","",2707,[[],["typeid",3]]],[11,"from","","",2709,[[]]],[11,"borrow","","",2709,[[]]],[11,"borrow_mut","","",2709,[[]]],[11,"try_from","","",2709,[[],["result",4]]],[11,"into","","",2709,[[]]],[11,"try_into","","",2709,[[],["result",4]]],[11,"type_id","","",2709,[[],["typeid",3]]],[11,"from","","",2711,[[]]],[11,"borrow","","",2711,[[]]],[11,"borrow_mut","","",2711,[[]]],[11,"try_from","","",2711,[[],["result",4]]],[11,"into","","",2711,[[]]],[11,"try_into","","",2711,[[],["result",4]]],[11,"type_id","","",2711,[[],["typeid",3]]],[11,"from","","",2682,[[]]],[11,"borrow","","",2682,[[]]],[11,"borrow_mut","","",2682,[[]]],[11,"try_from","","",2682,[[],["result",4]]],[11,"into","","",2682,[[]]],[11,"try_into","","",2682,[[],["result",4]]],[11,"type_id","","",2682,[[],["typeid",3]]],[11,"from","","",2683,[[]]],[11,"borrow","","",2683,[[]]],[11,"borrow_mut","","",2683,[[]]],[11,"try_from","","",2683,[[],["result",4]]],[11,"into","","",2683,[[]]],[11,"try_into","","",2683,[[],["result",4]]],[11,"type_id","","",2683,[[],["typeid",3]]],[11,"from","","",2684,[[]]],[11,"borrow","","",2684,[[]]],[11,"borrow_mut","","",2684,[[]]],[11,"try_from","","",2684,[[],["result",4]]],[11,"into","","",2684,[[]]],[11,"try_into","","",2684,[[],["result",4]]],[11,"type_id","","",2684,[[],["typeid",3]]],[11,"from","","",2685,[[]]],[11,"borrow","","",2685,[[]]],[11,"borrow_mut","","",2685,[[]]],[11,"try_from","","",2685,[[],["result",4]]],[11,"into","","",2685,[[]]],[11,"try_into","","",2685,[[],["result",4]]],[11,"type_id","","",2685,[[],["typeid",3]]],[11,"from","","",2686,[[]]],[11,"borrow","","",2686,[[]]],[11,"borrow_mut","","",2686,[[]]],[11,"try_from","","",2686,[[],["result",4]]],[11,"into","","",2686,[[]]],[11,"try_into","","",2686,[[],["result",4]]],[11,"type_id","","",2686,[[],["typeid",3]]],[11,"from","","",2687,[[]]],[11,"borrow","","",2687,[[]]],[11,"borrow_mut","","",2687,[[]]],[11,"try_from","","",2687,[[],["result",4]]],[11,"into","","",2687,[[]]],[11,"try_into","","",2687,[[],["result",4]]],[11,"type_id","","",2687,[[],["typeid",3]]],[11,"from","","",2688,[[]]],[11,"borrow","","",2688,[[]]],[11,"borrow_mut","","",2688,[[]]],[11,"try_from","","",2688,[[],["result",4]]],[11,"into","","",2688,[[]]],[11,"try_into","","",2688,[[],["result",4]]],[11,"type_id","","",2688,[[],["typeid",3]]],[11,"from","","",2689,[[]]],[11,"borrow","","",2689,[[]]],[11,"borrow_mut","","",2689,[[]]],[11,"try_from","","",2689,[[],["result",4]]],[11,"into","","",2689,[[]]],[11,"try_into","","",2689,[[],["result",4]]],[11,"type_id","","",2689,[[],["typeid",3]]],[11,"from","","",2690,[[]]],[11,"borrow","","",2690,[[]]],[11,"borrow_mut","","",2690,[[]]],[11,"try_from","","",2690,[[],["result",4]]],[11,"into","","",2690,[[]]],[11,"try_into","","",2690,[[],["result",4]]],[11,"type_id","","",2690,[[],["typeid",3]]],[11,"from","","",2691,[[]]],[11,"borrow","","",2691,[[]]],[11,"borrow_mut","","",2691,[[]]],[11,"try_from","","",2691,[[],["result",4]]],[11,"into","","",2691,[[]]],[11,"try_into","","",2691,[[],["result",4]]],[11,"type_id","","",2691,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::eisier_emmc_mode","",2725,[[]]],[11,"borrow","","",2725,[[]]],[11,"borrow_mut","","",2725,[[]]],[11,"try_from","","",2725,[[],["result",4]]],[11,"into","","",2725,[[]]],[11,"try_into","","",2725,[[],["result",4]]],[11,"type_id","","",2725,[[],["typeid",3]]],[11,"from","","",2727,[[]]],[11,"borrow","","",2727,[[]]],[11,"borrow_mut","","",2727,[[]]],[11,"try_from","","",2727,[[],["result",4]]],[11,"into","","",2727,[[]]],[11,"try_into","","",2727,[[],["result",4]]],[11,"type_id","","",2727,[[],["typeid",3]]],[11,"from","","",2729,[[]]],[11,"borrow","","",2729,[[]]],[11,"borrow_mut","","",2729,[[]]],[11,"try_from","","",2729,[[],["result",4]]],[11,"into","","",2729,[[]]],[11,"try_into","","",2729,[[],["result",4]]],[11,"type_id","","",2729,[[],["typeid",3]]],[11,"from","","",2731,[[]]],[11,"borrow","","",2731,[[]]],[11,"borrow_mut","","",2731,[[]]],[11,"try_from","","",2731,[[],["result",4]]],[11,"into","","",2731,[[]]],[11,"try_into","","",2731,[[],["result",4]]],[11,"type_id","","",2731,[[],["typeid",3]]],[11,"from","","",2733,[[]]],[11,"borrow","","",2733,[[]]],[11,"borrow_mut","","",2733,[[]]],[11,"try_from","","",2733,[[],["result",4]]],[11,"into","","",2733,[[]]],[11,"try_into","","",2733,[[],["result",4]]],[11,"type_id","","",2733,[[],["typeid",3]]],[11,"from","","",2735,[[]]],[11,"borrow","","",2735,[[]]],[11,"borrow_mut","","",2735,[[]]],[11,"try_from","","",2735,[[],["result",4]]],[11,"into","","",2735,[[]]],[11,"try_into","","",2735,[[],["result",4]]],[11,"type_id","","",2735,[[],["typeid",3]]],[11,"from","","",2737,[[]]],[11,"borrow","","",2737,[[]]],[11,"borrow_mut","","",2737,[[]]],[11,"try_from","","",2737,[[],["result",4]]],[11,"into","","",2737,[[]]],[11,"try_into","","",2737,[[],["result",4]]],[11,"type_id","","",2737,[[],["typeid",3]]],[11,"from","","",2739,[[]]],[11,"borrow","","",2739,[[]]],[11,"borrow_mut","","",2739,[[]]],[11,"try_from","","",2739,[[],["result",4]]],[11,"into","","",2739,[[]]],[11,"try_into","","",2739,[[],["result",4]]],[11,"type_id","","",2739,[[],["typeid",3]]],[11,"from","","",2741,[[]]],[11,"borrow","","",2741,[[]]],[11,"borrow_mut","","",2741,[[]]],[11,"try_from","","",2741,[[],["result",4]]],[11,"into","","",2741,[[]]],[11,"try_into","","",2741,[[],["result",4]]],[11,"type_id","","",2741,[[],["typeid",3]]],[11,"from","","",2743,[[]]],[11,"borrow","","",2743,[[]]],[11,"borrow_mut","","",2743,[[]]],[11,"try_from","","",2743,[[],["result",4]]],[11,"into","","",2743,[[]]],[11,"try_into","","",2743,[[],["result",4]]],[11,"type_id","","",2743,[[],["typeid",3]]],[11,"from","","",2744,[[]]],[11,"borrow","","",2744,[[]]],[11,"borrow_mut","","",2744,[[]]],[11,"try_from","","",2744,[[],["result",4]]],[11,"into","","",2744,[[]]],[11,"try_into","","",2744,[[],["result",4]]],[11,"type_id","","",2744,[[],["typeid",3]]],[11,"from","","",2714,[[]]],[11,"borrow","","",2714,[[]]],[11,"borrow_mut","","",2714,[[]]],[11,"try_from","","",2714,[[],["result",4]]],[11,"into","","",2714,[[]]],[11,"try_into","","",2714,[[],["result",4]]],[11,"type_id","","",2714,[[],["typeid",3]]],[11,"from","","",2715,[[]]],[11,"borrow","","",2715,[[]]],[11,"borrow_mut","","",2715,[[]]],[11,"try_from","","",2715,[[],["result",4]]],[11,"into","","",2715,[[]]],[11,"try_into","","",2715,[[],["result",4]]],[11,"type_id","","",2715,[[],["typeid",3]]],[11,"from","","",2716,[[]]],[11,"borrow","","",2716,[[]]],[11,"borrow_mut","","",2716,[[]]],[11,"try_from","","",2716,[[],["result",4]]],[11,"into","","",2716,[[]]],[11,"try_into","","",2716,[[],["result",4]]],[11,"type_id","","",2716,[[],["typeid",3]]],[11,"from","","",2717,[[]]],[11,"borrow","","",2717,[[]]],[11,"borrow_mut","","",2717,[[]]],[11,"try_from","","",2717,[[],["result",4]]],[11,"into","","",2717,[[]]],[11,"try_into","","",2717,[[],["result",4]]],[11,"type_id","","",2717,[[],["typeid",3]]],[11,"from","","",2718,[[]]],[11,"borrow","","",2718,[[]]],[11,"borrow_mut","","",2718,[[]]],[11,"try_from","","",2718,[[],["result",4]]],[11,"into","","",2718,[[]]],[11,"try_into","","",2718,[[],["result",4]]],[11,"type_id","","",2718,[[],["typeid",3]]],[11,"from","","",2719,[[]]],[11,"borrow","","",2719,[[]]],[11,"borrow_mut","","",2719,[[]]],[11,"try_from","","",2719,[[],["result",4]]],[11,"into","","",2719,[[]]],[11,"try_into","","",2719,[[],["result",4]]],[11,"type_id","","",2719,[[],["typeid",3]]],[11,"from","","",2720,[[]]],[11,"borrow","","",2720,[[]]],[11,"borrow_mut","","",2720,[[]]],[11,"try_from","","",2720,[[],["result",4]]],[11,"into","","",2720,[[]]],[11,"try_into","","",2720,[[],["result",4]]],[11,"type_id","","",2720,[[],["typeid",3]]],[11,"from","","",2721,[[]]],[11,"borrow","","",2721,[[]]],[11,"borrow_mut","","",2721,[[]]],[11,"try_from","","",2721,[[],["result",4]]],[11,"into","","",2721,[[]]],[11,"try_into","","",2721,[[],["result",4]]],[11,"type_id","","",2721,[[],["typeid",3]]],[11,"from","","",2722,[[]]],[11,"borrow","","",2722,[[]]],[11,"borrow_mut","","",2722,[[]]],[11,"try_from","","",2722,[[],["result",4]]],[11,"into","","",2722,[[]]],[11,"try_into","","",2722,[[],["result",4]]],[11,"type_id","","",2722,[[],["typeid",3]]],[11,"from","","",2723,[[]]],[11,"borrow","","",2723,[[]]],[11,"borrow_mut","","",2723,[[]]],[11,"try_from","","",2723,[[],["result",4]]],[11,"into","","",2723,[[]]],[11,"try_into","","",2723,[[],["result",4]]],[11,"type_id","","",2723,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::acesr","",2747,[[]]],[11,"borrow","","",2747,[[]]],[11,"borrow_mut","","",2747,[[]]],[11,"try_from","","",2747,[[],["result",4]]],[11,"into","","",2747,[[]]],[11,"try_into","","",2747,[[],["result",4]]],[11,"type_id","","",2747,[[],["typeid",3]]],[11,"from","","",2748,[[]]],[11,"borrow","","",2748,[[]]],[11,"borrow_mut","","",2748,[[]]],[11,"try_from","","",2748,[[],["result",4]]],[11,"into","","",2748,[[]]],[11,"try_into","","",2748,[[],["result",4]]],[11,"type_id","","",2748,[[],["typeid",3]]],[11,"from","","",2749,[[]]],[11,"borrow","","",2749,[[]]],[11,"borrow_mut","","",2749,[[]]],[11,"try_from","","",2749,[[],["result",4]]],[11,"into","","",2749,[[]]],[11,"try_into","","",2749,[[],["result",4]]],[11,"type_id","","",2749,[[],["typeid",3]]],[11,"from","","",2750,[[]]],[11,"borrow","","",2750,[[]]],[11,"borrow_mut","","",2750,[[]]],[11,"try_from","","",2750,[[],["result",4]]],[11,"into","","",2750,[[]]],[11,"try_into","","",2750,[[],["result",4]]],[11,"type_id","","",2750,[[],["typeid",3]]],[11,"from","","",2751,[[]]],[11,"borrow","","",2751,[[]]],[11,"borrow_mut","","",2751,[[]]],[11,"try_from","","",2751,[[],["result",4]]],[11,"into","","",2751,[[]]],[11,"try_into","","",2751,[[],["result",4]]],[11,"type_id","","",2751,[[],["typeid",3]]],[11,"from","","",2752,[[]]],[11,"borrow","","",2752,[[]]],[11,"borrow_mut","","",2752,[[]]],[11,"try_from","","",2752,[[],["result",4]]],[11,"into","","",2752,[[]]],[11,"try_into","","",2752,[[],["result",4]]],[11,"type_id","","",2752,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::hc2r","",2768,[[]]],[11,"borrow","","",2768,[[]]],[11,"borrow_mut","","",2768,[[]]],[11,"try_from","","",2768,[[],["result",4]]],[11,"into","","",2768,[[]]],[11,"try_into","","",2768,[[],["result",4]]],[11,"type_id","","",2768,[[],["typeid",3]]],[11,"from","","",2770,[[]]],[11,"borrow","","",2770,[[]]],[11,"borrow_mut","","",2770,[[]]],[11,"try_from","","",2770,[[],["result",4]]],[11,"into","","",2770,[[]]],[11,"try_into","","",2770,[[],["result",4]]],[11,"type_id","","",2770,[[],["typeid",3]]],[11,"from","","",2772,[[]]],[11,"borrow","","",2772,[[]]],[11,"borrow_mut","","",2772,[[]]],[11,"try_from","","",2772,[[],["result",4]]],[11,"into","","",2772,[[]]],[11,"try_into","","",2772,[[],["result",4]]],[11,"type_id","","",2772,[[],["typeid",3]]],[11,"from","","",2774,[[]]],[11,"borrow","","",2774,[[]]],[11,"borrow_mut","","",2774,[[]]],[11,"try_from","","",2774,[[],["result",4]]],[11,"into","","",2774,[[]]],[11,"try_into","","",2774,[[],["result",4]]],[11,"type_id","","",2774,[[],["typeid",3]]],[11,"from","","",2776,[[]]],[11,"borrow","","",2776,[[]]],[11,"borrow_mut","","",2776,[[]]],[11,"try_from","","",2776,[[],["result",4]]],[11,"into","","",2776,[[]]],[11,"try_into","","",2776,[[],["result",4]]],[11,"type_id","","",2776,[[],["typeid",3]]],[11,"from","","",2778,[[]]],[11,"borrow","","",2778,[[]]],[11,"borrow_mut","","",2778,[[]]],[11,"try_from","","",2778,[[],["result",4]]],[11,"into","","",2778,[[]]],[11,"try_into","","",2778,[[],["result",4]]],[11,"type_id","","",2778,[[],["typeid",3]]],[11,"from","","",2780,[[]]],[11,"borrow","","",2780,[[]]],[11,"borrow_mut","","",2780,[[]]],[11,"try_from","","",2780,[[],["result",4]]],[11,"into","","",2780,[[]]],[11,"try_into","","",2780,[[],["result",4]]],[11,"type_id","","",2780,[[],["typeid",3]]],[11,"from","","",2760,[[]]],[11,"borrow","","",2760,[[]]],[11,"borrow_mut","","",2760,[[]]],[11,"try_from","","",2760,[[],["result",4]]],[11,"into","","",2760,[[]]],[11,"try_into","","",2760,[[],["result",4]]],[11,"type_id","","",2760,[[],["typeid",3]]],[11,"from","","",2761,[[]]],[11,"borrow","","",2761,[[]]],[11,"borrow_mut","","",2761,[[]]],[11,"try_from","","",2761,[[],["result",4]]],[11,"into","","",2761,[[]]],[11,"try_into","","",2761,[[],["result",4]]],[11,"type_id","","",2761,[[],["typeid",3]]],[11,"from","","",2762,[[]]],[11,"borrow","","",2762,[[]]],[11,"borrow_mut","","",2762,[[]]],[11,"try_from","","",2762,[[],["result",4]]],[11,"into","","",2762,[[]]],[11,"try_into","","",2762,[[],["result",4]]],[11,"type_id","","",2762,[[],["typeid",3]]],[11,"from","","",2763,[[]]],[11,"borrow","","",2763,[[]]],[11,"borrow_mut","","",2763,[[]]],[11,"try_from","","",2763,[[],["result",4]]],[11,"into","","",2763,[[]]],[11,"try_into","","",2763,[[],["result",4]]],[11,"type_id","","",2763,[[],["typeid",3]]],[11,"from","","",2764,[[]]],[11,"borrow","","",2764,[[]]],[11,"borrow_mut","","",2764,[[]]],[11,"try_from","","",2764,[[],["result",4]]],[11,"into","","",2764,[[]]],[11,"try_into","","",2764,[[],["result",4]]],[11,"type_id","","",2764,[[],["typeid",3]]],[11,"from","","",2765,[[]]],[11,"borrow","","",2765,[[]]],[11,"borrow_mut","","",2765,[[]]],[11,"try_from","","",2765,[[],["result",4]]],[11,"into","","",2765,[[]]],[11,"try_into","","",2765,[[],["result",4]]],[11,"type_id","","",2765,[[],["typeid",3]]],[11,"from","","",2766,[[]]],[11,"borrow","","",2766,[[]]],[11,"borrow_mut","","",2766,[[]]],[11,"try_from","","",2766,[[],["result",4]]],[11,"into","","",2766,[[]]],[11,"try_into","","",2766,[[],["result",4]]],[11,"type_id","","",2766,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::hc2r_emmc_mode","",2789,[[]]],[11,"borrow","","",2789,[[]]],[11,"borrow_mut","","",2789,[[]]],[11,"try_from","","",2789,[[],["result",4]]],[11,"into","","",2789,[[]]],[11,"try_into","","",2789,[[],["result",4]]],[11,"type_id","","",2789,[[],["typeid",3]]],[11,"from","","",2791,[[]]],[11,"borrow","","",2791,[[]]],[11,"borrow_mut","","",2791,[[]]],[11,"try_from","","",2791,[[],["result",4]]],[11,"into","","",2791,[[]]],[11,"try_into","","",2791,[[],["result",4]]],[11,"type_id","","",2791,[[],["typeid",3]]],[11,"from","","",2793,[[]]],[11,"borrow","","",2793,[[]]],[11,"borrow_mut","","",2793,[[]]],[11,"try_from","","",2793,[[],["result",4]]],[11,"into","","",2793,[[]]],[11,"try_into","","",2793,[[],["result",4]]],[11,"type_id","","",2793,[[],["typeid",3]]],[11,"from","","",2795,[[]]],[11,"borrow","","",2795,[[]]],[11,"borrow_mut","","",2795,[[]]],[11,"try_from","","",2795,[[],["result",4]]],[11,"into","","",2795,[[]]],[11,"try_into","","",2795,[[],["result",4]]],[11,"type_id","","",2795,[[],["typeid",3]]],[11,"from","","",2797,[[]]],[11,"borrow","","",2797,[[]]],[11,"borrow_mut","","",2797,[[]]],[11,"try_from","","",2797,[[],["result",4]]],[11,"into","","",2797,[[]]],[11,"try_into","","",2797,[[],["result",4]]],[11,"type_id","","",2797,[[],["typeid",3]]],[11,"from","","",2783,[[]]],[11,"borrow","","",2783,[[]]],[11,"borrow_mut","","",2783,[[]]],[11,"try_from","","",2783,[[],["result",4]]],[11,"into","","",2783,[[]]],[11,"try_into","","",2783,[[],["result",4]]],[11,"type_id","","",2783,[[],["typeid",3]]],[11,"from","","",2784,[[]]],[11,"borrow","","",2784,[[]]],[11,"borrow_mut","","",2784,[[]]],[11,"try_from","","",2784,[[],["result",4]]],[11,"into","","",2784,[[]]],[11,"try_into","","",2784,[[],["result",4]]],[11,"type_id","","",2784,[[],["typeid",3]]],[11,"from","","",2785,[[]]],[11,"borrow","","",2785,[[]]],[11,"borrow_mut","","",2785,[[]]],[11,"try_from","","",2785,[[],["result",4]]],[11,"into","","",2785,[[]]],[11,"try_into","","",2785,[[],["result",4]]],[11,"type_id","","",2785,[[],["typeid",3]]],[11,"from","","",2786,[[]]],[11,"borrow","","",2786,[[]]],[11,"borrow_mut","","",2786,[[]]],[11,"try_from","","",2786,[[],["result",4]]],[11,"into","","",2786,[[]]],[11,"try_into","","",2786,[[],["result",4]]],[11,"type_id","","",2786,[[],["typeid",3]]],[11,"from","","",2787,[[]]],[11,"borrow","","",2787,[[]]],[11,"borrow_mut","","",2787,[[]]],[11,"try_from","","",2787,[[],["result",4]]],[11,"into","","",2787,[[]]],[11,"try_into","","",2787,[[],["result",4]]],[11,"type_id","","",2787,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::ca0r","",2800,[[]]],[11,"borrow","","",2800,[[]]],[11,"borrow_mut","","",2800,[[]]],[11,"try_from","","",2800,[[],["result",4]]],[11,"into","","",2800,[[]]],[11,"try_into","","",2800,[[],["result",4]]],[11,"type_id","","",2800,[[],["typeid",3]]],[11,"from","","",2801,[[]]],[11,"borrow","","",2801,[[]]],[11,"borrow_mut","","",2801,[[]]],[11,"try_from","","",2801,[[],["result",4]]],[11,"into","","",2801,[[]]],[11,"try_into","","",2801,[[],["result",4]]],[11,"type_id","","",2801,[[],["typeid",3]]],[11,"from","","",2802,[[]]],[11,"borrow","","",2802,[[]]],[11,"borrow_mut","","",2802,[[]]],[11,"try_from","","",2802,[[],["result",4]]],[11,"into","","",2802,[[]]],[11,"try_into","","",2802,[[],["result",4]]],[11,"type_id","","",2802,[[],["typeid",3]]],[11,"from","","",2803,[[]]],[11,"borrow","","",2803,[[]]],[11,"borrow_mut","","",2803,[[]]],[11,"try_from","","",2803,[[],["result",4]]],[11,"into","","",2803,[[]]],[11,"try_into","","",2803,[[],["result",4]]],[11,"type_id","","",2803,[[],["typeid",3]]],[11,"from","","",2804,[[]]],[11,"borrow","","",2804,[[]]],[11,"borrow_mut","","",2804,[[]]],[11,"try_from","","",2804,[[],["result",4]]],[11,"into","","",2804,[[]]],[11,"try_into","","",2804,[[],["result",4]]],[11,"type_id","","",2804,[[],["typeid",3]]],[11,"from","","",2805,[[]]],[11,"borrow","","",2805,[[]]],[11,"borrow_mut","","",2805,[[]]],[11,"try_from","","",2805,[[],["result",4]]],[11,"into","","",2805,[[]]],[11,"try_into","","",2805,[[],["result",4]]],[11,"type_id","","",2805,[[],["typeid",3]]],[11,"from","","",2806,[[]]],[11,"borrow","","",2806,[[]]],[11,"borrow_mut","","",2806,[[]]],[11,"try_from","","",2806,[[],["result",4]]],[11,"into","","",2806,[[]]],[11,"try_into","","",2806,[[],["result",4]]],[11,"type_id","","",2806,[[],["typeid",3]]],[11,"from","","",2807,[[]]],[11,"borrow","","",2807,[[]]],[11,"borrow_mut","","",2807,[[]]],[11,"try_from","","",2807,[[],["result",4]]],[11,"into","","",2807,[[]]],[11,"try_into","","",2807,[[],["result",4]]],[11,"type_id","","",2807,[[],["typeid",3]]],[11,"from","","",2808,[[]]],[11,"borrow","","",2808,[[]]],[11,"borrow_mut","","",2808,[[]]],[11,"try_from","","",2808,[[],["result",4]]],[11,"into","","",2808,[[]]],[11,"try_into","","",2808,[[],["result",4]]],[11,"type_id","","",2808,[[],["typeid",3]]],[11,"from","","",2809,[[]]],[11,"borrow","","",2809,[[]]],[11,"borrow_mut","","",2809,[[]]],[11,"try_from","","",2809,[[],["result",4]]],[11,"into","","",2809,[[]]],[11,"try_into","","",2809,[[],["result",4]]],[11,"type_id","","",2809,[[],["typeid",3]]],[11,"from","","",2810,[[]]],[11,"borrow","","",2810,[[]]],[11,"borrow_mut","","",2810,[[]]],[11,"try_from","","",2810,[[],["result",4]]],[11,"into","","",2810,[[]]],[11,"try_into","","",2810,[[],["result",4]]],[11,"type_id","","",2810,[[],["typeid",3]]],[11,"from","","",2811,[[]]],[11,"borrow","","",2811,[[]]],[11,"borrow_mut","","",2811,[[]]],[11,"try_from","","",2811,[[],["result",4]]],[11,"into","","",2811,[[]]],[11,"try_into","","",2811,[[],["result",4]]],[11,"type_id","","",2811,[[],["typeid",3]]],[11,"from","","",2812,[[]]],[11,"borrow","","",2812,[[]]],[11,"borrow_mut","","",2812,[[]]],[11,"try_from","","",2812,[[],["result",4]]],[11,"into","","",2812,[[]]],[11,"try_into","","",2812,[[],["result",4]]],[11,"type_id","","",2812,[[],["typeid",3]]],[11,"from","","",2813,[[]]],[11,"borrow","","",2813,[[]]],[11,"borrow_mut","","",2813,[[]]],[11,"try_from","","",2813,[[],["result",4]]],[11,"into","","",2813,[[]]],[11,"try_into","","",2813,[[],["result",4]]],[11,"type_id","","",2813,[[],["typeid",3]]],[11,"from","","",2814,[[]]],[11,"borrow","","",2814,[[]]],[11,"borrow_mut","","",2814,[[]]],[11,"try_from","","",2814,[[],["result",4]]],[11,"into","","",2814,[[]]],[11,"try_into","","",2814,[[],["result",4]]],[11,"type_id","","",2814,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::ca1r","",2831,[[]]],[11,"borrow","","",2831,[[]]],[11,"borrow_mut","","",2831,[[]]],[11,"try_from","","",2831,[[],["result",4]]],[11,"into","","",2831,[[]]],[11,"try_into","","",2831,[[],["result",4]]],[11,"type_id","","",2831,[[],["typeid",3]]],[11,"from","","",2832,[[]]],[11,"borrow","","",2832,[[]]],[11,"borrow_mut","","",2832,[[]]],[11,"try_from","","",2832,[[],["result",4]]],[11,"into","","",2832,[[]]],[11,"try_into","","",2832,[[],["result",4]]],[11,"type_id","","",2832,[[],["typeid",3]]],[11,"from","","",2833,[[]]],[11,"borrow","","",2833,[[]]],[11,"borrow_mut","","",2833,[[]]],[11,"try_from","","",2833,[[],["result",4]]],[11,"into","","",2833,[[]]],[11,"try_into","","",2833,[[],["result",4]]],[11,"type_id","","",2833,[[],["typeid",3]]],[11,"from","","",2834,[[]]],[11,"borrow","","",2834,[[]]],[11,"borrow_mut","","",2834,[[]]],[11,"try_from","","",2834,[[],["result",4]]],[11,"into","","",2834,[[]]],[11,"try_into","","",2834,[[],["result",4]]],[11,"type_id","","",2834,[[],["typeid",3]]],[11,"from","","",2835,[[]]],[11,"borrow","","",2835,[[]]],[11,"borrow_mut","","",2835,[[]]],[11,"try_from","","",2835,[[],["result",4]]],[11,"into","","",2835,[[]]],[11,"try_into","","",2835,[[],["result",4]]],[11,"type_id","","",2835,[[],["typeid",3]]],[11,"from","","",2836,[[]]],[11,"borrow","","",2836,[[]]],[11,"borrow_mut","","",2836,[[]]],[11,"try_from","","",2836,[[],["result",4]]],[11,"into","","",2836,[[]]],[11,"try_into","","",2836,[[],["result",4]]],[11,"type_id","","",2836,[[],["typeid",3]]],[11,"from","","",2837,[[]]],[11,"borrow","","",2837,[[]]],[11,"borrow_mut","","",2837,[[]]],[11,"try_from","","",2837,[[],["result",4]]],[11,"into","","",2837,[[]]],[11,"try_into","","",2837,[[],["result",4]]],[11,"type_id","","",2837,[[],["typeid",3]]],[11,"from","","",2838,[[]]],[11,"borrow","","",2838,[[]]],[11,"borrow_mut","","",2838,[[]]],[11,"try_from","","",2838,[[],["result",4]]],[11,"into","","",2838,[[]]],[11,"try_into","","",2838,[[],["result",4]]],[11,"type_id","","",2838,[[],["typeid",3]]],[11,"from","","",2839,[[]]],[11,"borrow","","",2839,[[]]],[11,"borrow_mut","","",2839,[[]]],[11,"try_from","","",2839,[[],["result",4]]],[11,"into","","",2839,[[]]],[11,"try_into","","",2839,[[],["result",4]]],[11,"type_id","","",2839,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::mccar","",2850,[[]]],[11,"borrow","","",2850,[[]]],[11,"borrow_mut","","",2850,[[]]],[11,"try_from","","",2850,[[],["result",4]]],[11,"into","","",2850,[[]]],[11,"try_into","","",2850,[[],["result",4]]],[11,"type_id","","",2850,[[],["typeid",3]]],[11,"from","","",2851,[[]]],[11,"borrow","","",2851,[[]]],[11,"borrow_mut","","",2851,[[]]],[11,"try_from","","",2851,[[],["result",4]]],[11,"into","","",2851,[[]]],[11,"try_into","","",2851,[[],["result",4]]],[11,"type_id","","",2851,[[],["typeid",3]]],[11,"from","","",2852,[[]]],[11,"borrow","","",2852,[[]]],[11,"borrow_mut","","",2852,[[]]],[11,"try_from","","",2852,[[],["result",4]]],[11,"into","","",2852,[[]]],[11,"try_into","","",2852,[[],["result",4]]],[11,"type_id","","",2852,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::feraces","",2863,[[]]],[11,"borrow","","",2863,[[]]],[11,"borrow_mut","","",2863,[[]]],[11,"try_from","","",2863,[[],["result",4]]],[11,"into","","",2863,[[]]],[11,"try_into","","",2863,[[],["result",4]]],[11,"type_id","","",2863,[[],["typeid",3]]],[11,"from","","",2864,[[]]],[11,"borrow","","",2864,[[]]],[11,"borrow_mut","","",2864,[[]]],[11,"try_from","","",2864,[[],["result",4]]],[11,"into","","",2864,[[]]],[11,"try_into","","",2864,[[],["result",4]]],[11,"type_id","","",2864,[[],["typeid",3]]],[11,"from","","",2865,[[]]],[11,"borrow","","",2865,[[]]],[11,"borrow_mut","","",2865,[[]]],[11,"try_from","","",2865,[[],["result",4]]],[11,"into","","",2865,[[]]],[11,"try_into","","",2865,[[],["result",4]]],[11,"type_id","","",2865,[[],["typeid",3]]],[11,"from","","",2866,[[]]],[11,"borrow","","",2866,[[]]],[11,"borrow_mut","","",2866,[[]]],[11,"try_from","","",2866,[[],["result",4]]],[11,"into","","",2866,[[]]],[11,"try_into","","",2866,[[],["result",4]]],[11,"type_id","","",2866,[[],["typeid",3]]],[11,"from","","",2867,[[]]],[11,"borrow","","",2867,[[]]],[11,"borrow_mut","","",2867,[[]]],[11,"try_from","","",2867,[[],["result",4]]],[11,"into","","",2867,[[]]],[11,"try_into","","",2867,[[],["result",4]]],[11,"type_id","","",2867,[[],["typeid",3]]],[11,"from","","",2868,[[]]],[11,"borrow","","",2868,[[]]],[11,"borrow_mut","","",2868,[[]]],[11,"try_from","","",2868,[[],["result",4]]],[11,"into","","",2868,[[]]],[11,"try_into","","",2868,[[],["result",4]]],[11,"type_id","","",2868,[[],["typeid",3]]],[11,"from","","",2857,[[]]],[11,"borrow","","",2857,[[]]],[11,"borrow_mut","","",2857,[[]]],[11,"try_from","","",2857,[[],["result",4]]],[11,"into","","",2857,[[]]],[11,"try_into","","",2857,[[],["result",4]]],[11,"type_id","","",2857,[[],["typeid",3]]],[11,"from","","",2858,[[]]],[11,"borrow","","",2858,[[]]],[11,"borrow_mut","","",2858,[[]]],[11,"try_from","","",2858,[[],["result",4]]],[11,"into","","",2858,[[]]],[11,"try_into","","",2858,[[],["result",4]]],[11,"type_id","","",2858,[[],["typeid",3]]],[11,"from","","",2859,[[]]],[11,"borrow","","",2859,[[]]],[11,"borrow_mut","","",2859,[[]]],[11,"try_from","","",2859,[[],["result",4]]],[11,"into","","",2859,[[]]],[11,"try_into","","",2859,[[],["result",4]]],[11,"type_id","","",2859,[[],["typeid",3]]],[11,"from","","",2860,[[]]],[11,"borrow","","",2860,[[]]],[11,"borrow_mut","","",2860,[[]]],[11,"try_from","","",2860,[[],["result",4]]],[11,"into","","",2860,[[]]],[11,"try_into","","",2860,[[],["result",4]]],[11,"type_id","","",2860,[[],["typeid",3]]],[11,"from","","",2861,[[]]],[11,"borrow","","",2861,[[]]],[11,"borrow_mut","","",2861,[[]]],[11,"try_from","","",2861,[[],["result",4]]],[11,"into","","",2861,[[]]],[11,"try_into","","",2861,[[],["result",4]]],[11,"type_id","","",2861,[[],["typeid",3]]],[11,"from","","",2862,[[]]],[11,"borrow","","",2862,[[]]],[11,"borrow_mut","","",2862,[[]]],[11,"try_from","","",2862,[[],["result",4]]],[11,"into","","",2862,[[]]],[11,"try_into","","",2862,[[],["result",4]]],[11,"type_id","","",2862,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::fereis","",2881,[[]]],[11,"borrow","","",2881,[[]]],[11,"borrow_mut","","",2881,[[]]],[11,"try_from","","",2881,[[],["result",4]]],[11,"into","","",2881,[[]]],[11,"try_into","","",2881,[[],["result",4]]],[11,"type_id","","",2881,[[],["typeid",3]]],[11,"from","","",2882,[[]]],[11,"borrow","","",2882,[[]]],[11,"borrow_mut","","",2882,[[]]],[11,"try_from","","",2882,[[],["result",4]]],[11,"into","","",2882,[[]]],[11,"try_into","","",2882,[[],["result",4]]],[11,"type_id","","",2882,[[],["typeid",3]]],[11,"from","","",2883,[[]]],[11,"borrow","","",2883,[[]]],[11,"borrow_mut","","",2883,[[]]],[11,"try_from","","",2883,[[],["result",4]]],[11,"into","","",2883,[[]]],[11,"try_into","","",2883,[[],["result",4]]],[11,"type_id","","",2883,[[],["typeid",3]]],[11,"from","","",2884,[[]]],[11,"borrow","","",2884,[[]]],[11,"borrow_mut","","",2884,[[]]],[11,"try_from","","",2884,[[],["result",4]]],[11,"into","","",2884,[[]]],[11,"try_into","","",2884,[[],["result",4]]],[11,"type_id","","",2884,[[],["typeid",3]]],[11,"from","","",2885,[[]]],[11,"borrow","","",2885,[[]]],[11,"borrow_mut","","",2885,[[]]],[11,"try_from","","",2885,[[],["result",4]]],[11,"into","","",2885,[[]]],[11,"try_into","","",2885,[[],["result",4]]],[11,"type_id","","",2885,[[],["typeid",3]]],[11,"from","","",2886,[[]]],[11,"borrow","","",2886,[[]]],[11,"borrow_mut","","",2886,[[]]],[11,"try_from","","",2886,[[],["result",4]]],[11,"into","","",2886,[[]]],[11,"try_into","","",2886,[[],["result",4]]],[11,"type_id","","",2886,[[],["typeid",3]]],[11,"from","","",2887,[[]]],[11,"borrow","","",2887,[[]]],[11,"borrow_mut","","",2887,[[]]],[11,"try_from","","",2887,[[],["result",4]]],[11,"into","","",2887,[[]]],[11,"try_into","","",2887,[[],["result",4]]],[11,"type_id","","",2887,[[],["typeid",3]]],[11,"from","","",2888,[[]]],[11,"borrow","","",2888,[[]]],[11,"borrow_mut","","",2888,[[]]],[11,"try_from","","",2888,[[],["result",4]]],[11,"into","","",2888,[[]]],[11,"try_into","","",2888,[[],["result",4]]],[11,"type_id","","",2888,[[],["typeid",3]]],[11,"from","","",2889,[[]]],[11,"borrow","","",2889,[[]]],[11,"borrow_mut","","",2889,[[]]],[11,"try_from","","",2889,[[],["result",4]]],[11,"into","","",2889,[[]]],[11,"try_into","","",2889,[[],["result",4]]],[11,"type_id","","",2889,[[],["typeid",3]]],[11,"from","","",2890,[[]]],[11,"borrow","","",2890,[[]]],[11,"borrow_mut","","",2890,[[]]],[11,"try_from","","",2890,[[],["result",4]]],[11,"into","","",2890,[[]]],[11,"try_into","","",2890,[[],["result",4]]],[11,"type_id","","",2890,[[],["typeid",3]]],[11,"from","","",2891,[[]]],[11,"borrow","","",2891,[[]]],[11,"borrow_mut","","",2891,[[]]],[11,"try_from","","",2891,[[],["result",4]]],[11,"into","","",2891,[[]]],[11,"try_into","","",2891,[[],["result",4]]],[11,"type_id","","",2891,[[],["typeid",3]]],[11,"from","","",2870,[[]]],[11,"borrow","","",2870,[[]]],[11,"borrow_mut","","",2870,[[]]],[11,"try_from","","",2870,[[],["result",4]]],[11,"into","","",2870,[[]]],[11,"try_into","","",2870,[[],["result",4]]],[11,"type_id","","",2870,[[],["typeid",3]]],[11,"from","","",2871,[[]]],[11,"borrow","","",2871,[[]]],[11,"borrow_mut","","",2871,[[]]],[11,"try_from","","",2871,[[],["result",4]]],[11,"into","","",2871,[[]]],[11,"try_into","","",2871,[[],["result",4]]],[11,"type_id","","",2871,[[],["typeid",3]]],[11,"from","","",2872,[[]]],[11,"borrow","","",2872,[[]]],[11,"borrow_mut","","",2872,[[]]],[11,"try_from","","",2872,[[],["result",4]]],[11,"into","","",2872,[[]]],[11,"try_into","","",2872,[[],["result",4]]],[11,"type_id","","",2872,[[],["typeid",3]]],[11,"from","","",2873,[[]]],[11,"borrow","","",2873,[[]]],[11,"borrow_mut","","",2873,[[]]],[11,"try_from","","",2873,[[],["result",4]]],[11,"into","","",2873,[[]]],[11,"try_into","","",2873,[[],["result",4]]],[11,"type_id","","",2873,[[],["typeid",3]]],[11,"from","","",2874,[[]]],[11,"borrow","","",2874,[[]]],[11,"borrow_mut","","",2874,[[]]],[11,"try_from","","",2874,[[],["result",4]]],[11,"into","","",2874,[[]]],[11,"try_into","","",2874,[[],["result",4]]],[11,"type_id","","",2874,[[],["typeid",3]]],[11,"from","","",2875,[[]]],[11,"borrow","","",2875,[[]]],[11,"borrow_mut","","",2875,[[]]],[11,"try_from","","",2875,[[],["result",4]]],[11,"into","","",2875,[[]]],[11,"try_into","","",2875,[[],["result",4]]],[11,"type_id","","",2875,[[],["typeid",3]]],[11,"from","","",2876,[[]]],[11,"borrow","","",2876,[[]]],[11,"borrow_mut","","",2876,[[]]],[11,"try_from","","",2876,[[],["result",4]]],[11,"into","","",2876,[[]]],[11,"try_into","","",2876,[[],["result",4]]],[11,"type_id","","",2876,[[],["typeid",3]]],[11,"from","","",2877,[[]]],[11,"borrow","","",2877,[[]]],[11,"borrow_mut","","",2877,[[]]],[11,"try_from","","",2877,[[],["result",4]]],[11,"into","","",2877,[[]]],[11,"try_into","","",2877,[[],["result",4]]],[11,"type_id","","",2877,[[],["typeid",3]]],[11,"from","","",2878,[[]]],[11,"borrow","","",2878,[[]]],[11,"borrow_mut","","",2878,[[]]],[11,"try_from","","",2878,[[],["result",4]]],[11,"into","","",2878,[[]]],[11,"try_into","","",2878,[[],["result",4]]],[11,"type_id","","",2878,[[],["typeid",3]]],[11,"from","","",2879,[[]]],[11,"borrow","","",2879,[[]]],[11,"borrow_mut","","",2879,[[]]],[11,"try_from","","",2879,[[],["result",4]]],[11,"into","","",2879,[[]]],[11,"try_into","","",2879,[[],["result",4]]],[11,"type_id","","",2879,[[],["typeid",3]]],[11,"from","","",2880,[[]]],[11,"borrow","","",2880,[[]]],[11,"borrow_mut","","",2880,[[]]],[11,"try_from","","",2880,[[],["result",4]]],[11,"into","","",2880,[[]]],[11,"try_into","","",2880,[[],["result",4]]],[11,"type_id","","",2880,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::aesr","",2893,[[]]],[11,"borrow","","",2893,[[]]],[11,"borrow_mut","","",2893,[[]]],[11,"try_from","","",2893,[[],["result",4]]],[11,"into","","",2893,[[]]],[11,"try_into","","",2893,[[],["result",4]]],[11,"type_id","","",2893,[[],["typeid",3]]],[11,"from","","",2894,[[]]],[11,"borrow","","",2894,[[]]],[11,"borrow_mut","","",2894,[[]]],[11,"try_from","","",2894,[[],["result",4]]],[11,"into","","",2894,[[]]],[11,"try_into","","",2894,[[],["result",4]]],[11,"type_id","","",2894,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::asar","",2898,[[]]],[11,"borrow","","",2898,[[]]],[11,"borrow_mut","","",2898,[[]]],[11,"try_from","","",2898,[[],["result",4]]],[11,"into","","",2898,[[]]],[11,"try_into","","",2898,[[],["result",4]]],[11,"type_id","","",2898,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::pvr","",2903,[[]]],[11,"borrow","","",2903,[[]]],[11,"borrow_mut","","",2903,[[]]],[11,"try_from","","",2903,[[],["result",4]]],[11,"into","","",2903,[[]]],[11,"try_into","","",2903,[[],["result",4]]],[11,"type_id","","",2903,[[],["typeid",3]]],[11,"from","","",2905,[[]]],[11,"borrow","","",2905,[[]]],[11,"borrow_mut","","",2905,[[]]],[11,"try_from","","",2905,[[],["result",4]]],[11,"into","","",2905,[[]]],[11,"try_into","","",2905,[[],["result",4]]],[11,"type_id","","",2905,[[],["typeid",3]]],[11,"from","","",2907,[[]]],[11,"borrow","","",2907,[[]]],[11,"borrow_mut","","",2907,[[]]],[11,"try_from","","",2907,[[],["result",4]]],[11,"into","","",2907,[[]]],[11,"try_into","","",2907,[[],["result",4]]],[11,"type_id","","",2907,[[],["typeid",3]]],[11,"from","","",2901,[[]]],[11,"borrow","","",2901,[[]]],[11,"borrow_mut","","",2901,[[]]],[11,"try_from","","",2901,[[],["result",4]]],[11,"into","","",2901,[[]]],[11,"try_into","","",2901,[[],["result",4]]],[11,"type_id","","",2901,[[],["typeid",3]]],[11,"from","","",2902,[[]]],[11,"borrow","","",2902,[[]]],[11,"borrow_mut","","",2902,[[]]],[11,"try_from","","",2902,[[],["result",4]]],[11,"into","","",2902,[[]]],[11,"try_into","","",2902,[[],["result",4]]],[11,"type_id","","",2902,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::mc1r","",2914,[[]]],[11,"borrow","","",2914,[[]]],[11,"borrow_mut","","",2914,[[]]],[11,"try_from","","",2914,[[],["result",4]]],[11,"into","","",2914,[[]]],[11,"try_into","","",2914,[[],["result",4]]],[11,"type_id","","",2914,[[],["typeid",3]]],[11,"from","","",2915,[[]]],[11,"borrow","","",2915,[[]]],[11,"borrow_mut","","",2915,[[]]],[11,"try_from","","",2915,[[],["result",4]]],[11,"into","","",2915,[[]]],[11,"try_into","","",2915,[[],["result",4]]],[11,"type_id","","",2915,[[],["typeid",3]]],[11,"from","","",2916,[[]]],[11,"borrow","","",2916,[[]]],[11,"borrow_mut","","",2916,[[]]],[11,"try_from","","",2916,[[],["result",4]]],[11,"into","","",2916,[[]]],[11,"try_into","","",2916,[[],["result",4]]],[11,"type_id","","",2916,[[],["typeid",3]]],[11,"from","","",2917,[[]]],[11,"borrow","","",2917,[[]]],[11,"borrow_mut","","",2917,[[]]],[11,"try_from","","",2917,[[],["result",4]]],[11,"into","","",2917,[[]]],[11,"try_into","","",2917,[[],["result",4]]],[11,"type_id","","",2917,[[],["typeid",3]]],[11,"from","","",2918,[[]]],[11,"borrow","","",2918,[[]]],[11,"borrow_mut","","",2918,[[]]],[11,"try_from","","",2918,[[],["result",4]]],[11,"into","","",2918,[[]]],[11,"try_into","","",2918,[[],["result",4]]],[11,"type_id","","",2918,[[],["typeid",3]]],[11,"from","","",2919,[[]]],[11,"borrow","","",2919,[[]]],[11,"borrow_mut","","",2919,[[]]],[11,"try_from","","",2919,[[],["result",4]]],[11,"into","","",2919,[[]]],[11,"try_into","","",2919,[[],["result",4]]],[11,"type_id","","",2919,[[],["typeid",3]]],[11,"from","","",2912,[[]]],[11,"borrow","","",2912,[[]]],[11,"borrow_mut","","",2912,[[]]],[11,"try_from","","",2912,[[],["result",4]]],[11,"into","","",2912,[[]]],[11,"try_into","","",2912,[[],["result",4]]],[11,"type_id","","",2912,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::mc2r","",2922,[[]]],[11,"borrow","","",2922,[[]]],[11,"borrow_mut","","",2922,[[]]],[11,"try_from","","",2922,[[],["result",4]]],[11,"into","","",2922,[[]]],[11,"try_into","","",2922,[[],["result",4]]],[11,"type_id","","",2922,[[],["typeid",3]]],[11,"from","","",2923,[[]]],[11,"borrow","","",2923,[[]]],[11,"borrow_mut","","",2923,[[]]],[11,"try_from","","",2923,[[],["result",4]]],[11,"into","","",2923,[[]]],[11,"try_into","","",2923,[[],["result",4]]],[11,"type_id","","",2923,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::acr","",2927,[[]]],[11,"borrow","","",2927,[[]]],[11,"borrow_mut","","",2927,[[]]],[11,"try_from","","",2927,[[],["result",4]]],[11,"into","","",2927,[[]]],[11,"try_into","","",2927,[[],["result",4]]],[11,"type_id","","",2927,[[],["typeid",3]]],[11,"from","","",2925,[[]]],[11,"borrow","","",2925,[[]]],[11,"borrow_mut","","",2925,[[]]],[11,"try_from","","",2925,[[],["result",4]]],[11,"into","","",2925,[[]]],[11,"try_into","","",2925,[[],["result",4]]],[11,"type_id","","",2925,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::cc2r","",2932,[[]]],[11,"borrow","","",2932,[[]]],[11,"borrow_mut","","",2932,[[]]],[11,"try_from","","",2932,[[],["result",4]]],[11,"into","","",2932,[[]]],[11,"try_into","","",2932,[[],["result",4]]],[11,"type_id","","",2932,[[],["typeid",3]]],[11,"from","","",2930,[[]]],[11,"borrow","","",2930,[[]]],[11,"borrow_mut","","",2930,[[]]],[11,"try_from","","",2930,[[],["result",4]]],[11,"into","","",2930,[[]]],[11,"try_into","","",2930,[[],["result",4]]],[11,"type_id","","",2930,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::cacr","",2935,[[]]],[11,"borrow","","",2935,[[]]],[11,"borrow_mut","","",2935,[[]]],[11,"try_from","","",2935,[[],["result",4]]],[11,"into","","",2935,[[]]],[11,"try_into","","",2935,[[],["result",4]]],[11,"type_id","","",2935,[[],["typeid",3]]],[11,"from","","",2936,[[]]],[11,"borrow","","",2936,[[]]],[11,"borrow_mut","","",2936,[[]]],[11,"try_from","","",2936,[[],["result",4]]],[11,"into","","",2936,[[]]],[11,"try_into","","",2936,[[],["result",4]]],[11,"type_id","","",2936,[[],["typeid",3]]],[11,"from","atsamd51g::sdhc0::dbgr","",2941,[[]]],[11,"borrow","","",2941,[[]]],[11,"borrow_mut","","",2941,[[]]],[11,"try_from","","",2941,[[],["result",4]]],[11,"into","","",2941,[[]]],[11,"try_into","","",2941,[[],["result",4]]],[11,"type_id","","",2941,[[],["typeid",3]]],[11,"from","","",2939,[[]]],[11,"borrow","","",2939,[[]]],[11,"borrow_mut","","",2939,[[]]],[11,"try_from","","",2939,[[],["result",4]]],[11,"into","","",2939,[[]]],[11,"try_into","","",2939,[[],["result",4]]],[11,"type_id","","",2939,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0","",3533,[[]]],[11,"borrow","","",3533,[[]]],[11,"borrow_mut","","",3533,[[]]],[11,"try_from","","",3533,[[],["result",4]]],[11,"into","","",3533,[[]]],[11,"try_into","","",3533,[[],["result",4]]],[11,"type_id","","",3533,[[],["typeid",3]]],[11,"from","","",2944,[[]]],[11,"borrow","","",2944,[[]]],[11,"borrow_mut","","",2944,[[]]],[11,"try_from","","",2944,[[],["result",4]]],[11,"into","","",2944,[[]]],[11,"try_into","","",2944,[[],["result",4]]],[11,"type_id","","",2944,[[],["typeid",3]]],[11,"from","","",2945,[[]]],[11,"borrow","","",2945,[[]]],[11,"borrow_mut","","",2945,[[]]],[11,"try_from","","",2945,[[],["result",4]]],[11,"into","","",2945,[[]]],[11,"try_into","","",2945,[[],["result",4]]],[11,"type_id","","",2945,[[],["typeid",3]]],[11,"from","","",2946,[[]]],[11,"borrow","","",2946,[[]]],[11,"borrow_mut","","",2946,[[]]],[11,"try_from","","",2946,[[],["result",4]]],[11,"into","","",2946,[[]]],[11,"try_into","","",2946,[[],["result",4]]],[11,"type_id","","",2946,[[],["typeid",3]]],[11,"from","","",2947,[[]]],[11,"borrow","","",2947,[[]]],[11,"borrow_mut","","",2947,[[]]],[11,"try_from","","",2947,[[],["result",4]]],[11,"into","","",2947,[[]]],[11,"try_into","","",2947,[[],["result",4]]],[11,"type_id","","",2947,[[],["typeid",3]]],[11,"from","","",2948,[[]]],[11,"borrow","","",2948,[[]]],[11,"borrow_mut","","",2948,[[]]],[11,"try_from","","",2948,[[],["result",4]]],[11,"into","","",2948,[[]]],[11,"try_into","","",2948,[[],["result",4]]],[11,"type_id","","",2948,[[],["typeid",3]]],[11,"from","","",2949,[[]]],[11,"borrow","","",2949,[[]]],[11,"borrow_mut","","",2949,[[]]],[11,"try_from","","",2949,[[],["result",4]]],[11,"into","","",2949,[[]]],[11,"try_into","","",2949,[[],["result",4]]],[11,"type_id","","",2949,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::ctrla","",2954,[[]]],[11,"borrow","","",2954,[[]]],[11,"borrow_mut","","",2954,[[]]],[11,"try_from","","",2954,[[],["result",4]]],[11,"into","","",2954,[[]]],[11,"try_into","","",2954,[[],["result",4]]],[11,"type_id","","",2954,[[],["typeid",3]]],[11,"from","","",2955,[[]]],[11,"borrow","","",2955,[[]]],[11,"borrow_mut","","",2955,[[]]],[11,"try_from","","",2955,[[],["result",4]]],[11,"into","","",2955,[[]]],[11,"try_into","","",2955,[[],["result",4]]],[11,"type_id","","",2955,[[],["typeid",3]]],[11,"from","","",2957,[[]]],[11,"borrow","","",2957,[[]]],[11,"borrow_mut","","",2957,[[]]],[11,"try_from","","",2957,[[],["result",4]]],[11,"into","","",2957,[[]]],[11,"try_into","","",2957,[[],["result",4]]],[11,"type_id","","",2957,[[],["typeid",3]]],[11,"from","","",2958,[[]]],[11,"borrow","","",2958,[[]]],[11,"borrow_mut","","",2958,[[]]],[11,"try_from","","",2958,[[],["result",4]]],[11,"into","","",2958,[[]]],[11,"try_into","","",2958,[[],["result",4]]],[11,"type_id","","",2958,[[],["typeid",3]]],[11,"from","","",2959,[[]]],[11,"borrow","","",2959,[[]]],[11,"borrow_mut","","",2959,[[]]],[11,"try_from","","",2959,[[],["result",4]]],[11,"into","","",2959,[[]]],[11,"try_into","","",2959,[[],["result",4]]],[11,"type_id","","",2959,[[],["typeid",3]]],[11,"from","","",2961,[[]]],[11,"borrow","","",2961,[[]]],[11,"borrow_mut","","",2961,[[]]],[11,"try_from","","",2961,[[],["result",4]]],[11,"into","","",2961,[[]]],[11,"try_into","","",2961,[[],["result",4]]],[11,"type_id","","",2961,[[],["typeid",3]]],[11,"from","","",2962,[[]]],[11,"borrow","","",2962,[[]]],[11,"borrow_mut","","",2962,[[]]],[11,"try_from","","",2962,[[],["result",4]]],[11,"into","","",2962,[[]]],[11,"try_into","","",2962,[[],["result",4]]],[11,"type_id","","",2962,[[],["typeid",3]]],[11,"from","","",2963,[[]]],[11,"borrow","","",2963,[[]]],[11,"borrow_mut","","",2963,[[]]],[11,"try_from","","",2963,[[],["result",4]]],[11,"into","","",2963,[[]]],[11,"try_into","","",2963,[[],["result",4]]],[11,"type_id","","",2963,[[],["typeid",3]]],[11,"from","","",2965,[[]]],[11,"borrow","","",2965,[[]]],[11,"borrow_mut","","",2965,[[]]],[11,"try_from","","",2965,[[],["result",4]]],[11,"into","","",2965,[[]]],[11,"try_into","","",2965,[[],["result",4]]],[11,"type_id","","",2965,[[],["typeid",3]]],[11,"from","","",2966,[[]]],[11,"borrow","","",2966,[[]]],[11,"borrow_mut","","",2966,[[]]],[11,"try_from","","",2966,[[],["result",4]]],[11,"into","","",2966,[[]]],[11,"try_into","","",2966,[[],["result",4]]],[11,"type_id","","",2966,[[],["typeid",3]]],[11,"from","","",2968,[[]]],[11,"borrow","","",2968,[[]]],[11,"borrow_mut","","",2968,[[]]],[11,"try_from","","",2968,[[],["result",4]]],[11,"into","","",2968,[[]]],[11,"try_into","","",2968,[[],["result",4]]],[11,"type_id","","",2968,[[],["typeid",3]]],[11,"from","","",2969,[[]]],[11,"borrow","","",2969,[[]]],[11,"borrow_mut","","",2969,[[]]],[11,"try_from","","",2969,[[],["result",4]]],[11,"into","","",2969,[[]]],[11,"try_into","","",2969,[[],["result",4]]],[11,"type_id","","",2969,[[],["typeid",3]]],[11,"from","","",2950,[[]]],[11,"borrow","","",2950,[[]]],[11,"borrow_mut","","",2950,[[]]],[11,"try_from","","",2950,[[],["result",4]]],[11,"into","","",2950,[[]]],[11,"try_into","","",2950,[[],["result",4]]],[11,"type_id","","",2950,[[],["typeid",3]]],[11,"from","","",2951,[[]]],[11,"borrow","","",2951,[[]]],[11,"borrow_mut","","",2951,[[]]],[11,"try_from","","",2951,[[],["result",4]]],[11,"into","","",2951,[[]]],[11,"try_into","","",2951,[[],["result",4]]],[11,"type_id","","",2951,[[],["typeid",3]]],[11,"from","","",2952,[[]]],[11,"borrow","","",2952,[[]]],[11,"borrow_mut","","",2952,[[]]],[11,"try_from","","",2952,[[],["result",4]]],[11,"into","","",2952,[[]]],[11,"try_into","","",2952,[[],["result",4]]],[11,"type_id","","",2952,[[],["typeid",3]]],[11,"from","","",2953,[[]]],[11,"borrow","","",2953,[[]]],[11,"borrow_mut","","",2953,[[]]],[11,"try_from","","",2953,[[],["result",4]]],[11,"into","","",2953,[[]]],[11,"try_into","","",2953,[[],["result",4]]],[11,"type_id","","",2953,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::ctrlb","",2972,[[]]],[11,"borrow","","",2972,[[]]],[11,"borrow_mut","","",2972,[[]]],[11,"try_from","","",2972,[[],["result",4]]],[11,"into","","",2972,[[]]],[11,"try_into","","",2972,[[],["result",4]]],[11,"type_id","","",2972,[[],["typeid",3]]],[11,"from","","",2973,[[]]],[11,"borrow","","",2973,[[]]],[11,"borrow_mut","","",2973,[[]]],[11,"try_from","","",2973,[[],["result",4]]],[11,"into","","",2973,[[]]],[11,"try_into","","",2973,[[],["result",4]]],[11,"type_id","","",2973,[[],["typeid",3]]],[11,"from","","",2974,[[]]],[11,"borrow","","",2974,[[]]],[11,"borrow_mut","","",2974,[[]]],[11,"try_from","","",2974,[[],["result",4]]],[11,"into","","",2974,[[]]],[11,"try_into","","",2974,[[],["result",4]]],[11,"type_id","","",2974,[[],["typeid",3]]],[11,"from","","",2975,[[]]],[11,"borrow","","",2975,[[]]],[11,"borrow_mut","","",2975,[[]]],[11,"try_from","","",2975,[[],["result",4]]],[11,"into","","",2975,[[]]],[11,"try_into","","",2975,[[],["result",4]]],[11,"type_id","","",2975,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::ctrlc","",2980,[[]]],[11,"borrow","","",2980,[[]]],[11,"borrow_mut","","",2980,[[]]],[11,"try_from","","",2980,[[],["result",4]]],[11,"into","","",2980,[[]]],[11,"try_into","","",2980,[[],["result",4]]],[11,"type_id","","",2980,[[],["typeid",3]]],[11,"from","","",2978,[[]]],[11,"borrow","","",2978,[[]]],[11,"borrow_mut","","",2978,[[]]],[11,"try_from","","",2978,[[],["result",4]]],[11,"into","","",2978,[[]]],[11,"try_into","","",2978,[[],["result",4]]],[11,"type_id","","",2978,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::baud","",2983,[[]]],[11,"borrow","","",2983,[[]]],[11,"borrow_mut","","",2983,[[]]],[11,"try_from","","",2983,[[],["result",4]]],[11,"into","","",2983,[[]]],[11,"try_into","","",2983,[[],["result",4]]],[11,"type_id","","",2983,[[],["typeid",3]]],[11,"from","","",2984,[[]]],[11,"borrow","","",2984,[[]]],[11,"borrow_mut","","",2984,[[]]],[11,"try_from","","",2984,[[],["result",4]]],[11,"into","","",2984,[[]]],[11,"try_into","","",2984,[[],["result",4]]],[11,"type_id","","",2984,[[],["typeid",3]]],[11,"from","","",2985,[[]]],[11,"borrow","","",2985,[[]]],[11,"borrow_mut","","",2985,[[]]],[11,"try_from","","",2985,[[],["result",4]]],[11,"into","","",2985,[[]]],[11,"try_into","","",2985,[[],["result",4]]],[11,"type_id","","",2985,[[],["typeid",3]]],[11,"from","","",2986,[[]]],[11,"borrow","","",2986,[[]]],[11,"borrow_mut","","",2986,[[]]],[11,"try_from","","",2986,[[],["result",4]]],[11,"into","","",2986,[[]]],[11,"try_into","","",2986,[[],["result",4]]],[11,"type_id","","",2986,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::intenclr","",2989,[[]]],[11,"borrow","","",2989,[[]]],[11,"borrow_mut","","",2989,[[]]],[11,"try_from","","",2989,[[],["result",4]]],[11,"into","","",2989,[[]]],[11,"try_into","","",2989,[[],["result",4]]],[11,"type_id","","",2989,[[],["typeid",3]]],[11,"from","","",2990,[[]]],[11,"borrow","","",2990,[[]]],[11,"borrow_mut","","",2990,[[]]],[11,"try_from","","",2990,[[],["result",4]]],[11,"into","","",2990,[[]]],[11,"try_into","","",2990,[[],["result",4]]],[11,"type_id","","",2990,[[],["typeid",3]]],[11,"from","","",2991,[[]]],[11,"borrow","","",2991,[[]]],[11,"borrow_mut","","",2991,[[]]],[11,"try_from","","",2991,[[],["result",4]]],[11,"into","","",2991,[[]]],[11,"try_into","","",2991,[[],["result",4]]],[11,"type_id","","",2991,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::intenset","",2994,[[]]],[11,"borrow","","",2994,[[]]],[11,"borrow_mut","","",2994,[[]]],[11,"try_from","","",2994,[[],["result",4]]],[11,"into","","",2994,[[]]],[11,"try_into","","",2994,[[],["result",4]]],[11,"type_id","","",2994,[[],["typeid",3]]],[11,"from","","",2995,[[]]],[11,"borrow","","",2995,[[]]],[11,"borrow_mut","","",2995,[[]]],[11,"try_from","","",2995,[[],["result",4]]],[11,"into","","",2995,[[]]],[11,"try_into","","",2995,[[],["result",4]]],[11,"type_id","","",2995,[[],["typeid",3]]],[11,"from","","",2996,[[]]],[11,"borrow","","",2996,[[]]],[11,"borrow_mut","","",2996,[[]]],[11,"try_from","","",2996,[[],["result",4]]],[11,"into","","",2996,[[]]],[11,"try_into","","",2996,[[],["result",4]]],[11,"type_id","","",2996,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::intflag","",2999,[[]]],[11,"borrow","","",2999,[[]]],[11,"borrow_mut","","",2999,[[]]],[11,"try_from","","",2999,[[],["result",4]]],[11,"into","","",2999,[[]]],[11,"try_into","","",2999,[[],["result",4]]],[11,"type_id","","",2999,[[],["typeid",3]]],[11,"from","","",3000,[[]]],[11,"borrow","","",3000,[[]]],[11,"borrow_mut","","",3000,[[]]],[11,"try_from","","",3000,[[],["result",4]]],[11,"into","","",3000,[[]]],[11,"try_into","","",3000,[[],["result",4]]],[11,"type_id","","",3000,[[],["typeid",3]]],[11,"from","","",3001,[[]]],[11,"borrow","","",3001,[[]]],[11,"borrow_mut","","",3001,[[]]],[11,"try_from","","",3001,[[],["result",4]]],[11,"into","","",3001,[[]]],[11,"try_into","","",3001,[[],["result",4]]],[11,"type_id","","",3001,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::status","",3004,[[]]],[11,"borrow","","",3004,[[]]],[11,"borrow_mut","","",3004,[[]]],[11,"try_from","","",3004,[[],["result",4]]],[11,"into","","",3004,[[]]],[11,"try_into","","",3004,[[],["result",4]]],[11,"type_id","","",3004,[[],["typeid",3]]],[11,"from","","",3005,[[]]],[11,"borrow","","",3005,[[]]],[11,"borrow_mut","","",3005,[[]]],[11,"try_from","","",3005,[[],["result",4]]],[11,"into","","",3005,[[]]],[11,"try_into","","",3005,[[],["result",4]]],[11,"type_id","","",3005,[[],["typeid",3]]],[11,"from","","",3006,[[]]],[11,"borrow","","",3006,[[]]],[11,"borrow_mut","","",3006,[[]]],[11,"try_from","","",3006,[[],["result",4]]],[11,"into","","",3006,[[]]],[11,"try_into","","",3006,[[],["result",4]]],[11,"type_id","","",3006,[[],["typeid",3]]],[11,"from","","",3007,[[]]],[11,"borrow","","",3007,[[]]],[11,"borrow_mut","","",3007,[[]]],[11,"try_from","","",3007,[[],["result",4]]],[11,"into","","",3007,[[]]],[11,"try_into","","",3007,[[],["result",4]]],[11,"type_id","","",3007,[[],["typeid",3]]],[11,"from","","",3008,[[]]],[11,"borrow","","",3008,[[]]],[11,"borrow_mut","","",3008,[[]]],[11,"try_from","","",3008,[[],["result",4]]],[11,"into","","",3008,[[]]],[11,"try_into","","",3008,[[],["result",4]]],[11,"type_id","","",3008,[[],["typeid",3]]],[11,"from","","",3009,[[]]],[11,"borrow","","",3009,[[]]],[11,"borrow_mut","","",3009,[[]]],[11,"try_from","","",3009,[[],["result",4]]],[11,"into","","",3009,[[]]],[11,"try_into","","",3009,[[],["result",4]]],[11,"type_id","","",3009,[[],["typeid",3]]],[11,"from","","",3010,[[]]],[11,"borrow","","",3010,[[]]],[11,"borrow_mut","","",3010,[[]]],[11,"try_from","","",3010,[[],["result",4]]],[11,"into","","",3010,[[]]],[11,"try_into","","",3010,[[],["result",4]]],[11,"type_id","","",3010,[[],["typeid",3]]],[11,"from","","",3011,[[]]],[11,"borrow","","",3011,[[]]],[11,"borrow_mut","","",3011,[[]]],[11,"try_from","","",3011,[[],["result",4]]],[11,"into","","",3011,[[]]],[11,"try_into","","",3011,[[],["result",4]]],[11,"type_id","","",3011,[[],["typeid",3]]],[11,"from","","",3012,[[]]],[11,"borrow","","",3012,[[]]],[11,"borrow_mut","","",3012,[[]]],[11,"try_from","","",3012,[[],["result",4]]],[11,"into","","",3012,[[]]],[11,"try_into","","",3012,[[],["result",4]]],[11,"type_id","","",3012,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::addr","",3016,[[]]],[11,"borrow","","",3016,[[]]],[11,"borrow_mut","","",3016,[[]]],[11,"try_from","","",3016,[[],["result",4]]],[11,"into","","",3016,[[]]],[11,"try_into","","",3016,[[],["result",4]]],[11,"type_id","","",3016,[[],["typeid",3]]],[11,"from","","",3017,[[]]],[11,"borrow","","",3017,[[]]],[11,"borrow_mut","","",3017,[[]]],[11,"try_from","","",3017,[[],["result",4]]],[11,"into","","",3017,[[]]],[11,"try_into","","",3017,[[],["result",4]]],[11,"type_id","","",3017,[[],["typeid",3]]],[11,"from","","",3018,[[]]],[11,"borrow","","",3018,[[]]],[11,"borrow_mut","","",3018,[[]]],[11,"try_from","","",3018,[[],["result",4]]],[11,"into","","",3018,[[]]],[11,"try_into","","",3018,[[],["result",4]]],[11,"type_id","","",3018,[[],["typeid",3]]],[11,"from","","",3019,[[]]],[11,"borrow","","",3019,[[]]],[11,"borrow_mut","","",3019,[[]]],[11,"try_from","","",3019,[[],["result",4]]],[11,"into","","",3019,[[]]],[11,"try_into","","",3019,[[],["result",4]]],[11,"type_id","","",3019,[[],["typeid",3]]],[11,"from","","",3020,[[]]],[11,"borrow","","",3020,[[]]],[11,"borrow_mut","","",3020,[[]]],[11,"try_from","","",3020,[[],["result",4]]],[11,"into","","",3020,[[]]],[11,"try_into","","",3020,[[],["result",4]]],[11,"type_id","","",3020,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::data","",3023,[[]]],[11,"borrow","","",3023,[[]]],[11,"borrow_mut","","",3023,[[]]],[11,"try_from","","",3023,[[],["result",4]]],[11,"into","","",3023,[[]]],[11,"try_into","","",3023,[[],["result",4]]],[11,"type_id","","",3023,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cm::dbgctrl","",3026,[[]]],[11,"borrow","","",3026,[[]]],[11,"borrow_mut","","",3026,[[]]],[11,"try_from","","",3026,[[],["result",4]]],[11,"into","","",3026,[[]]],[11,"try_into","","",3026,[[],["result",4]]],[11,"type_id","","",3026,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::ctrla","",3032,[[]]],[11,"borrow","","",3032,[[]]],[11,"borrow_mut","","",3032,[[]]],[11,"try_from","","",3032,[[],["result",4]]],[11,"into","","",3032,[[]]],[11,"try_into","","",3032,[[],["result",4]]],[11,"type_id","","",3032,[[],["typeid",3]]],[11,"from","","",3033,[[]]],[11,"borrow","","",3033,[[]]],[11,"borrow_mut","","",3033,[[]]],[11,"try_from","","",3033,[[],["result",4]]],[11,"into","","",3033,[[]]],[11,"try_into","","",3033,[[],["result",4]]],[11,"type_id","","",3033,[[],["typeid",3]]],[11,"from","","",3035,[[]]],[11,"borrow","","",3035,[[]]],[11,"borrow_mut","","",3035,[[]]],[11,"try_from","","",3035,[[],["result",4]]],[11,"into","","",3035,[[]]],[11,"try_into","","",3035,[[],["result",4]]],[11,"type_id","","",3035,[[],["typeid",3]]],[11,"from","","",3036,[[]]],[11,"borrow","","",3036,[[]]],[11,"borrow_mut","","",3036,[[]]],[11,"try_from","","",3036,[[],["result",4]]],[11,"into","","",3036,[[]]],[11,"try_into","","",3036,[[],["result",4]]],[11,"type_id","","",3036,[[],["typeid",3]]],[11,"from","","",3037,[[]]],[11,"borrow","","",3037,[[]]],[11,"borrow_mut","","",3037,[[]]],[11,"try_from","","",3037,[[],["result",4]]],[11,"into","","",3037,[[]]],[11,"try_into","","",3037,[[],["result",4]]],[11,"type_id","","",3037,[[],["typeid",3]]],[11,"from","","",3039,[[]]],[11,"borrow","","",3039,[[]]],[11,"borrow_mut","","",3039,[[]]],[11,"try_from","","",3039,[[],["result",4]]],[11,"into","","",3039,[[]]],[11,"try_into","","",3039,[[],["result",4]]],[11,"type_id","","",3039,[[],["typeid",3]]],[11,"from","","",3040,[[]]],[11,"borrow","","",3040,[[]]],[11,"borrow_mut","","",3040,[[]]],[11,"try_from","","",3040,[[],["result",4]]],[11,"into","","",3040,[[]]],[11,"try_into","","",3040,[[],["result",4]]],[11,"type_id","","",3040,[[],["typeid",3]]],[11,"from","","",3042,[[]]],[11,"borrow","","",3042,[[]]],[11,"borrow_mut","","",3042,[[]]],[11,"try_from","","",3042,[[],["result",4]]],[11,"into","","",3042,[[]]],[11,"try_into","","",3042,[[],["result",4]]],[11,"type_id","","",3042,[[],["typeid",3]]],[11,"from","","",3043,[[]]],[11,"borrow","","",3043,[[]]],[11,"borrow_mut","","",3043,[[]]],[11,"try_from","","",3043,[[],["result",4]]],[11,"into","","",3043,[[]]],[11,"try_into","","",3043,[[],["result",4]]],[11,"type_id","","",3043,[[],["typeid",3]]],[11,"from","","",3044,[[]]],[11,"borrow","","",3044,[[]]],[11,"borrow_mut","","",3044,[[]]],[11,"try_from","","",3044,[[],["result",4]]],[11,"into","","",3044,[[]]],[11,"try_into","","",3044,[[],["result",4]]],[11,"type_id","","",3044,[[],["typeid",3]]],[11,"from","","",3029,[[]]],[11,"borrow","","",3029,[[]]],[11,"borrow_mut","","",3029,[[]]],[11,"try_from","","",3029,[[],["result",4]]],[11,"into","","",3029,[[]]],[11,"try_into","","",3029,[[],["result",4]]],[11,"type_id","","",3029,[[],["typeid",3]]],[11,"from","","",3030,[[]]],[11,"borrow","","",3030,[[]]],[11,"borrow_mut","","",3030,[[]]],[11,"try_from","","",3030,[[],["result",4]]],[11,"into","","",3030,[[]]],[11,"try_into","","",3030,[[],["result",4]]],[11,"type_id","","",3030,[[],["typeid",3]]],[11,"from","","",3031,[[]]],[11,"borrow","","",3031,[[]]],[11,"borrow_mut","","",3031,[[]]],[11,"try_from","","",3031,[[],["result",4]]],[11,"into","","",3031,[[]]],[11,"try_into","","",3031,[[],["result",4]]],[11,"type_id","","",3031,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::ctrlb","",3047,[[]]],[11,"borrow","","",3047,[[]]],[11,"borrow_mut","","",3047,[[]]],[11,"try_from","","",3047,[[],["result",4]]],[11,"into","","",3047,[[]]],[11,"try_into","","",3047,[[],["result",4]]],[11,"type_id","","",3047,[[],["typeid",3]]],[11,"from","","",3048,[[]]],[11,"borrow","","",3048,[[]]],[11,"borrow_mut","","",3048,[[]]],[11,"try_from","","",3048,[[],["result",4]]],[11,"into","","",3048,[[]]],[11,"try_into","","",3048,[[],["result",4]]],[11,"type_id","","",3048,[[],["typeid",3]]],[11,"from","","",3049,[[]]],[11,"borrow","","",3049,[[]]],[11,"borrow_mut","","",3049,[[]]],[11,"try_from","","",3049,[[],["result",4]]],[11,"into","","",3049,[[]]],[11,"try_into","","",3049,[[],["result",4]]],[11,"type_id","","",3049,[[],["typeid",3]]],[11,"from","","",3050,[[]]],[11,"borrow","","",3050,[[]]],[11,"borrow_mut","","",3050,[[]]],[11,"try_from","","",3050,[[],["result",4]]],[11,"into","","",3050,[[]]],[11,"try_into","","",3050,[[],["result",4]]],[11,"type_id","","",3050,[[],["typeid",3]]],[11,"from","","",3051,[[]]],[11,"borrow","","",3051,[[]]],[11,"borrow_mut","","",3051,[[]]],[11,"try_from","","",3051,[[],["result",4]]],[11,"into","","",3051,[[]]],[11,"try_into","","",3051,[[],["result",4]]],[11,"type_id","","",3051,[[],["typeid",3]]],[11,"from","","",3052,[[]]],[11,"borrow","","",3052,[[]]],[11,"borrow_mut","","",3052,[[]]],[11,"try_from","","",3052,[[],["result",4]]],[11,"into","","",3052,[[]]],[11,"try_into","","",3052,[[],["result",4]]],[11,"type_id","","",3052,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::ctrlc","",3056,[[]]],[11,"borrow","","",3056,[[]]],[11,"borrow_mut","","",3056,[[]]],[11,"try_from","","",3056,[[],["result",4]]],[11,"into","","",3056,[[]]],[11,"try_into","","",3056,[[],["result",4]]],[11,"type_id","","",3056,[[],["typeid",3]]],[11,"from","","",3058,[[]]],[11,"borrow","","",3058,[[]]],[11,"borrow_mut","","",3058,[[]]],[11,"try_from","","",3058,[[],["result",4]]],[11,"into","","",3058,[[]]],[11,"try_into","","",3058,[[],["result",4]]],[11,"type_id","","",3058,[[],["typeid",3]]],[11,"from","","",3055,[[]]],[11,"borrow","","",3055,[[]]],[11,"borrow_mut","","",3055,[[]]],[11,"try_from","","",3055,[[],["result",4]]],[11,"into","","",3055,[[]]],[11,"try_into","","",3055,[[],["result",4]]],[11,"type_id","","",3055,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::intenclr","",3061,[[]]],[11,"borrow","","",3061,[[]]],[11,"borrow_mut","","",3061,[[]]],[11,"try_from","","",3061,[[],["result",4]]],[11,"into","","",3061,[[]]],[11,"try_into","","",3061,[[],["result",4]]],[11,"type_id","","",3061,[[],["typeid",3]]],[11,"from","","",3062,[[]]],[11,"borrow","","",3062,[[]]],[11,"borrow_mut","","",3062,[[]]],[11,"try_from","","",3062,[[],["result",4]]],[11,"into","","",3062,[[]]],[11,"try_into","","",3062,[[],["result",4]]],[11,"type_id","","",3062,[[],["typeid",3]]],[11,"from","","",3063,[[]]],[11,"borrow","","",3063,[[]]],[11,"borrow_mut","","",3063,[[]]],[11,"try_from","","",3063,[[],["result",4]]],[11,"into","","",3063,[[]]],[11,"try_into","","",3063,[[],["result",4]]],[11,"type_id","","",3063,[[],["typeid",3]]],[11,"from","","",3064,[[]]],[11,"borrow","","",3064,[[]]],[11,"borrow_mut","","",3064,[[]]],[11,"try_from","","",3064,[[],["result",4]]],[11,"into","","",3064,[[]]],[11,"try_into","","",3064,[[],["result",4]]],[11,"type_id","","",3064,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::intenset","",3067,[[]]],[11,"borrow","","",3067,[[]]],[11,"borrow_mut","","",3067,[[]]],[11,"try_from","","",3067,[[],["result",4]]],[11,"into","","",3067,[[]]],[11,"try_into","","",3067,[[],["result",4]]],[11,"type_id","","",3067,[[],["typeid",3]]],[11,"from","","",3068,[[]]],[11,"borrow","","",3068,[[]]],[11,"borrow_mut","","",3068,[[]]],[11,"try_from","","",3068,[[],["result",4]]],[11,"into","","",3068,[[]]],[11,"try_into","","",3068,[[],["result",4]]],[11,"type_id","","",3068,[[],["typeid",3]]],[11,"from","","",3069,[[]]],[11,"borrow","","",3069,[[]]],[11,"borrow_mut","","",3069,[[]]],[11,"try_from","","",3069,[[],["result",4]]],[11,"into","","",3069,[[]]],[11,"try_into","","",3069,[[],["result",4]]],[11,"type_id","","",3069,[[],["typeid",3]]],[11,"from","","",3070,[[]]],[11,"borrow","","",3070,[[]]],[11,"borrow_mut","","",3070,[[]]],[11,"try_from","","",3070,[[],["result",4]]],[11,"into","","",3070,[[]]],[11,"try_into","","",3070,[[],["result",4]]],[11,"type_id","","",3070,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::intflag","",3073,[[]]],[11,"borrow","","",3073,[[]]],[11,"borrow_mut","","",3073,[[]]],[11,"try_from","","",3073,[[],["result",4]]],[11,"into","","",3073,[[]]],[11,"try_into","","",3073,[[],["result",4]]],[11,"type_id","","",3073,[[],["typeid",3]]],[11,"from","","",3074,[[]]],[11,"borrow","","",3074,[[]]],[11,"borrow_mut","","",3074,[[]]],[11,"try_from","","",3074,[[],["result",4]]],[11,"into","","",3074,[[]]],[11,"try_into","","",3074,[[],["result",4]]],[11,"type_id","","",3074,[[],["typeid",3]]],[11,"from","","",3075,[[]]],[11,"borrow","","",3075,[[]]],[11,"borrow_mut","","",3075,[[]]],[11,"try_from","","",3075,[[],["result",4]]],[11,"into","","",3075,[[]]],[11,"try_into","","",3075,[[],["result",4]]],[11,"type_id","","",3075,[[],["typeid",3]]],[11,"from","","",3076,[[]]],[11,"borrow","","",3076,[[]]],[11,"borrow_mut","","",3076,[[]]],[11,"try_from","","",3076,[[],["result",4]]],[11,"into","","",3076,[[]]],[11,"try_into","","",3076,[[],["result",4]]],[11,"type_id","","",3076,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::status","",3079,[[]]],[11,"borrow","","",3079,[[]]],[11,"borrow_mut","","",3079,[[]]],[11,"try_from","","",3079,[[],["result",4]]],[11,"into","","",3079,[[]]],[11,"try_into","","",3079,[[],["result",4]]],[11,"type_id","","",3079,[[],["typeid",3]]],[11,"from","","",3080,[[]]],[11,"borrow","","",3080,[[]]],[11,"borrow_mut","","",3080,[[]]],[11,"try_from","","",3080,[[],["result",4]]],[11,"into","","",3080,[[]]],[11,"try_into","","",3080,[[],["result",4]]],[11,"type_id","","",3080,[[],["typeid",3]]],[11,"from","","",3081,[[]]],[11,"borrow","","",3081,[[]]],[11,"borrow_mut","","",3081,[[]]],[11,"try_from","","",3081,[[],["result",4]]],[11,"into","","",3081,[[]]],[11,"try_into","","",3081,[[],["result",4]]],[11,"type_id","","",3081,[[],["typeid",3]]],[11,"from","","",3082,[[]]],[11,"borrow","","",3082,[[]]],[11,"borrow_mut","","",3082,[[]]],[11,"try_from","","",3082,[[],["result",4]]],[11,"into","","",3082,[[]]],[11,"try_into","","",3082,[[],["result",4]]],[11,"type_id","","",3082,[[],["typeid",3]]],[11,"from","","",3083,[[]]],[11,"borrow","","",3083,[[]]],[11,"borrow_mut","","",3083,[[]]],[11,"try_from","","",3083,[[],["result",4]]],[11,"into","","",3083,[[]]],[11,"try_into","","",3083,[[],["result",4]]],[11,"type_id","","",3083,[[],["typeid",3]]],[11,"from","","",3084,[[]]],[11,"borrow","","",3084,[[]]],[11,"borrow_mut","","",3084,[[]]],[11,"try_from","","",3084,[[],["result",4]]],[11,"into","","",3084,[[]]],[11,"try_into","","",3084,[[],["result",4]]],[11,"type_id","","",3084,[[],["typeid",3]]],[11,"from","","",3085,[[]]],[11,"borrow","","",3085,[[]]],[11,"borrow_mut","","",3085,[[]]],[11,"try_from","","",3085,[[],["result",4]]],[11,"into","","",3085,[[]]],[11,"try_into","","",3085,[[],["result",4]]],[11,"type_id","","",3085,[[],["typeid",3]]],[11,"from","","",3086,[[]]],[11,"borrow","","",3086,[[]]],[11,"borrow_mut","","",3086,[[]]],[11,"try_from","","",3086,[[],["result",4]]],[11,"into","","",3086,[[]]],[11,"try_into","","",3086,[[],["result",4]]],[11,"type_id","","",3086,[[],["typeid",3]]],[11,"from","","",3087,[[]]],[11,"borrow","","",3087,[[]]],[11,"borrow_mut","","",3087,[[]]],[11,"try_from","","",3087,[[],["result",4]]],[11,"into","","",3087,[[]]],[11,"try_into","","",3087,[[],["result",4]]],[11,"type_id","","",3087,[[],["typeid",3]]],[11,"from","","",3088,[[]]],[11,"borrow","","",3088,[[]]],[11,"borrow_mut","","",3088,[[]]],[11,"try_from","","",3088,[[],["result",4]]],[11,"into","","",3088,[[]]],[11,"try_into","","",3088,[[],["result",4]]],[11,"type_id","","",3088,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::length","",3092,[[]]],[11,"borrow","","",3092,[[]]],[11,"borrow_mut","","",3092,[[]]],[11,"try_from","","",3092,[[],["result",4]]],[11,"into","","",3092,[[]]],[11,"try_into","","",3092,[[],["result",4]]],[11,"type_id","","",3092,[[],["typeid",3]]],[11,"from","","",3093,[[]]],[11,"borrow","","",3093,[[]]],[11,"borrow_mut","","",3093,[[]]],[11,"try_from","","",3093,[[],["result",4]]],[11,"into","","",3093,[[]]],[11,"try_into","","",3093,[[],["result",4]]],[11,"type_id","","",3093,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::addr","",3096,[[]]],[11,"borrow","","",3096,[[]]],[11,"borrow_mut","","",3096,[[]]],[11,"try_from","","",3096,[[],["result",4]]],[11,"into","","",3096,[[]]],[11,"try_into","","",3096,[[],["result",4]]],[11,"type_id","","",3096,[[],["typeid",3]]],[11,"from","","",3097,[[]]],[11,"borrow","","",3097,[[]]],[11,"borrow_mut","","",3097,[[]]],[11,"try_from","","",3097,[[],["result",4]]],[11,"into","","",3097,[[]]],[11,"try_into","","",3097,[[],["result",4]]],[11,"type_id","","",3097,[[],["typeid",3]]],[11,"from","","",3098,[[]]],[11,"borrow","","",3098,[[]]],[11,"borrow_mut","","",3098,[[]]],[11,"try_from","","",3098,[[],["result",4]]],[11,"into","","",3098,[[]]],[11,"try_into","","",3098,[[],["result",4]]],[11,"type_id","","",3098,[[],["typeid",3]]],[11,"from","","",3099,[[]]],[11,"borrow","","",3099,[[]]],[11,"borrow_mut","","",3099,[[]]],[11,"try_from","","",3099,[[],["result",4]]],[11,"into","","",3099,[[]]],[11,"try_into","","",3099,[[],["result",4]]],[11,"type_id","","",3099,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::i2cs::data","",3102,[[]]],[11,"borrow","","",3102,[[]]],[11,"borrow_mut","","",3102,[[]]],[11,"try_from","","",3102,[[],["result",4]]],[11,"into","","",3102,[[]]],[11,"try_into","","",3102,[[],["result",4]]],[11,"type_id","","",3102,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::ctrla","",3112,[[]]],[11,"borrow","","",3112,[[]]],[11,"borrow_mut","","",3112,[[]]],[11,"try_from","","",3112,[[],["result",4]]],[11,"into","","",3112,[[]]],[11,"try_into","","",3112,[[],["result",4]]],[11,"type_id","","",3112,[[],["typeid",3]]],[11,"from","","",3113,[[]]],[11,"borrow","","",3113,[[]]],[11,"borrow_mut","","",3113,[[]]],[11,"try_from","","",3113,[[],["result",4]]],[11,"into","","",3113,[[]]],[11,"try_into","","",3113,[[],["result",4]]],[11,"type_id","","",3113,[[],["typeid",3]]],[11,"from","","",3115,[[]]],[11,"borrow","","",3115,[[]]],[11,"borrow_mut","","",3115,[[]]],[11,"try_from","","",3115,[[],["result",4]]],[11,"into","","",3115,[[]]],[11,"try_into","","",3115,[[],["result",4]]],[11,"type_id","","",3115,[[],["typeid",3]]],[11,"from","","",3116,[[]]],[11,"borrow","","",3116,[[]]],[11,"borrow_mut","","",3116,[[]]],[11,"try_from","","",3116,[[],["result",4]]],[11,"into","","",3116,[[]]],[11,"try_into","","",3116,[[],["result",4]]],[11,"type_id","","",3116,[[],["typeid",3]]],[11,"from","","",3117,[[]]],[11,"borrow","","",3117,[[]]],[11,"borrow_mut","","",3117,[[]]],[11,"try_from","","",3117,[[],["result",4]]],[11,"into","","",3117,[[]]],[11,"try_into","","",3117,[[],["result",4]]],[11,"type_id","","",3117,[[],["typeid",3]]],[11,"from","","",3119,[[]]],[11,"borrow","","",3119,[[]]],[11,"borrow_mut","","",3119,[[]]],[11,"try_from","","",3119,[[],["result",4]]],[11,"into","","",3119,[[]]],[11,"try_into","","",3119,[[],["result",4]]],[11,"type_id","","",3119,[[],["typeid",3]]],[11,"from","","",3121,[[]]],[11,"borrow","","",3121,[[]]],[11,"borrow_mut","","",3121,[[]]],[11,"try_from","","",3121,[[],["result",4]]],[11,"into","","",3121,[[]]],[11,"try_into","","",3121,[[],["result",4]]],[11,"type_id","","",3121,[[],["typeid",3]]],[11,"from","","",3123,[[]]],[11,"borrow","","",3123,[[]]],[11,"borrow_mut","","",3123,[[]]],[11,"try_from","","",3123,[[],["result",4]]],[11,"into","","",3123,[[]]],[11,"try_into","","",3123,[[],["result",4]]],[11,"type_id","","",3123,[[],["typeid",3]]],[11,"from","","",3125,[[]]],[11,"borrow","","",3125,[[]]],[11,"borrow_mut","","",3125,[[]]],[11,"try_from","","",3125,[[],["result",4]]],[11,"into","","",3125,[[]]],[11,"try_into","","",3125,[[],["result",4]]],[11,"type_id","","",3125,[[],["typeid",3]]],[11,"from","","",3127,[[]]],[11,"borrow","","",3127,[[]]],[11,"borrow_mut","","",3127,[[]]],[11,"try_from","","",3127,[[],["result",4]]],[11,"into","","",3127,[[]]],[11,"try_into","","",3127,[[],["result",4]]],[11,"type_id","","",3127,[[],["typeid",3]]],[11,"from","","",3129,[[]]],[11,"borrow","","",3129,[[]]],[11,"borrow_mut","","",3129,[[]]],[11,"try_from","","",3129,[[],["result",4]]],[11,"into","","",3129,[[]]],[11,"try_into","","",3129,[[],["result",4]]],[11,"type_id","","",3129,[[],["typeid",3]]],[11,"from","","",3105,[[]]],[11,"borrow","","",3105,[[]]],[11,"borrow_mut","","",3105,[[]]],[11,"try_from","","",3105,[[],["result",4]]],[11,"into","","",3105,[[]]],[11,"try_into","","",3105,[[],["result",4]]],[11,"type_id","","",3105,[[],["typeid",3]]],[11,"from","","",3106,[[]]],[11,"borrow","","",3106,[[]]],[11,"borrow_mut","","",3106,[[]]],[11,"try_from","","",3106,[[],["result",4]]],[11,"into","","",3106,[[]]],[11,"try_into","","",3106,[[],["result",4]]],[11,"type_id","","",3106,[[],["typeid",3]]],[11,"from","","",3107,[[]]],[11,"borrow","","",3107,[[]]],[11,"borrow_mut","","",3107,[[]]],[11,"try_from","","",3107,[[],["result",4]]],[11,"into","","",3107,[[]]],[11,"try_into","","",3107,[[],["result",4]]],[11,"type_id","","",3107,[[],["typeid",3]]],[11,"from","","",3108,[[]]],[11,"borrow","","",3108,[[]]],[11,"borrow_mut","","",3108,[[]]],[11,"try_from","","",3108,[[],["result",4]]],[11,"into","","",3108,[[]]],[11,"try_into","","",3108,[[],["result",4]]],[11,"type_id","","",3108,[[],["typeid",3]]],[11,"from","","",3109,[[]]],[11,"borrow","","",3109,[[]]],[11,"borrow_mut","","",3109,[[]]],[11,"try_from","","",3109,[[],["result",4]]],[11,"into","","",3109,[[]]],[11,"try_into","","",3109,[[],["result",4]]],[11,"type_id","","",3109,[[],["typeid",3]]],[11,"from","","",3110,[[]]],[11,"borrow","","",3110,[[]]],[11,"borrow_mut","","",3110,[[]]],[11,"try_from","","",3110,[[],["result",4]]],[11,"into","","",3110,[[]]],[11,"try_into","","",3110,[[],["result",4]]],[11,"type_id","","",3110,[[],["typeid",3]]],[11,"from","","",3111,[[]]],[11,"borrow","","",3111,[[]]],[11,"borrow_mut","","",3111,[[]]],[11,"try_from","","",3111,[[],["result",4]]],[11,"into","","",3111,[[]]],[11,"try_into","","",3111,[[],["result",4]]],[11,"type_id","","",3111,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::ctrlb","",3135,[[]]],[11,"borrow","","",3135,[[]]],[11,"borrow_mut","","",3135,[[]]],[11,"try_from","","",3135,[[],["result",4]]],[11,"into","","",3135,[[]]],[11,"try_into","","",3135,[[],["result",4]]],[11,"type_id","","",3135,[[],["typeid",3]]],[11,"from","","",3136,[[]]],[11,"borrow","","",3136,[[]]],[11,"borrow_mut","","",3136,[[]]],[11,"try_from","","",3136,[[],["result",4]]],[11,"into","","",3136,[[]]],[11,"try_into","","",3136,[[],["result",4]]],[11,"type_id","","",3136,[[],["typeid",3]]],[11,"from","","",3137,[[]]],[11,"borrow","","",3137,[[]]],[11,"borrow_mut","","",3137,[[]]],[11,"try_from","","",3137,[[],["result",4]]],[11,"into","","",3137,[[]]],[11,"try_into","","",3137,[[],["result",4]]],[11,"type_id","","",3137,[[],["typeid",3]]],[11,"from","","",3138,[[]]],[11,"borrow","","",3138,[[]]],[11,"borrow_mut","","",3138,[[]]],[11,"try_from","","",3138,[[],["result",4]]],[11,"into","","",3138,[[]]],[11,"try_into","","",3138,[[],["result",4]]],[11,"type_id","","",3138,[[],["typeid",3]]],[11,"from","","",3140,[[]]],[11,"borrow","","",3140,[[]]],[11,"borrow_mut","","",3140,[[]]],[11,"try_from","","",3140,[[],["result",4]]],[11,"into","","",3140,[[]]],[11,"try_into","","",3140,[[],["result",4]]],[11,"type_id","","",3140,[[],["typeid",3]]],[11,"from","","",3141,[[]]],[11,"borrow","","",3141,[[]]],[11,"borrow_mut","","",3141,[[]]],[11,"try_from","","",3141,[[],["result",4]]],[11,"into","","",3141,[[]]],[11,"try_into","","",3141,[[],["result",4]]],[11,"type_id","","",3141,[[],["typeid",3]]],[11,"from","","",3132,[[]]],[11,"borrow","","",3132,[[]]],[11,"borrow_mut","","",3132,[[]]],[11,"try_from","","",3132,[[],["result",4]]],[11,"into","","",3132,[[]]],[11,"try_into","","",3132,[[],["result",4]]],[11,"type_id","","",3132,[[],["typeid",3]]],[11,"from","","",3133,[[]]],[11,"borrow","","",3133,[[]]],[11,"borrow_mut","","",3133,[[]]],[11,"try_from","","",3133,[[],["result",4]]],[11,"into","","",3133,[[]]],[11,"try_into","","",3133,[[],["result",4]]],[11,"type_id","","",3133,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::ctrlc","",3145,[[]]],[11,"borrow","","",3145,[[]]],[11,"borrow_mut","","",3145,[[]]],[11,"try_from","","",3145,[[],["result",4]]],[11,"into","","",3145,[[]]],[11,"try_into","","",3145,[[],["result",4]]],[11,"type_id","","",3145,[[],["typeid",3]]],[11,"from","","",3147,[[]]],[11,"borrow","","",3147,[[]]],[11,"borrow_mut","","",3147,[[]]],[11,"try_from","","",3147,[[],["result",4]]],[11,"into","","",3147,[[]]],[11,"try_into","","",3147,[[],["result",4]]],[11,"type_id","","",3147,[[],["typeid",3]]],[11,"from","","",3144,[[]]],[11,"borrow","","",3144,[[]]],[11,"borrow_mut","","",3144,[[]]],[11,"try_from","","",3144,[[],["result",4]]],[11,"into","","",3144,[[]]],[11,"try_into","","",3144,[[],["result",4]]],[11,"type_id","","",3144,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::baud","",3150,[[]]],[11,"borrow","","",3150,[[]]],[11,"borrow_mut","","",3150,[[]]],[11,"try_from","","",3150,[[],["result",4]]],[11,"into","","",3150,[[]]],[11,"try_into","","",3150,[[],["result",4]]],[11,"type_id","","",3150,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::intenclr","",3153,[[]]],[11,"borrow","","",3153,[[]]],[11,"borrow_mut","","",3153,[[]]],[11,"try_from","","",3153,[[],["result",4]]],[11,"into","","",3153,[[]]],[11,"try_into","","",3153,[[],["result",4]]],[11,"type_id","","",3153,[[],["typeid",3]]],[11,"from","","",3154,[[]]],[11,"borrow","","",3154,[[]]],[11,"borrow_mut","","",3154,[[]]],[11,"try_from","","",3154,[[],["result",4]]],[11,"into","","",3154,[[]]],[11,"try_into","","",3154,[[],["result",4]]],[11,"type_id","","",3154,[[],["typeid",3]]],[11,"from","","",3155,[[]]],[11,"borrow","","",3155,[[]]],[11,"borrow_mut","","",3155,[[]]],[11,"try_from","","",3155,[[],["result",4]]],[11,"into","","",3155,[[]]],[11,"try_into","","",3155,[[],["result",4]]],[11,"type_id","","",3155,[[],["typeid",3]]],[11,"from","","",3156,[[]]],[11,"borrow","","",3156,[[]]],[11,"borrow_mut","","",3156,[[]]],[11,"try_from","","",3156,[[],["result",4]]],[11,"into","","",3156,[[]]],[11,"try_into","","",3156,[[],["result",4]]],[11,"type_id","","",3156,[[],["typeid",3]]],[11,"from","","",3157,[[]]],[11,"borrow","","",3157,[[]]],[11,"borrow_mut","","",3157,[[]]],[11,"try_from","","",3157,[[],["result",4]]],[11,"into","","",3157,[[]]],[11,"try_into","","",3157,[[],["result",4]]],[11,"type_id","","",3157,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::intenset","",3160,[[]]],[11,"borrow","","",3160,[[]]],[11,"borrow_mut","","",3160,[[]]],[11,"try_from","","",3160,[[],["result",4]]],[11,"into","","",3160,[[]]],[11,"try_into","","",3160,[[],["result",4]]],[11,"type_id","","",3160,[[],["typeid",3]]],[11,"from","","",3161,[[]]],[11,"borrow","","",3161,[[]]],[11,"borrow_mut","","",3161,[[]]],[11,"try_from","","",3161,[[],["result",4]]],[11,"into","","",3161,[[]]],[11,"try_into","","",3161,[[],["result",4]]],[11,"type_id","","",3161,[[],["typeid",3]]],[11,"from","","",3162,[[]]],[11,"borrow","","",3162,[[]]],[11,"borrow_mut","","",3162,[[]]],[11,"try_from","","",3162,[[],["result",4]]],[11,"into","","",3162,[[]]],[11,"try_into","","",3162,[[],["result",4]]],[11,"type_id","","",3162,[[],["typeid",3]]],[11,"from","","",3163,[[]]],[11,"borrow","","",3163,[[]]],[11,"borrow_mut","","",3163,[[]]],[11,"try_from","","",3163,[[],["result",4]]],[11,"into","","",3163,[[]]],[11,"try_into","","",3163,[[],["result",4]]],[11,"type_id","","",3163,[[],["typeid",3]]],[11,"from","","",3164,[[]]],[11,"borrow","","",3164,[[]]],[11,"borrow_mut","","",3164,[[]]],[11,"try_from","","",3164,[[],["result",4]]],[11,"into","","",3164,[[]]],[11,"try_into","","",3164,[[],["result",4]]],[11,"type_id","","",3164,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::intflag","",3167,[[]]],[11,"borrow","","",3167,[[]]],[11,"borrow_mut","","",3167,[[]]],[11,"try_from","","",3167,[[],["result",4]]],[11,"into","","",3167,[[]]],[11,"try_into","","",3167,[[],["result",4]]],[11,"type_id","","",3167,[[],["typeid",3]]],[11,"from","","",3168,[[]]],[11,"borrow","","",3168,[[]]],[11,"borrow_mut","","",3168,[[]]],[11,"try_from","","",3168,[[],["result",4]]],[11,"into","","",3168,[[]]],[11,"try_into","","",3168,[[],["result",4]]],[11,"type_id","","",3168,[[],["typeid",3]]],[11,"from","","",3169,[[]]],[11,"borrow","","",3169,[[]]],[11,"borrow_mut","","",3169,[[]]],[11,"try_from","","",3169,[[],["result",4]]],[11,"into","","",3169,[[]]],[11,"try_into","","",3169,[[],["result",4]]],[11,"type_id","","",3169,[[],["typeid",3]]],[11,"from","","",3170,[[]]],[11,"borrow","","",3170,[[]]],[11,"borrow_mut","","",3170,[[]]],[11,"try_from","","",3170,[[],["result",4]]],[11,"into","","",3170,[[]]],[11,"try_into","","",3170,[[],["result",4]]],[11,"type_id","","",3170,[[],["typeid",3]]],[11,"from","","",3171,[[]]],[11,"borrow","","",3171,[[]]],[11,"borrow_mut","","",3171,[[]]],[11,"try_from","","",3171,[[],["result",4]]],[11,"into","","",3171,[[]]],[11,"try_into","","",3171,[[],["result",4]]],[11,"type_id","","",3171,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::status","",3174,[[]]],[11,"borrow","","",3174,[[]]],[11,"borrow_mut","","",3174,[[]]],[11,"try_from","","",3174,[[],["result",4]]],[11,"into","","",3174,[[]]],[11,"try_into","","",3174,[[],["result",4]]],[11,"type_id","","",3174,[[],["typeid",3]]],[11,"from","","",3175,[[]]],[11,"borrow","","",3175,[[]]],[11,"borrow_mut","","",3175,[[]]],[11,"try_from","","",3175,[[],["result",4]]],[11,"into","","",3175,[[]]],[11,"try_into","","",3175,[[],["result",4]]],[11,"type_id","","",3175,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::length","",3179,[[]]],[11,"borrow","","",3179,[[]]],[11,"borrow_mut","","",3179,[[]]],[11,"try_from","","",3179,[[],["result",4]]],[11,"into","","",3179,[[]]],[11,"try_into","","",3179,[[],["result",4]]],[11,"type_id","","",3179,[[],["typeid",3]]],[11,"from","","",3180,[[]]],[11,"borrow","","",3180,[[]]],[11,"borrow_mut","","",3180,[[]]],[11,"try_from","","",3180,[[],["result",4]]],[11,"into","","",3180,[[]]],[11,"try_into","","",3180,[[],["result",4]]],[11,"type_id","","",3180,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::addr","",3183,[[]]],[11,"borrow","","",3183,[[]]],[11,"borrow_mut","","",3183,[[]]],[11,"try_from","","",3183,[[],["result",4]]],[11,"into","","",3183,[[]]],[11,"try_into","","",3183,[[],["result",4]]],[11,"type_id","","",3183,[[],["typeid",3]]],[11,"from","","",3184,[[]]],[11,"borrow","","",3184,[[]]],[11,"borrow_mut","","",3184,[[]]],[11,"try_from","","",3184,[[],["result",4]]],[11,"into","","",3184,[[]]],[11,"try_into","","",3184,[[],["result",4]]],[11,"type_id","","",3184,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::data","",3187,[[]]],[11,"borrow","","",3187,[[]]],[11,"borrow_mut","","",3187,[[]]],[11,"try_from","","",3187,[[],["result",4]]],[11,"into","","",3187,[[]]],[11,"try_into","","",3187,[[],["result",4]]],[11,"type_id","","",3187,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spis::dbgctrl","",3190,[[]]],[11,"borrow","","",3190,[[]]],[11,"borrow_mut","","",3190,[[]]],[11,"try_from","","",3190,[[],["result",4]]],[11,"into","","",3190,[[]]],[11,"try_into","","",3190,[[],["result",4]]],[11,"type_id","","",3190,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::ctrla","",3200,[[]]],[11,"borrow","","",3200,[[]]],[11,"borrow_mut","","",3200,[[]]],[11,"try_from","","",3200,[[],["result",4]]],[11,"into","","",3200,[[]]],[11,"try_into","","",3200,[[],["result",4]]],[11,"type_id","","",3200,[[],["typeid",3]]],[11,"from","","",3201,[[]]],[11,"borrow","","",3201,[[]]],[11,"borrow_mut","","",3201,[[]]],[11,"try_from","","",3201,[[],["result",4]]],[11,"into","","",3201,[[]]],[11,"try_into","","",3201,[[],["result",4]]],[11,"type_id","","",3201,[[],["typeid",3]]],[11,"from","","",3203,[[]]],[11,"borrow","","",3203,[[]]],[11,"borrow_mut","","",3203,[[]]],[11,"try_from","","",3203,[[],["result",4]]],[11,"into","","",3203,[[]]],[11,"try_into","","",3203,[[],["result",4]]],[11,"type_id","","",3203,[[],["typeid",3]]],[11,"from","","",3204,[[]]],[11,"borrow","","",3204,[[]]],[11,"borrow_mut","","",3204,[[]]],[11,"try_from","","",3204,[[],["result",4]]],[11,"into","","",3204,[[]]],[11,"try_into","","",3204,[[],["result",4]]],[11,"type_id","","",3204,[[],["typeid",3]]],[11,"from","","",3205,[[]]],[11,"borrow","","",3205,[[]]],[11,"borrow_mut","","",3205,[[]]],[11,"try_from","","",3205,[[],["result",4]]],[11,"into","","",3205,[[]]],[11,"try_into","","",3205,[[],["result",4]]],[11,"type_id","","",3205,[[],["typeid",3]]],[11,"from","","",3207,[[]]],[11,"borrow","","",3207,[[]]],[11,"borrow_mut","","",3207,[[]]],[11,"try_from","","",3207,[[],["result",4]]],[11,"into","","",3207,[[]]],[11,"try_into","","",3207,[[],["result",4]]],[11,"type_id","","",3207,[[],["typeid",3]]],[11,"from","","",3209,[[]]],[11,"borrow","","",3209,[[]]],[11,"borrow_mut","","",3209,[[]]],[11,"try_from","","",3209,[[],["result",4]]],[11,"into","","",3209,[[]]],[11,"try_into","","",3209,[[],["result",4]]],[11,"type_id","","",3209,[[],["typeid",3]]],[11,"from","","",3211,[[]]],[11,"borrow","","",3211,[[]]],[11,"borrow_mut","","",3211,[[]]],[11,"try_from","","",3211,[[],["result",4]]],[11,"into","","",3211,[[]]],[11,"try_into","","",3211,[[],["result",4]]],[11,"type_id","","",3211,[[],["typeid",3]]],[11,"from","","",3213,[[]]],[11,"borrow","","",3213,[[]]],[11,"borrow_mut","","",3213,[[]]],[11,"try_from","","",3213,[[],["result",4]]],[11,"into","","",3213,[[]]],[11,"try_into","","",3213,[[],["result",4]]],[11,"type_id","","",3213,[[],["typeid",3]]],[11,"from","","",3215,[[]]],[11,"borrow","","",3215,[[]]],[11,"borrow_mut","","",3215,[[]]],[11,"try_from","","",3215,[[],["result",4]]],[11,"into","","",3215,[[]]],[11,"try_into","","",3215,[[],["result",4]]],[11,"type_id","","",3215,[[],["typeid",3]]],[11,"from","","",3217,[[]]],[11,"borrow","","",3217,[[]]],[11,"borrow_mut","","",3217,[[]]],[11,"try_from","","",3217,[[],["result",4]]],[11,"into","","",3217,[[]]],[11,"try_into","","",3217,[[],["result",4]]],[11,"type_id","","",3217,[[],["typeid",3]]],[11,"from","","",3193,[[]]],[11,"borrow","","",3193,[[]]],[11,"borrow_mut","","",3193,[[]]],[11,"try_from","","",3193,[[],["result",4]]],[11,"into","","",3193,[[]]],[11,"try_into","","",3193,[[],["result",4]]],[11,"type_id","","",3193,[[],["typeid",3]]],[11,"from","","",3194,[[]]],[11,"borrow","","",3194,[[]]],[11,"borrow_mut","","",3194,[[]]],[11,"try_from","","",3194,[[],["result",4]]],[11,"into","","",3194,[[]]],[11,"try_into","","",3194,[[],["result",4]]],[11,"type_id","","",3194,[[],["typeid",3]]],[11,"from","","",3195,[[]]],[11,"borrow","","",3195,[[]]],[11,"borrow_mut","","",3195,[[]]],[11,"try_from","","",3195,[[],["result",4]]],[11,"into","","",3195,[[]]],[11,"try_into","","",3195,[[],["result",4]]],[11,"type_id","","",3195,[[],["typeid",3]]],[11,"from","","",3196,[[]]],[11,"borrow","","",3196,[[]]],[11,"borrow_mut","","",3196,[[]]],[11,"try_from","","",3196,[[],["result",4]]],[11,"into","","",3196,[[]]],[11,"try_into","","",3196,[[],["result",4]]],[11,"type_id","","",3196,[[],["typeid",3]]],[11,"from","","",3197,[[]]],[11,"borrow","","",3197,[[]]],[11,"borrow_mut","","",3197,[[]]],[11,"try_from","","",3197,[[],["result",4]]],[11,"into","","",3197,[[]]],[11,"try_into","","",3197,[[],["result",4]]],[11,"type_id","","",3197,[[],["typeid",3]]],[11,"from","","",3198,[[]]],[11,"borrow","","",3198,[[]]],[11,"borrow_mut","","",3198,[[]]],[11,"try_from","","",3198,[[],["result",4]]],[11,"into","","",3198,[[]]],[11,"try_into","","",3198,[[],["result",4]]],[11,"type_id","","",3198,[[],["typeid",3]]],[11,"from","","",3199,[[]]],[11,"borrow","","",3199,[[]]],[11,"borrow_mut","","",3199,[[]]],[11,"try_from","","",3199,[[],["result",4]]],[11,"into","","",3199,[[]]],[11,"try_into","","",3199,[[],["result",4]]],[11,"type_id","","",3199,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::ctrlb","",3223,[[]]],[11,"borrow","","",3223,[[]]],[11,"borrow_mut","","",3223,[[]]],[11,"try_from","","",3223,[[],["result",4]]],[11,"into","","",3223,[[]]],[11,"try_into","","",3223,[[],["result",4]]],[11,"type_id","","",3223,[[],["typeid",3]]],[11,"from","","",3224,[[]]],[11,"borrow","","",3224,[[]]],[11,"borrow_mut","","",3224,[[]]],[11,"try_from","","",3224,[[],["result",4]]],[11,"into","","",3224,[[]]],[11,"try_into","","",3224,[[],["result",4]]],[11,"type_id","","",3224,[[],["typeid",3]]],[11,"from","","",3225,[[]]],[11,"borrow","","",3225,[[]]],[11,"borrow_mut","","",3225,[[]]],[11,"try_from","","",3225,[[],["result",4]]],[11,"into","","",3225,[[]]],[11,"try_into","","",3225,[[],["result",4]]],[11,"type_id","","",3225,[[],["typeid",3]]],[11,"from","","",3226,[[]]],[11,"borrow","","",3226,[[]]],[11,"borrow_mut","","",3226,[[]]],[11,"try_from","","",3226,[[],["result",4]]],[11,"into","","",3226,[[]]],[11,"try_into","","",3226,[[],["result",4]]],[11,"type_id","","",3226,[[],["typeid",3]]],[11,"from","","",3228,[[]]],[11,"borrow","","",3228,[[]]],[11,"borrow_mut","","",3228,[[]]],[11,"try_from","","",3228,[[],["result",4]]],[11,"into","","",3228,[[]]],[11,"try_into","","",3228,[[],["result",4]]],[11,"type_id","","",3228,[[],["typeid",3]]],[11,"from","","",3229,[[]]],[11,"borrow","","",3229,[[]]],[11,"borrow_mut","","",3229,[[]]],[11,"try_from","","",3229,[[],["result",4]]],[11,"into","","",3229,[[]]],[11,"try_into","","",3229,[[],["result",4]]],[11,"type_id","","",3229,[[],["typeid",3]]],[11,"from","","",3220,[[]]],[11,"borrow","","",3220,[[]]],[11,"borrow_mut","","",3220,[[]]],[11,"try_from","","",3220,[[],["result",4]]],[11,"into","","",3220,[[]]],[11,"try_into","","",3220,[[],["result",4]]],[11,"type_id","","",3220,[[],["typeid",3]]],[11,"from","","",3221,[[]]],[11,"borrow","","",3221,[[]]],[11,"borrow_mut","","",3221,[[]]],[11,"try_from","","",3221,[[],["result",4]]],[11,"into","","",3221,[[]]],[11,"try_into","","",3221,[[],["result",4]]],[11,"type_id","","",3221,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::ctrlc","",3233,[[]]],[11,"borrow","","",3233,[[]]],[11,"borrow_mut","","",3233,[[]]],[11,"try_from","","",3233,[[],["result",4]]],[11,"into","","",3233,[[]]],[11,"try_into","","",3233,[[],["result",4]]],[11,"type_id","","",3233,[[],["typeid",3]]],[11,"from","","",3235,[[]]],[11,"borrow","","",3235,[[]]],[11,"borrow_mut","","",3235,[[]]],[11,"try_from","","",3235,[[],["result",4]]],[11,"into","","",3235,[[]]],[11,"try_into","","",3235,[[],["result",4]]],[11,"type_id","","",3235,[[],["typeid",3]]],[11,"from","","",3232,[[]]],[11,"borrow","","",3232,[[]]],[11,"borrow_mut","","",3232,[[]]],[11,"try_from","","",3232,[[],["result",4]]],[11,"into","","",3232,[[]]],[11,"try_into","","",3232,[[],["result",4]]],[11,"type_id","","",3232,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::baud","",3238,[[]]],[11,"borrow","","",3238,[[]]],[11,"borrow_mut","","",3238,[[]]],[11,"try_from","","",3238,[[],["result",4]]],[11,"into","","",3238,[[]]],[11,"try_into","","",3238,[[],["result",4]]],[11,"type_id","","",3238,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::intenclr","",3241,[[]]],[11,"borrow","","",3241,[[]]],[11,"borrow_mut","","",3241,[[]]],[11,"try_from","","",3241,[[],["result",4]]],[11,"into","","",3241,[[]]],[11,"try_into","","",3241,[[],["result",4]]],[11,"type_id","","",3241,[[],["typeid",3]]],[11,"from","","",3242,[[]]],[11,"borrow","","",3242,[[]]],[11,"borrow_mut","","",3242,[[]]],[11,"try_from","","",3242,[[],["result",4]]],[11,"into","","",3242,[[]]],[11,"try_into","","",3242,[[],["result",4]]],[11,"type_id","","",3242,[[],["typeid",3]]],[11,"from","","",3243,[[]]],[11,"borrow","","",3243,[[]]],[11,"borrow_mut","","",3243,[[]]],[11,"try_from","","",3243,[[],["result",4]]],[11,"into","","",3243,[[]]],[11,"try_into","","",3243,[[],["result",4]]],[11,"type_id","","",3243,[[],["typeid",3]]],[11,"from","","",3244,[[]]],[11,"borrow","","",3244,[[]]],[11,"borrow_mut","","",3244,[[]]],[11,"try_from","","",3244,[[],["result",4]]],[11,"into","","",3244,[[]]],[11,"try_into","","",3244,[[],["result",4]]],[11,"type_id","","",3244,[[],["typeid",3]]],[11,"from","","",3245,[[]]],[11,"borrow","","",3245,[[]]],[11,"borrow_mut","","",3245,[[]]],[11,"try_from","","",3245,[[],["result",4]]],[11,"into","","",3245,[[]]],[11,"try_into","","",3245,[[],["result",4]]],[11,"type_id","","",3245,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::intenset","",3248,[[]]],[11,"borrow","","",3248,[[]]],[11,"borrow_mut","","",3248,[[]]],[11,"try_from","","",3248,[[],["result",4]]],[11,"into","","",3248,[[]]],[11,"try_into","","",3248,[[],["result",4]]],[11,"type_id","","",3248,[[],["typeid",3]]],[11,"from","","",3249,[[]]],[11,"borrow","","",3249,[[]]],[11,"borrow_mut","","",3249,[[]]],[11,"try_from","","",3249,[[],["result",4]]],[11,"into","","",3249,[[]]],[11,"try_into","","",3249,[[],["result",4]]],[11,"type_id","","",3249,[[],["typeid",3]]],[11,"from","","",3250,[[]]],[11,"borrow","","",3250,[[]]],[11,"borrow_mut","","",3250,[[]]],[11,"try_from","","",3250,[[],["result",4]]],[11,"into","","",3250,[[]]],[11,"try_into","","",3250,[[],["result",4]]],[11,"type_id","","",3250,[[],["typeid",3]]],[11,"from","","",3251,[[]]],[11,"borrow","","",3251,[[]]],[11,"borrow_mut","","",3251,[[]]],[11,"try_from","","",3251,[[],["result",4]]],[11,"into","","",3251,[[]]],[11,"try_into","","",3251,[[],["result",4]]],[11,"type_id","","",3251,[[],["typeid",3]]],[11,"from","","",3252,[[]]],[11,"borrow","","",3252,[[]]],[11,"borrow_mut","","",3252,[[]]],[11,"try_from","","",3252,[[],["result",4]]],[11,"into","","",3252,[[]]],[11,"try_into","","",3252,[[],["result",4]]],[11,"type_id","","",3252,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::intflag","",3255,[[]]],[11,"borrow","","",3255,[[]]],[11,"borrow_mut","","",3255,[[]]],[11,"try_from","","",3255,[[],["result",4]]],[11,"into","","",3255,[[]]],[11,"try_into","","",3255,[[],["result",4]]],[11,"type_id","","",3255,[[],["typeid",3]]],[11,"from","","",3256,[[]]],[11,"borrow","","",3256,[[]]],[11,"borrow_mut","","",3256,[[]]],[11,"try_from","","",3256,[[],["result",4]]],[11,"into","","",3256,[[]]],[11,"try_into","","",3256,[[],["result",4]]],[11,"type_id","","",3256,[[],["typeid",3]]],[11,"from","","",3257,[[]]],[11,"borrow","","",3257,[[]]],[11,"borrow_mut","","",3257,[[]]],[11,"try_from","","",3257,[[],["result",4]]],[11,"into","","",3257,[[]]],[11,"try_into","","",3257,[[],["result",4]]],[11,"type_id","","",3257,[[],["typeid",3]]],[11,"from","","",3258,[[]]],[11,"borrow","","",3258,[[]]],[11,"borrow_mut","","",3258,[[]]],[11,"try_from","","",3258,[[],["result",4]]],[11,"into","","",3258,[[]]],[11,"try_into","","",3258,[[],["result",4]]],[11,"type_id","","",3258,[[],["typeid",3]]],[11,"from","","",3259,[[]]],[11,"borrow","","",3259,[[]]],[11,"borrow_mut","","",3259,[[]]],[11,"try_from","","",3259,[[],["result",4]]],[11,"into","","",3259,[[]]],[11,"try_into","","",3259,[[],["result",4]]],[11,"type_id","","",3259,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::status","",3262,[[]]],[11,"borrow","","",3262,[[]]],[11,"borrow_mut","","",3262,[[]]],[11,"try_from","","",3262,[[],["result",4]]],[11,"into","","",3262,[[]]],[11,"try_into","","",3262,[[],["result",4]]],[11,"type_id","","",3262,[[],["typeid",3]]],[11,"from","","",3263,[[]]],[11,"borrow","","",3263,[[]]],[11,"borrow_mut","","",3263,[[]]],[11,"try_from","","",3263,[[],["result",4]]],[11,"into","","",3263,[[]]],[11,"try_into","","",3263,[[],["result",4]]],[11,"type_id","","",3263,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::length","",3267,[[]]],[11,"borrow","","",3267,[[]]],[11,"borrow_mut","","",3267,[[]]],[11,"try_from","","",3267,[[],["result",4]]],[11,"into","","",3267,[[]]],[11,"try_into","","",3267,[[],["result",4]]],[11,"type_id","","",3267,[[],["typeid",3]]],[11,"from","","",3268,[[]]],[11,"borrow","","",3268,[[]]],[11,"borrow_mut","","",3268,[[]]],[11,"try_from","","",3268,[[],["result",4]]],[11,"into","","",3268,[[]]],[11,"try_into","","",3268,[[],["result",4]]],[11,"type_id","","",3268,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::addr","",3271,[[]]],[11,"borrow","","",3271,[[]]],[11,"borrow_mut","","",3271,[[]]],[11,"try_from","","",3271,[[],["result",4]]],[11,"into","","",3271,[[]]],[11,"try_into","","",3271,[[],["result",4]]],[11,"type_id","","",3271,[[],["typeid",3]]],[11,"from","","",3272,[[]]],[11,"borrow","","",3272,[[]]],[11,"borrow_mut","","",3272,[[]]],[11,"try_from","","",3272,[[],["result",4]]],[11,"into","","",3272,[[]]],[11,"try_into","","",3272,[[],["result",4]]],[11,"type_id","","",3272,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::data","",3275,[[]]],[11,"borrow","","",3275,[[]]],[11,"borrow_mut","","",3275,[[]]],[11,"try_from","","",3275,[[],["result",4]]],[11,"into","","",3275,[[]]],[11,"try_into","","",3275,[[],["result",4]]],[11,"type_id","","",3275,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::spim::dbgctrl","",3278,[[]]],[11,"borrow","","",3278,[[]]],[11,"borrow_mut","","",3278,[[]]],[11,"try_from","","",3278,[[],["result",4]]],[11,"into","","",3278,[[]]],[11,"try_into","","",3278,[[],["result",4]]],[11,"type_id","","",3278,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::ctrla","",3289,[[]]],[11,"borrow","","",3289,[[]]],[11,"borrow_mut","","",3289,[[]]],[11,"try_from","","",3289,[[],["result",4]]],[11,"into","","",3289,[[]]],[11,"try_into","","",3289,[[],["result",4]]],[11,"type_id","","",3289,[[],["typeid",3]]],[11,"from","","",3290,[[]]],[11,"borrow","","",3290,[[]]],[11,"borrow_mut","","",3290,[[]]],[11,"try_from","","",3290,[[],["result",4]]],[11,"into","","",3290,[[]]],[11,"try_into","","",3290,[[],["result",4]]],[11,"type_id","","",3290,[[],["typeid",3]]],[11,"from","","",3292,[[]]],[11,"borrow","","",3292,[[]]],[11,"borrow_mut","","",3292,[[]]],[11,"try_from","","",3292,[[],["result",4]]],[11,"into","","",3292,[[]]],[11,"try_into","","",3292,[[],["result",4]]],[11,"type_id","","",3292,[[],["typeid",3]]],[11,"from","","",3293,[[]]],[11,"borrow","","",3293,[[]]],[11,"borrow_mut","","",3293,[[]]],[11,"try_from","","",3293,[[],["result",4]]],[11,"into","","",3293,[[]]],[11,"try_into","","",3293,[[],["result",4]]],[11,"type_id","","",3293,[[],["typeid",3]]],[11,"from","","",3294,[[]]],[11,"borrow","","",3294,[[]]],[11,"borrow_mut","","",3294,[[]]],[11,"try_from","","",3294,[[],["result",4]]],[11,"into","","",3294,[[]]],[11,"try_into","","",3294,[[],["result",4]]],[11,"type_id","","",3294,[[],["typeid",3]]],[11,"from","","",3295,[[]]],[11,"borrow","","",3295,[[]]],[11,"borrow_mut","","",3295,[[]]],[11,"try_from","","",3295,[[],["result",4]]],[11,"into","","",3295,[[]]],[11,"try_into","","",3295,[[],["result",4]]],[11,"type_id","","",3295,[[],["typeid",3]]],[11,"from","","",3296,[[]]],[11,"borrow","","",3296,[[]]],[11,"borrow_mut","","",3296,[[]]],[11,"try_from","","",3296,[[],["result",4]]],[11,"into","","",3296,[[]]],[11,"try_into","","",3296,[[],["result",4]]],[11,"type_id","","",3296,[[],["typeid",3]]],[11,"from","","",3298,[[]]],[11,"borrow","","",3298,[[]]],[11,"borrow_mut","","",3298,[[]]],[11,"try_from","","",3298,[[],["result",4]]],[11,"into","","",3298,[[]]],[11,"try_into","","",3298,[[],["result",4]]],[11,"type_id","","",3298,[[],["typeid",3]]],[11,"from","","",3300,[[]]],[11,"borrow","","",3300,[[]]],[11,"borrow_mut","","",3300,[[]]],[11,"try_from","","",3300,[[],["result",4]]],[11,"into","","",3300,[[]]],[11,"try_into","","",3300,[[],["result",4]]],[11,"type_id","","",3300,[[],["typeid",3]]],[11,"from","","",3302,[[]]],[11,"borrow","","",3302,[[]]],[11,"borrow_mut","","",3302,[[]]],[11,"try_from","","",3302,[[],["result",4]]],[11,"into","","",3302,[[]]],[11,"try_into","","",3302,[[],["result",4]]],[11,"type_id","","",3302,[[],["typeid",3]]],[11,"from","","",3303,[[]]],[11,"borrow","","",3303,[[]]],[11,"borrow_mut","","",3303,[[]]],[11,"try_from","","",3303,[[],["result",4]]],[11,"into","","",3303,[[]]],[11,"try_into","","",3303,[[],["result",4]]],[11,"type_id","","",3303,[[],["typeid",3]]],[11,"from","","",3305,[[]]],[11,"borrow","","",3305,[[]]],[11,"borrow_mut","","",3305,[[]]],[11,"try_from","","",3305,[[],["result",4]]],[11,"into","","",3305,[[]]],[11,"try_into","","",3305,[[],["result",4]]],[11,"type_id","","",3305,[[],["typeid",3]]],[11,"from","","",3307,[[]]],[11,"borrow","","",3307,[[]]],[11,"borrow_mut","","",3307,[[]]],[11,"try_from","","",3307,[[],["result",4]]],[11,"into","","",3307,[[]]],[11,"try_into","","",3307,[[],["result",4]]],[11,"type_id","","",3307,[[],["typeid",3]]],[11,"from","","",3309,[[]]],[11,"borrow","","",3309,[[]]],[11,"borrow_mut","","",3309,[[]]],[11,"try_from","","",3309,[[],["result",4]]],[11,"into","","",3309,[[]]],[11,"try_into","","",3309,[[],["result",4]]],[11,"type_id","","",3309,[[],["typeid",3]]],[11,"from","","",3311,[[]]],[11,"borrow","","",3311,[[]]],[11,"borrow_mut","","",3311,[[]]],[11,"try_from","","",3311,[[],["result",4]]],[11,"into","","",3311,[[]]],[11,"try_into","","",3311,[[],["result",4]]],[11,"type_id","","",3311,[[],["typeid",3]]],[11,"from","","",3281,[[]]],[11,"borrow","","",3281,[[]]],[11,"borrow_mut","","",3281,[[]]],[11,"try_from","","",3281,[[],["result",4]]],[11,"into","","",3281,[[]]],[11,"try_into","","",3281,[[],["result",4]]],[11,"type_id","","",3281,[[],["typeid",3]]],[11,"from","","",3282,[[]]],[11,"borrow","","",3282,[[]]],[11,"borrow_mut","","",3282,[[]]],[11,"try_from","","",3282,[[],["result",4]]],[11,"into","","",3282,[[]]],[11,"try_into","","",3282,[[],["result",4]]],[11,"type_id","","",3282,[[],["typeid",3]]],[11,"from","","",3283,[[]]],[11,"borrow","","",3283,[[]]],[11,"borrow_mut","","",3283,[[]]],[11,"try_from","","",3283,[[],["result",4]]],[11,"into","","",3283,[[]]],[11,"try_into","","",3283,[[],["result",4]]],[11,"type_id","","",3283,[[],["typeid",3]]],[11,"from","","",3284,[[]]],[11,"borrow","","",3284,[[]]],[11,"borrow_mut","","",3284,[[]]],[11,"try_from","","",3284,[[],["result",4]]],[11,"into","","",3284,[[]]],[11,"try_into","","",3284,[[],["result",4]]],[11,"type_id","","",3284,[[],["typeid",3]]],[11,"from","","",3285,[[]]],[11,"borrow","","",3285,[[]]],[11,"borrow_mut","","",3285,[[]]],[11,"try_from","","",3285,[[],["result",4]]],[11,"into","","",3285,[[]]],[11,"try_into","","",3285,[[],["result",4]]],[11,"type_id","","",3285,[[],["typeid",3]]],[11,"from","","",3286,[[]]],[11,"borrow","","",3286,[[]]],[11,"borrow_mut","","",3286,[[]]],[11,"try_from","","",3286,[[],["result",4]]],[11,"into","","",3286,[[]]],[11,"try_into","","",3286,[[],["result",4]]],[11,"type_id","","",3286,[[],["typeid",3]]],[11,"from","","",3287,[[]]],[11,"borrow","","",3287,[[]]],[11,"borrow_mut","","",3287,[[]]],[11,"try_from","","",3287,[[],["result",4]]],[11,"into","","",3287,[[]]],[11,"try_into","","",3287,[[],["result",4]]],[11,"type_id","","",3287,[[],["typeid",3]]],[11,"from","","",3288,[[]]],[11,"borrow","","",3288,[[]]],[11,"borrow_mut","","",3288,[[]]],[11,"try_from","","",3288,[[],["result",4]]],[11,"into","","",3288,[[]]],[11,"try_into","","",3288,[[],["result",4]]],[11,"type_id","","",3288,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::ctrlb","",3318,[[]]],[11,"borrow","","",3318,[[]]],[11,"borrow_mut","","",3318,[[]]],[11,"try_from","","",3318,[[],["result",4]]],[11,"into","","",3318,[[]]],[11,"try_into","","",3318,[[],["result",4]]],[11,"type_id","","",3318,[[],["typeid",3]]],[11,"from","","",3320,[[]]],[11,"borrow","","",3320,[[]]],[11,"borrow_mut","","",3320,[[]]],[11,"try_from","","",3320,[[],["result",4]]],[11,"into","","",3320,[[]]],[11,"try_into","","",3320,[[],["result",4]]],[11,"type_id","","",3320,[[],["typeid",3]]],[11,"from","","",3321,[[]]],[11,"borrow","","",3321,[[]]],[11,"borrow_mut","","",3321,[[]]],[11,"try_from","","",3321,[[],["result",4]]],[11,"into","","",3321,[[]]],[11,"try_into","","",3321,[[],["result",4]]],[11,"type_id","","",3321,[[],["typeid",3]]],[11,"from","","",3322,[[]]],[11,"borrow","","",3322,[[]]],[11,"borrow_mut","","",3322,[[]]],[11,"try_from","","",3322,[[],["result",4]]],[11,"into","","",3322,[[]]],[11,"try_into","","",3322,[[],["result",4]]],[11,"type_id","","",3322,[[],["typeid",3]]],[11,"from","","",3323,[[]]],[11,"borrow","","",3323,[[]]],[11,"borrow_mut","","",3323,[[]]],[11,"try_from","","",3323,[[],["result",4]]],[11,"into","","",3323,[[]]],[11,"try_into","","",3323,[[],["result",4]]],[11,"type_id","","",3323,[[],["typeid",3]]],[11,"from","","",3325,[[]]],[11,"borrow","","",3325,[[]]],[11,"borrow_mut","","",3325,[[]]],[11,"try_from","","",3325,[[],["result",4]]],[11,"into","","",3325,[[]]],[11,"try_into","","",3325,[[],["result",4]]],[11,"type_id","","",3325,[[],["typeid",3]]],[11,"from","","",3326,[[]]],[11,"borrow","","",3326,[[]]],[11,"borrow_mut","","",3326,[[]]],[11,"try_from","","",3326,[[],["result",4]]],[11,"into","","",3326,[[]]],[11,"try_into","","",3326,[[],["result",4]]],[11,"type_id","","",3326,[[],["typeid",3]]],[11,"from","","",3327,[[]]],[11,"borrow","","",3327,[[]]],[11,"borrow_mut","","",3327,[[]]],[11,"try_from","","",3327,[[],["result",4]]],[11,"into","","",3327,[[]]],[11,"try_into","","",3327,[[],["result",4]]],[11,"type_id","","",3327,[[],["typeid",3]]],[11,"from","","",3328,[[]]],[11,"borrow","","",3328,[[]]],[11,"borrow_mut","","",3328,[[]]],[11,"try_from","","",3328,[[],["result",4]]],[11,"into","","",3328,[[]]],[11,"try_into","","",3328,[[],["result",4]]],[11,"type_id","","",3328,[[],["typeid",3]]],[11,"from","","",3314,[[]]],[11,"borrow","","",3314,[[]]],[11,"borrow_mut","","",3314,[[]]],[11,"try_from","","",3314,[[],["result",4]]],[11,"into","","",3314,[[]]],[11,"try_into","","",3314,[[],["result",4]]],[11,"type_id","","",3314,[[],["typeid",3]]],[11,"from","","",3315,[[]]],[11,"borrow","","",3315,[[]]],[11,"borrow_mut","","",3315,[[]]],[11,"try_from","","",3315,[[],["result",4]]],[11,"into","","",3315,[[]]],[11,"try_into","","",3315,[[],["result",4]]],[11,"type_id","","",3315,[[],["typeid",3]]],[11,"from","","",3316,[[]]],[11,"borrow","","",3316,[[]]],[11,"borrow_mut","","",3316,[[]]],[11,"try_from","","",3316,[[],["result",4]]],[11,"into","","",3316,[[]]],[11,"try_into","","",3316,[[],["result",4]]],[11,"type_id","","",3316,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::ctrlc","",3332,[[]]],[11,"borrow","","",3332,[[]]],[11,"borrow_mut","","",3332,[[]]],[11,"try_from","","",3332,[[],["result",4]]],[11,"into","","",3332,[[]]],[11,"try_into","","",3332,[[],["result",4]]],[11,"type_id","","",3332,[[],["typeid",3]]],[11,"from","","",3333,[[]]],[11,"borrow","","",3333,[[]]],[11,"borrow_mut","","",3333,[[]]],[11,"try_from","","",3333,[[],["result",4]]],[11,"into","","",3333,[[]]],[11,"try_into","","",3333,[[],["result",4]]],[11,"type_id","","",3333,[[],["typeid",3]]],[11,"from","","",3334,[[]]],[11,"borrow","","",3334,[[]]],[11,"borrow_mut","","",3334,[[]]],[11,"try_from","","",3334,[[],["result",4]]],[11,"into","","",3334,[[]]],[11,"try_into","","",3334,[[],["result",4]]],[11,"type_id","","",3334,[[],["typeid",3]]],[11,"from","","",3335,[[]]],[11,"borrow","","",3335,[[]]],[11,"borrow_mut","","",3335,[[]]],[11,"try_from","","",3335,[[],["result",4]]],[11,"into","","",3335,[[]]],[11,"try_into","","",3335,[[],["result",4]]],[11,"type_id","","",3335,[[],["typeid",3]]],[11,"from","","",3336,[[]]],[11,"borrow","","",3336,[[]]],[11,"borrow_mut","","",3336,[[]]],[11,"try_from","","",3336,[[],["result",4]]],[11,"into","","",3336,[[]]],[11,"try_into","","",3336,[[],["result",4]]],[11,"type_id","","",3336,[[],["typeid",3]]],[11,"from","","",3337,[[]]],[11,"borrow","","",3337,[[]]],[11,"borrow_mut","","",3337,[[]]],[11,"try_from","","",3337,[[],["result",4]]],[11,"into","","",3337,[[]]],[11,"try_into","","",3337,[[],["result",4]]],[11,"type_id","","",3337,[[],["typeid",3]]],[11,"from","","",3339,[[]]],[11,"borrow","","",3339,[[]]],[11,"borrow_mut","","",3339,[[]]],[11,"try_from","","",3339,[[],["result",4]]],[11,"into","","",3339,[[]]],[11,"try_into","","",3339,[[],["result",4]]],[11,"type_id","","",3339,[[],["typeid",3]]],[11,"from","","",3331,[[]]],[11,"borrow","","",3331,[[]]],[11,"borrow_mut","","",3331,[[]]],[11,"try_from","","",3331,[[],["result",4]]],[11,"into","","",3331,[[]]],[11,"try_into","","",3331,[[],["result",4]]],[11,"type_id","","",3331,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::baud","",3342,[[]]],[11,"borrow","","",3342,[[]]],[11,"borrow_mut","","",3342,[[]]],[11,"try_from","","",3342,[[],["result",4]]],[11,"into","","",3342,[[]]],[11,"try_into","","",3342,[[],["result",4]]],[11,"type_id","","",3342,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::baud_frac_mode","",3345,[[]]],[11,"borrow","","",3345,[[]]],[11,"borrow_mut","","",3345,[[]]],[11,"try_from","","",3345,[[],["result",4]]],[11,"into","","",3345,[[]]],[11,"try_into","","",3345,[[],["result",4]]],[11,"type_id","","",3345,[[],["typeid",3]]],[11,"from","","",3346,[[]]],[11,"borrow","","",3346,[[]]],[11,"borrow_mut","","",3346,[[]]],[11,"try_from","","",3346,[[],["result",4]]],[11,"into","","",3346,[[]]],[11,"try_into","","",3346,[[],["result",4]]],[11,"type_id","","",3346,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::baud_fracfp_mode","",3349,[[]]],[11,"borrow","","",3349,[[]]],[11,"borrow_mut","","",3349,[[]]],[11,"try_from","","",3349,[[],["result",4]]],[11,"into","","",3349,[[]]],[11,"try_into","","",3349,[[],["result",4]]],[11,"type_id","","",3349,[[],["typeid",3]]],[11,"from","","",3350,[[]]],[11,"borrow","","",3350,[[]]],[11,"borrow_mut","","",3350,[[]]],[11,"try_from","","",3350,[[],["result",4]]],[11,"into","","",3350,[[]]],[11,"try_into","","",3350,[[],["result",4]]],[11,"type_id","","",3350,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::baud_usartfp_mode","",3353,[[]]],[11,"borrow","","",3353,[[]]],[11,"borrow_mut","","",3353,[[]]],[11,"try_from","","",3353,[[],["result",4]]],[11,"into","","",3353,[[]]],[11,"try_into","","",3353,[[],["result",4]]],[11,"type_id","","",3353,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::rxpl","",3356,[[]]],[11,"borrow","","",3356,[[]]],[11,"borrow_mut","","",3356,[[]]],[11,"try_from","","",3356,[[],["result",4]]],[11,"into","","",3356,[[]]],[11,"try_into","","",3356,[[],["result",4]]],[11,"type_id","","",3356,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::intenclr","",3359,[[]]],[11,"borrow","","",3359,[[]]],[11,"borrow_mut","","",3359,[[]]],[11,"try_from","","",3359,[[],["result",4]]],[11,"into","","",3359,[[]]],[11,"try_into","","",3359,[[],["result",4]]],[11,"type_id","","",3359,[[],["typeid",3]]],[11,"from","","",3360,[[]]],[11,"borrow","","",3360,[[]]],[11,"borrow_mut","","",3360,[[]]],[11,"try_from","","",3360,[[],["result",4]]],[11,"into","","",3360,[[]]],[11,"try_into","","",3360,[[],["result",4]]],[11,"type_id","","",3360,[[],["typeid",3]]],[11,"from","","",3361,[[]]],[11,"borrow","","",3361,[[]]],[11,"borrow_mut","","",3361,[[]]],[11,"try_from","","",3361,[[],["result",4]]],[11,"into","","",3361,[[]]],[11,"try_into","","",3361,[[],["result",4]]],[11,"type_id","","",3361,[[],["typeid",3]]],[11,"from","","",3362,[[]]],[11,"borrow","","",3362,[[]]],[11,"borrow_mut","","",3362,[[]]],[11,"try_from","","",3362,[[],["result",4]]],[11,"into","","",3362,[[]]],[11,"try_into","","",3362,[[],["result",4]]],[11,"type_id","","",3362,[[],["typeid",3]]],[11,"from","","",3363,[[]]],[11,"borrow","","",3363,[[]]],[11,"borrow_mut","","",3363,[[]]],[11,"try_from","","",3363,[[],["result",4]]],[11,"into","","",3363,[[]]],[11,"try_into","","",3363,[[],["result",4]]],[11,"type_id","","",3363,[[],["typeid",3]]],[11,"from","","",3364,[[]]],[11,"borrow","","",3364,[[]]],[11,"borrow_mut","","",3364,[[]]],[11,"try_from","","",3364,[[],["result",4]]],[11,"into","","",3364,[[]]],[11,"try_into","","",3364,[[],["result",4]]],[11,"type_id","","",3364,[[],["typeid",3]]],[11,"from","","",3365,[[]]],[11,"borrow","","",3365,[[]]],[11,"borrow_mut","","",3365,[[]]],[11,"try_from","","",3365,[[],["result",4]]],[11,"into","","",3365,[[]]],[11,"try_into","","",3365,[[],["result",4]]],[11,"type_id","","",3365,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::intenset","",3368,[[]]],[11,"borrow","","",3368,[[]]],[11,"borrow_mut","","",3368,[[]]],[11,"try_from","","",3368,[[],["result",4]]],[11,"into","","",3368,[[]]],[11,"try_into","","",3368,[[],["result",4]]],[11,"type_id","","",3368,[[],["typeid",3]]],[11,"from","","",3369,[[]]],[11,"borrow","","",3369,[[]]],[11,"borrow_mut","","",3369,[[]]],[11,"try_from","","",3369,[[],["result",4]]],[11,"into","","",3369,[[]]],[11,"try_into","","",3369,[[],["result",4]]],[11,"type_id","","",3369,[[],["typeid",3]]],[11,"from","","",3370,[[]]],[11,"borrow","","",3370,[[]]],[11,"borrow_mut","","",3370,[[]]],[11,"try_from","","",3370,[[],["result",4]]],[11,"into","","",3370,[[]]],[11,"try_into","","",3370,[[],["result",4]]],[11,"type_id","","",3370,[[],["typeid",3]]],[11,"from","","",3371,[[]]],[11,"borrow","","",3371,[[]]],[11,"borrow_mut","","",3371,[[]]],[11,"try_from","","",3371,[[],["result",4]]],[11,"into","","",3371,[[]]],[11,"try_into","","",3371,[[],["result",4]]],[11,"type_id","","",3371,[[],["typeid",3]]],[11,"from","","",3372,[[]]],[11,"borrow","","",3372,[[]]],[11,"borrow_mut","","",3372,[[]]],[11,"try_from","","",3372,[[],["result",4]]],[11,"into","","",3372,[[]]],[11,"try_into","","",3372,[[],["result",4]]],[11,"type_id","","",3372,[[],["typeid",3]]],[11,"from","","",3373,[[]]],[11,"borrow","","",3373,[[]]],[11,"borrow_mut","","",3373,[[]]],[11,"try_from","","",3373,[[],["result",4]]],[11,"into","","",3373,[[]]],[11,"try_into","","",3373,[[],["result",4]]],[11,"type_id","","",3373,[[],["typeid",3]]],[11,"from","","",3374,[[]]],[11,"borrow","","",3374,[[]]],[11,"borrow_mut","","",3374,[[]]],[11,"try_from","","",3374,[[],["result",4]]],[11,"into","","",3374,[[]]],[11,"try_into","","",3374,[[],["result",4]]],[11,"type_id","","",3374,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::intflag","",3377,[[]]],[11,"borrow","","",3377,[[]]],[11,"borrow_mut","","",3377,[[]]],[11,"try_from","","",3377,[[],["result",4]]],[11,"into","","",3377,[[]]],[11,"try_into","","",3377,[[],["result",4]]],[11,"type_id","","",3377,[[],["typeid",3]]],[11,"from","","",3378,[[]]],[11,"borrow","","",3378,[[]]],[11,"borrow_mut","","",3378,[[]]],[11,"try_from","","",3378,[[],["result",4]]],[11,"into","","",3378,[[]]],[11,"try_into","","",3378,[[],["result",4]]],[11,"type_id","","",3378,[[],["typeid",3]]],[11,"from","","",3379,[[]]],[11,"borrow","","",3379,[[]]],[11,"borrow_mut","","",3379,[[]]],[11,"try_from","","",3379,[[],["result",4]]],[11,"into","","",3379,[[]]],[11,"try_into","","",3379,[[],["result",4]]],[11,"type_id","","",3379,[[],["typeid",3]]],[11,"from","","",3380,[[]]],[11,"borrow","","",3380,[[]]],[11,"borrow_mut","","",3380,[[]]],[11,"try_from","","",3380,[[],["result",4]]],[11,"into","","",3380,[[]]],[11,"try_into","","",3380,[[],["result",4]]],[11,"type_id","","",3380,[[],["typeid",3]]],[11,"from","","",3381,[[]]],[11,"borrow","","",3381,[[]]],[11,"borrow_mut","","",3381,[[]]],[11,"try_from","","",3381,[[],["result",4]]],[11,"into","","",3381,[[]]],[11,"try_into","","",3381,[[],["result",4]]],[11,"type_id","","",3381,[[],["typeid",3]]],[11,"from","","",3382,[[]]],[11,"borrow","","",3382,[[]]],[11,"borrow_mut","","",3382,[[]]],[11,"try_from","","",3382,[[],["result",4]]],[11,"into","","",3382,[[]]],[11,"try_into","","",3382,[[],["result",4]]],[11,"type_id","","",3382,[[],["typeid",3]]],[11,"from","","",3383,[[]]],[11,"borrow","","",3383,[[]]],[11,"borrow_mut","","",3383,[[]]],[11,"try_from","","",3383,[[],["result",4]]],[11,"into","","",3383,[[]]],[11,"try_into","","",3383,[[],["result",4]]],[11,"type_id","","",3383,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::status","",3386,[[]]],[11,"borrow","","",3386,[[]]],[11,"borrow_mut","","",3386,[[]]],[11,"try_from","","",3386,[[],["result",4]]],[11,"into","","",3386,[[]]],[11,"try_into","","",3386,[[],["result",4]]],[11,"type_id","","",3386,[[],["typeid",3]]],[11,"from","","",3387,[[]]],[11,"borrow","","",3387,[[]]],[11,"borrow_mut","","",3387,[[]]],[11,"try_from","","",3387,[[],["result",4]]],[11,"into","","",3387,[[]]],[11,"try_into","","",3387,[[],["result",4]]],[11,"type_id","","",3387,[[],["typeid",3]]],[11,"from","","",3388,[[]]],[11,"borrow","","",3388,[[]]],[11,"borrow_mut","","",3388,[[]]],[11,"try_from","","",3388,[[],["result",4]]],[11,"into","","",3388,[[]]],[11,"try_into","","",3388,[[],["result",4]]],[11,"type_id","","",3388,[[],["typeid",3]]],[11,"from","","",3389,[[]]],[11,"borrow","","",3389,[[]]],[11,"borrow_mut","","",3389,[[]]],[11,"try_from","","",3389,[[],["result",4]]],[11,"into","","",3389,[[]]],[11,"try_into","","",3389,[[],["result",4]]],[11,"type_id","","",3389,[[],["typeid",3]]],[11,"from","","",3390,[[]]],[11,"borrow","","",3390,[[]]],[11,"borrow_mut","","",3390,[[]]],[11,"try_from","","",3390,[[],["result",4]]],[11,"into","","",3390,[[]]],[11,"try_into","","",3390,[[],["result",4]]],[11,"type_id","","",3390,[[],["typeid",3]]],[11,"from","","",3391,[[]]],[11,"borrow","","",3391,[[]]],[11,"borrow_mut","","",3391,[[]]],[11,"try_from","","",3391,[[],["result",4]]],[11,"into","","",3391,[[]]],[11,"try_into","","",3391,[[],["result",4]]],[11,"type_id","","",3391,[[],["typeid",3]]],[11,"from","","",3392,[[]]],[11,"borrow","","",3392,[[]]],[11,"borrow_mut","","",3392,[[]]],[11,"try_from","","",3392,[[],["result",4]]],[11,"into","","",3392,[[]]],[11,"try_into","","",3392,[[],["result",4]]],[11,"type_id","","",3392,[[],["typeid",3]]],[11,"from","","",3393,[[]]],[11,"borrow","","",3393,[[]]],[11,"borrow_mut","","",3393,[[]]],[11,"try_from","","",3393,[[],["result",4]]],[11,"into","","",3393,[[]]],[11,"try_into","","",3393,[[],["result",4]]],[11,"type_id","","",3393,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::length","",3397,[[]]],[11,"borrow","","",3397,[[]]],[11,"borrow_mut","","",3397,[[]]],[11,"try_from","","",3397,[[],["result",4]]],[11,"into","","",3397,[[]]],[11,"try_into","","",3397,[[],["result",4]]],[11,"type_id","","",3397,[[],["typeid",3]]],[11,"from","","",3398,[[]]],[11,"borrow","","",3398,[[]]],[11,"borrow_mut","","",3398,[[]]],[11,"try_from","","",3398,[[],["result",4]]],[11,"into","","",3398,[[]]],[11,"try_into","","",3398,[[],["result",4]]],[11,"type_id","","",3398,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::data","",3401,[[]]],[11,"borrow","","",3401,[[]]],[11,"borrow_mut","","",3401,[[]]],[11,"try_from","","",3401,[[],["result",4]]],[11,"into","","",3401,[[]]],[11,"try_into","","",3401,[[],["result",4]]],[11,"type_id","","",3401,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_ext::dbgctrl","",3404,[[]]],[11,"borrow","","",3404,[[]]],[11,"borrow_mut","","",3404,[[]]],[11,"try_from","","",3404,[[],["result",4]]],[11,"into","","",3404,[[]]],[11,"try_into","","",3404,[[],["result",4]]],[11,"type_id","","",3404,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::ctrla","",3415,[[]]],[11,"borrow","","",3415,[[]]],[11,"borrow_mut","","",3415,[[]]],[11,"try_from","","",3415,[[],["result",4]]],[11,"into","","",3415,[[]]],[11,"try_into","","",3415,[[],["result",4]]],[11,"type_id","","",3415,[[],["typeid",3]]],[11,"from","","",3416,[[]]],[11,"borrow","","",3416,[[]]],[11,"borrow_mut","","",3416,[[]]],[11,"try_from","","",3416,[[],["result",4]]],[11,"into","","",3416,[[]]],[11,"try_into","","",3416,[[],["result",4]]],[11,"type_id","","",3416,[[],["typeid",3]]],[11,"from","","",3418,[[]]],[11,"borrow","","",3418,[[]]],[11,"borrow_mut","","",3418,[[]]],[11,"try_from","","",3418,[[],["result",4]]],[11,"into","","",3418,[[]]],[11,"try_into","","",3418,[[],["result",4]]],[11,"type_id","","",3418,[[],["typeid",3]]],[11,"from","","",3419,[[]]],[11,"borrow","","",3419,[[]]],[11,"borrow_mut","","",3419,[[]]],[11,"try_from","","",3419,[[],["result",4]]],[11,"into","","",3419,[[]]],[11,"try_into","","",3419,[[],["result",4]]],[11,"type_id","","",3419,[[],["typeid",3]]],[11,"from","","",3420,[[]]],[11,"borrow","","",3420,[[]]],[11,"borrow_mut","","",3420,[[]]],[11,"try_from","","",3420,[[],["result",4]]],[11,"into","","",3420,[[]]],[11,"try_into","","",3420,[[],["result",4]]],[11,"type_id","","",3420,[[],["typeid",3]]],[11,"from","","",3421,[[]]],[11,"borrow","","",3421,[[]]],[11,"borrow_mut","","",3421,[[]]],[11,"try_from","","",3421,[[],["result",4]]],[11,"into","","",3421,[[]]],[11,"try_into","","",3421,[[],["result",4]]],[11,"type_id","","",3421,[[],["typeid",3]]],[11,"from","","",3422,[[]]],[11,"borrow","","",3422,[[]]],[11,"borrow_mut","","",3422,[[]]],[11,"try_from","","",3422,[[],["result",4]]],[11,"into","","",3422,[[]]],[11,"try_into","","",3422,[[],["result",4]]],[11,"type_id","","",3422,[[],["typeid",3]]],[11,"from","","",3424,[[]]],[11,"borrow","","",3424,[[]]],[11,"borrow_mut","","",3424,[[]]],[11,"try_from","","",3424,[[],["result",4]]],[11,"into","","",3424,[[]]],[11,"try_into","","",3424,[[],["result",4]]],[11,"type_id","","",3424,[[],["typeid",3]]],[11,"from","","",3426,[[]]],[11,"borrow","","",3426,[[]]],[11,"borrow_mut","","",3426,[[]]],[11,"try_from","","",3426,[[],["result",4]]],[11,"into","","",3426,[[]]],[11,"try_into","","",3426,[[],["result",4]]],[11,"type_id","","",3426,[[],["typeid",3]]],[11,"from","","",3428,[[]]],[11,"borrow","","",3428,[[]]],[11,"borrow_mut","","",3428,[[]]],[11,"try_from","","",3428,[[],["result",4]]],[11,"into","","",3428,[[]]],[11,"try_into","","",3428,[[],["result",4]]],[11,"type_id","","",3428,[[],["typeid",3]]],[11,"from","","",3429,[[]]],[11,"borrow","","",3429,[[]]],[11,"borrow_mut","","",3429,[[]]],[11,"try_from","","",3429,[[],["result",4]]],[11,"into","","",3429,[[]]],[11,"try_into","","",3429,[[],["result",4]]],[11,"type_id","","",3429,[[],["typeid",3]]],[11,"from","","",3431,[[]]],[11,"borrow","","",3431,[[]]],[11,"borrow_mut","","",3431,[[]]],[11,"try_from","","",3431,[[],["result",4]]],[11,"into","","",3431,[[]]],[11,"try_into","","",3431,[[],["result",4]]],[11,"type_id","","",3431,[[],["typeid",3]]],[11,"from","","",3433,[[]]],[11,"borrow","","",3433,[[]]],[11,"borrow_mut","","",3433,[[]]],[11,"try_from","","",3433,[[],["result",4]]],[11,"into","","",3433,[[]]],[11,"try_into","","",3433,[[],["result",4]]],[11,"type_id","","",3433,[[],["typeid",3]]],[11,"from","","",3435,[[]]],[11,"borrow","","",3435,[[]]],[11,"borrow_mut","","",3435,[[]]],[11,"try_from","","",3435,[[],["result",4]]],[11,"into","","",3435,[[]]],[11,"try_into","","",3435,[[],["result",4]]],[11,"type_id","","",3435,[[],["typeid",3]]],[11,"from","","",3437,[[]]],[11,"borrow","","",3437,[[]]],[11,"borrow_mut","","",3437,[[]]],[11,"try_from","","",3437,[[],["result",4]]],[11,"into","","",3437,[[]]],[11,"try_into","","",3437,[[],["result",4]]],[11,"type_id","","",3437,[[],["typeid",3]]],[11,"from","","",3407,[[]]],[11,"borrow","","",3407,[[]]],[11,"borrow_mut","","",3407,[[]]],[11,"try_from","","",3407,[[],["result",4]]],[11,"into","","",3407,[[]]],[11,"try_into","","",3407,[[],["result",4]]],[11,"type_id","","",3407,[[],["typeid",3]]],[11,"from","","",3408,[[]]],[11,"borrow","","",3408,[[]]],[11,"borrow_mut","","",3408,[[]]],[11,"try_from","","",3408,[[],["result",4]]],[11,"into","","",3408,[[]]],[11,"try_into","","",3408,[[],["result",4]]],[11,"type_id","","",3408,[[],["typeid",3]]],[11,"from","","",3409,[[]]],[11,"borrow","","",3409,[[]]],[11,"borrow_mut","","",3409,[[]]],[11,"try_from","","",3409,[[],["result",4]]],[11,"into","","",3409,[[]]],[11,"try_into","","",3409,[[],["result",4]]],[11,"type_id","","",3409,[[],["typeid",3]]],[11,"from","","",3410,[[]]],[11,"borrow","","",3410,[[]]],[11,"borrow_mut","","",3410,[[]]],[11,"try_from","","",3410,[[],["result",4]]],[11,"into","","",3410,[[]]],[11,"try_into","","",3410,[[],["result",4]]],[11,"type_id","","",3410,[[],["typeid",3]]],[11,"from","","",3411,[[]]],[11,"borrow","","",3411,[[]]],[11,"borrow_mut","","",3411,[[]]],[11,"try_from","","",3411,[[],["result",4]]],[11,"into","","",3411,[[]]],[11,"try_into","","",3411,[[],["result",4]]],[11,"type_id","","",3411,[[],["typeid",3]]],[11,"from","","",3412,[[]]],[11,"borrow","","",3412,[[]]],[11,"borrow_mut","","",3412,[[]]],[11,"try_from","","",3412,[[],["result",4]]],[11,"into","","",3412,[[]]],[11,"try_into","","",3412,[[],["result",4]]],[11,"type_id","","",3412,[[],["typeid",3]]],[11,"from","","",3413,[[]]],[11,"borrow","","",3413,[[]]],[11,"borrow_mut","","",3413,[[]]],[11,"try_from","","",3413,[[],["result",4]]],[11,"into","","",3413,[[]]],[11,"try_into","","",3413,[[],["result",4]]],[11,"type_id","","",3413,[[],["typeid",3]]],[11,"from","","",3414,[[]]],[11,"borrow","","",3414,[[]]],[11,"borrow_mut","","",3414,[[]]],[11,"try_from","","",3414,[[],["result",4]]],[11,"into","","",3414,[[]]],[11,"try_into","","",3414,[[],["result",4]]],[11,"type_id","","",3414,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::ctrlb","",3444,[[]]],[11,"borrow","","",3444,[[]]],[11,"borrow_mut","","",3444,[[]]],[11,"try_from","","",3444,[[],["result",4]]],[11,"into","","",3444,[[]]],[11,"try_into","","",3444,[[],["result",4]]],[11,"type_id","","",3444,[[],["typeid",3]]],[11,"from","","",3446,[[]]],[11,"borrow","","",3446,[[]]],[11,"borrow_mut","","",3446,[[]]],[11,"try_from","","",3446,[[],["result",4]]],[11,"into","","",3446,[[]]],[11,"try_into","","",3446,[[],["result",4]]],[11,"type_id","","",3446,[[],["typeid",3]]],[11,"from","","",3447,[[]]],[11,"borrow","","",3447,[[]]],[11,"borrow_mut","","",3447,[[]]],[11,"try_from","","",3447,[[],["result",4]]],[11,"into","","",3447,[[]]],[11,"try_into","","",3447,[[],["result",4]]],[11,"type_id","","",3447,[[],["typeid",3]]],[11,"from","","",3448,[[]]],[11,"borrow","","",3448,[[]]],[11,"borrow_mut","","",3448,[[]]],[11,"try_from","","",3448,[[],["result",4]]],[11,"into","","",3448,[[]]],[11,"try_into","","",3448,[[],["result",4]]],[11,"type_id","","",3448,[[],["typeid",3]]],[11,"from","","",3449,[[]]],[11,"borrow","","",3449,[[]]],[11,"borrow_mut","","",3449,[[]]],[11,"try_from","","",3449,[[],["result",4]]],[11,"into","","",3449,[[]]],[11,"try_into","","",3449,[[],["result",4]]],[11,"type_id","","",3449,[[],["typeid",3]]],[11,"from","","",3451,[[]]],[11,"borrow","","",3451,[[]]],[11,"borrow_mut","","",3451,[[]]],[11,"try_from","","",3451,[[],["result",4]]],[11,"into","","",3451,[[]]],[11,"try_into","","",3451,[[],["result",4]]],[11,"type_id","","",3451,[[],["typeid",3]]],[11,"from","","",3452,[[]]],[11,"borrow","","",3452,[[]]],[11,"borrow_mut","","",3452,[[]]],[11,"try_from","","",3452,[[],["result",4]]],[11,"into","","",3452,[[]]],[11,"try_into","","",3452,[[],["result",4]]],[11,"type_id","","",3452,[[],["typeid",3]]],[11,"from","","",3453,[[]]],[11,"borrow","","",3453,[[]]],[11,"borrow_mut","","",3453,[[]]],[11,"try_from","","",3453,[[],["result",4]]],[11,"into","","",3453,[[]]],[11,"try_into","","",3453,[[],["result",4]]],[11,"type_id","","",3453,[[],["typeid",3]]],[11,"from","","",3454,[[]]],[11,"borrow","","",3454,[[]]],[11,"borrow_mut","","",3454,[[]]],[11,"try_from","","",3454,[[],["result",4]]],[11,"into","","",3454,[[]]],[11,"try_into","","",3454,[[],["result",4]]],[11,"type_id","","",3454,[[],["typeid",3]]],[11,"from","","",3440,[[]]],[11,"borrow","","",3440,[[]]],[11,"borrow_mut","","",3440,[[]]],[11,"try_from","","",3440,[[],["result",4]]],[11,"into","","",3440,[[]]],[11,"try_into","","",3440,[[],["result",4]]],[11,"type_id","","",3440,[[],["typeid",3]]],[11,"from","","",3441,[[]]],[11,"borrow","","",3441,[[]]],[11,"borrow_mut","","",3441,[[]]],[11,"try_from","","",3441,[[],["result",4]]],[11,"into","","",3441,[[]]],[11,"try_into","","",3441,[[],["result",4]]],[11,"type_id","","",3441,[[],["typeid",3]]],[11,"from","","",3442,[[]]],[11,"borrow","","",3442,[[]]],[11,"borrow_mut","","",3442,[[]]],[11,"try_from","","",3442,[[],["result",4]]],[11,"into","","",3442,[[]]],[11,"try_into","","",3442,[[],["result",4]]],[11,"type_id","","",3442,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::ctrlc","",3458,[[]]],[11,"borrow","","",3458,[[]]],[11,"borrow_mut","","",3458,[[]]],[11,"try_from","","",3458,[[],["result",4]]],[11,"into","","",3458,[[]]],[11,"try_into","","",3458,[[],["result",4]]],[11,"type_id","","",3458,[[],["typeid",3]]],[11,"from","","",3459,[[]]],[11,"borrow","","",3459,[[]]],[11,"borrow_mut","","",3459,[[]]],[11,"try_from","","",3459,[[],["result",4]]],[11,"into","","",3459,[[]]],[11,"try_into","","",3459,[[],["result",4]]],[11,"type_id","","",3459,[[],["typeid",3]]],[11,"from","","",3460,[[]]],[11,"borrow","","",3460,[[]]],[11,"borrow_mut","","",3460,[[]]],[11,"try_from","","",3460,[[],["result",4]]],[11,"into","","",3460,[[]]],[11,"try_into","","",3460,[[],["result",4]]],[11,"type_id","","",3460,[[],["typeid",3]]],[11,"from","","",3461,[[]]],[11,"borrow","","",3461,[[]]],[11,"borrow_mut","","",3461,[[]]],[11,"try_from","","",3461,[[],["result",4]]],[11,"into","","",3461,[[]]],[11,"try_into","","",3461,[[],["result",4]]],[11,"type_id","","",3461,[[],["typeid",3]]],[11,"from","","",3462,[[]]],[11,"borrow","","",3462,[[]]],[11,"borrow_mut","","",3462,[[]]],[11,"try_from","","",3462,[[],["result",4]]],[11,"into","","",3462,[[]]],[11,"try_into","","",3462,[[],["result",4]]],[11,"type_id","","",3462,[[],["typeid",3]]],[11,"from","","",3463,[[]]],[11,"borrow","","",3463,[[]]],[11,"borrow_mut","","",3463,[[]]],[11,"try_from","","",3463,[[],["result",4]]],[11,"into","","",3463,[[]]],[11,"try_into","","",3463,[[],["result",4]]],[11,"type_id","","",3463,[[],["typeid",3]]],[11,"from","","",3465,[[]]],[11,"borrow","","",3465,[[]]],[11,"borrow_mut","","",3465,[[]]],[11,"try_from","","",3465,[[],["result",4]]],[11,"into","","",3465,[[]]],[11,"try_into","","",3465,[[],["result",4]]],[11,"type_id","","",3465,[[],["typeid",3]]],[11,"from","","",3457,[[]]],[11,"borrow","","",3457,[[]]],[11,"borrow_mut","","",3457,[[]]],[11,"try_from","","",3457,[[],["result",4]]],[11,"into","","",3457,[[]]],[11,"try_into","","",3457,[[],["result",4]]],[11,"type_id","","",3457,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::baud","",3468,[[]]],[11,"borrow","","",3468,[[]]],[11,"borrow_mut","","",3468,[[]]],[11,"try_from","","",3468,[[],["result",4]]],[11,"into","","",3468,[[]]],[11,"try_into","","",3468,[[],["result",4]]],[11,"type_id","","",3468,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::baud_frac_mode","",3471,[[]]],[11,"borrow","","",3471,[[]]],[11,"borrow_mut","","",3471,[[]]],[11,"try_from","","",3471,[[],["result",4]]],[11,"into","","",3471,[[]]],[11,"try_into","","",3471,[[],["result",4]]],[11,"type_id","","",3471,[[],["typeid",3]]],[11,"from","","",3472,[[]]],[11,"borrow","","",3472,[[]]],[11,"borrow_mut","","",3472,[[]]],[11,"try_from","","",3472,[[],["result",4]]],[11,"into","","",3472,[[]]],[11,"try_into","","",3472,[[],["result",4]]],[11,"type_id","","",3472,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::baud_fracfp_mode","",3475,[[]]],[11,"borrow","","",3475,[[]]],[11,"borrow_mut","","",3475,[[]]],[11,"try_from","","",3475,[[],["result",4]]],[11,"into","","",3475,[[]]],[11,"try_into","","",3475,[[],["result",4]]],[11,"type_id","","",3475,[[],["typeid",3]]],[11,"from","","",3476,[[]]],[11,"borrow","","",3476,[[]]],[11,"borrow_mut","","",3476,[[]]],[11,"try_from","","",3476,[[],["result",4]]],[11,"into","","",3476,[[]]],[11,"try_into","","",3476,[[],["result",4]]],[11,"type_id","","",3476,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::baud_usartfp_mode","",3479,[[]]],[11,"borrow","","",3479,[[]]],[11,"borrow_mut","","",3479,[[]]],[11,"try_from","","",3479,[[],["result",4]]],[11,"into","","",3479,[[]]],[11,"try_into","","",3479,[[],["result",4]]],[11,"type_id","","",3479,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::rxpl","",3482,[[]]],[11,"borrow","","",3482,[[]]],[11,"borrow_mut","","",3482,[[]]],[11,"try_from","","",3482,[[],["result",4]]],[11,"into","","",3482,[[]]],[11,"try_into","","",3482,[[],["result",4]]],[11,"type_id","","",3482,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::intenclr","",3485,[[]]],[11,"borrow","","",3485,[[]]],[11,"borrow_mut","","",3485,[[]]],[11,"try_from","","",3485,[[],["result",4]]],[11,"into","","",3485,[[]]],[11,"try_into","","",3485,[[],["result",4]]],[11,"type_id","","",3485,[[],["typeid",3]]],[11,"from","","",3486,[[]]],[11,"borrow","","",3486,[[]]],[11,"borrow_mut","","",3486,[[]]],[11,"try_from","","",3486,[[],["result",4]]],[11,"into","","",3486,[[]]],[11,"try_into","","",3486,[[],["result",4]]],[11,"type_id","","",3486,[[],["typeid",3]]],[11,"from","","",3487,[[]]],[11,"borrow","","",3487,[[]]],[11,"borrow_mut","","",3487,[[]]],[11,"try_from","","",3487,[[],["result",4]]],[11,"into","","",3487,[[]]],[11,"try_into","","",3487,[[],["result",4]]],[11,"type_id","","",3487,[[],["typeid",3]]],[11,"from","","",3488,[[]]],[11,"borrow","","",3488,[[]]],[11,"borrow_mut","","",3488,[[]]],[11,"try_from","","",3488,[[],["result",4]]],[11,"into","","",3488,[[]]],[11,"try_into","","",3488,[[],["result",4]]],[11,"type_id","","",3488,[[],["typeid",3]]],[11,"from","","",3489,[[]]],[11,"borrow","","",3489,[[]]],[11,"borrow_mut","","",3489,[[]]],[11,"try_from","","",3489,[[],["result",4]]],[11,"into","","",3489,[[]]],[11,"try_into","","",3489,[[],["result",4]]],[11,"type_id","","",3489,[[],["typeid",3]]],[11,"from","","",3490,[[]]],[11,"borrow","","",3490,[[]]],[11,"borrow_mut","","",3490,[[]]],[11,"try_from","","",3490,[[],["result",4]]],[11,"into","","",3490,[[]]],[11,"try_into","","",3490,[[],["result",4]]],[11,"type_id","","",3490,[[],["typeid",3]]],[11,"from","","",3491,[[]]],[11,"borrow","","",3491,[[]]],[11,"borrow_mut","","",3491,[[]]],[11,"try_from","","",3491,[[],["result",4]]],[11,"into","","",3491,[[]]],[11,"try_into","","",3491,[[],["result",4]]],[11,"type_id","","",3491,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::intenset","",3494,[[]]],[11,"borrow","","",3494,[[]]],[11,"borrow_mut","","",3494,[[]]],[11,"try_from","","",3494,[[],["result",4]]],[11,"into","","",3494,[[]]],[11,"try_into","","",3494,[[],["result",4]]],[11,"type_id","","",3494,[[],["typeid",3]]],[11,"from","","",3495,[[]]],[11,"borrow","","",3495,[[]]],[11,"borrow_mut","","",3495,[[]]],[11,"try_from","","",3495,[[],["result",4]]],[11,"into","","",3495,[[]]],[11,"try_into","","",3495,[[],["result",4]]],[11,"type_id","","",3495,[[],["typeid",3]]],[11,"from","","",3496,[[]]],[11,"borrow","","",3496,[[]]],[11,"borrow_mut","","",3496,[[]]],[11,"try_from","","",3496,[[],["result",4]]],[11,"into","","",3496,[[]]],[11,"try_into","","",3496,[[],["result",4]]],[11,"type_id","","",3496,[[],["typeid",3]]],[11,"from","","",3497,[[]]],[11,"borrow","","",3497,[[]]],[11,"borrow_mut","","",3497,[[]]],[11,"try_from","","",3497,[[],["result",4]]],[11,"into","","",3497,[[]]],[11,"try_into","","",3497,[[],["result",4]]],[11,"type_id","","",3497,[[],["typeid",3]]],[11,"from","","",3498,[[]]],[11,"borrow","","",3498,[[]]],[11,"borrow_mut","","",3498,[[]]],[11,"try_from","","",3498,[[],["result",4]]],[11,"into","","",3498,[[]]],[11,"try_into","","",3498,[[],["result",4]]],[11,"type_id","","",3498,[[],["typeid",3]]],[11,"from","","",3499,[[]]],[11,"borrow","","",3499,[[]]],[11,"borrow_mut","","",3499,[[]]],[11,"try_from","","",3499,[[],["result",4]]],[11,"into","","",3499,[[]]],[11,"try_into","","",3499,[[],["result",4]]],[11,"type_id","","",3499,[[],["typeid",3]]],[11,"from","","",3500,[[]]],[11,"borrow","","",3500,[[]]],[11,"borrow_mut","","",3500,[[]]],[11,"try_from","","",3500,[[],["result",4]]],[11,"into","","",3500,[[]]],[11,"try_into","","",3500,[[],["result",4]]],[11,"type_id","","",3500,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::intflag","",3503,[[]]],[11,"borrow","","",3503,[[]]],[11,"borrow_mut","","",3503,[[]]],[11,"try_from","","",3503,[[],["result",4]]],[11,"into","","",3503,[[]]],[11,"try_into","","",3503,[[],["result",4]]],[11,"type_id","","",3503,[[],["typeid",3]]],[11,"from","","",3504,[[]]],[11,"borrow","","",3504,[[]]],[11,"borrow_mut","","",3504,[[]]],[11,"try_from","","",3504,[[],["result",4]]],[11,"into","","",3504,[[]]],[11,"try_into","","",3504,[[],["result",4]]],[11,"type_id","","",3504,[[],["typeid",3]]],[11,"from","","",3505,[[]]],[11,"borrow","","",3505,[[]]],[11,"borrow_mut","","",3505,[[]]],[11,"try_from","","",3505,[[],["result",4]]],[11,"into","","",3505,[[]]],[11,"try_into","","",3505,[[],["result",4]]],[11,"type_id","","",3505,[[],["typeid",3]]],[11,"from","","",3506,[[]]],[11,"borrow","","",3506,[[]]],[11,"borrow_mut","","",3506,[[]]],[11,"try_from","","",3506,[[],["result",4]]],[11,"into","","",3506,[[]]],[11,"try_into","","",3506,[[],["result",4]]],[11,"type_id","","",3506,[[],["typeid",3]]],[11,"from","","",3507,[[]]],[11,"borrow","","",3507,[[]]],[11,"borrow_mut","","",3507,[[]]],[11,"try_from","","",3507,[[],["result",4]]],[11,"into","","",3507,[[]]],[11,"try_into","","",3507,[[],["result",4]]],[11,"type_id","","",3507,[[],["typeid",3]]],[11,"from","","",3508,[[]]],[11,"borrow","","",3508,[[]]],[11,"borrow_mut","","",3508,[[]]],[11,"try_from","","",3508,[[],["result",4]]],[11,"into","","",3508,[[]]],[11,"try_into","","",3508,[[],["result",4]]],[11,"type_id","","",3508,[[],["typeid",3]]],[11,"from","","",3509,[[]]],[11,"borrow","","",3509,[[]]],[11,"borrow_mut","","",3509,[[]]],[11,"try_from","","",3509,[[],["result",4]]],[11,"into","","",3509,[[]]],[11,"try_into","","",3509,[[],["result",4]]],[11,"type_id","","",3509,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::status","",3512,[[]]],[11,"borrow","","",3512,[[]]],[11,"borrow_mut","","",3512,[[]]],[11,"try_from","","",3512,[[],["result",4]]],[11,"into","","",3512,[[]]],[11,"try_into","","",3512,[[],["result",4]]],[11,"type_id","","",3512,[[],["typeid",3]]],[11,"from","","",3513,[[]]],[11,"borrow","","",3513,[[]]],[11,"borrow_mut","","",3513,[[]]],[11,"try_from","","",3513,[[],["result",4]]],[11,"into","","",3513,[[]]],[11,"try_into","","",3513,[[],["result",4]]],[11,"type_id","","",3513,[[],["typeid",3]]],[11,"from","","",3514,[[]]],[11,"borrow","","",3514,[[]]],[11,"borrow_mut","","",3514,[[]]],[11,"try_from","","",3514,[[],["result",4]]],[11,"into","","",3514,[[]]],[11,"try_into","","",3514,[[],["result",4]]],[11,"type_id","","",3514,[[],["typeid",3]]],[11,"from","","",3515,[[]]],[11,"borrow","","",3515,[[]]],[11,"borrow_mut","","",3515,[[]]],[11,"try_from","","",3515,[[],["result",4]]],[11,"into","","",3515,[[]]],[11,"try_into","","",3515,[[],["result",4]]],[11,"type_id","","",3515,[[],["typeid",3]]],[11,"from","","",3516,[[]]],[11,"borrow","","",3516,[[]]],[11,"borrow_mut","","",3516,[[]]],[11,"try_from","","",3516,[[],["result",4]]],[11,"into","","",3516,[[]]],[11,"try_into","","",3516,[[],["result",4]]],[11,"type_id","","",3516,[[],["typeid",3]]],[11,"from","","",3517,[[]]],[11,"borrow","","",3517,[[]]],[11,"borrow_mut","","",3517,[[]]],[11,"try_from","","",3517,[[],["result",4]]],[11,"into","","",3517,[[]]],[11,"try_into","","",3517,[[],["result",4]]],[11,"type_id","","",3517,[[],["typeid",3]]],[11,"from","","",3518,[[]]],[11,"borrow","","",3518,[[]]],[11,"borrow_mut","","",3518,[[]]],[11,"try_from","","",3518,[[],["result",4]]],[11,"into","","",3518,[[]]],[11,"try_into","","",3518,[[],["result",4]]],[11,"type_id","","",3518,[[],["typeid",3]]],[11,"from","","",3519,[[]]],[11,"borrow","","",3519,[[]]],[11,"borrow_mut","","",3519,[[]]],[11,"try_from","","",3519,[[],["result",4]]],[11,"into","","",3519,[[]]],[11,"try_into","","",3519,[[],["result",4]]],[11,"type_id","","",3519,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::length","",3523,[[]]],[11,"borrow","","",3523,[[]]],[11,"borrow_mut","","",3523,[[]]],[11,"try_from","","",3523,[[],["result",4]]],[11,"into","","",3523,[[]]],[11,"try_into","","",3523,[[],["result",4]]],[11,"type_id","","",3523,[[],["typeid",3]]],[11,"from","","",3524,[[]]],[11,"borrow","","",3524,[[]]],[11,"borrow_mut","","",3524,[[]]],[11,"try_from","","",3524,[[],["result",4]]],[11,"into","","",3524,[[]]],[11,"try_into","","",3524,[[],["result",4]]],[11,"type_id","","",3524,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::data","",3527,[[]]],[11,"borrow","","",3527,[[]]],[11,"borrow_mut","","",3527,[[]]],[11,"try_from","","",3527,[[],["result",4]]],[11,"into","","",3527,[[]]],[11,"try_into","","",3527,[[],["result",4]]],[11,"type_id","","",3527,[[],["typeid",3]]],[11,"from","atsamd51g::sercom0::usart_int::dbgctrl","",3530,[[]]],[11,"borrow","","",3530,[[]]],[11,"borrow_mut","","",3530,[[]]],[11,"try_from","","",3530,[[],["result",4]]],[11,"into","","",3530,[[]]],[11,"try_into","","",3530,[[],["result",4]]],[11,"type_id","","",3530,[[],["typeid",3]]],[11,"from","atsamd51g::supc","",3534,[[]]],[11,"borrow","","",3534,[[]]],[11,"borrow_mut","","",3534,[[]]],[11,"try_from","","",3534,[[],["result",4]]],[11,"into","","",3534,[[]]],[11,"try_into","","",3534,[[],["result",4]]],[11,"type_id","","",3534,[[],["typeid",3]]],[11,"from","atsamd51g::supc::intenclr","",3535,[[]]],[11,"borrow","","",3535,[[]]],[11,"borrow_mut","","",3535,[[]]],[11,"try_from","","",3535,[[],["result",4]]],[11,"into","","",3535,[[]]],[11,"try_into","","",3535,[[],["result",4]]],[11,"type_id","","",3535,[[],["typeid",3]]],[11,"from","","",3536,[[]]],[11,"borrow","","",3536,[[]]],[11,"borrow_mut","","",3536,[[]]],[11,"try_from","","",3536,[[],["result",4]]],[11,"into","","",3536,[[]]],[11,"try_into","","",3536,[[],["result",4]]],[11,"type_id","","",3536,[[],["typeid",3]]],[11,"from","","",3537,[[]]],[11,"borrow","","",3537,[[]]],[11,"borrow_mut","","",3537,[[]]],[11,"try_from","","",3537,[[],["result",4]]],[11,"into","","",3537,[[]]],[11,"try_into","","",3537,[[],["result",4]]],[11,"type_id","","",3537,[[],["typeid",3]]],[11,"from","","",3538,[[]]],[11,"borrow","","",3538,[[]]],[11,"borrow_mut","","",3538,[[]]],[11,"try_from","","",3538,[[],["result",4]]],[11,"into","","",3538,[[]]],[11,"try_into","","",3538,[[],["result",4]]],[11,"type_id","","",3538,[[],["typeid",3]]],[11,"from","","",3539,[[]]],[11,"borrow","","",3539,[[]]],[11,"borrow_mut","","",3539,[[]]],[11,"try_from","","",3539,[[],["result",4]]],[11,"into","","",3539,[[]]],[11,"try_into","","",3539,[[],["result",4]]],[11,"type_id","","",3539,[[],["typeid",3]]],[11,"from","atsamd51g::supc::intenset","",3542,[[]]],[11,"borrow","","",3542,[[]]],[11,"borrow_mut","","",3542,[[]]],[11,"try_from","","",3542,[[],["result",4]]],[11,"into","","",3542,[[]]],[11,"try_into","","",3542,[[],["result",4]]],[11,"type_id","","",3542,[[],["typeid",3]]],[11,"from","","",3543,[[]]],[11,"borrow","","",3543,[[]]],[11,"borrow_mut","","",3543,[[]]],[11,"try_from","","",3543,[[],["result",4]]],[11,"into","","",3543,[[]]],[11,"try_into","","",3543,[[],["result",4]]],[11,"type_id","","",3543,[[],["typeid",3]]],[11,"from","","",3544,[[]]],[11,"borrow","","",3544,[[]]],[11,"borrow_mut","","",3544,[[]]],[11,"try_from","","",3544,[[],["result",4]]],[11,"into","","",3544,[[]]],[11,"try_into","","",3544,[[],["result",4]]],[11,"type_id","","",3544,[[],["typeid",3]]],[11,"from","","",3545,[[]]],[11,"borrow","","",3545,[[]]],[11,"borrow_mut","","",3545,[[]]],[11,"try_from","","",3545,[[],["result",4]]],[11,"into","","",3545,[[]]],[11,"try_into","","",3545,[[],["result",4]]],[11,"type_id","","",3545,[[],["typeid",3]]],[11,"from","","",3546,[[]]],[11,"borrow","","",3546,[[]]],[11,"borrow_mut","","",3546,[[]]],[11,"try_from","","",3546,[[],["result",4]]],[11,"into","","",3546,[[]]],[11,"try_into","","",3546,[[],["result",4]]],[11,"type_id","","",3546,[[],["typeid",3]]],[11,"from","atsamd51g::supc::intflag","",3549,[[]]],[11,"borrow","","",3549,[[]]],[11,"borrow_mut","","",3549,[[]]],[11,"try_from","","",3549,[[],["result",4]]],[11,"into","","",3549,[[]]],[11,"try_into","","",3549,[[],["result",4]]],[11,"type_id","","",3549,[[],["typeid",3]]],[11,"from","","",3550,[[]]],[11,"borrow","","",3550,[[]]],[11,"borrow_mut","","",3550,[[]]],[11,"try_from","","",3550,[[],["result",4]]],[11,"into","","",3550,[[]]],[11,"try_into","","",3550,[[],["result",4]]],[11,"type_id","","",3550,[[],["typeid",3]]],[11,"from","","",3551,[[]]],[11,"borrow","","",3551,[[]]],[11,"borrow_mut","","",3551,[[]]],[11,"try_from","","",3551,[[],["result",4]]],[11,"into","","",3551,[[]]],[11,"try_into","","",3551,[[],["result",4]]],[11,"type_id","","",3551,[[],["typeid",3]]],[11,"from","","",3552,[[]]],[11,"borrow","","",3552,[[]]],[11,"borrow_mut","","",3552,[[]]],[11,"try_from","","",3552,[[],["result",4]]],[11,"into","","",3552,[[]]],[11,"try_into","","",3552,[[],["result",4]]],[11,"type_id","","",3552,[[],["typeid",3]]],[11,"from","","",3553,[[]]],[11,"borrow","","",3553,[[]]],[11,"borrow_mut","","",3553,[[]]],[11,"try_from","","",3553,[[],["result",4]]],[11,"into","","",3553,[[]]],[11,"try_into","","",3553,[[],["result",4]]],[11,"type_id","","",3553,[[],["typeid",3]]],[11,"from","atsamd51g::supc::bod33","",3559,[[]]],[11,"borrow","","",3559,[[]]],[11,"borrow_mut","","",3559,[[]]],[11,"try_from","","",3559,[[],["result",4]]],[11,"into","","",3559,[[]]],[11,"try_into","","",3559,[[],["result",4]]],[11,"type_id","","",3559,[[],["typeid",3]]],[11,"from","","",3561,[[]]],[11,"borrow","","",3561,[[]]],[11,"borrow_mut","","",3561,[[]]],[11,"try_from","","",3561,[[],["result",4]]],[11,"into","","",3561,[[]]],[11,"try_into","","",3561,[[],["result",4]]],[11,"type_id","","",3561,[[],["typeid",3]]],[11,"from","","",3562,[[]]],[11,"borrow","","",3562,[[]]],[11,"borrow_mut","","",3562,[[]]],[11,"try_from","","",3562,[[],["result",4]]],[11,"into","","",3562,[[]]],[11,"try_into","","",3562,[[],["result",4]]],[11,"type_id","","",3562,[[],["typeid",3]]],[11,"from","","",3563,[[]]],[11,"borrow","","",3563,[[]]],[11,"borrow_mut","","",3563,[[]]],[11,"try_from","","",3563,[[],["result",4]]],[11,"into","","",3563,[[]]],[11,"try_into","","",3563,[[],["result",4]]],[11,"type_id","","",3563,[[],["typeid",3]]],[11,"from","","",3564,[[]]],[11,"borrow","","",3564,[[]]],[11,"borrow_mut","","",3564,[[]]],[11,"try_from","","",3564,[[],["result",4]]],[11,"into","","",3564,[[]]],[11,"try_into","","",3564,[[],["result",4]]],[11,"type_id","","",3564,[[],["typeid",3]]],[11,"from","","",3565,[[]]],[11,"borrow","","",3565,[[]]],[11,"borrow_mut","","",3565,[[]]],[11,"try_from","","",3565,[[],["result",4]]],[11,"into","","",3565,[[]]],[11,"try_into","","",3565,[[],["result",4]]],[11,"type_id","","",3565,[[],["typeid",3]]],[11,"from","","",3566,[[]]],[11,"borrow","","",3566,[[]]],[11,"borrow_mut","","",3566,[[]]],[11,"try_from","","",3566,[[],["result",4]]],[11,"into","","",3566,[[]]],[11,"try_into","","",3566,[[],["result",4]]],[11,"type_id","","",3566,[[],["typeid",3]]],[11,"from","","",3568,[[]]],[11,"borrow","","",3568,[[]]],[11,"borrow_mut","","",3568,[[]]],[11,"try_from","","",3568,[[],["result",4]]],[11,"into","","",3568,[[]]],[11,"try_into","","",3568,[[],["result",4]]],[11,"type_id","","",3568,[[],["typeid",3]]],[11,"from","","",3569,[[]]],[11,"borrow","","",3569,[[]]],[11,"borrow_mut","","",3569,[[]]],[11,"try_from","","",3569,[[],["result",4]]],[11,"into","","",3569,[[]]],[11,"try_into","","",3569,[[],["result",4]]],[11,"type_id","","",3569,[[],["typeid",3]]],[11,"from","","",3570,[[]]],[11,"borrow","","",3570,[[]]],[11,"borrow_mut","","",3570,[[]]],[11,"try_from","","",3570,[[],["result",4]]],[11,"into","","",3570,[[]]],[11,"try_into","","",3570,[[],["result",4]]],[11,"type_id","","",3570,[[],["typeid",3]]],[11,"from","","",3557,[[]]],[11,"borrow","","",3557,[[]]],[11,"borrow_mut","","",3557,[[]]],[11,"try_from","","",3557,[[],["result",4]]],[11,"into","","",3557,[[]]],[11,"try_into","","",3557,[[],["result",4]]],[11,"type_id","","",3557,[[],["typeid",3]]],[11,"from","","",3558,[[]]],[11,"borrow","","",3558,[[]]],[11,"borrow_mut","","",3558,[[]]],[11,"try_from","","",3558,[[],["result",4]]],[11,"into","","",3558,[[]]],[11,"try_into","","",3558,[[],["result",4]]],[11,"type_id","","",3558,[[],["typeid",3]]],[11,"from","atsamd51g::supc::vreg","",3574,[[]]],[11,"borrow","","",3574,[[]]],[11,"borrow_mut","","",3574,[[]]],[11,"try_from","","",3574,[[],["result",4]]],[11,"into","","",3574,[[]]],[11,"try_into","","",3574,[[],["result",4]]],[11,"type_id","","",3574,[[],["typeid",3]]],[11,"from","","",3576,[[]]],[11,"borrow","","",3576,[[]]],[11,"borrow_mut","","",3576,[[]]],[11,"try_from","","",3576,[[],["result",4]]],[11,"into","","",3576,[[]]],[11,"try_into","","",3576,[[],["result",4]]],[11,"type_id","","",3576,[[],["typeid",3]]],[11,"from","","",3577,[[]]],[11,"borrow","","",3577,[[]]],[11,"borrow_mut","","",3577,[[]]],[11,"try_from","","",3577,[[],["result",4]]],[11,"into","","",3577,[[]]],[11,"try_into","","",3577,[[],["result",4]]],[11,"type_id","","",3577,[[],["typeid",3]]],[11,"from","","",3578,[[]]],[11,"borrow","","",3578,[[]]],[11,"borrow_mut","","",3578,[[]]],[11,"try_from","","",3578,[[],["result",4]]],[11,"into","","",3578,[[]]],[11,"try_into","","",3578,[[],["result",4]]],[11,"type_id","","",3578,[[],["typeid",3]]],[11,"from","","",3579,[[]]],[11,"borrow","","",3579,[[]]],[11,"borrow_mut","","",3579,[[]]],[11,"try_from","","",3579,[[],["result",4]]],[11,"into","","",3579,[[]]],[11,"try_into","","",3579,[[],["result",4]]],[11,"type_id","","",3579,[[],["typeid",3]]],[11,"from","","",3573,[[]]],[11,"borrow","","",3573,[[]]],[11,"borrow_mut","","",3573,[[]]],[11,"try_from","","",3573,[[],["result",4]]],[11,"into","","",3573,[[]]],[11,"try_into","","",3573,[[],["result",4]]],[11,"type_id","","",3573,[[],["typeid",3]]],[11,"from","atsamd51g::supc::vref","",3583,[[]]],[11,"borrow","","",3583,[[]]],[11,"borrow_mut","","",3583,[[]]],[11,"try_from","","",3583,[[],["result",4]]],[11,"into","","",3583,[[]]],[11,"try_into","","",3583,[[],["result",4]]],[11,"type_id","","",3583,[[],["typeid",3]]],[11,"from","","",3584,[[]]],[11,"borrow","","",3584,[[]]],[11,"borrow_mut","","",3584,[[]]],[11,"try_from","","",3584,[[],["result",4]]],[11,"into","","",3584,[[]]],[11,"try_into","","",3584,[[],["result",4]]],[11,"type_id","","",3584,[[],["typeid",3]]],[11,"from","","",3585,[[]]],[11,"borrow","","",3585,[[]]],[11,"borrow_mut","","",3585,[[]]],[11,"try_from","","",3585,[[],["result",4]]],[11,"into","","",3585,[[]]],[11,"try_into","","",3585,[[],["result",4]]],[11,"type_id","","",3585,[[],["typeid",3]]],[11,"from","","",3586,[[]]],[11,"borrow","","",3586,[[]]],[11,"borrow_mut","","",3586,[[]]],[11,"try_from","","",3586,[[],["result",4]]],[11,"into","","",3586,[[]]],[11,"try_into","","",3586,[[],["result",4]]],[11,"type_id","","",3586,[[],["typeid",3]]],[11,"from","","",3587,[[]]],[11,"borrow","","",3587,[[]]],[11,"borrow_mut","","",3587,[[]]],[11,"try_from","","",3587,[[],["result",4]]],[11,"into","","",3587,[[]]],[11,"try_into","","",3587,[[],["result",4]]],[11,"type_id","","",3587,[[],["typeid",3]]],[11,"from","","",3589,[[]]],[11,"borrow","","",3589,[[]]],[11,"borrow_mut","","",3589,[[]]],[11,"try_from","","",3589,[[],["result",4]]],[11,"into","","",3589,[[]]],[11,"try_into","","",3589,[[],["result",4]]],[11,"type_id","","",3589,[[],["typeid",3]]],[11,"from","","",3582,[[]]],[11,"borrow","","",3582,[[]]],[11,"borrow_mut","","",3582,[[]]],[11,"try_from","","",3582,[[],["result",4]]],[11,"into","","",3582,[[]]],[11,"try_into","","",3582,[[],["result",4]]],[11,"type_id","","",3582,[[],["typeid",3]]],[11,"from","atsamd51g::supc::bbps","",3594,[[]]],[11,"borrow","","",3594,[[]]],[11,"borrow_mut","","",3594,[[]]],[11,"try_from","","",3594,[[],["result",4]]],[11,"into","","",3594,[[]]],[11,"try_into","","",3594,[[],["result",4]]],[11,"type_id","","",3594,[[],["typeid",3]]],[11,"from","","",3595,[[]]],[11,"borrow","","",3595,[[]]],[11,"borrow_mut","","",3595,[[]]],[11,"try_from","","",3595,[[],["result",4]]],[11,"into","","",3595,[[]]],[11,"try_into","","",3595,[[],["result",4]]],[11,"type_id","","",3595,[[],["typeid",3]]],[11,"from","","",3592,[[]]],[11,"borrow","","",3592,[[]]],[11,"borrow_mut","","",3592,[[]]],[11,"try_from","","",3592,[[],["result",4]]],[11,"into","","",3592,[[]]],[11,"try_into","","",3592,[[],["result",4]]],[11,"type_id","","",3592,[[],["typeid",3]]],[11,"from","atsamd51g::supc::bkout","",3598,[[]]],[11,"borrow","","",3598,[[]]],[11,"borrow_mut","","",3598,[[]]],[11,"try_from","","",3598,[[],["result",4]]],[11,"into","","",3598,[[]]],[11,"try_into","","",3598,[[],["result",4]]],[11,"type_id","","",3598,[[],["typeid",3]]],[11,"from","","",3599,[[]]],[11,"borrow","","",3599,[[]]],[11,"borrow_mut","","",3599,[[]]],[11,"try_from","","",3599,[[],["result",4]]],[11,"into","","",3599,[[]]],[11,"try_into","","",3599,[[],["result",4]]],[11,"type_id","","",3599,[[],["typeid",3]]],[11,"from","","",3600,[[]]],[11,"borrow","","",3600,[[]]],[11,"borrow_mut","","",3600,[[]]],[11,"try_from","","",3600,[[],["result",4]]],[11,"into","","",3600,[[]]],[11,"try_into","","",3600,[[],["result",4]]],[11,"type_id","","",3600,[[],["typeid",3]]],[11,"from","","",3601,[[]]],[11,"borrow","","",3601,[[]]],[11,"borrow_mut","","",3601,[[]]],[11,"try_from","","",3601,[[],["result",4]]],[11,"into","","",3601,[[]]],[11,"try_into","","",3601,[[],["result",4]]],[11,"type_id","","",3601,[[],["typeid",3]]],[11,"from","","",3602,[[]]],[11,"borrow","","",3602,[[]]],[11,"borrow_mut","","",3602,[[]]],[11,"try_from","","",3602,[[],["result",4]]],[11,"into","","",3602,[[]]],[11,"try_into","","",3602,[[],["result",4]]],[11,"type_id","","",3602,[[],["typeid",3]]],[11,"from","","",3603,[[]]],[11,"borrow","","",3603,[[]]],[11,"borrow_mut","","",3603,[[]]],[11,"try_from","","",3603,[[],["result",4]]],[11,"into","","",3603,[[]]],[11,"try_into","","",3603,[[],["result",4]]],[11,"type_id","","",3603,[[],["typeid",3]]],[11,"from","","",3604,[[]]],[11,"borrow","","",3604,[[]]],[11,"borrow_mut","","",3604,[[]]],[11,"try_from","","",3604,[[],["result",4]]],[11,"into","","",3604,[[]]],[11,"try_into","","",3604,[[],["result",4]]],[11,"type_id","","",3604,[[],["typeid",3]]],[11,"from","","",3605,[[]]],[11,"borrow","","",3605,[[]]],[11,"borrow_mut","","",3605,[[]]],[11,"try_from","","",3605,[[],["result",4]]],[11,"into","","",3605,[[]]],[11,"try_into","","",3605,[[],["result",4]]],[11,"type_id","","",3605,[[],["typeid",3]]],[11,"from","atsamd51g::tc0","",3918,[[]]],[11,"borrow","","",3918,[[]]],[11,"borrow_mut","","",3918,[[]]],[11,"try_from","","",3918,[[],["result",4]]],[11,"into","","",3918,[[]]],[11,"try_into","","",3918,[[],["result",4]]],[11,"type_id","","",3918,[[],["typeid",3]]],[11,"from","","",3609,[[]]],[11,"borrow","","",3609,[[]]],[11,"borrow_mut","","",3609,[[]]],[11,"try_from","","",3609,[[],["result",4]]],[11,"into","","",3609,[[]]],[11,"try_into","","",3609,[[],["result",4]]],[11,"type_id","","",3609,[[],["typeid",3]]],[11,"from","","",3610,[[]]],[11,"borrow","","",3610,[[]]],[11,"borrow_mut","","",3610,[[]]],[11,"try_from","","",3610,[[],["result",4]]],[11,"into","","",3610,[[]]],[11,"try_into","","",3610,[[],["result",4]]],[11,"type_id","","",3610,[[],["typeid",3]]],[11,"from","","",3611,[[]]],[11,"borrow","","",3611,[[]]],[11,"borrow_mut","","",3611,[[]]],[11,"try_from","","",3611,[[],["result",4]]],[11,"into","","",3611,[[]]],[11,"try_into","","",3611,[[],["result",4]]],[11,"type_id","","",3611,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::ctrla","",3617,[[]]],[11,"borrow","","",3617,[[]]],[11,"borrow_mut","","",3617,[[]]],[11,"try_from","","",3617,[[],["result",4]]],[11,"into","","",3617,[[]]],[11,"try_into","","",3617,[[],["result",4]]],[11,"type_id","","",3617,[[],["typeid",3]]],[11,"from","","",3618,[[]]],[11,"borrow","","",3618,[[]]],[11,"borrow_mut","","",3618,[[]]],[11,"try_from","","",3618,[[],["result",4]]],[11,"into","","",3618,[[]]],[11,"try_into","","",3618,[[],["result",4]]],[11,"type_id","","",3618,[[],["typeid",3]]],[11,"from","","",3620,[[]]],[11,"borrow","","",3620,[[]]],[11,"borrow_mut","","",3620,[[]]],[11,"try_from","","",3620,[[],["result",4]]],[11,"into","","",3620,[[]]],[11,"try_into","","",3620,[[],["result",4]]],[11,"type_id","","",3620,[[],["typeid",3]]],[11,"from","","",3622,[[]]],[11,"borrow","","",3622,[[]]],[11,"borrow_mut","","",3622,[[]]],[11,"try_from","","",3622,[[],["result",4]]],[11,"into","","",3622,[[]]],[11,"try_into","","",3622,[[],["result",4]]],[11,"type_id","","",3622,[[],["typeid",3]]],[11,"from","","",3623,[[]]],[11,"borrow","","",3623,[[]]],[11,"borrow_mut","","",3623,[[]]],[11,"try_from","","",3623,[[],["result",4]]],[11,"into","","",3623,[[]]],[11,"try_into","","",3623,[[],["result",4]]],[11,"type_id","","",3623,[[],["typeid",3]]],[11,"from","","",3624,[[]]],[11,"borrow","","",3624,[[]]],[11,"borrow_mut","","",3624,[[]]],[11,"try_from","","",3624,[[],["result",4]]],[11,"into","","",3624,[[]]],[11,"try_into","","",3624,[[],["result",4]]],[11,"type_id","","",3624,[[],["typeid",3]]],[11,"from","","",3626,[[]]],[11,"borrow","","",3626,[[]]],[11,"borrow_mut","","",3626,[[]]],[11,"try_from","","",3626,[[],["result",4]]],[11,"into","","",3626,[[]]],[11,"try_into","","",3626,[[],["result",4]]],[11,"type_id","","",3626,[[],["typeid",3]]],[11,"from","","",3627,[[]]],[11,"borrow","","",3627,[[]]],[11,"borrow_mut","","",3627,[[]]],[11,"try_from","","",3627,[[],["result",4]]],[11,"into","","",3627,[[]]],[11,"try_into","","",3627,[[],["result",4]]],[11,"type_id","","",3627,[[],["typeid",3]]],[11,"from","","",3628,[[]]],[11,"borrow","","",3628,[[]]],[11,"borrow_mut","","",3628,[[]]],[11,"try_from","","",3628,[[],["result",4]]],[11,"into","","",3628,[[]]],[11,"try_into","","",3628,[[],["result",4]]],[11,"type_id","","",3628,[[],["typeid",3]]],[11,"from","","",3629,[[]]],[11,"borrow","","",3629,[[]]],[11,"borrow_mut","","",3629,[[]]],[11,"try_from","","",3629,[[],["result",4]]],[11,"into","","",3629,[[]]],[11,"try_into","","",3629,[[],["result",4]]],[11,"type_id","","",3629,[[],["typeid",3]]],[11,"from","","",3630,[[]]],[11,"borrow","","",3630,[[]]],[11,"borrow_mut","","",3630,[[]]],[11,"try_from","","",3630,[[],["result",4]]],[11,"into","","",3630,[[]]],[11,"try_into","","",3630,[[],["result",4]]],[11,"type_id","","",3630,[[],["typeid",3]]],[11,"from","","",3631,[[]]],[11,"borrow","","",3631,[[]]],[11,"borrow_mut","","",3631,[[]]],[11,"try_from","","",3631,[[],["result",4]]],[11,"into","","",3631,[[]]],[11,"try_into","","",3631,[[],["result",4]]],[11,"type_id","","",3631,[[],["typeid",3]]],[11,"from","","",3633,[[]]],[11,"borrow","","",3633,[[]]],[11,"borrow_mut","","",3633,[[]]],[11,"try_from","","",3633,[[],["result",4]]],[11,"into","","",3633,[[]]],[11,"try_into","","",3633,[[],["result",4]]],[11,"type_id","","",3633,[[],["typeid",3]]],[11,"from","","",3635,[[]]],[11,"borrow","","",3635,[[]]],[11,"borrow_mut","","",3635,[[]]],[11,"try_from","","",3635,[[],["result",4]]],[11,"into","","",3635,[[]]],[11,"try_into","","",3635,[[],["result",4]]],[11,"type_id","","",3635,[[],["typeid",3]]],[11,"from","","",3636,[[]]],[11,"borrow","","",3636,[[]]],[11,"borrow_mut","","",3636,[[]]],[11,"try_from","","",3636,[[],["result",4]]],[11,"into","","",3636,[[]]],[11,"try_into","","",3636,[[],["result",4]]],[11,"type_id","","",3636,[[],["typeid",3]]],[11,"from","","",3612,[[]]],[11,"borrow","","",3612,[[]]],[11,"borrow_mut","","",3612,[[]]],[11,"try_from","","",3612,[[],["result",4]]],[11,"into","","",3612,[[]]],[11,"try_into","","",3612,[[],["result",4]]],[11,"type_id","","",3612,[[],["typeid",3]]],[11,"from","","",3613,[[]]],[11,"borrow","","",3613,[[]]],[11,"borrow_mut","","",3613,[[]]],[11,"try_from","","",3613,[[],["result",4]]],[11,"into","","",3613,[[]]],[11,"try_into","","",3613,[[],["result",4]]],[11,"type_id","","",3613,[[],["typeid",3]]],[11,"from","","",3614,[[]]],[11,"borrow","","",3614,[[]]],[11,"borrow_mut","","",3614,[[]]],[11,"try_from","","",3614,[[],["result",4]]],[11,"into","","",3614,[[]]],[11,"try_into","","",3614,[[],["result",4]]],[11,"type_id","","",3614,[[],["typeid",3]]],[11,"from","","",3615,[[]]],[11,"borrow","","",3615,[[]]],[11,"borrow_mut","","",3615,[[]]],[11,"try_from","","",3615,[[],["result",4]]],[11,"into","","",3615,[[]]],[11,"try_into","","",3615,[[],["result",4]]],[11,"type_id","","",3615,[[],["typeid",3]]],[11,"from","","",3616,[[]]],[11,"borrow","","",3616,[[]]],[11,"borrow_mut","","",3616,[[]]],[11,"try_from","","",3616,[[],["result",4]]],[11,"into","","",3616,[[]]],[11,"try_into","","",3616,[[],["result",4]]],[11,"type_id","","",3616,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::ctrlbclr","",3640,[[]]],[11,"borrow","","",3640,[[]]],[11,"borrow_mut","","",3640,[[]]],[11,"try_from","","",3640,[[],["result",4]]],[11,"into","","",3640,[[]]],[11,"try_into","","",3640,[[],["result",4]]],[11,"type_id","","",3640,[[],["typeid",3]]],[11,"from","","",3641,[[]]],[11,"borrow","","",3641,[[]]],[11,"borrow_mut","","",3641,[[]]],[11,"try_from","","",3641,[[],["result",4]]],[11,"into","","",3641,[[]]],[11,"try_into","","",3641,[[],["result",4]]],[11,"type_id","","",3641,[[],["typeid",3]]],[11,"from","","",3642,[[]]],[11,"borrow","","",3642,[[]]],[11,"borrow_mut","","",3642,[[]]],[11,"try_from","","",3642,[[],["result",4]]],[11,"into","","",3642,[[]]],[11,"try_into","","",3642,[[],["result",4]]],[11,"type_id","","",3642,[[],["typeid",3]]],[11,"from","","",3644,[[]]],[11,"borrow","","",3644,[[]]],[11,"borrow_mut","","",3644,[[]]],[11,"try_from","","",3644,[[],["result",4]]],[11,"into","","",3644,[[]]],[11,"try_into","","",3644,[[],["result",4]]],[11,"type_id","","",3644,[[],["typeid",3]]],[11,"from","","",3639,[[]]],[11,"borrow","","",3639,[[]]],[11,"borrow_mut","","",3639,[[]]],[11,"try_from","","",3639,[[],["result",4]]],[11,"into","","",3639,[[]]],[11,"try_into","","",3639,[[],["result",4]]],[11,"type_id","","",3639,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::ctrlbset","",3648,[[]]],[11,"borrow","","",3648,[[]]],[11,"borrow_mut","","",3648,[[]]],[11,"try_from","","",3648,[[],["result",4]]],[11,"into","","",3648,[[]]],[11,"try_into","","",3648,[[],["result",4]]],[11,"type_id","","",3648,[[],["typeid",3]]],[11,"from","","",3649,[[]]],[11,"borrow","","",3649,[[]]],[11,"borrow_mut","","",3649,[[]]],[11,"try_from","","",3649,[[],["result",4]]],[11,"into","","",3649,[[]]],[11,"try_into","","",3649,[[],["result",4]]],[11,"type_id","","",3649,[[],["typeid",3]]],[11,"from","","",3650,[[]]],[11,"borrow","","",3650,[[]]],[11,"borrow_mut","","",3650,[[]]],[11,"try_from","","",3650,[[],["result",4]]],[11,"into","","",3650,[[]]],[11,"try_into","","",3650,[[],["result",4]]],[11,"type_id","","",3650,[[],["typeid",3]]],[11,"from","","",3652,[[]]],[11,"borrow","","",3652,[[]]],[11,"borrow_mut","","",3652,[[]]],[11,"try_from","","",3652,[[],["result",4]]],[11,"into","","",3652,[[]]],[11,"try_into","","",3652,[[],["result",4]]],[11,"type_id","","",3652,[[],["typeid",3]]],[11,"from","","",3647,[[]]],[11,"borrow","","",3647,[[]]],[11,"borrow_mut","","",3647,[[]]],[11,"try_from","","",3647,[[],["result",4]]],[11,"into","","",3647,[[]]],[11,"try_into","","",3647,[[],["result",4]]],[11,"type_id","","",3647,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::evctrl","",3657,[[]]],[11,"borrow","","",3657,[[]]],[11,"borrow_mut","","",3657,[[]]],[11,"try_from","","",3657,[[],["result",4]]],[11,"into","","",3657,[[]]],[11,"try_into","","",3657,[[],["result",4]]],[11,"type_id","","",3657,[[],["typeid",3]]],[11,"from","","",3658,[[]]],[11,"borrow","","",3658,[[]]],[11,"borrow_mut","","",3658,[[]]],[11,"try_from","","",3658,[[],["result",4]]],[11,"into","","",3658,[[]]],[11,"try_into","","",3658,[[],["result",4]]],[11,"type_id","","",3658,[[],["typeid",3]]],[11,"from","","",3659,[[]]],[11,"borrow","","",3659,[[]]],[11,"borrow_mut","","",3659,[[]]],[11,"try_from","","",3659,[[],["result",4]]],[11,"into","","",3659,[[]]],[11,"try_into","","",3659,[[],["result",4]]],[11,"type_id","","",3659,[[],["typeid",3]]],[11,"from","","",3660,[[]]],[11,"borrow","","",3660,[[]]],[11,"borrow_mut","","",3660,[[]]],[11,"try_from","","",3660,[[],["result",4]]],[11,"into","","",3660,[[]]],[11,"try_into","","",3660,[[],["result",4]]],[11,"type_id","","",3660,[[],["typeid",3]]],[11,"from","","",3661,[[]]],[11,"borrow","","",3661,[[]]],[11,"borrow_mut","","",3661,[[]]],[11,"try_from","","",3661,[[],["result",4]]],[11,"into","","",3661,[[]]],[11,"try_into","","",3661,[[],["result",4]]],[11,"type_id","","",3661,[[],["typeid",3]]],[11,"from","","",3662,[[]]],[11,"borrow","","",3662,[[]]],[11,"borrow_mut","","",3662,[[]]],[11,"try_from","","",3662,[[],["result",4]]],[11,"into","","",3662,[[]]],[11,"try_into","","",3662,[[],["result",4]]],[11,"type_id","","",3662,[[],["typeid",3]]],[11,"from","","",3655,[[]]],[11,"borrow","","",3655,[[]]],[11,"borrow_mut","","",3655,[[]]],[11,"try_from","","",3655,[[],["result",4]]],[11,"into","","",3655,[[]]],[11,"try_into","","",3655,[[],["result",4]]],[11,"type_id","","",3655,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::intenclr","",3665,[[]]],[11,"borrow","","",3665,[[]]],[11,"borrow_mut","","",3665,[[]]],[11,"try_from","","",3665,[[],["result",4]]],[11,"into","","",3665,[[]]],[11,"try_into","","",3665,[[],["result",4]]],[11,"type_id","","",3665,[[],["typeid",3]]],[11,"from","","",3666,[[]]],[11,"borrow","","",3666,[[]]],[11,"borrow_mut","","",3666,[[]]],[11,"try_from","","",3666,[[],["result",4]]],[11,"into","","",3666,[[]]],[11,"try_into","","",3666,[[],["result",4]]],[11,"type_id","","",3666,[[],["typeid",3]]],[11,"from","","",3667,[[]]],[11,"borrow","","",3667,[[]]],[11,"borrow_mut","","",3667,[[]]],[11,"try_from","","",3667,[[],["result",4]]],[11,"into","","",3667,[[]]],[11,"try_into","","",3667,[[],["result",4]]],[11,"type_id","","",3667,[[],["typeid",3]]],[11,"from","","",3668,[[]]],[11,"borrow","","",3668,[[]]],[11,"borrow_mut","","",3668,[[]]],[11,"try_from","","",3668,[[],["result",4]]],[11,"into","","",3668,[[]]],[11,"try_into","","",3668,[[],["result",4]]],[11,"type_id","","",3668,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::intenset","",3671,[[]]],[11,"borrow","","",3671,[[]]],[11,"borrow_mut","","",3671,[[]]],[11,"try_from","","",3671,[[],["result",4]]],[11,"into","","",3671,[[]]],[11,"try_into","","",3671,[[],["result",4]]],[11,"type_id","","",3671,[[],["typeid",3]]],[11,"from","","",3672,[[]]],[11,"borrow","","",3672,[[]]],[11,"borrow_mut","","",3672,[[]]],[11,"try_from","","",3672,[[],["result",4]]],[11,"into","","",3672,[[]]],[11,"try_into","","",3672,[[],["result",4]]],[11,"type_id","","",3672,[[],["typeid",3]]],[11,"from","","",3673,[[]]],[11,"borrow","","",3673,[[]]],[11,"borrow_mut","","",3673,[[]]],[11,"try_from","","",3673,[[],["result",4]]],[11,"into","","",3673,[[]]],[11,"try_into","","",3673,[[],["result",4]]],[11,"type_id","","",3673,[[],["typeid",3]]],[11,"from","","",3674,[[]]],[11,"borrow","","",3674,[[]]],[11,"borrow_mut","","",3674,[[]]],[11,"try_from","","",3674,[[],["result",4]]],[11,"into","","",3674,[[]]],[11,"try_into","","",3674,[[],["result",4]]],[11,"type_id","","",3674,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::intflag","",3677,[[]]],[11,"borrow","","",3677,[[]]],[11,"borrow_mut","","",3677,[[]]],[11,"try_from","","",3677,[[],["result",4]]],[11,"into","","",3677,[[]]],[11,"try_into","","",3677,[[],["result",4]]],[11,"type_id","","",3677,[[],["typeid",3]]],[11,"from","","",3678,[[]]],[11,"borrow","","",3678,[[]]],[11,"borrow_mut","","",3678,[[]]],[11,"try_from","","",3678,[[],["result",4]]],[11,"into","","",3678,[[]]],[11,"try_into","","",3678,[[],["result",4]]],[11,"type_id","","",3678,[[],["typeid",3]]],[11,"from","","",3679,[[]]],[11,"borrow","","",3679,[[]]],[11,"borrow_mut","","",3679,[[]]],[11,"try_from","","",3679,[[],["result",4]]],[11,"into","","",3679,[[]]],[11,"try_into","","",3679,[[],["result",4]]],[11,"type_id","","",3679,[[],["typeid",3]]],[11,"from","","",3680,[[]]],[11,"borrow","","",3680,[[]]],[11,"borrow_mut","","",3680,[[]]],[11,"try_from","","",3680,[[],["result",4]]],[11,"into","","",3680,[[]]],[11,"try_into","","",3680,[[],["result",4]]],[11,"type_id","","",3680,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::status","",3683,[[]]],[11,"borrow","","",3683,[[]]],[11,"borrow_mut","","",3683,[[]]],[11,"try_from","","",3683,[[],["result",4]]],[11,"into","","",3683,[[]]],[11,"try_into","","",3683,[[],["result",4]]],[11,"type_id","","",3683,[[],["typeid",3]]],[11,"from","","",3684,[[]]],[11,"borrow","","",3684,[[]]],[11,"borrow_mut","","",3684,[[]]],[11,"try_from","","",3684,[[],["result",4]]],[11,"into","","",3684,[[]]],[11,"try_into","","",3684,[[],["result",4]]],[11,"type_id","","",3684,[[],["typeid",3]]],[11,"from","","",3685,[[]]],[11,"borrow","","",3685,[[]]],[11,"borrow_mut","","",3685,[[]]],[11,"try_from","","",3685,[[],["result",4]]],[11,"into","","",3685,[[]]],[11,"try_into","","",3685,[[],["result",4]]],[11,"type_id","","",3685,[[],["typeid",3]]],[11,"from","","",3686,[[]]],[11,"borrow","","",3686,[[]]],[11,"borrow_mut","","",3686,[[]]],[11,"try_from","","",3686,[[],["result",4]]],[11,"into","","",3686,[[]]],[11,"try_into","","",3686,[[],["result",4]]],[11,"type_id","","",3686,[[],["typeid",3]]],[11,"from","","",3687,[[]]],[11,"borrow","","",3687,[[]]],[11,"borrow_mut","","",3687,[[]]],[11,"try_from","","",3687,[[],["result",4]]],[11,"into","","",3687,[[]]],[11,"try_into","","",3687,[[],["result",4]]],[11,"type_id","","",3687,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::wave","",3692,[[]]],[11,"borrow","","",3692,[[]]],[11,"borrow_mut","","",3692,[[]]],[11,"try_from","","",3692,[[],["result",4]]],[11,"into","","",3692,[[]]],[11,"try_into","","",3692,[[],["result",4]]],[11,"type_id","","",3692,[[],["typeid",3]]],[11,"from","","",3690,[[]]],[11,"borrow","","",3690,[[]]],[11,"borrow_mut","","",3690,[[]]],[11,"try_from","","",3690,[[],["result",4]]],[11,"into","","",3690,[[]]],[11,"try_into","","",3690,[[],["result",4]]],[11,"type_id","","",3690,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::drvctrl","",3695,[[]]],[11,"borrow","","",3695,[[]]],[11,"borrow_mut","","",3695,[[]]],[11,"try_from","","",3695,[[],["result",4]]],[11,"into","","",3695,[[]]],[11,"try_into","","",3695,[[],["result",4]]],[11,"type_id","","",3695,[[],["typeid",3]]],[11,"from","","",3696,[[]]],[11,"borrow","","",3696,[[]]],[11,"borrow_mut","","",3696,[[]]],[11,"try_from","","",3696,[[],["result",4]]],[11,"into","","",3696,[[]]],[11,"try_into","","",3696,[[],["result",4]]],[11,"type_id","","",3696,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::dbgctrl","",3699,[[]]],[11,"borrow","","",3699,[[]]],[11,"borrow_mut","","",3699,[[]]],[11,"try_from","","",3699,[[],["result",4]]],[11,"into","","",3699,[[]]],[11,"try_into","","",3699,[[],["result",4]]],[11,"type_id","","",3699,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::count","",3703,[[]]],[11,"borrow","","",3703,[[]]],[11,"borrow_mut","","",3703,[[]]],[11,"try_from","","",3703,[[],["result",4]]],[11,"into","","",3703,[[]]],[11,"try_into","","",3703,[[],["result",4]]],[11,"type_id","","",3703,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::per","",3706,[[]]],[11,"borrow","","",3706,[[]]],[11,"borrow_mut","","",3706,[[]]],[11,"try_from","","",3706,[[],["result",4]]],[11,"into","","",3706,[[]]],[11,"try_into","","",3706,[[],["result",4]]],[11,"type_id","","",3706,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::cc","",3709,[[]]],[11,"borrow","","",3709,[[]]],[11,"borrow_mut","","",3709,[[]]],[11,"try_from","","",3709,[[],["result",4]]],[11,"into","","",3709,[[]]],[11,"try_into","","",3709,[[],["result",4]]],[11,"type_id","","",3709,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::perbuf","",3712,[[]]],[11,"borrow","","",3712,[[]]],[11,"borrow_mut","","",3712,[[]]],[11,"try_from","","",3712,[[],["result",4]]],[11,"into","","",3712,[[]]],[11,"try_into","","",3712,[[],["result",4]]],[11,"type_id","","",3712,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count8::ccbuf","",3715,[[]]],[11,"borrow","","",3715,[[]]],[11,"borrow_mut","","",3715,[[]]],[11,"try_from","","",3715,[[],["result",4]]],[11,"into","","",3715,[[]]],[11,"try_into","","",3715,[[],["result",4]]],[11,"type_id","","",3715,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::ctrla","",3723,[[]]],[11,"borrow","","",3723,[[]]],[11,"borrow_mut","","",3723,[[]]],[11,"try_from","","",3723,[[],["result",4]]],[11,"into","","",3723,[[]]],[11,"try_into","","",3723,[[],["result",4]]],[11,"type_id","","",3723,[[],["typeid",3]]],[11,"from","","",3724,[[]]],[11,"borrow","","",3724,[[]]],[11,"borrow_mut","","",3724,[[]]],[11,"try_from","","",3724,[[],["result",4]]],[11,"into","","",3724,[[]]],[11,"try_into","","",3724,[[],["result",4]]],[11,"type_id","","",3724,[[],["typeid",3]]],[11,"from","","",3726,[[]]],[11,"borrow","","",3726,[[]]],[11,"borrow_mut","","",3726,[[]]],[11,"try_from","","",3726,[[],["result",4]]],[11,"into","","",3726,[[]]],[11,"try_into","","",3726,[[],["result",4]]],[11,"type_id","","",3726,[[],["typeid",3]]],[11,"from","","",3728,[[]]],[11,"borrow","","",3728,[[]]],[11,"borrow_mut","","",3728,[[]]],[11,"try_from","","",3728,[[],["result",4]]],[11,"into","","",3728,[[]]],[11,"try_into","","",3728,[[],["result",4]]],[11,"type_id","","",3728,[[],["typeid",3]]],[11,"from","","",3729,[[]]],[11,"borrow","","",3729,[[]]],[11,"borrow_mut","","",3729,[[]]],[11,"try_from","","",3729,[[],["result",4]]],[11,"into","","",3729,[[]]],[11,"try_into","","",3729,[[],["result",4]]],[11,"type_id","","",3729,[[],["typeid",3]]],[11,"from","","",3730,[[]]],[11,"borrow","","",3730,[[]]],[11,"borrow_mut","","",3730,[[]]],[11,"try_from","","",3730,[[],["result",4]]],[11,"into","","",3730,[[]]],[11,"try_into","","",3730,[[],["result",4]]],[11,"type_id","","",3730,[[],["typeid",3]]],[11,"from","","",3732,[[]]],[11,"borrow","","",3732,[[]]],[11,"borrow_mut","","",3732,[[]]],[11,"try_from","","",3732,[[],["result",4]]],[11,"into","","",3732,[[]]],[11,"try_into","","",3732,[[],["result",4]]],[11,"type_id","","",3732,[[],["typeid",3]]],[11,"from","","",3733,[[]]],[11,"borrow","","",3733,[[]]],[11,"borrow_mut","","",3733,[[]]],[11,"try_from","","",3733,[[],["result",4]]],[11,"into","","",3733,[[]]],[11,"try_into","","",3733,[[],["result",4]]],[11,"type_id","","",3733,[[],["typeid",3]]],[11,"from","","",3734,[[]]],[11,"borrow","","",3734,[[]]],[11,"borrow_mut","","",3734,[[]]],[11,"try_from","","",3734,[[],["result",4]]],[11,"into","","",3734,[[]]],[11,"try_into","","",3734,[[],["result",4]]],[11,"type_id","","",3734,[[],["typeid",3]]],[11,"from","","",3735,[[]]],[11,"borrow","","",3735,[[]]],[11,"borrow_mut","","",3735,[[]]],[11,"try_from","","",3735,[[],["result",4]]],[11,"into","","",3735,[[]]],[11,"try_into","","",3735,[[],["result",4]]],[11,"type_id","","",3735,[[],["typeid",3]]],[11,"from","","",3736,[[]]],[11,"borrow","","",3736,[[]]],[11,"borrow_mut","","",3736,[[]]],[11,"try_from","","",3736,[[],["result",4]]],[11,"into","","",3736,[[]]],[11,"try_into","","",3736,[[],["result",4]]],[11,"type_id","","",3736,[[],["typeid",3]]],[11,"from","","",3737,[[]]],[11,"borrow","","",3737,[[]]],[11,"borrow_mut","","",3737,[[]]],[11,"try_from","","",3737,[[],["result",4]]],[11,"into","","",3737,[[]]],[11,"try_into","","",3737,[[],["result",4]]],[11,"type_id","","",3737,[[],["typeid",3]]],[11,"from","","",3739,[[]]],[11,"borrow","","",3739,[[]]],[11,"borrow_mut","","",3739,[[]]],[11,"try_from","","",3739,[[],["result",4]]],[11,"into","","",3739,[[]]],[11,"try_into","","",3739,[[],["result",4]]],[11,"type_id","","",3739,[[],["typeid",3]]],[11,"from","","",3741,[[]]],[11,"borrow","","",3741,[[]]],[11,"borrow_mut","","",3741,[[]]],[11,"try_from","","",3741,[[],["result",4]]],[11,"into","","",3741,[[]]],[11,"try_into","","",3741,[[],["result",4]]],[11,"type_id","","",3741,[[],["typeid",3]]],[11,"from","","",3742,[[]]],[11,"borrow","","",3742,[[]]],[11,"borrow_mut","","",3742,[[]]],[11,"try_from","","",3742,[[],["result",4]]],[11,"into","","",3742,[[]]],[11,"try_into","","",3742,[[],["result",4]]],[11,"type_id","","",3742,[[],["typeid",3]]],[11,"from","","",3718,[[]]],[11,"borrow","","",3718,[[]]],[11,"borrow_mut","","",3718,[[]]],[11,"try_from","","",3718,[[],["result",4]]],[11,"into","","",3718,[[]]],[11,"try_into","","",3718,[[],["result",4]]],[11,"type_id","","",3718,[[],["typeid",3]]],[11,"from","","",3719,[[]]],[11,"borrow","","",3719,[[]]],[11,"borrow_mut","","",3719,[[]]],[11,"try_from","","",3719,[[],["result",4]]],[11,"into","","",3719,[[]]],[11,"try_into","","",3719,[[],["result",4]]],[11,"type_id","","",3719,[[],["typeid",3]]],[11,"from","","",3720,[[]]],[11,"borrow","","",3720,[[]]],[11,"borrow_mut","","",3720,[[]]],[11,"try_from","","",3720,[[],["result",4]]],[11,"into","","",3720,[[]]],[11,"try_into","","",3720,[[],["result",4]]],[11,"type_id","","",3720,[[],["typeid",3]]],[11,"from","","",3721,[[]]],[11,"borrow","","",3721,[[]]],[11,"borrow_mut","","",3721,[[]]],[11,"try_from","","",3721,[[],["result",4]]],[11,"into","","",3721,[[]]],[11,"try_into","","",3721,[[],["result",4]]],[11,"type_id","","",3721,[[],["typeid",3]]],[11,"from","","",3722,[[]]],[11,"borrow","","",3722,[[]]],[11,"borrow_mut","","",3722,[[]]],[11,"try_from","","",3722,[[],["result",4]]],[11,"into","","",3722,[[]]],[11,"try_into","","",3722,[[],["result",4]]],[11,"type_id","","",3722,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::ctrlbclr","",3746,[[]]],[11,"borrow","","",3746,[[]]],[11,"borrow_mut","","",3746,[[]]],[11,"try_from","","",3746,[[],["result",4]]],[11,"into","","",3746,[[]]],[11,"try_into","","",3746,[[],["result",4]]],[11,"type_id","","",3746,[[],["typeid",3]]],[11,"from","","",3747,[[]]],[11,"borrow","","",3747,[[]]],[11,"borrow_mut","","",3747,[[]]],[11,"try_from","","",3747,[[],["result",4]]],[11,"into","","",3747,[[]]],[11,"try_into","","",3747,[[],["result",4]]],[11,"type_id","","",3747,[[],["typeid",3]]],[11,"from","","",3748,[[]]],[11,"borrow","","",3748,[[]]],[11,"borrow_mut","","",3748,[[]]],[11,"try_from","","",3748,[[],["result",4]]],[11,"into","","",3748,[[]]],[11,"try_into","","",3748,[[],["result",4]]],[11,"type_id","","",3748,[[],["typeid",3]]],[11,"from","","",3750,[[]]],[11,"borrow","","",3750,[[]]],[11,"borrow_mut","","",3750,[[]]],[11,"try_from","","",3750,[[],["result",4]]],[11,"into","","",3750,[[]]],[11,"try_into","","",3750,[[],["result",4]]],[11,"type_id","","",3750,[[],["typeid",3]]],[11,"from","","",3745,[[]]],[11,"borrow","","",3745,[[]]],[11,"borrow_mut","","",3745,[[]]],[11,"try_from","","",3745,[[],["result",4]]],[11,"into","","",3745,[[]]],[11,"try_into","","",3745,[[],["result",4]]],[11,"type_id","","",3745,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::ctrlbset","",3754,[[]]],[11,"borrow","","",3754,[[]]],[11,"borrow_mut","","",3754,[[]]],[11,"try_from","","",3754,[[],["result",4]]],[11,"into","","",3754,[[]]],[11,"try_into","","",3754,[[],["result",4]]],[11,"type_id","","",3754,[[],["typeid",3]]],[11,"from","","",3755,[[]]],[11,"borrow","","",3755,[[]]],[11,"borrow_mut","","",3755,[[]]],[11,"try_from","","",3755,[[],["result",4]]],[11,"into","","",3755,[[]]],[11,"try_into","","",3755,[[],["result",4]]],[11,"type_id","","",3755,[[],["typeid",3]]],[11,"from","","",3756,[[]]],[11,"borrow","","",3756,[[]]],[11,"borrow_mut","","",3756,[[]]],[11,"try_from","","",3756,[[],["result",4]]],[11,"into","","",3756,[[]]],[11,"try_into","","",3756,[[],["result",4]]],[11,"type_id","","",3756,[[],["typeid",3]]],[11,"from","","",3758,[[]]],[11,"borrow","","",3758,[[]]],[11,"borrow_mut","","",3758,[[]]],[11,"try_from","","",3758,[[],["result",4]]],[11,"into","","",3758,[[]]],[11,"try_into","","",3758,[[],["result",4]]],[11,"type_id","","",3758,[[],["typeid",3]]],[11,"from","","",3753,[[]]],[11,"borrow","","",3753,[[]]],[11,"borrow_mut","","",3753,[[]]],[11,"try_from","","",3753,[[],["result",4]]],[11,"into","","",3753,[[]]],[11,"try_into","","",3753,[[],["result",4]]],[11,"type_id","","",3753,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::evctrl","",3763,[[]]],[11,"borrow","","",3763,[[]]],[11,"borrow_mut","","",3763,[[]]],[11,"try_from","","",3763,[[],["result",4]]],[11,"into","","",3763,[[]]],[11,"try_into","","",3763,[[],["result",4]]],[11,"type_id","","",3763,[[],["typeid",3]]],[11,"from","","",3764,[[]]],[11,"borrow","","",3764,[[]]],[11,"borrow_mut","","",3764,[[]]],[11,"try_from","","",3764,[[],["result",4]]],[11,"into","","",3764,[[]]],[11,"try_into","","",3764,[[],["result",4]]],[11,"type_id","","",3764,[[],["typeid",3]]],[11,"from","","",3765,[[]]],[11,"borrow","","",3765,[[]]],[11,"borrow_mut","","",3765,[[]]],[11,"try_from","","",3765,[[],["result",4]]],[11,"into","","",3765,[[]]],[11,"try_into","","",3765,[[],["result",4]]],[11,"type_id","","",3765,[[],["typeid",3]]],[11,"from","","",3766,[[]]],[11,"borrow","","",3766,[[]]],[11,"borrow_mut","","",3766,[[]]],[11,"try_from","","",3766,[[],["result",4]]],[11,"into","","",3766,[[]]],[11,"try_into","","",3766,[[],["result",4]]],[11,"type_id","","",3766,[[],["typeid",3]]],[11,"from","","",3767,[[]]],[11,"borrow","","",3767,[[]]],[11,"borrow_mut","","",3767,[[]]],[11,"try_from","","",3767,[[],["result",4]]],[11,"into","","",3767,[[]]],[11,"try_into","","",3767,[[],["result",4]]],[11,"type_id","","",3767,[[],["typeid",3]]],[11,"from","","",3768,[[]]],[11,"borrow","","",3768,[[]]],[11,"borrow_mut","","",3768,[[]]],[11,"try_from","","",3768,[[],["result",4]]],[11,"into","","",3768,[[]]],[11,"try_into","","",3768,[[],["result",4]]],[11,"type_id","","",3768,[[],["typeid",3]]],[11,"from","","",3761,[[]]],[11,"borrow","","",3761,[[]]],[11,"borrow_mut","","",3761,[[]]],[11,"try_from","","",3761,[[],["result",4]]],[11,"into","","",3761,[[]]],[11,"try_into","","",3761,[[],["result",4]]],[11,"type_id","","",3761,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::intenclr","",3771,[[]]],[11,"borrow","","",3771,[[]]],[11,"borrow_mut","","",3771,[[]]],[11,"try_from","","",3771,[[],["result",4]]],[11,"into","","",3771,[[]]],[11,"try_into","","",3771,[[],["result",4]]],[11,"type_id","","",3771,[[],["typeid",3]]],[11,"from","","",3772,[[]]],[11,"borrow","","",3772,[[]]],[11,"borrow_mut","","",3772,[[]]],[11,"try_from","","",3772,[[],["result",4]]],[11,"into","","",3772,[[]]],[11,"try_into","","",3772,[[],["result",4]]],[11,"type_id","","",3772,[[],["typeid",3]]],[11,"from","","",3773,[[]]],[11,"borrow","","",3773,[[]]],[11,"borrow_mut","","",3773,[[]]],[11,"try_from","","",3773,[[],["result",4]]],[11,"into","","",3773,[[]]],[11,"try_into","","",3773,[[],["result",4]]],[11,"type_id","","",3773,[[],["typeid",3]]],[11,"from","","",3774,[[]]],[11,"borrow","","",3774,[[]]],[11,"borrow_mut","","",3774,[[]]],[11,"try_from","","",3774,[[],["result",4]]],[11,"into","","",3774,[[]]],[11,"try_into","","",3774,[[],["result",4]]],[11,"type_id","","",3774,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::intenset","",3777,[[]]],[11,"borrow","","",3777,[[]]],[11,"borrow_mut","","",3777,[[]]],[11,"try_from","","",3777,[[],["result",4]]],[11,"into","","",3777,[[]]],[11,"try_into","","",3777,[[],["result",4]]],[11,"type_id","","",3777,[[],["typeid",3]]],[11,"from","","",3778,[[]]],[11,"borrow","","",3778,[[]]],[11,"borrow_mut","","",3778,[[]]],[11,"try_from","","",3778,[[],["result",4]]],[11,"into","","",3778,[[]]],[11,"try_into","","",3778,[[],["result",4]]],[11,"type_id","","",3778,[[],["typeid",3]]],[11,"from","","",3779,[[]]],[11,"borrow","","",3779,[[]]],[11,"borrow_mut","","",3779,[[]]],[11,"try_from","","",3779,[[],["result",4]]],[11,"into","","",3779,[[]]],[11,"try_into","","",3779,[[],["result",4]]],[11,"type_id","","",3779,[[],["typeid",3]]],[11,"from","","",3780,[[]]],[11,"borrow","","",3780,[[]]],[11,"borrow_mut","","",3780,[[]]],[11,"try_from","","",3780,[[],["result",4]]],[11,"into","","",3780,[[]]],[11,"try_into","","",3780,[[],["result",4]]],[11,"type_id","","",3780,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::intflag","",3783,[[]]],[11,"borrow","","",3783,[[]]],[11,"borrow_mut","","",3783,[[]]],[11,"try_from","","",3783,[[],["result",4]]],[11,"into","","",3783,[[]]],[11,"try_into","","",3783,[[],["result",4]]],[11,"type_id","","",3783,[[],["typeid",3]]],[11,"from","","",3784,[[]]],[11,"borrow","","",3784,[[]]],[11,"borrow_mut","","",3784,[[]]],[11,"try_from","","",3784,[[],["result",4]]],[11,"into","","",3784,[[]]],[11,"try_into","","",3784,[[],["result",4]]],[11,"type_id","","",3784,[[],["typeid",3]]],[11,"from","","",3785,[[]]],[11,"borrow","","",3785,[[]]],[11,"borrow_mut","","",3785,[[]]],[11,"try_from","","",3785,[[],["result",4]]],[11,"into","","",3785,[[]]],[11,"try_into","","",3785,[[],["result",4]]],[11,"type_id","","",3785,[[],["typeid",3]]],[11,"from","","",3786,[[]]],[11,"borrow","","",3786,[[]]],[11,"borrow_mut","","",3786,[[]]],[11,"try_from","","",3786,[[],["result",4]]],[11,"into","","",3786,[[]]],[11,"try_into","","",3786,[[],["result",4]]],[11,"type_id","","",3786,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::status","",3789,[[]]],[11,"borrow","","",3789,[[]]],[11,"borrow_mut","","",3789,[[]]],[11,"try_from","","",3789,[[],["result",4]]],[11,"into","","",3789,[[]]],[11,"try_into","","",3789,[[],["result",4]]],[11,"type_id","","",3789,[[],["typeid",3]]],[11,"from","","",3790,[[]]],[11,"borrow","","",3790,[[]]],[11,"borrow_mut","","",3790,[[]]],[11,"try_from","","",3790,[[],["result",4]]],[11,"into","","",3790,[[]]],[11,"try_into","","",3790,[[],["result",4]]],[11,"type_id","","",3790,[[],["typeid",3]]],[11,"from","","",3791,[[]]],[11,"borrow","","",3791,[[]]],[11,"borrow_mut","","",3791,[[]]],[11,"try_from","","",3791,[[],["result",4]]],[11,"into","","",3791,[[]]],[11,"try_into","","",3791,[[],["result",4]]],[11,"type_id","","",3791,[[],["typeid",3]]],[11,"from","","",3792,[[]]],[11,"borrow","","",3792,[[]]],[11,"borrow_mut","","",3792,[[]]],[11,"try_from","","",3792,[[],["result",4]]],[11,"into","","",3792,[[]]],[11,"try_into","","",3792,[[],["result",4]]],[11,"type_id","","",3792,[[],["typeid",3]]],[11,"from","","",3793,[[]]],[11,"borrow","","",3793,[[]]],[11,"borrow_mut","","",3793,[[]]],[11,"try_from","","",3793,[[],["result",4]]],[11,"into","","",3793,[[]]],[11,"try_into","","",3793,[[],["result",4]]],[11,"type_id","","",3793,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::wave","",3798,[[]]],[11,"borrow","","",3798,[[]]],[11,"borrow_mut","","",3798,[[]]],[11,"try_from","","",3798,[[],["result",4]]],[11,"into","","",3798,[[]]],[11,"try_into","","",3798,[[],["result",4]]],[11,"type_id","","",3798,[[],["typeid",3]]],[11,"from","","",3796,[[]]],[11,"borrow","","",3796,[[]]],[11,"borrow_mut","","",3796,[[]]],[11,"try_from","","",3796,[[],["result",4]]],[11,"into","","",3796,[[]]],[11,"try_into","","",3796,[[],["result",4]]],[11,"type_id","","",3796,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::drvctrl","",3801,[[]]],[11,"borrow","","",3801,[[]]],[11,"borrow_mut","","",3801,[[]]],[11,"try_from","","",3801,[[],["result",4]]],[11,"into","","",3801,[[]]],[11,"try_into","","",3801,[[],["result",4]]],[11,"type_id","","",3801,[[],["typeid",3]]],[11,"from","","",3802,[[]]],[11,"borrow","","",3802,[[]]],[11,"borrow_mut","","",3802,[[]]],[11,"try_from","","",3802,[[],["result",4]]],[11,"into","","",3802,[[]]],[11,"try_into","","",3802,[[],["result",4]]],[11,"type_id","","",3802,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::dbgctrl","",3805,[[]]],[11,"borrow","","",3805,[[]]],[11,"borrow_mut","","",3805,[[]]],[11,"try_from","","",3805,[[],["result",4]]],[11,"into","","",3805,[[]]],[11,"try_into","","",3805,[[],["result",4]]],[11,"type_id","","",3805,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::count","",3809,[[]]],[11,"borrow","","",3809,[[]]],[11,"borrow_mut","","",3809,[[]]],[11,"try_from","","",3809,[[],["result",4]]],[11,"into","","",3809,[[]]],[11,"try_into","","",3809,[[],["result",4]]],[11,"type_id","","",3809,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::cc","",3812,[[]]],[11,"borrow","","",3812,[[]]],[11,"borrow_mut","","",3812,[[]]],[11,"try_from","","",3812,[[],["result",4]]],[11,"into","","",3812,[[]]],[11,"try_into","","",3812,[[],["result",4]]],[11,"type_id","","",3812,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count16::ccbuf","",3815,[[]]],[11,"borrow","","",3815,[[]]],[11,"borrow_mut","","",3815,[[]]],[11,"try_from","","",3815,[[],["result",4]]],[11,"into","","",3815,[[]]],[11,"try_into","","",3815,[[],["result",4]]],[11,"type_id","","",3815,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::ctrla","",3823,[[]]],[11,"borrow","","",3823,[[]]],[11,"borrow_mut","","",3823,[[]]],[11,"try_from","","",3823,[[],["result",4]]],[11,"into","","",3823,[[]]],[11,"try_into","","",3823,[[],["result",4]]],[11,"type_id","","",3823,[[],["typeid",3]]],[11,"from","","",3824,[[]]],[11,"borrow","","",3824,[[]]],[11,"borrow_mut","","",3824,[[]]],[11,"try_from","","",3824,[[],["result",4]]],[11,"into","","",3824,[[]]],[11,"try_into","","",3824,[[],["result",4]]],[11,"type_id","","",3824,[[],["typeid",3]]],[11,"from","","",3826,[[]]],[11,"borrow","","",3826,[[]]],[11,"borrow_mut","","",3826,[[]]],[11,"try_from","","",3826,[[],["result",4]]],[11,"into","","",3826,[[]]],[11,"try_into","","",3826,[[],["result",4]]],[11,"type_id","","",3826,[[],["typeid",3]]],[11,"from","","",3828,[[]]],[11,"borrow","","",3828,[[]]],[11,"borrow_mut","","",3828,[[]]],[11,"try_from","","",3828,[[],["result",4]]],[11,"into","","",3828,[[]]],[11,"try_into","","",3828,[[],["result",4]]],[11,"type_id","","",3828,[[],["typeid",3]]],[11,"from","","",3829,[[]]],[11,"borrow","","",3829,[[]]],[11,"borrow_mut","","",3829,[[]]],[11,"try_from","","",3829,[[],["result",4]]],[11,"into","","",3829,[[]]],[11,"try_into","","",3829,[[],["result",4]]],[11,"type_id","","",3829,[[],["typeid",3]]],[11,"from","","",3830,[[]]],[11,"borrow","","",3830,[[]]],[11,"borrow_mut","","",3830,[[]]],[11,"try_from","","",3830,[[],["result",4]]],[11,"into","","",3830,[[]]],[11,"try_into","","",3830,[[],["result",4]]],[11,"type_id","","",3830,[[],["typeid",3]]],[11,"from","","",3832,[[]]],[11,"borrow","","",3832,[[]]],[11,"borrow_mut","","",3832,[[]]],[11,"try_from","","",3832,[[],["result",4]]],[11,"into","","",3832,[[]]],[11,"try_into","","",3832,[[],["result",4]]],[11,"type_id","","",3832,[[],["typeid",3]]],[11,"from","","",3833,[[]]],[11,"borrow","","",3833,[[]]],[11,"borrow_mut","","",3833,[[]]],[11,"try_from","","",3833,[[],["result",4]]],[11,"into","","",3833,[[]]],[11,"try_into","","",3833,[[],["result",4]]],[11,"type_id","","",3833,[[],["typeid",3]]],[11,"from","","",3834,[[]]],[11,"borrow","","",3834,[[]]],[11,"borrow_mut","","",3834,[[]]],[11,"try_from","","",3834,[[],["result",4]]],[11,"into","","",3834,[[]]],[11,"try_into","","",3834,[[],["result",4]]],[11,"type_id","","",3834,[[],["typeid",3]]],[11,"from","","",3835,[[]]],[11,"borrow","","",3835,[[]]],[11,"borrow_mut","","",3835,[[]]],[11,"try_from","","",3835,[[],["result",4]]],[11,"into","","",3835,[[]]],[11,"try_into","","",3835,[[],["result",4]]],[11,"type_id","","",3835,[[],["typeid",3]]],[11,"from","","",3836,[[]]],[11,"borrow","","",3836,[[]]],[11,"borrow_mut","","",3836,[[]]],[11,"try_from","","",3836,[[],["result",4]]],[11,"into","","",3836,[[]]],[11,"try_into","","",3836,[[],["result",4]]],[11,"type_id","","",3836,[[],["typeid",3]]],[11,"from","","",3837,[[]]],[11,"borrow","","",3837,[[]]],[11,"borrow_mut","","",3837,[[]]],[11,"try_from","","",3837,[[],["result",4]]],[11,"into","","",3837,[[]]],[11,"try_into","","",3837,[[],["result",4]]],[11,"type_id","","",3837,[[],["typeid",3]]],[11,"from","","",3839,[[]]],[11,"borrow","","",3839,[[]]],[11,"borrow_mut","","",3839,[[]]],[11,"try_from","","",3839,[[],["result",4]]],[11,"into","","",3839,[[]]],[11,"try_into","","",3839,[[],["result",4]]],[11,"type_id","","",3839,[[],["typeid",3]]],[11,"from","","",3841,[[]]],[11,"borrow","","",3841,[[]]],[11,"borrow_mut","","",3841,[[]]],[11,"try_from","","",3841,[[],["result",4]]],[11,"into","","",3841,[[]]],[11,"try_into","","",3841,[[],["result",4]]],[11,"type_id","","",3841,[[],["typeid",3]]],[11,"from","","",3842,[[]]],[11,"borrow","","",3842,[[]]],[11,"borrow_mut","","",3842,[[]]],[11,"try_from","","",3842,[[],["result",4]]],[11,"into","","",3842,[[]]],[11,"try_into","","",3842,[[],["result",4]]],[11,"type_id","","",3842,[[],["typeid",3]]],[11,"from","","",3818,[[]]],[11,"borrow","","",3818,[[]]],[11,"borrow_mut","","",3818,[[]]],[11,"try_from","","",3818,[[],["result",4]]],[11,"into","","",3818,[[]]],[11,"try_into","","",3818,[[],["result",4]]],[11,"type_id","","",3818,[[],["typeid",3]]],[11,"from","","",3819,[[]]],[11,"borrow","","",3819,[[]]],[11,"borrow_mut","","",3819,[[]]],[11,"try_from","","",3819,[[],["result",4]]],[11,"into","","",3819,[[]]],[11,"try_into","","",3819,[[],["result",4]]],[11,"type_id","","",3819,[[],["typeid",3]]],[11,"from","","",3820,[[]]],[11,"borrow","","",3820,[[]]],[11,"borrow_mut","","",3820,[[]]],[11,"try_from","","",3820,[[],["result",4]]],[11,"into","","",3820,[[]]],[11,"try_into","","",3820,[[],["result",4]]],[11,"type_id","","",3820,[[],["typeid",3]]],[11,"from","","",3821,[[]]],[11,"borrow","","",3821,[[]]],[11,"borrow_mut","","",3821,[[]]],[11,"try_from","","",3821,[[],["result",4]]],[11,"into","","",3821,[[]]],[11,"try_into","","",3821,[[],["result",4]]],[11,"type_id","","",3821,[[],["typeid",3]]],[11,"from","","",3822,[[]]],[11,"borrow","","",3822,[[]]],[11,"borrow_mut","","",3822,[[]]],[11,"try_from","","",3822,[[],["result",4]]],[11,"into","","",3822,[[]]],[11,"try_into","","",3822,[[],["result",4]]],[11,"type_id","","",3822,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::ctrlbclr","",3846,[[]]],[11,"borrow","","",3846,[[]]],[11,"borrow_mut","","",3846,[[]]],[11,"try_from","","",3846,[[],["result",4]]],[11,"into","","",3846,[[]]],[11,"try_into","","",3846,[[],["result",4]]],[11,"type_id","","",3846,[[],["typeid",3]]],[11,"from","","",3847,[[]]],[11,"borrow","","",3847,[[]]],[11,"borrow_mut","","",3847,[[]]],[11,"try_from","","",3847,[[],["result",4]]],[11,"into","","",3847,[[]]],[11,"try_into","","",3847,[[],["result",4]]],[11,"type_id","","",3847,[[],["typeid",3]]],[11,"from","","",3848,[[]]],[11,"borrow","","",3848,[[]]],[11,"borrow_mut","","",3848,[[]]],[11,"try_from","","",3848,[[],["result",4]]],[11,"into","","",3848,[[]]],[11,"try_into","","",3848,[[],["result",4]]],[11,"type_id","","",3848,[[],["typeid",3]]],[11,"from","","",3850,[[]]],[11,"borrow","","",3850,[[]]],[11,"borrow_mut","","",3850,[[]]],[11,"try_from","","",3850,[[],["result",4]]],[11,"into","","",3850,[[]]],[11,"try_into","","",3850,[[],["result",4]]],[11,"type_id","","",3850,[[],["typeid",3]]],[11,"from","","",3845,[[]]],[11,"borrow","","",3845,[[]]],[11,"borrow_mut","","",3845,[[]]],[11,"try_from","","",3845,[[],["result",4]]],[11,"into","","",3845,[[]]],[11,"try_into","","",3845,[[],["result",4]]],[11,"type_id","","",3845,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::ctrlbset","",3854,[[]]],[11,"borrow","","",3854,[[]]],[11,"borrow_mut","","",3854,[[]]],[11,"try_from","","",3854,[[],["result",4]]],[11,"into","","",3854,[[]]],[11,"try_into","","",3854,[[],["result",4]]],[11,"type_id","","",3854,[[],["typeid",3]]],[11,"from","","",3855,[[]]],[11,"borrow","","",3855,[[]]],[11,"borrow_mut","","",3855,[[]]],[11,"try_from","","",3855,[[],["result",4]]],[11,"into","","",3855,[[]]],[11,"try_into","","",3855,[[],["result",4]]],[11,"type_id","","",3855,[[],["typeid",3]]],[11,"from","","",3856,[[]]],[11,"borrow","","",3856,[[]]],[11,"borrow_mut","","",3856,[[]]],[11,"try_from","","",3856,[[],["result",4]]],[11,"into","","",3856,[[]]],[11,"try_into","","",3856,[[],["result",4]]],[11,"type_id","","",3856,[[],["typeid",3]]],[11,"from","","",3858,[[]]],[11,"borrow","","",3858,[[]]],[11,"borrow_mut","","",3858,[[]]],[11,"try_from","","",3858,[[],["result",4]]],[11,"into","","",3858,[[]]],[11,"try_into","","",3858,[[],["result",4]]],[11,"type_id","","",3858,[[],["typeid",3]]],[11,"from","","",3853,[[]]],[11,"borrow","","",3853,[[]]],[11,"borrow_mut","","",3853,[[]]],[11,"try_from","","",3853,[[],["result",4]]],[11,"into","","",3853,[[]]],[11,"try_into","","",3853,[[],["result",4]]],[11,"type_id","","",3853,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::evctrl","",3863,[[]]],[11,"borrow","","",3863,[[]]],[11,"borrow_mut","","",3863,[[]]],[11,"try_from","","",3863,[[],["result",4]]],[11,"into","","",3863,[[]]],[11,"try_into","","",3863,[[],["result",4]]],[11,"type_id","","",3863,[[],["typeid",3]]],[11,"from","","",3864,[[]]],[11,"borrow","","",3864,[[]]],[11,"borrow_mut","","",3864,[[]]],[11,"try_from","","",3864,[[],["result",4]]],[11,"into","","",3864,[[]]],[11,"try_into","","",3864,[[],["result",4]]],[11,"type_id","","",3864,[[],["typeid",3]]],[11,"from","","",3865,[[]]],[11,"borrow","","",3865,[[]]],[11,"borrow_mut","","",3865,[[]]],[11,"try_from","","",3865,[[],["result",4]]],[11,"into","","",3865,[[]]],[11,"try_into","","",3865,[[],["result",4]]],[11,"type_id","","",3865,[[],["typeid",3]]],[11,"from","","",3866,[[]]],[11,"borrow","","",3866,[[]]],[11,"borrow_mut","","",3866,[[]]],[11,"try_from","","",3866,[[],["result",4]]],[11,"into","","",3866,[[]]],[11,"try_into","","",3866,[[],["result",4]]],[11,"type_id","","",3866,[[],["typeid",3]]],[11,"from","","",3867,[[]]],[11,"borrow","","",3867,[[]]],[11,"borrow_mut","","",3867,[[]]],[11,"try_from","","",3867,[[],["result",4]]],[11,"into","","",3867,[[]]],[11,"try_into","","",3867,[[],["result",4]]],[11,"type_id","","",3867,[[],["typeid",3]]],[11,"from","","",3868,[[]]],[11,"borrow","","",3868,[[]]],[11,"borrow_mut","","",3868,[[]]],[11,"try_from","","",3868,[[],["result",4]]],[11,"into","","",3868,[[]]],[11,"try_into","","",3868,[[],["result",4]]],[11,"type_id","","",3868,[[],["typeid",3]]],[11,"from","","",3861,[[]]],[11,"borrow","","",3861,[[]]],[11,"borrow_mut","","",3861,[[]]],[11,"try_from","","",3861,[[],["result",4]]],[11,"into","","",3861,[[]]],[11,"try_into","","",3861,[[],["result",4]]],[11,"type_id","","",3861,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::intenclr","",3871,[[]]],[11,"borrow","","",3871,[[]]],[11,"borrow_mut","","",3871,[[]]],[11,"try_from","","",3871,[[],["result",4]]],[11,"into","","",3871,[[]]],[11,"try_into","","",3871,[[],["result",4]]],[11,"type_id","","",3871,[[],["typeid",3]]],[11,"from","","",3872,[[]]],[11,"borrow","","",3872,[[]]],[11,"borrow_mut","","",3872,[[]]],[11,"try_from","","",3872,[[],["result",4]]],[11,"into","","",3872,[[]]],[11,"try_into","","",3872,[[],["result",4]]],[11,"type_id","","",3872,[[],["typeid",3]]],[11,"from","","",3873,[[]]],[11,"borrow","","",3873,[[]]],[11,"borrow_mut","","",3873,[[]]],[11,"try_from","","",3873,[[],["result",4]]],[11,"into","","",3873,[[]]],[11,"try_into","","",3873,[[],["result",4]]],[11,"type_id","","",3873,[[],["typeid",3]]],[11,"from","","",3874,[[]]],[11,"borrow","","",3874,[[]]],[11,"borrow_mut","","",3874,[[]]],[11,"try_from","","",3874,[[],["result",4]]],[11,"into","","",3874,[[]]],[11,"try_into","","",3874,[[],["result",4]]],[11,"type_id","","",3874,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::intenset","",3877,[[]]],[11,"borrow","","",3877,[[]]],[11,"borrow_mut","","",3877,[[]]],[11,"try_from","","",3877,[[],["result",4]]],[11,"into","","",3877,[[]]],[11,"try_into","","",3877,[[],["result",4]]],[11,"type_id","","",3877,[[],["typeid",3]]],[11,"from","","",3878,[[]]],[11,"borrow","","",3878,[[]]],[11,"borrow_mut","","",3878,[[]]],[11,"try_from","","",3878,[[],["result",4]]],[11,"into","","",3878,[[]]],[11,"try_into","","",3878,[[],["result",4]]],[11,"type_id","","",3878,[[],["typeid",3]]],[11,"from","","",3879,[[]]],[11,"borrow","","",3879,[[]]],[11,"borrow_mut","","",3879,[[]]],[11,"try_from","","",3879,[[],["result",4]]],[11,"into","","",3879,[[]]],[11,"try_into","","",3879,[[],["result",4]]],[11,"type_id","","",3879,[[],["typeid",3]]],[11,"from","","",3880,[[]]],[11,"borrow","","",3880,[[]]],[11,"borrow_mut","","",3880,[[]]],[11,"try_from","","",3880,[[],["result",4]]],[11,"into","","",3880,[[]]],[11,"try_into","","",3880,[[],["result",4]]],[11,"type_id","","",3880,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::intflag","",3883,[[]]],[11,"borrow","","",3883,[[]]],[11,"borrow_mut","","",3883,[[]]],[11,"try_from","","",3883,[[],["result",4]]],[11,"into","","",3883,[[]]],[11,"try_into","","",3883,[[],["result",4]]],[11,"type_id","","",3883,[[],["typeid",3]]],[11,"from","","",3884,[[]]],[11,"borrow","","",3884,[[]]],[11,"borrow_mut","","",3884,[[]]],[11,"try_from","","",3884,[[],["result",4]]],[11,"into","","",3884,[[]]],[11,"try_into","","",3884,[[],["result",4]]],[11,"type_id","","",3884,[[],["typeid",3]]],[11,"from","","",3885,[[]]],[11,"borrow","","",3885,[[]]],[11,"borrow_mut","","",3885,[[]]],[11,"try_from","","",3885,[[],["result",4]]],[11,"into","","",3885,[[]]],[11,"try_into","","",3885,[[],["result",4]]],[11,"type_id","","",3885,[[],["typeid",3]]],[11,"from","","",3886,[[]]],[11,"borrow","","",3886,[[]]],[11,"borrow_mut","","",3886,[[]]],[11,"try_from","","",3886,[[],["result",4]]],[11,"into","","",3886,[[]]],[11,"try_into","","",3886,[[],["result",4]]],[11,"type_id","","",3886,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::status","",3889,[[]]],[11,"borrow","","",3889,[[]]],[11,"borrow_mut","","",3889,[[]]],[11,"try_from","","",3889,[[],["result",4]]],[11,"into","","",3889,[[]]],[11,"try_into","","",3889,[[],["result",4]]],[11,"type_id","","",3889,[[],["typeid",3]]],[11,"from","","",3890,[[]]],[11,"borrow","","",3890,[[]]],[11,"borrow_mut","","",3890,[[]]],[11,"try_from","","",3890,[[],["result",4]]],[11,"into","","",3890,[[]]],[11,"try_into","","",3890,[[],["result",4]]],[11,"type_id","","",3890,[[],["typeid",3]]],[11,"from","","",3891,[[]]],[11,"borrow","","",3891,[[]]],[11,"borrow_mut","","",3891,[[]]],[11,"try_from","","",3891,[[],["result",4]]],[11,"into","","",3891,[[]]],[11,"try_into","","",3891,[[],["result",4]]],[11,"type_id","","",3891,[[],["typeid",3]]],[11,"from","","",3892,[[]]],[11,"borrow","","",3892,[[]]],[11,"borrow_mut","","",3892,[[]]],[11,"try_from","","",3892,[[],["result",4]]],[11,"into","","",3892,[[]]],[11,"try_into","","",3892,[[],["result",4]]],[11,"type_id","","",3892,[[],["typeid",3]]],[11,"from","","",3893,[[]]],[11,"borrow","","",3893,[[]]],[11,"borrow_mut","","",3893,[[]]],[11,"try_from","","",3893,[[],["result",4]]],[11,"into","","",3893,[[]]],[11,"try_into","","",3893,[[],["result",4]]],[11,"type_id","","",3893,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::wave","",3898,[[]]],[11,"borrow","","",3898,[[]]],[11,"borrow_mut","","",3898,[[]]],[11,"try_from","","",3898,[[],["result",4]]],[11,"into","","",3898,[[]]],[11,"try_into","","",3898,[[],["result",4]]],[11,"type_id","","",3898,[[],["typeid",3]]],[11,"from","","",3896,[[]]],[11,"borrow","","",3896,[[]]],[11,"borrow_mut","","",3896,[[]]],[11,"try_from","","",3896,[[],["result",4]]],[11,"into","","",3896,[[]]],[11,"try_into","","",3896,[[],["result",4]]],[11,"type_id","","",3896,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::drvctrl","",3901,[[]]],[11,"borrow","","",3901,[[]]],[11,"borrow_mut","","",3901,[[]]],[11,"try_from","","",3901,[[],["result",4]]],[11,"into","","",3901,[[]]],[11,"try_into","","",3901,[[],["result",4]]],[11,"type_id","","",3901,[[],["typeid",3]]],[11,"from","","",3902,[[]]],[11,"borrow","","",3902,[[]]],[11,"borrow_mut","","",3902,[[]]],[11,"try_from","","",3902,[[],["result",4]]],[11,"into","","",3902,[[]]],[11,"try_into","","",3902,[[],["result",4]]],[11,"type_id","","",3902,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::dbgctrl","",3905,[[]]],[11,"borrow","","",3905,[[]]],[11,"borrow_mut","","",3905,[[]]],[11,"try_from","","",3905,[[],["result",4]]],[11,"into","","",3905,[[]]],[11,"try_into","","",3905,[[],["result",4]]],[11,"type_id","","",3905,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::count","",3909,[[]]],[11,"borrow","","",3909,[[]]],[11,"borrow_mut","","",3909,[[]]],[11,"try_from","","",3909,[[],["result",4]]],[11,"into","","",3909,[[]]],[11,"try_into","","",3909,[[],["result",4]]],[11,"type_id","","",3909,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::cc","",3912,[[]]],[11,"borrow","","",3912,[[]]],[11,"borrow_mut","","",3912,[[]]],[11,"try_from","","",3912,[[],["result",4]]],[11,"into","","",3912,[[]]],[11,"try_into","","",3912,[[],["result",4]]],[11,"type_id","","",3912,[[],["typeid",3]]],[11,"from","atsamd51g::tc0::count32::ccbuf","",3915,[[]]],[11,"borrow","","",3915,[[]]],[11,"borrow_mut","","",3915,[[]]],[11,"try_from","","",3915,[[],["result",4]]],[11,"into","","",3915,[[]]],[11,"try_into","","",3915,[[],["result",4]]],[11,"type_id","","",3915,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0","",3919,[[]]],[11,"borrow","","",3919,[[]]],[11,"borrow_mut","","",3919,[[]]],[11,"try_from","","",3919,[[],["result",4]]],[11,"into","","",3919,[[]]],[11,"try_into","","",3919,[[],["result",4]]],[11,"type_id","","",3919,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ctrla","",3923,[[]]],[11,"borrow","","",3923,[[]]],[11,"borrow_mut","","",3923,[[]]],[11,"try_from","","",3923,[[],["result",4]]],[11,"into","","",3923,[[]]],[11,"try_into","","",3923,[[],["result",4]]],[11,"type_id","","",3923,[[],["typeid",3]]],[11,"from","","",3924,[[]]],[11,"borrow","","",3924,[[]]],[11,"borrow_mut","","",3924,[[]]],[11,"try_from","","",3924,[[],["result",4]]],[11,"into","","",3924,[[]]],[11,"try_into","","",3924,[[],["result",4]]],[11,"type_id","","",3924,[[],["typeid",3]]],[11,"from","","",3926,[[]]],[11,"borrow","","",3926,[[]]],[11,"borrow_mut","","",3926,[[]]],[11,"try_from","","",3926,[[],["result",4]]],[11,"into","","",3926,[[]]],[11,"try_into","","",3926,[[],["result",4]]],[11,"type_id","","",3926,[[],["typeid",3]]],[11,"from","","",3928,[[]]],[11,"borrow","","",3928,[[]]],[11,"borrow_mut","","",3928,[[]]],[11,"try_from","","",3928,[[],["result",4]]],[11,"into","","",3928,[[]]],[11,"try_into","","",3928,[[],["result",4]]],[11,"type_id","","",3928,[[],["typeid",3]]],[11,"from","","",3929,[[]]],[11,"borrow","","",3929,[[]]],[11,"borrow_mut","","",3929,[[]]],[11,"try_from","","",3929,[[],["result",4]]],[11,"into","","",3929,[[]]],[11,"try_into","","",3929,[[],["result",4]]],[11,"type_id","","",3929,[[],["typeid",3]]],[11,"from","","",3931,[[]]],[11,"borrow","","",3931,[[]]],[11,"borrow_mut","","",3931,[[]]],[11,"try_from","","",3931,[[],["result",4]]],[11,"into","","",3931,[[]]],[11,"try_into","","",3931,[[],["result",4]]],[11,"type_id","","",3931,[[],["typeid",3]]],[11,"from","","",3932,[[]]],[11,"borrow","","",3932,[[]]],[11,"borrow_mut","","",3932,[[]]],[11,"try_from","","",3932,[[],["result",4]]],[11,"into","","",3932,[[]]],[11,"try_into","","",3932,[[],["result",4]]],[11,"type_id","","",3932,[[],["typeid",3]]],[11,"from","","",3933,[[]]],[11,"borrow","","",3933,[[]]],[11,"borrow_mut","","",3933,[[]]],[11,"try_from","","",3933,[[],["result",4]]],[11,"into","","",3933,[[]]],[11,"try_into","","",3933,[[],["result",4]]],[11,"type_id","","",3933,[[],["typeid",3]]],[11,"from","","",3934,[[]]],[11,"borrow","","",3934,[[]]],[11,"borrow_mut","","",3934,[[]]],[11,"try_from","","",3934,[[],["result",4]]],[11,"into","","",3934,[[]]],[11,"try_into","","",3934,[[],["result",4]]],[11,"type_id","","",3934,[[],["typeid",3]]],[11,"from","","",3935,[[]]],[11,"borrow","","",3935,[[]]],[11,"borrow_mut","","",3935,[[]]],[11,"try_from","","",3935,[[],["result",4]]],[11,"into","","",3935,[[]]],[11,"try_into","","",3935,[[],["result",4]]],[11,"type_id","","",3935,[[],["typeid",3]]],[11,"from","","",3936,[[]]],[11,"borrow","","",3936,[[]]],[11,"borrow_mut","","",3936,[[]]],[11,"try_from","","",3936,[[],["result",4]]],[11,"into","","",3936,[[]]],[11,"try_into","","",3936,[[],["result",4]]],[11,"type_id","","",3936,[[],["typeid",3]]],[11,"from","","",3937,[[]]],[11,"borrow","","",3937,[[]]],[11,"borrow_mut","","",3937,[[]]],[11,"try_from","","",3937,[[],["result",4]]],[11,"into","","",3937,[[]]],[11,"try_into","","",3937,[[],["result",4]]],[11,"type_id","","",3937,[[],["typeid",3]]],[11,"from","","",3938,[[]]],[11,"borrow","","",3938,[[]]],[11,"borrow_mut","","",3938,[[]]],[11,"try_from","","",3938,[[],["result",4]]],[11,"into","","",3938,[[]]],[11,"try_into","","",3938,[[],["result",4]]],[11,"type_id","","",3938,[[],["typeid",3]]],[11,"from","","",3939,[[]]],[11,"borrow","","",3939,[[]]],[11,"borrow_mut","","",3939,[[]]],[11,"try_from","","",3939,[[],["result",4]]],[11,"into","","",3939,[[]]],[11,"try_into","","",3939,[[],["result",4]]],[11,"type_id","","",3939,[[],["typeid",3]]],[11,"from","","",3940,[[]]],[11,"borrow","","",3940,[[]]],[11,"borrow_mut","","",3940,[[]]],[11,"try_from","","",3940,[[],["result",4]]],[11,"into","","",3940,[[]]],[11,"try_into","","",3940,[[],["result",4]]],[11,"type_id","","",3940,[[],["typeid",3]]],[11,"from","","",3920,[[]]],[11,"borrow","","",3920,[[]]],[11,"borrow_mut","","",3920,[[]]],[11,"try_from","","",3920,[[],["result",4]]],[11,"into","","",3920,[[]]],[11,"try_into","","",3920,[[],["result",4]]],[11,"type_id","","",3920,[[],["typeid",3]]],[11,"from","","",3921,[[]]],[11,"borrow","","",3921,[[]]],[11,"borrow_mut","","",3921,[[]]],[11,"try_from","","",3921,[[],["result",4]]],[11,"into","","",3921,[[]]],[11,"try_into","","",3921,[[],["result",4]]],[11,"type_id","","",3921,[[],["typeid",3]]],[11,"from","","",3922,[[]]],[11,"borrow","","",3922,[[]]],[11,"borrow_mut","","",3922,[[]]],[11,"try_from","","",3922,[[],["result",4]]],[11,"into","","",3922,[[]]],[11,"try_into","","",3922,[[],["result",4]]],[11,"type_id","","",3922,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ctrlbclr","",3945,[[]]],[11,"borrow","","",3945,[[]]],[11,"borrow_mut","","",3945,[[]]],[11,"try_from","","",3945,[[],["result",4]]],[11,"into","","",3945,[[]]],[11,"try_into","","",3945,[[],["result",4]]],[11,"type_id","","",3945,[[],["typeid",3]]],[11,"from","","",3946,[[]]],[11,"borrow","","",3946,[[]]],[11,"borrow_mut","","",3946,[[]]],[11,"try_from","","",3946,[[],["result",4]]],[11,"into","","",3946,[[]]],[11,"try_into","","",3946,[[],["result",4]]],[11,"type_id","","",3946,[[],["typeid",3]]],[11,"from","","",3947,[[]]],[11,"borrow","","",3947,[[]]],[11,"borrow_mut","","",3947,[[]]],[11,"try_from","","",3947,[[],["result",4]]],[11,"into","","",3947,[[]]],[11,"try_into","","",3947,[[],["result",4]]],[11,"type_id","","",3947,[[],["typeid",3]]],[11,"from","","",3949,[[]]],[11,"borrow","","",3949,[[]]],[11,"borrow_mut","","",3949,[[]]],[11,"try_from","","",3949,[[],["result",4]]],[11,"into","","",3949,[[]]],[11,"try_into","","",3949,[[],["result",4]]],[11,"type_id","","",3949,[[],["typeid",3]]],[11,"from","","",3951,[[]]],[11,"borrow","","",3951,[[]]],[11,"borrow_mut","","",3951,[[]]],[11,"try_from","","",3951,[[],["result",4]]],[11,"into","","",3951,[[]]],[11,"try_into","","",3951,[[],["result",4]]],[11,"type_id","","",3951,[[],["typeid",3]]],[11,"from","","",3943,[[]]],[11,"borrow","","",3943,[[]]],[11,"borrow_mut","","",3943,[[]]],[11,"try_from","","",3943,[[],["result",4]]],[11,"into","","",3943,[[]]],[11,"try_into","","",3943,[[],["result",4]]],[11,"type_id","","",3943,[[],["typeid",3]]],[11,"from","","",3944,[[]]],[11,"borrow","","",3944,[[]]],[11,"borrow_mut","","",3944,[[]]],[11,"try_from","","",3944,[[],["result",4]]],[11,"into","","",3944,[[]]],[11,"try_into","","",3944,[[],["result",4]]],[11,"type_id","","",3944,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ctrlbset","",3956,[[]]],[11,"borrow","","",3956,[[]]],[11,"borrow_mut","","",3956,[[]]],[11,"try_from","","",3956,[[],["result",4]]],[11,"into","","",3956,[[]]],[11,"try_into","","",3956,[[],["result",4]]],[11,"type_id","","",3956,[[],["typeid",3]]],[11,"from","","",3957,[[]]],[11,"borrow","","",3957,[[]]],[11,"borrow_mut","","",3957,[[]]],[11,"try_from","","",3957,[[],["result",4]]],[11,"into","","",3957,[[]]],[11,"try_into","","",3957,[[],["result",4]]],[11,"type_id","","",3957,[[],["typeid",3]]],[11,"from","","",3958,[[]]],[11,"borrow","","",3958,[[]]],[11,"borrow_mut","","",3958,[[]]],[11,"try_from","","",3958,[[],["result",4]]],[11,"into","","",3958,[[]]],[11,"try_into","","",3958,[[],["result",4]]],[11,"type_id","","",3958,[[],["typeid",3]]],[11,"from","","",3960,[[]]],[11,"borrow","","",3960,[[]]],[11,"borrow_mut","","",3960,[[]]],[11,"try_from","","",3960,[[],["result",4]]],[11,"into","","",3960,[[]]],[11,"try_into","","",3960,[[],["result",4]]],[11,"type_id","","",3960,[[],["typeid",3]]],[11,"from","","",3962,[[]]],[11,"borrow","","",3962,[[]]],[11,"borrow_mut","","",3962,[[]]],[11,"try_from","","",3962,[[],["result",4]]],[11,"into","","",3962,[[]]],[11,"try_into","","",3962,[[],["result",4]]],[11,"type_id","","",3962,[[],["typeid",3]]],[11,"from","","",3954,[[]]],[11,"borrow","","",3954,[[]]],[11,"borrow_mut","","",3954,[[]]],[11,"try_from","","",3954,[[],["result",4]]],[11,"into","","",3954,[[]]],[11,"try_into","","",3954,[[],["result",4]]],[11,"type_id","","",3954,[[],["typeid",3]]],[11,"from","","",3955,[[]]],[11,"borrow","","",3955,[[]]],[11,"borrow_mut","","",3955,[[]]],[11,"try_from","","",3955,[[],["result",4]]],[11,"into","","",3955,[[]]],[11,"try_into","","",3955,[[],["result",4]]],[11,"type_id","","",3955,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::fctrla","",3972,[[]]],[11,"borrow","","",3972,[[]]],[11,"borrow_mut","","",3972,[[]]],[11,"try_from","","",3972,[[],["result",4]]],[11,"into","","",3972,[[]]],[11,"try_into","","",3972,[[],["result",4]]],[11,"type_id","","",3972,[[],["typeid",3]]],[11,"from","","",3973,[[]]],[11,"borrow","","",3973,[[]]],[11,"borrow_mut","","",3973,[[]]],[11,"try_from","","",3973,[[],["result",4]]],[11,"into","","",3973,[[]]],[11,"try_into","","",3973,[[],["result",4]]],[11,"type_id","","",3973,[[],["typeid",3]]],[11,"from","","",3974,[[]]],[11,"borrow","","",3974,[[]]],[11,"borrow_mut","","",3974,[[]]],[11,"try_from","","",3974,[[],["result",4]]],[11,"into","","",3974,[[]]],[11,"try_into","","",3974,[[],["result",4]]],[11,"type_id","","",3974,[[],["typeid",3]]],[11,"from","","",3976,[[]]],[11,"borrow","","",3976,[[]]],[11,"borrow_mut","","",3976,[[]]],[11,"try_from","","",3976,[[],["result",4]]],[11,"into","","",3976,[[]]],[11,"try_into","","",3976,[[],["result",4]]],[11,"type_id","","",3976,[[],["typeid",3]]],[11,"from","","",3977,[[]]],[11,"borrow","","",3977,[[]]],[11,"borrow_mut","","",3977,[[]]],[11,"try_from","","",3977,[[],["result",4]]],[11,"into","","",3977,[[]]],[11,"try_into","","",3977,[[],["result",4]]],[11,"type_id","","",3977,[[],["typeid",3]]],[11,"from","","",3979,[[]]],[11,"borrow","","",3979,[[]]],[11,"borrow_mut","","",3979,[[]]],[11,"try_from","","",3979,[[],["result",4]]],[11,"into","","",3979,[[]]],[11,"try_into","","",3979,[[],["result",4]]],[11,"type_id","","",3979,[[],["typeid",3]]],[11,"from","","",3981,[[]]],[11,"borrow","","",3981,[[]]],[11,"borrow_mut","","",3981,[[]]],[11,"try_from","","",3981,[[],["result",4]]],[11,"into","","",3981,[[]]],[11,"try_into","","",3981,[[],["result",4]]],[11,"type_id","","",3981,[[],["typeid",3]]],[11,"from","","",3983,[[]]],[11,"borrow","","",3983,[[]]],[11,"borrow_mut","","",3983,[[]]],[11,"try_from","","",3983,[[],["result",4]]],[11,"into","","",3983,[[]]],[11,"try_into","","",3983,[[],["result",4]]],[11,"type_id","","",3983,[[],["typeid",3]]],[11,"from","","",3984,[[]]],[11,"borrow","","",3984,[[]]],[11,"borrow_mut","","",3984,[[]]],[11,"try_from","","",3984,[[],["result",4]]],[11,"into","","",3984,[[]]],[11,"try_into","","",3984,[[],["result",4]]],[11,"type_id","","",3984,[[],["typeid",3]]],[11,"from","","",3985,[[]]],[11,"borrow","","",3985,[[]]],[11,"borrow_mut","","",3985,[[]]],[11,"try_from","","",3985,[[],["result",4]]],[11,"into","","",3985,[[]]],[11,"try_into","","",3985,[[],["result",4]]],[11,"type_id","","",3985,[[],["typeid",3]]],[11,"from","","",3986,[[]]],[11,"borrow","","",3986,[[]]],[11,"borrow_mut","","",3986,[[]]],[11,"try_from","","",3986,[[],["result",4]]],[11,"into","","",3986,[[]]],[11,"try_into","","",3986,[[],["result",4]]],[11,"type_id","","",3986,[[],["typeid",3]]],[11,"from","","",3966,[[]]],[11,"borrow","","",3966,[[]]],[11,"borrow_mut","","",3966,[[]]],[11,"try_from","","",3966,[[],["result",4]]],[11,"into","","",3966,[[]]],[11,"try_into","","",3966,[[],["result",4]]],[11,"type_id","","",3966,[[],["typeid",3]]],[11,"from","","",3967,[[]]],[11,"borrow","","",3967,[[]]],[11,"borrow_mut","","",3967,[[]]],[11,"try_from","","",3967,[[],["result",4]]],[11,"into","","",3967,[[]]],[11,"try_into","","",3967,[[],["result",4]]],[11,"type_id","","",3967,[[],["typeid",3]]],[11,"from","","",3968,[[]]],[11,"borrow","","",3968,[[]]],[11,"borrow_mut","","",3968,[[]]],[11,"try_from","","",3968,[[],["result",4]]],[11,"into","","",3968,[[]]],[11,"try_into","","",3968,[[],["result",4]]],[11,"type_id","","",3968,[[],["typeid",3]]],[11,"from","","",3969,[[]]],[11,"borrow","","",3969,[[]]],[11,"borrow_mut","","",3969,[[]]],[11,"try_from","","",3969,[[],["result",4]]],[11,"into","","",3969,[[]]],[11,"try_into","","",3969,[[],["result",4]]],[11,"type_id","","",3969,[[],["typeid",3]]],[11,"from","","",3970,[[]]],[11,"borrow","","",3970,[[]]],[11,"borrow_mut","","",3970,[[]]],[11,"try_from","","",3970,[[],["result",4]]],[11,"into","","",3970,[[]]],[11,"try_into","","",3970,[[],["result",4]]],[11,"type_id","","",3970,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::fctrlb","",3995,[[]]],[11,"borrow","","",3995,[[]]],[11,"borrow_mut","","",3995,[[]]],[11,"try_from","","",3995,[[],["result",4]]],[11,"into","","",3995,[[]]],[11,"try_into","","",3995,[[],["result",4]]],[11,"type_id","","",3995,[[],["typeid",3]]],[11,"from","","",3996,[[]]],[11,"borrow","","",3996,[[]]],[11,"borrow_mut","","",3996,[[]]],[11,"try_from","","",3996,[[],["result",4]]],[11,"into","","",3996,[[]]],[11,"try_into","","",3996,[[],["result",4]]],[11,"type_id","","",3996,[[],["typeid",3]]],[11,"from","","",3997,[[]]],[11,"borrow","","",3997,[[]]],[11,"borrow_mut","","",3997,[[]]],[11,"try_from","","",3997,[[],["result",4]]],[11,"into","","",3997,[[]]],[11,"try_into","","",3997,[[],["result",4]]],[11,"type_id","","",3997,[[],["typeid",3]]],[11,"from","","",3999,[[]]],[11,"borrow","","",3999,[[]]],[11,"borrow_mut","","",3999,[[]]],[11,"try_from","","",3999,[[],["result",4]]],[11,"into","","",3999,[[]]],[11,"try_into","","",3999,[[],["result",4]]],[11,"type_id","","",3999,[[],["typeid",3]]],[11,"from","","",4000,[[]]],[11,"borrow","","",4000,[[]]],[11,"borrow_mut","","",4000,[[]]],[11,"try_from","","",4000,[[],["result",4]]],[11,"into","","",4000,[[]]],[11,"try_into","","",4000,[[],["result",4]]],[11,"type_id","","",4000,[[],["typeid",3]]],[11,"from","","",4002,[[]]],[11,"borrow","","",4002,[[]]],[11,"borrow_mut","","",4002,[[]]],[11,"try_from","","",4002,[[],["result",4]]],[11,"into","","",4002,[[]]],[11,"try_into","","",4002,[[],["result",4]]],[11,"type_id","","",4002,[[],["typeid",3]]],[11,"from","","",4004,[[]]],[11,"borrow","","",4004,[[]]],[11,"borrow_mut","","",4004,[[]]],[11,"try_from","","",4004,[[],["result",4]]],[11,"into","","",4004,[[]]],[11,"try_into","","",4004,[[],["result",4]]],[11,"type_id","","",4004,[[],["typeid",3]]],[11,"from","","",4006,[[]]],[11,"borrow","","",4006,[[]]],[11,"borrow_mut","","",4006,[[]]],[11,"try_from","","",4006,[[],["result",4]]],[11,"into","","",4006,[[]]],[11,"try_into","","",4006,[[],["result",4]]],[11,"type_id","","",4006,[[],["typeid",3]]],[11,"from","","",4007,[[]]],[11,"borrow","","",4007,[[]]],[11,"borrow_mut","","",4007,[[]]],[11,"try_from","","",4007,[[],["result",4]]],[11,"into","","",4007,[[]]],[11,"try_into","","",4007,[[],["result",4]]],[11,"type_id","","",4007,[[],["typeid",3]]],[11,"from","","",4008,[[]]],[11,"borrow","","",4008,[[]]],[11,"borrow_mut","","",4008,[[]]],[11,"try_from","","",4008,[[],["result",4]]],[11,"into","","",4008,[[]]],[11,"try_into","","",4008,[[],["result",4]]],[11,"type_id","","",4008,[[],["typeid",3]]],[11,"from","","",4009,[[]]],[11,"borrow","","",4009,[[]]],[11,"borrow_mut","","",4009,[[]]],[11,"try_from","","",4009,[[],["result",4]]],[11,"into","","",4009,[[]]],[11,"try_into","","",4009,[[],["result",4]]],[11,"type_id","","",4009,[[],["typeid",3]]],[11,"from","","",3989,[[]]],[11,"borrow","","",3989,[[]]],[11,"borrow_mut","","",3989,[[]]],[11,"try_from","","",3989,[[],["result",4]]],[11,"into","","",3989,[[]]],[11,"try_into","","",3989,[[],["result",4]]],[11,"type_id","","",3989,[[],["typeid",3]]],[11,"from","","",3990,[[]]],[11,"borrow","","",3990,[[]]],[11,"borrow_mut","","",3990,[[]]],[11,"try_from","","",3990,[[],["result",4]]],[11,"into","","",3990,[[]]],[11,"try_into","","",3990,[[],["result",4]]],[11,"type_id","","",3990,[[],["typeid",3]]],[11,"from","","",3991,[[]]],[11,"borrow","","",3991,[[]]],[11,"borrow_mut","","",3991,[[]]],[11,"try_from","","",3991,[[],["result",4]]],[11,"into","","",3991,[[]]],[11,"try_into","","",3991,[[],["result",4]]],[11,"type_id","","",3991,[[],["typeid",3]]],[11,"from","","",3992,[[]]],[11,"borrow","","",3992,[[]]],[11,"borrow_mut","","",3992,[[]]],[11,"try_from","","",3992,[[],["result",4]]],[11,"into","","",3992,[[]]],[11,"try_into","","",3992,[[],["result",4]]],[11,"type_id","","",3992,[[],["typeid",3]]],[11,"from","","",3993,[[]]],[11,"borrow","","",3993,[[]]],[11,"borrow_mut","","",3993,[[]]],[11,"try_from","","",3993,[[],["result",4]]],[11,"into","","",3993,[[]]],[11,"try_into","","",3993,[[],["result",4]]],[11,"type_id","","",3993,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::wexctrl","",4012,[[]]],[11,"borrow","","",4012,[[]]],[11,"borrow_mut","","",4012,[[]]],[11,"try_from","","",4012,[[],["result",4]]],[11,"into","","",4012,[[]]],[11,"try_into","","",4012,[[],["result",4]]],[11,"type_id","","",4012,[[],["typeid",3]]],[11,"from","","",4013,[[]]],[11,"borrow","","",4013,[[]]],[11,"borrow_mut","","",4013,[[]]],[11,"try_from","","",4013,[[],["result",4]]],[11,"into","","",4013,[[]]],[11,"try_into","","",4013,[[],["result",4]]],[11,"type_id","","",4013,[[],["typeid",3]]],[11,"from","","",4014,[[]]],[11,"borrow","","",4014,[[]]],[11,"borrow_mut","","",4014,[[]]],[11,"try_from","","",4014,[[],["result",4]]],[11,"into","","",4014,[[]]],[11,"try_into","","",4014,[[],["result",4]]],[11,"type_id","","",4014,[[],["typeid",3]]],[11,"from","","",4015,[[]]],[11,"borrow","","",4015,[[]]],[11,"borrow_mut","","",4015,[[]]],[11,"try_from","","",4015,[[],["result",4]]],[11,"into","","",4015,[[]]],[11,"try_into","","",4015,[[],["result",4]]],[11,"type_id","","",4015,[[],["typeid",3]]],[11,"from","","",4016,[[]]],[11,"borrow","","",4016,[[]]],[11,"borrow_mut","","",4016,[[]]],[11,"try_from","","",4016,[[],["result",4]]],[11,"into","","",4016,[[]]],[11,"try_into","","",4016,[[],["result",4]]],[11,"type_id","","",4016,[[],["typeid",3]]],[11,"from","","",4017,[[]]],[11,"borrow","","",4017,[[]]],[11,"borrow_mut","","",4017,[[]]],[11,"try_from","","",4017,[[],["result",4]]],[11,"into","","",4017,[[]]],[11,"try_into","","",4017,[[],["result",4]]],[11,"type_id","","",4017,[[],["typeid",3]]],[11,"from","","",4018,[[]]],[11,"borrow","","",4018,[[]]],[11,"borrow_mut","","",4018,[[]]],[11,"try_from","","",4018,[[],["result",4]]],[11,"into","","",4018,[[]]],[11,"try_into","","",4018,[[],["result",4]]],[11,"type_id","","",4018,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::drvctrl","",4021,[[]]],[11,"borrow","","",4021,[[]]],[11,"borrow_mut","","",4021,[[]]],[11,"try_from","","",4021,[[],["result",4]]],[11,"into","","",4021,[[]]],[11,"try_into","","",4021,[[],["result",4]]],[11,"type_id","","",4021,[[],["typeid",3]]],[11,"from","","",4022,[[]]],[11,"borrow","","",4022,[[]]],[11,"borrow_mut","","",4022,[[]]],[11,"try_from","","",4022,[[],["result",4]]],[11,"into","","",4022,[[]]],[11,"try_into","","",4022,[[],["result",4]]],[11,"type_id","","",4022,[[],["typeid",3]]],[11,"from","","",4023,[[]]],[11,"borrow","","",4023,[[]]],[11,"borrow_mut","","",4023,[[]]],[11,"try_from","","",4023,[[],["result",4]]],[11,"into","","",4023,[[]]],[11,"try_into","","",4023,[[],["result",4]]],[11,"type_id","","",4023,[[],["typeid",3]]],[11,"from","","",4024,[[]]],[11,"borrow","","",4024,[[]]],[11,"borrow_mut","","",4024,[[]]],[11,"try_from","","",4024,[[],["result",4]]],[11,"into","","",4024,[[]]],[11,"try_into","","",4024,[[],["result",4]]],[11,"type_id","","",4024,[[],["typeid",3]]],[11,"from","","",4025,[[]]],[11,"borrow","","",4025,[[]]],[11,"borrow_mut","","",4025,[[]]],[11,"try_from","","",4025,[[],["result",4]]],[11,"into","","",4025,[[]]],[11,"try_into","","",4025,[[],["result",4]]],[11,"type_id","","",4025,[[],["typeid",3]]],[11,"from","","",4026,[[]]],[11,"borrow","","",4026,[[]]],[11,"borrow_mut","","",4026,[[]]],[11,"try_from","","",4026,[[],["result",4]]],[11,"into","","",4026,[[]]],[11,"try_into","","",4026,[[],["result",4]]],[11,"type_id","","",4026,[[],["typeid",3]]],[11,"from","","",4027,[[]]],[11,"borrow","","",4027,[[]]],[11,"borrow_mut","","",4027,[[]]],[11,"try_from","","",4027,[[],["result",4]]],[11,"into","","",4027,[[]]],[11,"try_into","","",4027,[[],["result",4]]],[11,"type_id","","",4027,[[],["typeid",3]]],[11,"from","","",4028,[[]]],[11,"borrow","","",4028,[[]]],[11,"borrow_mut","","",4028,[[]]],[11,"try_from","","",4028,[[],["result",4]]],[11,"into","","",4028,[[]]],[11,"try_into","","",4028,[[],["result",4]]],[11,"type_id","","",4028,[[],["typeid",3]]],[11,"from","","",4029,[[]]],[11,"borrow","","",4029,[[]]],[11,"borrow_mut","","",4029,[[]]],[11,"try_from","","",4029,[[],["result",4]]],[11,"into","","",4029,[[]]],[11,"try_into","","",4029,[[],["result",4]]],[11,"type_id","","",4029,[[],["typeid",3]]],[11,"from","","",4030,[[]]],[11,"borrow","","",4030,[[]]],[11,"borrow_mut","","",4030,[[]]],[11,"try_from","","",4030,[[],["result",4]]],[11,"into","","",4030,[[]]],[11,"try_into","","",4030,[[],["result",4]]],[11,"type_id","","",4030,[[],["typeid",3]]],[11,"from","","",4031,[[]]],[11,"borrow","","",4031,[[]]],[11,"borrow_mut","","",4031,[[]]],[11,"try_from","","",4031,[[],["result",4]]],[11,"into","","",4031,[[]]],[11,"try_into","","",4031,[[],["result",4]]],[11,"type_id","","",4031,[[],["typeid",3]]],[11,"from","","",4032,[[]]],[11,"borrow","","",4032,[[]]],[11,"borrow_mut","","",4032,[[]]],[11,"try_from","","",4032,[[],["result",4]]],[11,"into","","",4032,[[]]],[11,"try_into","","",4032,[[],["result",4]]],[11,"type_id","","",4032,[[],["typeid",3]]],[11,"from","","",4033,[[]]],[11,"borrow","","",4033,[[]]],[11,"borrow_mut","","",4033,[[]]],[11,"try_from","","",4033,[[],["result",4]]],[11,"into","","",4033,[[]]],[11,"try_into","","",4033,[[],["result",4]]],[11,"type_id","","",4033,[[],["typeid",3]]],[11,"from","","",4034,[[]]],[11,"borrow","","",4034,[[]]],[11,"borrow_mut","","",4034,[[]]],[11,"try_from","","",4034,[[],["result",4]]],[11,"into","","",4034,[[]]],[11,"try_into","","",4034,[[],["result",4]]],[11,"type_id","","",4034,[[],["typeid",3]]],[11,"from","","",4035,[[]]],[11,"borrow","","",4035,[[]]],[11,"borrow_mut","","",4035,[[]]],[11,"try_from","","",4035,[[],["result",4]]],[11,"into","","",4035,[[]]],[11,"try_into","","",4035,[[],["result",4]]],[11,"type_id","","",4035,[[],["typeid",3]]],[11,"from","","",4036,[[]]],[11,"borrow","","",4036,[[]]],[11,"borrow_mut","","",4036,[[]]],[11,"try_from","","",4036,[[],["result",4]]],[11,"into","","",4036,[[]]],[11,"try_into","","",4036,[[],["result",4]]],[11,"type_id","","",4036,[[],["typeid",3]]],[11,"from","","",4037,[[]]],[11,"borrow","","",4037,[[]]],[11,"borrow_mut","","",4037,[[]]],[11,"try_from","","",4037,[[],["result",4]]],[11,"into","","",4037,[[]]],[11,"try_into","","",4037,[[],["result",4]]],[11,"type_id","","",4037,[[],["typeid",3]]],[11,"from","","",4038,[[]]],[11,"borrow","","",4038,[[]]],[11,"borrow_mut","","",4038,[[]]],[11,"try_from","","",4038,[[],["result",4]]],[11,"into","","",4038,[[]]],[11,"try_into","","",4038,[[],["result",4]]],[11,"type_id","","",4038,[[],["typeid",3]]],[11,"from","","",4039,[[]]],[11,"borrow","","",4039,[[]]],[11,"borrow_mut","","",4039,[[]]],[11,"try_from","","",4039,[[],["result",4]]],[11,"into","","",4039,[[]]],[11,"try_into","","",4039,[[],["result",4]]],[11,"type_id","","",4039,[[],["typeid",3]]],[11,"from","","",4040,[[]]],[11,"borrow","","",4040,[[]]],[11,"borrow_mut","","",4040,[[]]],[11,"try_from","","",4040,[[],["result",4]]],[11,"into","","",4040,[[]]],[11,"try_into","","",4040,[[],["result",4]]],[11,"type_id","","",4040,[[],["typeid",3]]],[11,"from","","",4041,[[]]],[11,"borrow","","",4041,[[]]],[11,"borrow_mut","","",4041,[[]]],[11,"try_from","","",4041,[[],["result",4]]],[11,"into","","",4041,[[]]],[11,"try_into","","",4041,[[],["result",4]]],[11,"type_id","","",4041,[[],["typeid",3]]],[11,"from","","",4042,[[]]],[11,"borrow","","",4042,[[]]],[11,"borrow_mut","","",4042,[[]]],[11,"try_from","","",4042,[[],["result",4]]],[11,"into","","",4042,[[]]],[11,"try_into","","",4042,[[],["result",4]]],[11,"type_id","","",4042,[[],["typeid",3]]],[11,"from","","",4043,[[]]],[11,"borrow","","",4043,[[]]],[11,"borrow_mut","","",4043,[[]]],[11,"try_from","","",4043,[[],["result",4]]],[11,"into","","",4043,[[]]],[11,"try_into","","",4043,[[],["result",4]]],[11,"type_id","","",4043,[[],["typeid",3]]],[11,"from","","",4044,[[]]],[11,"borrow","","",4044,[[]]],[11,"borrow_mut","","",4044,[[]]],[11,"try_from","","",4044,[[],["result",4]]],[11,"into","","",4044,[[]]],[11,"try_into","","",4044,[[],["result",4]]],[11,"type_id","","",4044,[[],["typeid",3]]],[11,"from","","",4045,[[]]],[11,"borrow","","",4045,[[]]],[11,"borrow_mut","","",4045,[[]]],[11,"try_from","","",4045,[[],["result",4]]],[11,"into","","",4045,[[]]],[11,"try_into","","",4045,[[],["result",4]]],[11,"type_id","","",4045,[[],["typeid",3]]],[11,"from","","",4046,[[]]],[11,"borrow","","",4046,[[]]],[11,"borrow_mut","","",4046,[[]]],[11,"try_from","","",4046,[[],["result",4]]],[11,"into","","",4046,[[]]],[11,"try_into","","",4046,[[],["result",4]]],[11,"type_id","","",4046,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::dbgctrl","",4049,[[]]],[11,"borrow","","",4049,[[]]],[11,"borrow_mut","","",4049,[[]]],[11,"try_from","","",4049,[[],["result",4]]],[11,"into","","",4049,[[]]],[11,"try_into","","",4049,[[],["result",4]]],[11,"type_id","","",4049,[[],["typeid",3]]],[11,"from","","",4050,[[]]],[11,"borrow","","",4050,[[]]],[11,"borrow_mut","","",4050,[[]]],[11,"try_from","","",4050,[[],["result",4]]],[11,"into","","",4050,[[]]],[11,"try_into","","",4050,[[],["result",4]]],[11,"type_id","","",4050,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::evctrl","",4057,[[]]],[11,"borrow","","",4057,[[]]],[11,"borrow_mut","","",4057,[[]]],[11,"try_from","","",4057,[[],["result",4]]],[11,"into","","",4057,[[]]],[11,"try_into","","",4057,[[],["result",4]]],[11,"type_id","","",4057,[[],["typeid",3]]],[11,"from","","",4059,[[]]],[11,"borrow","","",4059,[[]]],[11,"borrow_mut","","",4059,[[]]],[11,"try_from","","",4059,[[],["result",4]]],[11,"into","","",4059,[[]]],[11,"try_into","","",4059,[[],["result",4]]],[11,"type_id","","",4059,[[],["typeid",3]]],[11,"from","","",4061,[[]]],[11,"borrow","","",4061,[[]]],[11,"borrow_mut","","",4061,[[]]],[11,"try_from","","",4061,[[],["result",4]]],[11,"into","","",4061,[[]]],[11,"try_into","","",4061,[[],["result",4]]],[11,"type_id","","",4061,[[],["typeid",3]]],[11,"from","","",4062,[[]]],[11,"borrow","","",4062,[[]]],[11,"borrow_mut","","",4062,[[]]],[11,"try_from","","",4062,[[],["result",4]]],[11,"into","","",4062,[[]]],[11,"try_into","","",4062,[[],["result",4]]],[11,"type_id","","",4062,[[],["typeid",3]]],[11,"from","","",4063,[[]]],[11,"borrow","","",4063,[[]]],[11,"borrow_mut","","",4063,[[]]],[11,"try_from","","",4063,[[],["result",4]]],[11,"into","","",4063,[[]]],[11,"try_into","","",4063,[[],["result",4]]],[11,"type_id","","",4063,[[],["typeid",3]]],[11,"from","","",4064,[[]]],[11,"borrow","","",4064,[[]]],[11,"borrow_mut","","",4064,[[]]],[11,"try_from","","",4064,[[],["result",4]]],[11,"into","","",4064,[[]]],[11,"try_into","","",4064,[[],["result",4]]],[11,"type_id","","",4064,[[],["typeid",3]]],[11,"from","","",4065,[[]]],[11,"borrow","","",4065,[[]]],[11,"borrow_mut","","",4065,[[]]],[11,"try_from","","",4065,[[],["result",4]]],[11,"into","","",4065,[[]]],[11,"try_into","","",4065,[[],["result",4]]],[11,"type_id","","",4065,[[],["typeid",3]]],[11,"from","","",4066,[[]]],[11,"borrow","","",4066,[[]]],[11,"borrow_mut","","",4066,[[]]],[11,"try_from","","",4066,[[],["result",4]]],[11,"into","","",4066,[[]]],[11,"try_into","","",4066,[[],["result",4]]],[11,"type_id","","",4066,[[],["typeid",3]]],[11,"from","","",4067,[[]]],[11,"borrow","","",4067,[[]]],[11,"borrow_mut","","",4067,[[]]],[11,"try_from","","",4067,[[],["result",4]]],[11,"into","","",4067,[[]]],[11,"try_into","","",4067,[[],["result",4]]],[11,"type_id","","",4067,[[],["typeid",3]]],[11,"from","","",4068,[[]]],[11,"borrow","","",4068,[[]]],[11,"borrow_mut","","",4068,[[]]],[11,"try_from","","",4068,[[],["result",4]]],[11,"into","","",4068,[[]]],[11,"try_into","","",4068,[[],["result",4]]],[11,"type_id","","",4068,[[],["typeid",3]]],[11,"from","","",4069,[[]]],[11,"borrow","","",4069,[[]]],[11,"borrow_mut","","",4069,[[]]],[11,"try_from","","",4069,[[],["result",4]]],[11,"into","","",4069,[[]]],[11,"try_into","","",4069,[[],["result",4]]],[11,"type_id","","",4069,[[],["typeid",3]]],[11,"from","","",4070,[[]]],[11,"borrow","","",4070,[[]]],[11,"borrow_mut","","",4070,[[]]],[11,"try_from","","",4070,[[],["result",4]]],[11,"into","","",4070,[[]]],[11,"try_into","","",4070,[[],["result",4]]],[11,"type_id","","",4070,[[],["typeid",3]]],[11,"from","","",4071,[[]]],[11,"borrow","","",4071,[[]]],[11,"borrow_mut","","",4071,[[]]],[11,"try_from","","",4071,[[],["result",4]]],[11,"into","","",4071,[[]]],[11,"try_into","","",4071,[[],["result",4]]],[11,"type_id","","",4071,[[],["typeid",3]]],[11,"from","","",4072,[[]]],[11,"borrow","","",4072,[[]]],[11,"borrow_mut","","",4072,[[]]],[11,"try_from","","",4072,[[],["result",4]]],[11,"into","","",4072,[[]]],[11,"try_into","","",4072,[[],["result",4]]],[11,"type_id","","",4072,[[],["typeid",3]]],[11,"from","","",4073,[[]]],[11,"borrow","","",4073,[[]]],[11,"borrow_mut","","",4073,[[]]],[11,"try_from","","",4073,[[],["result",4]]],[11,"into","","",4073,[[]]],[11,"try_into","","",4073,[[],["result",4]]],[11,"type_id","","",4073,[[],["typeid",3]]],[11,"from","","",4074,[[]]],[11,"borrow","","",4074,[[]]],[11,"borrow_mut","","",4074,[[]]],[11,"try_from","","",4074,[[],["result",4]]],[11,"into","","",4074,[[]]],[11,"try_into","","",4074,[[],["result",4]]],[11,"type_id","","",4074,[[],["typeid",3]]],[11,"from","","",4075,[[]]],[11,"borrow","","",4075,[[]]],[11,"borrow_mut","","",4075,[[]]],[11,"try_from","","",4075,[[],["result",4]]],[11,"into","","",4075,[[]]],[11,"try_into","","",4075,[[],["result",4]]],[11,"type_id","","",4075,[[],["typeid",3]]],[11,"from","","",4076,[[]]],[11,"borrow","","",4076,[[]]],[11,"borrow_mut","","",4076,[[]]],[11,"try_from","","",4076,[[],["result",4]]],[11,"into","","",4076,[[]]],[11,"try_into","","",4076,[[],["result",4]]],[11,"type_id","","",4076,[[],["typeid",3]]],[11,"from","","",4077,[[]]],[11,"borrow","","",4077,[[]]],[11,"borrow_mut","","",4077,[[]]],[11,"try_from","","",4077,[[],["result",4]]],[11,"into","","",4077,[[]]],[11,"try_into","","",4077,[[],["result",4]]],[11,"type_id","","",4077,[[],["typeid",3]]],[11,"from","","",4078,[[]]],[11,"borrow","","",4078,[[]]],[11,"borrow_mut","","",4078,[[]]],[11,"try_from","","",4078,[[],["result",4]]],[11,"into","","",4078,[[]]],[11,"try_into","","",4078,[[],["result",4]]],[11,"type_id","","",4078,[[],["typeid",3]]],[11,"from","","",4079,[[]]],[11,"borrow","","",4079,[[]]],[11,"borrow_mut","","",4079,[[]]],[11,"try_from","","",4079,[[],["result",4]]],[11,"into","","",4079,[[]]],[11,"try_into","","",4079,[[],["result",4]]],[11,"type_id","","",4079,[[],["typeid",3]]],[11,"from","","",4080,[[]]],[11,"borrow","","",4080,[[]]],[11,"borrow_mut","","",4080,[[]]],[11,"try_from","","",4080,[[],["result",4]]],[11,"into","","",4080,[[]]],[11,"try_into","","",4080,[[],["result",4]]],[11,"type_id","","",4080,[[],["typeid",3]]],[11,"from","","",4053,[[]]],[11,"borrow","","",4053,[[]]],[11,"borrow_mut","","",4053,[[]]],[11,"try_from","","",4053,[[],["result",4]]],[11,"into","","",4053,[[]]],[11,"try_into","","",4053,[[],["result",4]]],[11,"type_id","","",4053,[[],["typeid",3]]],[11,"from","","",4054,[[]]],[11,"borrow","","",4054,[[]]],[11,"borrow_mut","","",4054,[[]]],[11,"try_from","","",4054,[[],["result",4]]],[11,"into","","",4054,[[]]],[11,"try_into","","",4054,[[],["result",4]]],[11,"type_id","","",4054,[[],["typeid",3]]],[11,"from","","",4055,[[]]],[11,"borrow","","",4055,[[]]],[11,"borrow_mut","","",4055,[[]]],[11,"try_from","","",4055,[[],["result",4]]],[11,"into","","",4055,[[]]],[11,"try_into","","",4055,[[],["result",4]]],[11,"type_id","","",4055,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::intenclr","",4083,[[]]],[11,"borrow","","",4083,[[]]],[11,"borrow_mut","","",4083,[[]]],[11,"try_from","","",4083,[[],["result",4]]],[11,"into","","",4083,[[]]],[11,"try_into","","",4083,[[],["result",4]]],[11,"type_id","","",4083,[[],["typeid",3]]],[11,"from","","",4084,[[]]],[11,"borrow","","",4084,[[]]],[11,"borrow_mut","","",4084,[[]]],[11,"try_from","","",4084,[[],["result",4]]],[11,"into","","",4084,[[]]],[11,"try_into","","",4084,[[],["result",4]]],[11,"type_id","","",4084,[[],["typeid",3]]],[11,"from","","",4085,[[]]],[11,"borrow","","",4085,[[]]],[11,"borrow_mut","","",4085,[[]]],[11,"try_from","","",4085,[[],["result",4]]],[11,"into","","",4085,[[]]],[11,"try_into","","",4085,[[],["result",4]]],[11,"type_id","","",4085,[[],["typeid",3]]],[11,"from","","",4086,[[]]],[11,"borrow","","",4086,[[]]],[11,"borrow_mut","","",4086,[[]]],[11,"try_from","","",4086,[[],["result",4]]],[11,"into","","",4086,[[]]],[11,"try_into","","",4086,[[],["result",4]]],[11,"type_id","","",4086,[[],["typeid",3]]],[11,"from","","",4087,[[]]],[11,"borrow","","",4087,[[]]],[11,"borrow_mut","","",4087,[[]]],[11,"try_from","","",4087,[[],["result",4]]],[11,"into","","",4087,[[]]],[11,"try_into","","",4087,[[],["result",4]]],[11,"type_id","","",4087,[[],["typeid",3]]],[11,"from","","",4088,[[]]],[11,"borrow","","",4088,[[]]],[11,"borrow_mut","","",4088,[[]]],[11,"try_from","","",4088,[[],["result",4]]],[11,"into","","",4088,[[]]],[11,"try_into","","",4088,[[],["result",4]]],[11,"type_id","","",4088,[[],["typeid",3]]],[11,"from","","",4089,[[]]],[11,"borrow","","",4089,[[]]],[11,"borrow_mut","","",4089,[[]]],[11,"try_from","","",4089,[[],["result",4]]],[11,"into","","",4089,[[]]],[11,"try_into","","",4089,[[],["result",4]]],[11,"type_id","","",4089,[[],["typeid",3]]],[11,"from","","",4090,[[]]],[11,"borrow","","",4090,[[]]],[11,"borrow_mut","","",4090,[[]]],[11,"try_from","","",4090,[[],["result",4]]],[11,"into","","",4090,[[]]],[11,"try_into","","",4090,[[],["result",4]]],[11,"type_id","","",4090,[[],["typeid",3]]],[11,"from","","",4091,[[]]],[11,"borrow","","",4091,[[]]],[11,"borrow_mut","","",4091,[[]]],[11,"try_from","","",4091,[[],["result",4]]],[11,"into","","",4091,[[]]],[11,"try_into","","",4091,[[],["result",4]]],[11,"type_id","","",4091,[[],["typeid",3]]],[11,"from","","",4092,[[]]],[11,"borrow","","",4092,[[]]],[11,"borrow_mut","","",4092,[[]]],[11,"try_from","","",4092,[[],["result",4]]],[11,"into","","",4092,[[]]],[11,"try_into","","",4092,[[],["result",4]]],[11,"type_id","","",4092,[[],["typeid",3]]],[11,"from","","",4093,[[]]],[11,"borrow","","",4093,[[]]],[11,"borrow_mut","","",4093,[[]]],[11,"try_from","","",4093,[[],["result",4]]],[11,"into","","",4093,[[]]],[11,"try_into","","",4093,[[],["result",4]]],[11,"type_id","","",4093,[[],["typeid",3]]],[11,"from","","",4094,[[]]],[11,"borrow","","",4094,[[]]],[11,"borrow_mut","","",4094,[[]]],[11,"try_from","","",4094,[[],["result",4]]],[11,"into","","",4094,[[]]],[11,"try_into","","",4094,[[],["result",4]]],[11,"type_id","","",4094,[[],["typeid",3]]],[11,"from","","",4095,[[]]],[11,"borrow","","",4095,[[]]],[11,"borrow_mut","","",4095,[[]]],[11,"try_from","","",4095,[[],["result",4]]],[11,"into","","",4095,[[]]],[11,"try_into","","",4095,[[],["result",4]]],[11,"type_id","","",4095,[[],["typeid",3]]],[11,"from","","",4096,[[]]],[11,"borrow","","",4096,[[]]],[11,"borrow_mut","","",4096,[[]]],[11,"try_from","","",4096,[[],["result",4]]],[11,"into","","",4096,[[]]],[11,"try_into","","",4096,[[],["result",4]]],[11,"type_id","","",4096,[[],["typeid",3]]],[11,"from","","",4097,[[]]],[11,"borrow","","",4097,[[]]],[11,"borrow_mut","","",4097,[[]]],[11,"try_from","","",4097,[[],["result",4]]],[11,"into","","",4097,[[]]],[11,"try_into","","",4097,[[],["result",4]]],[11,"type_id","","",4097,[[],["typeid",3]]],[11,"from","","",4098,[[]]],[11,"borrow","","",4098,[[]]],[11,"borrow_mut","","",4098,[[]]],[11,"try_from","","",4098,[[],["result",4]]],[11,"into","","",4098,[[]]],[11,"try_into","","",4098,[[],["result",4]]],[11,"type_id","","",4098,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::intenset","",4101,[[]]],[11,"borrow","","",4101,[[]]],[11,"borrow_mut","","",4101,[[]]],[11,"try_from","","",4101,[[],["result",4]]],[11,"into","","",4101,[[]]],[11,"try_into","","",4101,[[],["result",4]]],[11,"type_id","","",4101,[[],["typeid",3]]],[11,"from","","",4102,[[]]],[11,"borrow","","",4102,[[]]],[11,"borrow_mut","","",4102,[[]]],[11,"try_from","","",4102,[[],["result",4]]],[11,"into","","",4102,[[]]],[11,"try_into","","",4102,[[],["result",4]]],[11,"type_id","","",4102,[[],["typeid",3]]],[11,"from","","",4103,[[]]],[11,"borrow","","",4103,[[]]],[11,"borrow_mut","","",4103,[[]]],[11,"try_from","","",4103,[[],["result",4]]],[11,"into","","",4103,[[]]],[11,"try_into","","",4103,[[],["result",4]]],[11,"type_id","","",4103,[[],["typeid",3]]],[11,"from","","",4104,[[]]],[11,"borrow","","",4104,[[]]],[11,"borrow_mut","","",4104,[[]]],[11,"try_from","","",4104,[[],["result",4]]],[11,"into","","",4104,[[]]],[11,"try_into","","",4104,[[],["result",4]]],[11,"type_id","","",4104,[[],["typeid",3]]],[11,"from","","",4105,[[]]],[11,"borrow","","",4105,[[]]],[11,"borrow_mut","","",4105,[[]]],[11,"try_from","","",4105,[[],["result",4]]],[11,"into","","",4105,[[]]],[11,"try_into","","",4105,[[],["result",4]]],[11,"type_id","","",4105,[[],["typeid",3]]],[11,"from","","",4106,[[]]],[11,"borrow","","",4106,[[]]],[11,"borrow_mut","","",4106,[[]]],[11,"try_from","","",4106,[[],["result",4]]],[11,"into","","",4106,[[]]],[11,"try_into","","",4106,[[],["result",4]]],[11,"type_id","","",4106,[[],["typeid",3]]],[11,"from","","",4107,[[]]],[11,"borrow","","",4107,[[]]],[11,"borrow_mut","","",4107,[[]]],[11,"try_from","","",4107,[[],["result",4]]],[11,"into","","",4107,[[]]],[11,"try_into","","",4107,[[],["result",4]]],[11,"type_id","","",4107,[[],["typeid",3]]],[11,"from","","",4108,[[]]],[11,"borrow","","",4108,[[]]],[11,"borrow_mut","","",4108,[[]]],[11,"try_from","","",4108,[[],["result",4]]],[11,"into","","",4108,[[]]],[11,"try_into","","",4108,[[],["result",4]]],[11,"type_id","","",4108,[[],["typeid",3]]],[11,"from","","",4109,[[]]],[11,"borrow","","",4109,[[]]],[11,"borrow_mut","","",4109,[[]]],[11,"try_from","","",4109,[[],["result",4]]],[11,"into","","",4109,[[]]],[11,"try_into","","",4109,[[],["result",4]]],[11,"type_id","","",4109,[[],["typeid",3]]],[11,"from","","",4110,[[]]],[11,"borrow","","",4110,[[]]],[11,"borrow_mut","","",4110,[[]]],[11,"try_from","","",4110,[[],["result",4]]],[11,"into","","",4110,[[]]],[11,"try_into","","",4110,[[],["result",4]]],[11,"type_id","","",4110,[[],["typeid",3]]],[11,"from","","",4111,[[]]],[11,"borrow","","",4111,[[]]],[11,"borrow_mut","","",4111,[[]]],[11,"try_from","","",4111,[[],["result",4]]],[11,"into","","",4111,[[]]],[11,"try_into","","",4111,[[],["result",4]]],[11,"type_id","","",4111,[[],["typeid",3]]],[11,"from","","",4112,[[]]],[11,"borrow","","",4112,[[]]],[11,"borrow_mut","","",4112,[[]]],[11,"try_from","","",4112,[[],["result",4]]],[11,"into","","",4112,[[]]],[11,"try_into","","",4112,[[],["result",4]]],[11,"type_id","","",4112,[[],["typeid",3]]],[11,"from","","",4113,[[]]],[11,"borrow","","",4113,[[]]],[11,"borrow_mut","","",4113,[[]]],[11,"try_from","","",4113,[[],["result",4]]],[11,"into","","",4113,[[]]],[11,"try_into","","",4113,[[],["result",4]]],[11,"type_id","","",4113,[[],["typeid",3]]],[11,"from","","",4114,[[]]],[11,"borrow","","",4114,[[]]],[11,"borrow_mut","","",4114,[[]]],[11,"try_from","","",4114,[[],["result",4]]],[11,"into","","",4114,[[]]],[11,"try_into","","",4114,[[],["result",4]]],[11,"type_id","","",4114,[[],["typeid",3]]],[11,"from","","",4115,[[]]],[11,"borrow","","",4115,[[]]],[11,"borrow_mut","","",4115,[[]]],[11,"try_from","","",4115,[[],["result",4]]],[11,"into","","",4115,[[]]],[11,"try_into","","",4115,[[],["result",4]]],[11,"type_id","","",4115,[[],["typeid",3]]],[11,"from","","",4116,[[]]],[11,"borrow","","",4116,[[]]],[11,"borrow_mut","","",4116,[[]]],[11,"try_from","","",4116,[[],["result",4]]],[11,"into","","",4116,[[]]],[11,"try_into","","",4116,[[],["result",4]]],[11,"type_id","","",4116,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::intflag","",4119,[[]]],[11,"borrow","","",4119,[[]]],[11,"borrow_mut","","",4119,[[]]],[11,"try_from","","",4119,[[],["result",4]]],[11,"into","","",4119,[[]]],[11,"try_into","","",4119,[[],["result",4]]],[11,"type_id","","",4119,[[],["typeid",3]]],[11,"from","","",4120,[[]]],[11,"borrow","","",4120,[[]]],[11,"borrow_mut","","",4120,[[]]],[11,"try_from","","",4120,[[],["result",4]]],[11,"into","","",4120,[[]]],[11,"try_into","","",4120,[[],["result",4]]],[11,"type_id","","",4120,[[],["typeid",3]]],[11,"from","","",4121,[[]]],[11,"borrow","","",4121,[[]]],[11,"borrow_mut","","",4121,[[]]],[11,"try_from","","",4121,[[],["result",4]]],[11,"into","","",4121,[[]]],[11,"try_into","","",4121,[[],["result",4]]],[11,"type_id","","",4121,[[],["typeid",3]]],[11,"from","","",4122,[[]]],[11,"borrow","","",4122,[[]]],[11,"borrow_mut","","",4122,[[]]],[11,"try_from","","",4122,[[],["result",4]]],[11,"into","","",4122,[[]]],[11,"try_into","","",4122,[[],["result",4]]],[11,"type_id","","",4122,[[],["typeid",3]]],[11,"from","","",4123,[[]]],[11,"borrow","","",4123,[[]]],[11,"borrow_mut","","",4123,[[]]],[11,"try_from","","",4123,[[],["result",4]]],[11,"into","","",4123,[[]]],[11,"try_into","","",4123,[[],["result",4]]],[11,"type_id","","",4123,[[],["typeid",3]]],[11,"from","","",4124,[[]]],[11,"borrow","","",4124,[[]]],[11,"borrow_mut","","",4124,[[]]],[11,"try_from","","",4124,[[],["result",4]]],[11,"into","","",4124,[[]]],[11,"try_into","","",4124,[[],["result",4]]],[11,"type_id","","",4124,[[],["typeid",3]]],[11,"from","","",4125,[[]]],[11,"borrow","","",4125,[[]]],[11,"borrow_mut","","",4125,[[]]],[11,"try_from","","",4125,[[],["result",4]]],[11,"into","","",4125,[[]]],[11,"try_into","","",4125,[[],["result",4]]],[11,"type_id","","",4125,[[],["typeid",3]]],[11,"from","","",4126,[[]]],[11,"borrow","","",4126,[[]]],[11,"borrow_mut","","",4126,[[]]],[11,"try_from","","",4126,[[],["result",4]]],[11,"into","","",4126,[[]]],[11,"try_into","","",4126,[[],["result",4]]],[11,"type_id","","",4126,[[],["typeid",3]]],[11,"from","","",4127,[[]]],[11,"borrow","","",4127,[[]]],[11,"borrow_mut","","",4127,[[]]],[11,"try_from","","",4127,[[],["result",4]]],[11,"into","","",4127,[[]]],[11,"try_into","","",4127,[[],["result",4]]],[11,"type_id","","",4127,[[],["typeid",3]]],[11,"from","","",4128,[[]]],[11,"borrow","","",4128,[[]]],[11,"borrow_mut","","",4128,[[]]],[11,"try_from","","",4128,[[],["result",4]]],[11,"into","","",4128,[[]]],[11,"try_into","","",4128,[[],["result",4]]],[11,"type_id","","",4128,[[],["typeid",3]]],[11,"from","","",4129,[[]]],[11,"borrow","","",4129,[[]]],[11,"borrow_mut","","",4129,[[]]],[11,"try_from","","",4129,[[],["result",4]]],[11,"into","","",4129,[[]]],[11,"try_into","","",4129,[[],["result",4]]],[11,"type_id","","",4129,[[],["typeid",3]]],[11,"from","","",4130,[[]]],[11,"borrow","","",4130,[[]]],[11,"borrow_mut","","",4130,[[]]],[11,"try_from","","",4130,[[],["result",4]]],[11,"into","","",4130,[[]]],[11,"try_into","","",4130,[[],["result",4]]],[11,"type_id","","",4130,[[],["typeid",3]]],[11,"from","","",4131,[[]]],[11,"borrow","","",4131,[[]]],[11,"borrow_mut","","",4131,[[]]],[11,"try_from","","",4131,[[],["result",4]]],[11,"into","","",4131,[[]]],[11,"try_into","","",4131,[[],["result",4]]],[11,"type_id","","",4131,[[],["typeid",3]]],[11,"from","","",4132,[[]]],[11,"borrow","","",4132,[[]]],[11,"borrow_mut","","",4132,[[]]],[11,"try_from","","",4132,[[],["result",4]]],[11,"into","","",4132,[[]]],[11,"try_into","","",4132,[[],["result",4]]],[11,"type_id","","",4132,[[],["typeid",3]]],[11,"from","","",4133,[[]]],[11,"borrow","","",4133,[[]]],[11,"borrow_mut","","",4133,[[]]],[11,"try_from","","",4133,[[],["result",4]]],[11,"into","","",4133,[[]]],[11,"try_into","","",4133,[[],["result",4]]],[11,"type_id","","",4133,[[],["typeid",3]]],[11,"from","","",4134,[[]]],[11,"borrow","","",4134,[[]]],[11,"borrow_mut","","",4134,[[]]],[11,"try_from","","",4134,[[],["result",4]]],[11,"into","","",4134,[[]]],[11,"try_into","","",4134,[[],["result",4]]],[11,"type_id","","",4134,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::status","",4137,[[]]],[11,"borrow","","",4137,[[]]],[11,"borrow_mut","","",4137,[[]]],[11,"try_from","","",4137,[[],["result",4]]],[11,"into","","",4137,[[]]],[11,"try_into","","",4137,[[],["result",4]]],[11,"type_id","","",4137,[[],["typeid",3]]],[11,"from","","",4138,[[]]],[11,"borrow","","",4138,[[]]],[11,"borrow_mut","","",4138,[[]]],[11,"try_from","","",4138,[[],["result",4]]],[11,"into","","",4138,[[]]],[11,"try_into","","",4138,[[],["result",4]]],[11,"type_id","","",4138,[[],["typeid",3]]],[11,"from","","",4139,[[]]],[11,"borrow","","",4139,[[]]],[11,"borrow_mut","","",4139,[[]]],[11,"try_from","","",4139,[[],["result",4]]],[11,"into","","",4139,[[]]],[11,"try_into","","",4139,[[],["result",4]]],[11,"type_id","","",4139,[[],["typeid",3]]],[11,"from","","",4140,[[]]],[11,"borrow","","",4140,[[]]],[11,"borrow_mut","","",4140,[[]]],[11,"try_from","","",4140,[[],["result",4]]],[11,"into","","",4140,[[]]],[11,"try_into","","",4140,[[],["result",4]]],[11,"type_id","","",4140,[[],["typeid",3]]],[11,"from","","",4141,[[]]],[11,"borrow","","",4141,[[]]],[11,"borrow_mut","","",4141,[[]]],[11,"try_from","","",4141,[[],["result",4]]],[11,"into","","",4141,[[]]],[11,"try_into","","",4141,[[],["result",4]]],[11,"type_id","","",4141,[[],["typeid",3]]],[11,"from","","",4142,[[]]],[11,"borrow","","",4142,[[]]],[11,"borrow_mut","","",4142,[[]]],[11,"try_from","","",4142,[[],["result",4]]],[11,"into","","",4142,[[]]],[11,"try_into","","",4142,[[],["result",4]]],[11,"type_id","","",4142,[[],["typeid",3]]],[11,"from","","",4143,[[]]],[11,"borrow","","",4143,[[]]],[11,"borrow_mut","","",4143,[[]]],[11,"try_from","","",4143,[[],["result",4]]],[11,"into","","",4143,[[]]],[11,"try_into","","",4143,[[],["result",4]]],[11,"type_id","","",4143,[[],["typeid",3]]],[11,"from","","",4144,[[]]],[11,"borrow","","",4144,[[]]],[11,"borrow_mut","","",4144,[[]]],[11,"try_from","","",4144,[[],["result",4]]],[11,"into","","",4144,[[]]],[11,"try_into","","",4144,[[],["result",4]]],[11,"type_id","","",4144,[[],["typeid",3]]],[11,"from","","",4145,[[]]],[11,"borrow","","",4145,[[]]],[11,"borrow_mut","","",4145,[[]]],[11,"try_from","","",4145,[[],["result",4]]],[11,"into","","",4145,[[]]],[11,"try_into","","",4145,[[],["result",4]]],[11,"type_id","","",4145,[[],["typeid",3]]],[11,"from","","",4146,[[]]],[11,"borrow","","",4146,[[]]],[11,"borrow_mut","","",4146,[[]]],[11,"try_from","","",4146,[[],["result",4]]],[11,"into","","",4146,[[]]],[11,"try_into","","",4146,[[],["result",4]]],[11,"type_id","","",4146,[[],["typeid",3]]],[11,"from","","",4147,[[]]],[11,"borrow","","",4147,[[]]],[11,"borrow_mut","","",4147,[[]]],[11,"try_from","","",4147,[[],["result",4]]],[11,"into","","",4147,[[]]],[11,"try_into","","",4147,[[],["result",4]]],[11,"type_id","","",4147,[[],["typeid",3]]],[11,"from","","",4148,[[]]],[11,"borrow","","",4148,[[]]],[11,"borrow_mut","","",4148,[[]]],[11,"try_from","","",4148,[[],["result",4]]],[11,"into","","",4148,[[]]],[11,"try_into","","",4148,[[],["result",4]]],[11,"type_id","","",4148,[[],["typeid",3]]],[11,"from","","",4149,[[]]],[11,"borrow","","",4149,[[]]],[11,"borrow_mut","","",4149,[[]]],[11,"try_from","","",4149,[[],["result",4]]],[11,"into","","",4149,[[]]],[11,"try_into","","",4149,[[],["result",4]]],[11,"type_id","","",4149,[[],["typeid",3]]],[11,"from","","",4150,[[]]],[11,"borrow","","",4150,[[]]],[11,"borrow_mut","","",4150,[[]]],[11,"try_from","","",4150,[[],["result",4]]],[11,"into","","",4150,[[]]],[11,"try_into","","",4150,[[],["result",4]]],[11,"type_id","","",4150,[[],["typeid",3]]],[11,"from","","",4151,[[]]],[11,"borrow","","",4151,[[]]],[11,"borrow_mut","","",4151,[[]]],[11,"try_from","","",4151,[[],["result",4]]],[11,"into","","",4151,[[]]],[11,"try_into","","",4151,[[],["result",4]]],[11,"type_id","","",4151,[[],["typeid",3]]],[11,"from","","",4152,[[]]],[11,"borrow","","",4152,[[]]],[11,"borrow_mut","","",4152,[[]]],[11,"try_from","","",4152,[[],["result",4]]],[11,"into","","",4152,[[]]],[11,"try_into","","",4152,[[],["result",4]]],[11,"type_id","","",4152,[[],["typeid",3]]],[11,"from","","",4153,[[]]],[11,"borrow","","",4153,[[]]],[11,"borrow_mut","","",4153,[[]]],[11,"try_from","","",4153,[[],["result",4]]],[11,"into","","",4153,[[]]],[11,"try_into","","",4153,[[],["result",4]]],[11,"type_id","","",4153,[[],["typeid",3]]],[11,"from","","",4154,[[]]],[11,"borrow","","",4154,[[]]],[11,"borrow_mut","","",4154,[[]]],[11,"try_from","","",4154,[[],["result",4]]],[11,"into","","",4154,[[]]],[11,"try_into","","",4154,[[],["result",4]]],[11,"type_id","","",4154,[[],["typeid",3]]],[11,"from","","",4155,[[]]],[11,"borrow","","",4155,[[]]],[11,"borrow_mut","","",4155,[[]]],[11,"try_from","","",4155,[[],["result",4]]],[11,"into","","",4155,[[]]],[11,"try_into","","",4155,[[],["result",4]]],[11,"type_id","","",4155,[[],["typeid",3]]],[11,"from","","",4156,[[]]],[11,"borrow","","",4156,[[]]],[11,"borrow_mut","","",4156,[[]]],[11,"try_from","","",4156,[[],["result",4]]],[11,"into","","",4156,[[]]],[11,"try_into","","",4156,[[],["result",4]]],[11,"type_id","","",4156,[[],["typeid",3]]],[11,"from","","",4157,[[]]],[11,"borrow","","",4157,[[]]],[11,"borrow_mut","","",4157,[[]]],[11,"try_from","","",4157,[[],["result",4]]],[11,"into","","",4157,[[]]],[11,"try_into","","",4157,[[],["result",4]]],[11,"type_id","","",4157,[[],["typeid",3]]],[11,"from","","",4158,[[]]],[11,"borrow","","",4158,[[]]],[11,"borrow_mut","","",4158,[[]]],[11,"try_from","","",4158,[[],["result",4]]],[11,"into","","",4158,[[]]],[11,"try_into","","",4158,[[],["result",4]]],[11,"type_id","","",4158,[[],["typeid",3]]],[11,"from","","",4159,[[]]],[11,"borrow","","",4159,[[]]],[11,"borrow_mut","","",4159,[[]]],[11,"try_from","","",4159,[[],["result",4]]],[11,"into","","",4159,[[]]],[11,"try_into","","",4159,[[],["result",4]]],[11,"type_id","","",4159,[[],["typeid",3]]],[11,"from","","",4160,[[]]],[11,"borrow","","",4160,[[]]],[11,"borrow_mut","","",4160,[[]]],[11,"try_from","","",4160,[[],["result",4]]],[11,"into","","",4160,[[]]],[11,"try_into","","",4160,[[],["result",4]]],[11,"type_id","","",4160,[[],["typeid",3]]],[11,"from","","",4161,[[]]],[11,"borrow","","",4161,[[]]],[11,"borrow_mut","","",4161,[[]]],[11,"try_from","","",4161,[[],["result",4]]],[11,"into","","",4161,[[]]],[11,"try_into","","",4161,[[],["result",4]]],[11,"type_id","","",4161,[[],["typeid",3]]],[11,"from","","",4162,[[]]],[11,"borrow","","",4162,[[]]],[11,"borrow_mut","","",4162,[[]]],[11,"try_from","","",4162,[[],["result",4]]],[11,"into","","",4162,[[]]],[11,"try_into","","",4162,[[],["result",4]]],[11,"type_id","","",4162,[[],["typeid",3]]],[11,"from","","",4163,[[]]],[11,"borrow","","",4163,[[]]],[11,"borrow_mut","","",4163,[[]]],[11,"try_from","","",4163,[[],["result",4]]],[11,"into","","",4163,[[]]],[11,"try_into","","",4163,[[],["result",4]]],[11,"type_id","","",4163,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::count","",4166,[[]]],[11,"borrow","","",4166,[[]]],[11,"borrow_mut","","",4166,[[]]],[11,"try_from","","",4166,[[],["result",4]]],[11,"into","","",4166,[[]]],[11,"try_into","","",4166,[[],["result",4]]],[11,"type_id","","",4166,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::count_dith4_mode","",4169,[[]]],[11,"borrow","","",4169,[[]]],[11,"borrow_mut","","",4169,[[]]],[11,"try_from","","",4169,[[],["result",4]]],[11,"into","","",4169,[[]]],[11,"try_into","","",4169,[[],["result",4]]],[11,"type_id","","",4169,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::count_dith5_mode","",4172,[[]]],[11,"borrow","","",4172,[[]]],[11,"borrow_mut","","",4172,[[]]],[11,"try_from","","",4172,[[],["result",4]]],[11,"into","","",4172,[[]]],[11,"try_into","","",4172,[[],["result",4]]],[11,"type_id","","",4172,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::count_dith6_mode","",4175,[[]]],[11,"borrow","","",4175,[[]]],[11,"borrow_mut","","",4175,[[]]],[11,"try_from","","",4175,[[],["result",4]]],[11,"into","","",4175,[[]]],[11,"try_into","","",4175,[[],["result",4]]],[11,"type_id","","",4175,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::patt","",4178,[[]]],[11,"borrow","","",4178,[[]]],[11,"borrow_mut","","",4178,[[]]],[11,"try_from","","",4178,[[],["result",4]]],[11,"into","","",4178,[[]]],[11,"try_into","","",4178,[[],["result",4]]],[11,"type_id","","",4178,[[],["typeid",3]]],[11,"from","","",4179,[[]]],[11,"borrow","","",4179,[[]]],[11,"borrow_mut","","",4179,[[]]],[11,"try_from","","",4179,[[],["result",4]]],[11,"into","","",4179,[[]]],[11,"try_into","","",4179,[[],["result",4]]],[11,"type_id","","",4179,[[],["typeid",3]]],[11,"from","","",4180,[[]]],[11,"borrow","","",4180,[[]]],[11,"borrow_mut","","",4180,[[]]],[11,"try_from","","",4180,[[],["result",4]]],[11,"into","","",4180,[[]]],[11,"try_into","","",4180,[[],["result",4]]],[11,"type_id","","",4180,[[],["typeid",3]]],[11,"from","","",4181,[[]]],[11,"borrow","","",4181,[[]]],[11,"borrow_mut","","",4181,[[]]],[11,"try_from","","",4181,[[],["result",4]]],[11,"into","","",4181,[[]]],[11,"try_into","","",4181,[[],["result",4]]],[11,"type_id","","",4181,[[],["typeid",3]]],[11,"from","","",4182,[[]]],[11,"borrow","","",4182,[[]]],[11,"borrow_mut","","",4182,[[]]],[11,"try_from","","",4182,[[],["result",4]]],[11,"into","","",4182,[[]]],[11,"try_into","","",4182,[[],["result",4]]],[11,"type_id","","",4182,[[],["typeid",3]]],[11,"from","","",4183,[[]]],[11,"borrow","","",4183,[[]]],[11,"borrow_mut","","",4183,[[]]],[11,"try_from","","",4183,[[],["result",4]]],[11,"into","","",4183,[[]]],[11,"try_into","","",4183,[[],["result",4]]],[11,"type_id","","",4183,[[],["typeid",3]]],[11,"from","","",4184,[[]]],[11,"borrow","","",4184,[[]]],[11,"borrow_mut","","",4184,[[]]],[11,"try_from","","",4184,[[],["result",4]]],[11,"into","","",4184,[[]]],[11,"try_into","","",4184,[[],["result",4]]],[11,"type_id","","",4184,[[],["typeid",3]]],[11,"from","","",4185,[[]]],[11,"borrow","","",4185,[[]]],[11,"borrow_mut","","",4185,[[]]],[11,"try_from","","",4185,[[],["result",4]]],[11,"into","","",4185,[[]]],[11,"try_into","","",4185,[[],["result",4]]],[11,"type_id","","",4185,[[],["typeid",3]]],[11,"from","","",4186,[[]]],[11,"borrow","","",4186,[[]]],[11,"borrow_mut","","",4186,[[]]],[11,"try_from","","",4186,[[],["result",4]]],[11,"into","","",4186,[[]]],[11,"try_into","","",4186,[[],["result",4]]],[11,"type_id","","",4186,[[],["typeid",3]]],[11,"from","","",4187,[[]]],[11,"borrow","","",4187,[[]]],[11,"borrow_mut","","",4187,[[]]],[11,"try_from","","",4187,[[],["result",4]]],[11,"into","","",4187,[[]]],[11,"try_into","","",4187,[[],["result",4]]],[11,"type_id","","",4187,[[],["typeid",3]]],[11,"from","","",4188,[[]]],[11,"borrow","","",4188,[[]]],[11,"borrow_mut","","",4188,[[]]],[11,"try_from","","",4188,[[],["result",4]]],[11,"into","","",4188,[[]]],[11,"try_into","","",4188,[[],["result",4]]],[11,"type_id","","",4188,[[],["typeid",3]]],[11,"from","","",4189,[[]]],[11,"borrow","","",4189,[[]]],[11,"borrow_mut","","",4189,[[]]],[11,"try_from","","",4189,[[],["result",4]]],[11,"into","","",4189,[[]]],[11,"try_into","","",4189,[[],["result",4]]],[11,"type_id","","",4189,[[],["typeid",3]]],[11,"from","","",4190,[[]]],[11,"borrow","","",4190,[[]]],[11,"borrow_mut","","",4190,[[]]],[11,"try_from","","",4190,[[],["result",4]]],[11,"into","","",4190,[[]]],[11,"try_into","","",4190,[[],["result",4]]],[11,"type_id","","",4190,[[],["typeid",3]]],[11,"from","","",4191,[[]]],[11,"borrow","","",4191,[[]]],[11,"borrow_mut","","",4191,[[]]],[11,"try_from","","",4191,[[],["result",4]]],[11,"into","","",4191,[[]]],[11,"try_into","","",4191,[[],["result",4]]],[11,"type_id","","",4191,[[],["typeid",3]]],[11,"from","","",4192,[[]]],[11,"borrow","","",4192,[[]]],[11,"borrow_mut","","",4192,[[]]],[11,"try_from","","",4192,[[],["result",4]]],[11,"into","","",4192,[[]]],[11,"try_into","","",4192,[[],["result",4]]],[11,"type_id","","",4192,[[],["typeid",3]]],[11,"from","","",4193,[[]]],[11,"borrow","","",4193,[[]]],[11,"borrow_mut","","",4193,[[]]],[11,"try_from","","",4193,[[],["result",4]]],[11,"into","","",4193,[[]]],[11,"try_into","","",4193,[[],["result",4]]],[11,"type_id","","",4193,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::wave","",4199,[[]]],[11,"borrow","","",4199,[[]]],[11,"borrow_mut","","",4199,[[]]],[11,"try_from","","",4199,[[],["result",4]]],[11,"into","","",4199,[[]]],[11,"try_into","","",4199,[[],["result",4]]],[11,"type_id","","",4199,[[],["typeid",3]]],[11,"from","","",4201,[[]]],[11,"borrow","","",4201,[[]]],[11,"borrow_mut","","",4201,[[]]],[11,"try_from","","",4201,[[],["result",4]]],[11,"into","","",4201,[[]]],[11,"try_into","","",4201,[[],["result",4]]],[11,"type_id","","",4201,[[],["typeid",3]]],[11,"from","","",4202,[[]]],[11,"borrow","","",4202,[[]]],[11,"borrow_mut","","",4202,[[]]],[11,"try_from","","",4202,[[],["result",4]]],[11,"into","","",4202,[[]]],[11,"try_into","","",4202,[[],["result",4]]],[11,"type_id","","",4202,[[],["typeid",3]]],[11,"from","","",4203,[[]]],[11,"borrow","","",4203,[[]]],[11,"borrow_mut","","",4203,[[]]],[11,"try_from","","",4203,[[],["result",4]]],[11,"into","","",4203,[[]]],[11,"try_into","","",4203,[[],["result",4]]],[11,"type_id","","",4203,[[],["typeid",3]]],[11,"from","","",4204,[[]]],[11,"borrow","","",4204,[[]]],[11,"borrow_mut","","",4204,[[]]],[11,"try_from","","",4204,[[],["result",4]]],[11,"into","","",4204,[[]]],[11,"try_into","","",4204,[[],["result",4]]],[11,"type_id","","",4204,[[],["typeid",3]]],[11,"from","","",4205,[[]]],[11,"borrow","","",4205,[[]]],[11,"borrow_mut","","",4205,[[]]],[11,"try_from","","",4205,[[],["result",4]]],[11,"into","","",4205,[[]]],[11,"try_into","","",4205,[[],["result",4]]],[11,"type_id","","",4205,[[],["typeid",3]]],[11,"from","","",4206,[[]]],[11,"borrow","","",4206,[[]]],[11,"borrow_mut","","",4206,[[]]],[11,"try_from","","",4206,[[],["result",4]]],[11,"into","","",4206,[[]]],[11,"try_into","","",4206,[[],["result",4]]],[11,"type_id","","",4206,[[],["typeid",3]]],[11,"from","","",4207,[[]]],[11,"borrow","","",4207,[[]]],[11,"borrow_mut","","",4207,[[]]],[11,"try_from","","",4207,[[],["result",4]]],[11,"into","","",4207,[[]]],[11,"try_into","","",4207,[[],["result",4]]],[11,"type_id","","",4207,[[],["typeid",3]]],[11,"from","","",4208,[[]]],[11,"borrow","","",4208,[[]]],[11,"borrow_mut","","",4208,[[]]],[11,"try_from","","",4208,[[],["result",4]]],[11,"into","","",4208,[[]]],[11,"try_into","","",4208,[[],["result",4]]],[11,"type_id","","",4208,[[],["typeid",3]]],[11,"from","","",4209,[[]]],[11,"borrow","","",4209,[[]]],[11,"borrow_mut","","",4209,[[]]],[11,"try_from","","",4209,[[],["result",4]]],[11,"into","","",4209,[[]]],[11,"try_into","","",4209,[[],["result",4]]],[11,"type_id","","",4209,[[],["typeid",3]]],[11,"from","","",4210,[[]]],[11,"borrow","","",4210,[[]]],[11,"borrow_mut","","",4210,[[]]],[11,"try_from","","",4210,[[],["result",4]]],[11,"into","","",4210,[[]]],[11,"try_into","","",4210,[[],["result",4]]],[11,"type_id","","",4210,[[],["typeid",3]]],[11,"from","","",4211,[[]]],[11,"borrow","","",4211,[[]]],[11,"borrow_mut","","",4211,[[]]],[11,"try_from","","",4211,[[],["result",4]]],[11,"into","","",4211,[[]]],[11,"try_into","","",4211,[[],["result",4]]],[11,"type_id","","",4211,[[],["typeid",3]]],[11,"from","","",4212,[[]]],[11,"borrow","","",4212,[[]]],[11,"borrow_mut","","",4212,[[]]],[11,"try_from","","",4212,[[],["result",4]]],[11,"into","","",4212,[[]]],[11,"try_into","","",4212,[[],["result",4]]],[11,"type_id","","",4212,[[],["typeid",3]]],[11,"from","","",4213,[[]]],[11,"borrow","","",4213,[[]]],[11,"borrow_mut","","",4213,[[]]],[11,"try_from","","",4213,[[],["result",4]]],[11,"into","","",4213,[[]]],[11,"try_into","","",4213,[[],["result",4]]],[11,"type_id","","",4213,[[],["typeid",3]]],[11,"from","","",4214,[[]]],[11,"borrow","","",4214,[[]]],[11,"borrow_mut","","",4214,[[]]],[11,"try_from","","",4214,[[],["result",4]]],[11,"into","","",4214,[[]]],[11,"try_into","","",4214,[[],["result",4]]],[11,"type_id","","",4214,[[],["typeid",3]]],[11,"from","","",4215,[[]]],[11,"borrow","","",4215,[[]]],[11,"borrow_mut","","",4215,[[]]],[11,"try_from","","",4215,[[],["result",4]]],[11,"into","","",4215,[[]]],[11,"try_into","","",4215,[[],["result",4]]],[11,"type_id","","",4215,[[],["typeid",3]]],[11,"from","","",4216,[[]]],[11,"borrow","","",4216,[[]]],[11,"borrow_mut","","",4216,[[]]],[11,"try_from","","",4216,[[],["result",4]]],[11,"into","","",4216,[[]]],[11,"try_into","","",4216,[[],["result",4]]],[11,"type_id","","",4216,[[],["typeid",3]]],[11,"from","","",4196,[[]]],[11,"borrow","","",4196,[[]]],[11,"borrow_mut","","",4196,[[]]],[11,"try_from","","",4196,[[],["result",4]]],[11,"into","","",4196,[[]]],[11,"try_into","","",4196,[[],["result",4]]],[11,"type_id","","",4196,[[],["typeid",3]]],[11,"from","","",4197,[[]]],[11,"borrow","","",4197,[[]]],[11,"borrow_mut","","",4197,[[]]],[11,"try_from","","",4197,[[],["result",4]]],[11,"into","","",4197,[[]]],[11,"try_into","","",4197,[[],["result",4]]],[11,"type_id","","",4197,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::per","",4219,[[]]],[11,"borrow","","",4219,[[]]],[11,"borrow_mut","","",4219,[[]]],[11,"try_from","","",4219,[[],["result",4]]],[11,"into","","",4219,[[]]],[11,"try_into","","",4219,[[],["result",4]]],[11,"type_id","","",4219,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::per_dith4_mode","",4222,[[]]],[11,"borrow","","",4222,[[]]],[11,"borrow_mut","","",4222,[[]]],[11,"try_from","","",4222,[[],["result",4]]],[11,"into","","",4222,[[]]],[11,"try_into","","",4222,[[],["result",4]]],[11,"type_id","","",4222,[[],["typeid",3]]],[11,"from","","",4223,[[]]],[11,"borrow","","",4223,[[]]],[11,"borrow_mut","","",4223,[[]]],[11,"try_from","","",4223,[[],["result",4]]],[11,"into","","",4223,[[]]],[11,"try_into","","",4223,[[],["result",4]]],[11,"type_id","","",4223,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::per_dith5_mode","",4226,[[]]],[11,"borrow","","",4226,[[]]],[11,"borrow_mut","","",4226,[[]]],[11,"try_from","","",4226,[[],["result",4]]],[11,"into","","",4226,[[]]],[11,"try_into","","",4226,[[],["result",4]]],[11,"type_id","","",4226,[[],["typeid",3]]],[11,"from","","",4227,[[]]],[11,"borrow","","",4227,[[]]],[11,"borrow_mut","","",4227,[[]]],[11,"try_from","","",4227,[[],["result",4]]],[11,"into","","",4227,[[]]],[11,"try_into","","",4227,[[],["result",4]]],[11,"type_id","","",4227,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::per_dith6_mode","",4230,[[]]],[11,"borrow","","",4230,[[]]],[11,"borrow_mut","","",4230,[[]]],[11,"try_from","","",4230,[[],["result",4]]],[11,"into","","",4230,[[]]],[11,"try_into","","",4230,[[],["result",4]]],[11,"type_id","","",4230,[[],["typeid",3]]],[11,"from","","",4231,[[]]],[11,"borrow","","",4231,[[]]],[11,"borrow_mut","","",4231,[[]]],[11,"try_from","","",4231,[[],["result",4]]],[11,"into","","",4231,[[]]],[11,"try_into","","",4231,[[],["result",4]]],[11,"type_id","","",4231,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::cc","",4234,[[]]],[11,"borrow","","",4234,[[]]],[11,"borrow_mut","","",4234,[[]]],[11,"try_from","","",4234,[[],["result",4]]],[11,"into","","",4234,[[]]],[11,"try_into","","",4234,[[],["result",4]]],[11,"type_id","","",4234,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::cc_dith4_mode","",4237,[[]]],[11,"borrow","","",4237,[[]]],[11,"borrow_mut","","",4237,[[]]],[11,"try_from","","",4237,[[],["result",4]]],[11,"into","","",4237,[[]]],[11,"try_into","","",4237,[[],["result",4]]],[11,"type_id","","",4237,[[],["typeid",3]]],[11,"from","","",4238,[[]]],[11,"borrow","","",4238,[[]]],[11,"borrow_mut","","",4238,[[]]],[11,"try_from","","",4238,[[],["result",4]]],[11,"into","","",4238,[[]]],[11,"try_into","","",4238,[[],["result",4]]],[11,"type_id","","",4238,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::cc_dith5_mode","",4241,[[]]],[11,"borrow","","",4241,[[]]],[11,"borrow_mut","","",4241,[[]]],[11,"try_from","","",4241,[[],["result",4]]],[11,"into","","",4241,[[]]],[11,"try_into","","",4241,[[],["result",4]]],[11,"type_id","","",4241,[[],["typeid",3]]],[11,"from","","",4242,[[]]],[11,"borrow","","",4242,[[]]],[11,"borrow_mut","","",4242,[[]]],[11,"try_from","","",4242,[[],["result",4]]],[11,"into","","",4242,[[]]],[11,"try_into","","",4242,[[],["result",4]]],[11,"type_id","","",4242,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::cc_dith6_mode","",4245,[[]]],[11,"borrow","","",4245,[[]]],[11,"borrow_mut","","",4245,[[]]],[11,"try_from","","",4245,[[],["result",4]]],[11,"into","","",4245,[[]]],[11,"try_into","","",4245,[[],["result",4]]],[11,"type_id","","",4245,[[],["typeid",3]]],[11,"from","","",4246,[[]]],[11,"borrow","","",4246,[[]]],[11,"borrow_mut","","",4246,[[]]],[11,"try_from","","",4246,[[],["result",4]]],[11,"into","","",4246,[[]]],[11,"try_into","","",4246,[[],["result",4]]],[11,"type_id","","",4246,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::pattbuf","",4249,[[]]],[11,"borrow","","",4249,[[]]],[11,"borrow_mut","","",4249,[[]]],[11,"try_from","","",4249,[[],["result",4]]],[11,"into","","",4249,[[]]],[11,"try_into","","",4249,[[],["result",4]]],[11,"type_id","","",4249,[[],["typeid",3]]],[11,"from","","",4250,[[]]],[11,"borrow","","",4250,[[]]],[11,"borrow_mut","","",4250,[[]]],[11,"try_from","","",4250,[[],["result",4]]],[11,"into","","",4250,[[]]],[11,"try_into","","",4250,[[],["result",4]]],[11,"type_id","","",4250,[[],["typeid",3]]],[11,"from","","",4251,[[]]],[11,"borrow","","",4251,[[]]],[11,"borrow_mut","","",4251,[[]]],[11,"try_from","","",4251,[[],["result",4]]],[11,"into","","",4251,[[]]],[11,"try_into","","",4251,[[],["result",4]]],[11,"type_id","","",4251,[[],["typeid",3]]],[11,"from","","",4252,[[]]],[11,"borrow","","",4252,[[]]],[11,"borrow_mut","","",4252,[[]]],[11,"try_from","","",4252,[[],["result",4]]],[11,"into","","",4252,[[]]],[11,"try_into","","",4252,[[],["result",4]]],[11,"type_id","","",4252,[[],["typeid",3]]],[11,"from","","",4253,[[]]],[11,"borrow","","",4253,[[]]],[11,"borrow_mut","","",4253,[[]]],[11,"try_from","","",4253,[[],["result",4]]],[11,"into","","",4253,[[]]],[11,"try_into","","",4253,[[],["result",4]]],[11,"type_id","","",4253,[[],["typeid",3]]],[11,"from","","",4254,[[]]],[11,"borrow","","",4254,[[]]],[11,"borrow_mut","","",4254,[[]]],[11,"try_from","","",4254,[[],["result",4]]],[11,"into","","",4254,[[]]],[11,"try_into","","",4254,[[],["result",4]]],[11,"type_id","","",4254,[[],["typeid",3]]],[11,"from","","",4255,[[]]],[11,"borrow","","",4255,[[]]],[11,"borrow_mut","","",4255,[[]]],[11,"try_from","","",4255,[[],["result",4]]],[11,"into","","",4255,[[]]],[11,"try_into","","",4255,[[],["result",4]]],[11,"type_id","","",4255,[[],["typeid",3]]],[11,"from","","",4256,[[]]],[11,"borrow","","",4256,[[]]],[11,"borrow_mut","","",4256,[[]]],[11,"try_from","","",4256,[[],["result",4]]],[11,"into","","",4256,[[]]],[11,"try_into","","",4256,[[],["result",4]]],[11,"type_id","","",4256,[[],["typeid",3]]],[11,"from","","",4257,[[]]],[11,"borrow","","",4257,[[]]],[11,"borrow_mut","","",4257,[[]]],[11,"try_from","","",4257,[[],["result",4]]],[11,"into","","",4257,[[]]],[11,"try_into","","",4257,[[],["result",4]]],[11,"type_id","","",4257,[[],["typeid",3]]],[11,"from","","",4258,[[]]],[11,"borrow","","",4258,[[]]],[11,"borrow_mut","","",4258,[[]]],[11,"try_from","","",4258,[[],["result",4]]],[11,"into","","",4258,[[]]],[11,"try_into","","",4258,[[],["result",4]]],[11,"type_id","","",4258,[[],["typeid",3]]],[11,"from","","",4259,[[]]],[11,"borrow","","",4259,[[]]],[11,"borrow_mut","","",4259,[[]]],[11,"try_from","","",4259,[[],["result",4]]],[11,"into","","",4259,[[]]],[11,"try_into","","",4259,[[],["result",4]]],[11,"type_id","","",4259,[[],["typeid",3]]],[11,"from","","",4260,[[]]],[11,"borrow","","",4260,[[]]],[11,"borrow_mut","","",4260,[[]]],[11,"try_from","","",4260,[[],["result",4]]],[11,"into","","",4260,[[]]],[11,"try_into","","",4260,[[],["result",4]]],[11,"type_id","","",4260,[[],["typeid",3]]],[11,"from","","",4261,[[]]],[11,"borrow","","",4261,[[]]],[11,"borrow_mut","","",4261,[[]]],[11,"try_from","","",4261,[[],["result",4]]],[11,"into","","",4261,[[]]],[11,"try_into","","",4261,[[],["result",4]]],[11,"type_id","","",4261,[[],["typeid",3]]],[11,"from","","",4262,[[]]],[11,"borrow","","",4262,[[]]],[11,"borrow_mut","","",4262,[[]]],[11,"try_from","","",4262,[[],["result",4]]],[11,"into","","",4262,[[]]],[11,"try_into","","",4262,[[],["result",4]]],[11,"type_id","","",4262,[[],["typeid",3]]],[11,"from","","",4263,[[]]],[11,"borrow","","",4263,[[]]],[11,"borrow_mut","","",4263,[[]]],[11,"try_from","","",4263,[[],["result",4]]],[11,"into","","",4263,[[]]],[11,"try_into","","",4263,[[],["result",4]]],[11,"type_id","","",4263,[[],["typeid",3]]],[11,"from","","",4264,[[]]],[11,"borrow","","",4264,[[]]],[11,"borrow_mut","","",4264,[[]]],[11,"try_from","","",4264,[[],["result",4]]],[11,"into","","",4264,[[]]],[11,"try_into","","",4264,[[],["result",4]]],[11,"type_id","","",4264,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::perbuf","",4267,[[]]],[11,"borrow","","",4267,[[]]],[11,"borrow_mut","","",4267,[[]]],[11,"try_from","","",4267,[[],["result",4]]],[11,"into","","",4267,[[]]],[11,"try_into","","",4267,[[],["result",4]]],[11,"type_id","","",4267,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::perbuf_dith4_mode","",4270,[[]]],[11,"borrow","","",4270,[[]]],[11,"borrow_mut","","",4270,[[]]],[11,"try_from","","",4270,[[],["result",4]]],[11,"into","","",4270,[[]]],[11,"try_into","","",4270,[[],["result",4]]],[11,"type_id","","",4270,[[],["typeid",3]]],[11,"from","","",4271,[[]]],[11,"borrow","","",4271,[[]]],[11,"borrow_mut","","",4271,[[]]],[11,"try_from","","",4271,[[],["result",4]]],[11,"into","","",4271,[[]]],[11,"try_into","","",4271,[[],["result",4]]],[11,"type_id","","",4271,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::perbuf_dith5_mode","",4274,[[]]],[11,"borrow","","",4274,[[]]],[11,"borrow_mut","","",4274,[[]]],[11,"try_from","","",4274,[[],["result",4]]],[11,"into","","",4274,[[]]],[11,"try_into","","",4274,[[],["result",4]]],[11,"type_id","","",4274,[[],["typeid",3]]],[11,"from","","",4275,[[]]],[11,"borrow","","",4275,[[]]],[11,"borrow_mut","","",4275,[[]]],[11,"try_from","","",4275,[[],["result",4]]],[11,"into","","",4275,[[]]],[11,"try_into","","",4275,[[],["result",4]]],[11,"type_id","","",4275,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::perbuf_dith6_mode","",4278,[[]]],[11,"borrow","","",4278,[[]]],[11,"borrow_mut","","",4278,[[]]],[11,"try_from","","",4278,[[],["result",4]]],[11,"into","","",4278,[[]]],[11,"try_into","","",4278,[[],["result",4]]],[11,"type_id","","",4278,[[],["typeid",3]]],[11,"from","","",4279,[[]]],[11,"borrow","","",4279,[[]]],[11,"borrow_mut","","",4279,[[]]],[11,"try_from","","",4279,[[],["result",4]]],[11,"into","","",4279,[[]]],[11,"try_into","","",4279,[[],["result",4]]],[11,"type_id","","",4279,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ccbuf","",4282,[[]]],[11,"borrow","","",4282,[[]]],[11,"borrow_mut","","",4282,[[]]],[11,"try_from","","",4282,[[],["result",4]]],[11,"into","","",4282,[[]]],[11,"try_into","","",4282,[[],["result",4]]],[11,"type_id","","",4282,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ccbuf_dith4_mode","",4285,[[]]],[11,"borrow","","",4285,[[]]],[11,"borrow_mut","","",4285,[[]]],[11,"try_from","","",4285,[[],["result",4]]],[11,"into","","",4285,[[]]],[11,"try_into","","",4285,[[],["result",4]]],[11,"type_id","","",4285,[[],["typeid",3]]],[11,"from","","",4286,[[]]],[11,"borrow","","",4286,[[]]],[11,"borrow_mut","","",4286,[[]]],[11,"try_from","","",4286,[[],["result",4]]],[11,"into","","",4286,[[]]],[11,"try_into","","",4286,[[],["result",4]]],[11,"type_id","","",4286,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ccbuf_dith5_mode","",4289,[[]]],[11,"borrow","","",4289,[[]]],[11,"borrow_mut","","",4289,[[]]],[11,"try_from","","",4289,[[],["result",4]]],[11,"into","","",4289,[[]]],[11,"try_into","","",4289,[[],["result",4]]],[11,"type_id","","",4289,[[],["typeid",3]]],[11,"from","","",4290,[[]]],[11,"borrow","","",4290,[[]]],[11,"borrow_mut","","",4290,[[]]],[11,"try_from","","",4290,[[],["result",4]]],[11,"into","","",4290,[[]]],[11,"try_into","","",4290,[[],["result",4]]],[11,"type_id","","",4290,[[],["typeid",3]]],[11,"from","atsamd51g::tcc0::ccbuf_dith6_mode","",4293,[[]]],[11,"borrow","","",4293,[[]]],[11,"borrow_mut","","",4293,[[]]],[11,"try_from","","",4293,[[],["result",4]]],[11,"into","","",4293,[[]]],[11,"try_into","","",4293,[[],["result",4]]],[11,"type_id","","",4293,[[],["typeid",3]]],[11,"from","","",4294,[[]]],[11,"borrow","","",4294,[[]]],[11,"borrow_mut","","",4294,[[]]],[11,"try_from","","",4294,[[],["result",4]]],[11,"into","","",4294,[[]]],[11,"try_into","","",4294,[[],["result",4]]],[11,"type_id","","",4294,[[],["typeid",3]]],[11,"from","atsamd51g::trng","",4297,[[]]],[11,"borrow","","",4297,[[]]],[11,"borrow_mut","","",4297,[[]]],[11,"try_from","","",4297,[[],["result",4]]],[11,"into","","",4297,[[]]],[11,"try_into","","",4297,[[],["result",4]]],[11,"type_id","","",4297,[[],["typeid",3]]],[11,"from","atsamd51g::trng::ctrla","",4298,[[]]],[11,"borrow","","",4298,[[]]],[11,"borrow_mut","","",4298,[[]]],[11,"try_from","","",4298,[[],["result",4]]],[11,"into","","",4298,[[]]],[11,"try_into","","",4298,[[],["result",4]]],[11,"type_id","","",4298,[[],["typeid",3]]],[11,"from","","",4299,[[]]],[11,"borrow","","",4299,[[]]],[11,"borrow_mut","","",4299,[[]]],[11,"try_from","","",4299,[[],["result",4]]],[11,"into","","",4299,[[]]],[11,"try_into","","",4299,[[],["result",4]]],[11,"type_id","","",4299,[[],["typeid",3]]],[11,"from","atsamd51g::trng::evctrl","",4302,[[]]],[11,"borrow","","",4302,[[]]],[11,"borrow_mut","","",4302,[[]]],[11,"try_from","","",4302,[[],["result",4]]],[11,"into","","",4302,[[]]],[11,"try_into","","",4302,[[],["result",4]]],[11,"type_id","","",4302,[[],["typeid",3]]],[11,"from","atsamd51g::trng::intenclr","",4305,[[]]],[11,"borrow","","",4305,[[]]],[11,"borrow_mut","","",4305,[[]]],[11,"try_from","","",4305,[[],["result",4]]],[11,"into","","",4305,[[]]],[11,"try_into","","",4305,[[],["result",4]]],[11,"type_id","","",4305,[[],["typeid",3]]],[11,"from","atsamd51g::trng::intenset","",4308,[[]]],[11,"borrow","","",4308,[[]]],[11,"borrow_mut","","",4308,[[]]],[11,"try_from","","",4308,[[],["result",4]]],[11,"into","","",4308,[[]]],[11,"try_into","","",4308,[[],["result",4]]],[11,"type_id","","",4308,[[],["typeid",3]]],[11,"from","atsamd51g::trng::intflag","",4311,[[]]],[11,"borrow","","",4311,[[]]],[11,"borrow_mut","","",4311,[[]]],[11,"try_from","","",4311,[[],["result",4]]],[11,"into","","",4311,[[]]],[11,"try_into","","",4311,[[],["result",4]]],[11,"type_id","","",4311,[[],["typeid",3]]],[11,"from","atsamd51g::usb","",4581,[[]]],[11,"borrow","","",4581,[[]]],[11,"borrow_mut","","",4581,[[]]],[11,"try_from","","",4581,[[],["result",4]]],[11,"into","","",4581,[[]]],[11,"try_into","","",4581,[[],["result",4]]],[11,"type_id","","",4581,[[],["typeid",3]]],[11,"from","","",4315,[[]]],[11,"borrow","","",4315,[[]]],[11,"borrow_mut","","",4315,[[]]],[11,"try_from","","",4315,[[],["result",4]]],[11,"into","","",4315,[[]]],[11,"try_into","","",4315,[[],["result",4]]],[11,"type_id","","",4315,[[],["typeid",3]]],[11,"from","","",4316,[[]]],[11,"borrow","","",4316,[[]]],[11,"borrow_mut","","",4316,[[]]],[11,"try_from","","",4316,[[],["result",4]]],[11,"into","","",4316,[[]]],[11,"try_into","","",4316,[[],["result",4]]],[11,"type_id","","",4316,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device","",4317,[[]]],[11,"borrow","","",4317,[[]]],[11,"borrow_mut","","",4317,[[]]],[11,"try_from","","",4317,[[],["result",4]]],[11,"into","","",4317,[[]]],[11,"try_into","","",4317,[[],["result",4]]],[11,"type_id","","",4317,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::ctrla","",4319,[[]]],[11,"borrow","","",4319,[[]]],[11,"borrow_mut","","",4319,[[]]],[11,"try_from","","",4319,[[],["result",4]]],[11,"into","","",4319,[[]]],[11,"try_into","","",4319,[[],["result",4]]],[11,"type_id","","",4319,[[],["typeid",3]]],[11,"from","","",4320,[[]]],[11,"borrow","","",4320,[[]]],[11,"borrow_mut","","",4320,[[]]],[11,"try_from","","",4320,[[],["result",4]]],[11,"into","","",4320,[[]]],[11,"try_into","","",4320,[[],["result",4]]],[11,"type_id","","",4320,[[],["typeid",3]]],[11,"from","","",4321,[[]]],[11,"borrow","","",4321,[[]]],[11,"borrow_mut","","",4321,[[]]],[11,"try_from","","",4321,[[],["result",4]]],[11,"into","","",4321,[[]]],[11,"try_into","","",4321,[[],["result",4]]],[11,"type_id","","",4321,[[],["typeid",3]]],[11,"from","","",4323,[[]]],[11,"borrow","","",4323,[[]]],[11,"borrow_mut","","",4323,[[]]],[11,"try_from","","",4323,[[],["result",4]]],[11,"into","","",4323,[[]]],[11,"try_into","","",4323,[[],["result",4]]],[11,"type_id","","",4323,[[],["typeid",3]]],[11,"from","","",4318,[[]]],[11,"borrow","","",4318,[[]]],[11,"borrow_mut","","",4318,[[]]],[11,"try_from","","",4318,[[],["result",4]]],[11,"into","","",4318,[[]]],[11,"try_into","","",4318,[[],["result",4]]],[11,"type_id","","",4318,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::qosctrl","",4327,[[]]],[11,"borrow","","",4327,[[]]],[11,"borrow_mut","","",4327,[[]]],[11,"try_from","","",4327,[[],["result",4]]],[11,"into","","",4327,[[]]],[11,"try_into","","",4327,[[],["result",4]]],[11,"type_id","","",4327,[[],["typeid",3]]],[11,"from","","",4328,[[]]],[11,"borrow","","",4328,[[]]],[11,"borrow_mut","","",4328,[[]]],[11,"try_from","","",4328,[[],["result",4]]],[11,"into","","",4328,[[]]],[11,"try_into","","",4328,[[],["result",4]]],[11,"type_id","","",4328,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::ctrlb","",4333,[[]]],[11,"borrow","","",4333,[[]]],[11,"borrow_mut","","",4333,[[]]],[11,"try_from","","",4333,[[],["result",4]]],[11,"into","","",4333,[[]]],[11,"try_into","","",4333,[[],["result",4]]],[11,"type_id","","",4333,[[],["typeid",3]]],[11,"from","","",4334,[[]]],[11,"borrow","","",4334,[[]]],[11,"borrow_mut","","",4334,[[]]],[11,"try_from","","",4334,[[],["result",4]]],[11,"into","","",4334,[[]]],[11,"try_into","","",4334,[[],["result",4]]],[11,"type_id","","",4334,[[],["typeid",3]]],[11,"from","","",4336,[[]]],[11,"borrow","","",4336,[[]]],[11,"borrow_mut","","",4336,[[]]],[11,"try_from","","",4336,[[],["result",4]]],[11,"into","","",4336,[[]]],[11,"try_into","","",4336,[[],["result",4]]],[11,"type_id","","",4336,[[],["typeid",3]]],[11,"from","","",4337,[[]]],[11,"borrow","","",4337,[[]]],[11,"borrow_mut","","",4337,[[]]],[11,"try_from","","",4337,[[],["result",4]]],[11,"into","","",4337,[[]]],[11,"try_into","","",4337,[[],["result",4]]],[11,"type_id","","",4337,[[],["typeid",3]]],[11,"from","","",4338,[[]]],[11,"borrow","","",4338,[[]]],[11,"borrow_mut","","",4338,[[]]],[11,"try_from","","",4338,[[],["result",4]]],[11,"into","","",4338,[[]]],[11,"try_into","","",4338,[[],["result",4]]],[11,"type_id","","",4338,[[],["typeid",3]]],[11,"from","","",4339,[[]]],[11,"borrow","","",4339,[[]]],[11,"borrow_mut","","",4339,[[]]],[11,"try_from","","",4339,[[],["result",4]]],[11,"into","","",4339,[[]]],[11,"try_into","","",4339,[[],["result",4]]],[11,"type_id","","",4339,[[],["typeid",3]]],[11,"from","","",4340,[[]]],[11,"borrow","","",4340,[[]]],[11,"borrow_mut","","",4340,[[]]],[11,"try_from","","",4340,[[],["result",4]]],[11,"into","","",4340,[[]]],[11,"try_into","","",4340,[[],["result",4]]],[11,"type_id","","",4340,[[],["typeid",3]]],[11,"from","","",4341,[[]]],[11,"borrow","","",4341,[[]]],[11,"borrow_mut","","",4341,[[]]],[11,"try_from","","",4341,[[],["result",4]]],[11,"into","","",4341,[[]]],[11,"try_into","","",4341,[[],["result",4]]],[11,"type_id","","",4341,[[],["typeid",3]]],[11,"from","","",4342,[[]]],[11,"borrow","","",4342,[[]]],[11,"borrow_mut","","",4342,[[]]],[11,"try_from","","",4342,[[],["result",4]]],[11,"into","","",4342,[[]]],[11,"try_into","","",4342,[[],["result",4]]],[11,"type_id","","",4342,[[],["typeid",3]]],[11,"from","","",4344,[[]]],[11,"borrow","","",4344,[[]]],[11,"borrow_mut","","",4344,[[]]],[11,"try_from","","",4344,[[],["result",4]]],[11,"into","","",4344,[[]]],[11,"try_into","","",4344,[[],["result",4]]],[11,"type_id","","",4344,[[],["typeid",3]]],[11,"from","","",4331,[[]]],[11,"borrow","","",4331,[[]]],[11,"borrow_mut","","",4331,[[]]],[11,"try_from","","",4331,[[],["result",4]]],[11,"into","","",4331,[[]]],[11,"try_into","","",4331,[[],["result",4]]],[11,"type_id","","",4331,[[],["typeid",3]]],[11,"from","","",4332,[[]]],[11,"borrow","","",4332,[[]]],[11,"borrow_mut","","",4332,[[]]],[11,"try_from","","",4332,[[],["result",4]]],[11,"into","","",4332,[[]]],[11,"try_into","","",4332,[[],["result",4]]],[11,"type_id","","",4332,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::dadd","",4347,[[]]],[11,"borrow","","",4347,[[]]],[11,"borrow_mut","","",4347,[[]]],[11,"try_from","","",4347,[[],["result",4]]],[11,"into","","",4347,[[]]],[11,"try_into","","",4347,[[],["result",4]]],[11,"type_id","","",4347,[[],["typeid",3]]],[11,"from","","",4348,[[]]],[11,"borrow","","",4348,[[]]],[11,"borrow_mut","","",4348,[[]]],[11,"try_from","","",4348,[[],["result",4]]],[11,"into","","",4348,[[]]],[11,"try_into","","",4348,[[],["result",4]]],[11,"type_id","","",4348,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::status","",4351,[[]]],[11,"borrow","","",4351,[[]]],[11,"borrow_mut","","",4351,[[]]],[11,"try_from","","",4351,[[],["result",4]]],[11,"into","","",4351,[[]]],[11,"try_into","","",4351,[[],["result",4]]],[11,"type_id","","",4351,[[],["typeid",3]]],[11,"from","","",4352,[[]]],[11,"borrow","","",4352,[[]]],[11,"borrow_mut","","",4352,[[]]],[11,"try_from","","",4352,[[],["result",4]]],[11,"into","","",4352,[[]]],[11,"try_into","","",4352,[[],["result",4]]],[11,"type_id","","",4352,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::fsmstatus","",4356,[[]]],[11,"borrow","","",4356,[[]]],[11,"borrow_mut","","",4356,[[]]],[11,"try_from","","",4356,[[],["result",4]]],[11,"into","","",4356,[[]]],[11,"try_into","","",4356,[[],["result",4]]],[11,"type_id","","",4356,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::intenclr","",4360,[[]]],[11,"borrow","","",4360,[[]]],[11,"borrow_mut","","",4360,[[]]],[11,"try_from","","",4360,[[],["result",4]]],[11,"into","","",4360,[[]]],[11,"try_into","","",4360,[[],["result",4]]],[11,"type_id","","",4360,[[],["typeid",3]]],[11,"from","","",4361,[[]]],[11,"borrow","","",4361,[[]]],[11,"borrow_mut","","",4361,[[]]],[11,"try_from","","",4361,[[],["result",4]]],[11,"into","","",4361,[[]]],[11,"try_into","","",4361,[[],["result",4]]],[11,"type_id","","",4361,[[],["typeid",3]]],[11,"from","","",4362,[[]]],[11,"borrow","","",4362,[[]]],[11,"borrow_mut","","",4362,[[]]],[11,"try_from","","",4362,[[],["result",4]]],[11,"into","","",4362,[[]]],[11,"try_into","","",4362,[[],["result",4]]],[11,"type_id","","",4362,[[],["typeid",3]]],[11,"from","","",4363,[[]]],[11,"borrow","","",4363,[[]]],[11,"borrow_mut","","",4363,[[]]],[11,"try_from","","",4363,[[],["result",4]]],[11,"into","","",4363,[[]]],[11,"try_into","","",4363,[[],["result",4]]],[11,"type_id","","",4363,[[],["typeid",3]]],[11,"from","","",4364,[[]]],[11,"borrow","","",4364,[[]]],[11,"borrow_mut","","",4364,[[]]],[11,"try_from","","",4364,[[],["result",4]]],[11,"into","","",4364,[[]]],[11,"try_into","","",4364,[[],["result",4]]],[11,"type_id","","",4364,[[],["typeid",3]]],[11,"from","","",4365,[[]]],[11,"borrow","","",4365,[[]]],[11,"borrow_mut","","",4365,[[]]],[11,"try_from","","",4365,[[],["result",4]]],[11,"into","","",4365,[[]]],[11,"try_into","","",4365,[[],["result",4]]],[11,"type_id","","",4365,[[],["typeid",3]]],[11,"from","","",4366,[[]]],[11,"borrow","","",4366,[[]]],[11,"borrow_mut","","",4366,[[]]],[11,"try_from","","",4366,[[],["result",4]]],[11,"into","","",4366,[[]]],[11,"try_into","","",4366,[[],["result",4]]],[11,"type_id","","",4366,[[],["typeid",3]]],[11,"from","","",4367,[[]]],[11,"borrow","","",4367,[[]]],[11,"borrow_mut","","",4367,[[]]],[11,"try_from","","",4367,[[],["result",4]]],[11,"into","","",4367,[[]]],[11,"try_into","","",4367,[[],["result",4]]],[11,"type_id","","",4367,[[],["typeid",3]]],[11,"from","","",4368,[[]]],[11,"borrow","","",4368,[[]]],[11,"borrow_mut","","",4368,[[]]],[11,"try_from","","",4368,[[],["result",4]]],[11,"into","","",4368,[[]]],[11,"try_into","","",4368,[[],["result",4]]],[11,"type_id","","",4368,[[],["typeid",3]]],[11,"from","","",4369,[[]]],[11,"borrow","","",4369,[[]]],[11,"borrow_mut","","",4369,[[]]],[11,"try_from","","",4369,[[],["result",4]]],[11,"into","","",4369,[[]]],[11,"try_into","","",4369,[[],["result",4]]],[11,"type_id","","",4369,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::intenset","",4372,[[]]],[11,"borrow","","",4372,[[]]],[11,"borrow_mut","","",4372,[[]]],[11,"try_from","","",4372,[[],["result",4]]],[11,"into","","",4372,[[]]],[11,"try_into","","",4372,[[],["result",4]]],[11,"type_id","","",4372,[[],["typeid",3]]],[11,"from","","",4373,[[]]],[11,"borrow","","",4373,[[]]],[11,"borrow_mut","","",4373,[[]]],[11,"try_from","","",4373,[[],["result",4]]],[11,"into","","",4373,[[]]],[11,"try_into","","",4373,[[],["result",4]]],[11,"type_id","","",4373,[[],["typeid",3]]],[11,"from","","",4374,[[]]],[11,"borrow","","",4374,[[]]],[11,"borrow_mut","","",4374,[[]]],[11,"try_from","","",4374,[[],["result",4]]],[11,"into","","",4374,[[]]],[11,"try_into","","",4374,[[],["result",4]]],[11,"type_id","","",4374,[[],["typeid",3]]],[11,"from","","",4375,[[]]],[11,"borrow","","",4375,[[]]],[11,"borrow_mut","","",4375,[[]]],[11,"try_from","","",4375,[[],["result",4]]],[11,"into","","",4375,[[]]],[11,"try_into","","",4375,[[],["result",4]]],[11,"type_id","","",4375,[[],["typeid",3]]],[11,"from","","",4376,[[]]],[11,"borrow","","",4376,[[]]],[11,"borrow_mut","","",4376,[[]]],[11,"try_from","","",4376,[[],["result",4]]],[11,"into","","",4376,[[]]],[11,"try_into","","",4376,[[],["result",4]]],[11,"type_id","","",4376,[[],["typeid",3]]],[11,"from","","",4377,[[]]],[11,"borrow","","",4377,[[]]],[11,"borrow_mut","","",4377,[[]]],[11,"try_from","","",4377,[[],["result",4]]],[11,"into","","",4377,[[]]],[11,"try_into","","",4377,[[],["result",4]]],[11,"type_id","","",4377,[[],["typeid",3]]],[11,"from","","",4378,[[]]],[11,"borrow","","",4378,[[]]],[11,"borrow_mut","","",4378,[[]]],[11,"try_from","","",4378,[[],["result",4]]],[11,"into","","",4378,[[]]],[11,"try_into","","",4378,[[],["result",4]]],[11,"type_id","","",4378,[[],["typeid",3]]],[11,"from","","",4379,[[]]],[11,"borrow","","",4379,[[]]],[11,"borrow_mut","","",4379,[[]]],[11,"try_from","","",4379,[[],["result",4]]],[11,"into","","",4379,[[]]],[11,"try_into","","",4379,[[],["result",4]]],[11,"type_id","","",4379,[[],["typeid",3]]],[11,"from","","",4380,[[]]],[11,"borrow","","",4380,[[]]],[11,"borrow_mut","","",4380,[[]]],[11,"try_from","","",4380,[[],["result",4]]],[11,"into","","",4380,[[]]],[11,"try_into","","",4380,[[],["result",4]]],[11,"type_id","","",4380,[[],["typeid",3]]],[11,"from","","",4381,[[]]],[11,"borrow","","",4381,[[]]],[11,"borrow_mut","","",4381,[[]]],[11,"try_from","","",4381,[[],["result",4]]],[11,"into","","",4381,[[]]],[11,"try_into","","",4381,[[],["result",4]]],[11,"type_id","","",4381,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::intflag","",4384,[[]]],[11,"borrow","","",4384,[[]]],[11,"borrow_mut","","",4384,[[]]],[11,"try_from","","",4384,[[],["result",4]]],[11,"into","","",4384,[[]]],[11,"try_into","","",4384,[[],["result",4]]],[11,"type_id","","",4384,[[],["typeid",3]]],[11,"from","","",4385,[[]]],[11,"borrow","","",4385,[[]]],[11,"borrow_mut","","",4385,[[]]],[11,"try_from","","",4385,[[],["result",4]]],[11,"into","","",4385,[[]]],[11,"try_into","","",4385,[[],["result",4]]],[11,"type_id","","",4385,[[],["typeid",3]]],[11,"from","","",4386,[[]]],[11,"borrow","","",4386,[[]]],[11,"borrow_mut","","",4386,[[]]],[11,"try_from","","",4386,[[],["result",4]]],[11,"into","","",4386,[[]]],[11,"try_into","","",4386,[[],["result",4]]],[11,"type_id","","",4386,[[],["typeid",3]]],[11,"from","","",4387,[[]]],[11,"borrow","","",4387,[[]]],[11,"borrow_mut","","",4387,[[]]],[11,"try_from","","",4387,[[],["result",4]]],[11,"into","","",4387,[[]]],[11,"try_into","","",4387,[[],["result",4]]],[11,"type_id","","",4387,[[],["typeid",3]]],[11,"from","","",4388,[[]]],[11,"borrow","","",4388,[[]]],[11,"borrow_mut","","",4388,[[]]],[11,"try_from","","",4388,[[],["result",4]]],[11,"into","","",4388,[[]]],[11,"try_into","","",4388,[[],["result",4]]],[11,"type_id","","",4388,[[],["typeid",3]]],[11,"from","","",4389,[[]]],[11,"borrow","","",4389,[[]]],[11,"borrow_mut","","",4389,[[]]],[11,"try_from","","",4389,[[],["result",4]]],[11,"into","","",4389,[[]]],[11,"try_into","","",4389,[[],["result",4]]],[11,"type_id","","",4389,[[],["typeid",3]]],[11,"from","","",4390,[[]]],[11,"borrow","","",4390,[[]]],[11,"borrow_mut","","",4390,[[]]],[11,"try_from","","",4390,[[],["result",4]]],[11,"into","","",4390,[[]]],[11,"try_into","","",4390,[[],["result",4]]],[11,"type_id","","",4390,[[],["typeid",3]]],[11,"from","","",4391,[[]]],[11,"borrow","","",4391,[[]]],[11,"borrow_mut","","",4391,[[]]],[11,"try_from","","",4391,[[],["result",4]]],[11,"into","","",4391,[[]]],[11,"try_into","","",4391,[[],["result",4]]],[11,"type_id","","",4391,[[],["typeid",3]]],[11,"from","","",4392,[[]]],[11,"borrow","","",4392,[[]]],[11,"borrow_mut","","",4392,[[]]],[11,"try_from","","",4392,[[],["result",4]]],[11,"into","","",4392,[[]]],[11,"try_into","","",4392,[[],["result",4]]],[11,"type_id","","",4392,[[],["typeid",3]]],[11,"from","","",4393,[[]]],[11,"borrow","","",4393,[[]]],[11,"borrow_mut","","",4393,[[]]],[11,"try_from","","",4393,[[],["result",4]]],[11,"into","","",4393,[[]]],[11,"try_into","","",4393,[[],["result",4]]],[11,"type_id","","",4393,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::descadd","",4397,[[]]],[11,"borrow","","",4397,[[]]],[11,"borrow_mut","","",4397,[[]]],[11,"try_from","","",4397,[[],["result",4]]],[11,"into","","",4397,[[]]],[11,"try_into","","",4397,[[],["result",4]]],[11,"type_id","","",4397,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::padcal","",4400,[[]]],[11,"borrow","","",4400,[[]]],[11,"borrow_mut","","",4400,[[]]],[11,"try_from","","",4400,[[],["result",4]]],[11,"into","","",4400,[[]]],[11,"try_into","","",4400,[[],["result",4]]],[11,"type_id","","",4400,[[],["typeid",3]]],[11,"from","","",4401,[[]]],[11,"borrow","","",4401,[[]]],[11,"borrow_mut","","",4401,[[]]],[11,"try_from","","",4401,[[],["result",4]]],[11,"into","","",4401,[[]]],[11,"try_into","","",4401,[[],["result",4]]],[11,"type_id","","",4401,[[],["typeid",3]]],[11,"from","","",4402,[[]]],[11,"borrow","","",4402,[[]]],[11,"borrow_mut","","",4402,[[]]],[11,"try_from","","",4402,[[],["result",4]]],[11,"into","","",4402,[[]]],[11,"try_into","","",4402,[[],["result",4]]],[11,"type_id","","",4402,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::device_endpoint::epcfg","",4405,[[]]],[11,"borrow","","",4405,[[]]],[11,"borrow_mut","","",4405,[[]]],[11,"try_from","","",4405,[[],["result",4]]],[11,"into","","",4405,[[]]],[11,"try_into","","",4405,[[],["result",4]]],[11,"type_id","","",4405,[[],["typeid",3]]],[11,"from","","",4406,[[]]],[11,"borrow","","",4406,[[]]],[11,"borrow_mut","","",4406,[[]]],[11,"try_from","","",4406,[[],["result",4]]],[11,"into","","",4406,[[]]],[11,"try_into","","",4406,[[],["result",4]]],[11,"type_id","","",4406,[[],["typeid",3]]],[11,"from","","",4407,[[]]],[11,"borrow","","",4407,[[]]],[11,"borrow_mut","","",4407,[[]]],[11,"try_from","","",4407,[[],["result",4]]],[11,"into","","",4407,[[]]],[11,"try_into","","",4407,[[],["result",4]]],[11,"type_id","","",4407,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::device_endpoint::epstatusclr","",4410,[[]]],[11,"borrow","","",4410,[[]]],[11,"borrow_mut","","",4410,[[]]],[11,"try_from","","",4410,[[],["result",4]]],[11,"into","","",4410,[[]]],[11,"try_into","","",4410,[[],["result",4]]],[11,"type_id","","",4410,[[],["typeid",3]]],[11,"from","","",4411,[[]]],[11,"borrow","","",4411,[[]]],[11,"borrow_mut","","",4411,[[]]],[11,"try_from","","",4411,[[],["result",4]]],[11,"into","","",4411,[[]]],[11,"try_into","","",4411,[[],["result",4]]],[11,"type_id","","",4411,[[],["typeid",3]]],[11,"from","","",4412,[[]]],[11,"borrow","","",4412,[[]]],[11,"borrow_mut","","",4412,[[]]],[11,"try_from","","",4412,[[],["result",4]]],[11,"into","","",4412,[[]]],[11,"try_into","","",4412,[[],["result",4]]],[11,"type_id","","",4412,[[],["typeid",3]]],[11,"from","","",4413,[[]]],[11,"borrow","","",4413,[[]]],[11,"borrow_mut","","",4413,[[]]],[11,"try_from","","",4413,[[],["result",4]]],[11,"into","","",4413,[[]]],[11,"try_into","","",4413,[[],["result",4]]],[11,"type_id","","",4413,[[],["typeid",3]]],[11,"from","","",4414,[[]]],[11,"borrow","","",4414,[[]]],[11,"borrow_mut","","",4414,[[]]],[11,"try_from","","",4414,[[],["result",4]]],[11,"into","","",4414,[[]]],[11,"try_into","","",4414,[[],["result",4]]],[11,"type_id","","",4414,[[],["typeid",3]]],[11,"from","","",4415,[[]]],[11,"borrow","","",4415,[[]]],[11,"borrow_mut","","",4415,[[]]],[11,"try_from","","",4415,[[],["result",4]]],[11,"into","","",4415,[[]]],[11,"try_into","","",4415,[[],["result",4]]],[11,"type_id","","",4415,[[],["typeid",3]]],[11,"from","","",4416,[[]]],[11,"borrow","","",4416,[[]]],[11,"borrow_mut","","",4416,[[]]],[11,"try_from","","",4416,[[],["result",4]]],[11,"into","","",4416,[[]]],[11,"try_into","","",4416,[[],["result",4]]],[11,"type_id","","",4416,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::device_endpoint::epstatusset","",4418,[[]]],[11,"borrow","","",4418,[[]]],[11,"borrow_mut","","",4418,[[]]],[11,"try_from","","",4418,[[],["result",4]]],[11,"into","","",4418,[[]]],[11,"try_into","","",4418,[[],["result",4]]],[11,"type_id","","",4418,[[],["typeid",3]]],[11,"from","","",4419,[[]]],[11,"borrow","","",4419,[[]]],[11,"borrow_mut","","",4419,[[]]],[11,"try_from","","",4419,[[],["result",4]]],[11,"into","","",4419,[[]]],[11,"try_into","","",4419,[[],["result",4]]],[11,"type_id","","",4419,[[],["typeid",3]]],[11,"from","","",4420,[[]]],[11,"borrow","","",4420,[[]]],[11,"borrow_mut","","",4420,[[]]],[11,"try_from","","",4420,[[],["result",4]]],[11,"into","","",4420,[[]]],[11,"try_into","","",4420,[[],["result",4]]],[11,"type_id","","",4420,[[],["typeid",3]]],[11,"from","","",4421,[[]]],[11,"borrow","","",4421,[[]]],[11,"borrow_mut","","",4421,[[]]],[11,"try_from","","",4421,[[],["result",4]]],[11,"into","","",4421,[[]]],[11,"try_into","","",4421,[[],["result",4]]],[11,"type_id","","",4421,[[],["typeid",3]]],[11,"from","","",4422,[[]]],[11,"borrow","","",4422,[[]]],[11,"borrow_mut","","",4422,[[]]],[11,"try_from","","",4422,[[],["result",4]]],[11,"into","","",4422,[[]]],[11,"try_into","","",4422,[[],["result",4]]],[11,"type_id","","",4422,[[],["typeid",3]]],[11,"from","","",4423,[[]]],[11,"borrow","","",4423,[[]]],[11,"borrow_mut","","",4423,[[]]],[11,"try_from","","",4423,[[],["result",4]]],[11,"into","","",4423,[[]]],[11,"try_into","","",4423,[[],["result",4]]],[11,"type_id","","",4423,[[],["typeid",3]]],[11,"from","","",4424,[[]]],[11,"borrow","","",4424,[[]]],[11,"borrow_mut","","",4424,[[]]],[11,"try_from","","",4424,[[],["result",4]]],[11,"into","","",4424,[[]]],[11,"try_into","","",4424,[[],["result",4]]],[11,"type_id","","",4424,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::device_endpoint::epintflag","",4427,[[]]],[11,"borrow","","",4427,[[]]],[11,"borrow_mut","","",4427,[[]]],[11,"try_from","","",4427,[[],["result",4]]],[11,"into","","",4427,[[]]],[11,"try_into","","",4427,[[],["result",4]]],[11,"type_id","","",4427,[[],["typeid",3]]],[11,"from","","",4428,[[]]],[11,"borrow","","",4428,[[]]],[11,"borrow_mut","","",4428,[[]]],[11,"try_from","","",4428,[[],["result",4]]],[11,"into","","",4428,[[]]],[11,"try_into","","",4428,[[],["result",4]]],[11,"type_id","","",4428,[[],["typeid",3]]],[11,"from","","",4429,[[]]],[11,"borrow","","",4429,[[]]],[11,"borrow_mut","","",4429,[[]]],[11,"try_from","","",4429,[[],["result",4]]],[11,"into","","",4429,[[]]],[11,"try_into","","",4429,[[],["result",4]]],[11,"type_id","","",4429,[[],["typeid",3]]],[11,"from","","",4430,[[]]],[11,"borrow","","",4430,[[]]],[11,"borrow_mut","","",4430,[[]]],[11,"try_from","","",4430,[[],["result",4]]],[11,"into","","",4430,[[]]],[11,"try_into","","",4430,[[],["result",4]]],[11,"type_id","","",4430,[[],["typeid",3]]],[11,"from","","",4431,[[]]],[11,"borrow","","",4431,[[]]],[11,"borrow_mut","","",4431,[[]]],[11,"try_from","","",4431,[[],["result",4]]],[11,"into","","",4431,[[]]],[11,"try_into","","",4431,[[],["result",4]]],[11,"type_id","","",4431,[[],["typeid",3]]],[11,"from","","",4432,[[]]],[11,"borrow","","",4432,[[]]],[11,"borrow_mut","","",4432,[[]]],[11,"try_from","","",4432,[[],["result",4]]],[11,"into","","",4432,[[]]],[11,"try_into","","",4432,[[],["result",4]]],[11,"type_id","","",4432,[[],["typeid",3]]],[11,"from","","",4433,[[]]],[11,"borrow","","",4433,[[]]],[11,"borrow_mut","","",4433,[[]]],[11,"try_from","","",4433,[[],["result",4]]],[11,"into","","",4433,[[]]],[11,"try_into","","",4433,[[],["result",4]]],[11,"type_id","","",4433,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::device_endpoint::epintenclr","",4436,[[]]],[11,"borrow","","",4436,[[]]],[11,"borrow_mut","","",4436,[[]]],[11,"try_from","","",4436,[[],["result",4]]],[11,"into","","",4436,[[]]],[11,"try_into","","",4436,[[],["result",4]]],[11,"type_id","","",4436,[[],["typeid",3]]],[11,"from","","",4437,[[]]],[11,"borrow","","",4437,[[]]],[11,"borrow_mut","","",4437,[[]]],[11,"try_from","","",4437,[[],["result",4]]],[11,"into","","",4437,[[]]],[11,"try_into","","",4437,[[],["result",4]]],[11,"type_id","","",4437,[[],["typeid",3]]],[11,"from","","",4438,[[]]],[11,"borrow","","",4438,[[]]],[11,"borrow_mut","","",4438,[[]]],[11,"try_from","","",4438,[[],["result",4]]],[11,"into","","",4438,[[]]],[11,"try_into","","",4438,[[],["result",4]]],[11,"type_id","","",4438,[[],["typeid",3]]],[11,"from","","",4439,[[]]],[11,"borrow","","",4439,[[]]],[11,"borrow_mut","","",4439,[[]]],[11,"try_from","","",4439,[[],["result",4]]],[11,"into","","",4439,[[]]],[11,"try_into","","",4439,[[],["result",4]]],[11,"type_id","","",4439,[[],["typeid",3]]],[11,"from","","",4440,[[]]],[11,"borrow","","",4440,[[]]],[11,"borrow_mut","","",4440,[[]]],[11,"try_from","","",4440,[[],["result",4]]],[11,"into","","",4440,[[]]],[11,"try_into","","",4440,[[],["result",4]]],[11,"type_id","","",4440,[[],["typeid",3]]],[11,"from","","",4441,[[]]],[11,"borrow","","",4441,[[]]],[11,"borrow_mut","","",4441,[[]]],[11,"try_from","","",4441,[[],["result",4]]],[11,"into","","",4441,[[]]],[11,"try_into","","",4441,[[],["result",4]]],[11,"type_id","","",4441,[[],["typeid",3]]],[11,"from","","",4442,[[]]],[11,"borrow","","",4442,[[]]],[11,"borrow_mut","","",4442,[[]]],[11,"try_from","","",4442,[[],["result",4]]],[11,"into","","",4442,[[]]],[11,"try_into","","",4442,[[],["result",4]]],[11,"type_id","","",4442,[[],["typeid",3]]],[11,"from","atsamd51g::usb::device::device_endpoint::epintenset","",4445,[[]]],[11,"borrow","","",4445,[[]]],[11,"borrow_mut","","",4445,[[]]],[11,"try_from","","",4445,[[],["result",4]]],[11,"into","","",4445,[[]]],[11,"try_into","","",4445,[[],["result",4]]],[11,"type_id","","",4445,[[],["typeid",3]]],[11,"from","","",4446,[[]]],[11,"borrow","","",4446,[[]]],[11,"borrow_mut","","",4446,[[]]],[11,"try_from","","",4446,[[],["result",4]]],[11,"into","","",4446,[[]]],[11,"try_into","","",4446,[[],["result",4]]],[11,"type_id","","",4446,[[],["typeid",3]]],[11,"from","","",4447,[[]]],[11,"borrow","","",4447,[[]]],[11,"borrow_mut","","",4447,[[]]],[11,"try_from","","",4447,[[],["result",4]]],[11,"into","","",4447,[[]]],[11,"try_into","","",4447,[[],["result",4]]],[11,"type_id","","",4447,[[],["typeid",3]]],[11,"from","","",4448,[[]]],[11,"borrow","","",4448,[[]]],[11,"borrow_mut","","",4448,[[]]],[11,"try_from","","",4448,[[],["result",4]]],[11,"into","","",4448,[[]]],[11,"try_into","","",4448,[[],["result",4]]],[11,"type_id","","",4448,[[],["typeid",3]]],[11,"from","","",4449,[[]]],[11,"borrow","","",4449,[[]]],[11,"borrow_mut","","",4449,[[]]],[11,"try_from","","",4449,[[],["result",4]]],[11,"into","","",4449,[[]]],[11,"try_into","","",4449,[[],["result",4]]],[11,"type_id","","",4449,[[],["typeid",3]]],[11,"from","","",4450,[[]]],[11,"borrow","","",4450,[[]]],[11,"borrow_mut","","",4450,[[]]],[11,"try_from","","",4450,[[],["result",4]]],[11,"into","","",4450,[[]]],[11,"try_into","","",4450,[[],["result",4]]],[11,"type_id","","",4450,[[],["typeid",3]]],[11,"from","","",4451,[[]]],[11,"borrow","","",4451,[[]]],[11,"borrow_mut","","",4451,[[]]],[11,"try_from","","",4451,[[],["result",4]]],[11,"into","","",4451,[[]]],[11,"try_into","","",4451,[[],["result",4]]],[11,"type_id","","",4451,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host","",4454,[[]]],[11,"borrow","","",4454,[[]]],[11,"borrow_mut","","",4454,[[]]],[11,"try_from","","",4454,[[],["result",4]]],[11,"into","","",4454,[[]]],[11,"try_into","","",4454,[[],["result",4]]],[11,"type_id","","",4454,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::ctrla","",4456,[[]]],[11,"borrow","","",4456,[[]]],[11,"borrow_mut","","",4456,[[]]],[11,"try_from","","",4456,[[],["result",4]]],[11,"into","","",4456,[[]]],[11,"try_into","","",4456,[[],["result",4]]],[11,"type_id","","",4456,[[],["typeid",3]]],[11,"from","","",4457,[[]]],[11,"borrow","","",4457,[[]]],[11,"borrow_mut","","",4457,[[]]],[11,"try_from","","",4457,[[],["result",4]]],[11,"into","","",4457,[[]]],[11,"try_into","","",4457,[[],["result",4]]],[11,"type_id","","",4457,[[],["typeid",3]]],[11,"from","","",4458,[[]]],[11,"borrow","","",4458,[[]]],[11,"borrow_mut","","",4458,[[]]],[11,"try_from","","",4458,[[],["result",4]]],[11,"into","","",4458,[[]]],[11,"try_into","","",4458,[[],["result",4]]],[11,"type_id","","",4458,[[],["typeid",3]]],[11,"from","","",4460,[[]]],[11,"borrow","","",4460,[[]]],[11,"borrow_mut","","",4460,[[]]],[11,"try_from","","",4460,[[],["result",4]]],[11,"into","","",4460,[[]]],[11,"try_into","","",4460,[[],["result",4]]],[11,"type_id","","",4460,[[],["typeid",3]]],[11,"from","","",4455,[[]]],[11,"borrow","","",4455,[[]]],[11,"borrow_mut","","",4455,[[]]],[11,"try_from","","",4455,[[],["result",4]]],[11,"into","","",4455,[[]]],[11,"try_into","","",4455,[[],["result",4]]],[11,"type_id","","",4455,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::qosctrl","",4464,[[]]],[11,"borrow","","",4464,[[]]],[11,"borrow_mut","","",4464,[[]]],[11,"try_from","","",4464,[[],["result",4]]],[11,"into","","",4464,[[]]],[11,"try_into","","",4464,[[],["result",4]]],[11,"type_id","","",4464,[[],["typeid",3]]],[11,"from","","",4465,[[]]],[11,"borrow","","",4465,[[]]],[11,"borrow_mut","","",4465,[[]]],[11,"try_from","","",4465,[[],["result",4]]],[11,"into","","",4465,[[]]],[11,"try_into","","",4465,[[],["result",4]]],[11,"type_id","","",4465,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::ctrlb","",4469,[[]]],[11,"borrow","","",4469,[[]]],[11,"borrow_mut","","",4469,[[]]],[11,"try_from","","",4469,[[],["result",4]]],[11,"into","","",4469,[[]]],[11,"try_into","","",4469,[[],["result",4]]],[11,"type_id","","",4469,[[],["typeid",3]]],[11,"from","","",4471,[[]]],[11,"borrow","","",4471,[[]]],[11,"borrow_mut","","",4471,[[]]],[11,"try_from","","",4471,[[],["result",4]]],[11,"into","","",4471,[[]]],[11,"try_into","","",4471,[[],["result",4]]],[11,"type_id","","",4471,[[],["typeid",3]]],[11,"from","","",4472,[[]]],[11,"borrow","","",4472,[[]]],[11,"borrow_mut","","",4472,[[]]],[11,"try_from","","",4472,[[],["result",4]]],[11,"into","","",4472,[[]]],[11,"try_into","","",4472,[[],["result",4]]],[11,"type_id","","",4472,[[],["typeid",3]]],[11,"from","","",4473,[[]]],[11,"borrow","","",4473,[[]]],[11,"borrow_mut","","",4473,[[]]],[11,"try_from","","",4473,[[],["result",4]]],[11,"into","","",4473,[[]]],[11,"try_into","","",4473,[[],["result",4]]],[11,"type_id","","",4473,[[],["typeid",3]]],[11,"from","","",4474,[[]]],[11,"borrow","","",4474,[[]]],[11,"borrow_mut","","",4474,[[]]],[11,"try_from","","",4474,[[],["result",4]]],[11,"into","","",4474,[[]]],[11,"try_into","","",4474,[[],["result",4]]],[11,"type_id","","",4474,[[],["typeid",3]]],[11,"from","","",4475,[[]]],[11,"borrow","","",4475,[[]]],[11,"borrow_mut","","",4475,[[]]],[11,"try_from","","",4475,[[],["result",4]]],[11,"into","","",4475,[[]]],[11,"try_into","","",4475,[[],["result",4]]],[11,"type_id","","",4475,[[],["typeid",3]]],[11,"from","","",4476,[[]]],[11,"borrow","","",4476,[[]]],[11,"borrow_mut","","",4476,[[]]],[11,"try_from","","",4476,[[],["result",4]]],[11,"into","","",4476,[[]]],[11,"try_into","","",4476,[[],["result",4]]],[11,"type_id","","",4476,[[],["typeid",3]]],[11,"from","","",4477,[[]]],[11,"borrow","","",4477,[[]]],[11,"borrow_mut","","",4477,[[]]],[11,"try_from","","",4477,[[],["result",4]]],[11,"into","","",4477,[[]]],[11,"try_into","","",4477,[[],["result",4]]],[11,"type_id","","",4477,[[],["typeid",3]]],[11,"from","","",4478,[[]]],[11,"borrow","","",4478,[[]]],[11,"borrow_mut","","",4478,[[]]],[11,"try_from","","",4478,[[],["result",4]]],[11,"into","","",4478,[[]]],[11,"try_into","","",4478,[[],["result",4]]],[11,"type_id","","",4478,[[],["typeid",3]]],[11,"from","","",4468,[[]]],[11,"borrow","","",4468,[[]]],[11,"borrow_mut","","",4468,[[]]],[11,"try_from","","",4468,[[],["result",4]]],[11,"into","","",4468,[[]]],[11,"try_into","","",4468,[[],["result",4]]],[11,"type_id","","",4468,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::hsofc","",4481,[[]]],[11,"borrow","","",4481,[[]]],[11,"borrow_mut","","",4481,[[]]],[11,"try_from","","",4481,[[],["result",4]]],[11,"into","","",4481,[[]]],[11,"try_into","","",4481,[[],["result",4]]],[11,"type_id","","",4481,[[],["typeid",3]]],[11,"from","","",4482,[[]]],[11,"borrow","","",4482,[[]]],[11,"borrow_mut","","",4482,[[]]],[11,"try_from","","",4482,[[],["result",4]]],[11,"into","","",4482,[[]]],[11,"try_into","","",4482,[[],["result",4]]],[11,"type_id","","",4482,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::status","",4485,[[]]],[11,"borrow","","",4485,[[]]],[11,"borrow_mut","","",4485,[[]]],[11,"try_from","","",4485,[[],["result",4]]],[11,"into","","",4485,[[]]],[11,"try_into","","",4485,[[],["result",4]]],[11,"type_id","","",4485,[[],["typeid",3]]],[11,"from","","",4486,[[]]],[11,"borrow","","",4486,[[]]],[11,"borrow_mut","","",4486,[[]]],[11,"try_from","","",4486,[[],["result",4]]],[11,"into","","",4486,[[]]],[11,"try_into","","",4486,[[],["result",4]]],[11,"type_id","","",4486,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::fsmstatus","",4489,[[]]],[11,"borrow","","",4489,[[]]],[11,"borrow_mut","","",4489,[[]]],[11,"try_from","","",4489,[[],["result",4]]],[11,"into","","",4489,[[]]],[11,"try_into","","",4489,[[],["result",4]]],[11,"type_id","","",4489,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::fnum","",4492,[[]]],[11,"borrow","","",4492,[[]]],[11,"borrow_mut","","",4492,[[]]],[11,"try_from","","",4492,[[],["result",4]]],[11,"into","","",4492,[[]]],[11,"try_into","","",4492,[[],["result",4]]],[11,"type_id","","",4492,[[],["typeid",3]]],[11,"from","","",4493,[[]]],[11,"borrow","","",4493,[[]]],[11,"borrow_mut","","",4493,[[]]],[11,"try_from","","",4493,[[],["result",4]]],[11,"into","","",4493,[[]]],[11,"try_into","","",4493,[[],["result",4]]],[11,"type_id","","",4493,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::intenclr","",4497,[[]]],[11,"borrow","","",4497,[[]]],[11,"borrow_mut","","",4497,[[]]],[11,"try_from","","",4497,[[],["result",4]]],[11,"into","","",4497,[[]]],[11,"try_into","","",4497,[[],["result",4]]],[11,"type_id","","",4497,[[],["typeid",3]]],[11,"from","","",4498,[[]]],[11,"borrow","","",4498,[[]]],[11,"borrow_mut","","",4498,[[]]],[11,"try_from","","",4498,[[],["result",4]]],[11,"into","","",4498,[[]]],[11,"try_into","","",4498,[[],["result",4]]],[11,"type_id","","",4498,[[],["typeid",3]]],[11,"from","","",4499,[[]]],[11,"borrow","","",4499,[[]]],[11,"borrow_mut","","",4499,[[]]],[11,"try_from","","",4499,[[],["result",4]]],[11,"into","","",4499,[[]]],[11,"try_into","","",4499,[[],["result",4]]],[11,"type_id","","",4499,[[],["typeid",3]]],[11,"from","","",4500,[[]]],[11,"borrow","","",4500,[[]]],[11,"borrow_mut","","",4500,[[]]],[11,"try_from","","",4500,[[],["result",4]]],[11,"into","","",4500,[[]]],[11,"try_into","","",4500,[[],["result",4]]],[11,"type_id","","",4500,[[],["typeid",3]]],[11,"from","","",4501,[[]]],[11,"borrow","","",4501,[[]]],[11,"borrow_mut","","",4501,[[]]],[11,"try_from","","",4501,[[],["result",4]]],[11,"into","","",4501,[[]]],[11,"try_into","","",4501,[[],["result",4]]],[11,"type_id","","",4501,[[],["typeid",3]]],[11,"from","","",4502,[[]]],[11,"borrow","","",4502,[[]]],[11,"borrow_mut","","",4502,[[]]],[11,"try_from","","",4502,[[],["result",4]]],[11,"into","","",4502,[[]]],[11,"try_into","","",4502,[[],["result",4]]],[11,"type_id","","",4502,[[],["typeid",3]]],[11,"from","","",4503,[[]]],[11,"borrow","","",4503,[[]]],[11,"borrow_mut","","",4503,[[]]],[11,"try_from","","",4503,[[],["result",4]]],[11,"into","","",4503,[[]]],[11,"try_into","","",4503,[[],["result",4]]],[11,"type_id","","",4503,[[],["typeid",3]]],[11,"from","","",4504,[[]]],[11,"borrow","","",4504,[[]]],[11,"borrow_mut","","",4504,[[]]],[11,"try_from","","",4504,[[],["result",4]]],[11,"into","","",4504,[[]]],[11,"try_into","","",4504,[[],["result",4]]],[11,"type_id","","",4504,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::intenset","",4507,[[]]],[11,"borrow","","",4507,[[]]],[11,"borrow_mut","","",4507,[[]]],[11,"try_from","","",4507,[[],["result",4]]],[11,"into","","",4507,[[]]],[11,"try_into","","",4507,[[],["result",4]]],[11,"type_id","","",4507,[[],["typeid",3]]],[11,"from","","",4508,[[]]],[11,"borrow","","",4508,[[]]],[11,"borrow_mut","","",4508,[[]]],[11,"try_from","","",4508,[[],["result",4]]],[11,"into","","",4508,[[]]],[11,"try_into","","",4508,[[],["result",4]]],[11,"type_id","","",4508,[[],["typeid",3]]],[11,"from","","",4509,[[]]],[11,"borrow","","",4509,[[]]],[11,"borrow_mut","","",4509,[[]]],[11,"try_from","","",4509,[[],["result",4]]],[11,"into","","",4509,[[]]],[11,"try_into","","",4509,[[],["result",4]]],[11,"type_id","","",4509,[[],["typeid",3]]],[11,"from","","",4510,[[]]],[11,"borrow","","",4510,[[]]],[11,"borrow_mut","","",4510,[[]]],[11,"try_from","","",4510,[[],["result",4]]],[11,"into","","",4510,[[]]],[11,"try_into","","",4510,[[],["result",4]]],[11,"type_id","","",4510,[[],["typeid",3]]],[11,"from","","",4511,[[]]],[11,"borrow","","",4511,[[]]],[11,"borrow_mut","","",4511,[[]]],[11,"try_from","","",4511,[[],["result",4]]],[11,"into","","",4511,[[]]],[11,"try_into","","",4511,[[],["result",4]]],[11,"type_id","","",4511,[[],["typeid",3]]],[11,"from","","",4512,[[]]],[11,"borrow","","",4512,[[]]],[11,"borrow_mut","","",4512,[[]]],[11,"try_from","","",4512,[[],["result",4]]],[11,"into","","",4512,[[]]],[11,"try_into","","",4512,[[],["result",4]]],[11,"type_id","","",4512,[[],["typeid",3]]],[11,"from","","",4513,[[]]],[11,"borrow","","",4513,[[]]],[11,"borrow_mut","","",4513,[[]]],[11,"try_from","","",4513,[[],["result",4]]],[11,"into","","",4513,[[]]],[11,"try_into","","",4513,[[],["result",4]]],[11,"type_id","","",4513,[[],["typeid",3]]],[11,"from","","",4514,[[]]],[11,"borrow","","",4514,[[]]],[11,"borrow_mut","","",4514,[[]]],[11,"try_from","","",4514,[[],["result",4]]],[11,"into","","",4514,[[]]],[11,"try_into","","",4514,[[],["result",4]]],[11,"type_id","","",4514,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::intflag","",4517,[[]]],[11,"borrow","","",4517,[[]]],[11,"borrow_mut","","",4517,[[]]],[11,"try_from","","",4517,[[],["result",4]]],[11,"into","","",4517,[[]]],[11,"try_into","","",4517,[[],["result",4]]],[11,"type_id","","",4517,[[],["typeid",3]]],[11,"from","","",4518,[[]]],[11,"borrow","","",4518,[[]]],[11,"borrow_mut","","",4518,[[]]],[11,"try_from","","",4518,[[],["result",4]]],[11,"into","","",4518,[[]]],[11,"try_into","","",4518,[[],["result",4]]],[11,"type_id","","",4518,[[],["typeid",3]]],[11,"from","","",4519,[[]]],[11,"borrow","","",4519,[[]]],[11,"borrow_mut","","",4519,[[]]],[11,"try_from","","",4519,[[],["result",4]]],[11,"into","","",4519,[[]]],[11,"try_into","","",4519,[[],["result",4]]],[11,"type_id","","",4519,[[],["typeid",3]]],[11,"from","","",4520,[[]]],[11,"borrow","","",4520,[[]]],[11,"borrow_mut","","",4520,[[]]],[11,"try_from","","",4520,[[],["result",4]]],[11,"into","","",4520,[[]]],[11,"try_into","","",4520,[[],["result",4]]],[11,"type_id","","",4520,[[],["typeid",3]]],[11,"from","","",4521,[[]]],[11,"borrow","","",4521,[[]]],[11,"borrow_mut","","",4521,[[]]],[11,"try_from","","",4521,[[],["result",4]]],[11,"into","","",4521,[[]]],[11,"try_into","","",4521,[[],["result",4]]],[11,"type_id","","",4521,[[],["typeid",3]]],[11,"from","","",4522,[[]]],[11,"borrow","","",4522,[[]]],[11,"borrow_mut","","",4522,[[]]],[11,"try_from","","",4522,[[],["result",4]]],[11,"into","","",4522,[[]]],[11,"try_into","","",4522,[[],["result",4]]],[11,"type_id","","",4522,[[],["typeid",3]]],[11,"from","","",4523,[[]]],[11,"borrow","","",4523,[[]]],[11,"borrow_mut","","",4523,[[]]],[11,"try_from","","",4523,[[],["result",4]]],[11,"into","","",4523,[[]]],[11,"try_into","","",4523,[[],["result",4]]],[11,"type_id","","",4523,[[],["typeid",3]]],[11,"from","","",4524,[[]]],[11,"borrow","","",4524,[[]]],[11,"borrow_mut","","",4524,[[]]],[11,"try_from","","",4524,[[],["result",4]]],[11,"into","","",4524,[[]]],[11,"try_into","","",4524,[[],["result",4]]],[11,"type_id","","",4524,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::descadd","",4528,[[]]],[11,"borrow","","",4528,[[]]],[11,"borrow_mut","","",4528,[[]]],[11,"try_from","","",4528,[[],["result",4]]],[11,"into","","",4528,[[]]],[11,"try_into","","",4528,[[],["result",4]]],[11,"type_id","","",4528,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::padcal","",4531,[[]]],[11,"borrow","","",4531,[[]]],[11,"borrow_mut","","",4531,[[]]],[11,"try_from","","",4531,[[],["result",4]]],[11,"into","","",4531,[[]]],[11,"try_into","","",4531,[[],["result",4]]],[11,"type_id","","",4531,[[],["typeid",3]]],[11,"from","","",4532,[[]]],[11,"borrow","","",4532,[[]]],[11,"borrow_mut","","",4532,[[]]],[11,"try_from","","",4532,[[],["result",4]]],[11,"into","","",4532,[[]]],[11,"try_into","","",4532,[[],["result",4]]],[11,"type_id","","",4532,[[],["typeid",3]]],[11,"from","","",4533,[[]]],[11,"borrow","","",4533,[[]]],[11,"borrow_mut","","",4533,[[]]],[11,"try_from","","",4533,[[],["result",4]]],[11,"into","","",4533,[[]]],[11,"try_into","","",4533,[[],["result",4]]],[11,"type_id","","",4533,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::pcfg","",4536,[[]]],[11,"borrow","","",4536,[[]]],[11,"borrow_mut","","",4536,[[]]],[11,"try_from","","",4536,[[],["result",4]]],[11,"into","","",4536,[[]]],[11,"try_into","","",4536,[[],["result",4]]],[11,"type_id","","",4536,[[],["typeid",3]]],[11,"from","","",4537,[[]]],[11,"borrow","","",4537,[[]]],[11,"borrow_mut","","",4537,[[]]],[11,"try_from","","",4537,[[],["result",4]]],[11,"into","","",4537,[[]]],[11,"try_into","","",4537,[[],["result",4]]],[11,"type_id","","",4537,[[],["typeid",3]]],[11,"from","","",4538,[[]]],[11,"borrow","","",4538,[[]]],[11,"borrow_mut","","",4538,[[]]],[11,"try_from","","",4538,[[],["result",4]]],[11,"into","","",4538,[[]]],[11,"try_into","","",4538,[[],["result",4]]],[11,"type_id","","",4538,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::binterval","",4541,[[]]],[11,"borrow","","",4541,[[]]],[11,"borrow_mut","","",4541,[[]]],[11,"try_from","","",4541,[[],["result",4]]],[11,"into","","",4541,[[]]],[11,"try_into","","",4541,[[],["result",4]]],[11,"type_id","","",4541,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::pstatusclr","",4544,[[]]],[11,"borrow","","",4544,[[]]],[11,"borrow_mut","","",4544,[[]]],[11,"try_from","","",4544,[[],["result",4]]],[11,"into","","",4544,[[]]],[11,"try_into","","",4544,[[],["result",4]]],[11,"type_id","","",4544,[[],["typeid",3]]],[11,"from","","",4545,[[]]],[11,"borrow","","",4545,[[]]],[11,"borrow_mut","","",4545,[[]]],[11,"try_from","","",4545,[[],["result",4]]],[11,"into","","",4545,[[]]],[11,"try_into","","",4545,[[],["result",4]]],[11,"type_id","","",4545,[[],["typeid",3]]],[11,"from","","",4546,[[]]],[11,"borrow","","",4546,[[]]],[11,"borrow_mut","","",4546,[[]]],[11,"try_from","","",4546,[[],["result",4]]],[11,"into","","",4546,[[]]],[11,"try_into","","",4546,[[],["result",4]]],[11,"type_id","","",4546,[[],["typeid",3]]],[11,"from","","",4547,[[]]],[11,"borrow","","",4547,[[]]],[11,"borrow_mut","","",4547,[[]]],[11,"try_from","","",4547,[[],["result",4]]],[11,"into","","",4547,[[]]],[11,"try_into","","",4547,[[],["result",4]]],[11,"type_id","","",4547,[[],["typeid",3]]],[11,"from","","",4548,[[]]],[11,"borrow","","",4548,[[]]],[11,"borrow_mut","","",4548,[[]]],[11,"try_from","","",4548,[[],["result",4]]],[11,"into","","",4548,[[]]],[11,"try_into","","",4548,[[],["result",4]]],[11,"type_id","","",4548,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::pstatusset","",4550,[[]]],[11,"borrow","","",4550,[[]]],[11,"borrow_mut","","",4550,[[]]],[11,"try_from","","",4550,[[],["result",4]]],[11,"into","","",4550,[[]]],[11,"try_into","","",4550,[[],["result",4]]],[11,"type_id","","",4550,[[],["typeid",3]]],[11,"from","","",4551,[[]]],[11,"borrow","","",4551,[[]]],[11,"borrow_mut","","",4551,[[]]],[11,"try_from","","",4551,[[],["result",4]]],[11,"into","","",4551,[[]]],[11,"try_into","","",4551,[[],["result",4]]],[11,"type_id","","",4551,[[],["typeid",3]]],[11,"from","","",4552,[[]]],[11,"borrow","","",4552,[[]]],[11,"borrow_mut","","",4552,[[]]],[11,"try_from","","",4552,[[],["result",4]]],[11,"into","","",4552,[[]]],[11,"try_into","","",4552,[[],["result",4]]],[11,"type_id","","",4552,[[],["typeid",3]]],[11,"from","","",4553,[[]]],[11,"borrow","","",4553,[[]]],[11,"borrow_mut","","",4553,[[]]],[11,"try_from","","",4553,[[],["result",4]]],[11,"into","","",4553,[[]]],[11,"try_into","","",4553,[[],["result",4]]],[11,"type_id","","",4553,[[],["typeid",3]]],[11,"from","","",4554,[[]]],[11,"borrow","","",4554,[[]]],[11,"borrow_mut","","",4554,[[]]],[11,"try_from","","",4554,[[],["result",4]]],[11,"into","","",4554,[[]]],[11,"try_into","","",4554,[[],["result",4]]],[11,"type_id","","",4554,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::pintflag","",4557,[[]]],[11,"borrow","","",4557,[[]]],[11,"borrow_mut","","",4557,[[]]],[11,"try_from","","",4557,[[],["result",4]]],[11,"into","","",4557,[[]]],[11,"try_into","","",4557,[[],["result",4]]],[11,"type_id","","",4557,[[],["typeid",3]]],[11,"from","","",4558,[[]]],[11,"borrow","","",4558,[[]]],[11,"borrow_mut","","",4558,[[]]],[11,"try_from","","",4558,[[],["result",4]]],[11,"into","","",4558,[[]]],[11,"try_into","","",4558,[[],["result",4]]],[11,"type_id","","",4558,[[],["typeid",3]]],[11,"from","","",4559,[[]]],[11,"borrow","","",4559,[[]]],[11,"borrow_mut","","",4559,[[]]],[11,"try_from","","",4559,[[],["result",4]]],[11,"into","","",4559,[[]]],[11,"try_into","","",4559,[[],["result",4]]],[11,"type_id","","",4559,[[],["typeid",3]]],[11,"from","","",4560,[[]]],[11,"borrow","","",4560,[[]]],[11,"borrow_mut","","",4560,[[]]],[11,"try_from","","",4560,[[],["result",4]]],[11,"into","","",4560,[[]]],[11,"try_into","","",4560,[[],["result",4]]],[11,"type_id","","",4560,[[],["typeid",3]]],[11,"from","","",4561,[[]]],[11,"borrow","","",4561,[[]]],[11,"borrow_mut","","",4561,[[]]],[11,"try_from","","",4561,[[],["result",4]]],[11,"into","","",4561,[[]]],[11,"try_into","","",4561,[[],["result",4]]],[11,"type_id","","",4561,[[],["typeid",3]]],[11,"from","","",4562,[[]]],[11,"borrow","","",4562,[[]]],[11,"borrow_mut","","",4562,[[]]],[11,"try_from","","",4562,[[],["result",4]]],[11,"into","","",4562,[[]]],[11,"try_into","","",4562,[[],["result",4]]],[11,"type_id","","",4562,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::pintenclr","",4565,[[]]],[11,"borrow","","",4565,[[]]],[11,"borrow_mut","","",4565,[[]]],[11,"try_from","","",4565,[[],["result",4]]],[11,"into","","",4565,[[]]],[11,"try_into","","",4565,[[],["result",4]]],[11,"type_id","","",4565,[[],["typeid",3]]],[11,"from","","",4566,[[]]],[11,"borrow","","",4566,[[]]],[11,"borrow_mut","","",4566,[[]]],[11,"try_from","","",4566,[[],["result",4]]],[11,"into","","",4566,[[]]],[11,"try_into","","",4566,[[],["result",4]]],[11,"type_id","","",4566,[[],["typeid",3]]],[11,"from","","",4567,[[]]],[11,"borrow","","",4567,[[]]],[11,"borrow_mut","","",4567,[[]]],[11,"try_from","","",4567,[[],["result",4]]],[11,"into","","",4567,[[]]],[11,"try_into","","",4567,[[],["result",4]]],[11,"type_id","","",4567,[[],["typeid",3]]],[11,"from","","",4568,[[]]],[11,"borrow","","",4568,[[]]],[11,"borrow_mut","","",4568,[[]]],[11,"try_from","","",4568,[[],["result",4]]],[11,"into","","",4568,[[]]],[11,"try_into","","",4568,[[],["result",4]]],[11,"type_id","","",4568,[[],["typeid",3]]],[11,"from","","",4569,[[]]],[11,"borrow","","",4569,[[]]],[11,"borrow_mut","","",4569,[[]]],[11,"try_from","","",4569,[[],["result",4]]],[11,"into","","",4569,[[]]],[11,"try_into","","",4569,[[],["result",4]]],[11,"type_id","","",4569,[[],["typeid",3]]],[11,"from","","",4570,[[]]],[11,"borrow","","",4570,[[]]],[11,"borrow_mut","","",4570,[[]]],[11,"try_from","","",4570,[[],["result",4]]],[11,"into","","",4570,[[]]],[11,"try_into","","",4570,[[],["result",4]]],[11,"type_id","","",4570,[[],["typeid",3]]],[11,"from","atsamd51g::usb::host::host_pipe::pintenset","",4573,[[]]],[11,"borrow","","",4573,[[]]],[11,"borrow_mut","","",4573,[[]]],[11,"try_from","","",4573,[[],["result",4]]],[11,"into","","",4573,[[]]],[11,"try_into","","",4573,[[],["result",4]]],[11,"type_id","","",4573,[[],["typeid",3]]],[11,"from","","",4574,[[]]],[11,"borrow","","",4574,[[]]],[11,"borrow_mut","","",4574,[[]]],[11,"try_from","","",4574,[[],["result",4]]],[11,"into","","",4574,[[]]],[11,"try_into","","",4574,[[],["result",4]]],[11,"type_id","","",4574,[[],["typeid",3]]],[11,"from","","",4575,[[]]],[11,"borrow","","",4575,[[]]],[11,"borrow_mut","","",4575,[[]]],[11,"try_from","","",4575,[[],["result",4]]],[11,"into","","",4575,[[]]],[11,"try_into","","",4575,[[],["result",4]]],[11,"type_id","","",4575,[[],["typeid",3]]],[11,"from","","",4576,[[]]],[11,"borrow","","",4576,[[]]],[11,"borrow_mut","","",4576,[[]]],[11,"try_from","","",4576,[[],["result",4]]],[11,"into","","",4576,[[]]],[11,"try_into","","",4576,[[],["result",4]]],[11,"type_id","","",4576,[[],["typeid",3]]],[11,"from","","",4577,[[]]],[11,"borrow","","",4577,[[]]],[11,"borrow_mut","","",4577,[[]]],[11,"try_from","","",4577,[[],["result",4]]],[11,"into","","",4577,[[]]],[11,"try_into","","",4577,[[],["result",4]]],[11,"type_id","","",4577,[[],["typeid",3]]],[11,"from","","",4578,[[]]],[11,"borrow","","",4578,[[]]],[11,"borrow_mut","","",4578,[[]]],[11,"try_from","","",4578,[[],["result",4]]],[11,"into","","",4578,[[]]],[11,"try_into","","",4578,[[],["result",4]]],[11,"type_id","","",4578,[[],["typeid",3]]],[11,"from","atsamd51g::wdt","",4582,[[]]],[11,"borrow","","",4582,[[]]],[11,"borrow_mut","","",4582,[[]]],[11,"try_from","","",4582,[[],["result",4]]],[11,"into","","",4582,[[]]],[11,"try_into","","",4582,[[],["result",4]]],[11,"type_id","","",4582,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::ctrla","",4583,[[]]],[11,"borrow","","",4583,[[]]],[11,"borrow_mut","","",4583,[[]]],[11,"try_from","","",4583,[[],["result",4]]],[11,"into","","",4583,[[]]],[11,"try_into","","",4583,[[],["result",4]]],[11,"type_id","","",4583,[[],["typeid",3]]],[11,"from","","",4584,[[]]],[11,"borrow","","",4584,[[]]],[11,"borrow_mut","","",4584,[[]]],[11,"try_from","","",4584,[[],["result",4]]],[11,"into","","",4584,[[]]],[11,"try_into","","",4584,[[],["result",4]]],[11,"type_id","","",4584,[[],["typeid",3]]],[11,"from","","",4585,[[]]],[11,"borrow","","",4585,[[]]],[11,"borrow_mut","","",4585,[[]]],[11,"try_from","","",4585,[[],["result",4]]],[11,"into","","",4585,[[]]],[11,"try_into","","",4585,[[],["result",4]]],[11,"type_id","","",4585,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::config","",4591,[[]]],[11,"borrow","","",4591,[[]]],[11,"borrow_mut","","",4591,[[]]],[11,"try_from","","",4591,[[],["result",4]]],[11,"into","","",4591,[[]]],[11,"try_into","","",4591,[[],["result",4]]],[11,"type_id","","",4591,[[],["typeid",3]]],[11,"from","","",4593,[[]]],[11,"borrow","","",4593,[[]]],[11,"borrow_mut","","",4593,[[]]],[11,"try_from","","",4593,[[],["result",4]]],[11,"into","","",4593,[[]]],[11,"try_into","","",4593,[[],["result",4]]],[11,"type_id","","",4593,[[],["typeid",3]]],[11,"from","","",4588,[[]]],[11,"borrow","","",4588,[[]]],[11,"borrow_mut","","",4588,[[]]],[11,"try_from","","",4588,[[],["result",4]]],[11,"into","","",4588,[[]]],[11,"try_into","","",4588,[[],["result",4]]],[11,"type_id","","",4588,[[],["typeid",3]]],[11,"from","","",4589,[[]]],[11,"borrow","","",4589,[[]]],[11,"borrow_mut","","",4589,[[]]],[11,"try_from","","",4589,[[],["result",4]]],[11,"into","","",4589,[[]]],[11,"try_into","","",4589,[[],["result",4]]],[11,"type_id","","",4589,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::ewctrl","",4598,[[]]],[11,"borrow","","",4598,[[]]],[11,"borrow_mut","","",4598,[[]]],[11,"try_from","","",4598,[[],["result",4]]],[11,"into","","",4598,[[]]],[11,"try_into","","",4598,[[],["result",4]]],[11,"type_id","","",4598,[[],["typeid",3]]],[11,"from","","",4596,[[]]],[11,"borrow","","",4596,[[]]],[11,"borrow_mut","","",4596,[[]]],[11,"try_from","","",4596,[[],["result",4]]],[11,"into","","",4596,[[]]],[11,"try_into","","",4596,[[],["result",4]]],[11,"type_id","","",4596,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::intenclr","",4601,[[]]],[11,"borrow","","",4601,[[]]],[11,"borrow_mut","","",4601,[[]]],[11,"try_from","","",4601,[[],["result",4]]],[11,"into","","",4601,[[]]],[11,"try_into","","",4601,[[],["result",4]]],[11,"type_id","","",4601,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::intenset","",4604,[[]]],[11,"borrow","","",4604,[[]]],[11,"borrow_mut","","",4604,[[]]],[11,"try_from","","",4604,[[],["result",4]]],[11,"into","","",4604,[[]]],[11,"try_into","","",4604,[[],["result",4]]],[11,"type_id","","",4604,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::intflag","",4607,[[]]],[11,"borrow","","",4607,[[]]],[11,"borrow_mut","","",4607,[[]]],[11,"try_from","","",4607,[[],["result",4]]],[11,"into","","",4607,[[]]],[11,"try_into","","",4607,[[],["result",4]]],[11,"type_id","","",4607,[[],["typeid",3]]],[11,"from","atsamd51g::wdt::clear","",4612,[[]]],[11,"borrow","","",4612,[[]]],[11,"borrow_mut","","",4612,[[]]],[11,"try_from","","",4612,[[],["result",4]]],[11,"into","","",4612,[[]]],[11,"try_into","","",4612,[[],["result",4]]],[11,"type_id","","",4612,[[],["typeid",3]]],[11,"from","","",4611,[[]]],[11,"borrow","","",4611,[[]]],[11,"borrow_mut","","",4611,[[]]],[11,"try_from","","",4611,[[],["result",4]]],[11,"into","","",4611,[[]]],[11,"try_into","","",4611,[[],["result",4]]],[11,"type_id","","",4611,[[],["typeid",3]]],[11,"from","atsamd51g::core_debug","",4614,[[]]],[11,"borrow","","",4614,[[]]],[11,"borrow_mut","","",4614,[[]]],[11,"try_from","","",4614,[[],["result",4]]],[11,"into","","",4614,[[]]],[11,"try_into","","",4614,[[],["result",4]]],[11,"type_id","","",4614,[[],["typeid",3]]],[11,"from","atsamd51g::core_debug::dhcsr","",4615,[[]]],[11,"borrow","","",4615,[[]]],[11,"borrow_mut","","",4615,[[]]],[11,"try_from","","",4615,[[],["result",4]]],[11,"into","","",4615,[[]]],[11,"try_into","","",4615,[[],["result",4]]],[11,"type_id","","",4615,[[],["typeid",3]]],[11,"from","","",4616,[[]]],[11,"borrow","","",4616,[[]]],[11,"borrow_mut","","",4616,[[]]],[11,"try_from","","",4616,[[],["result",4]]],[11,"into","","",4616,[[]]],[11,"try_into","","",4616,[[],["result",4]]],[11,"type_id","","",4616,[[],["typeid",3]]],[11,"from","","",4617,[[]]],[11,"borrow","","",4617,[[]]],[11,"borrow_mut","","",4617,[[]]],[11,"try_from","","",4617,[[],["result",4]]],[11,"into","","",4617,[[]]],[11,"try_into","","",4617,[[],["result",4]]],[11,"type_id","","",4617,[[],["typeid",3]]],[11,"from","","",4618,[[]]],[11,"borrow","","",4618,[[]]],[11,"borrow_mut","","",4618,[[]]],[11,"try_from","","",4618,[[],["result",4]]],[11,"into","","",4618,[[]]],[11,"try_into","","",4618,[[],["result",4]]],[11,"type_id","","",4618,[[],["typeid",3]]],[11,"from","","",4619,[[]]],[11,"borrow","","",4619,[[]]],[11,"borrow_mut","","",4619,[[]]],[11,"try_from","","",4619,[[],["result",4]]],[11,"into","","",4619,[[]]],[11,"try_into","","",4619,[[],["result",4]]],[11,"type_id","","",4619,[[],["typeid",3]]],[11,"from","","",4620,[[]]],[11,"borrow","","",4620,[[]]],[11,"borrow_mut","","",4620,[[]]],[11,"try_from","","",4620,[[],["result",4]]],[11,"into","","",4620,[[]]],[11,"try_into","","",4620,[[],["result",4]]],[11,"type_id","","",4620,[[],["typeid",3]]],[11,"from","atsamd51g::core_debug::dcrsr","",4623,[[]]],[11,"borrow","","",4623,[[]]],[11,"borrow_mut","","",4623,[[]]],[11,"try_from","","",4623,[[],["result",4]]],[11,"into","","",4623,[[]]],[11,"try_into","","",4623,[[],["result",4]]],[11,"type_id","","",4623,[[],["typeid",3]]],[11,"from","","",4624,[[]]],[11,"borrow","","",4624,[[]]],[11,"borrow_mut","","",4624,[[]]],[11,"try_from","","",4624,[[],["result",4]]],[11,"into","","",4624,[[]]],[11,"try_into","","",4624,[[],["result",4]]],[11,"type_id","","",4624,[[],["typeid",3]]],[11,"from","atsamd51g::core_debug::demcr","",4626,[[]]],[11,"borrow","","",4626,[[]]],[11,"borrow_mut","","",4626,[[]]],[11,"try_from","","",4626,[[],["result",4]]],[11,"into","","",4626,[[]]],[11,"try_into","","",4626,[[],["result",4]]],[11,"type_id","","",4626,[[],["typeid",3]]],[11,"from","","",4627,[[]]],[11,"borrow","","",4627,[[]]],[11,"borrow_mut","","",4627,[[]]],[11,"try_from","","",4627,[[],["result",4]]],[11,"into","","",4627,[[]]],[11,"try_into","","",4627,[[],["result",4]]],[11,"type_id","","",4627,[[],["typeid",3]]],[11,"from","","",4628,[[]]],[11,"borrow","","",4628,[[]]],[11,"borrow_mut","","",4628,[[]]],[11,"try_from","","",4628,[[],["result",4]]],[11,"into","","",4628,[[]]],[11,"try_into","","",4628,[[],["result",4]]],[11,"type_id","","",4628,[[],["typeid",3]]],[11,"from","","",4629,[[]]],[11,"borrow","","",4629,[[]]],[11,"borrow_mut","","",4629,[[]]],[11,"try_from","","",4629,[[],["result",4]]],[11,"into","","",4629,[[]]],[11,"try_into","","",4629,[[],["result",4]]],[11,"type_id","","",4629,[[],["typeid",3]]],[11,"from","","",4630,[[]]],[11,"borrow","","",4630,[[]]],[11,"borrow_mut","","",4630,[[]]],[11,"try_from","","",4630,[[],["result",4]]],[11,"into","","",4630,[[]]],[11,"try_into","","",4630,[[],["result",4]]],[11,"type_id","","",4630,[[],["typeid",3]]],[11,"from","","",4631,[[]]],[11,"borrow","","",4631,[[]]],[11,"borrow_mut","","",4631,[[]]],[11,"try_from","","",4631,[[],["result",4]]],[11,"into","","",4631,[[]]],[11,"try_into","","",4631,[[],["result",4]]],[11,"type_id","","",4631,[[],["typeid",3]]],[11,"from","","",4632,[[]]],[11,"borrow","","",4632,[[]]],[11,"borrow_mut","","",4632,[[]]],[11,"try_from","","",4632,[[],["result",4]]],[11,"into","","",4632,[[]]],[11,"try_into","","",4632,[[],["result",4]]],[11,"type_id","","",4632,[[],["typeid",3]]],[11,"from","","",4633,[[]]],[11,"borrow","","",4633,[[]]],[11,"borrow_mut","","",4633,[[]]],[11,"try_from","","",4633,[[],["result",4]]],[11,"into","","",4633,[[]]],[11,"try_into","","",4633,[[],["result",4]]],[11,"type_id","","",4633,[[],["typeid",3]]],[11,"from","","",4634,[[]]],[11,"borrow","","",4634,[[]]],[11,"borrow_mut","","",4634,[[]]],[11,"try_from","","",4634,[[],["result",4]]],[11,"into","","",4634,[[]]],[11,"try_into","","",4634,[[],["result",4]]],[11,"type_id","","",4634,[[],["typeid",3]]],[11,"from","","",4635,[[]]],[11,"borrow","","",4635,[[]]],[11,"borrow_mut","","",4635,[[]]],[11,"try_from","","",4635,[[],["result",4]]],[11,"into","","",4635,[[]]],[11,"try_into","","",4635,[[],["result",4]]],[11,"type_id","","",4635,[[],["typeid",3]]],[11,"from","","",4636,[[]]],[11,"borrow","","",4636,[[]]],[11,"borrow_mut","","",4636,[[]]],[11,"try_from","","",4636,[[],["result",4]]],[11,"into","","",4636,[[]]],[11,"try_into","","",4636,[[],["result",4]]],[11,"type_id","","",4636,[[],["typeid",3]]],[11,"from","","",4637,[[]]],[11,"borrow","","",4637,[[]]],[11,"borrow_mut","","",4637,[[]]],[11,"try_from","","",4637,[[],["result",4]]],[11,"into","","",4637,[[]]],[11,"try_into","","",4637,[[],["result",4]]],[11,"type_id","","",4637,[[],["typeid",3]]],[11,"from","","",4638,[[]]],[11,"borrow","","",4638,[[]]],[11,"borrow_mut","","",4638,[[]]],[11,"try_from","","",4638,[[],["result",4]]],[11,"into","","",4638,[[]]],[11,"try_into","","",4638,[[],["result",4]]],[11,"type_id","","",4638,[[],["typeid",3]]],[11,"from","atsamd51g::etm","",4641,[[]]],[11,"borrow","","",4641,[[]]],[11,"borrow_mut","","",4641,[[]]],[11,"try_from","","",4641,[[],["result",4]]],[11,"into","","",4641,[[]]],[11,"try_into","","",4641,[[],["result",4]]],[11,"type_id","","",4641,[[],["typeid",3]]],[11,"from","atsamd51g::etm::cr","",4642,[[]]],[11,"borrow","","",4642,[[]]],[11,"borrow_mut","","",4642,[[]]],[11,"try_from","","",4642,[[],["result",4]]],[11,"into","","",4642,[[]]],[11,"try_into","","",4642,[[],["result",4]]],[11,"type_id","","",4642,[[],["typeid",3]]],[11,"from","","",4643,[[]]],[11,"borrow","","",4643,[[]]],[11,"borrow_mut","","",4643,[[]]],[11,"try_from","","",4643,[[],["result",4]]],[11,"into","","",4643,[[]]],[11,"try_into","","",4643,[[],["result",4]]],[11,"type_id","","",4643,[[],["typeid",3]]],[11,"from","","",4644,[[]]],[11,"borrow","","",4644,[[]]],[11,"borrow_mut","","",4644,[[]]],[11,"try_from","","",4644,[[],["result",4]]],[11,"into","","",4644,[[]]],[11,"try_into","","",4644,[[],["result",4]]],[11,"type_id","","",4644,[[],["typeid",3]]],[11,"from","","",4645,[[]]],[11,"borrow","","",4645,[[]]],[11,"borrow_mut","","",4645,[[]]],[11,"try_from","","",4645,[[],["result",4]]],[11,"into","","",4645,[[]]],[11,"try_into","","",4645,[[],["result",4]]],[11,"type_id","","",4645,[[],["typeid",3]]],[11,"from","","",4646,[[]]],[11,"borrow","","",4646,[[]]],[11,"borrow_mut","","",4646,[[]]],[11,"try_from","","",4646,[[],["result",4]]],[11,"into","","",4646,[[]]],[11,"try_into","","",4646,[[],["result",4]]],[11,"type_id","","",4646,[[],["typeid",3]]],[11,"from","","",4647,[[]]],[11,"borrow","","",4647,[[]]],[11,"borrow_mut","","",4647,[[]]],[11,"try_from","","",4647,[[],["result",4]]],[11,"into","","",4647,[[]]],[11,"try_into","","",4647,[[],["result",4]]],[11,"type_id","","",4647,[[],["typeid",3]]],[11,"from","","",4648,[[]]],[11,"borrow","","",4648,[[]]],[11,"borrow_mut","","",4648,[[]]],[11,"try_from","","",4648,[[],["result",4]]],[11,"into","","",4648,[[]]],[11,"try_into","","",4648,[[],["result",4]]],[11,"type_id","","",4648,[[],["typeid",3]]],[11,"from","","",4649,[[]]],[11,"borrow","","",4649,[[]]],[11,"borrow_mut","","",4649,[[]]],[11,"try_from","","",4649,[[],["result",4]]],[11,"into","","",4649,[[]]],[11,"try_into","","",4649,[[],["result",4]]],[11,"type_id","","",4649,[[],["typeid",3]]],[11,"from","","",4650,[[]]],[11,"borrow","","",4650,[[]]],[11,"borrow_mut","","",4650,[[]]],[11,"try_from","","",4650,[[],["result",4]]],[11,"into","","",4650,[[]]],[11,"try_into","","",4650,[[],["result",4]]],[11,"type_id","","",4650,[[],["typeid",3]]],[11,"from","","",4651,[[]]],[11,"borrow","","",4651,[[]]],[11,"borrow_mut","","",4651,[[]]],[11,"try_from","","",4651,[[],["result",4]]],[11,"into","","",4651,[[]]],[11,"try_into","","",4651,[[],["result",4]]],[11,"type_id","","",4651,[[],["typeid",3]]],[11,"from","","",4652,[[]]],[11,"borrow","","",4652,[[]]],[11,"borrow_mut","","",4652,[[]]],[11,"try_from","","",4652,[[],["result",4]]],[11,"into","","",4652,[[]]],[11,"try_into","","",4652,[[],["result",4]]],[11,"type_id","","",4652,[[],["typeid",3]]],[11,"from","atsamd51g::etm::itctrl","",4655,[[]]],[11,"borrow","","",4655,[[]]],[11,"borrow_mut","","",4655,[[]]],[11,"try_from","","",4655,[[],["result",4]]],[11,"into","","",4655,[[]]],[11,"try_into","","",4655,[[],["result",4]]],[11,"type_id","","",4655,[[],["typeid",3]]],[11,"from","atsamd51g::sys_tick","",4659,[[]]],[11,"borrow","","",4659,[[]]],[11,"borrow_mut","","",4659,[[]]],[11,"try_from","","",4659,[[],["result",4]]],[11,"into","","",4659,[[]]],[11,"try_into","","",4659,[[],["result",4]]],[11,"type_id","","",4659,[[],["typeid",3]]],[11,"from","atsamd51g::sys_tick::csr","",4664,[[]]],[11,"borrow","","",4664,[[]]],[11,"borrow_mut","","",4664,[[]]],[11,"try_from","","",4664,[[],["result",4]]],[11,"into","","",4664,[[]]],[11,"try_into","","",4664,[[],["result",4]]],[11,"type_id","","",4664,[[],["typeid",3]]],[11,"from","","",4666,[[]]],[11,"borrow","","",4666,[[]]],[11,"borrow_mut","","",4666,[[]]],[11,"try_from","","",4666,[[],["result",4]]],[11,"into","","",4666,[[]]],[11,"try_into","","",4666,[[],["result",4]]],[11,"type_id","","",4666,[[],["typeid",3]]],[11,"from","","",4668,[[]]],[11,"borrow","","",4668,[[]]],[11,"borrow_mut","","",4668,[[]]],[11,"try_from","","",4668,[[],["result",4]]],[11,"into","","",4668,[[]]],[11,"try_into","","",4668,[[],["result",4]]],[11,"type_id","","",4668,[[],["typeid",3]]],[11,"from","","",4669,[[]]],[11,"borrow","","",4669,[[]]],[11,"borrow_mut","","",4669,[[]]],[11,"try_from","","",4669,[[],["result",4]]],[11,"into","","",4669,[[]]],[11,"try_into","","",4669,[[],["result",4]]],[11,"type_id","","",4669,[[],["typeid",3]]],[11,"from","","",4660,[[]]],[11,"borrow","","",4660,[[]]],[11,"borrow_mut","","",4660,[[]]],[11,"try_from","","",4660,[[],["result",4]]],[11,"into","","",4660,[[]]],[11,"try_into","","",4660,[[],["result",4]]],[11,"type_id","","",4660,[[],["typeid",3]]],[11,"from","","",4661,[[]]],[11,"borrow","","",4661,[[]]],[11,"borrow_mut","","",4661,[[]]],[11,"try_from","","",4661,[[],["result",4]]],[11,"into","","",4661,[[]]],[11,"try_into","","",4661,[[],["result",4]]],[11,"type_id","","",4661,[[],["typeid",3]]],[11,"from","","",4662,[[]]],[11,"borrow","","",4662,[[]]],[11,"borrow_mut","","",4662,[[]]],[11,"try_from","","",4662,[[],["result",4]]],[11,"into","","",4662,[[]]],[11,"try_into","","",4662,[[],["result",4]]],[11,"type_id","","",4662,[[],["typeid",3]]],[11,"from","atsamd51g::sys_tick::rvr","",4672,[[]]],[11,"borrow","","",4672,[[]]],[11,"borrow_mut","","",4672,[[]]],[11,"try_from","","",4672,[[],["result",4]]],[11,"into","","",4672,[[]]],[11,"try_into","","",4672,[[],["result",4]]],[11,"type_id","","",4672,[[],["typeid",3]]],[11,"from","atsamd51g::sys_tick::cvr","",4675,[[]]],[11,"borrow","","",4675,[[]]],[11,"borrow_mut","","",4675,[[]]],[11,"try_from","","",4675,[[],["result",4]]],[11,"into","","",4675,[[]]],[11,"try_into","","",4675,[[],["result",4]]],[11,"type_id","","",4675,[[],["typeid",3]]],[11,"from","atsamd51g::sys_tick::calib","",4678,[[]]],[11,"borrow","","",4678,[[]]],[11,"borrow_mut","","",4678,[[]]],[11,"try_from","","",4678,[[],["result",4]]],[11,"into","","",4678,[[]]],[11,"try_into","","",4678,[[],["result",4]]],[11,"type_id","","",4678,[[],["typeid",3]]],[11,"from","","",4679,[[]]],[11,"borrow","","",4679,[[]]],[11,"borrow_mut","","",4679,[[]]],[11,"try_from","","",4679,[[],["result",4]]],[11,"into","","",4679,[[]]],[11,"try_into","","",4679,[[],["result",4]]],[11,"type_id","","",4679,[[],["typeid",3]]],[11,"from","atsamd51g::system_control","",4683,[[]]],[11,"borrow","","",4683,[[]]],[11,"borrow_mut","","",4683,[[]]],[11,"try_from","","",4683,[[],["result",4]]],[11,"into","","",4683,[[]]],[11,"try_into","","",4683,[[],["result",4]]],[11,"type_id","","",4683,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::actlr","",4685,[[]]],[11,"borrow","","",4685,[[]]],[11,"borrow_mut","","",4685,[[]]],[11,"try_from","","",4685,[[],["result",4]]],[11,"into","","",4685,[[]]],[11,"try_into","","",4685,[[],["result",4]]],[11,"type_id","","",4685,[[],["typeid",3]]],[11,"from","","",4686,[[]]],[11,"borrow","","",4686,[[]]],[11,"borrow_mut","","",4686,[[]]],[11,"try_from","","",4686,[[],["result",4]]],[11,"into","","",4686,[[]]],[11,"try_into","","",4686,[[],["result",4]]],[11,"type_id","","",4686,[[],["typeid",3]]],[11,"from","","",4687,[[]]],[11,"borrow","","",4687,[[]]],[11,"borrow_mut","","",4687,[[]]],[11,"try_from","","",4687,[[],["result",4]]],[11,"into","","",4687,[[]]],[11,"try_into","","",4687,[[],["result",4]]],[11,"type_id","","",4687,[[],["typeid",3]]],[11,"from","","",4688,[[]]],[11,"borrow","","",4688,[[]]],[11,"borrow_mut","","",4688,[[]]],[11,"try_from","","",4688,[[],["result",4]]],[11,"into","","",4688,[[]]],[11,"try_into","","",4688,[[],["result",4]]],[11,"type_id","","",4688,[[],["typeid",3]]],[11,"from","","",4689,[[]]],[11,"borrow","","",4689,[[]]],[11,"borrow_mut","","",4689,[[]]],[11,"try_from","","",4689,[[],["result",4]]],[11,"into","","",4689,[[]]],[11,"try_into","","",4689,[[],["result",4]]],[11,"type_id","","",4689,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::icsr","",4698,[[]]],[11,"borrow","","",4698,[[]]],[11,"borrow_mut","","",4698,[[]]],[11,"try_from","","",4698,[[],["result",4]]],[11,"into","","",4698,[[]]],[11,"try_into","","",4698,[[],["result",4]]],[11,"type_id","","",4698,[[],["typeid",3]]],[11,"from","","",4699,[[]]],[11,"borrow","","",4699,[[]]],[11,"borrow_mut","","",4699,[[]]],[11,"try_from","","",4699,[[],["result",4]]],[11,"into","","",4699,[[]]],[11,"try_into","","",4699,[[],["result",4]]],[11,"type_id","","",4699,[[],["typeid",3]]],[11,"from","","",4700,[[]]],[11,"borrow","","",4700,[[]]],[11,"borrow_mut","","",4700,[[]]],[11,"try_from","","",4700,[[],["result",4]]],[11,"into","","",4700,[[]]],[11,"try_into","","",4700,[[],["result",4]]],[11,"type_id","","",4700,[[],["typeid",3]]],[11,"from","","",4701,[[]]],[11,"borrow","","",4701,[[]]],[11,"borrow_mut","","",4701,[[]]],[11,"try_from","","",4701,[[],["result",4]]],[11,"into","","",4701,[[]]],[11,"try_into","","",4701,[[],["result",4]]],[11,"type_id","","",4701,[[],["typeid",3]]],[11,"from","","",4702,[[]]],[11,"borrow","","",4702,[[]]],[11,"borrow_mut","","",4702,[[]]],[11,"try_from","","",4702,[[],["result",4]]],[11,"into","","",4702,[[]]],[11,"try_into","","",4702,[[],["result",4]]],[11,"type_id","","",4702,[[],["typeid",3]]],[11,"from","","",4704,[[]]],[11,"borrow","","",4704,[[]]],[11,"borrow_mut","","",4704,[[]]],[11,"try_from","","",4704,[[],["result",4]]],[11,"into","","",4704,[[]]],[11,"try_into","","",4704,[[],["result",4]]],[11,"type_id","","",4704,[[],["typeid",3]]],[11,"from","","",4706,[[]]],[11,"borrow","","",4706,[[]]],[11,"borrow_mut","","",4706,[[]]],[11,"try_from","","",4706,[[],["result",4]]],[11,"into","","",4706,[[]]],[11,"try_into","","",4706,[[],["result",4]]],[11,"type_id","","",4706,[[],["typeid",3]]],[11,"from","","",4708,[[]]],[11,"borrow","","",4708,[[]]],[11,"borrow_mut","","",4708,[[]]],[11,"try_from","","",4708,[[],["result",4]]],[11,"into","","",4708,[[]]],[11,"try_into","","",4708,[[],["result",4]]],[11,"type_id","","",4708,[[],["typeid",3]]],[11,"from","","",4710,[[]]],[11,"borrow","","",4710,[[]]],[11,"borrow_mut","","",4710,[[]]],[11,"try_from","","",4710,[[],["result",4]]],[11,"into","","",4710,[[]]],[11,"try_into","","",4710,[[],["result",4]]],[11,"type_id","","",4710,[[],["typeid",3]]],[11,"from","","",4712,[[]]],[11,"borrow","","",4712,[[]]],[11,"borrow_mut","","",4712,[[]]],[11,"try_from","","",4712,[[],["result",4]]],[11,"into","","",4712,[[]]],[11,"try_into","","",4712,[[],["result",4]]],[11,"type_id","","",4712,[[],["typeid",3]]],[11,"from","","",4693,[[]]],[11,"borrow","","",4693,[[]]],[11,"borrow_mut","","",4693,[[]]],[11,"try_from","","",4693,[[],["result",4]]],[11,"into","","",4693,[[]]],[11,"try_into","","",4693,[[],["result",4]]],[11,"type_id","","",4693,[[],["typeid",3]]],[11,"from","","",4694,[[]]],[11,"borrow","","",4694,[[]]],[11,"borrow_mut","","",4694,[[]]],[11,"try_from","","",4694,[[],["result",4]]],[11,"into","","",4694,[[]]],[11,"try_into","","",4694,[[],["result",4]]],[11,"type_id","","",4694,[[],["typeid",3]]],[11,"from","","",4695,[[]]],[11,"borrow","","",4695,[[]]],[11,"borrow_mut","","",4695,[[]]],[11,"try_from","","",4695,[[],["result",4]]],[11,"into","","",4695,[[]]],[11,"try_into","","",4695,[[],["result",4]]],[11,"type_id","","",4695,[[],["typeid",3]]],[11,"from","","",4696,[[]]],[11,"borrow","","",4696,[[]]],[11,"borrow_mut","","",4696,[[]]],[11,"try_from","","",4696,[[],["result",4]]],[11,"into","","",4696,[[]]],[11,"try_into","","",4696,[[],["result",4]]],[11,"type_id","","",4696,[[],["typeid",3]]],[11,"from","","",4697,[[]]],[11,"borrow","","",4697,[[]]],[11,"borrow_mut","","",4697,[[]]],[11,"try_from","","",4697,[[],["result",4]]],[11,"into","","",4697,[[]]],[11,"try_into","","",4697,[[],["result",4]]],[11,"type_id","","",4697,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::vtor","",4715,[[]]],[11,"borrow","","",4715,[[]]],[11,"borrow_mut","","",4715,[[]]],[11,"try_from","","",4715,[[],["result",4]]],[11,"into","","",4715,[[]]],[11,"try_into","","",4715,[[],["result",4]]],[11,"type_id","","",4715,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::aircr","",4720,[[]]],[11,"borrow","","",4720,[[]]],[11,"borrow_mut","","",4720,[[]]],[11,"try_from","","",4720,[[],["result",4]]],[11,"into","","",4720,[[]]],[11,"try_into","","",4720,[[],["result",4]]],[11,"type_id","","",4720,[[],["typeid",3]]],[11,"from","","",4721,[[]]],[11,"borrow","","",4721,[[]]],[11,"borrow_mut","","",4721,[[]]],[11,"try_from","","",4721,[[],["result",4]]],[11,"into","","",4721,[[]]],[11,"try_into","","",4721,[[],["result",4]]],[11,"type_id","","",4721,[[],["typeid",3]]],[11,"from","","",4723,[[]]],[11,"borrow","","",4723,[[]]],[11,"borrow_mut","","",4723,[[]]],[11,"try_from","","",4723,[[],["result",4]]],[11,"into","","",4723,[[]]],[11,"try_into","","",4723,[[],["result",4]]],[11,"type_id","","",4723,[[],["typeid",3]]],[11,"from","","",4724,[[]]],[11,"borrow","","",4724,[[]]],[11,"borrow_mut","","",4724,[[]]],[11,"try_from","","",4724,[[],["result",4]]],[11,"into","","",4724,[[]]],[11,"try_into","","",4724,[[],["result",4]]],[11,"type_id","","",4724,[[],["typeid",3]]],[11,"from","","",4726,[[]]],[11,"borrow","","",4726,[[]]],[11,"borrow_mut","","",4726,[[]]],[11,"try_from","","",4726,[[],["result",4]]],[11,"into","","",4726,[[]]],[11,"try_into","","",4726,[[],["result",4]]],[11,"type_id","","",4726,[[],["typeid",3]]],[11,"from","","",4727,[[]]],[11,"borrow","","",4727,[[]]],[11,"borrow_mut","","",4727,[[]]],[11,"try_from","","",4727,[[],["result",4]]],[11,"into","","",4727,[[]]],[11,"try_into","","",4727,[[],["result",4]]],[11,"type_id","","",4727,[[],["typeid",3]]],[11,"from","","",4718,[[]]],[11,"borrow","","",4718,[[]]],[11,"borrow_mut","","",4718,[[]]],[11,"try_from","","",4718,[[],["result",4]]],[11,"into","","",4718,[[]]],[11,"try_into","","",4718,[[],["result",4]]],[11,"type_id","","",4718,[[],["typeid",3]]],[11,"from","","",4719,[[]]],[11,"borrow","","",4719,[[]]],[11,"borrow_mut","","",4719,[[]]],[11,"try_from","","",4719,[[],["result",4]]],[11,"into","","",4719,[[]]],[11,"try_into","","",4719,[[],["result",4]]],[11,"type_id","","",4719,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::scr","",4734,[[]]],[11,"borrow","","",4734,[[]]],[11,"borrow_mut","","",4734,[[]]],[11,"try_from","","",4734,[[],["result",4]]],[11,"into","","",4734,[[]]],[11,"try_into","","",4734,[[],["result",4]]],[11,"type_id","","",4734,[[],["typeid",3]]],[11,"from","","",4736,[[]]],[11,"borrow","","",4736,[[]]],[11,"borrow_mut","","",4736,[[]]],[11,"try_from","","",4736,[[],["result",4]]],[11,"into","","",4736,[[]]],[11,"try_into","","",4736,[[],["result",4]]],[11,"type_id","","",4736,[[],["typeid",3]]],[11,"from","","",4738,[[]]],[11,"borrow","","",4738,[[]]],[11,"borrow_mut","","",4738,[[]]],[11,"try_from","","",4738,[[],["result",4]]],[11,"into","","",4738,[[]]],[11,"try_into","","",4738,[[],["result",4]]],[11,"type_id","","",4738,[[],["typeid",3]]],[11,"from","","",4730,[[]]],[11,"borrow","","",4730,[[]]],[11,"borrow_mut","","",4730,[[]]],[11,"try_from","","",4730,[[],["result",4]]],[11,"into","","",4730,[[]]],[11,"try_into","","",4730,[[],["result",4]]],[11,"type_id","","",4730,[[],["typeid",3]]],[11,"from","","",4731,[[]]],[11,"borrow","","",4731,[[]]],[11,"borrow_mut","","",4731,[[]]],[11,"try_from","","",4731,[[],["result",4]]],[11,"into","","",4731,[[]]],[11,"try_into","","",4731,[[],["result",4]]],[11,"type_id","","",4731,[[],["typeid",3]]],[11,"from","","",4732,[[]]],[11,"borrow","","",4732,[[]]],[11,"borrow_mut","","",4732,[[]]],[11,"try_from","","",4732,[[],["result",4]]],[11,"into","","",4732,[[]]],[11,"try_into","","",4732,[[],["result",4]]],[11,"type_id","","",4732,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::ccr","",4743,[[]]],[11,"borrow","","",4743,[[]]],[11,"borrow_mut","","",4743,[[]]],[11,"try_from","","",4743,[[],["result",4]]],[11,"into","","",4743,[[]]],[11,"try_into","","",4743,[[],["result",4]]],[11,"type_id","","",4743,[[],["typeid",3]]],[11,"from","","",4744,[[]]],[11,"borrow","","",4744,[[]]],[11,"borrow_mut","","",4744,[[]]],[11,"try_from","","",4744,[[],["result",4]]],[11,"into","","",4744,[[]]],[11,"try_into","","",4744,[[],["result",4]]],[11,"type_id","","",4744,[[],["typeid",3]]],[11,"from","","",4746,[[]]],[11,"borrow","","",4746,[[]]],[11,"borrow_mut","","",4746,[[]]],[11,"try_from","","",4746,[[],["result",4]]],[11,"into","","",4746,[[]]],[11,"try_into","","",4746,[[],["result",4]]],[11,"type_id","","",4746,[[],["typeid",3]]],[11,"from","","",4747,[[]]],[11,"borrow","","",4747,[[]]],[11,"borrow_mut","","",4747,[[]]],[11,"try_from","","",4747,[[],["result",4]]],[11,"into","","",4747,[[]]],[11,"try_into","","",4747,[[],["result",4]]],[11,"type_id","","",4747,[[],["typeid",3]]],[11,"from","","",4748,[[]]],[11,"borrow","","",4748,[[]]],[11,"borrow_mut","","",4748,[[]]],[11,"try_from","","",4748,[[],["result",4]]],[11,"into","","",4748,[[]]],[11,"try_into","","",4748,[[],["result",4]]],[11,"type_id","","",4748,[[],["typeid",3]]],[11,"from","","",4750,[[]]],[11,"borrow","","",4750,[[]]],[11,"borrow_mut","","",4750,[[]]],[11,"try_from","","",4750,[[],["result",4]]],[11,"into","","",4750,[[]]],[11,"try_into","","",4750,[[],["result",4]]],[11,"type_id","","",4750,[[],["typeid",3]]],[11,"from","","",4741,[[]]],[11,"borrow","","",4741,[[]]],[11,"borrow_mut","","",4741,[[]]],[11,"try_from","","",4741,[[],["result",4]]],[11,"into","","",4741,[[]]],[11,"try_into","","",4741,[[],["result",4]]],[11,"type_id","","",4741,[[],["typeid",3]]],[11,"from","","",4742,[[]]],[11,"borrow","","",4742,[[]]],[11,"borrow_mut","","",4742,[[]]],[11,"try_from","","",4742,[[],["result",4]]],[11,"into","","",4742,[[]]],[11,"try_into","","",4742,[[],["result",4]]],[11,"type_id","","",4742,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::shpr1","",4753,[[]]],[11,"borrow","","",4753,[[]]],[11,"borrow_mut","","",4753,[[]]],[11,"try_from","","",4753,[[],["result",4]]],[11,"into","","",4753,[[]]],[11,"try_into","","",4753,[[],["result",4]]],[11,"type_id","","",4753,[[],["typeid",3]]],[11,"from","","",4754,[[]]],[11,"borrow","","",4754,[[]]],[11,"borrow_mut","","",4754,[[]]],[11,"try_from","","",4754,[[],["result",4]]],[11,"into","","",4754,[[]]],[11,"try_into","","",4754,[[],["result",4]]],[11,"type_id","","",4754,[[],["typeid",3]]],[11,"from","","",4755,[[]]],[11,"borrow","","",4755,[[]]],[11,"borrow_mut","","",4755,[[]]],[11,"try_from","","",4755,[[],["result",4]]],[11,"into","","",4755,[[]]],[11,"try_into","","",4755,[[],["result",4]]],[11,"type_id","","",4755,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::shpr2","",4758,[[]]],[11,"borrow","","",4758,[[]]],[11,"borrow_mut","","",4758,[[]]],[11,"try_from","","",4758,[[],["result",4]]],[11,"into","","",4758,[[]]],[11,"try_into","","",4758,[[],["result",4]]],[11,"type_id","","",4758,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::shpr3","",4761,[[]]],[11,"borrow","","",4761,[[]]],[11,"borrow_mut","","",4761,[[]]],[11,"try_from","","",4761,[[],["result",4]]],[11,"into","","",4761,[[]]],[11,"try_into","","",4761,[[],["result",4]]],[11,"type_id","","",4761,[[],["typeid",3]]],[11,"from","","",4762,[[]]],[11,"borrow","","",4762,[[]]],[11,"borrow_mut","","",4762,[[]]],[11,"try_from","","",4762,[[],["result",4]]],[11,"into","","",4762,[[]]],[11,"try_into","","",4762,[[],["result",4]]],[11,"type_id","","",4762,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::shcsr","",4765,[[]]],[11,"borrow","","",4765,[[]]],[11,"borrow_mut","","",4765,[[]]],[11,"try_from","","",4765,[[],["result",4]]],[11,"into","","",4765,[[]]],[11,"try_into","","",4765,[[],["result",4]]],[11,"type_id","","",4765,[[],["typeid",3]]],[11,"from","","",4766,[[]]],[11,"borrow","","",4766,[[]]],[11,"borrow_mut","","",4766,[[]]],[11,"try_from","","",4766,[[],["result",4]]],[11,"into","","",4766,[[]]],[11,"try_into","","",4766,[[],["result",4]]],[11,"type_id","","",4766,[[],["typeid",3]]],[11,"from","","",4767,[[]]],[11,"borrow","","",4767,[[]]],[11,"borrow_mut","","",4767,[[]]],[11,"try_from","","",4767,[[],["result",4]]],[11,"into","","",4767,[[]]],[11,"try_into","","",4767,[[],["result",4]]],[11,"type_id","","",4767,[[],["typeid",3]]],[11,"from","","",4768,[[]]],[11,"borrow","","",4768,[[]]],[11,"borrow_mut","","",4768,[[]]],[11,"try_from","","",4768,[[],["result",4]]],[11,"into","","",4768,[[]]],[11,"try_into","","",4768,[[],["result",4]]],[11,"type_id","","",4768,[[],["typeid",3]]],[11,"from","","",4769,[[]]],[11,"borrow","","",4769,[[]]],[11,"borrow_mut","","",4769,[[]]],[11,"try_from","","",4769,[[],["result",4]]],[11,"into","","",4769,[[]]],[11,"try_into","","",4769,[[],["result",4]]],[11,"type_id","","",4769,[[],["typeid",3]]],[11,"from","","",4770,[[]]],[11,"borrow","","",4770,[[]]],[11,"borrow_mut","","",4770,[[]]],[11,"try_from","","",4770,[[],["result",4]]],[11,"into","","",4770,[[]]],[11,"try_into","","",4770,[[],["result",4]]],[11,"type_id","","",4770,[[],["typeid",3]]],[11,"from","","",4771,[[]]],[11,"borrow","","",4771,[[]]],[11,"borrow_mut","","",4771,[[]]],[11,"try_from","","",4771,[[],["result",4]]],[11,"into","","",4771,[[]]],[11,"try_into","","",4771,[[],["result",4]]],[11,"type_id","","",4771,[[],["typeid",3]]],[11,"from","","",4772,[[]]],[11,"borrow","","",4772,[[]]],[11,"borrow_mut","","",4772,[[]]],[11,"try_from","","",4772,[[],["result",4]]],[11,"into","","",4772,[[]]],[11,"try_into","","",4772,[[],["result",4]]],[11,"type_id","","",4772,[[],["typeid",3]]],[11,"from","","",4773,[[]]],[11,"borrow","","",4773,[[]]],[11,"borrow_mut","","",4773,[[]]],[11,"try_from","","",4773,[[],["result",4]]],[11,"into","","",4773,[[]]],[11,"try_into","","",4773,[[],["result",4]]],[11,"type_id","","",4773,[[],["typeid",3]]],[11,"from","","",4774,[[]]],[11,"borrow","","",4774,[[]]],[11,"borrow_mut","","",4774,[[]]],[11,"try_from","","",4774,[[],["result",4]]],[11,"into","","",4774,[[]]],[11,"try_into","","",4774,[[],["result",4]]],[11,"type_id","","",4774,[[],["typeid",3]]],[11,"from","","",4775,[[]]],[11,"borrow","","",4775,[[]]],[11,"borrow_mut","","",4775,[[]]],[11,"try_from","","",4775,[[],["result",4]]],[11,"into","","",4775,[[]]],[11,"try_into","","",4775,[[],["result",4]]],[11,"type_id","","",4775,[[],["typeid",3]]],[11,"from","","",4776,[[]]],[11,"borrow","","",4776,[[]]],[11,"borrow_mut","","",4776,[[]]],[11,"try_from","","",4776,[[],["result",4]]],[11,"into","","",4776,[[]]],[11,"try_into","","",4776,[[],["result",4]]],[11,"type_id","","",4776,[[],["typeid",3]]],[11,"from","","",4777,[[]]],[11,"borrow","","",4777,[[]]],[11,"borrow_mut","","",4777,[[]]],[11,"try_from","","",4777,[[],["result",4]]],[11,"into","","",4777,[[]]],[11,"try_into","","",4777,[[],["result",4]]],[11,"type_id","","",4777,[[],["typeid",3]]],[11,"from","","",4778,[[]]],[11,"borrow","","",4778,[[]]],[11,"borrow_mut","","",4778,[[]]],[11,"try_from","","",4778,[[],["result",4]]],[11,"into","","",4778,[[]]],[11,"try_into","","",4778,[[],["result",4]]],[11,"type_id","","",4778,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::cfsr","",4781,[[]]],[11,"borrow","","",4781,[[]]],[11,"borrow_mut","","",4781,[[]]],[11,"try_from","","",4781,[[],["result",4]]],[11,"into","","",4781,[[]]],[11,"try_into","","",4781,[[],["result",4]]],[11,"type_id","","",4781,[[],["typeid",3]]],[11,"from","","",4782,[[]]],[11,"borrow","","",4782,[[]]],[11,"borrow_mut","","",4782,[[]]],[11,"try_from","","",4782,[[],["result",4]]],[11,"into","","",4782,[[]]],[11,"try_into","","",4782,[[],["result",4]]],[11,"type_id","","",4782,[[],["typeid",3]]],[11,"from","","",4783,[[]]],[11,"borrow","","",4783,[[]]],[11,"borrow_mut","","",4783,[[]]],[11,"try_from","","",4783,[[],["result",4]]],[11,"into","","",4783,[[]]],[11,"try_into","","",4783,[[],["result",4]]],[11,"type_id","","",4783,[[],["typeid",3]]],[11,"from","","",4784,[[]]],[11,"borrow","","",4784,[[]]],[11,"borrow_mut","","",4784,[[]]],[11,"try_from","","",4784,[[],["result",4]]],[11,"into","","",4784,[[]]],[11,"try_into","","",4784,[[],["result",4]]],[11,"type_id","","",4784,[[],["typeid",3]]],[11,"from","","",4785,[[]]],[11,"borrow","","",4785,[[]]],[11,"borrow_mut","","",4785,[[]]],[11,"try_from","","",4785,[[],["result",4]]],[11,"into","","",4785,[[]]],[11,"try_into","","",4785,[[],["result",4]]],[11,"type_id","","",4785,[[],["typeid",3]]],[11,"from","","",4786,[[]]],[11,"borrow","","",4786,[[]]],[11,"borrow_mut","","",4786,[[]]],[11,"try_from","","",4786,[[],["result",4]]],[11,"into","","",4786,[[]]],[11,"try_into","","",4786,[[],["result",4]]],[11,"type_id","","",4786,[[],["typeid",3]]],[11,"from","","",4787,[[]]],[11,"borrow","","",4787,[[]]],[11,"borrow_mut","","",4787,[[]]],[11,"try_from","","",4787,[[],["result",4]]],[11,"into","","",4787,[[]]],[11,"try_into","","",4787,[[],["result",4]]],[11,"type_id","","",4787,[[],["typeid",3]]],[11,"from","","",4788,[[]]],[11,"borrow","","",4788,[[]]],[11,"borrow_mut","","",4788,[[]]],[11,"try_from","","",4788,[[],["result",4]]],[11,"into","","",4788,[[]]],[11,"try_into","","",4788,[[],["result",4]]],[11,"type_id","","",4788,[[],["typeid",3]]],[11,"from","","",4789,[[]]],[11,"borrow","","",4789,[[]]],[11,"borrow_mut","","",4789,[[]]],[11,"try_from","","",4789,[[],["result",4]]],[11,"into","","",4789,[[]]],[11,"try_into","","",4789,[[],["result",4]]],[11,"type_id","","",4789,[[],["typeid",3]]],[11,"from","","",4790,[[]]],[11,"borrow","","",4790,[[]]],[11,"borrow_mut","","",4790,[[]]],[11,"try_from","","",4790,[[],["result",4]]],[11,"into","","",4790,[[]]],[11,"try_into","","",4790,[[],["result",4]]],[11,"type_id","","",4790,[[],["typeid",3]]],[11,"from","","",4791,[[]]],[11,"borrow","","",4791,[[]]],[11,"borrow_mut","","",4791,[[]]],[11,"try_from","","",4791,[[],["result",4]]],[11,"into","","",4791,[[]]],[11,"try_into","","",4791,[[],["result",4]]],[11,"type_id","","",4791,[[],["typeid",3]]],[11,"from","","",4792,[[]]],[11,"borrow","","",4792,[[]]],[11,"borrow_mut","","",4792,[[]]],[11,"try_from","","",4792,[[],["result",4]]],[11,"into","","",4792,[[]]],[11,"try_into","","",4792,[[],["result",4]]],[11,"type_id","","",4792,[[],["typeid",3]]],[11,"from","","",4793,[[]]],[11,"borrow","","",4793,[[]]],[11,"borrow_mut","","",4793,[[]]],[11,"try_from","","",4793,[[],["result",4]]],[11,"into","","",4793,[[]]],[11,"try_into","","",4793,[[],["result",4]]],[11,"type_id","","",4793,[[],["typeid",3]]],[11,"from","","",4794,[[]]],[11,"borrow","","",4794,[[]]],[11,"borrow_mut","","",4794,[[]]],[11,"try_from","","",4794,[[],["result",4]]],[11,"into","","",4794,[[]]],[11,"try_into","","",4794,[[],["result",4]]],[11,"type_id","","",4794,[[],["typeid",3]]],[11,"from","","",4795,[[]]],[11,"borrow","","",4795,[[]]],[11,"borrow_mut","","",4795,[[]]],[11,"try_from","","",4795,[[],["result",4]]],[11,"into","","",4795,[[]]],[11,"try_into","","",4795,[[],["result",4]]],[11,"type_id","","",4795,[[],["typeid",3]]],[11,"from","","",4796,[[]]],[11,"borrow","","",4796,[[]]],[11,"borrow_mut","","",4796,[[]]],[11,"try_from","","",4796,[[],["result",4]]],[11,"into","","",4796,[[]]],[11,"try_into","","",4796,[[],["result",4]]],[11,"type_id","","",4796,[[],["typeid",3]]],[11,"from","","",4797,[[]]],[11,"borrow","","",4797,[[]]],[11,"borrow_mut","","",4797,[[]]],[11,"try_from","","",4797,[[],["result",4]]],[11,"into","","",4797,[[]]],[11,"try_into","","",4797,[[],["result",4]]],[11,"type_id","","",4797,[[],["typeid",3]]],[11,"from","","",4798,[[]]],[11,"borrow","","",4798,[[]]],[11,"borrow_mut","","",4798,[[]]],[11,"try_from","","",4798,[[],["result",4]]],[11,"into","","",4798,[[]]],[11,"try_into","","",4798,[[],["result",4]]],[11,"type_id","","",4798,[[],["typeid",3]]],[11,"from","","",4799,[[]]],[11,"borrow","","",4799,[[]]],[11,"borrow_mut","","",4799,[[]]],[11,"try_from","","",4799,[[],["result",4]]],[11,"into","","",4799,[[]]],[11,"try_into","","",4799,[[],["result",4]]],[11,"type_id","","",4799,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::hfsr","",4802,[[]]],[11,"borrow","","",4802,[[]]],[11,"borrow_mut","","",4802,[[]]],[11,"try_from","","",4802,[[],["result",4]]],[11,"into","","",4802,[[]]],[11,"try_into","","",4802,[[],["result",4]]],[11,"type_id","","",4802,[[],["typeid",3]]],[11,"from","","",4803,[[]]],[11,"borrow","","",4803,[[]]],[11,"borrow_mut","","",4803,[[]]],[11,"try_from","","",4803,[[],["result",4]]],[11,"into","","",4803,[[]]],[11,"try_into","","",4803,[[],["result",4]]],[11,"type_id","","",4803,[[],["typeid",3]]],[11,"from","","",4804,[[]]],[11,"borrow","","",4804,[[]]],[11,"borrow_mut","","",4804,[[]]],[11,"try_from","","",4804,[[],["result",4]]],[11,"into","","",4804,[[]]],[11,"try_into","","",4804,[[],["result",4]]],[11,"type_id","","",4804,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::dfsr","",4807,[[]]],[11,"borrow","","",4807,[[]]],[11,"borrow_mut","","",4807,[[]]],[11,"try_from","","",4807,[[],["result",4]]],[11,"into","","",4807,[[]]],[11,"try_into","","",4807,[[],["result",4]]],[11,"type_id","","",4807,[[],["typeid",3]]],[11,"from","","",4808,[[]]],[11,"borrow","","",4808,[[]]],[11,"borrow_mut","","",4808,[[]]],[11,"try_from","","",4808,[[],["result",4]]],[11,"into","","",4808,[[]]],[11,"try_into","","",4808,[[],["result",4]]],[11,"type_id","","",4808,[[],["typeid",3]]],[11,"from","","",4809,[[]]],[11,"borrow","","",4809,[[]]],[11,"borrow_mut","","",4809,[[]]],[11,"try_from","","",4809,[[],["result",4]]],[11,"into","","",4809,[[]]],[11,"try_into","","",4809,[[],["result",4]]],[11,"type_id","","",4809,[[],["typeid",3]]],[11,"from","","",4810,[[]]],[11,"borrow","","",4810,[[]]],[11,"borrow_mut","","",4810,[[]]],[11,"try_from","","",4810,[[],["result",4]]],[11,"into","","",4810,[[]]],[11,"try_into","","",4810,[[],["result",4]]],[11,"type_id","","",4810,[[],["typeid",3]]],[11,"from","","",4811,[[]]],[11,"borrow","","",4811,[[]]],[11,"borrow_mut","","",4811,[[]]],[11,"try_from","","",4811,[[],["result",4]]],[11,"into","","",4811,[[]]],[11,"try_into","","",4811,[[],["result",4]]],[11,"type_id","","",4811,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::mmfar","",4814,[[]]],[11,"borrow","","",4814,[[]]],[11,"borrow_mut","","",4814,[[]]],[11,"try_from","","",4814,[[],["result",4]]],[11,"into","","",4814,[[]]],[11,"try_into","","",4814,[[],["result",4]]],[11,"type_id","","",4814,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::bfar","",4817,[[]]],[11,"borrow","","",4817,[[]]],[11,"borrow_mut","","",4817,[[]]],[11,"try_from","","",4817,[[],["result",4]]],[11,"into","","",4817,[[]]],[11,"try_into","","",4817,[[],["result",4]]],[11,"type_id","","",4817,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::afsr","",4820,[[]]],[11,"borrow","","",4820,[[]]],[11,"borrow_mut","","",4820,[[]]],[11,"try_from","","",4820,[[],["result",4]]],[11,"into","","",4820,[[]]],[11,"try_into","","",4820,[[],["result",4]]],[11,"type_id","","",4820,[[],["typeid",3]]],[11,"from","atsamd51g::system_control::cpacr","",4826,[[]]],[11,"borrow","","",4826,[[]]],[11,"borrow_mut","","",4826,[[]]],[11,"try_from","","",4826,[[],["result",4]]],[11,"into","","",4826,[[]]],[11,"try_into","","",4826,[[],["result",4]]],[11,"type_id","","",4826,[[],["typeid",3]]],[11,"from","","",4828,[[]]],[11,"borrow","","",4828,[[]]],[11,"borrow_mut","","",4828,[[]]],[11,"try_from","","",4828,[[],["result",4]]],[11,"into","","",4828,[[]]],[11,"try_into","","",4828,[[],["result",4]]],[11,"type_id","","",4828,[[],["typeid",3]]],[11,"from","","",4823,[[]]],[11,"borrow","","",4823,[[]]],[11,"borrow_mut","","",4823,[[]]],[11,"try_from","","",4823,[[],["result",4]]],[11,"into","","",4823,[[]]],[11,"try_into","","",4823,[[],["result",4]]],[11,"type_id","","",4823,[[],["typeid",3]]],[11,"from","","",4824,[[]]],[11,"borrow","","",4824,[[]]],[11,"borrow_mut","","",4824,[[]]],[11,"try_from","","",4824,[[],["result",4]]],[11,"into","","",4824,[[]]],[11,"try_into","","",4824,[[],["result",4]]],[11,"type_id","","",4824,[[],["typeid",3]]],[11,"from","atsamd51g::tpi","",4831,[[]]],[11,"borrow","","",4831,[[]]],[11,"borrow_mut","","",4831,[[]]],[11,"try_from","","",4831,[[],["result",4]]],[11,"into","","",4831,[[]]],[11,"try_into","","",4831,[[],["result",4]]],[11,"type_id","","",4831,[[],["typeid",3]]],[11,"from","atsamd51g::tpi::acpr","",4832,[[]]],[11,"borrow","","",4832,[[]]],[11,"borrow_mut","","",4832,[[]]],[11,"try_from","","",4832,[[],["result",4]]],[11,"into","","",4832,[[]]],[11,"try_into","","",4832,[[],["result",4]]],[11,"type_id","","",4832,[[],["typeid",3]]],[11,"from","atsamd51g::tpi::sppr","",4835,[[]]],[11,"borrow","","",4835,[[]]],[11,"borrow_mut","","",4835,[[]]],[11,"try_from","","",4835,[[],["result",4]]],[11,"into","","",4835,[[]]],[11,"try_into","","",4835,[[],["result",4]]],[11,"type_id","","",4835,[[],["typeid",3]]],[11,"from","atsamd51g::tpi::ffcr","",4839,[[]]],[11,"borrow","","",4839,[[]]],[11,"borrow_mut","","",4839,[[]]],[11,"try_from","","",4839,[[],["result",4]]],[11,"into","","",4839,[[]]],[11,"try_into","","",4839,[[],["result",4]]],[11,"type_id","","",4839,[[],["typeid",3]]],[11,"from","","",4840,[[]]],[11,"borrow","","",4840,[[]]],[11,"borrow_mut","","",4840,[[]]],[11,"try_from","","",4840,[[],["result",4]]],[11,"into","","",4840,[[]]],[11,"try_into","","",4840,[[],["result",4]]],[11,"type_id","","",4840,[[],["typeid",3]]],[11,"from","atsamd51g::tpi::itctrl","",4848,[[]]],[11,"borrow","","",4848,[[]]],[11,"borrow_mut","","",4848,[[]]],[11,"try_from","","",4848,[[],["result",4]]],[11,"into","","",4848,[[]]],[11,"try_into","","",4848,[[],["result",4]]],[11,"type_id","","",4848,[[],["typeid",3]]],[11,"deref","atsamd51g","",4905,[[]]],[11,"deref","","",4915,[[]]],[11,"deref","","",4909,[[]]],[11,"deref","","",4904,[[]]],[11,"deref","","",4908,[[]]],[11,"deref","","",4910,[[]]],[11,"deref","","",4913,[[]]],[11,"deref","","",4914,[[]]],[11,"deref","","",4912,[[]]],[11,"deref","","",4911,[[]]],[11,"deref","","",4907,[[]]],[11,"deref","","",4906,[[]]],[11,"deref_mut","","",4910,[[]]],[11,"reset_value","","",4916,[[]]],[11,"reset_value","","",4917,[[]]],[11,"reset_value","","",4918,[[]]],[11,"reset_value","","",4919,[[]]],[11,"reset_value","","",4920,[[]]],[11,"reset_value","","",4921,[[]]],[11,"reset_value","","",4922,[[]]],[11,"reset_value","","",4923,[[]]],[11,"reset_value","","",4924,[[]]],[11,"reset_value","","",4925,[[]]],[11,"reset_value","","",4926,[[]]],[11,"reset_value","","",4927,[[]]],[11,"reset_value","","",4928,[[]]],[11,"reset_value","","",4929,[[]]],[11,"reset_value","","",4930,[[]]],[11,"reset_value","","",4931,[[]]],[11,"reset_value","","",4932,[[]]],[11,"reset_value","","",4933,[[]]],[11,"reset_value","","",4934,[[]]],[11,"reset_value","","",4935,[[]]],[11,"reset_value","","",4936,[[]]],[11,"reset_value","","",4937,[[]]],[11,"reset_value","","",4938,[[]]],[11,"reset_value","","",4939,[[]]],[11,"reset_value","","",4940,[[]]],[11,"reset_value","","",4941,[[]]],[11,"reset_value","","",4942,[[]]],[11,"reset_value","","",4943,[[]]],[11,"reset_value","","",4944,[[]]],[11,"reset_value","","",4945,[[]]],[11,"reset_value","","",4946,[[]]],[11,"reset_value","","",4947,[[]]],[11,"reset_value","","",4948,[[]]],[11,"reset_value","","",4949,[[]]],[11,"reset_value","","",4950,[[]]],[11,"reset_value","","",4951,[[]]],[11,"reset_value","","",4952,[[]]],[11,"reset_value","","",4953,[[]]],[11,"reset_value","","",4954,[[]]],[11,"reset_value","","",4955,[[]]],[11,"reset_value","","",4956,[[]]],[11,"reset_value","","",4957,[[]]],[11,"reset_value","","",4958,[[]]],[11,"reset_value","","",4959,[[]]],[11,"reset_value","","",4960,[[]]],[11,"reset_value","","",4961,[[]]],[11,"reset_value","","",4962,[[]]],[11,"reset_value","","",4963,[[]]],[11,"reset_value","","",4964,[[]]],[11,"reset_value","","",4965,[[]]],[11,"reset_value","","",4966,[[]]],[11,"reset_value","","",4967,[[]]],[11,"reset_value","","",4968,[[]]],[11,"reset_value","","",4969,[[]]],[11,"reset_value","","",4970,[[]]],[11,"reset_value","","",4971,[[]]],[11,"reset_value","","",4972,[[]]],[11,"reset_value","","",4973,[[]]],[11,"reset_value","","",4974,[[]]],[11,"reset_value","","",4975,[[]]],[11,"reset_value","","",4976,[[]]],[11,"reset_value","","",4977,[[]]],[11,"reset_value","","",4978,[[]]],[11,"reset_value","","",4979,[[]]],[11,"reset_value","","",4980,[[]]],[11,"reset_value","","",4981,[[]]],[11,"reset_value","","",4982,[[]]],[11,"reset_value","","",4983,[[]]],[11,"reset_value","","",4984,[[]]],[11,"reset_value","","",4985,[[]]],[11,"reset_value","","",4986,[[]]],[11,"reset_value","","",4987,[[]]],[11,"reset_value","","",4988,[[]]],[11,"reset_value","","",4989,[[]]],[11,"reset_value","","",4990,[[]]],[11,"reset_value","","",4991,[[]]],[11,"reset_value","","",4992,[[]]],[11,"reset_value","","",4993,[[]]],[11,"reset_value","","",4994,[[]]],[11,"reset_value","","",4995,[[]]],[11,"reset_value","","",4996,[[]]],[11,"reset_value","","",4997,[[]]],[11,"reset_value","","",4998,[[]]],[11,"reset_value","","",4999,[[]]],[11,"reset_value","","",5000,[[]]],[11,"reset_value","","",5001,[[]]],[11,"reset_value","","",5002,[[]]],[11,"reset_value","","",5003,[[]]],[11,"reset_value","","",5004,[[]]],[11,"reset_value","","",5005,[[]]],[11,"reset_value","","",5006,[[]]],[11,"reset_value","","",5007,[[]]],[11,"reset_value","","",5008,[[]]],[11,"reset_value","","",5009,[[]]],[11,"reset_value","","",5010,[[]]],[11,"reset_value","","",5011,[[]]],[11,"reset_value","","",5012,[[]]],[11,"reset_value","","",5013,[[]]],[11,"reset_value","","",5014,[[]]],[11,"reset_value","","",5015,[[]]],[11,"reset_value","","",5016,[[]]],[11,"reset_value","","",5017,[[]]],[11,"reset_value","","",5018,[[]]],[11,"reset_value","","",5019,[[]]],[11,"reset_value","","",5020,[[]]],[11,"reset_value","","",5021,[[]]],[11,"reset_value","","",5022,[[]]],[11,"reset_value","","",5023,[[]]],[11,"reset_value","","",5024,[[]]],[11,"reset_value","","",5025,[[]]],[11,"reset_value","","",5026,[[]]],[11,"reset_value","","",5027,[[]]],[11,"reset_value","","",5028,[[]]],[11,"reset_value","","",5029,[[]]],[11,"reset_value","","",5030,[[]]],[11,"reset_value","","",5031,[[]]],[11,"reset_value","","",5032,[[]]],[11,"reset_value","","",5033,[[]]],[11,"reset_value","","",5034,[[]]],[11,"reset_value","","",5035,[[]]],[11,"reset_value","","",5036,[[]]],[11,"reset_value","","",5037,[[]]],[11,"reset_value","","",5038,[[]]],[11,"reset_value","","",5039,[[]]],[11,"reset_value","","",5040,[[]]],[11,"reset_value","","",5041,[[]]],[11,"reset_value","","",5042,[[]]],[11,"reset_value","","",5043,[[]]],[11,"reset_value","","",5044,[[]]],[11,"reset_value","","",5045,[[]]],[11,"reset_value","","",5046,[[]]],[11,"reset_value","","",5047,[[]]],[11,"reset_value","","",5048,[[]]],[11,"reset_value","","",5049,[[]]],[11,"reset_value","","",5050,[[]]],[11,"reset_value","","",5051,[[]]],[11,"reset_value","","",5052,[[]]],[11,"reset_value","","",5053,[[]]],[11,"reset_value","","",5054,[[]]],[11,"reset_value","","",5055,[[]]],[11,"reset_value","","",5056,[[]]],[11,"reset_value","","",5057,[[]]],[11,"reset_value","","",5058,[[]]],[11,"reset_value","","",5059,[[]]],[11,"reset_value","","",5060,[[]]],[11,"reset_value","","",5061,[[]]],[11,"reset_value","","",5062,[[]]],[11,"reset_value","","",5063,[[]]],[11,"reset_value","","",5064,[[]]],[11,"reset_value","","",5065,[[]]],[11,"reset_value","","",5066,[[]]],[11,"reset_value","","",5067,[[]]],[11,"reset_value","","",5068,[[]]],[11,"reset_value","","",5069,[[]]],[11,"reset_value","","",5070,[[]]],[11,"reset_value","","",5071,[[]]],[11,"reset_value","","",5072,[[]]],[11,"reset_value","","",5073,[[]]],[11,"reset_value","","",5074,[[]]],[11,"reset_value","","",5075,[[]]],[11,"reset_value","","",5076,[[]]],[11,"reset_value","","",5077,[[]]],[11,"reset_value","","",5078,[[]]],[11,"reset_value","","",5079,[[]]],[11,"reset_value","","",5080,[[]]],[11,"reset_value","","",5081,[[]]],[11,"reset_value","","",5082,[[]]],[11,"reset_value","","",5083,[[]]],[11,"reset_value","","",5084,[[]]],[11,"reset_value","","",5085,[[]]],[11,"reset_value","","",5086,[[]]],[11,"reset_value","","",5087,[[]]],[11,"reset_value","","",5088,[[]]],[11,"reset_value","","",5089,[[]]],[11,"reset_value","","",5090,[[]]],[11,"reset_value","","",5091,[[]]],[11,"reset_value","","",5092,[[]]],[11,"reset_value","","",5093,[[]]],[11,"reset_value","","",5094,[[]]],[11,"reset_value","","",5095,[[]]],[11,"reset_value","","",5096,[[]]],[11,"reset_value","","",5097,[[]]],[11,"reset_value","","",5098,[[]]],[11,"reset_value","","",5099,[[]]],[11,"reset_value","","",5100,[[]]],[11,"reset_value","","",5101,[[]]],[11,"reset_value","","",5102,[[]]],[11,"reset_value","","",5103,[[]]],[11,"reset_value","","",5104,[[]]],[11,"reset_value","","",5105,[[]]],[11,"reset_value","","",5106,[[]]],[11,"reset_value","","",5107,[[]]],[11,"reset_value","","",5108,[[]]],[11,"reset_value","","",5109,[[]]],[11,"reset_value","","",5110,[[]]],[11,"reset_value","","",5111,[[]]],[11,"reset_value","","",5112,[[]]],[11,"reset_value","","",5113,[[]]],[11,"reset_value","","",5114,[[]]],[11,"reset_value","","",5115,[[]]],[11,"reset_value","","",5116,[[]]],[11,"reset_value","","",5117,[[]]],[11,"reset_value","","",5118,[[]]],[11,"reset_value","","",5119,[[]]],[11,"reset_value","","",5120,[[]]],[11,"reset_value","","",5121,[[]]],[11,"reset_value","","",5122,[[]]],[11,"reset_value","","",5123,[[]]],[11,"reset_value","","",5124,[[]]],[11,"reset_value","","",5125,[[]]],[11,"reset_value","","",5126,[[]]],[11,"reset_value","","",5127,[[]]],[11,"reset_value","","",5128,[[]]],[11,"reset_value","","",5129,[[]]],[11,"reset_value","","",5130,[[]]],[11,"reset_value","","",5131,[[]]],[11,"reset_value","","",5132,[[]]],[11,"reset_value","","",5133,[[]]],[11,"reset_value","","",5134,[[]]],[11,"reset_value","","",5135,[[]]],[11,"reset_value","","",5136,[[]]],[11,"reset_value","","",5137,[[]]],[11,"reset_value","","",5138,[[]]],[11,"reset_value","","",5139,[[]]],[11,"reset_value","","",5140,[[]]],[11,"reset_value","","",5141,[[]]],[11,"reset_value","","",5142,[[]]],[11,"reset_value","","",5143,[[]]],[11,"reset_value","","",5144,[[]]],[11,"reset_value","","",5145,[[]]],[11,"reset_value","","",5146,[[]]],[11,"reset_value","","",5147,[[]]],[11,"reset_value","","",5148,[[]]],[11,"reset_value","","",5149,[[]]],[11,"reset_value","","",5150,[[]]],[11,"reset_value","","",5151,[[]]],[11,"reset_value","","",5152,[[]]],[11,"reset_value","","",5153,[[]]],[11,"reset_value","","",5154,[[]]],[11,"reset_value","","",5155,[[]]],[11,"reset_value","","",5156,[[]]],[11,"reset_value","","",5157,[[]]],[11,"reset_value","","",5158,[[]]],[11,"reset_value","","",5159,[[]]],[11,"reset_value","","",5160,[[]]],[11,"reset_value","","",5161,[[]]],[11,"reset_value","","",5162,[[]]],[11,"reset_value","","",5163,[[]]],[11,"reset_value","","",5164,[[]]],[11,"reset_value","","",5165,[[]]],[11,"reset_value","","",5166,[[]]],[11,"reset_value","","",5167,[[]]],[11,"reset_value","","",5168,[[]]],[11,"reset_value","","",5169,[[]]],[11,"reset_value","","",5170,[[]]],[11,"reset_value","","",5171,[[]]],[11,"reset_value","","",5172,[[]]],[11,"reset_value","","",5173,[[]]],[11,"reset_value","","",5174,[[]]],[11,"reset_value","","",5175,[[]]],[11,"reset_value","","",5176,[[]]],[11,"reset_value","","",5177,[[]]],[11,"reset_value","","",5178,[[]]],[11,"reset_value","","",5179,[[]]],[11,"reset_value","","",5180,[[]]],[11,"reset_value","","",5181,[[]]],[11,"reset_value","","",5182,[[]]],[11,"reset_value","","",5183,[[]]],[11,"reset_value","","",5184,[[]]],[11,"reset_value","","",5185,[[]]],[11,"reset_value","","",5186,[[]]],[11,"reset_value","","",5187,[[]]],[11,"reset_value","","",5188,[[]]],[11,"reset_value","","",5189,[[]]],[11,"reset_value","","",5190,[[]]],[11,"reset_value","","",5191,[[]]],[11,"reset_value","","",5192,[[]]],[11,"reset_value","","",5193,[[]]],[11,"reset_value","","",5194,[[]]],[11,"reset_value","","",5195,[[]]],[11,"reset_value","","",5196,[[]]],[11,"reset_value","","",5197,[[]]],[11,"reset_value","","",5198,[[]]],[11,"reset_value","","",5199,[[]]],[11,"reset_value","","",5200,[[]]],[11,"reset_value","","",5201,[[]]],[11,"reset_value","","",5202,[[]]],[11,"reset_value","","",5203,[[]]],[11,"reset_value","","",5204,[[]]],[11,"reset_value","","",5205,[[]]],[11,"reset_value","","",5206,[[]]],[11,"reset_value","","",5207,[[]]],[11,"reset_value","","",5208,[[]]],[11,"reset_value","","",5209,[[]]],[11,"reset_value","","",5210,[[]]],[11,"reset_value","","",5211,[[]]],[11,"reset_value","","",5212,[[]]],[11,"reset_value","","",5213,[[]]],[11,"reset_value","","",5214,[[]]],[11,"reset_value","","",5215,[[]]],[11,"reset_value","","",5216,[[]]],[11,"reset_value","","",5217,[[]]],[11,"reset_value","","",5218,[[]]],[11,"reset_value","","",5219,[[]]],[11,"reset_value","","",5220,[[]]],[11,"reset_value","","",5221,[[]]],[11,"reset_value","","",5222,[[]]],[11,"reset_value","","",5223,[[]]],[11,"reset_value","","",5224,[[]]],[11,"reset_value","","",5225,[[]]],[11,"reset_value","","",5226,[[]]],[11,"reset_value","","",5227,[[]]],[11,"reset_value","","",5228,[[]]],[11,"reset_value","","",5229,[[]]],[11,"reset_value","","",5230,[[]]],[11,"reset_value","","",5231,[[]]],[11,"reset_value","","",5232,[[]]],[11,"reset_value","","",5233,[[]]],[11,"reset_value","","",5234,[[]]],[11,"reset_value","","",5235,[[]]],[11,"reset_value","","",5236,[[]]],[11,"reset_value","","",5237,[[]]],[11,"reset_value","","",5238,[[]]],[11,"reset_value","","",5239,[[]]],[11,"reset_value","","",5240,[[]]],[11,"reset_value","","",5241,[[]]],[11,"reset_value","","",5242,[[]]],[11,"reset_value","","",5243,[[]]],[11,"reset_value","","",5244,[[]]],[11,"reset_value","","",5245,[[]]],[11,"reset_value","","",5246,[[]]],[11,"reset_value","","",5247,[[]]],[11,"reset_value","","",5248,[[]]],[11,"reset_value","","",5249,[[]]],[11,"reset_value","","",5250,[[]]],[11,"reset_value","","",5251,[[]]],[11,"reset_value","","",5252,[[]]],[11,"reset_value","","",5253,[[]]],[11,"reset_value","","",5254,[[]]],[11,"reset_value","","",5255,[[]]],[11,"reset_value","","",5256,[[]]],[11,"reset_value","","",5257,[[]]],[11,"reset_value","","",5258,[[]]],[11,"reset_value","","",5259,[[]]],[11,"reset_value","","",5260,[[]]],[11,"reset_value","","",5261,[[]]],[11,"reset_value","","",5262,[[]]],[11,"reset_value","","",5263,[[]]],[11,"reset_value","","",5264,[[]]],[11,"reset_value","","",5265,[[]]],[11,"reset_value","","",5266,[[]]],[11,"reset_value","","",5267,[[]]],[11,"reset_value","","",5268,[[]]],[11,"reset_value","","",5269,[[]]],[11,"reset_value","","",5270,[[]]],[11,"reset_value","","",5271,[[]]],[11,"reset_value","","",5272,[[]]],[11,"reset_value","","",5273,[[]]],[11,"reset_value","","",5274,[[]]],[11,"reset_value","","",5275,[[]]],[11,"reset_value","","",5276,[[]]],[11,"reset_value","","",5277,[[]]],[11,"reset_value","","",5278,[[]]],[11,"reset_value","","",5279,[[]]],[11,"reset_value","","",5280,[[]]],[11,"reset_value","","",5281,[[]]],[11,"reset_value","","",5282,[[]]],[11,"reset_value","","",5283,[[]]],[11,"reset_value","","",5284,[[]]],[11,"reset_value","","",5285,[[]]],[11,"reset_value","","",5286,[[]]],[11,"reset_value","","",5287,[[]]],[11,"reset_value","","",5288,[[]]],[11,"reset_value","","",5289,[[]]],[11,"reset_value","","",5290,[[]]],[11,"reset_value","","",5291,[[]]],[11,"reset_value","","",5292,[[]]],[11,"reset_value","","",5293,[[]]],[11,"reset_value","","",5294,[[]]],[11,"reset_value","","",5295,[[]]],[11,"reset_value","","",5296,[[]]],[11,"reset_value","","",5297,[[]]],[11,"reset_value","","",5298,[[]]],[11,"reset_value","","",5299,[[]]],[11,"reset_value","","",5300,[[]]],[11,"reset_value","","",5301,[[]]],[11,"reset_value","","",5302,[[]]],[11,"reset_value","","",5303,[[]]],[11,"reset_value","","",5304,[[]]],[11,"reset_value","","",5305,[[]]],[11,"reset_value","","",5306,[[]]],[11,"reset_value","","",5307,[[]]],[11,"reset_value","","",5308,[[]]],[11,"reset_value","","",5309,[[]]],[11,"reset_value","","",5310,[[]]],[11,"reset_value","","",5311,[[]]],[11,"reset_value","","",5312,[[]]],[11,"reset_value","","",5313,[[]]],[11,"reset_value","","",5314,[[]]],[11,"reset_value","","",5315,[[]]],[11,"reset_value","","",5316,[[]]],[11,"reset_value","","",5317,[[]]],[11,"reset_value","","",5318,[[]]],[11,"reset_value","","",5319,[[]]],[11,"reset_value","","",5320,[[]]],[11,"reset_value","","",5321,[[]]],[11,"reset_value","","",5322,[[]]],[11,"reset_value","","",5323,[[]]],[11,"reset_value","","",5324,[[]]],[11,"reset_value","","",5325,[[]]],[11,"reset_value","","",5326,[[]]],[11,"reset_value","","",5327,[[]]],[11,"reset_value","","",5328,[[]]],[11,"reset_value","","",5329,[[]]],[11,"reset_value","","",5330,[[]]],[11,"reset_value","","",5331,[[]]],[11,"reset_value","","",5332,[[]]],[11,"reset_value","","",5333,[[]]],[11,"reset_value","","",5334,[[]]],[11,"reset_value","","",5335,[[]]],[11,"reset_value","","",5336,[[]]],[11,"reset_value","","",5337,[[]]],[11,"reset_value","","",5338,[[]]],[11,"reset_value","","",5339,[[]]],[11,"reset_value","","",5340,[[]]],[11,"reset_value","","",5341,[[]]],[11,"reset_value","","",5342,[[]]],[11,"reset_value","","",5343,[[]]],[11,"reset_value","","",5344,[[]]],[11,"reset_value","","",5345,[[]]],[11,"reset_value","","",5346,[[]]],[11,"reset_value","","",5347,[[]]],[11,"reset_value","","",5348,[[]]],[11,"reset_value","","",5349,[[]]],[11,"reset_value","","",5350,[[]]],[11,"reset_value","","",5351,[[]]],[11,"reset_value","","",5352,[[]]],[11,"reset_value","","",5353,[[]]],[11,"reset_value","","",5354,[[]]],[11,"reset_value","","",5355,[[]]],[11,"reset_value","","",5356,[[]]],[11,"reset_value","","",5357,[[]]],[11,"reset_value","","",5358,[[]]],[11,"reset_value","","",5359,[[]]],[11,"reset_value","","",5360,[[]]],[11,"reset_value","","",5361,[[]]],[11,"reset_value","","",5362,[[]]],[11,"reset_value","","",5363,[[]]],[11,"reset_value","","",5364,[[]]],[11,"reset_value","","",5365,[[]]],[11,"reset_value","","",5366,[[]]],[11,"reset_value","","",5367,[[]]],[11,"reset_value","","",5368,[[]]],[11,"reset_value","","",5369,[[]]],[11,"reset_value","","",5370,[[]]],[11,"reset_value","","",5371,[[]]],[11,"reset_value","","",5372,[[]]],[11,"reset_value","","",5373,[[]]],[11,"reset_value","","",5374,[[]]],[11,"reset_value","","",5375,[[]]],[11,"reset_value","","",5376,[[]]],[11,"reset_value","","",5377,[[]]],[11,"reset_value","","",5378,[[]]],[11,"reset_value","","",5379,[[]]],[11,"reset_value","","",5380,[[]]],[11,"reset_value","","",5381,[[]]],[11,"reset_value","","",5382,[[]]],[11,"reset_value","","",5383,[[]]],[11,"reset_value","","",5384,[[]]],[11,"reset_value","","",5385,[[]]],[11,"reset_value","","",5386,[[]]],[11,"reset_value","","",5387,[[]]],[11,"reset_value","","",5388,[[]]],[11,"reset_value","","",5389,[[]]],[11,"reset_value","","",5390,[[]]],[11,"reset_value","","",5391,[[]]],[11,"reset_value","","",5392,[[]]],[11,"reset_value","","",5393,[[]]],[11,"reset_value","","",5394,[[]]],[11,"reset_value","","",5395,[[]]],[11,"reset_value","","",5396,[[]]],[11,"reset_value","","",5397,[[]]],[11,"reset_value","","",5398,[[]]],[11,"reset_value","","",5399,[[]]],[11,"reset_value","","",5400,[[]]],[11,"reset_value","","",5401,[[]]],[11,"reset_value","","",5402,[[]]],[11,"reset_value","","",5403,[[]]],[11,"reset_value","","",5404,[[]]],[11,"reset_value","","",5405,[[]]],[11,"reset_value","","",5406,[[]]],[11,"reset_value","","",5407,[[]]],[11,"reset_value","","",5408,[[]]],[11,"reset_value","","",5409,[[]]],[11,"reset_value","","",5410,[[]]],[11,"reset_value","","",5411,[[]]],[11,"reset_value","","",5412,[[]]],[11,"reset_value","","",5413,[[]]],[11,"reset_value","","",5414,[[]]],[11,"reset_value","","",5415,[[]]],[11,"reset_value","","",5416,[[]]],[11,"reset_value","","",5417,[[]]],[11,"reset_value","","",5418,[[]]],[11,"reset_value","","",5419,[[]]],[11,"reset_value","","",5420,[[]]],[11,"reset_value","","",5421,[[]]],[11,"reset_value","","",5422,[[]]],[11,"reset_value","","",5423,[[]]],[11,"reset_value","","",5424,[[]]],[11,"reset_value","","",5425,[[]]],[11,"reset_value","","",5426,[[]]],[11,"reset_value","","",5427,[[]]],[11,"reset_value","","",5428,[[]]],[11,"reset_value","","",5429,[[]]],[11,"reset_value","","",5430,[[]]],[11,"reset_value","","",5431,[[]]],[11,"reset_value","","",5432,[[]]],[11,"reset_value","","",5433,[[]]],[11,"reset_value","","",5434,[[]]],[11,"reset_value","","",5435,[[]]],[11,"reset_value","","",5436,[[]]],[11,"reset_value","","",5437,[[]]],[11,"reset_value","","",5438,[[]]],[11,"reset_value","","",5439,[[]]],[11,"reset_value","","",5440,[[]]],[11,"reset_value","","",5441,[[]]],[11,"reset_value","","",5442,[[]]],[11,"reset_value","","",5443,[[]]],[11,"reset_value","","",5444,[[]]],[11,"reset_value","","",5445,[[]]],[11,"reset_value","","",5446,[[]]],[11,"reset_value","","",5447,[[]]],[11,"reset_value","","",5448,[[]]],[11,"reset_value","","",5449,[[]]],[11,"reset_value","","",5450,[[]]],[11,"reset_value","","",5451,[[]]],[11,"reset_value","","",5452,[[]]],[11,"reset_value","","",5453,[[]]],[11,"reset_value","","",5454,[[]]],[11,"reset_value","","",5455,[[]]],[11,"reset_value","","",5456,[[]]],[11,"reset_value","","",5457,[[]]],[11,"reset_value","","",5458,[[]]],[11,"reset_value","","",5459,[[]]],[11,"reset_value","","",5460,[[]]],[11,"reset_value","","",5461,[[]]],[11,"reset_value","","",5462,[[]]],[11,"reset_value","","",5463,[[]]],[11,"reset_value","","",5464,[[]]],[11,"reset_value","","",5465,[[]]],[11,"reset_value","","",5466,[[]]],[11,"reset_value","","",5467,[[]]],[11,"reset_value","","",5468,[[]]],[11,"reset_value","","",5469,[[]]],[11,"reset_value","","",5470,[[]]],[11,"reset_value","","",5471,[[]]],[11,"reset_value","","",5472,[[]]],[11,"reset_value","","",5473,[[]]],[11,"reset_value","","",5474,[[]]],[11,"reset_value","","",5475,[[]]],[11,"reset_value","","",5476,[[]]],[11,"reset_value","","",5477,[[]]],[11,"reset_value","","",5478,[[]]],[11,"reset_value","","",5479,[[]]],[11,"reset_value","","",5480,[[]]],[11,"reset_value","","",5481,[[]]],[11,"reset_value","","",5482,[[]]],[11,"reset_value","","",5483,[[]]],[11,"reset_value","","",5484,[[]]],[11,"reset_value","","",5485,[[]]],[11,"reset_value","","",5486,[[]]],[11,"reset_value","","",5487,[[]]],[11,"reset_value","","",5488,[[]]],[11,"reset_value","","",5489,[[]]],[11,"reset_value","","",5490,[[]]],[11,"reset_value","","",5491,[[]]],[11,"reset_value","","",5492,[[]]],[11,"reset_value","","",5493,[[]]],[11,"reset_value","","",5494,[[]]],[11,"deref","","",4853,[[]]],[11,"deref","","",4854,[[]]],[11,"deref","","",4855,[[]]],[11,"deref","","",4856,[[]]],[11,"deref","","",4857,[[]]],[11,"deref","","",4858,[[]]],[11,"deref","","",4859,[[]]],[11,"deref","","",4860,[[]]],[11,"deref","","",4861,[[]]],[11,"deref","","",4862,[[]]],[11,"deref","","",4863,[[]]],[11,"deref","","",4864,[[]]],[11,"deref","","",4865,[[]]],[11,"deref","","",4866,[[]]],[11,"deref","","",4867,[[]]],[11,"deref","","",4868,[[]]],[11,"deref","","",4869,[[]]],[11,"deref","","",4870,[[]]],[11,"deref","","",4871,[[]]],[11,"deref","","",4872,[[]]],[11,"deref","","",4873,[[]]],[11,"deref","","",4874,[[]]],[11,"deref","","",4875,[[]]],[11,"deref","","",4876,[[]]],[11,"deref","","",4877,[[]]],[11,"deref","","",4878,[[]]],[11,"deref","","",4879,[[]]],[11,"deref","","",4880,[[]]],[11,"deref","","",4881,[[]]],[11,"deref","","",4882,[[]]],[11,"deref","","",4883,[[]]],[11,"deref","","",4884,[[]]],[11,"deref","","",4885,[[]]],[11,"deref","","",4886,[[]]],[11,"deref","","",4887,[[]]],[11,"deref","","",4888,[[]]],[11,"deref","","",4889,[[]]],[11,"deref","","",4890,[[]]],[11,"deref","","",4891,[[]]],[11,"deref","","",4892,[[]]],[11,"deref","","",4893,[[]]],[11,"deref","","",4894,[[]]],[11,"deref","","",4895,[[]]],[11,"deref","","",4896,[[]]],[11,"deref","","",4897,[[]]],[11,"deref","","",4898,[[]]],[11,"deref","","",4899,[[]]],[11,"deref","","",4900,[[]]],[11,"deref","","",4901,[[]]],[11,"deref","","",4902,[[]]],[11,"deref","","",4903,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::ac::statusa","",40,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::ac::winctrl","",47,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::ac::compctrl","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::adc0::ctrla","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::adc0::inputctrl","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::adc0::ctrlb","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::adc0::refctrl","",136,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::adc0::avgctrl","",142,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::aes::ctrla","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::ccl::seqctrl","",267,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::ccl::lutctrl","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::cmcc::type_","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::cmcc::cfg","",300,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::cmcc::maint1","",315,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::cmcc::mcfg","",319,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dac::ctrlb","",335,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dac::dacctrl","",383,[[["formatter",3]],["result",6]]],[11,"fmt","","",384,[[["formatter",3]],["result",6]]],[11,"fmt","","",385,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dmac::channel::chctrla","",409,[[["formatter",3]],["result",6]]],[11,"fmt","","",410,[[["formatter",3]],["result",6]]],[11,"fmt","","",411,[[["formatter",3]],["result",6]]],[11,"fmt","","",412,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dmac::channel::chctrlb","",426,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dmac::channel::chprilvl","",431,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dmac::channel::chevctrl","",436,[[["formatter",3]],["result",6]]],[11,"fmt","","",437,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dmac::crcctrl","",475,[[["formatter",3]],["result",6]]],[11,"fmt","","",476,[[["formatter",3]],["result",6]]],[11,"fmt","","",477,[[["formatter",3]],["result",6]]],[11,"fmt","","",478,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dmac::prictrl0","",537,[[["formatter",3]],["result",6]]],[11,"fmt","","",538,[[["formatter",3]],["result",6]]],[11,"fmt","","",539,[[["formatter",3]],["result",6]]],[11,"fmt","","",540,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dsu::did","",608,[[["formatter",3]],["result",6]]],[11,"fmt","","",609,[[["formatter",3]],["result",6]]],[11,"fmt","","",610,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::dsu::cfg","",615,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::eic::ctrla","",638,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::eic::nmictrl","",645,[[["formatter",3]],["result",6]]],[11,"fmt","","",646,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::eic::asynch","",670,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::eic::config","",675,[[["formatter",3]],["result",6]]],[11,"fmt","","",676,[[["formatter",3]],["result",6]]],[11,"fmt","","",677,[[["formatter",3]],["result",6]]],[11,"fmt","","",678,[[["formatter",3]],["result",6]]],[11,"fmt","","",679,[[["formatter",3]],["result",6]]],[11,"fmt","","",680,[[["formatter",3]],["result",6]]],[11,"fmt","","",681,[[["formatter",3]],["result",6]]],[11,"fmt","","",682,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::eic::dprescaler","",712,[[["formatter",3]],["result",6]]],[11,"fmt","","",713,[[["formatter",3]],["result",6]]],[11,"fmt","","",714,[[["formatter",3]],["result",6]]],[11,"fmt","","",715,[[["formatter",3]],["result",6]]],[11,"fmt","","",716,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::evsys::channel::channel","",732,[[["formatter",3]],["result",6]]],[11,"fmt","","",733,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::gclk::syncbusy","",838,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::gclk::genctrl","",841,[[["formatter",3]],["result",6]]],[11,"fmt","","",842,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::gclk::pchctrl","",855,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::icm::cfg","",865,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::icm::uasr","",905,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::mclk::hsdiv","",926,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::mclk::cpudiv","",929,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::nvmctrl::ctrla","",1008,[[["formatter",3]],["result",6]]],[11,"fmt","","",1009,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::nvmctrl::ctrlb","",1023,[[["formatter",3]],["result",6]]],[11,"fmt","","",1024,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::nvmctrl::param","",1028,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::nvmctrl::status","",1070,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::nvmctrl::eccerr","",1078,[[["formatter",3]],["result",6]]],[11,"fmt","","",1079,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::nvmctrl::seecfg","",1087,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::oscctrl::dpll::dpllctrlb","",1105,[[["formatter",3]],["result",6]]],[11,"fmt","","",1106,[[["formatter",3]],["result",6]]],[11,"fmt","","",1107,[[["formatter",3]],["result",6]]],[11,"fmt","","",1108,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::oscctrl::xoscctrl","",1187,[[["formatter",3]],["result",6]]],[11,"fmt","","",1188,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::osc32kctrl::rtcctrl","",1250,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::osc32kctrl::xosc32k","",1255,[[["formatter",3]],["result",6]]],[11,"fmt","","",1256,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pac::wrctrl","",1285,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pdec::ctrla","",1401,[[["formatter",3]],["result",6]]],[11,"fmt","","",1402,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pdec::ctrlbclr","",1423,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pdec::ctrlbset","",1429,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pdec::evctrl","",1435,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pdec::presc","",1489,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pdec::prescbuf","",1497,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pm::sleepcfg","",1518,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pm::stdbycfg","",1532,[[["formatter",3]],["result",6]]],[11,"fmt","","",1533,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pm::hibcfg","",1540,[[["formatter",3]],["result",6]]],[11,"fmt","","",1541,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::pm::bkupcfg","",1548,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::port::group::evctrl","",1597,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::qspi::ctrlb","",1629,[[["formatter",3]],["result",6]]],[11,"fmt","","",1630,[[["formatter",3]],["result",6]]],[11,"fmt","","",1631,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::qspi::instrframe","",1686,[[["formatter",3]],["result",6]]],[11,"fmt","","",1687,[[["formatter",3]],["result",6]]],[11,"fmt","","",1688,[[["formatter",3]],["result",6]]],[11,"fmt","","",1689,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode0::ctrla","",1738,[[["formatter",3]],["result",6]]],[11,"fmt","","",1739,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode0::ctrlb","",1752,[[["formatter",3]],["result",6]]],[11,"fmt","","",1753,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode0::tampctrl","",1840,[[["formatter",3]],["result",6]]],[11,"fmt","","",1841,[[["formatter",3]],["result",6]]],[11,"fmt","","",1842,[[["formatter",3]],["result",6]]],[11,"fmt","","",1843,[[["formatter",3]],["result",6]]],[11,"fmt","","",1844,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode1::ctrla","",1879,[[["formatter",3]],["result",6]]],[11,"fmt","","",1880,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode1::ctrlb","",1892,[[["formatter",3]],["result",6]]],[11,"fmt","","",1893,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode1::tampctrl","",1991,[[["formatter",3]],["result",6]]],[11,"fmt","","",1992,[[["formatter",3]],["result",6]]],[11,"fmt","","",1993,[[["formatter",3]],["result",6]]],[11,"fmt","","",1994,[[["formatter",3]],["result",6]]],[11,"fmt","","",1995,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::ctrla","",2030,[[["formatter",3]],["result",6]]],[11,"fmt","","",2031,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::ctrlb","",2045,[[["formatter",3]],["result",6]]],[11,"fmt","","",2046,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::clock","",2124,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::alarm0","",2137,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::mask0","",2147,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::alarm1","",2152,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::mask1","",2162,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::tampctrl","",2167,[[["formatter",3]],["result",6]]],[11,"fmt","","",2168,[[["formatter",3]],["result",6]]],[11,"fmt","","",2169,[[["formatter",3]],["result",6]]],[11,"fmt","","",2170,[[["formatter",3]],["result",6]]],[11,"fmt","","",2171,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::rtc::mode2::timestamp","",2194,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::bsr","",2216,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::tmr","",2228,[[["formatter",3]],["result",6]]],[11,"fmt","","",2229,[[["formatter",3]],["result",6]]],[11,"fmt","","",2230,[[["formatter",3]],["result",6]]],[11,"fmt","","",2231,[[["formatter",3]],["result",6]]],[11,"fmt","","",2232,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::cr","",2245,[[["formatter",3]],["result",6]]],[11,"fmt","","",2246,[[["formatter",3]],["result",6]]],[11,"fmt","","",2247,[[["formatter",3]],["result",6]]],[11,"fmt","","",2248,[[["formatter",3]],["result",6]]],[11,"fmt","","",2249,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::psr","",2267,[[["formatter",3]],["result",6]]],[11,"fmt","","",2268,[[["formatter",3]],["result",6]]],[11,"fmt","","",2269,[[["formatter",3]],["result",6]]],[11,"fmt","","",2270,[[["formatter",3]],["result",6]]],[11,"fmt","","",2271,[[["formatter",3]],["result",6]]],[11,"fmt","","",2272,[[["formatter",3]],["result",6]]],[11,"fmt","","",2273,[[["formatter",3]],["result",6]]],[11,"fmt","","",2274,[[["formatter",3]],["result",6]]],[11,"fmt","","",2275,[[["formatter",3]],["result",6]]],[11,"fmt","","",2276,[[["formatter",3]],["result",6]]],[11,"fmt","","",2277,[[["formatter",3]],["result",6]]],[11,"fmt","","",2278,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::hc1r","",2292,[[["formatter",3]],["result",6]]],[11,"fmt","","",2293,[[["formatter",3]],["result",6]]],[11,"fmt","","",2294,[[["formatter",3]],["result",6]]],[11,"fmt","","",2295,[[["formatter",3]],["result",6]]],[11,"fmt","","",2296,[[["formatter",3]],["result",6]]],[11,"fmt","","",2297,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::hc1r_emmc_mode","",2312,[[["formatter",3]],["result",6]]],[11,"fmt","","",2313,[[["formatter",3]],["result",6]]],[11,"fmt","","",2314,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::pcr","",2323,[[["formatter",3]],["result",6]]],[11,"fmt","","",2324,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::bgcr","",2331,[[["formatter",3]],["result",6]]],[11,"fmt","","",2332,[[["formatter",3]],["result",6]]],[11,"fmt","","",2333,[[["formatter",3]],["result",6]]],[11,"fmt","","",2334,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::bgcr_emmc_mode","",2345,[[["formatter",3]],["result",6]]],[11,"fmt","","",2346,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::wcr","",2353,[[["formatter",3]],["result",6]]],[11,"fmt","","",2354,[[["formatter",3]],["result",6]]],[11,"fmt","","",2355,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::ccr","",2364,[[["formatter",3]],["result",6]]],[11,"fmt","","",2365,[[["formatter",3]],["result",6]]],[11,"fmt","","",2366,[[["formatter",3]],["result",6]]],[11,"fmt","","",2367,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::srr","",2383,[[["formatter",3]],["result",6]]],[11,"fmt","","",2384,[[["formatter",3]],["result",6]]],[11,"fmt","","",2385,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::nistr","",2394,[[["formatter",3]],["result",6]]],[11,"fmt","","",2395,[[["formatter",3]],["result",6]]],[11,"fmt","","",2396,[[["formatter",3]],["result",6]]],[11,"fmt","","",2397,[[["formatter",3]],["result",6]]],[11,"fmt","","",2398,[[["formatter",3]],["result",6]]],[11,"fmt","","",2399,[[["formatter",3]],["result",6]]],[11,"fmt","","",2400,[[["formatter",3]],["result",6]]],[11,"fmt","","",2401,[[["formatter",3]],["result",6]]],[11,"fmt","","",2402,[[["formatter",3]],["result",6]]],[11,"fmt","","",2403,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::nistr_emmc_mode","",2426,[[["formatter",3]],["result",6]]],[11,"fmt","","",2427,[[["formatter",3]],["result",6]]],[11,"fmt","","",2428,[[["formatter",3]],["result",6]]],[11,"fmt","","",2429,[[["formatter",3]],["result",6]]],[11,"fmt","","",2430,[[["formatter",3]],["result",6]]],[11,"fmt","","",2431,[[["formatter",3]],["result",6]]],[11,"fmt","","",2432,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::eistr","",2450,[[["formatter",3]],["result",6]]],[11,"fmt","","",2451,[[["formatter",3]],["result",6]]],[11,"fmt","","",2452,[[["formatter",3]],["result",6]]],[11,"fmt","","",2453,[[["formatter",3]],["result",6]]],[11,"fmt","","",2454,[[["formatter",3]],["result",6]]],[11,"fmt","","",2455,[[["formatter",3]],["result",6]]],[11,"fmt","","",2456,[[["formatter",3]],["result",6]]],[11,"fmt","","",2457,[[["formatter",3]],["result",6]]],[11,"fmt","","",2458,[[["formatter",3]],["result",6]]],[11,"fmt","","",2459,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::eistr_emmc_mode","",2482,[[["formatter",3]],["result",6]]],[11,"fmt","","",2483,[[["formatter",3]],["result",6]]],[11,"fmt","","",2484,[[["formatter",3]],["result",6]]],[11,"fmt","","",2485,[[["formatter",3]],["result",6]]],[11,"fmt","","",2486,[[["formatter",3]],["result",6]]],[11,"fmt","","",2487,[[["formatter",3]],["result",6]]],[11,"fmt","","",2488,[[["formatter",3]],["result",6]]],[11,"fmt","","",2489,[[["formatter",3]],["result",6]]],[11,"fmt","","",2490,[[["formatter",3]],["result",6]]],[11,"fmt","","",2491,[[["formatter",3]],["result",6]]],[11,"fmt","","",2492,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::nister","",2517,[[["formatter",3]],["result",6]]],[11,"fmt","","",2518,[[["formatter",3]],["result",6]]],[11,"fmt","","",2519,[[["formatter",3]],["result",6]]],[11,"fmt","","",2520,[[["formatter",3]],["result",6]]],[11,"fmt","","",2521,[[["formatter",3]],["result",6]]],[11,"fmt","","",2522,[[["formatter",3]],["result",6]]],[11,"fmt","","",2523,[[["formatter",3]],["result",6]]],[11,"fmt","","",2524,[[["formatter",3]],["result",6]]],[11,"fmt","","",2525,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::nister_emmc_mode","",2546,[[["formatter",3]],["result",6]]],[11,"fmt","","",2547,[[["formatter",3]],["result",6]]],[11,"fmt","","",2548,[[["formatter",3]],["result",6]]],[11,"fmt","","",2549,[[["formatter",3]],["result",6]]],[11,"fmt","","",2550,[[["formatter",3]],["result",6]]],[11,"fmt","","",2551,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::eister","",2567,[[["formatter",3]],["result",6]]],[11,"fmt","","",2568,[[["formatter",3]],["result",6]]],[11,"fmt","","",2569,[[["formatter",3]],["result",6]]],[11,"fmt","","",2570,[[["formatter",3]],["result",6]]],[11,"fmt","","",2571,[[["formatter",3]],["result",6]]],[11,"fmt","","",2572,[[["formatter",3]],["result",6]]],[11,"fmt","","",2573,[[["formatter",3]],["result",6]]],[11,"fmt","","",2574,[[["formatter",3]],["result",6]]],[11,"fmt","","",2575,[[["formatter",3]],["result",6]]],[11,"fmt","","",2576,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::eister_emmc_mode","",2599,[[["formatter",3]],["result",6]]],[11,"fmt","","",2600,[[["formatter",3]],["result",6]]],[11,"fmt","","",2601,[[["formatter",3]],["result",6]]],[11,"fmt","","",2602,[[["formatter",3]],["result",6]]],[11,"fmt","","",2603,[[["formatter",3]],["result",6]]],[11,"fmt","","",2604,[[["formatter",3]],["result",6]]],[11,"fmt","","",2605,[[["formatter",3]],["result",6]]],[11,"fmt","","",2606,[[["formatter",3]],["result",6]]],[11,"fmt","","",2607,[[["formatter",3]],["result",6]]],[11,"fmt","","",2608,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::nisier","",2632,[[["formatter",3]],["result",6]]],[11,"fmt","","",2633,[[["formatter",3]],["result",6]]],[11,"fmt","","",2634,[[["formatter",3]],["result",6]]],[11,"fmt","","",2635,[[["formatter",3]],["result",6]]],[11,"fmt","","",2636,[[["formatter",3]],["result",6]]],[11,"fmt","","",2637,[[["formatter",3]],["result",6]]],[11,"fmt","","",2638,[[["formatter",3]],["result",6]]],[11,"fmt","","",2639,[[["formatter",3]],["result",6]]],[11,"fmt","","",2640,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::nisier_emmc_mode","",2661,[[["formatter",3]],["result",6]]],[11,"fmt","","",2662,[[["formatter",3]],["result",6]]],[11,"fmt","","",2663,[[["formatter",3]],["result",6]]],[11,"fmt","","",2664,[[["formatter",3]],["result",6]]],[11,"fmt","","",2665,[[["formatter",3]],["result",6]]],[11,"fmt","","",2666,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::eisier","",2682,[[["formatter",3]],["result",6]]],[11,"fmt","","",2683,[[["formatter",3]],["result",6]]],[11,"fmt","","",2684,[[["formatter",3]],["result",6]]],[11,"fmt","","",2685,[[["formatter",3]],["result",6]]],[11,"fmt","","",2686,[[["formatter",3]],["result",6]]],[11,"fmt","","",2687,[[["formatter",3]],["result",6]]],[11,"fmt","","",2688,[[["formatter",3]],["result",6]]],[11,"fmt","","",2689,[[["formatter",3]],["result",6]]],[11,"fmt","","",2690,[[["formatter",3]],["result",6]]],[11,"fmt","","",2691,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::eisier_emmc_mode","",2714,[[["formatter",3]],["result",6]]],[11,"fmt","","",2715,[[["formatter",3]],["result",6]]],[11,"fmt","","",2716,[[["formatter",3]],["result",6]]],[11,"fmt","","",2717,[[["formatter",3]],["result",6]]],[11,"fmt","","",2718,[[["formatter",3]],["result",6]]],[11,"fmt","","",2719,[[["formatter",3]],["result",6]]],[11,"fmt","","",2720,[[["formatter",3]],["result",6]]],[11,"fmt","","",2721,[[["formatter",3]],["result",6]]],[11,"fmt","","",2722,[[["formatter",3]],["result",6]]],[11,"fmt","","",2723,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::acesr","",2747,[[["formatter",3]],["result",6]]],[11,"fmt","","",2748,[[["formatter",3]],["result",6]]],[11,"fmt","","",2749,[[["formatter",3]],["result",6]]],[11,"fmt","","",2750,[[["formatter",3]],["result",6]]],[11,"fmt","","",2751,[[["formatter",3]],["result",6]]],[11,"fmt","","",2752,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::hc2r","",2760,[[["formatter",3]],["result",6]]],[11,"fmt","","",2761,[[["formatter",3]],["result",6]]],[11,"fmt","","",2762,[[["formatter",3]],["result",6]]],[11,"fmt","","",2763,[[["formatter",3]],["result",6]]],[11,"fmt","","",2764,[[["formatter",3]],["result",6]]],[11,"fmt","","",2765,[[["formatter",3]],["result",6]]],[11,"fmt","","",2766,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::hc2r_emmc_mode","",2783,[[["formatter",3]],["result",6]]],[11,"fmt","","",2784,[[["formatter",3]],["result",6]]],[11,"fmt","","",2785,[[["formatter",3]],["result",6]]],[11,"fmt","","",2786,[[["formatter",3]],["result",6]]],[11,"fmt","","",2787,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::ca0r","",2800,[[["formatter",3]],["result",6]]],[11,"fmt","","",2801,[[["formatter",3]],["result",6]]],[11,"fmt","","",2802,[[["formatter",3]],["result",6]]],[11,"fmt","","",2803,[[["formatter",3]],["result",6]]],[11,"fmt","","",2804,[[["formatter",3]],["result",6]]],[11,"fmt","","",2805,[[["formatter",3]],["result",6]]],[11,"fmt","","",2806,[[["formatter",3]],["result",6]]],[11,"fmt","","",2807,[[["formatter",3]],["result",6]]],[11,"fmt","","",2808,[[["formatter",3]],["result",6]]],[11,"fmt","","",2809,[[["formatter",3]],["result",6]]],[11,"fmt","","",2810,[[["formatter",3]],["result",6]]],[11,"fmt","","",2811,[[["formatter",3]],["result",6]]],[11,"fmt","","",2812,[[["formatter",3]],["result",6]]],[11,"fmt","","",2813,[[["formatter",3]],["result",6]]],[11,"fmt","","",2814,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::ca1r","",2831,[[["formatter",3]],["result",6]]],[11,"fmt","","",2832,[[["formatter",3]],["result",6]]],[11,"fmt","","",2833,[[["formatter",3]],["result",6]]],[11,"fmt","","",2834,[[["formatter",3]],["result",6]]],[11,"fmt","","",2835,[[["formatter",3]],["result",6]]],[11,"fmt","","",2836,[[["formatter",3]],["result",6]]],[11,"fmt","","",2837,[[["formatter",3]],["result",6]]],[11,"fmt","","",2838,[[["formatter",3]],["result",6]]],[11,"fmt","","",2839,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::mccar","",2850,[[["formatter",3]],["result",6]]],[11,"fmt","","",2851,[[["formatter",3]],["result",6]]],[11,"fmt","","",2852,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::feraces","",2857,[[["formatter",3]],["result",6]]],[11,"fmt","","",2858,[[["formatter",3]],["result",6]]],[11,"fmt","","",2859,[[["formatter",3]],["result",6]]],[11,"fmt","","",2860,[[["formatter",3]],["result",6]]],[11,"fmt","","",2861,[[["formatter",3]],["result",6]]],[11,"fmt","","",2862,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::fereis","",2870,[[["formatter",3]],["result",6]]],[11,"fmt","","",2871,[[["formatter",3]],["result",6]]],[11,"fmt","","",2872,[[["formatter",3]],["result",6]]],[11,"fmt","","",2873,[[["formatter",3]],["result",6]]],[11,"fmt","","",2874,[[["formatter",3]],["result",6]]],[11,"fmt","","",2875,[[["formatter",3]],["result",6]]],[11,"fmt","","",2876,[[["formatter",3]],["result",6]]],[11,"fmt","","",2877,[[["formatter",3]],["result",6]]],[11,"fmt","","",2878,[[["formatter",3]],["result",6]]],[11,"fmt","","",2879,[[["formatter",3]],["result",6]]],[11,"fmt","","",2880,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::aesr","",2893,[[["formatter",3]],["result",6]]],[11,"fmt","","",2894,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::pvr","",2901,[[["formatter",3]],["result",6]]],[11,"fmt","","",2902,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::mc1r","",2912,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::acr","",2925,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::cc2r","",2930,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sdhc0::dbgr","",2939,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::i2cm::ctrla","",2950,[[["formatter",3]],["result",6]]],[11,"fmt","","",2951,[[["formatter",3]],["result",6]]],[11,"fmt","","",2952,[[["formatter",3]],["result",6]]],[11,"fmt","","",2953,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::i2cm::ctrlc","",2978,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::i2cs::ctrla","",3029,[[["formatter",3]],["result",6]]],[11,"fmt","","",3030,[[["formatter",3]],["result",6]]],[11,"fmt","","",3031,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::i2cs::ctrlc","",3055,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::spis::ctrla","",3105,[[["formatter",3]],["result",6]]],[11,"fmt","","",3106,[[["formatter",3]],["result",6]]],[11,"fmt","","",3107,[[["formatter",3]],["result",6]]],[11,"fmt","","",3108,[[["formatter",3]],["result",6]]],[11,"fmt","","",3109,[[["formatter",3]],["result",6]]],[11,"fmt","","",3110,[[["formatter",3]],["result",6]]],[11,"fmt","","",3111,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::spis::ctrlb","",3132,[[["formatter",3]],["result",6]]],[11,"fmt","","",3133,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::spis::ctrlc","",3144,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::spim::ctrla","",3193,[[["formatter",3]],["result",6]]],[11,"fmt","","",3194,[[["formatter",3]],["result",6]]],[11,"fmt","","",3195,[[["formatter",3]],["result",6]]],[11,"fmt","","",3196,[[["formatter",3]],["result",6]]],[11,"fmt","","",3197,[[["formatter",3]],["result",6]]],[11,"fmt","","",3198,[[["formatter",3]],["result",6]]],[11,"fmt","","",3199,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::spim::ctrlb","",3220,[[["formatter",3]],["result",6]]],[11,"fmt","","",3221,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::spim::ctrlc","",3232,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::usart_ext::ctrla","",3281,[[["formatter",3]],["result",6]]],[11,"fmt","","",3282,[[["formatter",3]],["result",6]]],[11,"fmt","","",3283,[[["formatter",3]],["result",6]]],[11,"fmt","","",3284,[[["formatter",3]],["result",6]]],[11,"fmt","","",3285,[[["formatter",3]],["result",6]]],[11,"fmt","","",3286,[[["formatter",3]],["result",6]]],[11,"fmt","","",3287,[[["formatter",3]],["result",6]]],[11,"fmt","","",3288,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::usart_ext::ctrlb","",3314,[[["formatter",3]],["result",6]]],[11,"fmt","","",3315,[[["formatter",3]],["result",6]]],[11,"fmt","","",3316,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::usart_ext::ctrlc","",3331,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::usart_int::ctrla","",3407,[[["formatter",3]],["result",6]]],[11,"fmt","","",3408,[[["formatter",3]],["result",6]]],[11,"fmt","","",3409,[[["formatter",3]],["result",6]]],[11,"fmt","","",3410,[[["formatter",3]],["result",6]]],[11,"fmt","","",3411,[[["formatter",3]],["result",6]]],[11,"fmt","","",3412,[[["formatter",3]],["result",6]]],[11,"fmt","","",3413,[[["formatter",3]],["result",6]]],[11,"fmt","","",3414,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::usart_int::ctrlb","",3440,[[["formatter",3]],["result",6]]],[11,"fmt","","",3441,[[["formatter",3]],["result",6]]],[11,"fmt","","",3442,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sercom0::usart_int::ctrlc","",3457,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::supc::bod33","",3557,[[["formatter",3]],["result",6]]],[11,"fmt","","",3558,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::supc::vreg","",3573,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::supc::vref","",3582,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::supc::bbps","",3592,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count8::ctrla","",3612,[[["formatter",3]],["result",6]]],[11,"fmt","","",3613,[[["formatter",3]],["result",6]]],[11,"fmt","","",3614,[[["formatter",3]],["result",6]]],[11,"fmt","","",3615,[[["formatter",3]],["result",6]]],[11,"fmt","","",3616,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count8::ctrlbclr","",3639,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count8::ctrlbset","",3647,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count8::evctrl","",3655,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count8::wave","",3690,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count16::ctrla","",3718,[[["formatter",3]],["result",6]]],[11,"fmt","","",3719,[[["formatter",3]],["result",6]]],[11,"fmt","","",3720,[[["formatter",3]],["result",6]]],[11,"fmt","","",3721,[[["formatter",3]],["result",6]]],[11,"fmt","","",3722,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count16::ctrlbclr","",3745,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count16::ctrlbset","",3753,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count16::evctrl","",3761,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count16::wave","",3796,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count32::ctrla","",3818,[[["formatter",3]],["result",6]]],[11,"fmt","","",3819,[[["formatter",3]],["result",6]]],[11,"fmt","","",3820,[[["formatter",3]],["result",6]]],[11,"fmt","","",3821,[[["formatter",3]],["result",6]]],[11,"fmt","","",3822,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count32::ctrlbclr","",3845,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count32::ctrlbset","",3853,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count32::evctrl","",3861,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tc0::count32::wave","",3896,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::ctrla","",3920,[[["formatter",3]],["result",6]]],[11,"fmt","","",3921,[[["formatter",3]],["result",6]]],[11,"fmt","","",3922,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::ctrlbclr","",3943,[[["formatter",3]],["result",6]]],[11,"fmt","","",3944,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::ctrlbset","",3954,[[["formatter",3]],["result",6]]],[11,"fmt","","",3955,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::fctrla","",3966,[[["formatter",3]],["result",6]]],[11,"fmt","","",3967,[[["formatter",3]],["result",6]]],[11,"fmt","","",3968,[[["formatter",3]],["result",6]]],[11,"fmt","","",3969,[[["formatter",3]],["result",6]]],[11,"fmt","","",3970,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::fctrlb","",3989,[[["formatter",3]],["result",6]]],[11,"fmt","","",3990,[[["formatter",3]],["result",6]]],[11,"fmt","","",3991,[[["formatter",3]],["result",6]]],[11,"fmt","","",3992,[[["formatter",3]],["result",6]]],[11,"fmt","","",3993,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::evctrl","",4053,[[["formatter",3]],["result",6]]],[11,"fmt","","",4054,[[["formatter",3]],["result",6]]],[11,"fmt","","",4055,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::tcc0::wave","",4196,[[["formatter",3]],["result",6]]],[11,"fmt","","",4197,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::device::ctrla","",4318,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::device::ctrlb","",4331,[[["formatter",3]],["result",6]]],[11,"fmt","","",4332,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::device::status","",4351,[[["formatter",3]],["result",6]]],[11,"fmt","","",4352,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::device::fsmstatus","",4356,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::host::ctrla","",4455,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::host::ctrlb","",4468,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::usb::host::fsmstatus","",4489,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::wdt::config","",4588,[[["formatter",3]],["result",6]]],[11,"fmt","","",4589,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::wdt::ewctrl","",4596,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::wdt::clear","",4611,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sys_tick::csr","",4660,[[["formatter",3]],["result",6]]],[11,"fmt","","",4661,[[["formatter",3]],["result",6]]],[11,"fmt","","",4662,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::sys_tick::calib","",4678,[[["formatter",3]],["result",6]]],[11,"fmt","","",4679,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::system_control::icsr","",4693,[[["formatter",3]],["result",6]]],[11,"fmt","","",4694,[[["formatter",3]],["result",6]]],[11,"fmt","","",4695,[[["formatter",3]],["result",6]]],[11,"fmt","","",4696,[[["formatter",3]],["result",6]]],[11,"fmt","","",4697,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::system_control::aircr","",4718,[[["formatter",3]],["result",6]]],[11,"fmt","","",4719,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::system_control::scr","",4730,[[["formatter",3]],["result",6]]],[11,"fmt","","",4731,[[["formatter",3]],["result",6]]],[11,"fmt","","",4732,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::system_control::ccr","",4741,[[["formatter",3]],["result",6]]],[11,"fmt","","",4742,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd51g::system_control::cpacr","",4823,[[["formatter",3]],["result",6]]],[11,"fmt","","",4824,[[["formatter",3]],["result",6]]],[11,"eq","atsamd51g::generic","",6,[[]]],[11,"eq","","",3,[[["variant",4]]]],[11,"ne","","",3,[[["variant",4]]]],[11,"eq","atsamd51g::ac::statusa","",40,[[["wstate0_a",4]]]],[11,"eq","atsamd51g::ac::winctrl","",47,[[["wintsel0_a",4]]]],[11,"eq","atsamd51g::ac::compctrl","",56,[[["intsel_a",4]]]],[11,"eq","","",57,[[["muxneg_a",4]]]],[11,"eq","","",58,[[["muxpos_a",4]]]],[11,"eq","","",59,[[["speed_a",4]]]],[11,"eq","","",60,[[["hyst_a",4]]]],[11,"eq","","",61,[[["flen_a",4]]]],[11,"eq","","",62,[[["out_a",4]]]],[11,"eq","atsamd51g::adc0::ctrla","",89,[[["dualsel_a",4]]]],[11,"eq","","",90,[[["prescaler_a",4]]]],[11,"eq","atsamd51g::adc0::inputctrl","",114,[[["muxpos_a",4]]]],[11,"eq","","",115,[[["muxneg_a",4]]]],[11,"eq","atsamd51g::adc0::ctrlb","",124,[[["ressel_a",4]]]],[11,"eq","","",125,[[["winmode_a",4]]]],[11,"eq","atsamd51g::adc0::refctrl","",136,[[["refsel_a",4]]]],[11,"eq","atsamd51g::adc0::avgctrl","",142,[[["samplenum_a",4]]]],[11,"eq","atsamd51g::aes::ctrla","",208,[[["aesmode_a",4]]]],[11,"eq","","",209,[[["cfbs_a",4]]]],[11,"eq","","",210,[[["keysize_a",4]]]],[11,"eq","","",211,[[["cipher_a",4]]]],[11,"eq","","",212,[[["startmode_a",4]]]],[11,"eq","","",213,[[["lod_a",4]]]],[11,"eq","","",214,[[["keygen_a",4]]]],[11,"eq","","",215,[[["xorkey_a",4]]]],[11,"eq","atsamd51g::ccl::seqctrl","",267,[[["seqsel_a",4]]]],[11,"eq","atsamd51g::ccl::lutctrl","",272,[[["filtsel_a",4]]]],[11,"eq","","",273,[[["insel0_a",4]]]],[11,"eq","","",274,[[["insel1_a",4]]]],[11,"eq","","",275,[[["insel2_a",4]]]],[11,"eq","atsamd51g::cmcc::type_","",293,[[["waynum_a",4]]]],[11,"eq","","",294,[[["csize_a",4]]]],[11,"eq","","",295,[[["clsize_a",4]]]],[11,"eq","atsamd51g::cmcc::cfg","",300,[[["csizesw_a",4]]]],[11,"eq","atsamd51g::cmcc::maint1","",315,[[["way_aw",4]]]],[11,"eq","atsamd51g::cmcc::mcfg","",319,[[["mode_a",4]]]],[11,"eq","atsamd51g::dac::ctrlb","",335,[[["refsel_a",4]]]],[11,"eq","atsamd51g::dac::dacctrl","",383,[[["cctrl_a",4]]]],[11,"eq","","",384,[[["refresh_a",4]]]],[11,"eq","","",385,[[["osr_a",4]]]],[11,"eq","atsamd51g::dmac::channel::chctrla","",409,[[["trigsrc_a",4]]]],[11,"eq","","",410,[[["trigact_a",4]]]],[11,"eq","","",411,[[["burstlen_a",4]]]],[11,"eq","","",412,[[["threshold_a",4]]]],[11,"eq","atsamd51g::dmac::channel::chctrlb","",426,[[["cmd_a",4]]]],[11,"eq","atsamd51g::dmac::channel::chprilvl","",431,[[["prilvl_a",4]]]],[11,"eq","atsamd51g::dmac::channel::chevctrl","",436,[[["evact_a",4]]]],[11,"eq","","",437,[[["evomode_a",4]]]],[11,"eq","atsamd51g::dmac::crcctrl","",475,[[["crcbeatsize_a",4]]]],[11,"eq","","",476,[[["crcpoly_a",4]]]],[11,"eq","","",477,[[["crcsrc_a",4]]]],[11,"eq","","",478,[[["crcmode_a",4]]]],[11,"eq","atsamd51g::dmac::prictrl0","",537,[[["qos0_a",4]]]],[11,"eq","","",538,[[["qos1_a",4]]]],[11,"eq","","",539,[[["qos2_a",4]]]],[11,"eq","","",540,[[["qos3_a",4]]]],[11,"eq","atsamd51g::dsu::did","",608,[[["series_a",4]]]],[11,"eq","","",609,[[["family_a",4]]]],[11,"eq","","",610,[[["processor_a",4]]]],[11,"eq","atsamd51g::dsu::cfg","",615,[[["dccdmalevel_a",4]]]],[11,"eq","atsamd51g::eic::ctrla","",638,[[["cksel_a",4]]]],[11,"eq","atsamd51g::eic::nmictrl","",645,[[["nmisense_a",4]]]],[11,"eq","","",646,[[["nmiasynch_a",4]]]],[11,"eq","atsamd51g::eic::asynch","",670,[[["asynch_a",4]]]],[11,"eq","atsamd51g::eic::config","",675,[[["sense0_a",4]]]],[11,"eq","","",676,[[["sense1_a",4]]]],[11,"eq","","",677,[[["sense2_a",4]]]],[11,"eq","","",678,[[["sense3_a",4]]]],[11,"eq","","",679,[[["sense4_a",4]]]],[11,"eq","","",680,[[["sense5_a",4]]]],[11,"eq","","",681,[[["sense6_a",4]]]],[11,"eq","","",682,[[["sense7_a",4]]]],[11,"eq","atsamd51g::eic::dprescaler","",712,[[["prescaler0_a",4]]]],[11,"eq","","",713,[[["states0_a",4]]]],[11,"eq","","",714,[[["prescaler1_a",4]]]],[11,"eq","","",715,[[["states1_a",4]]]],[11,"eq","","",716,[[["tickon_a",4]]]],[11,"eq","atsamd51g::evsys::channel::channel","",732,[[["path_a",4]]]],[11,"eq","","",733,[[["edgsel_a",4]]]],[11,"eq","atsamd51g::gclk::syncbusy","",838,[[["genctrl_a",4]]]],[11,"eq","atsamd51g::gclk::genctrl","",841,[[["src_a",4]]]],[11,"eq","","",842,[[["divsel_a",4]]]],[11,"eq","atsamd51g::gclk::pchctrl","",855,[[["gen_a",4]]]],[11,"eq","atsamd51g::icm::cfg","",865,[[["ualgo_a",4]]]],[11,"eq","atsamd51g::icm::uasr","",905,[[["urat_a",4]]]],[11,"eq","atsamd51g::mclk::hsdiv","",926,[[["div_a",4]]]],[11,"eq","atsamd51g::mclk::cpudiv","",929,[[["div_a",4]]]],[11,"eq","atsamd51g::nvmctrl::ctrla","",1008,[[["wmode_a",4]]]],[11,"eq","","",1009,[[["prm_a",4]]]],[11,"eq","atsamd51g::nvmctrl::ctrlb","",1023,[[["cmd_aw",4]]]],[11,"eq","","",1024,[[["cmdex_aw",4]]]],[11,"eq","atsamd51g::nvmctrl::param","",1028,[[["psz_a",4]]]],[11,"eq","atsamd51g::nvmctrl::status","",1070,[[["bootprot_a",4]]]],[11,"eq","atsamd51g::nvmctrl::eccerr","",1078,[[["typel_a",4]]]],[11,"eq","","",1079,[[["typeh_a",4]]]],[11,"eq","atsamd51g::nvmctrl::seecfg","",1087,[[["wmode_a",4]]]],[11,"eq","atsamd51g::oscctrl::dpll::dpllctrlb","",1105,[[["filter_a",4]]]],[11,"eq","","",1106,[[["refclk_a",4]]]],[11,"eq","","",1107,[[["ltime_a",4]]]],[11,"eq","","",1108,[[["dcofilter_a",4]]]],[11,"eq","atsamd51g::oscctrl::xoscctrl","",1187,[[["startup_a",4]]]],[11,"eq","","",1188,[[["cfdpresc_a",4]]]],[11,"eq","atsamd51g::osc32kctrl::rtcctrl","",1250,[[["rtcsel_a",4]]]],[11,"eq","atsamd51g::osc32kctrl::xosc32k","",1255,[[["startup_a",4]]]],[11,"eq","","",1256,[[["cgm_a",4]]]],[11,"eq","atsamd51g::pac::wrctrl","",1285,[[["key_a",4]]]],[11,"eq","atsamd51g::pdec::ctrla","",1401,[[["mode_a",4]]]],[11,"eq","","",1402,[[["conf_a",4]]]],[11,"eq","atsamd51g::pdec::ctrlbclr","",1423,[[["cmd_a",4]]]],[11,"eq","atsamd51g::pdec::ctrlbset","",1429,[[["cmd_a",4]]]],[11,"eq","atsamd51g::pdec::evctrl","",1435,[[["evact_a",4]]]],[11,"eq","atsamd51g::pdec::presc","",1489,[[["presc_a",4]]]],[11,"eq","atsamd51g::pdec::prescbuf","",1497,[[["prescbuf_a",4]]]],[11,"eq","atsamd51g::pm::sleepcfg","",1518,[[["sleepmode_a",4]]]],[11,"eq","atsamd51g::pm::stdbycfg","",1532,[[["ramcfg_a",4]]]],[11,"eq","","",1533,[[["fastwkup_a",4]]]],[11,"eq","atsamd51g::pm::hibcfg","",1540,[[["ramcfg_a",4]]]],[11,"eq","","",1541,[[["bramcfg_a",4]]]],[11,"eq","atsamd51g::pm::bkupcfg","",1548,[[["bramcfg_a",4]]]],[11,"eq","atsamd51g::port::group::evctrl","",1597,[[["evact0_a",4]]]],[11,"eq","atsamd51g::qspi::ctrlb","",1629,[[["mode_a",4]]]],[11,"eq","","",1630,[[["csmode_a",4]]]],[11,"eq","","",1631,[[["datalen_a",4]]]],[11,"eq","atsamd51g::qspi::instrframe","",1686,[[["width_a",4]]]],[11,"eq","","",1687,[[["optcodelen_a",4]]]],[11,"eq","","",1688,[[["addrlen_a",4]]]],[11,"eq","","",1689,[[["tfrtype_a",4]]]],[11,"eq","atsamd51g::rtc::mode0::ctrla","",1738,[[["mode_a",4]]]],[11,"eq","","",1739,[[["prescaler_a",4]]]],[11,"eq","atsamd51g::rtc::mode0::ctrlb","",1752,[[["debf_a",4]]]],[11,"eq","","",1753,[[["actf_a",4]]]],[11,"eq","atsamd51g::rtc::mode0::tampctrl","",1840,[[["in0act_a",4]]]],[11,"eq","","",1841,[[["in1act_a",4]]]],[11,"eq","","",1842,[[["in2act_a",4]]]],[11,"eq","","",1843,[[["in3act_a",4]]]],[11,"eq","","",1844,[[["in4act_a",4]]]],[11,"eq","atsamd51g::rtc::mode1::ctrla","",1879,[[["mode_a",4]]]],[11,"eq","","",1880,[[["prescaler_a",4]]]],[11,"eq","atsamd51g::rtc::mode1::ctrlb","",1892,[[["debf_a",4]]]],[11,"eq","","",1893,[[["actf_a",4]]]],[11,"eq","atsamd51g::rtc::mode1::tampctrl","",1991,[[["in0act_a",4]]]],[11,"eq","","",1992,[[["in1act_a",4]]]],[11,"eq","","",1993,[[["in2act_a",4]]]],[11,"eq","","",1994,[[["in3act_a",4]]]],[11,"eq","","",1995,[[["in4act_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::ctrla","",2030,[[["mode_a",4]]]],[11,"eq","","",2031,[[["prescaler_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::ctrlb","",2045,[[["debf_a",4]]]],[11,"eq","","",2046,[[["actf_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::clock","",2124,[[["hour_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::alarm0","",2137,[[["hour_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::mask0","",2147,[[["sel_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::alarm1","",2152,[[["hour_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::mask1","",2162,[[["sel_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::tampctrl","",2167,[[["in0act_a",4]]]],[11,"eq","","",2168,[[["in1act_a",4]]]],[11,"eq","","",2169,[[["in2act_a",4]]]],[11,"eq","","",2170,[[["in3act_a",4]]]],[11,"eq","","",2171,[[["in4act_a",4]]]],[11,"eq","atsamd51g::rtc::mode2::timestamp","",2194,[[["hour_a",4]]]],[11,"eq","atsamd51g::sdhc0::bsr","",2216,[[["boundary_a",4]]]],[11,"eq","atsamd51g::sdhc0::tmr","",2228,[[["dmaen_a",4]]]],[11,"eq","","",2229,[[["bcen_a",4]]]],[11,"eq","","",2230,[[["acmden_a",4]]]],[11,"eq","","",2231,[[["dtdsel_a",4]]]],[11,"eq","","",2232,[[["msbsel_a",4]]]],[11,"eq","atsamd51g::sdhc0::cr","",2245,[[["resptyp_a",4]]]],[11,"eq","","",2246,[[["cmdccen_a",4]]]],[11,"eq","","",2247,[[["cmdicen_a",4]]]],[11,"eq","","",2248,[[["dpsel_a",4]]]],[11,"eq","","",2249,[[["cmdtyp_a",4]]]],[11,"eq","atsamd51g::sdhc0::psr","",2267,[[["cmdinhc_a",4]]]],[11,"eq","","",2268,[[["cmdinhd_a",4]]]],[11,"eq","","",2269,[[["dlact_a",4]]]],[11,"eq","","",2270,[[["rtreq_a",4]]]],[11,"eq","","",2271,[[["wtact_a",4]]]],[11,"eq","","",2272,[[["rtact_a",4]]]],[11,"eq","","",2273,[[["bufwren_a",4]]]],[11,"eq","","",2274,[[["bufrden_a",4]]]],[11,"eq","","",2275,[[["cardins_a",4]]]],[11,"eq","","",2276,[[["cardss_a",4]]]],[11,"eq","","",2277,[[["carddpl_a",4]]]],[11,"eq","","",2278,[[["wrppl_a",4]]]],[11,"eq","atsamd51g::sdhc0::hc1r","",2292,[[["ledctrl_a",4]]]],[11,"eq","","",2293,[[["dw_a",4]]]],[11,"eq","","",2294,[[["hsen_a",4]]]],[11,"eq","","",2295,[[["dmasel_a",4]]]],[11,"eq","","",2296,[[["carddtl_a",4]]]],[11,"eq","","",2297,[[["carddsel_a",4]]]],[11,"eq","atsamd51g::sdhc0::hc1r_emmc_mode","",2312,[[["dw_a",4]]]],[11,"eq","","",2313,[[["hsen_a",4]]]],[11,"eq","","",2314,[[["dmasel_a",4]]]],[11,"eq","atsamd51g::sdhc0::pcr","",2323,[[["sdbpwr_a",4]]]],[11,"eq","","",2324,[[["sdbvsel_a",4]]]],[11,"eq","atsamd51g::sdhc0::bgcr","",2331,[[["stpbgr_a",4]]]],[11,"eq","","",2332,[[["contr_a",4]]]],[11,"eq","","",2333,[[["rwctrl_a",4]]]],[11,"eq","","",2334,[[["intbg_a",4]]]],[11,"eq","atsamd51g::sdhc0::bgcr_emmc_mode","",2345,[[["stpbgr_a",4]]]],[11,"eq","","",2346,[[["contr_a",4]]]],[11,"eq","atsamd51g::sdhc0::wcr","",2353,[[["wkencint_a",4]]]],[11,"eq","","",2354,[[["wkencins_a",4]]]],[11,"eq","","",2355,[[["wkencrem_a",4]]]],[11,"eq","atsamd51g::sdhc0::ccr","",2364,[[["intclken_a",4]]]],[11,"eq","","",2365,[[["intclks_a",4]]]],[11,"eq","","",2366,[[["sdclken_a",4]]]],[11,"eq","","",2367,[[["clkgsel_a",4]]]],[11,"eq","atsamd51g::sdhc0::srr","",2383,[[["swrstall_a",4]]]],[11,"eq","","",2384,[[["swrstcmd_a",4]]]],[11,"eq","","",2385,[[["swrstdat_a",4]]]],[11,"eq","atsamd51g::sdhc0::nistr","",2394,[[["cmdc_a",4]]]],[11,"eq","","",2395,[[["trfc_a",4]]]],[11,"eq","","",2396,[[["blkge_a",4]]]],[11,"eq","","",2397,[[["dmaint_a",4]]]],[11,"eq","","",2398,[[["bwrrdy_a",4]]]],[11,"eq","","",2399,[[["brdrdy_a",4]]]],[11,"eq","","",2400,[[["cins_a",4]]]],[11,"eq","","",2401,[[["crem_a",4]]]],[11,"eq","","",2402,[[["cint_a",4]]]],[11,"eq","","",2403,[[["errint_a",4]]]],[11,"eq","atsamd51g::sdhc0::nistr_emmc_mode","",2426,[[["cmdc_a",4]]]],[11,"eq","","",2427,[[["trfc_a",4]]]],[11,"eq","","",2428,[[["blkge_a",4]]]],[11,"eq","","",2429,[[["dmaint_a",4]]]],[11,"eq","","",2430,[[["bwrrdy_a",4]]]],[11,"eq","","",2431,[[["brdrdy_a",4]]]],[11,"eq","","",2432,[[["errint_a",4]]]],[11,"eq","atsamd51g::sdhc0::eistr","",2450,[[["cmdteo_a",4]]]],[11,"eq","","",2451,[[["cmdcrc_a",4]]]],[11,"eq","","",2452,[[["cmdend_a",4]]]],[11,"eq","","",2453,[[["cmdidx_a",4]]]],[11,"eq","","",2454,[[["datteo_a",4]]]],[11,"eq","","",2455,[[["datcrc_a",4]]]],[11,"eq","","",2456,[[["datend_a",4]]]],[11,"eq","","",2457,[[["curlim_a",4]]]],[11,"eq","","",2458,[[["acmd_a",4]]]],[11,"eq","","",2459,[[["adma_a",4]]]],[11,"eq","atsamd51g::sdhc0::eistr_emmc_mode","",2482,[[["cmdteo_a",4]]]],[11,"eq","","",2483,[[["cmdcrc_a",4]]]],[11,"eq","","",2484,[[["cmdend_a",4]]]],[11,"eq","","",2485,[[["cmdidx_a",4]]]],[11,"eq","","",2486,[[["datteo_a",4]]]],[11,"eq","","",2487,[[["datcrc_a",4]]]],[11,"eq","","",2488,[[["datend_a",4]]]],[11,"eq","","",2489,[[["curlim_a",4]]]],[11,"eq","","",2490,[[["acmd_a",4]]]],[11,"eq","","",2491,[[["adma_a",4]]]],[11,"eq","","",2492,[[["bootae_a",4]]]],[11,"eq","atsamd51g::sdhc0::nister","",2517,[[["cmdc_a",4]]]],[11,"eq","","",2518,[[["trfc_a",4]]]],[11,"eq","","",2519,[[["blkge_a",4]]]],[11,"eq","","",2520,[[["dmaint_a",4]]]],[11,"eq","","",2521,[[["bwrrdy_a",4]]]],[11,"eq","","",2522,[[["brdrdy_a",4]]]],[11,"eq","","",2523,[[["cins_a",4]]]],[11,"eq","","",2524,[[["crem_a",4]]]],[11,"eq","","",2525,[[["cint_a",4]]]],[11,"eq","atsamd51g::sdhc0::nister_emmc_mode","",2546,[[["cmdc_a",4]]]],[11,"eq","","",2547,[[["trfc_a",4]]]],[11,"eq","","",2548,[[["blkge_a",4]]]],[11,"eq","","",2549,[[["dmaint_a",4]]]],[11,"eq","","",2550,[[["bwrrdy_a",4]]]],[11,"eq","","",2551,[[["brdrdy_a",4]]]],[11,"eq","atsamd51g::sdhc0::eister","",2567,[[["cmdteo_a",4]]]],[11,"eq","","",2568,[[["cmdcrc_a",4]]]],[11,"eq","","",2569,[[["cmdend_a",4]]]],[11,"eq","","",2570,[[["cmdidx_a",4]]]],[11,"eq","","",2571,[[["datteo_a",4]]]],[11,"eq","","",2572,[[["datcrc_a",4]]]],[11,"eq","","",2573,[[["datend_a",4]]]],[11,"eq","","",2574,[[["curlim_a",4]]]],[11,"eq","","",2575,[[["acmd_a",4]]]],[11,"eq","","",2576,[[["adma_a",4]]]],[11,"eq","atsamd51g::sdhc0::eister_emmc_mode","",2599,[[["cmdteo_a",4]]]],[11,"eq","","",2600,[[["cmdcrc_a",4]]]],[11,"eq","","",2601,[[["cmdend_a",4]]]],[11,"eq","","",2602,[[["cmdidx_a",4]]]],[11,"eq","","",2603,[[["datteo_a",4]]]],[11,"eq","","",2604,[[["datcrc_a",4]]]],[11,"eq","","",2605,[[["datend_a",4]]]],[11,"eq","","",2606,[[["curlim_a",4]]]],[11,"eq","","",2607,[[["acmd_a",4]]]],[11,"eq","","",2608,[[["adma_a",4]]]],[11,"eq","atsamd51g::sdhc0::nisier","",2632,[[["cmdc_a",4]]]],[11,"eq","","",2633,[[["trfc_a",4]]]],[11,"eq","","",2634,[[["blkge_a",4]]]],[11,"eq","","",2635,[[["dmaint_a",4]]]],[11,"eq","","",2636,[[["bwrrdy_a",4]]]],[11,"eq","","",2637,[[["brdrdy_a",4]]]],[11,"eq","","",2638,[[["cins_a",4]]]],[11,"eq","","",2639,[[["crem_a",4]]]],[11,"eq","","",2640,[[["cint_a",4]]]],[11,"eq","atsamd51g::sdhc0::nisier_emmc_mode","",2661,[[["cmdc_a",4]]]],[11,"eq","","",2662,[[["trfc_a",4]]]],[11,"eq","","",2663,[[["blkge_a",4]]]],[11,"eq","","",2664,[[["dmaint_a",4]]]],[11,"eq","","",2665,[[["bwrrdy_a",4]]]],[11,"eq","","",2666,[[["brdrdy_a",4]]]],[11,"eq","atsamd51g::sdhc0::eisier","",2682,[[["cmdteo_a",4]]]],[11,"eq","","",2683,[[["cmdcrc_a",4]]]],[11,"eq","","",2684,[[["cmdend_a",4]]]],[11,"eq","","",2685,[[["cmdidx_a",4]]]],[11,"eq","","",2686,[[["datteo_a",4]]]],[11,"eq","","",2687,[[["datcrc_a",4]]]],[11,"eq","","",2688,[[["datend_a",4]]]],[11,"eq","","",2689,[[["curlim_a",4]]]],[11,"eq","","",2690,[[["acmd_a",4]]]],[11,"eq","","",2691,[[["adma_a",4]]]],[11,"eq","atsamd51g::sdhc0::eisier_emmc_mode","",2714,[[["cmdteo_a",4]]]],[11,"eq","","",2715,[[["cmdcrc_a",4]]]],[11,"eq","","",2716,[[["cmdend_a",4]]]],[11,"eq","","",2717,[[["cmdidx_a",4]]]],[11,"eq","","",2718,[[["datteo_a",4]]]],[11,"eq","","",2719,[[["datcrc_a",4]]]],[11,"eq","","",2720,[[["datend_a",4]]]],[11,"eq","","",2721,[[["curlim_a",4]]]],[11,"eq","","",2722,[[["acmd_a",4]]]],[11,"eq","","",2723,[[["adma_a",4]]]],[11,"eq","atsamd51g::sdhc0::acesr","",2747,[[["acmd12ne_a",4]]]],[11,"eq","","",2748,[[["acmdteo_a",4]]]],[11,"eq","","",2749,[[["acmdcrc_a",4]]]],[11,"eq","","",2750,[[["acmdend_a",4]]]],[11,"eq","","",2751,[[["acmdidx_a",4]]]],[11,"eq","","",2752,[[["cmdni_a",4]]]],[11,"eq","atsamd51g::sdhc0::hc2r","",2760,[[["uhsms_a",4]]]],[11,"eq","","",2761,[[["vs18en_a",4]]]],[11,"eq","","",2762,[[["drvsel_a",4]]]],[11,"eq","","",2763,[[["extun_a",4]]]],[11,"eq","","",2764,[[["slcksel_a",4]]]],[11,"eq","","",2765,[[["asinten_a",4]]]],[11,"eq","","",2766,[[["pvalen_a",4]]]],[11,"eq","atsamd51g::sdhc0::hc2r_emmc_mode","",2783,[[["hs200en_a",4]]]],[11,"eq","","",2784,[[["drvsel_a",4]]]],[11,"eq","","",2785,[[["extun_a",4]]]],[11,"eq","","",2786,[[["slcksel_a",4]]]],[11,"eq","","",2787,[[["pvalen_a",4]]]],[11,"eq","atsamd51g::sdhc0::ca0r","",2800,[[["teoclkf_a",4]]]],[11,"eq","","",2801,[[["teoclku_a",4]]]],[11,"eq","","",2802,[[["baseclkf_a",4]]]],[11,"eq","","",2803,[[["maxblkl_a",4]]]],[11,"eq","","",2804,[[["ed8sup_a",4]]]],[11,"eq","","",2805,[[["adma2sup_a",4]]]],[11,"eq","","",2806,[[["hssup_a",4]]]],[11,"eq","","",2807,[[["sdmasup_a",4]]]],[11,"eq","","",2808,[[["srsup_a",4]]]],[11,"eq","","",2809,[[["v33vsup_a",4]]]],[11,"eq","","",2810,[[["v30vsup_a",4]]]],[11,"eq","","",2811,[[["v18vsup_a",4]]]],[11,"eq","","",2812,[[["sb64sup_a",4]]]],[11,"eq","","",2813,[[["asintsup_a",4]]]],[11,"eq","","",2814,[[["sltype_a",4]]]],[11,"eq","atsamd51g::sdhc0::ca1r","",2831,[[["sdr50sup_a",4]]]],[11,"eq","","",2832,[[["sdr104sup_a",4]]]],[11,"eq","","",2833,[[["ddr50sup_a",4]]]],[11,"eq","","",2834,[[["drvasup_a",4]]]],[11,"eq","","",2835,[[["drvcsup_a",4]]]],[11,"eq","","",2836,[[["drvdsup_a",4]]]],[11,"eq","","",2837,[[["tcntrt_a",4]]]],[11,"eq","","",2838,[[["tsdr50_a",4]]]],[11,"eq","","",2839,[[["clkmult_a",4]]]],[11,"eq","atsamd51g::sdhc0::mccar","",2850,[[["maxcur33v_a",4]]]],[11,"eq","","",2851,[[["maxcur30v_a",4]]]],[11,"eq","","",2852,[[["maxcur18v_a",4]]]],[11,"eq","atsamd51g::sdhc0::feraces","",2857,[[["acmd12ne_aw",4]]]],[11,"eq","","",2858,[[["acmdteo_aw",4]]]],[11,"eq","","",2859,[[["acmdcrc_aw",4]]]],[11,"eq","","",2860,[[["acmdend_aw",4]]]],[11,"eq","","",2861,[[["acmdidx_aw",4]]]],[11,"eq","","",2862,[[["cmdni_aw",4]]]],[11,"eq","atsamd51g::sdhc0::fereis","",2870,[[["cmdteo_aw",4]]]],[11,"eq","","",2871,[[["cmdcrc_aw",4]]]],[11,"eq","","",2872,[[["cmdend_aw",4]]]],[11,"eq","","",2873,[[["cmdidx_aw",4]]]],[11,"eq","","",2874,[[["datteo_aw",4]]]],[11,"eq","","",2875,[[["datcrc_aw",4]]]],[11,"eq","","",2876,[[["datend_aw",4]]]],[11,"eq","","",2877,[[["curlim_aw",4]]]],[11,"eq","","",2878,[[["acmd_aw",4]]]],[11,"eq","","",2879,[[["adma_aw",4]]]],[11,"eq","","",2880,[[["bootae_aw",4]]]],[11,"eq","atsamd51g::sdhc0::aesr","",2893,[[["errst_a",4]]]],[11,"eq","","",2894,[[["lmis_a",4]]]],[11,"eq","atsamd51g::sdhc0::pvr","",2901,[[["clkgsel_a",4]]]],[11,"eq","","",2902,[[["drvsel_a",4]]]],[11,"eq","atsamd51g::sdhc0::mc1r","",2912,[[["cmdtyp_a",4]]]],[11,"eq","atsamd51g::sdhc0::acr","",2925,[[["bmax_a",4]]]],[11,"eq","atsamd51g::sdhc0::cc2r","",2930,[[["fsdclkd_a",4]]]],[11,"eq","atsamd51g::sdhc0::dbgr","",2939,[[["nidbg_a",4]]]],[11,"eq","atsamd51g::sercom0::i2cm::ctrla","",2950,[[["mode_a",4]]]],[11,"eq","","",2951,[[["sdahold_a",4]]]],[11,"eq","","",2952,[[["speed_a",4]]]],[11,"eq","","",2953,[[["inactout_a",4]]]],[11,"eq","atsamd51g::sercom0::i2cm::ctrlc","",2978,[[["data32b_a",4]]]],[11,"eq","atsamd51g::sercom0::i2cs::ctrla","",3029,[[["mode_a",4]]]],[11,"eq","","",3030,[[["sdahold_a",4]]]],[11,"eq","","",3031,[[["speed_a",4]]]],[11,"eq","atsamd51g::sercom0::i2cs::ctrlc","",3055,[[["data32b_a",4]]]],[11,"eq","atsamd51g::sercom0::spis::ctrla","",3105,[[["mode_a",4]]]],[11,"eq","","",3106,[[["dopo_a",4]]]],[11,"eq","","",3107,[[["dipo_a",4]]]],[11,"eq","","",3108,[[["form_a",4]]]],[11,"eq","","",3109,[[["cpha_a",4]]]],[11,"eq","","",3110,[[["cpol_a",4]]]],[11,"eq","","",3111,[[["dord_a",4]]]],[11,"eq","atsamd51g::sercom0::spis::ctrlb","",3132,[[["chsize_a",4]]]],[11,"eq","","",3133,[[["amode_a",4]]]],[11,"eq","atsamd51g::sercom0::spis::ctrlc","",3144,[[["data32b_a",4]]]],[11,"eq","atsamd51g::sercom0::spim::ctrla","",3193,[[["mode_a",4]]]],[11,"eq","","",3194,[[["dopo_a",4]]]],[11,"eq","","",3195,[[["dipo_a",4]]]],[11,"eq","","",3196,[[["form_a",4]]]],[11,"eq","","",3197,[[["cpha_a",4]]]],[11,"eq","","",3198,[[["cpol_a",4]]]],[11,"eq","","",3199,[[["dord_a",4]]]],[11,"eq","atsamd51g::sercom0::spim::ctrlb","",3220,[[["chsize_a",4]]]],[11,"eq","","",3221,[[["amode_a",4]]]],[11,"eq","atsamd51g::sercom0::spim::ctrlc","",3232,[[["data32b_a",4]]]],[11,"eq","atsamd51g::sercom0::usart_ext::ctrla","",3281,[[["mode_a",4]]]],[11,"eq","","",3282,[[["sampr_a",4]]]],[11,"eq","","",3283,[[["txpo_a",4]]]],[11,"eq","","",3284,[[["rxpo_a",4]]]],[11,"eq","","",3285,[[["form_a",4]]]],[11,"eq","","",3286,[[["cmode_a",4]]]],[11,"eq","","",3287,[[["cpol_a",4]]]],[11,"eq","","",3288,[[["dord_a",4]]]],[11,"eq","atsamd51g::sercom0::usart_ext::ctrlb","",3314,[[["chsize_a",4]]]],[11,"eq","","",3315,[[["sbmode_a",4]]]],[11,"eq","","",3316,[[["pmode_a",4]]]],[11,"eq","atsamd51g::sercom0::usart_ext::ctrlc","",3331,[[["data32b_a",4]]]],[11,"eq","atsamd51g::sercom0::usart_int::ctrla","",3407,[[["mode_a",4]]]],[11,"eq","","",3408,[[["sampr_a",4]]]],[11,"eq","","",3409,[[["txpo_a",4]]]],[11,"eq","","",3410,[[["rxpo_a",4]]]],[11,"eq","","",3411,[[["form_a",4]]]],[11,"eq","","",3412,[[["cmode_a",4]]]],[11,"eq","","",3413,[[["cpol_a",4]]]],[11,"eq","","",3414,[[["dord_a",4]]]],[11,"eq","atsamd51g::sercom0::usart_int::ctrlb","",3440,[[["chsize_a",4]]]],[11,"eq","","",3441,[[["sbmode_a",4]]]],[11,"eq","","",3442,[[["pmode_a",4]]]],[11,"eq","atsamd51g::sercom0::usart_int::ctrlc","",3457,[[["data32b_a",4]]]],[11,"eq","atsamd51g::supc::bod33","",3557,[[["action_a",4]]]],[11,"eq","","",3558,[[["psel_a",4]]]],[11,"eq","atsamd51g::supc::vreg","",3573,[[["sel_a",4]]]],[11,"eq","atsamd51g::supc::vref","",3582,[[["sel_a",4]]]],[11,"eq","atsamd51g::supc::bbps","",3592,[[["conf_a",4]]]],[11,"eq","atsamd51g::tc0::count8::ctrla","",3612,[[["mode_a",4]]]],[11,"eq","","",3613,[[["prescsync_a",4]]]],[11,"eq","","",3614,[[["prescaler_a",4]]]],[11,"eq","","",3615,[[["captmode0_a",4]]]],[11,"eq","","",3616,[[["captmode1_a",4]]]],[11,"eq","atsamd51g::tc0::count8::ctrlbclr","",3639,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tc0::count8::ctrlbset","",3647,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tc0::count8::evctrl","",3655,[[["evact_a",4]]]],[11,"eq","atsamd51g::tc0::count8::wave","",3690,[[["wavegen_a",4]]]],[11,"eq","atsamd51g::tc0::count16::ctrla","",3718,[[["mode_a",4]]]],[11,"eq","","",3719,[[["prescsync_a",4]]]],[11,"eq","","",3720,[[["prescaler_a",4]]]],[11,"eq","","",3721,[[["captmode0_a",4]]]],[11,"eq","","",3722,[[["captmode1_a",4]]]],[11,"eq","atsamd51g::tc0::count16::ctrlbclr","",3745,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tc0::count16::ctrlbset","",3753,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tc0::count16::evctrl","",3761,[[["evact_a",4]]]],[11,"eq","atsamd51g::tc0::count16::wave","",3796,[[["wavegen_a",4]]]],[11,"eq","atsamd51g::tc0::count32::ctrla","",3818,[[["mode_a",4]]]],[11,"eq","","",3819,[[["prescsync_a",4]]]],[11,"eq","","",3820,[[["prescaler_a",4]]]],[11,"eq","","",3821,[[["captmode0_a",4]]]],[11,"eq","","",3822,[[["captmode1_a",4]]]],[11,"eq","atsamd51g::tc0::count32::ctrlbclr","",3845,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tc0::count32::ctrlbset","",3853,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tc0::count32::evctrl","",3861,[[["evact_a",4]]]],[11,"eq","atsamd51g::tc0::count32::wave","",3896,[[["wavegen_a",4]]]],[11,"eq","atsamd51g::tcc0::ctrla","",3920,[[["resolution_a",4]]]],[11,"eq","","",3921,[[["prescaler_a",4]]]],[11,"eq","","",3922,[[["prescsync_a",4]]]],[11,"eq","atsamd51g::tcc0::ctrlbclr","",3943,[[["idxcmd_a",4]]]],[11,"eq","","",3944,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tcc0::ctrlbset","",3954,[[["idxcmd_a",4]]]],[11,"eq","","",3955,[[["cmd_a",4]]]],[11,"eq","atsamd51g::tcc0::fctrla","",3966,[[["src_a",4]]]],[11,"eq","","",3967,[[["blank_a",4]]]],[11,"eq","","",3968,[[["halt_a",4]]]],[11,"eq","","",3969,[[["chsel_a",4]]]],[11,"eq","","",3970,[[["capture_a",4]]]],[11,"eq","atsamd51g::tcc0::fctrlb","",3989,[[["src_a",4]]]],[11,"eq","","",3990,[[["blank_a",4]]]],[11,"eq","","",3991,[[["halt_a",4]]]],[11,"eq","","",3992,[[["chsel_a",4]]]],[11,"eq","","",3993,[[["capture_a",4]]]],[11,"eq","atsamd51g::tcc0::evctrl","",4053,[[["evact0_a",4]]]],[11,"eq","","",4054,[[["evact1_a",4]]]],[11,"eq","","",4055,[[["cntsel_a",4]]]],[11,"eq","atsamd51g::tcc0::wave","",4196,[[["wavegen_a",4]]]],[11,"eq","","",4197,[[["ramp_a",4]]]],[11,"eq","atsamd51g::usb::device::ctrla","",4318,[[["mode_a",4]]]],[11,"eq","atsamd51g::usb::device::ctrlb","",4331,[[["spdconf_a",4]]]],[11,"eq","","",4332,[[["lpmhdsk_a",4]]]],[11,"eq","atsamd51g::usb::device::status","",4351,[[["speed_a",4]]]],[11,"eq","","",4352,[[["linestate_a",4]]]],[11,"eq","atsamd51g::usb::device::fsmstatus","",4356,[[["fsmstate_a",4]]]],[11,"eq","atsamd51g::usb::host::ctrla","",4455,[[["mode_a",4]]]],[11,"eq","atsamd51g::usb::host::ctrlb","",4468,[[["spdconf_a",4]]]],[11,"eq","atsamd51g::usb::host::fsmstatus","",4489,[[["fsmstate_a",4]]]],[11,"eq","atsamd51g::wdt::config","",4588,[[["per_a",4]]]],[11,"eq","","",4589,[[["window_a",4]]]],[11,"eq","atsamd51g::wdt::ewctrl","",4596,[[["ewoffset_a",4]]]],[11,"eq","atsamd51g::wdt::clear","",4611,[[["clear_aw",4]]]],[11,"eq","atsamd51g::sys_tick::csr","",4660,[[["enable_a",4]]]],[11,"eq","","",4661,[[["tickint_a",4]]]],[11,"eq","","",4662,[[["clksource_a",4]]]],[11,"eq","atsamd51g::sys_tick::calib","",4678,[[["skew_a",4]]]],[11,"eq","","",4679,[[["noref_a",4]]]],[11,"eq","atsamd51g::system_control::icsr","",4693,[[["pendstclr_a",4]]]],[11,"eq","","",4694,[[["pendstset_a",4]]]],[11,"eq","","",4695,[[["pendsvclr_a",4]]]],[11,"eq","","",4696,[[["pendsvset_a",4]]]],[11,"eq","","",4697,[[["nmipendset_a",4]]]],[11,"eq","atsamd51g::system_control::aircr","",4718,[[["sysresetreq_a",4]]]],[11,"eq","","",4719,[[["endianness_a",4]]]],[11,"eq","atsamd51g::system_control::scr","",4730,[[["sleeponexit_a",4]]]],[11,"eq","","",4731,[[["sleepdeep_a",4]]]],[11,"eq","","",4732,[[["sevonpend_a",4]]]],[11,"eq","atsamd51g::system_control::ccr","",4741,[[["unalign_trp_a",4]]]],[11,"eq","","",4742,[[["stkalign_a",4]]]],[11,"eq","atsamd51g::system_control::cpacr","",4823,[[["cp10_a",4]]]],[11,"eq","","",4824,[[["cp11_a",4]]]],[11,"clone","atsamd51g","",2,[[],["interrupt",4]]],[11,"clone","atsamd51g::generic","",3,[[],["variant",4]]],[11,"clone","atsamd51g::ac::statusa","",40,[[],["wstate0_a",4]]],[11,"clone","atsamd51g::ac::winctrl","",47,[[],["wintsel0_a",4]]],[11,"clone","atsamd51g::ac::compctrl","",56,[[],["intsel_a",4]]],[11,"clone","","",57,[[],["muxneg_a",4]]],[11,"clone","","",58,[[],["muxpos_a",4]]],[11,"clone","","",59,[[],["speed_a",4]]],[11,"clone","","",60,[[],["hyst_a",4]]],[11,"clone","","",61,[[],["flen_a",4]]],[11,"clone","","",62,[[],["out_a",4]]],[11,"clone","atsamd51g::adc0::ctrla","",89,[[],["dualsel_a",4]]],[11,"clone","","",90,[[],["prescaler_a",4]]],[11,"clone","atsamd51g::adc0::inputctrl","",114,[[],["muxpos_a",4]]],[11,"clone","","",115,[[],["muxneg_a",4]]],[11,"clone","atsamd51g::adc0::ctrlb","",124,[[],["ressel_a",4]]],[11,"clone","","",125,[[],["winmode_a",4]]],[11,"clone","atsamd51g::adc0::refctrl","",136,[[],["refsel_a",4]]],[11,"clone","atsamd51g::adc0::avgctrl","",142,[[],["samplenum_a",4]]],[11,"clone","atsamd51g::aes::ctrla","",208,[[],["aesmode_a",4]]],[11,"clone","","",209,[[],["cfbs_a",4]]],[11,"clone","","",210,[[],["keysize_a",4]]],[11,"clone","","",211,[[],["cipher_a",4]]],[11,"clone","","",212,[[],["startmode_a",4]]],[11,"clone","","",213,[[],["lod_a",4]]],[11,"clone","","",214,[[],["keygen_a",4]]],[11,"clone","","",215,[[],["xorkey_a",4]]],[11,"clone","atsamd51g::ccl::seqctrl","",267,[[],["seqsel_a",4]]],[11,"clone","atsamd51g::ccl::lutctrl","",272,[[],["filtsel_a",4]]],[11,"clone","","",273,[[],["insel0_a",4]]],[11,"clone","","",274,[[],["insel1_a",4]]],[11,"clone","","",275,[[],["insel2_a",4]]],[11,"clone","atsamd51g::cmcc::type_","",293,[[],["waynum_a",4]]],[11,"clone","","",294,[[],["csize_a",4]]],[11,"clone","","",295,[[],["clsize_a",4]]],[11,"clone","atsamd51g::cmcc::cfg","",300,[[],["csizesw_a",4]]],[11,"clone","atsamd51g::cmcc::maint1","",315,[[],["way_aw",4]]],[11,"clone","atsamd51g::cmcc::mcfg","",319,[[],["mode_a",4]]],[11,"clone","atsamd51g::dac::ctrlb","",335,[[],["refsel_a",4]]],[11,"clone","atsamd51g::dac::dacctrl","",383,[[],["cctrl_a",4]]],[11,"clone","","",384,[[],["refresh_a",4]]],[11,"clone","","",385,[[],["osr_a",4]]],[11,"clone","atsamd51g::dmac::channel::chctrla","",409,[[],["trigsrc_a",4]]],[11,"clone","","",410,[[],["trigact_a",4]]],[11,"clone","","",411,[[],["burstlen_a",4]]],[11,"clone","","",412,[[],["threshold_a",4]]],[11,"clone","atsamd51g::dmac::channel::chctrlb","",426,[[],["cmd_a",4]]],[11,"clone","atsamd51g::dmac::channel::chprilvl","",431,[[],["prilvl_a",4]]],[11,"clone","atsamd51g::dmac::channel::chevctrl","",436,[[],["evact_a",4]]],[11,"clone","","",437,[[],["evomode_a",4]]],[11,"clone","atsamd51g::dmac::crcctrl","",475,[[],["crcbeatsize_a",4]]],[11,"clone","","",476,[[],["crcpoly_a",4]]],[11,"clone","","",477,[[],["crcsrc_a",4]]],[11,"clone","","",478,[[],["crcmode_a",4]]],[11,"clone","atsamd51g::dmac::prictrl0","",537,[[],["qos0_a",4]]],[11,"clone","","",538,[[],["qos1_a",4]]],[11,"clone","","",539,[[],["qos2_a",4]]],[11,"clone","","",540,[[],["qos3_a",4]]],[11,"clone","atsamd51g::dsu::did","",608,[[],["series_a",4]]],[11,"clone","","",609,[[],["family_a",4]]],[11,"clone","","",610,[[],["processor_a",4]]],[11,"clone","atsamd51g::dsu::cfg","",615,[[],["dccdmalevel_a",4]]],[11,"clone","atsamd51g::eic::ctrla","",638,[[],["cksel_a",4]]],[11,"clone","atsamd51g::eic::nmictrl","",645,[[],["nmisense_a",4]]],[11,"clone","","",646,[[],["nmiasynch_a",4]]],[11,"clone","atsamd51g::eic::asynch","",670,[[],["asynch_a",4]]],[11,"clone","atsamd51g::eic::config","",675,[[],["sense0_a",4]]],[11,"clone","","",676,[[],["sense1_a",4]]],[11,"clone","","",677,[[],["sense2_a",4]]],[11,"clone","","",678,[[],["sense3_a",4]]],[11,"clone","","",679,[[],["sense4_a",4]]],[11,"clone","","",680,[[],["sense5_a",4]]],[11,"clone","","",681,[[],["sense6_a",4]]],[11,"clone","","",682,[[],["sense7_a",4]]],[11,"clone","atsamd51g::eic::dprescaler","",712,[[],["prescaler0_a",4]]],[11,"clone","","",713,[[],["states0_a",4]]],[11,"clone","","",714,[[],["prescaler1_a",4]]],[11,"clone","","",715,[[],["states1_a",4]]],[11,"clone","","",716,[[],["tickon_a",4]]],[11,"clone","atsamd51g::evsys::channel::channel","",732,[[],["path_a",4]]],[11,"clone","","",733,[[],["edgsel_a",4]]],[11,"clone","atsamd51g::gclk::syncbusy","",838,[[],["genctrl_a",4]]],[11,"clone","atsamd51g::gclk::genctrl","",841,[[],["src_a",4]]],[11,"clone","","",842,[[],["divsel_a",4]]],[11,"clone","atsamd51g::gclk::pchctrl","",855,[[],["gen_a",4]]],[11,"clone","atsamd51g::icm::cfg","",865,[[],["ualgo_a",4]]],[11,"clone","atsamd51g::icm::uasr","",905,[[],["urat_a",4]]],[11,"clone","atsamd51g::mclk::hsdiv","",926,[[],["div_a",4]]],[11,"clone","atsamd51g::mclk::cpudiv","",929,[[],["div_a",4]]],[11,"clone","atsamd51g::nvmctrl::ctrla","",1008,[[],["wmode_a",4]]],[11,"clone","","",1009,[[],["prm_a",4]]],[11,"clone","atsamd51g::nvmctrl::ctrlb","",1023,[[],["cmd_aw",4]]],[11,"clone","","",1024,[[],["cmdex_aw",4]]],[11,"clone","atsamd51g::nvmctrl::param","",1028,[[],["psz_a",4]]],[11,"clone","atsamd51g::nvmctrl::status","",1070,[[],["bootprot_a",4]]],[11,"clone","atsamd51g::nvmctrl::eccerr","",1078,[[],["typel_a",4]]],[11,"clone","","",1079,[[],["typeh_a",4]]],[11,"clone","atsamd51g::nvmctrl::seecfg","",1087,[[],["wmode_a",4]]],[11,"clone","atsamd51g::oscctrl::dpll::dpllctrlb","",1105,[[],["filter_a",4]]],[11,"clone","","",1106,[[],["refclk_a",4]]],[11,"clone","","",1107,[[],["ltime_a",4]]],[11,"clone","","",1108,[[],["dcofilter_a",4]]],[11,"clone","atsamd51g::oscctrl::xoscctrl","",1187,[[],["startup_a",4]]],[11,"clone","","",1188,[[],["cfdpresc_a",4]]],[11,"clone","atsamd51g::osc32kctrl::rtcctrl","",1250,[[],["rtcsel_a",4]]],[11,"clone","atsamd51g::osc32kctrl::xosc32k","",1255,[[],["startup_a",4]]],[11,"clone","","",1256,[[],["cgm_a",4]]],[11,"clone","atsamd51g::pac::wrctrl","",1285,[[],["key_a",4]]],[11,"clone","atsamd51g::pdec::ctrla","",1401,[[],["mode_a",4]]],[11,"clone","","",1402,[[],["conf_a",4]]],[11,"clone","atsamd51g::pdec::ctrlbclr","",1423,[[],["cmd_a",4]]],[11,"clone","atsamd51g::pdec::ctrlbset","",1429,[[],["cmd_a",4]]],[11,"clone","atsamd51g::pdec::evctrl","",1435,[[],["evact_a",4]]],[11,"clone","atsamd51g::pdec::presc","",1489,[[],["presc_a",4]]],[11,"clone","atsamd51g::pdec::prescbuf","",1497,[[],["prescbuf_a",4]]],[11,"clone","atsamd51g::pm::sleepcfg","",1518,[[],["sleepmode_a",4]]],[11,"clone","atsamd51g::pm::stdbycfg","",1532,[[],["ramcfg_a",4]]],[11,"clone","","",1533,[[],["fastwkup_a",4]]],[11,"clone","atsamd51g::pm::hibcfg","",1540,[[],["ramcfg_a",4]]],[11,"clone","","",1541,[[],["bramcfg_a",4]]],[11,"clone","atsamd51g::pm::bkupcfg","",1548,[[],["bramcfg_a",4]]],[11,"clone","atsamd51g::port::group::evctrl","",1597,[[],["evact0_a",4]]],[11,"clone","atsamd51g::qspi::ctrlb","",1629,[[],["mode_a",4]]],[11,"clone","","",1630,[[],["csmode_a",4]]],[11,"clone","","",1631,[[],["datalen_a",4]]],[11,"clone","atsamd51g::qspi::instrframe","",1686,[[],["width_a",4]]],[11,"clone","","",1687,[[],["optcodelen_a",4]]],[11,"clone","","",1688,[[],["addrlen_a",4]]],[11,"clone","","",1689,[[],["tfrtype_a",4]]],[11,"clone","atsamd51g::rtc::mode0::ctrla","",1738,[[],["mode_a",4]]],[11,"clone","","",1739,[[],["prescaler_a",4]]],[11,"clone","atsamd51g::rtc::mode0::ctrlb","",1752,[[],["debf_a",4]]],[11,"clone","","",1753,[[],["actf_a",4]]],[11,"clone","atsamd51g::rtc::mode0::tampctrl","",1840,[[],["in0act_a",4]]],[11,"clone","","",1841,[[],["in1act_a",4]]],[11,"clone","","",1842,[[],["in2act_a",4]]],[11,"clone","","",1843,[[],["in3act_a",4]]],[11,"clone","","",1844,[[],["in4act_a",4]]],[11,"clone","atsamd51g::rtc::mode1::ctrla","",1879,[[],["mode_a",4]]],[11,"clone","","",1880,[[],["prescaler_a",4]]],[11,"clone","atsamd51g::rtc::mode1::ctrlb","",1892,[[],["debf_a",4]]],[11,"clone","","",1893,[[],["actf_a",4]]],[11,"clone","atsamd51g::rtc::mode1::tampctrl","",1991,[[],["in0act_a",4]]],[11,"clone","","",1992,[[],["in1act_a",4]]],[11,"clone","","",1993,[[],["in2act_a",4]]],[11,"clone","","",1994,[[],["in3act_a",4]]],[11,"clone","","",1995,[[],["in4act_a",4]]],[11,"clone","atsamd51g::rtc::mode2::ctrla","",2030,[[],["mode_a",4]]],[11,"clone","","",2031,[[],["prescaler_a",4]]],[11,"clone","atsamd51g::rtc::mode2::ctrlb","",2045,[[],["debf_a",4]]],[11,"clone","","",2046,[[],["actf_a",4]]],[11,"clone","atsamd51g::rtc::mode2::clock","",2124,[[],["hour_a",4]]],[11,"clone","atsamd51g::rtc::mode2::alarm0","",2137,[[],["hour_a",4]]],[11,"clone","atsamd51g::rtc::mode2::mask0","",2147,[[],["sel_a",4]]],[11,"clone","atsamd51g::rtc::mode2::alarm1","",2152,[[],["hour_a",4]]],[11,"clone","atsamd51g::rtc::mode2::mask1","",2162,[[],["sel_a",4]]],[11,"clone","atsamd51g::rtc::mode2::tampctrl","",2167,[[],["in0act_a",4]]],[11,"clone","","",2168,[[],["in1act_a",4]]],[11,"clone","","",2169,[[],["in2act_a",4]]],[11,"clone","","",2170,[[],["in3act_a",4]]],[11,"clone","","",2171,[[],["in4act_a",4]]],[11,"clone","atsamd51g::rtc::mode2::timestamp","",2194,[[],["hour_a",4]]],[11,"clone","atsamd51g::sdhc0::bsr","",2216,[[],["boundary_a",4]]],[11,"clone","atsamd51g::sdhc0::tmr","",2228,[[],["dmaen_a",4]]],[11,"clone","","",2229,[[],["bcen_a",4]]],[11,"clone","","",2230,[[],["acmden_a",4]]],[11,"clone","","",2231,[[],["dtdsel_a",4]]],[11,"clone","","",2232,[[],["msbsel_a",4]]],[11,"clone","atsamd51g::sdhc0::cr","",2245,[[],["resptyp_a",4]]],[11,"clone","","",2246,[[],["cmdccen_a",4]]],[11,"clone","","",2247,[[],["cmdicen_a",4]]],[11,"clone","","",2248,[[],["dpsel_a",4]]],[11,"clone","","",2249,[[],["cmdtyp_a",4]]],[11,"clone","atsamd51g::sdhc0::psr","",2267,[[],["cmdinhc_a",4]]],[11,"clone","","",2268,[[],["cmdinhd_a",4]]],[11,"clone","","",2269,[[],["dlact_a",4]]],[11,"clone","","",2270,[[],["rtreq_a",4]]],[11,"clone","","",2271,[[],["wtact_a",4]]],[11,"clone","","",2272,[[],["rtact_a",4]]],[11,"clone","","",2273,[[],["bufwren_a",4]]],[11,"clone","","",2274,[[],["bufrden_a",4]]],[11,"clone","","",2275,[[],["cardins_a",4]]],[11,"clone","","",2276,[[],["cardss_a",4]]],[11,"clone","","",2277,[[],["carddpl_a",4]]],[11,"clone","","",2278,[[],["wrppl_a",4]]],[11,"clone","atsamd51g::sdhc0::hc1r","",2292,[[],["ledctrl_a",4]]],[11,"clone","","",2293,[[],["dw_a",4]]],[11,"clone","","",2294,[[],["hsen_a",4]]],[11,"clone","","",2295,[[],["dmasel_a",4]]],[11,"clone","","",2296,[[],["carddtl_a",4]]],[11,"clone","","",2297,[[],["carddsel_a",4]]],[11,"clone","atsamd51g::sdhc0::hc1r_emmc_mode","",2312,[[],["dw_a",4]]],[11,"clone","","",2313,[[],["hsen_a",4]]],[11,"clone","","",2314,[[],["dmasel_a",4]]],[11,"clone","atsamd51g::sdhc0::pcr","",2323,[[],["sdbpwr_a",4]]],[11,"clone","","",2324,[[],["sdbvsel_a",4]]],[11,"clone","atsamd51g::sdhc0::bgcr","",2331,[[],["stpbgr_a",4]]],[11,"clone","","",2332,[[],["contr_a",4]]],[11,"clone","","",2333,[[],["rwctrl_a",4]]],[11,"clone","","",2334,[[],["intbg_a",4]]],[11,"clone","atsamd51g::sdhc0::bgcr_emmc_mode","",2345,[[],["stpbgr_a",4]]],[11,"clone","","",2346,[[],["contr_a",4]]],[11,"clone","atsamd51g::sdhc0::wcr","",2353,[[],["wkencint_a",4]]],[11,"clone","","",2354,[[],["wkencins_a",4]]],[11,"clone","","",2355,[[],["wkencrem_a",4]]],[11,"clone","atsamd51g::sdhc0::ccr","",2364,[[],["intclken_a",4]]],[11,"clone","","",2365,[[],["intclks_a",4]]],[11,"clone","","",2366,[[],["sdclken_a",4]]],[11,"clone","","",2367,[[],["clkgsel_a",4]]],[11,"clone","atsamd51g::sdhc0::srr","",2383,[[],["swrstall_a",4]]],[11,"clone","","",2384,[[],["swrstcmd_a",4]]],[11,"clone","","",2385,[[],["swrstdat_a",4]]],[11,"clone","atsamd51g::sdhc0::nistr","",2394,[[],["cmdc_a",4]]],[11,"clone","","",2395,[[],["trfc_a",4]]],[11,"clone","","",2396,[[],["blkge_a",4]]],[11,"clone","","",2397,[[],["dmaint_a",4]]],[11,"clone","","",2398,[[],["bwrrdy_a",4]]],[11,"clone","","",2399,[[],["brdrdy_a",4]]],[11,"clone","","",2400,[[],["cins_a",4]]],[11,"clone","","",2401,[[],["crem_a",4]]],[11,"clone","","",2402,[[],["cint_a",4]]],[11,"clone","","",2403,[[],["errint_a",4]]],[11,"clone","atsamd51g::sdhc0::nistr_emmc_mode","",2426,[[],["cmdc_a",4]]],[11,"clone","","",2427,[[],["trfc_a",4]]],[11,"clone","","",2428,[[],["blkge_a",4]]],[11,"clone","","",2429,[[],["dmaint_a",4]]],[11,"clone","","",2430,[[],["bwrrdy_a",4]]],[11,"clone","","",2431,[[],["brdrdy_a",4]]],[11,"clone","","",2432,[[],["errint_a",4]]],[11,"clone","atsamd51g::sdhc0::eistr","",2450,[[],["cmdteo_a",4]]],[11,"clone","","",2451,[[],["cmdcrc_a",4]]],[11,"clone","","",2452,[[],["cmdend_a",4]]],[11,"clone","","",2453,[[],["cmdidx_a",4]]],[11,"clone","","",2454,[[],["datteo_a",4]]],[11,"clone","","",2455,[[],["datcrc_a",4]]],[11,"clone","","",2456,[[],["datend_a",4]]],[11,"clone","","",2457,[[],["curlim_a",4]]],[11,"clone","","",2458,[[],["acmd_a",4]]],[11,"clone","","",2459,[[],["adma_a",4]]],[11,"clone","atsamd51g::sdhc0::eistr_emmc_mode","",2482,[[],["cmdteo_a",4]]],[11,"clone","","",2483,[[],["cmdcrc_a",4]]],[11,"clone","","",2484,[[],["cmdend_a",4]]],[11,"clone","","",2485,[[],["cmdidx_a",4]]],[11,"clone","","",2486,[[],["datteo_a",4]]],[11,"clone","","",2487,[[],["datcrc_a",4]]],[11,"clone","","",2488,[[],["datend_a",4]]],[11,"clone","","",2489,[[],["curlim_a",4]]],[11,"clone","","",2490,[[],["acmd_a",4]]],[11,"clone","","",2491,[[],["adma_a",4]]],[11,"clone","","",2492,[[],["bootae_a",4]]],[11,"clone","atsamd51g::sdhc0::nister","",2517,[[],["cmdc_a",4]]],[11,"clone","","",2518,[[],["trfc_a",4]]],[11,"clone","","",2519,[[],["blkge_a",4]]],[11,"clone","","",2520,[[],["dmaint_a",4]]],[11,"clone","","",2521,[[],["bwrrdy_a",4]]],[11,"clone","","",2522,[[],["brdrdy_a",4]]],[11,"clone","","",2523,[[],["cins_a",4]]],[11,"clone","","",2524,[[],["crem_a",4]]],[11,"clone","","",2525,[[],["cint_a",4]]],[11,"clone","atsamd51g::sdhc0::nister_emmc_mode","",2546,[[],["cmdc_a",4]]],[11,"clone","","",2547,[[],["trfc_a",4]]],[11,"clone","","",2548,[[],["blkge_a",4]]],[11,"clone","","",2549,[[],["dmaint_a",4]]],[11,"clone","","",2550,[[],["bwrrdy_a",4]]],[11,"clone","","",2551,[[],["brdrdy_a",4]]],[11,"clone","atsamd51g::sdhc0::eister","",2567,[[],["cmdteo_a",4]]],[11,"clone","","",2568,[[],["cmdcrc_a",4]]],[11,"clone","","",2569,[[],["cmdend_a",4]]],[11,"clone","","",2570,[[],["cmdidx_a",4]]],[11,"clone","","",2571,[[],["datteo_a",4]]],[11,"clone","","",2572,[[],["datcrc_a",4]]],[11,"clone","","",2573,[[],["datend_a",4]]],[11,"clone","","",2574,[[],["curlim_a",4]]],[11,"clone","","",2575,[[],["acmd_a",4]]],[11,"clone","","",2576,[[],["adma_a",4]]],[11,"clone","atsamd51g::sdhc0::eister_emmc_mode","",2599,[[],["cmdteo_a",4]]],[11,"clone","","",2600,[[],["cmdcrc_a",4]]],[11,"clone","","",2601,[[],["cmdend_a",4]]],[11,"clone","","",2602,[[],["cmdidx_a",4]]],[11,"clone","","",2603,[[],["datteo_a",4]]],[11,"clone","","",2604,[[],["datcrc_a",4]]],[11,"clone","","",2605,[[],["datend_a",4]]],[11,"clone","","",2606,[[],["curlim_a",4]]],[11,"clone","","",2607,[[],["acmd_a",4]]],[11,"clone","","",2608,[[],["adma_a",4]]],[11,"clone","atsamd51g::sdhc0::nisier","",2632,[[],["cmdc_a",4]]],[11,"clone","","",2633,[[],["trfc_a",4]]],[11,"clone","","",2634,[[],["blkge_a",4]]],[11,"clone","","",2635,[[],["dmaint_a",4]]],[11,"clone","","",2636,[[],["bwrrdy_a",4]]],[11,"clone","","",2637,[[],["brdrdy_a",4]]],[11,"clone","","",2638,[[],["cins_a",4]]],[11,"clone","","",2639,[[],["crem_a",4]]],[11,"clone","","",2640,[[],["cint_a",4]]],[11,"clone","atsamd51g::sdhc0::nisier_emmc_mode","",2661,[[],["cmdc_a",4]]],[11,"clone","","",2662,[[],["trfc_a",4]]],[11,"clone","","",2663,[[],["blkge_a",4]]],[11,"clone","","",2664,[[],["dmaint_a",4]]],[11,"clone","","",2665,[[],["bwrrdy_a",4]]],[11,"clone","","",2666,[[],["brdrdy_a",4]]],[11,"clone","atsamd51g::sdhc0::eisier","",2682,[[],["cmdteo_a",4]]],[11,"clone","","",2683,[[],["cmdcrc_a",4]]],[11,"clone","","",2684,[[],["cmdend_a",4]]],[11,"clone","","",2685,[[],["cmdidx_a",4]]],[11,"clone","","",2686,[[],["datteo_a",4]]],[11,"clone","","",2687,[[],["datcrc_a",4]]],[11,"clone","","",2688,[[],["datend_a",4]]],[11,"clone","","",2689,[[],["curlim_a",4]]],[11,"clone","","",2690,[[],["acmd_a",4]]],[11,"clone","","",2691,[[],["adma_a",4]]],[11,"clone","atsamd51g::sdhc0::eisier_emmc_mode","",2714,[[],["cmdteo_a",4]]],[11,"clone","","",2715,[[],["cmdcrc_a",4]]],[11,"clone","","",2716,[[],["cmdend_a",4]]],[11,"clone","","",2717,[[],["cmdidx_a",4]]],[11,"clone","","",2718,[[],["datteo_a",4]]],[11,"clone","","",2719,[[],["datcrc_a",4]]],[11,"clone","","",2720,[[],["datend_a",4]]],[11,"clone","","",2721,[[],["curlim_a",4]]],[11,"clone","","",2722,[[],["acmd_a",4]]],[11,"clone","","",2723,[[],["adma_a",4]]],[11,"clone","atsamd51g::sdhc0::acesr","",2747,[[],["acmd12ne_a",4]]],[11,"clone","","",2748,[[],["acmdteo_a",4]]],[11,"clone","","",2749,[[],["acmdcrc_a",4]]],[11,"clone","","",2750,[[],["acmdend_a",4]]],[11,"clone","","",2751,[[],["acmdidx_a",4]]],[11,"clone","","",2752,[[],["cmdni_a",4]]],[11,"clone","atsamd51g::sdhc0::hc2r","",2760,[[],["uhsms_a",4]]],[11,"clone","","",2761,[[],["vs18en_a",4]]],[11,"clone","","",2762,[[],["drvsel_a",4]]],[11,"clone","","",2763,[[],["extun_a",4]]],[11,"clone","","",2764,[[],["slcksel_a",4]]],[11,"clone","","",2765,[[],["asinten_a",4]]],[11,"clone","","",2766,[[],["pvalen_a",4]]],[11,"clone","atsamd51g::sdhc0::hc2r_emmc_mode","",2783,[[],["hs200en_a",4]]],[11,"clone","","",2784,[[],["drvsel_a",4]]],[11,"clone","","",2785,[[],["extun_a",4]]],[11,"clone","","",2786,[[],["slcksel_a",4]]],[11,"clone","","",2787,[[],["pvalen_a",4]]],[11,"clone","atsamd51g::sdhc0::ca0r","",2800,[[],["teoclkf_a",4]]],[11,"clone","","",2801,[[],["teoclku_a",4]]],[11,"clone","","",2802,[[],["baseclkf_a",4]]],[11,"clone","","",2803,[[],["maxblkl_a",4]]],[11,"clone","","",2804,[[],["ed8sup_a",4]]],[11,"clone","","",2805,[[],["adma2sup_a",4]]],[11,"clone","","",2806,[[],["hssup_a",4]]],[11,"clone","","",2807,[[],["sdmasup_a",4]]],[11,"clone","","",2808,[[],["srsup_a",4]]],[11,"clone","","",2809,[[],["v33vsup_a",4]]],[11,"clone","","",2810,[[],["v30vsup_a",4]]],[11,"clone","","",2811,[[],["v18vsup_a",4]]],[11,"clone","","",2812,[[],["sb64sup_a",4]]],[11,"clone","","",2813,[[],["asintsup_a",4]]],[11,"clone","","",2814,[[],["sltype_a",4]]],[11,"clone","atsamd51g::sdhc0::ca1r","",2831,[[],["sdr50sup_a",4]]],[11,"clone","","",2832,[[],["sdr104sup_a",4]]],[11,"clone","","",2833,[[],["ddr50sup_a",4]]],[11,"clone","","",2834,[[],["drvasup_a",4]]],[11,"clone","","",2835,[[],["drvcsup_a",4]]],[11,"clone","","",2836,[[],["drvdsup_a",4]]],[11,"clone","","",2837,[[],["tcntrt_a",4]]],[11,"clone","","",2838,[[],["tsdr50_a",4]]],[11,"clone","","",2839,[[],["clkmult_a",4]]],[11,"clone","atsamd51g::sdhc0::mccar","",2850,[[],["maxcur33v_a",4]]],[11,"clone","","",2851,[[],["maxcur30v_a",4]]],[11,"clone","","",2852,[[],["maxcur18v_a",4]]],[11,"clone","atsamd51g::sdhc0::feraces","",2857,[[],["acmd12ne_aw",4]]],[11,"clone","","",2858,[[],["acmdteo_aw",4]]],[11,"clone","","",2859,[[],["acmdcrc_aw",4]]],[11,"clone","","",2860,[[],["acmdend_aw",4]]],[11,"clone","","",2861,[[],["acmdidx_aw",4]]],[11,"clone","","",2862,[[],["cmdni_aw",4]]],[11,"clone","atsamd51g::sdhc0::fereis","",2870,[[],["cmdteo_aw",4]]],[11,"clone","","",2871,[[],["cmdcrc_aw",4]]],[11,"clone","","",2872,[[],["cmdend_aw",4]]],[11,"clone","","",2873,[[],["cmdidx_aw",4]]],[11,"clone","","",2874,[[],["datteo_aw",4]]],[11,"clone","","",2875,[[],["datcrc_aw",4]]],[11,"clone","","",2876,[[],["datend_aw",4]]],[11,"clone","","",2877,[[],["curlim_aw",4]]],[11,"clone","","",2878,[[],["acmd_aw",4]]],[11,"clone","","",2879,[[],["adma_aw",4]]],[11,"clone","","",2880,[[],["bootae_aw",4]]],[11,"clone","atsamd51g::sdhc0::aesr","",2893,[[],["errst_a",4]]],[11,"clone","","",2894,[[],["lmis_a",4]]],[11,"clone","atsamd51g::sdhc0::pvr","",2901,[[],["clkgsel_a",4]]],[11,"clone","","",2902,[[],["drvsel_a",4]]],[11,"clone","atsamd51g::sdhc0::mc1r","",2912,[[],["cmdtyp_a",4]]],[11,"clone","atsamd51g::sdhc0::acr","",2925,[[],["bmax_a",4]]],[11,"clone","atsamd51g::sdhc0::cc2r","",2930,[[],["fsdclkd_a",4]]],[11,"clone","atsamd51g::sdhc0::dbgr","",2939,[[],["nidbg_a",4]]],[11,"clone","atsamd51g::sercom0::i2cm::ctrla","",2950,[[],["mode_a",4]]],[11,"clone","","",2951,[[],["sdahold_a",4]]],[11,"clone","","",2952,[[],["speed_a",4]]],[11,"clone","","",2953,[[],["inactout_a",4]]],[11,"clone","atsamd51g::sercom0::i2cm::ctrlc","",2978,[[],["data32b_a",4]]],[11,"clone","atsamd51g::sercom0::i2cs::ctrla","",3029,[[],["mode_a",4]]],[11,"clone","","",3030,[[],["sdahold_a",4]]],[11,"clone","","",3031,[[],["speed_a",4]]],[11,"clone","atsamd51g::sercom0::i2cs::ctrlc","",3055,[[],["data32b_a",4]]],[11,"clone","atsamd51g::sercom0::spis::ctrla","",3105,[[],["mode_a",4]]],[11,"clone","","",3106,[[],["dopo_a",4]]],[11,"clone","","",3107,[[],["dipo_a",4]]],[11,"clone","","",3108,[[],["form_a",4]]],[11,"clone","","",3109,[[],["cpha_a",4]]],[11,"clone","","",3110,[[],["cpol_a",4]]],[11,"clone","","",3111,[[],["dord_a",4]]],[11,"clone","atsamd51g::sercom0::spis::ctrlb","",3132,[[],["chsize_a",4]]],[11,"clone","","",3133,[[],["amode_a",4]]],[11,"clone","atsamd51g::sercom0::spis::ctrlc","",3144,[[],["data32b_a",4]]],[11,"clone","atsamd51g::sercom0::spim::ctrla","",3193,[[],["mode_a",4]]],[11,"clone","","",3194,[[],["dopo_a",4]]],[11,"clone","","",3195,[[],["dipo_a",4]]],[11,"clone","","",3196,[[],["form_a",4]]],[11,"clone","","",3197,[[],["cpha_a",4]]],[11,"clone","","",3198,[[],["cpol_a",4]]],[11,"clone","","",3199,[[],["dord_a",4]]],[11,"clone","atsamd51g::sercom0::spim::ctrlb","",3220,[[],["chsize_a",4]]],[11,"clone","","",3221,[[],["amode_a",4]]],[11,"clone","atsamd51g::sercom0::spim::ctrlc","",3232,[[],["data32b_a",4]]],[11,"clone","atsamd51g::sercom0::usart_ext::ctrla","",3281,[[],["mode_a",4]]],[11,"clone","","",3282,[[],["sampr_a",4]]],[11,"clone","","",3283,[[],["txpo_a",4]]],[11,"clone","","",3284,[[],["rxpo_a",4]]],[11,"clone","","",3285,[[],["form_a",4]]],[11,"clone","","",3286,[[],["cmode_a",4]]],[11,"clone","","",3287,[[],["cpol_a",4]]],[11,"clone","","",3288,[[],["dord_a",4]]],[11,"clone","atsamd51g::sercom0::usart_ext::ctrlb","",3314,[[],["chsize_a",4]]],[11,"clone","","",3315,[[],["sbmode_a",4]]],[11,"clone","","",3316,[[],["pmode_a",4]]],[11,"clone","atsamd51g::sercom0::usart_ext::ctrlc","",3331,[[],["data32b_a",4]]],[11,"clone","atsamd51g::sercom0::usart_int::ctrla","",3407,[[],["mode_a",4]]],[11,"clone","","",3408,[[],["sampr_a",4]]],[11,"clone","","",3409,[[],["txpo_a",4]]],[11,"clone","","",3410,[[],["rxpo_a",4]]],[11,"clone","","",3411,[[],["form_a",4]]],[11,"clone","","",3412,[[],["cmode_a",4]]],[11,"clone","","",3413,[[],["cpol_a",4]]],[11,"clone","","",3414,[[],["dord_a",4]]],[11,"clone","atsamd51g::sercom0::usart_int::ctrlb","",3440,[[],["chsize_a",4]]],[11,"clone","","",3441,[[],["sbmode_a",4]]],[11,"clone","","",3442,[[],["pmode_a",4]]],[11,"clone","atsamd51g::sercom0::usart_int::ctrlc","",3457,[[],["data32b_a",4]]],[11,"clone","atsamd51g::supc::bod33","",3557,[[],["action_a",4]]],[11,"clone","","",3558,[[],["psel_a",4]]],[11,"clone","atsamd51g::supc::vreg","",3573,[[],["sel_a",4]]],[11,"clone","atsamd51g::supc::vref","",3582,[[],["sel_a",4]]],[11,"clone","atsamd51g::supc::bbps","",3592,[[],["conf_a",4]]],[11,"clone","atsamd51g::tc0::count8::ctrla","",3612,[[],["mode_a",4]]],[11,"clone","","",3613,[[],["prescsync_a",4]]],[11,"clone","","",3614,[[],["prescaler_a",4]]],[11,"clone","","",3615,[[],["captmode0_a",4]]],[11,"clone","","",3616,[[],["captmode1_a",4]]],[11,"clone","atsamd51g::tc0::count8::ctrlbclr","",3639,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tc0::count8::ctrlbset","",3647,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tc0::count8::evctrl","",3655,[[],["evact_a",4]]],[11,"clone","atsamd51g::tc0::count8::wave","",3690,[[],["wavegen_a",4]]],[11,"clone","atsamd51g::tc0::count16::ctrla","",3718,[[],["mode_a",4]]],[11,"clone","","",3719,[[],["prescsync_a",4]]],[11,"clone","","",3720,[[],["prescaler_a",4]]],[11,"clone","","",3721,[[],["captmode0_a",4]]],[11,"clone","","",3722,[[],["captmode1_a",4]]],[11,"clone","atsamd51g::tc0::count16::ctrlbclr","",3745,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tc0::count16::ctrlbset","",3753,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tc0::count16::evctrl","",3761,[[],["evact_a",4]]],[11,"clone","atsamd51g::tc0::count16::wave","",3796,[[],["wavegen_a",4]]],[11,"clone","atsamd51g::tc0::count32::ctrla","",3818,[[],["mode_a",4]]],[11,"clone","","",3819,[[],["prescsync_a",4]]],[11,"clone","","",3820,[[],["prescaler_a",4]]],[11,"clone","","",3821,[[],["captmode0_a",4]]],[11,"clone","","",3822,[[],["captmode1_a",4]]],[11,"clone","atsamd51g::tc0::count32::ctrlbclr","",3845,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tc0::count32::ctrlbset","",3853,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tc0::count32::evctrl","",3861,[[],["evact_a",4]]],[11,"clone","atsamd51g::tc0::count32::wave","",3896,[[],["wavegen_a",4]]],[11,"clone","atsamd51g::tcc0::ctrla","",3920,[[],["resolution_a",4]]],[11,"clone","","",3921,[[],["prescaler_a",4]]],[11,"clone","","",3922,[[],["prescsync_a",4]]],[11,"clone","atsamd51g::tcc0::ctrlbclr","",3943,[[],["idxcmd_a",4]]],[11,"clone","","",3944,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tcc0::ctrlbset","",3954,[[],["idxcmd_a",4]]],[11,"clone","","",3955,[[],["cmd_a",4]]],[11,"clone","atsamd51g::tcc0::fctrla","",3966,[[],["src_a",4]]],[11,"clone","","",3967,[[],["blank_a",4]]],[11,"clone","","",3968,[[],["halt_a",4]]],[11,"clone","","",3969,[[],["chsel_a",4]]],[11,"clone","","",3970,[[],["capture_a",4]]],[11,"clone","atsamd51g::tcc0::fctrlb","",3989,[[],["src_a",4]]],[11,"clone","","",3990,[[],["blank_a",4]]],[11,"clone","","",3991,[[],["halt_a",4]]],[11,"clone","","",3992,[[],["chsel_a",4]]],[11,"clone","","",3993,[[],["capture_a",4]]],[11,"clone","atsamd51g::tcc0::evctrl","",4053,[[],["evact0_a",4]]],[11,"clone","","",4054,[[],["evact1_a",4]]],[11,"clone","","",4055,[[],["cntsel_a",4]]],[11,"clone","atsamd51g::tcc0::wave","",4196,[[],["wavegen_a",4]]],[11,"clone","","",4197,[[],["ramp_a",4]]],[11,"clone","atsamd51g::usb::device::ctrla","",4318,[[],["mode_a",4]]],[11,"clone","atsamd51g::usb::device::ctrlb","",4331,[[],["spdconf_a",4]]],[11,"clone","","",4332,[[],["lpmhdsk_a",4]]],[11,"clone","atsamd51g::usb::device::status","",4351,[[],["speed_a",4]]],[11,"clone","","",4352,[[],["linestate_a",4]]],[11,"clone","atsamd51g::usb::device::fsmstatus","",4356,[[],["fsmstate_a",4]]],[11,"clone","atsamd51g::usb::host::ctrla","",4455,[[],["mode_a",4]]],[11,"clone","atsamd51g::usb::host::ctrlb","",4468,[[],["spdconf_a",4]]],[11,"clone","atsamd51g::usb::host::fsmstatus","",4489,[[],["fsmstate_a",4]]],[11,"clone","atsamd51g::wdt::config","",4588,[[],["per_a",4]]],[11,"clone","","",4589,[[],["window_a",4]]],[11,"clone","atsamd51g::wdt::ewctrl","",4596,[[],["ewoffset_a",4]]],[11,"clone","atsamd51g::wdt::clear","",4611,[[],["clear_aw",4]]],[11,"clone","atsamd51g::sys_tick::csr","",4660,[[],["enable_a",4]]],[11,"clone","","",4661,[[],["tickint_a",4]]],[11,"clone","","",4662,[[],["clksource_a",4]]],[11,"clone","atsamd51g::sys_tick::calib","",4678,[[],["skew_a",4]]],[11,"clone","","",4679,[[],["noref_a",4]]],[11,"clone","atsamd51g::system_control::icsr","",4693,[[],["pendstclr_a",4]]],[11,"clone","","",4694,[[],["pendstset_a",4]]],[11,"clone","","",4695,[[],["pendsvclr_a",4]]],[11,"clone","","",4696,[[],["pendsvset_a",4]]],[11,"clone","","",4697,[[],["nmipendset_a",4]]],[11,"clone","atsamd51g::system_control::aircr","",4718,[[],["sysresetreq_a",4]]],[11,"clone","","",4719,[[],["endianness_a",4]]],[11,"clone","atsamd51g::system_control::scr","",4730,[[],["sleeponexit_a",4]]],[11,"clone","","",4731,[[],["sleepdeep_a",4]]],[11,"clone","","",4732,[[],["sevonpend_a",4]]],[11,"clone","atsamd51g::system_control::ccr","",4741,[[],["unalign_trp_a",4]]],[11,"clone","","",4742,[[],["stkalign_a",4]]],[11,"clone","atsamd51g::system_control::cpacr","",4823,[[],["cp10_a",4]]],[11,"clone","","",4824,[[],["cp11_a",4]]],[11,"nr","atsamd51g","",2,[[]]],[11,"take","","Returns all the core peripherals once",0,[[],[["peripherals",3],["option",4]]]],[11,"steal","","Unchecked version of `Peripherals::take`",0,[[],["peripherals",3]]],[11,"iciallu","","I-cache invalidate all to PoU",4904,[[]]],[11,"icimvau","","I-cache invalidate by MVA to PoU",4904,[[]]],[11,"dcimvac","","D-cache invalidate by MVA to PoC",4904,[[]]],[11,"dcisw","","D-cache invalidate by set-way",4904,[[]]],[11,"dccmvau","","D-cache clean by MVA to PoU",4904,[[]]],[11,"dccmvac","","D-cache clean by MVA to PoC",4904,[[]]],[11,"dccsw","","D-cache clean by set-way",4904,[[]]],[11,"dccimvac","","D-cache clean and invalidate by MVA to PoC",4904,[[]]],[11,"dccisw","","D-cache clean and invalidate by set-way",4904,[[]]],[11,"bpiall","","Branch predictor invalidate all",4904,[[]]],[11,"ptr","","Returns a pointer to the register block",4904,[[]]],[11,"select_cache","","Selects the current CCSIDR",4905,[[["csselrcachetype",4]]]],[11,"cache_num_sets_ways","","Returns the number of sets and ways in the selected cache",4905,[[["csselrcachetype",4]]]],[11,"ptr","","Returns a pointer to the register block",4905,[[]]],[11,"enable_trace","","Enables TRACE. This is for example required by the…",4906,[[]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",4906,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",4906,[[]]],[11,"ptr","","Returns a pointer to the register block",4906,[[]]],[11,"enable_cycle_counter","","Enables the cycle counter",4907,[[]]],[11,"get_cycle_count","","Returns the current clock cycle count",4907,[[]]],[11,"unlock","","Removes the software lock on the DWT",4907,[[]]],[11,"ptr","","Returns a pointer to the register block",4907,[[]]],[11,"ptr","","Returns a pointer to the register block",4908,[[]]],[11,"ptr","","Returns a pointer to the register block",4909,[[]]],[11,"ptr","","Returns a pointer to the register block",4910,[[]]],[11,"ptr","","Returns a pointer to the register block",4911,[[]]],[11,"request","","Request an IRQ in software",4912,[[]]],[11,"clear_pending","","Clears `interrupt`\'s pending state",4912,[[]]],[11,"mask","","Disables `interrupt`",4912,[[]]],[11,"unmask","","Enables `interrupt`",4912,[[]]],[11,"disable","","Disables `interrupt`",4912,[[]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",4912,[[]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",4912,[[]]],[11,"is_active","","Is `interrupt` active or pre-empted and stacked",4912,[[]]],[11,"is_enabled","","Checks if `interrupt` is enabled",4912,[[]]],[11,"is_pending","","Checks if `interrupt` is pending",4912,[[]]],[11,"pend","","Forces `interrupt` into pending state",4912,[[]]],[11,"set_pending","","Forces `interrupt` into pending state",4912,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of `interrupt` to `prio`",4912,[[]]],[11,"unpend","","Clears `interrupt`\'s pending state",4912,[[]]],[11,"ptr","","Returns a pointer to the register block",4912,[[]]],[11,"disable_fpu","","Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`",4913,[[]]],[11,"enable_fpu","","Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`",4913,[[]]],[11,"fpu_access_mode","","Gets FPU access mode",4913,[[],["fpuaccessmode",4]]],[11,"set_fpu_access_mode","","Sets FPU access mode",4913,[[["fpuaccessmode",4]]]],[11,"vect_active","","Returns the active exception number",4913,[[],["vectactive",4]]],[11,"enable_icache","","Enables I-Cache if currently disabled",4913,[[]]],[11,"disable_icache","","Disables I-Cache if currently enabled",4913,[[]]],[11,"icache_enabled","","Returns whether the I-Cache is currently enabled",4913,[[]]],[11,"invalidate_icache","","Invalidates I-Cache",4913,[[]]],[11,"enable_dcache","","Enables D-cache if currently disabled",4913,[[["cpuid",3]]]],[11,"disable_dcache","","Disables D-cache if currently enabled",4913,[[["cpuid",3]]]],[11,"dcache_enabled","","Returns whether the D-Cache is currently enabled",4913,[[]]],[11,"clean_dcache","","Cleans D-cache",4913,[[["cpuid",3]]]],[11,"clean_invalidate_dcache","","Cleans and invalidates D-cache",4913,[[["cpuid",3]]]],[11,"invalidate_dcache_by_address","","Invalidates D-cache by address",4913,[[]]],[11,"clean_dcache_by_address","","Cleans D-cache by address",4913,[[]]],[11,"clean_invalidate_dcache_by_address","","Cleans and invalidates D-cache by address",4913,[[]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",4913,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",4913,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",4913,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",4913,[[]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",4913,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",4913,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",4913,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",4913,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",4913,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will pend…",4913,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",4913,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",4913,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",4913,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",4913,[[["systemhandler",4]]]],[11,"enable","","Enable the exception",4913,[[["exception",4]]]],[11,"disable","","Disable the exception",4913,[[["exception",4]]]],[11,"is_enabled","","Check if an exception is enabled",4913,[[["exception",4]]]],[11,"ptr","","Returns a pointer to the register block",4913,[[]]],[11,"clear_current","","Clears current value to 0",4914,[[]]],[11,"disable_counter","","Disables counter",4914,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",4914,[[]]],[11,"enable_counter","","Enables counter",4914,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",4914,[[]]],[11,"get_clock_source","","Gets clock source",4914,[[],["systclksource",4]]],[11,"get_current","","Gets current value",4914,[[]]],[11,"get_reload","","Gets reload value",4914,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",4914,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",4914,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",4914,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",4914,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",4914,[[]]],[11,"is_precise","","Checks if the calibration value is precise",4914,[[]]],[11,"set_clock_source","","Sets clock source",4914,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",4914,[[]]],[11,"ptr","","Returns a pointer to the register block",4914,[[]]],[11,"ptr","","Returns a pointer to the register block",4915,[[]]]],"p":[[3,"CorePeripherals"],[3,"Peripherals"],[4,"Interrupt"],[4,"Variant"],[8,"ResetValue"],[3,"Reg"],[3,"R"],[3,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[3,"START0_W"],[3,"START1_W"],[6,"W"],[3,"COMPEO0_W"],[3,"COMPEO1_W"],[3,"WINEO0_W"],[3,"COMPEI0_W"],[3,"COMPEI1_W"],[3,"INVEI0_W"],[3,"INVEI1_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[3,"COMP0_W"],[3,"COMP1_W"],[3,"WIN0_W"],[6,"R"],[6,"W"],[4,"WSTATE0_A"],[6,"WSTATE0_R"],[6,"R"],[6,"R"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"WINTSEL0_A"],[3,"WEN0_W"],[6,"WINTSEL0_R"],[3,"WINTSEL0_W"],[6,"R"],[6,"W"],[3,"VALUE_W"],[6,"R"],[6,"W"],[4,"INTSEL_A"],[4,"MUXNEG_A"],[4,"MUXPOS_A"],[4,"SPEED_A"],[4,"HYST_A"],[4,"FLEN_A"],[4,"OUT_A"],[3,"ENABLE_W"],[3,"SINGLE_W"],[6,"INTSEL_R"],[3,"INTSEL_W"],[3,"RUNSTDBY_W"],[6,"MUXNEG_R"],[3,"MUXNEG_W"],[6,"MUXPOS_R"],[3,"MUXPOS_W"],[3,"SWAP_W"],[6,"SPEED_R"],[3,"SPEED_W"],[3,"HYSTEN_W"],[6,"HYST_R"],[3,"HYST_W"],[6,"FLEN_R"],[3,"FLEN_W"],[6,"OUT_R"],[3,"OUT_W"],[6,"R"],[6,"W"],[6,"R"],[3,"BIAS0_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"DUALSEL_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"DUALSEL_R"],[3,"DUALSEL_W"],[3,"SLAVEEN_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"R2R_W"],[6,"R"],[6,"W"],[3,"FLUSHEI_W"],[3,"STARTEI_W"],[3,"FLUSHINV_W"],[3,"STARTINV_W"],[3,"RESRDYEO_W"],[3,"WINMONEO_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[4,"MUXPOS_A"],[4,"MUXNEG_A"],[6,"MUXPOS_R"],[3,"MUXPOS_W"],[3,"DIFFMODE_W"],[6,"MUXNEG_R"],[3,"MUXNEG_W"],[3,"DSEQSTOP_W"],[6,"R"],[6,"W"],[4,"RESSEL_A"],[4,"WINMODE_A"],[3,"LEFTADJ_W"],[3,"FREERUN_W"],[3,"CORREN_W"],[6,"RESSEL_R"],[3,"RESSEL_W"],[6,"WINMODE_R"],[3,"WINMODE_W"],[3,"WINSS_W"],[6,"R"],[6,"W"],[4,"REFSEL_A"],[6,"REFSEL_R"],[3,"REFSEL_W"],[3,"REFCOMP_W"],[6,"R"],[6,"W"],[4,"SAMPLENUM_A"],[6,"SAMPLENUM_R"],[3,"SAMPLENUM_W"],[3,"ADJRES_W"],[6,"R"],[6,"W"],[3,"SAMPLEN_W"],[3,"OFFCOMP_W"],[6,"R"],[6,"W"],[3,"WINLT_W"],[6,"R"],[6,"W"],[3,"WINUT_W"],[6,"R"],[6,"W"],[3,"GAINCORR_W"],[6,"R"],[6,"W"],[3,"OFFSETCORR_W"],[6,"R"],[6,"W"],[3,"FLUSH_W"],[3,"START_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[6,"R"],[6,"W"],[3,"RESRDY_W"],[3,"OVERRUN_W"],[3,"WINMON_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"DATA_W"],[6,"W"],[3,"INPUTCTRL_W"],[3,"CTRLB_W"],[3,"REFCTRL_W"],[3,"AVGCTRL_W"],[3,"SAMPCTRL_W"],[3,"WINLT_W"],[3,"WINUT_W"],[3,"GAINCORR_W"],[3,"OFFSETCORR_W"],[3,"AUTOSTART_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[3,"BIASCOMP_W"],[3,"BIASR2R_W"],[3,"BIASREFBUF_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"AESMODE_A"],[4,"CFBS_A"],[4,"KEYSIZE_A"],[4,"CIPHER_A"],[4,"STARTMODE_A"],[4,"LOD_A"],[4,"KEYGEN_A"],[4,"XORKEY_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"AESMODE_R"],[3,"AESMODE_W"],[6,"CFBS_R"],[3,"CFBS_W"],[6,"KEYSIZE_R"],[3,"KEYSIZE_W"],[6,"CIPHER_R"],[3,"CIPHER_W"],[6,"STARTMODE_R"],[3,"STARTMODE_W"],[6,"LOD_R"],[3,"LOD_W"],[6,"KEYGEN_R"],[3,"KEYGEN_W"],[6,"XORKEY_R"],[3,"XORKEY_W"],[3,"CTYPE_W"],[6,"R"],[6,"W"],[3,"START_W"],[3,"NEWMSG_W"],[3,"EOM_W"],[3,"GFMUL_W"],[6,"R"],[6,"W"],[3,"ENCCMP_W"],[3,"GFMCMP_W"],[6,"R"],[6,"W"],[3,"ENCCMP_W"],[3,"GFMCMP_W"],[6,"R"],[6,"W"],[3,"ENCCMP_W"],[3,"GFMCMP_W"],[6,"R"],[6,"W"],[3,"INDATAPTR_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[4,"SEQSEL_A"],[6,"SEQSEL_R"],[3,"SEQSEL_W"],[6,"R"],[6,"W"],[4,"FILTSEL_A"],[4,"INSEL0_A"],[4,"INSEL1_A"],[4,"INSEL2_A"],[3,"ENABLE_W"],[6,"FILTSEL_R"],[3,"FILTSEL_W"],[3,"EDGESEL_W"],[6,"INSEL0_R"],[3,"INSEL0_W"],[6,"INSEL1_R"],[3,"INSEL1_W"],[6,"INSEL2_R"],[3,"INSEL2_W"],[3,"INVEI_W"],[3,"LUTEI_W"],[3,"LUTEO_W"],[3,"TRUTH_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"WAYNUM_A"],[4,"CSIZE_A"],[4,"CLSIZE_A"],[6,"WAYNUM_R"],[6,"CSIZE_R"],[6,"CLSIZE_R"],[6,"R"],[4,"CSIZESW_A"],[3,"ICDIS_W"],[3,"DCDIS_W"],[6,"CSIZESW_R"],[3,"CSIZESW_W"],[6,"R"],[6,"W"],[3,"CEN_W"],[6,"W"],[6,"R"],[3,"LCKWAY_W"],[6,"R"],[6,"W"],[3,"INVALL_W"],[6,"W"],[4,"WAY_AW"],[3,"INDEX_W"],[3,"WAY_W"],[6,"W"],[4,"MODE_A"],[6,"MODE_R"],[3,"MODE_W"],[6,"R"],[6,"W"],[3,"MENABLE_W"],[6,"R"],[6,"W"],[3,"SWRST_W"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[4,"REFSEL_A"],[3,"DIFF_W"],[6,"REFSEL_R"],[3,"REFSEL_W"],[6,"R"],[6,"W"],[3,"STARTEI0_W"],[3,"STARTEI1_W"],[3,"EMPTYEO0_W"],[3,"EMPTYEO1_W"],[3,"INVEI0_W"],[3,"INVEI1_W"],[3,"RESRDYEO0_W"],[3,"RESRDYEO1_W"],[6,"R"],[6,"W"],[3,"UNDERRUN0_W"],[3,"UNDERRUN1_W"],[3,"EMPTY0_W"],[3,"EMPTY1_W"],[3,"RESRDY0_W"],[3,"RESRDY1_W"],[3,"OVERRUN0_W"],[3,"OVERRUN1_W"],[6,"R"],[6,"W"],[3,"UNDERRUN0_W"],[3,"UNDERRUN1_W"],[3,"EMPTY0_W"],[3,"EMPTY1_W"],[3,"RESRDY0_W"],[3,"RESRDY1_W"],[3,"OVERRUN0_W"],[3,"OVERRUN1_W"],[6,"R"],[6,"W"],[3,"UNDERRUN0_W"],[3,"UNDERRUN1_W"],[3,"EMPTY0_W"],[3,"EMPTY1_W"],[3,"RESRDY0_W"],[3,"RESRDY1_W"],[3,"OVERRUN0_W"],[3,"OVERRUN1_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[4,"CCTRL_A"],[4,"REFRESH_A"],[4,"OSR_A"],[3,"LEFTADJ_W"],[3,"ENABLE_W"],[6,"CCTRL_R"],[3,"CCTRL_W"],[3,"FEXT_W"],[3,"RUNSTDBY_W"],[3,"DITHER_W"],[6,"REFRESH_R"],[3,"REFRESH_W"],[6,"OSR_R"],[3,"OSR_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"W"],[3,"DATABUF_W"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"CHANNEL"],[4,"TRIGSRC_A"],[4,"TRIGACT_A"],[4,"BURSTLEN_A"],[4,"THRESHOLD_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"TRIGSRC_R"],[3,"TRIGSRC_W"],[6,"TRIGACT_R"],[3,"TRIGACT_W"],[6,"BURSTLEN_R"],[3,"BURSTLEN_W"],[6,"THRESHOLD_R"],[3,"THRESHOLD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"PRILVL_A"],[6,"PRILVL_R"],[3,"PRILVL_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[4,"EVOMODE_A"],[6,"EVACT_R"],[3,"EVACT_W"],[6,"EVOMODE_R"],[3,"EVOMODE_W"],[3,"EVIE_W"],[3,"EVOE_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[6,"R"],[6,"W"],[3,"PEND_W"],[3,"BUSY_W"],[3,"FERR_W"],[3,"CRCERR_W"],[6,"R"],[6,"W"],[3,"SWRST_W"],[3,"DMAENABLE_W"],[3,"LVLEN0_W"],[3,"LVLEN1_W"],[3,"LVLEN2_W"],[3,"LVLEN3_W"],[6,"R"],[6,"W"],[4,"CRCBEATSIZE_A"],[4,"CRCPOLY_A"],[4,"CRCSRC_A"],[4,"CRCMODE_A"],[6,"CRCBEATSIZE_R"],[3,"CRCBEATSIZE_W"],[6,"CRCPOLY_R"],[3,"CRCPOLY_W"],[6,"CRCSRC_R"],[3,"CRCSRC_W"],[6,"CRCMODE_R"],[3,"CRCMODE_W"],[6,"R"],[6,"W"],[3,"CRCDATAIN_W"],[6,"R"],[6,"W"],[3,"CRCCHKSUM_W"],[6,"R"],[6,"W"],[3,"CRCBUSY_W"],[3,"CRCZERO_W"],[3,"CRCERR_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[3,"SWTRIG0_W"],[3,"SWTRIG1_W"],[3,"SWTRIG2_W"],[3,"SWTRIG3_W"],[3,"SWTRIG4_W"],[3,"SWTRIG5_W"],[3,"SWTRIG6_W"],[3,"SWTRIG7_W"],[3,"SWTRIG8_W"],[3,"SWTRIG9_W"],[3,"SWTRIG10_W"],[3,"SWTRIG11_W"],[3,"SWTRIG12_W"],[3,"SWTRIG13_W"],[3,"SWTRIG14_W"],[3,"SWTRIG15_W"],[3,"SWTRIG16_W"],[3,"SWTRIG17_W"],[3,"SWTRIG18_W"],[3,"SWTRIG19_W"],[3,"SWTRIG20_W"],[3,"SWTRIG21_W"],[3,"SWTRIG22_W"],[3,"SWTRIG23_W"],[3,"SWTRIG24_W"],[3,"SWTRIG25_W"],[3,"SWTRIG26_W"],[3,"SWTRIG27_W"],[3,"SWTRIG28_W"],[3,"SWTRIG29_W"],[3,"SWTRIG30_W"],[3,"SWTRIG31_W"],[6,"R"],[6,"W"],[4,"QOS0_A"],[4,"QOS1_A"],[4,"QOS2_A"],[4,"QOS3_A"],[3,"LVLPRI0_W"],[6,"QOS0_R"],[3,"QOS0_W"],[3,"RRLVLEN0_W"],[3,"LVLPRI1_W"],[6,"QOS1_R"],[3,"QOS1_W"],[3,"RRLVLEN1_W"],[3,"LVLPRI2_W"],[6,"QOS2_R"],[3,"QOS2_W"],[3,"RRLVLEN2_W"],[3,"LVLPRI3_W"],[6,"QOS3_R"],[3,"QOS3_W"],[3,"RRLVLEN3_W"],[6,"R"],[6,"W"],[3,"ID_W"],[3,"TERR_W"],[3,"TCMPL_W"],[3,"SUSP_W"],[3,"CRCERR_W"],[3,"FERR_W"],[3,"BUSY_W"],[3,"PEND_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"BASEADDR_W"],[6,"R"],[6,"W"],[3,"WRBADDR_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"CRC_W"],[3,"MBIST_W"],[3,"CE_W"],[3,"ARR_W"],[3,"SMSA_W"],[6,"W"],[3,"DONE_W"],[3,"CRSTEXT_W"],[3,"BERR_W"],[3,"FAIL_W"],[3,"PERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"AMOD_W"],[3,"ADDR_W"],[6,"R"],[6,"W"],[3,"LENGTH_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[4,"SERIES_A"],[4,"FAMILY_A"],[4,"PROCESSOR_A"],[6,"SERIES_R"],[6,"FAMILY_R"],[6,"PROCESSOR_R"],[6,"R"],[4,"DCCDMALEVEL_A"],[3,"LQOS_W"],[6,"DCCDMALEVEL_R"],[3,"DCCDMALEVEL_W"],[3,"ETBRAMEN_W"],[6,"R"],[6,"W"],[3,"DCFG_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"RegisterBlock"],[4,"CKSEL_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"CKSEL_R"],[3,"CKSEL_W"],[6,"R"],[6,"W"],[4,"NMISENSE_A"],[4,"NMIASYNCH_A"],[6,"NMISENSE_R"],[3,"NMISENSE_W"],[3,"NMIFILTEN_W"],[6,"NMIASYNCH_R"],[3,"NMIASYNCH_W"],[6,"R"],[6,"W"],[3,"NMI_W"],[6,"R"],[6,"W"],[6,"R"],[3,"EXTINTEO_W"],[6,"R"],[6,"W"],[3,"EXTINT_W"],[6,"R"],[6,"W"],[3,"EXTINT_W"],[6,"R"],[6,"W"],[3,"EXTINT_W"],[6,"R"],[6,"W"],[4,"ASYNCH_A"],[6,"ASYNCH_R"],[3,"ASYNCH_W"],[6,"R"],[6,"W"],[4,"SENSE0_A"],[4,"SENSE1_A"],[4,"SENSE2_A"],[4,"SENSE3_A"],[4,"SENSE4_A"],[4,"SENSE5_A"],[4,"SENSE6_A"],[4,"SENSE7_A"],[6,"SENSE0_R"],[3,"SENSE0_W"],[3,"FILTEN0_W"],[6,"SENSE1_R"],[3,"SENSE1_W"],[3,"FILTEN1_W"],[6,"SENSE2_R"],[3,"SENSE2_W"],[3,"FILTEN2_W"],[6,"SENSE3_R"],[3,"SENSE3_W"],[3,"FILTEN3_W"],[6,"SENSE4_R"],[3,"SENSE4_W"],[3,"FILTEN4_W"],[6,"SENSE5_R"],[3,"SENSE5_W"],[3,"FILTEN5_W"],[6,"SENSE6_R"],[3,"SENSE6_W"],[3,"FILTEN6_W"],[6,"SENSE7_R"],[3,"SENSE7_W"],[3,"FILTEN7_W"],[6,"R"],[6,"W"],[3,"DEBOUNCEN_W"],[6,"R"],[6,"W"],[4,"PRESCALER0_A"],[4,"STATES0_A"],[4,"PRESCALER1_A"],[4,"STATES1_A"],[4,"TICKON_A"],[6,"PRESCALER0_R"],[3,"PRESCALER0_W"],[6,"STATES0_R"],[3,"STATES0_W"],[6,"PRESCALER1_R"],[3,"PRESCALER1_W"],[6,"STATES1_R"],[3,"STATES1_W"],[6,"TICKON_R"],[3,"TICKON_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"CHANNEL"],[4,"PATH_A"],[4,"EDGSEL_A"],[3,"EVGEN_W"],[6,"PATH_R"],[3,"PATH_W"],[6,"EDGSEL_R"],[3,"EDGSEL_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"R"],[6,"W"],[3,"OVR_W"],[3,"EVD_W"],[6,"R"],[6,"W"],[3,"OVR_W"],[3,"EVD_W"],[6,"R"],[6,"W"],[3,"OVR_W"],[3,"EVD_W"],[6,"R"],[6,"W"],[6,"R"],[3,"SWRST_W"],[6,"R"],[6,"W"],[3,"CHANNEL0_W"],[3,"CHANNEL1_W"],[3,"CHANNEL2_W"],[3,"CHANNEL3_W"],[3,"CHANNEL4_W"],[3,"CHANNEL5_W"],[3,"CHANNEL6_W"],[3,"CHANNEL7_W"],[3,"CHANNEL8_W"],[3,"CHANNEL9_W"],[3,"CHANNEL10_W"],[3,"CHANNEL11_W"],[3,"CHANNEL12_W"],[3,"CHANNEL13_W"],[3,"CHANNEL14_W"],[3,"CHANNEL15_W"],[3,"CHANNEL16_W"],[3,"CHANNEL17_W"],[3,"CHANNEL18_W"],[3,"CHANNEL19_W"],[3,"CHANNEL20_W"],[3,"CHANNEL21_W"],[3,"CHANNEL22_W"],[3,"CHANNEL23_W"],[3,"CHANNEL24_W"],[3,"CHANNEL25_W"],[3,"CHANNEL26_W"],[3,"CHANNEL27_W"],[3,"CHANNEL28_W"],[3,"CHANNEL29_W"],[3,"CHANNEL30_W"],[3,"CHANNEL31_W"],[6,"W"],[3,"PRI_W"],[3,"RREN_W"],[6,"R"],[6,"W"],[3,"ID_W"],[3,"OVR_W"],[3,"EVD_W"],[3,"READY_W"],[3,"BUSY_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[3,"CHANNEL_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"R"],[6,"W"],[3,"START_W"],[6,"W"],[3,"REFNUM_W"],[6,"R"],[6,"W"],[3,"DONE_W"],[6,"R"],[6,"W"],[3,"DONE_W"],[6,"R"],[6,"W"],[3,"DONE_W"],[6,"R"],[6,"W"],[3,"BUSY_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"RegisterBlock"],[3,"SWRST_W"],[6,"R"],[6,"W"],[4,"GENCTRL_A"],[6,"GENCTRL_R"],[6,"R"],[4,"SRC_A"],[4,"DIVSEL_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"GENEN_W"],[3,"IDC_W"],[3,"OOV_W"],[3,"OE_W"],[6,"DIVSEL_R"],[3,"DIVSEL_W"],[3,"RUNSTDBY_W"],[3,"DIV_W"],[6,"R"],[6,"W"],[4,"GEN_A"],[6,"GEN_R"],[3,"GEN_W"],[3,"CHEN_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"PRS"],[3,"RegisterBlock"],[4,"UALGO_A"],[3,"WBDIS_W"],[3,"EOMDIS_W"],[3,"SLBDIS_W"],[3,"BBC_W"],[3,"ASCD_W"],[3,"DUALBUFF_W"],[3,"UIHASH_W"],[6,"UALGO_R"],[3,"UALGO_W"],[3,"HAPROT_W"],[3,"DAPROT_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"DISABLE_W"],[3,"SWRST_W"],[3,"REHASH_W"],[3,"RMDIS_W"],[3,"RMEN_W"],[6,"W"],[6,"R"],[3,"RHC_W"],[3,"RDM_W"],[3,"RBE_W"],[3,"RWC_W"],[3,"REC_W"],[3,"RSU_W"],[3,"URAD_W"],[6,"W"],[3,"RHC_W"],[3,"RDM_W"],[3,"RBE_W"],[3,"RWC_W"],[3,"REC_W"],[3,"RSU_W"],[3,"URAD_W"],[6,"W"],[6,"R"],[6,"R"],[4,"URAT_A"],[6,"URAT_R"],[6,"R"],[3,"DASA_W"],[6,"R"],[6,"W"],[3,"HASA_W"],[6,"R"],[6,"W"],[3,"VAL_W"],[6,"W"],[3,"RegisterBlock"],[3,"CKRDY_W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[6,"R"],[6,"W"],[3,"CKRDY_W"],[6,"R"],[6,"W"],[4,"DIV_A"],[6,"DIV_R"],[6,"R"],[4,"DIV_A"],[6,"DIV_R"],[3,"DIV_W"],[6,"R"],[6,"W"],[3,"HPB0__W"],[3,"HPB1__W"],[3,"HPB2__W"],[3,"HPB3__W"],[3,"DSU__W"],[3,"HMATRIX__W"],[3,"NVMCTRL__W"],[3,"HSRAM__W"],[3,"CMCC__W"],[3,"DMAC__W"],[3,"USB__W"],[3,"BKUPRAM__W"],[3,"PAC__W"],[3,"QSPI__W"],[3,"SDHC0__W"],[3,"ICM__W"],[3,"PUKCC__W"],[3,"QSPI_2X__W"],[3,"NVMCTRL_SMEEPROM__W"],[3,"NVMCTRL_CACHE__W"],[6,"R"],[6,"W"],[3,"PAC__W"],[3,"PM__W"],[3,"MCLK__W"],[3,"RSTC__W"],[3,"OSCCTRL__W"],[3,"OSC32KCTRL__W"],[3,"SUPC__W"],[3,"GCLK__W"],[3,"WDT__W"],[3,"RTC__W"],[3,"EIC__W"],[3,"FREQM__W"],[3,"SERCOM0__W"],[3,"SERCOM1__W"],[3,"TC0__W"],[3,"TC1__W"],[6,"R"],[6,"W"],[3,"USB__W"],[3,"DSU__W"],[3,"NVMCTRL__W"],[3,"PORT__W"],[3,"HMATRIX__W"],[3,"EVSYS__W"],[3,"SERCOM2__W"],[3,"SERCOM3__W"],[3,"TCC0__W"],[3,"TCC1__W"],[3,"TC2__W"],[3,"TC3__W"],[3,"RAMECC__W"],[6,"R"],[6,"W"],[3,"TCC2__W"],[3,"PDEC__W"],[3,"AC__W"],[3,"AES__W"],[3,"TRNG__W"],[3,"ICM__W"],[3,"QSPI__W"],[3,"CCL__W"],[6,"R"],[6,"W"],[3,"SERCOM4__W"],[3,"SERCOM5__W"],[3,"ADC0__W"],[3,"ADC1__W"],[3,"DAC__W"],[3,"PCC__W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"WMODE_A"],[4,"PRM_A"],[3,"AUTOWS_W"],[3,"SUSPEN_W"],[6,"WMODE_R"],[3,"WMODE_W"],[6,"PRM_R"],[3,"PRM_W"],[3,"RWS_W"],[3,"AHBNS0_W"],[3,"AHBNS1_W"],[3,"CACHEDIS0_W"],[3,"CACHEDIS1_W"],[6,"R"],[6,"W"],[4,"CMD_AW"],[4,"CMDEX_AW"],[3,"CMD_W"],[3,"CMDEX_W"],[6,"W"],[4,"PSZ_A"],[6,"PSZ_R"],[6,"R"],[3,"DONE_W"],[3,"ADDRE_W"],[3,"PROGE_W"],[3,"LOCKE_W"],[3,"ECCSE_W"],[3,"ECCDE_W"],[3,"NVME_W"],[3,"SUSP_W"],[3,"SEESFULL_W"],[3,"SEESOVF_W"],[3,"SEEWRC_W"],[6,"R"],[6,"W"],[3,"DONE_W"],[3,"ADDRE_W"],[3,"PROGE_W"],[3,"LOCKE_W"],[3,"ECCSE_W"],[3,"ECCDE_W"],[3,"NVME_W"],[3,"SUSP_W"],[3,"SEESFULL_W"],[3,"SEESOVF_W"],[3,"SEEWRC_W"],[6,"R"],[6,"W"],[3,"DONE_W"],[3,"ADDRE_W"],[3,"PROGE_W"],[3,"LOCKE_W"],[3,"ECCSE_W"],[3,"ECCDE_W"],[3,"NVME_W"],[3,"SUSP_W"],[3,"SEESFULL_W"],[3,"SEESOVF_W"],[3,"SEEWRC_W"],[6,"R"],[6,"W"],[4,"BOOTPROT_A"],[6,"BOOTPROT_R"],[6,"R"],[3,"ADDR_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[4,"TYPEL_A"],[4,"TYPEH_A"],[6,"TYPEL_R"],[6,"TYPEH_R"],[6,"R"],[3,"ECCDIS_W"],[3,"ECCELOG_W"],[6,"R"],[6,"W"],[4,"WMODE_A"],[6,"WMODE_R"],[3,"WMODE_W"],[3,"APRDIS_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[3,"DPLL"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"R"],[6,"W"],[3,"LDR_W"],[3,"LDRFRAC_W"],[6,"R"],[6,"W"],[4,"FILTER_A"],[4,"REFCLK_A"],[4,"LTIME_A"],[4,"DCOFILTER_A"],[6,"FILTER_R"],[3,"FILTER_W"],[3,"WUF_W"],[6,"REFCLK_R"],[3,"REFCLK_W"],[6,"LTIME_R"],[3,"LTIME_W"],[3,"LBYPASS_W"],[6,"DCOFILTER_R"],[3,"DCOFILTER_W"],[3,"DCOEN_W"],[3,"DIV_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"CFDEO0_W"],[3,"CFDEO1_W"],[6,"R"],[6,"W"],[3,"XOSCRDY0_W"],[3,"XOSCRDY1_W"],[3,"XOSCFAIL0_W"],[3,"XOSCFAIL1_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"DPLL0LCKR_W"],[3,"DPLL0LCKF_W"],[3,"DPLL0LTO_W"],[3,"DPLL0LDRTO_W"],[3,"DPLL1LCKR_W"],[3,"DPLL1LCKF_W"],[3,"DPLL1LTO_W"],[3,"DPLL1LDRTO_W"],[6,"R"],[6,"W"],[3,"XOSCRDY0_W"],[3,"XOSCRDY1_W"],[3,"XOSCFAIL0_W"],[3,"XOSCFAIL1_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"DPLL0LCKR_W"],[3,"DPLL0LCKF_W"],[3,"DPLL0LTO_W"],[3,"DPLL0LDRTO_W"],[3,"DPLL1LCKR_W"],[3,"DPLL1LCKF_W"],[3,"DPLL1LTO_W"],[3,"DPLL1LDRTO_W"],[6,"R"],[6,"W"],[3,"XOSCRDY0_W"],[3,"XOSCRDY1_W"],[3,"XOSCFAIL0_W"],[3,"XOSCFAIL1_W"],[3,"DFLLRDY_W"],[3,"DFLLOOB_W"],[3,"DFLLLCKF_W"],[3,"DFLLLCKC_W"],[3,"DFLLRCS_W"],[3,"DPLL0LCKR_W"],[3,"DPLL0LCKF_W"],[3,"DPLL0LTO_W"],[3,"DPLL0LDRTO_W"],[3,"DPLL1LCKR_W"],[3,"DPLL1LCKF_W"],[3,"DPLL1LTO_W"],[3,"DPLL1LDRTO_W"],[6,"R"],[6,"W"],[6,"R"],[4,"STARTUP_A"],[4,"CFDPRESC_A"],[3,"ENABLE_W"],[3,"XTALEN_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[3,"LOWBUFGAIN_W"],[3,"IPTAT_W"],[3,"IMULT_W"],[3,"ENALC_W"],[3,"CFDEN_W"],[3,"SWBEN_W"],[6,"STARTUP_R"],[3,"STARTUP_W"],[6,"CFDPRESC_R"],[3,"CFDPRESC_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"R"],[6,"W"],[3,"MODE_W"],[3,"STABLE_W"],[3,"LLAW_W"],[3,"USBCRM_W"],[3,"CCDIS_W"],[3,"QLDIS_W"],[3,"BPLCKC_W"],[3,"WAITLOCK_W"],[6,"R"],[6,"W"],[3,"FINE_W"],[3,"COARSE_W"],[3,"DIFF_W"],[6,"R"],[6,"W"],[3,"MUL_W"],[3,"FSTEP_W"],[3,"CSTEP_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"DFLLCTRLB_W"],[3,"DFLLVAL_W"],[3,"DFLLMUL_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"XOSC32KRDY_W"],[3,"XOSC32KFAIL_W"],[6,"R"],[6,"W"],[3,"XOSC32KRDY_W"],[3,"XOSC32KFAIL_W"],[6,"R"],[6,"W"],[3,"XOSC32KRDY_W"],[3,"XOSC32KFAIL_W"],[6,"R"],[6,"W"],[6,"R"],[4,"RTCSEL_A"],[6,"RTCSEL_R"],[3,"RTCSEL_W"],[6,"R"],[6,"W"],[4,"STARTUP_A"],[4,"CGM_A"],[3,"ENABLE_W"],[3,"XTALEN_W"],[3,"EN32K_W"],[3,"EN1K_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"STARTUP_R"],[3,"STARTUP_W"],[3,"WRTLOCK_W"],[6,"CGM_R"],[3,"CGM_W"],[6,"R"],[6,"W"],[3,"CFDEN_W"],[3,"SWBACK_W"],[3,"CFDPRESC_W"],[6,"R"],[6,"W"],[3,"CFDEO_W"],[6,"R"],[6,"W"],[3,"EN32K_W"],[3,"EN1K_W"],[3,"CALIB_W"],[3,"WRTLOCK_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[4,"KEY_A"],[3,"PERID_W"],[6,"KEY_R"],[3,"KEY_W"],[6,"R"],[6,"W"],[3,"ERREO_W"],[6,"R"],[6,"W"],[3,"ERR_W"],[6,"R"],[6,"W"],[3,"ERR_W"],[6,"R"],[6,"W"],[3,"FLASH__W"],[3,"FLASH_ALT__W"],[3,"SEEPROM__W"],[3,"RAMCM4S__W"],[3,"RAMPPPDSU__W"],[3,"RAMDMAWR__W"],[3,"RAMDMACICM__W"],[3,"HPB0__W"],[3,"HPB1__W"],[3,"HPB2__W"],[3,"HPB3__W"],[3,"PUKCC__W"],[3,"SDHC0__W"],[3,"QSPI__W"],[3,"BKUPRAM__W"],[6,"R"],[6,"W"],[3,"PAC__W"],[3,"PM__W"],[3,"MCLK__W"],[3,"RSTC__W"],[3,"OSCCTRL__W"],[3,"OSC32KCTRL__W"],[3,"SUPC__W"],[3,"GCLK__W"],[3,"WDT__W"],[3,"RTC__W"],[3,"EIC__W"],[3,"FREQM__W"],[3,"SERCOM0__W"],[3,"SERCOM1__W"],[3,"TC0__W"],[3,"TC1__W"],[6,"R"],[6,"W"],[3,"USB__W"],[3,"DSU__W"],[3,"NVMCTRL__W"],[3,"CMCC__W"],[3,"PORT__W"],[3,"DMAC__W"],[3,"HMATRIX__W"],[3,"EVSYS__W"],[3,"SERCOM2__W"],[3,"SERCOM3__W"],[3,"TCC0__W"],[3,"TCC1__W"],[3,"TC2__W"],[3,"TC3__W"],[3,"RAMECC__W"],[6,"R"],[6,"W"],[3,"TCC2__W"],[3,"PDEC__W"],[3,"AC__W"],[3,"AES__W"],[3,"TRNG__W"],[3,"ICM__W"],[3,"PUKCC__W"],[3,"QSPI__W"],[3,"CCL__W"],[6,"R"],[6,"W"],[3,"SERCOM4__W"],[3,"SERCOM5__W"],[3,"ADC0__W"],[3,"ADC1__W"],[3,"DAC__W"],[3,"PCC__W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"RegisterBlock"],[3,"PCEN_W"],[3,"DSIZE_W"],[3,"SCALE_W"],[3,"ALWYS_W"],[3,"HALFS_W"],[3,"FRSTS_W"],[3,"ISIZE_W"],[3,"CID_W"],[6,"R"],[6,"W"],[3,"DRDY_W"],[3,"OVRE_W"],[6,"W"],[3,"DRDY_W"],[3,"OVRE_W"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[3,"WPEN_W"],[3,"WPKEY_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[4,"MODE_A"],[4,"CONF_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[6,"CONF_R"],[3,"CONF_W"],[3,"ALOCK_W"],[3,"SWAP_W"],[3,"PEREN_W"],[3,"PINEN0_W"],[3,"PINEN1_W"],[3,"PINEN2_W"],[3,"PINVEN0_W"],[3,"PINVEN1_W"],[3,"PINVEN2_W"],[3,"ANGULAR_W"],[3,"MAXCMP_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"LUPD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"LUPD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"EVINV_W"],[3,"EVEI_W"],[3,"OVFEO_W"],[3,"ERREO_W"],[3,"DIREO_W"],[3,"VLCEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"DIR_W"],[3,"VLC_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"DIR_W"],[3,"VLC_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"DIR_W"],[3,"VLC_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"QERR_W"],[3,"IDXERR_W"],[3,"MPERR_W"],[3,"WINERR_W"],[3,"HERR_W"],[3,"STOP_W"],[3,"DIR_W"],[3,"PRESCBUFV_W"],[3,"FILTERBUFV_W"],[3,"CCBUFV0_W"],[3,"CCBUFV1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[4,"PRESC_A"],[6,"PRESC_R"],[3,"PRESC_W"],[6,"R"],[6,"W"],[3,"FILTER_W"],[6,"R"],[6,"W"],[4,"PRESCBUF_A"],[6,"PRESCBUF_R"],[3,"PRESCBUF_W"],[6,"R"],[6,"W"],[3,"FILTERBUF_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"IORET_W"],[6,"R"],[6,"W"],[4,"SLEEPMODE_A"],[6,"SLEEPMODE_R"],[3,"SLEEPMODE_W"],[6,"R"],[6,"W"],[3,"SLEEPRDY_W"],[6,"R"],[6,"W"],[3,"SLEEPRDY_W"],[6,"R"],[6,"W"],[3,"SLEEPRDY_W"],[6,"R"],[6,"W"],[4,"RAMCFG_A"],[4,"FASTWKUP_A"],[6,"RAMCFG_R"],[3,"RAMCFG_W"],[6,"FASTWKUP_R"],[3,"FASTWKUP_W"],[6,"R"],[6,"W"],[4,"RAMCFG_A"],[4,"BRAMCFG_A"],[6,"RAMCFG_R"],[3,"RAMCFG_W"],[6,"BRAMCFG_R"],[3,"BRAMCFG_W"],[6,"R"],[6,"W"],[4,"BRAMCFG_A"],[6,"BRAMCFG_R"],[3,"BRAMCFG_W"],[6,"R"],[6,"W"],[3,"DLYVAL_W"],[3,"IGNACK_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"GROUP"],[3,"DIR_W"],[6,"R"],[6,"W"],[3,"DIRCLR_W"],[6,"R"],[6,"W"],[3,"DIRSET_W"],[6,"R"],[6,"W"],[3,"DIRTGL_W"],[6,"R"],[6,"W"],[3,"OUT_W"],[6,"R"],[6,"W"],[3,"OUTCLR_W"],[6,"R"],[6,"W"],[3,"OUTSET_W"],[6,"R"],[6,"W"],[3,"OUTTGL_W"],[6,"R"],[6,"W"],[6,"R"],[3,"SAMPLING_W"],[6,"R"],[6,"W"],[3,"PINMASK_W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[3,"PMUX_W"],[3,"WRPMUX_W"],[3,"WRPINCFG_W"],[3,"HWSEL_W"],[6,"W"],[4,"EVACT0_A"],[3,"PID0_W"],[6,"EVACT0_R"],[3,"EVACT0_W"],[3,"PORTEI0_W"],[3,"PID1_W"],[3,"EVACT1_W"],[3,"PORTEI1_W"],[3,"PID2_W"],[3,"EVACT2_W"],[3,"PORTEI2_W"],[3,"PID3_W"],[3,"EVACT3_W"],[3,"PORTEI3_W"],[6,"R"],[6,"W"],[3,"PMUXE_W"],[3,"PMUXO_W"],[6,"R"],[6,"W"],[3,"PMUXEN_W"],[3,"INEN_W"],[3,"PULLEN_W"],[3,"DRVSTR_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"LASTXFER_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"CSMODE_A"],[4,"DATALEN_A"],[6,"MODE_R"],[3,"MODE_W"],[3,"LOOPEN_W"],[3,"WDRBT_W"],[3,"SMEMREG_W"],[6,"CSMODE_R"],[3,"CSMODE_W"],[6,"DATALEN_R"],[3,"DATALEN_W"],[3,"DLYBCT_W"],[3,"DLYCS_W"],[6,"R"],[6,"W"],[3,"CPOL_W"],[3,"CPHA_W"],[3,"BAUD_W"],[3,"DLYBS_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DATA_W"],[6,"W"],[3,"RXC_W"],[3,"DRE_W"],[3,"TXC_W"],[3,"ERROR_W"],[3,"CSRISE_W"],[3,"INSTREND_W"],[6,"R"],[6,"W"],[3,"RXC_W"],[3,"DRE_W"],[3,"TXC_W"],[3,"ERROR_W"],[3,"CSRISE_W"],[3,"INSTREND_W"],[6,"R"],[6,"W"],[3,"RXC_W"],[3,"DRE_W"],[3,"TXC_W"],[3,"ERROR_W"],[3,"CSRISE_W"],[3,"INSTREND_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[6,"R"],[6,"W"],[3,"INSTR_W"],[3,"OPTCODE_W"],[6,"R"],[6,"W"],[4,"WIDTH_A"],[4,"OPTCODELEN_A"],[4,"ADDRLEN_A"],[4,"TFRTYPE_A"],[6,"WIDTH_R"],[3,"WIDTH_W"],[3,"INSTREN_W"],[3,"ADDREN_W"],[3,"OPTCODEEN_W"],[3,"DATAEN_W"],[6,"OPTCODELEN_R"],[3,"OPTCODELEN_W"],[6,"ADDRLEN_R"],[3,"ADDRLEN_W"],[6,"TFRTYPE_R"],[3,"TFRTYPE_W"],[3,"CRMODE_W"],[3,"DDREN_W"],[3,"DUMMYLEN_W"],[6,"R"],[6,"W"],[3,"ENABLE_W"],[3,"RANDOMDIS_W"],[6,"R"],[6,"W"],[3,"KEY_W"],[6,"W"],[3,"RegisterBlock"],[3,"SINGLEE_W"],[3,"DUALE_W"],[6,"R"],[6,"W"],[3,"SINGLEE_W"],[3,"DUALE_W"],[6,"R"],[6,"W"],[3,"SINGLEE_W"],[3,"DUALE_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"ECCDIS_W"],[3,"ECCELOG_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[6,"R"],[6,"R"],[3,"MODE0"],[3,"MODE1"],[3,"MODE2"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"MATCHCLR_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"BKTRST_W"],[3,"GPTRST_W"],[3,"COUNTSYNC_W"],[6,"R"],[6,"W"],[4,"DEBF_A"],[4,"ACTF_A"],[3,"GP0EN_W"],[3,"GP2EN_W"],[3,"DEBMAJ_W"],[3,"DEBASYNC_W"],[3,"RTCOUT_W"],[3,"DMAEN_W"],[6,"DEBF_R"],[3,"DEBF_W"],[6,"ACTF_R"],[3,"ACTF_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"CMPEO0_W"],[3,"CMPEO1_W"],[3,"TAMPEREO_W"],[3,"OVFEO_W"],[3,"TAMPEVEI_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COMP_W"],[6,"R"],[6,"W"],[3,"GP_W"],[6,"R"],[6,"W"],[4,"IN0ACT_A"],[4,"IN1ACT_A"],[4,"IN2ACT_A"],[4,"IN3ACT_A"],[4,"IN4ACT_A"],[6,"IN0ACT_R"],[3,"IN0ACT_W"],[6,"IN1ACT_R"],[3,"IN1ACT_W"],[6,"IN2ACT_R"],[3,"IN2ACT_W"],[6,"IN3ACT_R"],[3,"IN3ACT_W"],[6,"IN4ACT_R"],[3,"IN4ACT_W"],[3,"TAMLVL0_W"],[3,"TAMLVL1_W"],[3,"TAMLVL2_W"],[3,"TAMLVL3_W"],[3,"TAMLVL4_W"],[3,"DEBNC0_W"],[3,"DEBNC1_W"],[3,"DEBNC2_W"],[3,"DEBNC3_W"],[3,"DEBNC4_W"],[6,"R"],[6,"W"],[6,"R"],[3,"TAMPID0_W"],[3,"TAMPID1_W"],[3,"TAMPID2_W"],[3,"TAMPID3_W"],[3,"TAMPID4_W"],[3,"TAMPEVT_W"],[6,"R"],[6,"W"],[3,"BKUP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"BKTRST_W"],[3,"GPTRST_W"],[3,"COUNTSYNC_W"],[6,"R"],[6,"W"],[4,"DEBF_A"],[4,"ACTF_A"],[3,"GP0EN_W"],[3,"GP2EN_W"],[3,"DEBMAJ_W"],[3,"DEBASYNC_W"],[3,"RTCOUT_W"],[3,"DMAEN_W"],[6,"DEBF_R"],[3,"DEBF_W"],[6,"ACTF_R"],[3,"ACTF_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"CMPEO0_W"],[3,"CMPEO1_W"],[3,"CMPEO2_W"],[3,"CMPEO3_W"],[3,"TAMPEREO_W"],[3,"OVFEO_W"],[3,"TAMPEVEI_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"CMP2_W"],[3,"CMP3_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"CMP2_W"],[3,"CMP3_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"CMP2_W"],[3,"CMP3_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"COMP_W"],[6,"R"],[6,"W"],[3,"GP_W"],[6,"R"],[6,"W"],[4,"IN0ACT_A"],[4,"IN1ACT_A"],[4,"IN2ACT_A"],[4,"IN3ACT_A"],[4,"IN4ACT_A"],[6,"IN0ACT_R"],[3,"IN0ACT_W"],[6,"IN1ACT_R"],[3,"IN1ACT_W"],[6,"IN2ACT_R"],[3,"IN2ACT_W"],[6,"IN3ACT_R"],[3,"IN3ACT_W"],[6,"IN4ACT_R"],[3,"IN4ACT_W"],[3,"TAMLVL0_W"],[3,"TAMLVL1_W"],[3,"TAMLVL2_W"],[3,"TAMLVL3_W"],[3,"TAMLVL4_W"],[3,"DEBNC0_W"],[3,"DEBNC1_W"],[3,"DEBNC2_W"],[3,"DEBNC3_W"],[3,"DEBNC4_W"],[6,"R"],[6,"W"],[6,"R"],[3,"TAMPID0_W"],[3,"TAMPID1_W"],[3,"TAMPID2_W"],[3,"TAMPID3_W"],[3,"TAMPID4_W"],[3,"TAMPEVT_W"],[6,"R"],[6,"W"],[3,"BKUP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCALER_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"CLKREP_W"],[3,"MATCHCLR_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"BKTRST_W"],[3,"GPTRST_W"],[3,"CLOCKSYNC_W"],[6,"R"],[6,"W"],[4,"DEBF_A"],[4,"ACTF_A"],[3,"GP0EN_W"],[3,"GP2EN_W"],[3,"DEBMAJ_W"],[3,"DEBASYNC_W"],[3,"RTCOUT_W"],[3,"DMAEN_W"],[6,"DEBF_R"],[3,"DEBF_W"],[6,"ACTF_R"],[3,"ACTF_W"],[6,"R"],[6,"W"],[3,"PEREO0_W"],[3,"PEREO1_W"],[3,"PEREO2_W"],[3,"PEREO3_W"],[3,"PEREO4_W"],[3,"PEREO5_W"],[3,"PEREO6_W"],[3,"PEREO7_W"],[3,"ALARMEO0_W"],[3,"ALARMEO1_W"],[3,"TAMPEREO_W"],[3,"OVFEO_W"],[3,"TAMPEVEI_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"ALARM0_W"],[3,"ALARM1_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"ALARM0_W"],[3,"ALARM1_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"PER0_W"],[3,"PER1_W"],[3,"PER2_W"],[3,"PER3_W"],[3,"PER4_W"],[3,"PER5_W"],[3,"PER6_W"],[3,"PER7_W"],[3,"ALARM0_W"],[3,"ALARM1_W"],[3,"TAMPER_W"],[3,"OVF_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"VALUE_W"],[3,"SIGN_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[3,"GP_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[4,"SEL_A"],[6,"SEL_R"],[3,"SEL_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[3,"SECOND_W"],[3,"MINUTE_W"],[6,"HOUR_R"],[3,"HOUR_W"],[3,"DAY_W"],[3,"MONTH_W"],[3,"YEAR_W"],[6,"R"],[6,"W"],[4,"SEL_A"],[6,"SEL_R"],[3,"SEL_W"],[6,"R"],[6,"W"],[4,"IN0ACT_A"],[4,"IN1ACT_A"],[4,"IN2ACT_A"],[4,"IN3ACT_A"],[4,"IN4ACT_A"],[6,"IN0ACT_R"],[3,"IN0ACT_W"],[6,"IN1ACT_R"],[3,"IN1ACT_W"],[6,"IN2ACT_R"],[3,"IN2ACT_W"],[6,"IN3ACT_R"],[3,"IN3ACT_W"],[6,"IN4ACT_R"],[3,"IN4ACT_W"],[3,"TAMLVL0_W"],[3,"TAMLVL1_W"],[3,"TAMLVL2_W"],[3,"TAMLVL3_W"],[3,"TAMLVL4_W"],[3,"DEBNC0_W"],[3,"DEBNC1_W"],[3,"DEBNC2_W"],[3,"DEBNC3_W"],[3,"DEBNC4_W"],[6,"R"],[6,"W"],[4,"HOUR_A"],[6,"HOUR_R"],[6,"R"],[3,"TAMPID0_W"],[3,"TAMPID1_W"],[3,"TAMPID2_W"],[3,"TAMPID3_W"],[3,"TAMPID4_W"],[3,"TAMPEVT_W"],[6,"R"],[6,"W"],[3,"BKUP_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"ADDR_W"],[6,"R"],[6,"W"],[3,"ARG2_W"],[6,"R"],[6,"W"],[4,"BOUNDARY_A"],[3,"BLOCKSIZE_W"],[6,"BOUNDARY_R"],[3,"BOUNDARY_W"],[6,"R"],[6,"W"],[3,"BCNT_W"],[6,"R"],[6,"W"],[3,"ARG_W"],[6,"R"],[6,"W"],[4,"DMAEN_A"],[4,"BCEN_A"],[4,"ACMDEN_A"],[4,"DTDSEL_A"],[4,"MSBSEL_A"],[6,"DMAEN_R"],[3,"DMAEN_W"],[6,"BCEN_R"],[3,"BCEN_W"],[6,"ACMDEN_R"],[3,"ACMDEN_W"],[6,"DTDSEL_R"],[3,"DTDSEL_W"],[6,"MSBSEL_R"],[3,"MSBSEL_W"],[6,"R"],[6,"W"],[4,"RESPTYP_A"],[4,"CMDCCEN_A"],[4,"CMDICEN_A"],[4,"DPSEL_A"],[4,"CMDTYP_A"],[6,"RESPTYP_R"],[3,"RESPTYP_W"],[6,"CMDCCEN_R"],[3,"CMDCCEN_W"],[6,"CMDICEN_R"],[3,"CMDICEN_W"],[6,"DPSEL_R"],[3,"DPSEL_W"],[6,"CMDTYP_R"],[3,"CMDTYP_W"],[3,"CMDIDX_W"],[6,"R"],[6,"W"],[6,"R"],[3,"BUFDATA_W"],[6,"R"],[6,"W"],[4,"CMDINHC_A"],[4,"CMDINHD_A"],[4,"DLACT_A"],[4,"RTREQ_A"],[4,"WTACT_A"],[4,"RTACT_A"],[4,"BUFWREN_A"],[4,"BUFRDEN_A"],[4,"CARDINS_A"],[4,"CARDSS_A"],[4,"CARDDPL_A"],[4,"WRPPL_A"],[6,"CMDINHC_R"],[6,"CMDINHD_R"],[6,"DLACT_R"],[6,"RTREQ_R"],[6,"WTACT_R"],[6,"RTACT_R"],[6,"BUFWREN_R"],[6,"BUFRDEN_R"],[6,"CARDINS_R"],[6,"CARDSS_R"],[6,"CARDDPL_R"],[6,"WRPPL_R"],[6,"R"],[4,"LEDCTRL_A"],[4,"DW_A"],[4,"HSEN_A"],[4,"DMASEL_A"],[4,"CARDDTL_A"],[4,"CARDDSEL_A"],[6,"LEDCTRL_R"],[3,"LEDCTRL_W"],[6,"DW_R"],[3,"DW_W"],[6,"HSEN_R"],[3,"HSEN_W"],[6,"DMASEL_R"],[3,"DMASEL_W"],[6,"CARDDTL_R"],[3,"CARDDTL_W"],[6,"CARDDSEL_R"],[3,"CARDDSEL_W"],[6,"R"],[6,"W"],[4,"DW_A"],[4,"HSEN_A"],[4,"DMASEL_A"],[6,"DW_R"],[3,"DW_W"],[6,"HSEN_R"],[3,"HSEN_W"],[6,"DMASEL_R"],[3,"DMASEL_W"],[6,"R"],[6,"W"],[4,"SDBPWR_A"],[4,"SDBVSEL_A"],[6,"SDBPWR_R"],[3,"SDBPWR_W"],[6,"SDBVSEL_R"],[3,"SDBVSEL_W"],[6,"R"],[6,"W"],[4,"STPBGR_A"],[4,"CONTR_A"],[4,"RWCTRL_A"],[4,"INTBG_A"],[6,"STPBGR_R"],[3,"STPBGR_W"],[6,"CONTR_R"],[3,"CONTR_W"],[6,"RWCTRL_R"],[3,"RWCTRL_W"],[6,"INTBG_R"],[3,"INTBG_W"],[6,"R"],[6,"W"],[4,"STPBGR_A"],[4,"CONTR_A"],[6,"STPBGR_R"],[3,"STPBGR_W"],[6,"CONTR_R"],[3,"CONTR_W"],[6,"R"],[6,"W"],[4,"WKENCINT_A"],[4,"WKENCINS_A"],[4,"WKENCREM_A"],[6,"WKENCINT_R"],[3,"WKENCINT_W"],[6,"WKENCINS_R"],[3,"WKENCINS_W"],[6,"WKENCREM_R"],[3,"WKENCREM_W"],[6,"R"],[6,"W"],[4,"INTCLKEN_A"],[4,"INTCLKS_A"],[4,"SDCLKEN_A"],[4,"CLKGSEL_A"],[6,"INTCLKEN_R"],[3,"INTCLKEN_W"],[6,"INTCLKS_R"],[3,"INTCLKS_W"],[6,"SDCLKEN_R"],[3,"SDCLKEN_W"],[6,"CLKGSEL_R"],[3,"CLKGSEL_W"],[3,"USDCLKFSEL_W"],[3,"SDCLKFSEL_W"],[6,"R"],[6,"W"],[3,"DTCVAL_W"],[6,"R"],[6,"W"],[4,"SWRSTALL_A"],[4,"SWRSTCMD_A"],[4,"SWRSTDAT_A"],[6,"SWRSTALL_R"],[3,"SWRSTALL_W"],[6,"SWRSTCMD_R"],[3,"SWRSTCMD_W"],[6,"SWRSTDAT_R"],[3,"SWRSTDAT_W"],[6,"R"],[6,"W"],[4,"CMDC_A"],[4,"TRFC_A"],[4,"BLKGE_A"],[4,"DMAINT_A"],[4,"BWRRDY_A"],[4,"BRDRDY_A"],[4,"CINS_A"],[4,"CREM_A"],[4,"CINT_A"],[4,"ERRINT_A"],[6,"CMDC_R"],[3,"CMDC_W"],[6,"TRFC_R"],[3,"TRFC_W"],[6,"BLKGE_R"],[3,"BLKGE_W"],[6,"DMAINT_R"],[3,"DMAINT_W"],[6,"BWRRDY_R"],[3,"BWRRDY_W"],[6,"BRDRDY_R"],[3,"BRDRDY_W"],[6,"CINS_R"],[3,"CINS_W"],[6,"CREM_R"],[3,"CREM_W"],[6,"CINT_R"],[3,"CINT_W"],[6,"ERRINT_R"],[3,"ERRINT_W"],[6,"R"],[6,"W"],[4,"CMDC_A"],[4,"TRFC_A"],[4,"BLKGE_A"],[4,"DMAINT_A"],[4,"BWRRDY_A"],[4,"BRDRDY_A"],[4,"ERRINT_A"],[6,"CMDC_R"],[3,"CMDC_W"],[6,"TRFC_R"],[3,"TRFC_W"],[6,"BLKGE_R"],[3,"BLKGE_W"],[6,"DMAINT_R"],[3,"DMAINT_W"],[6,"BWRRDY_R"],[3,"BWRRDY_W"],[6,"BRDRDY_R"],[3,"BRDRDY_W"],[3,"BOOTAR_W"],[6,"ERRINT_R"],[3,"ERRINT_W"],[6,"R"],[6,"W"],[4,"CMDTEO_A"],[4,"CMDCRC_A"],[4,"CMDEND_A"],[4,"CMDIDX_A"],[4,"DATTEO_A"],[4,"DATCRC_A"],[4,"DATEND_A"],[4,"CURLIM_A"],[4,"ACMD_A"],[4,"ADMA_A"],[6,"CMDTEO_R"],[3,"CMDTEO_W"],[6,"CMDCRC_R"],[3,"CMDCRC_W"],[6,"CMDEND_R"],[3,"CMDEND_W"],[6,"CMDIDX_R"],[3,"CMDIDX_W"],[6,"DATTEO_R"],[3,"DATTEO_W"],[6,"DATCRC_R"],[3,"DATCRC_W"],[6,"DATEND_R"],[3,"DATEND_W"],[6,"CURLIM_R"],[3,"CURLIM_W"],[6,"ACMD_R"],[3,"ACMD_W"],[6,"ADMA_R"],[3,"ADMA_W"],[6,"R"],[6,"W"],[4,"CMDTEO_A"],[4,"CMDCRC_A"],[4,"CMDEND_A"],[4,"CMDIDX_A"],[4,"DATTEO_A"],[4,"DATCRC_A"],[4,"DATEND_A"],[4,"CURLIM_A"],[4,"ACMD_A"],[4,"ADMA_A"],[4,"BOOTAE_A"],[6,"CMDTEO_R"],[3,"CMDTEO_W"],[6,"CMDCRC_R"],[3,"CMDCRC_W"],[6,"CMDEND_R"],[3,"CMDEND_W"],[6,"CMDIDX_R"],[3,"CMDIDX_W"],[6,"DATTEO_R"],[3,"DATTEO_W"],[6,"DATCRC_R"],[3,"DATCRC_W"],[6,"DATEND_R"],[3,"DATEND_W"],[6,"CURLIM_R"],[3,"CURLIM_W"],[6,"ACMD_R"],[3,"ACMD_W"],[6,"ADMA_R"],[3,"ADMA_W"],[6,"BOOTAE_R"],[3,"BOOTAE_W"],[6,"R"],[6,"W"],[4,"CMDC_A"],[4,"TRFC_A"],[4,"BLKGE_A"],[4,"DMAINT_A"],[4,"BWRRDY_A"],[4,"BRDRDY_A"],[4,"CINS_A"],[4,"CREM_A"],[4,"CINT_A"],[6,"CMDC_R"],[3,"CMDC_W"],[6,"TRFC_R"],[3,"TRFC_W"],[6,"BLKGE_R"],[3,"BLKGE_W"],[6,"DMAINT_R"],[3,"DMAINT_W"],[6,"BWRRDY_R"],[3,"BWRRDY_W"],[6,"BRDRDY_R"],[3,"BRDRDY_W"],[6,"CINS_R"],[3,"CINS_W"],[6,"CREM_R"],[3,"CREM_W"],[6,"CINT_R"],[3,"CINT_W"],[6,"R"],[6,"W"],[4,"CMDC_A"],[4,"TRFC_A"],[4,"BLKGE_A"],[4,"DMAINT_A"],[4,"BWRRDY_A"],[4,"BRDRDY_A"],[6,"CMDC_R"],[3,"CMDC_W"],[6,"TRFC_R"],[3,"TRFC_W"],[6,"BLKGE_R"],[3,"BLKGE_W"],[6,"DMAINT_R"],[3,"DMAINT_W"],[6,"BWRRDY_R"],[3,"BWRRDY_W"],[6,"BRDRDY_R"],[3,"BRDRDY_W"],[3,"BOOTAR_W"],[6,"R"],[6,"W"],[4,"CMDTEO_A"],[4,"CMDCRC_A"],[4,"CMDEND_A"],[4,"CMDIDX_A"],[4,"DATTEO_A"],[4,"DATCRC_A"],[4,"DATEND_A"],[4,"CURLIM_A"],[4,"ACMD_A"],[4,"ADMA_A"],[6,"CMDTEO_R"],[3,"CMDTEO_W"],[6,"CMDCRC_R"],[3,"CMDCRC_W"],[6,"CMDEND_R"],[3,"CMDEND_W"],[6,"CMDIDX_R"],[3,"CMDIDX_W"],[6,"DATTEO_R"],[3,"DATTEO_W"],[6,"DATCRC_R"],[3,"DATCRC_W"],[6,"DATEND_R"],[3,"DATEND_W"],[6,"CURLIM_R"],[3,"CURLIM_W"],[6,"ACMD_R"],[3,"ACMD_W"],[6,"ADMA_R"],[3,"ADMA_W"],[6,"R"],[6,"W"],[4,"CMDTEO_A"],[4,"CMDCRC_A"],[4,"CMDEND_A"],[4,"CMDIDX_A"],[4,"DATTEO_A"],[4,"DATCRC_A"],[4,"DATEND_A"],[4,"CURLIM_A"],[4,"ACMD_A"],[4,"ADMA_A"],[6,"CMDTEO_R"],[3,"CMDTEO_W"],[6,"CMDCRC_R"],[3,"CMDCRC_W"],[6,"CMDEND_R"],[3,"CMDEND_W"],[6,"CMDIDX_R"],[3,"CMDIDX_W"],[6,"DATTEO_R"],[3,"DATTEO_W"],[6,"DATCRC_R"],[3,"DATCRC_W"],[6,"DATEND_R"],[3,"DATEND_W"],[6,"CURLIM_R"],[3,"CURLIM_W"],[6,"ACMD_R"],[3,"ACMD_W"],[6,"ADMA_R"],[3,"ADMA_W"],[3,"BOOTAE_W"],[6,"R"],[6,"W"],[4,"CMDC_A"],[4,"TRFC_A"],[4,"BLKGE_A"],[4,"DMAINT_A"],[4,"BWRRDY_A"],[4,"BRDRDY_A"],[4,"CINS_A"],[4,"CREM_A"],[4,"CINT_A"],[6,"CMDC_R"],[3,"CMDC_W"],[6,"TRFC_R"],[3,"TRFC_W"],[6,"BLKGE_R"],[3,"BLKGE_W"],[6,"DMAINT_R"],[3,"DMAINT_W"],[6,"BWRRDY_R"],[3,"BWRRDY_W"],[6,"BRDRDY_R"],[3,"BRDRDY_W"],[6,"CINS_R"],[3,"CINS_W"],[6,"CREM_R"],[3,"CREM_W"],[6,"CINT_R"],[3,"CINT_W"],[6,"R"],[6,"W"],[4,"CMDC_A"],[4,"TRFC_A"],[4,"BLKGE_A"],[4,"DMAINT_A"],[4,"BWRRDY_A"],[4,"BRDRDY_A"],[6,"CMDC_R"],[3,"CMDC_W"],[6,"TRFC_R"],[3,"TRFC_W"],[6,"BLKGE_R"],[3,"BLKGE_W"],[6,"DMAINT_R"],[3,"DMAINT_W"],[6,"BWRRDY_R"],[3,"BWRRDY_W"],[6,"BRDRDY_R"],[3,"BRDRDY_W"],[3,"BOOTAR_W"],[6,"R"],[6,"W"],[4,"CMDTEO_A"],[4,"CMDCRC_A"],[4,"CMDEND_A"],[4,"CMDIDX_A"],[4,"DATTEO_A"],[4,"DATCRC_A"],[4,"DATEND_A"],[4,"CURLIM_A"],[4,"ACMD_A"],[4,"ADMA_A"],[6,"CMDTEO_R"],[3,"CMDTEO_W"],[6,"CMDCRC_R"],[3,"CMDCRC_W"],[6,"CMDEND_R"],[3,"CMDEND_W"],[6,"CMDIDX_R"],[3,"CMDIDX_W"],[6,"DATTEO_R"],[3,"DATTEO_W"],[6,"DATCRC_R"],[3,"DATCRC_W"],[6,"DATEND_R"],[3,"DATEND_W"],[6,"CURLIM_R"],[3,"CURLIM_W"],[6,"ACMD_R"],[3,"ACMD_W"],[6,"ADMA_R"],[3,"ADMA_W"],[6,"R"],[6,"W"],[4,"CMDTEO_A"],[4,"CMDCRC_A"],[4,"CMDEND_A"],[4,"CMDIDX_A"],[4,"DATTEO_A"],[4,"DATCRC_A"],[4,"DATEND_A"],[4,"CURLIM_A"],[4,"ACMD_A"],[4,"ADMA_A"],[6,"CMDTEO_R"],[3,"CMDTEO_W"],[6,"CMDCRC_R"],[3,"CMDCRC_W"],[6,"CMDEND_R"],[3,"CMDEND_W"],[6,"CMDIDX_R"],[3,"CMDIDX_W"],[6,"DATTEO_R"],[3,"DATTEO_W"],[6,"DATCRC_R"],[3,"DATCRC_W"],[6,"DATEND_R"],[3,"DATEND_W"],[6,"CURLIM_R"],[3,"CURLIM_W"],[6,"ACMD_R"],[3,"ACMD_W"],[6,"ADMA_R"],[3,"ADMA_W"],[3,"BOOTAE_W"],[6,"R"],[6,"W"],[4,"ACMD12NE_A"],[4,"ACMDTEO_A"],[4,"ACMDCRC_A"],[4,"ACMDEND_A"],[4,"ACMDIDX_A"],[4,"CMDNI_A"],[6,"ACMD12NE_R"],[6,"ACMDTEO_R"],[6,"ACMDCRC_R"],[6,"ACMDEND_R"],[6,"ACMDIDX_R"],[6,"CMDNI_R"],[6,"R"],[4,"UHSMS_A"],[4,"VS18EN_A"],[4,"DRVSEL_A"],[4,"EXTUN_A"],[4,"SLCKSEL_A"],[4,"ASINTEN_A"],[4,"PVALEN_A"],[6,"UHSMS_R"],[3,"UHSMS_W"],[6,"VS18EN_R"],[3,"VS18EN_W"],[6,"DRVSEL_R"],[3,"DRVSEL_W"],[6,"EXTUN_R"],[3,"EXTUN_W"],[6,"SLCKSEL_R"],[3,"SLCKSEL_W"],[6,"ASINTEN_R"],[3,"ASINTEN_W"],[6,"PVALEN_R"],[3,"PVALEN_W"],[6,"R"],[6,"W"],[4,"HS200EN_A"],[4,"DRVSEL_A"],[4,"EXTUN_A"],[4,"SLCKSEL_A"],[4,"PVALEN_A"],[6,"HS200EN_R"],[3,"HS200EN_W"],[6,"DRVSEL_R"],[3,"DRVSEL_W"],[6,"EXTUN_R"],[3,"EXTUN_W"],[6,"SLCKSEL_R"],[3,"SLCKSEL_W"],[6,"PVALEN_R"],[3,"PVALEN_W"],[6,"R"],[6,"W"],[4,"TEOCLKF_A"],[4,"TEOCLKU_A"],[4,"BASECLKF_A"],[4,"MAXBLKL_A"],[4,"ED8SUP_A"],[4,"ADMA2SUP_A"],[4,"HSSUP_A"],[4,"SDMASUP_A"],[4,"SRSUP_A"],[4,"V33VSUP_A"],[4,"V30VSUP_A"],[4,"V18VSUP_A"],[4,"SB64SUP_A"],[4,"ASINTSUP_A"],[4,"SLTYPE_A"],[6,"TEOCLKF_R"],[6,"TEOCLKU_R"],[6,"BASECLKF_R"],[6,"MAXBLKL_R"],[6,"ED8SUP_R"],[6,"ADMA2SUP_R"],[6,"HSSUP_R"],[6,"SDMASUP_R"],[6,"SRSUP_R"],[6,"V33VSUP_R"],[6,"V30VSUP_R"],[6,"V18VSUP_R"],[6,"SB64SUP_R"],[6,"ASINTSUP_R"],[6,"SLTYPE_R"],[6,"R"],[4,"SDR50SUP_A"],[4,"SDR104SUP_A"],[4,"DDR50SUP_A"],[4,"DRVASUP_A"],[4,"DRVCSUP_A"],[4,"DRVDSUP_A"],[4,"TCNTRT_A"],[4,"TSDR50_A"],[4,"CLKMULT_A"],[6,"SDR50SUP_R"],[6,"SDR104SUP_R"],[6,"DDR50SUP_R"],[6,"DRVASUP_R"],[6,"DRVCSUP_R"],[6,"DRVDSUP_R"],[6,"TCNTRT_R"],[6,"TSDR50_R"],[6,"CLKMULT_R"],[6,"R"],[4,"MAXCUR33V_A"],[4,"MAXCUR30V_A"],[4,"MAXCUR18V_A"],[6,"MAXCUR33V_R"],[6,"MAXCUR30V_R"],[6,"MAXCUR18V_R"],[6,"R"],[4,"ACMD12NE_AW"],[4,"ACMDTEO_AW"],[4,"ACMDCRC_AW"],[4,"ACMDEND_AW"],[4,"ACMDIDX_AW"],[4,"CMDNI_AW"],[3,"ACMD12NE_W"],[3,"ACMDTEO_W"],[3,"ACMDCRC_W"],[3,"ACMDEND_W"],[3,"ACMDIDX_W"],[3,"CMDNI_W"],[6,"W"],[4,"CMDTEO_AW"],[4,"CMDCRC_AW"],[4,"CMDEND_AW"],[4,"CMDIDX_AW"],[4,"DATTEO_AW"],[4,"DATCRC_AW"],[4,"DATEND_AW"],[4,"CURLIM_AW"],[4,"ACMD_AW"],[4,"ADMA_AW"],[4,"BOOTAE_AW"],[3,"CMDTEO_W"],[3,"CMDCRC_W"],[3,"CMDEND_W"],[3,"CMDIDX_W"],[3,"DATTEO_W"],[3,"DATCRC_W"],[3,"DATEND_W"],[3,"CURLIM_W"],[3,"ACMD_W"],[3,"ADMA_W"],[3,"BOOTAE_W"],[6,"W"],[4,"ERRST_A"],[4,"LMIS_A"],[6,"ERRST_R"],[6,"LMIS_R"],[6,"R"],[3,"ADMASA_W"],[6,"R"],[6,"W"],[4,"CLKGSEL_A"],[4,"DRVSEL_A"],[3,"SDCLKFSEL_W"],[6,"CLKGSEL_R"],[3,"CLKGSEL_W"],[6,"DRVSEL_R"],[3,"DRVSEL_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[4,"CMDTYP_A"],[6,"CMDTYP_R"],[3,"CMDTYP_W"],[3,"DDR_W"],[3,"OPD_W"],[3,"BOOTA_W"],[3,"RSTN_W"],[3,"FCD_W"],[6,"R"],[6,"W"],[3,"SRESP_W"],[3,"ABOOT_W"],[6,"W"],[4,"BMAX_A"],[6,"BMAX_R"],[3,"BMAX_W"],[6,"R"],[6,"W"],[4,"FSDCLKD_A"],[6,"FSDCLKD_R"],[3,"FSDCLKD_W"],[6,"R"],[6,"W"],[3,"CAPWREN_W"],[3,"KEY_W"],[6,"R"],[6,"W"],[4,"NIDBG_A"],[6,"NIDBG_R"],[3,"NIDBG_W"],[6,"R"],[6,"W"],[3,"I2CM"],[3,"I2CS"],[3,"SPIS"],[3,"SPIM"],[3,"USART_EXT"],[3,"USART_INT"],[4,"MODE_A"],[4,"SDAHOLD_A"],[4,"SPEED_A"],[4,"INACTOUT_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"PINOUT_W"],[6,"SDAHOLD_R"],[3,"SDAHOLD_W"],[3,"MEXTTOEN_W"],[3,"SEXTTOEN_W"],[6,"SPEED_R"],[3,"SPEED_W"],[3,"SCLSM_W"],[6,"INACTOUT_R"],[3,"INACTOUT_W"],[3,"LOWTOUTEN_W"],[6,"R"],[6,"W"],[3,"SMEN_W"],[3,"QCEN_W"],[3,"CMD_W"],[3,"ACKACT_W"],[6,"R"],[6,"W"],[4,"DATA32B_A"],[6,"DATA32B_R"],[3,"DATA32B_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"BAUDLOW_W"],[3,"HSBAUD_W"],[3,"HSBAUDLOW_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"MB_W"],[3,"SB_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUSERR_W"],[3,"ARBLOST_W"],[3,"RXNACK_W"],[3,"BUSSTATE_W"],[3,"LOWTOUT_W"],[3,"CLKHOLD_W"],[3,"MEXTTOUT_W"],[3,"SEXTTOUT_W"],[3,"LENERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ADDR_W"],[3,"LENEN_W"],[3,"HS_W"],[3,"TENBITEN_W"],[3,"LEN_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"SDAHOLD_A"],[4,"SPEED_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"PINOUT_W"],[6,"SDAHOLD_R"],[3,"SDAHOLD_W"],[3,"SEXTTOEN_W"],[6,"SPEED_R"],[3,"SPEED_W"],[3,"SCLSM_W"],[3,"LOWTOUTEN_W"],[6,"R"],[6,"W"],[3,"SMEN_W"],[3,"GCMD_W"],[3,"AACKEN_W"],[3,"AMODE_W"],[3,"CMD_W"],[3,"ACKACT_W"],[6,"R"],[6,"W"],[4,"DATA32B_A"],[3,"SDASETUP_W"],[6,"DATA32B_R"],[3,"DATA32B_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PREC_W"],[3,"AMATCH_W"],[3,"DRDY_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUSERR_W"],[3,"COLL_W"],[3,"RXNACK_W"],[3,"DIR_W"],[3,"SR_W"],[3,"LOWTOUT_W"],[3,"CLKHOLD_W"],[3,"SEXTTOUT_W"],[3,"HS_W"],[3,"LENERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"LEN_W"],[3,"LENEN_W"],[6,"R"],[6,"W"],[3,"GENCEN_W"],[3,"ADDR_W"],[3,"TENBITEN_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"DOPO_A"],[4,"DIPO_A"],[4,"FORM_A"],[4,"CPHA_A"],[4,"CPOL_A"],[4,"DORD_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[6,"DOPO_R"],[3,"DOPO_W"],[6,"DIPO_R"],[3,"DIPO_W"],[6,"FORM_R"],[3,"FORM_W"],[6,"CPHA_R"],[3,"CPHA_W"],[6,"CPOL_R"],[3,"CPOL_W"],[6,"DORD_R"],[3,"DORD_W"],[6,"R"],[6,"W"],[4,"CHSIZE_A"],[4,"AMODE_A"],[6,"CHSIZE_R"],[3,"CHSIZE_W"],[3,"PLOADEN_W"],[3,"SSDE_W"],[3,"MSSEN_W"],[6,"AMODE_R"],[3,"AMODE_W"],[3,"RXEN_W"],[6,"R"],[6,"W"],[4,"DATA32B_A"],[3,"ICSPACE_W"],[6,"DATA32B_R"],[3,"DATA32B_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUFOVF_W"],[3,"LENERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"LEN_W"],[3,"LENEN_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"DOPO_A"],[4,"DIPO_A"],[4,"FORM_A"],[4,"CPHA_A"],[4,"CPOL_A"],[4,"DORD_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[6,"DOPO_R"],[3,"DOPO_W"],[6,"DIPO_R"],[3,"DIPO_W"],[6,"FORM_R"],[3,"FORM_W"],[6,"CPHA_R"],[3,"CPHA_W"],[6,"CPOL_R"],[3,"CPOL_W"],[6,"DORD_R"],[3,"DORD_W"],[6,"R"],[6,"W"],[4,"CHSIZE_A"],[4,"AMODE_A"],[6,"CHSIZE_R"],[3,"CHSIZE_W"],[3,"PLOADEN_W"],[3,"SSDE_W"],[3,"MSSEN_W"],[6,"AMODE_R"],[3,"AMODE_W"],[3,"RXEN_W"],[6,"R"],[6,"W"],[4,"DATA32B_A"],[3,"ICSPACE_W"],[6,"DATA32B_R"],[3,"DATA32B_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"SSL_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"BUFOVF_W"],[3,"LENERR_W"],[6,"R"],[6,"W"],[6,"R"],[3,"LEN_W"],[3,"LENEN_W"],[6,"R"],[6,"W"],[3,"ADDR_W"],[3,"ADDRMASK_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"SAMPR_A"],[4,"TXPO_A"],[4,"RXPO_A"],[4,"FORM_A"],[4,"CMODE_A"],[4,"CPOL_A"],[4,"DORD_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[3,"TXINV_W"],[3,"RXINV_W"],[6,"SAMPR_R"],[3,"SAMPR_W"],[6,"TXPO_R"],[3,"TXPO_W"],[6,"RXPO_R"],[3,"RXPO_W"],[3,"SAMPA_W"],[6,"FORM_R"],[3,"FORM_W"],[6,"CMODE_R"],[3,"CMODE_W"],[6,"CPOL_R"],[3,"CPOL_W"],[6,"DORD_R"],[3,"DORD_W"],[6,"R"],[6,"W"],[4,"CHSIZE_A"],[4,"SBMODE_A"],[4,"PMODE_A"],[6,"CHSIZE_R"],[3,"CHSIZE_W"],[6,"SBMODE_R"],[3,"SBMODE_W"],[3,"COLDEN_W"],[3,"SFDE_W"],[3,"ENC_W"],[6,"PMODE_R"],[3,"PMODE_W"],[3,"TXEN_W"],[3,"RXEN_W"],[3,"LINCMD_W"],[6,"R"],[6,"W"],[4,"DATA32B_A"],[3,"GTIME_W"],[3,"BRKLEN_W"],[3,"HDRDLY_W"],[3,"INACK_W"],[3,"DSNACK_W"],[3,"MAXITER_W"],[6,"DATA32B_R"],[3,"DATA32B_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"RXPL_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PERR_W"],[3,"FERR_W"],[3,"BUFOVF_W"],[3,"CTS_W"],[3,"ISF_W"],[3,"COLL_W"],[3,"TXE_W"],[3,"ITER_W"],[6,"R"],[6,"W"],[6,"R"],[3,"LEN_W"],[3,"LENEN_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"SAMPR_A"],[4,"TXPO_A"],[4,"RXPO_A"],[4,"FORM_A"],[4,"CMODE_A"],[4,"CPOL_A"],[4,"DORD_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[3,"RUNSTDBY_W"],[3,"IBON_W"],[3,"TXINV_W"],[3,"RXINV_W"],[6,"SAMPR_R"],[3,"SAMPR_W"],[6,"TXPO_R"],[3,"TXPO_W"],[6,"RXPO_R"],[3,"RXPO_W"],[3,"SAMPA_W"],[6,"FORM_R"],[3,"FORM_W"],[6,"CMODE_R"],[3,"CMODE_W"],[6,"CPOL_R"],[3,"CPOL_W"],[6,"DORD_R"],[3,"DORD_W"],[6,"R"],[6,"W"],[4,"CHSIZE_A"],[4,"SBMODE_A"],[4,"PMODE_A"],[6,"CHSIZE_R"],[3,"CHSIZE_W"],[6,"SBMODE_R"],[3,"SBMODE_W"],[3,"COLDEN_W"],[3,"SFDE_W"],[3,"ENC_W"],[6,"PMODE_R"],[3,"PMODE_W"],[3,"TXEN_W"],[3,"RXEN_W"],[3,"LINCMD_W"],[6,"R"],[6,"W"],[4,"DATA32B_A"],[3,"GTIME_W"],[3,"BRKLEN_W"],[3,"HDRDLY_W"],[3,"INACK_W"],[3,"DSNACK_W"],[3,"MAXITER_W"],[6,"DATA32B_R"],[3,"DATA32B_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[3,"FP_W"],[6,"R"],[6,"W"],[3,"BAUD_W"],[6,"R"],[6,"W"],[3,"RXPL_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"DRE_W"],[3,"TXC_W"],[3,"RXC_W"],[3,"RXS_W"],[3,"CTSIC_W"],[3,"RXBRK_W"],[3,"ERROR_W"],[6,"R"],[6,"W"],[3,"PERR_W"],[3,"FERR_W"],[3,"BUFOVF_W"],[3,"CTS_W"],[3,"ISF_W"],[3,"COLL_W"],[3,"TXE_W"],[3,"ITER_W"],[6,"R"],[6,"W"],[6,"R"],[3,"LEN_W"],[3,"LENEN_W"],[6,"R"],[6,"W"],[3,"DATA_W"],[6,"R"],[6,"W"],[3,"DBGSTOP_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"VREGRDY_W"],[3,"VCORERDY_W"],[6,"R"],[6,"W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"VREGRDY_W"],[3,"VCORERDY_W"],[6,"R"],[6,"W"],[3,"BOD33RDY_W"],[3,"BOD33DET_W"],[3,"B33SRDY_W"],[3,"VREGRDY_W"],[3,"VCORERDY_W"],[6,"R"],[6,"W"],[6,"R"],[4,"ACTION_A"],[4,"PSEL_A"],[3,"ENABLE_W"],[6,"ACTION_R"],[3,"ACTION_W"],[3,"STDBYCFG_W"],[3,"RUNSTDBY_W"],[3,"RUNHIB_W"],[3,"RUNBKUP_W"],[3,"HYST_W"],[6,"PSEL_R"],[3,"PSEL_W"],[3,"LEVEL_W"],[3,"VBATLEVEL_W"],[6,"R"],[6,"W"],[4,"SEL_A"],[3,"ENABLE_W"],[6,"SEL_R"],[3,"SEL_W"],[3,"RUNBKUP_W"],[3,"VSEN_W"],[3,"VSPER_W"],[6,"R"],[6,"W"],[4,"SEL_A"],[3,"TSEN_W"],[3,"VREFOE_W"],[3,"TSSEL_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"SEL_R"],[3,"SEL_W"],[6,"R"],[6,"W"],[4,"CONF_A"],[6,"CONF_R"],[3,"CONF_W"],[3,"WAKEEN_W"],[6,"R"],[6,"W"],[3,"ENOUT0_W"],[3,"ENOUT1_W"],[3,"CLROUT0_W"],[3,"CLROUT1_W"],[3,"SETOUT0_W"],[3,"SETOUT1_W"],[3,"RTCTGLOUT0_W"],[3,"RTCTGLOUT1_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT8"],[3,"COUNT16"],[3,"COUNT32"],[4,"MODE_A"],[4,"PRESCSYNC_A"],[4,"PRESCALER_A"],[4,"CAPTMODE0_A"],[4,"CAPTMODE1_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"ALOCK_W"],[3,"CAPTEN0_W"],[3,"CAPTEN1_W"],[3,"COPEN0_W"],[3,"COPEN1_W"],[6,"CAPTMODE0_R"],[3,"CAPTMODE0_W"],[6,"CAPTMODE1_R"],[3,"CAPTMODE1_W"],[3,"DMAOS_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"STOP_W"],[3,"SLAVE_W"],[3,"PERBUFV_W"],[3,"CCBUFV0_W"],[3,"CCBUFV1_W"],[6,"R"],[6,"W"],[4,"WAVEGEN_A"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"PERBUF_W"],[6,"R"],[6,"W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCSYNC_A"],[4,"PRESCALER_A"],[4,"CAPTMODE0_A"],[4,"CAPTMODE1_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"ALOCK_W"],[3,"CAPTEN0_W"],[3,"CAPTEN1_W"],[3,"COPEN0_W"],[3,"COPEN1_W"],[6,"CAPTMODE0_R"],[3,"CAPTMODE0_W"],[6,"CAPTMODE1_R"],[3,"CAPTMODE1_W"],[3,"DMAOS_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"STOP_W"],[3,"SLAVE_W"],[3,"PERBUFV_W"],[3,"CCBUFV0_W"],[3,"CCBUFV1_W"],[6,"R"],[6,"W"],[4,"WAVEGEN_A"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[4,"MODE_A"],[4,"PRESCSYNC_A"],[4,"PRESCALER_A"],[4,"CAPTMODE0_A"],[4,"CAPTMODE1_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[3,"RUNSTDBY_W"],[3,"ONDEMAND_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"ALOCK_W"],[3,"CAPTEN0_W"],[3,"CAPTEN1_W"],[3,"COPEN0_W"],[3,"COPEN1_W"],[6,"CAPTMODE0_R"],[3,"CAPTMODE0_W"],[6,"CAPTMODE1_R"],[3,"CAPTMODE1_W"],[3,"DMAOS_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"EVACT_A"],[6,"EVACT_R"],[3,"EVACT_W"],[3,"TCINV_W"],[3,"TCEI_W"],[3,"OVFEO_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"ERR_W"],[3,"MC0_W"],[3,"MC1_W"],[6,"R"],[6,"W"],[3,"STOP_W"],[3,"SLAVE_W"],[3,"PERBUFV_W"],[3,"CCBUFV0_W"],[3,"CCBUFV1_W"],[6,"R"],[6,"W"],[4,"WAVEGEN_A"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"R"],[6,"W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[6,"R"],[6,"W"],[6,"R"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[4,"RESOLUTION_A"],[4,"PRESCALER_A"],[4,"PRESCSYNC_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[6,"RESOLUTION_R"],[3,"RESOLUTION_W"],[6,"PRESCALER_R"],[3,"PRESCALER_W"],[3,"RUNSTDBY_W"],[6,"PRESCSYNC_R"],[3,"PRESCSYNC_W"],[3,"ALOCK_W"],[3,"MSYNC_W"],[3,"DMAOS_W"],[3,"CPTEN0_W"],[3,"CPTEN1_W"],[3,"CPTEN2_W"],[3,"CPTEN3_W"],[3,"CPTEN4_W"],[3,"CPTEN5_W"],[6,"R"],[6,"W"],[4,"IDXCMD_A"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"IDXCMD_R"],[3,"IDXCMD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[4,"IDXCMD_A"],[4,"CMD_A"],[3,"DIR_W"],[3,"LUPD_W"],[3,"ONESHOT_W"],[6,"IDXCMD_R"],[3,"IDXCMD_W"],[6,"CMD_R"],[3,"CMD_W"],[6,"R"],[6,"W"],[6,"R"],[4,"SRC_A"],[4,"BLANK_A"],[4,"HALT_A"],[4,"CHSEL_A"],[4,"CAPTURE_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"KEEP_W"],[3,"QUAL_W"],[6,"BLANK_R"],[3,"BLANK_W"],[3,"RESTART_W"],[6,"HALT_R"],[3,"HALT_W"],[6,"CHSEL_R"],[3,"CHSEL_W"],[6,"CAPTURE_R"],[3,"CAPTURE_W"],[3,"BLANKPRESC_W"],[3,"BLANKVAL_W"],[3,"FILTERVAL_W"],[6,"R"],[6,"W"],[4,"SRC_A"],[4,"BLANK_A"],[4,"HALT_A"],[4,"CHSEL_A"],[4,"CAPTURE_A"],[6,"SRC_R"],[3,"SRC_W"],[3,"KEEP_W"],[3,"QUAL_W"],[6,"BLANK_R"],[3,"BLANK_W"],[3,"RESTART_W"],[6,"HALT_R"],[3,"HALT_W"],[6,"CHSEL_R"],[3,"CHSEL_W"],[6,"CAPTURE_R"],[3,"CAPTURE_W"],[3,"BLANKPRESC_W"],[3,"BLANKVAL_W"],[3,"FILTERVAL_W"],[6,"R"],[6,"W"],[3,"OTMX_W"],[3,"DTIEN0_W"],[3,"DTIEN1_W"],[3,"DTIEN2_W"],[3,"DTIEN3_W"],[3,"DTLS_W"],[3,"DTHS_W"],[6,"R"],[6,"W"],[3,"NRE0_W"],[3,"NRE1_W"],[3,"NRE2_W"],[3,"NRE3_W"],[3,"NRE4_W"],[3,"NRE5_W"],[3,"NRE6_W"],[3,"NRE7_W"],[3,"NRV0_W"],[3,"NRV1_W"],[3,"NRV2_W"],[3,"NRV3_W"],[3,"NRV4_W"],[3,"NRV5_W"],[3,"NRV6_W"],[3,"NRV7_W"],[3,"INVEN0_W"],[3,"INVEN1_W"],[3,"INVEN2_W"],[3,"INVEN3_W"],[3,"INVEN4_W"],[3,"INVEN5_W"],[3,"INVEN6_W"],[3,"INVEN7_W"],[3,"FILTERVAL0_W"],[3,"FILTERVAL1_W"],[6,"R"],[6,"W"],[3,"DBGRUN_W"],[3,"FDDBD_W"],[6,"R"],[6,"W"],[4,"EVACT0_A"],[4,"EVACT1_A"],[4,"CNTSEL_A"],[6,"EVACT0_R"],[3,"EVACT0_W"],[6,"EVACT1_R"],[3,"EVACT1_W"],[6,"CNTSEL_R"],[3,"CNTSEL_W"],[3,"OVFEO_W"],[3,"TRGEO_W"],[3,"CNTEO_W"],[3,"TCINV0_W"],[3,"TCINV1_W"],[3,"TCEI0_W"],[3,"TCEI1_W"],[3,"MCEI0_W"],[3,"MCEI1_W"],[3,"MCEI2_W"],[3,"MCEI3_W"],[3,"MCEI4_W"],[3,"MCEI5_W"],[3,"MCEO0_W"],[3,"MCEO1_W"],[3,"MCEO2_W"],[3,"MCEO3_W"],[3,"MCEO4_W"],[3,"MCEO5_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"UFS_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[3,"MC4_W"],[3,"MC5_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"UFS_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[3,"MC4_W"],[3,"MC5_W"],[6,"R"],[6,"W"],[3,"OVF_W"],[3,"TRG_W"],[3,"CNT_W"],[3,"ERR_W"],[3,"UFS_W"],[3,"DFS_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"MC0_W"],[3,"MC1_W"],[3,"MC2_W"],[3,"MC3_W"],[3,"MC4_W"],[3,"MC5_W"],[6,"R"],[6,"W"],[3,"STOP_W"],[3,"IDX_W"],[3,"UFS_W"],[3,"DFS_W"],[3,"SLAVE_W"],[3,"PATTBUFV_W"],[3,"PERBUFV_W"],[3,"FAULTAIN_W"],[3,"FAULTBIN_W"],[3,"FAULT0IN_W"],[3,"FAULT1IN_W"],[3,"FAULTA_W"],[3,"FAULTB_W"],[3,"FAULT0_W"],[3,"FAULT1_W"],[3,"CCBUFV0_W"],[3,"CCBUFV1_W"],[3,"CCBUFV2_W"],[3,"CCBUFV3_W"],[3,"CCBUFV4_W"],[3,"CCBUFV5_W"],[3,"CMP0_W"],[3,"CMP1_W"],[3,"CMP2_W"],[3,"CMP3_W"],[3,"CMP4_W"],[3,"CMP5_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"COUNT_W"],[6,"R"],[6,"W"],[3,"PGE0_W"],[3,"PGE1_W"],[3,"PGE2_W"],[3,"PGE3_W"],[3,"PGE4_W"],[3,"PGE5_W"],[3,"PGE6_W"],[3,"PGE7_W"],[3,"PGV0_W"],[3,"PGV1_W"],[3,"PGV2_W"],[3,"PGV3_W"],[3,"PGV4_W"],[3,"PGV5_W"],[3,"PGV6_W"],[3,"PGV7_W"],[6,"R"],[6,"W"],[4,"WAVEGEN_A"],[4,"RAMP_A"],[6,"WAVEGEN_R"],[3,"WAVEGEN_W"],[6,"RAMP_R"],[3,"RAMP_W"],[3,"CIPEREN_W"],[3,"CICCEN0_W"],[3,"CICCEN1_W"],[3,"CICCEN2_W"],[3,"CICCEN3_W"],[3,"POL0_W"],[3,"POL1_W"],[3,"POL2_W"],[3,"POL3_W"],[3,"POL4_W"],[3,"POL5_W"],[3,"SWAP0_W"],[3,"SWAP1_W"],[3,"SWAP2_W"],[3,"SWAP3_W"],[6,"R"],[6,"W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHER_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHER_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"DITHER_W"],[3,"PER_W"],[6,"R"],[6,"W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHER_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHER_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"DITHER_W"],[3,"CC_W"],[6,"R"],[6,"W"],[3,"PGEB0_W"],[3,"PGEB1_W"],[3,"PGEB2_W"],[3,"PGEB3_W"],[3,"PGEB4_W"],[3,"PGEB5_W"],[3,"PGEB6_W"],[3,"PGEB7_W"],[3,"PGVB0_W"],[3,"PGVB1_W"],[3,"PGVB2_W"],[3,"PGVB3_W"],[3,"PGVB4_W"],[3,"PGVB5_W"],[3,"PGVB6_W"],[3,"PGVB7_W"],[6,"R"],[6,"W"],[3,"PERBUF_W"],[6,"R"],[6,"W"],[3,"DITHERBUF_W"],[3,"PERBUF_W"],[6,"R"],[6,"W"],[3,"DITHERBUF_W"],[3,"PERBUF_W"],[6,"R"],[6,"W"],[3,"DITHERBUF_W"],[3,"PERBUF_W"],[6,"R"],[6,"W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[3,"CCBUF_W"],[3,"DITHERBUF_W"],[6,"R"],[6,"W"],[3,"DITHERBUF_W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[3,"DITHERBUF_W"],[3,"CCBUF_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"R"],[6,"W"],[3,"DATARDYEO_W"],[6,"R"],[6,"W"],[3,"DATARDY_W"],[6,"R"],[6,"W"],[3,"DATARDY_W"],[6,"R"],[6,"W"],[3,"DATARDY_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DEVICE"],[3,"HOST"],[3,"DEVICE_ENDPOINT"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"R"],[6,"W"],[6,"R"],[3,"CQOS_W"],[3,"DQOS_W"],[6,"R"],[6,"W"],[4,"SPDCONF_A"],[4,"LPMHDSK_A"],[3,"DETACH_W"],[3,"UPRSM_W"],[6,"SPDCONF_R"],[3,"SPDCONF_W"],[3,"NREPLY_W"],[3,"TSTJ_W"],[3,"TSTK_W"],[3,"TSTPCKT_W"],[3,"OPMODE2_W"],[3,"GNAK_W"],[6,"LPMHDSK_R"],[3,"LPMHDSK_W"],[6,"R"],[6,"W"],[3,"DADD_W"],[3,"ADDEN_W"],[6,"R"],[6,"W"],[4,"SPEED_A"],[4,"LINESTATE_A"],[6,"SPEED_R"],[6,"LINESTATE_R"],[6,"R"],[4,"FSMSTATE_A"],[6,"FSMSTATE_R"],[6,"R"],[6,"R"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[3,"SUSPEND_W"],[3,"MSOF_W"],[3,"SOF_W"],[3,"EORST_W"],[3,"WAKEUP_W"],[3,"EORSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"LPMNYET_W"],[3,"LPMSUSP_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DESCADD_W"],[6,"R"],[6,"W"],[3,"TRANSP_W"],[3,"TRANSN_W"],[3,"TRIM_W"],[6,"R"],[6,"W"],[3,"EPTYPE0_W"],[3,"EPTYPE1_W"],[3,"NYETDIS_W"],[6,"R"],[6,"W"],[3,"DTGLOUT_W"],[3,"DTGLIN_W"],[3,"CURBK_W"],[3,"STALLRQ0_W"],[3,"STALLRQ1_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[3,"DTGLOUT_W"],[3,"DTGLIN_W"],[3,"CURBK_W"],[3,"STALLRQ0_W"],[3,"STALLRQ1_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[6,"R"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL0_W"],[3,"TRFAIL1_W"],[3,"RXSTP_W"],[3,"STALL0_W"],[3,"STALL1_W"],[6,"R"],[6,"W"],[3,"HOST_PIPE"],[4,"MODE_A"],[3,"SWRST_W"],[3,"ENABLE_W"],[3,"RUNSTDBY_W"],[6,"MODE_R"],[3,"MODE_W"],[6,"R"],[6,"W"],[6,"R"],[3,"CQOS_W"],[3,"DQOS_W"],[6,"R"],[6,"W"],[4,"SPDCONF_A"],[3,"RESUME_W"],[6,"SPDCONF_R"],[3,"SPDCONF_W"],[3,"AUTORESUME_W"],[3,"TSTJ_W"],[3,"TSTK_W"],[3,"SOFE_W"],[3,"BUSRESET_W"],[3,"VBUSOK_W"],[3,"L1RESUME_W"],[6,"R"],[6,"W"],[3,"FLENC_W"],[3,"FLENCE_W"],[6,"R"],[6,"W"],[3,"SPEED_W"],[3,"LINESTATE_W"],[6,"R"],[6,"W"],[4,"FSMSTATE_A"],[6,"FSMSTATE_R"],[6,"R"],[3,"MFNUM_W"],[3,"FNUM_W"],[6,"R"],[6,"W"],[6,"R"],[3,"HSOF_W"],[3,"RST_W"],[3,"WAKEUP_W"],[3,"DNRSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"DCONN_W"],[3,"DDISC_W"],[6,"R"],[6,"W"],[3,"HSOF_W"],[3,"RST_W"],[3,"WAKEUP_W"],[3,"DNRSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"DCONN_W"],[3,"DDISC_W"],[6,"R"],[6,"W"],[3,"HSOF_W"],[3,"RST_W"],[3,"WAKEUP_W"],[3,"DNRSM_W"],[3,"UPRSM_W"],[3,"RAMACER_W"],[3,"DCONN_W"],[3,"DDISC_W"],[6,"R"],[6,"W"],[6,"R"],[3,"DESCADD_W"],[6,"R"],[6,"W"],[3,"TRANSP_W"],[3,"TRANSN_W"],[3,"TRIM_W"],[6,"R"],[6,"W"],[3,"PTOKEN_W"],[3,"BK_W"],[3,"PTYPE_W"],[6,"R"],[6,"W"],[3,"BITINTERVAL_W"],[6,"R"],[6,"W"],[3,"DTGL_W"],[3,"CURBK_W"],[3,"PFREEZE_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[3,"DTGL_W"],[3,"CURBK_W"],[3,"PFREEZE_W"],[3,"BK0RDY_W"],[3,"BK1RDY_W"],[6,"W"],[6,"R"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL_W"],[3,"PERR_W"],[3,"TXSTP_W"],[3,"STALL_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL_W"],[3,"PERR_W"],[3,"TXSTP_W"],[3,"STALL_W"],[6,"R"],[6,"W"],[3,"TRCPT0_W"],[3,"TRCPT1_W"],[3,"TRFAIL_W"],[3,"PERR_W"],[3,"TXSTP_W"],[3,"STALL_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"ENABLE_W"],[3,"WEN_W"],[3,"ALWAYSON_W"],[6,"R"],[6,"W"],[4,"PER_A"],[4,"WINDOW_A"],[6,"PER_R"],[3,"PER_W"],[6,"WINDOW_R"],[3,"WINDOW_W"],[6,"R"],[6,"W"],[4,"EWOFFSET_A"],[6,"EWOFFSET_R"],[3,"EWOFFSET_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[3,"EW_W"],[6,"R"],[6,"W"],[6,"R"],[4,"CLEAR_AW"],[3,"CLEAR_W"],[6,"W"],[3,"RegisterBlock"],[3,"C_DEBUGEN_W"],[3,"C_HALT_W"],[3,"C_STEP_W"],[3,"C_MASKINTS_W"],[3,"C_SNAPSTALL_W"],[3,"DBGKEY_W"],[6,"R"],[6,"W"],[3,"REGSEL_W"],[3,"REGWNR_W"],[6,"W"],[3,"VC_CORERESET_W"],[3,"VC_MMERR_W"],[3,"VC_NOCPERR_W"],[3,"VC_CHKERR_W"],[3,"VC_STATERR_W"],[3,"VC_BUSERR_W"],[3,"VC_INTERR_W"],[3,"VC_HARDERR_W"],[3,"MON_EN_W"],[3,"MON_PEND_W"],[3,"MON_STEP_W"],[3,"MON_REQ_W"],[3,"TRCENA_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"ETMPD_W"],[3,"PORTSIZE_W"],[3,"STALL_W"],[3,"BROUT_W"],[3,"DBGRQ_W"],[3,"PROG_W"],[3,"PORTSEL_W"],[3,"PORTMODE2_W"],[3,"PORTMODE_W"],[3,"PORTSIZE3_W"],[3,"TSEN_W"],[6,"R"],[6,"W"],[3,"INTEGRATION_W"],[6,"R"],[6,"W"],[6,"R"],[3,"RegisterBlock"],[4,"ENABLE_A"],[4,"TICKINT_A"],[4,"CLKSOURCE_A"],[6,"ENABLE_R"],[3,"ENABLE_W"],[6,"TICKINT_R"],[3,"TICKINT_W"],[6,"CLKSOURCE_R"],[3,"CLKSOURCE_W"],[3,"COUNTFLAG_W"],[6,"R"],[6,"W"],[3,"RELOAD_W"],[6,"R"],[6,"W"],[3,"CURRENT_W"],[6,"R"],[6,"W"],[4,"SKEW_A"],[4,"NOREF_A"],[6,"SKEW_R"],[6,"NOREF_R"],[6,"R"],[3,"RegisterBlock"],[6,"R"],[3,"DISMCYCINT_W"],[3,"DISDEFWBUF_W"],[3,"DISFOLD_W"],[3,"DISFPCA_W"],[3,"DISOOFP_W"],[6,"R"],[6,"W"],[6,"R"],[4,"PENDSTCLR_A"],[4,"PENDSTSET_A"],[4,"PENDSVCLR_A"],[4,"PENDSVSET_A"],[4,"NMIPENDSET_A"],[3,"VECTACTIVE_W"],[3,"RETTOBASE_W"],[3,"VECTPENDING_W"],[3,"ISRPENDING_W"],[3,"ISRPREEMPT_W"],[6,"PENDSTCLR_R"],[3,"PENDSTCLR_W"],[6,"PENDSTSET_R"],[3,"PENDSTSET_W"],[6,"PENDSVCLR_R"],[3,"PENDSVCLR_W"],[6,"PENDSVSET_R"],[3,"PENDSVSET_W"],[6,"NMIPENDSET_R"],[3,"NMIPENDSET_W"],[6,"R"],[6,"W"],[3,"TBLOFF_W"],[6,"R"],[6,"W"],[4,"SYSRESETREQ_A"],[4,"ENDIANNESS_A"],[3,"VECTRESET_W"],[3,"VECTCLRACTIVE_W"],[6,"SYSRESETREQ_R"],[3,"SYSRESETREQ_W"],[3,"PRIGROUP_W"],[6,"ENDIANNESS_R"],[3,"ENDIANNESS_W"],[3,"VECTKEY_W"],[6,"R"],[6,"W"],[4,"SLEEPONEXIT_A"],[4,"SLEEPDEEP_A"],[4,"SEVONPEND_A"],[6,"SLEEPONEXIT_R"],[3,"SLEEPONEXIT_W"],[6,"SLEEPDEEP_R"],[3,"SLEEPDEEP_W"],[6,"SEVONPEND_R"],[3,"SEVONPEND_W"],[6,"R"],[6,"W"],[4,"UNALIGN_TRP_A"],[4,"STKALIGN_A"],[3,"NONBASETHRDENA_W"],[3,"USERSETMPEND_W"],[6,"UNALIGN_TRP_R"],[3,"UNALIGN_TRP_W"],[3,"DIV_0_TRP_W"],[3,"BFHFNMIGN_W"],[6,"STKALIGN_R"],[3,"STKALIGN_W"],[6,"R"],[6,"W"],[3,"PRI_4_W"],[3,"PRI_5_W"],[3,"PRI_6_W"],[6,"R"],[6,"W"],[3,"PRI_11_W"],[6,"R"],[6,"W"],[3,"PRI_14_W"],[3,"PRI_15_W"],[6,"R"],[6,"W"],[3,"MEMFAULTACT_W"],[3,"BUSFAULTACT_W"],[3,"USGFAULTACT_W"],[3,"SVCALLACT_W"],[3,"MONITORACT_W"],[3,"PENDSVACT_W"],[3,"SYSTICKACT_W"],[3,"USGFAULTPENDED_W"],[3,"MEMFAULTPENDED_W"],[3,"BUSFAULTPENDED_W"],[3,"SVCALLPENDED_W"],[3,"MEMFAULTENA_W"],[3,"BUSFAULTENA_W"],[3,"USGFAULTENA_W"],[6,"R"],[6,"W"],[3,"IACCVIOL_W"],[3,"DACCVIOL_W"],[3,"MUNSTKERR_W"],[3,"MSTKERR_W"],[3,"MLSPERR_W"],[3,"MMARVALID_W"],[3,"IBUSERR_W"],[3,"PRECISERR_W"],[3,"IMPRECISERR_W"],[3,"UNSTKERR_W"],[3,"STKERR_W"],[3,"LSPERR_W"],[3,"BFARVALID_W"],[3,"UNDEFINSTR_W"],[3,"INVSTATE_W"],[3,"INVPC_W"],[3,"NOCP_W"],[3,"UNALIGNED_W"],[3,"DIVBYZERO_W"],[6,"R"],[6,"W"],[3,"VECTTBL_W"],[3,"FORCED_W"],[3,"DEBUGEVT_W"],[6,"R"],[6,"W"],[3,"HALTED_W"],[3,"BKPT_W"],[3,"DWTTRAP_W"],[3,"VCATCH_W"],[3,"EXTERNAL_W"],[6,"R"],[6,"W"],[3,"ADDRESS_W"],[6,"R"],[6,"W"],[3,"ADDRESS_W"],[6,"R"],[6,"W"],[3,"IMPDEF_W"],[6,"R"],[6,"W"],[4,"CP10_A"],[4,"CP11_A"],[6,"CP10_R"],[3,"CP10_W"],[6,"CP11_R"],[3,"CP11_W"],[6,"R"],[6,"W"],[3,"RegisterBlock"],[3,"PRESCALER_W"],[6,"R"],[6,"W"],[3,"TXMODE_W"],[6,"R"],[6,"W"],[6,"R"],[3,"ENFCONT_W"],[3,"TRIGIN_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[6,"R"],[3,"MODE_W"],[6,"R"],[6,"W"],[6,"R"],[6,"R"],[3,"AC"],[3,"ADC0"],[3,"ADC1"],[3,"AES"],[3,"CCL"],[3,"CMCC"],[3,"DAC"],[3,"DMAC"],[3,"DSU"],[3,"EIC"],[3,"EVSYS"],[3,"FREQM"],[3,"GCLK"],[3,"HMATRIX"],[3,"ICM"],[3,"MCLK"],[3,"NVMCTRL"],[3,"OSCCTRL"],[3,"OSC32KCTRL"],[3,"PAC"],[3,"PCC"],[3,"PDEC"],[3,"PM"],[3,"PORT"],[3,"QSPI"],[3,"RAMECC"],[3,"RSTC"],[3,"RTC"],[3,"SDHC0"],[3,"SERCOM0"],[3,"SERCOM1"],[3,"SERCOM2"],[3,"SERCOM3"],[3,"SERCOM4"],[3,"SERCOM5"],[3,"SUPC"],[3,"TC0"],[3,"TC1"],[3,"TC2"],[3,"TC3"],[3,"TCC0"],[3,"TCC1"],[3,"TCC2"],[3,"TRNG"],[3,"USB"],[3,"WDT"],[3,"COREDEBUG"],[3,"ETM"],[3,"SYSTICK"],[3,"SYSTEMCONTROL"],[3,"TPI"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"DWT"],[3,"FPB"],[3,"FPU"],[3,"ITM"],[3,"MPU"],[3,"NVIC"],[3,"SCB"],[3,"SYST"],[3,"TPIU"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"WINCTRL"],[6,"SCALER"],[6,"COMPCTRL"],[6,"CALIB"],[6,"CTRLA"],[6,"EVCTRL"],[6,"DBGCTRL"],[6,"INPUTCTRL"],[6,"CTRLB"],[6,"REFCTRL"],[6,"AVGCTRL"],[6,"SAMPCTRL"],[6,"WINLT"],[6,"WINUT"],[6,"GAINCORR"],[6,"OFFSETCORR"],[6,"SWTRIG"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DSEQDATA"],[6,"DSEQCTRL"],[6,"CALIB"],[6,"CTRLA"],[6,"CTRLB"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DATABUFPTR"],[6,"DBGCTRL"],[6,"KEYWORD"],[6,"INDATA"],[6,"INTVECTV"],[6,"HASHKEY"],[6,"GHASH"],[6,"CIPLEN"],[6,"RANDSEED"],[6,"CTRL"],[6,"SEQCTRL"],[6,"LUTCTRL"],[6,"CFG"],[6,"CTRL"],[6,"LCKWAY"],[6,"MAINT0"],[6,"MAINT1"],[6,"MCFG"],[6,"MEN"],[6,"MCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DACCTRL"],[6,"DATA"],[6,"DATABUF"],[6,"DBGCTRL"],[6,"CHCTRLA"],[6,"CHCTRLB"],[6,"CHPRILVL"],[6,"CHEVCTRL"],[6,"CHINTENCLR"],[6,"CHINTENSET"],[6,"CHINTFLAG"],[6,"CHSTATUS"],[6,"CTRL"],[6,"CRCCTRL"],[6,"CRCDATAIN"],[6,"CRCCHKSUM"],[6,"CRCSTATUS"],[6,"DBGCTRL"],[6,"SWTRIGCTRL"],[6,"PRICTRL0"],[6,"INTPEND"],[6,"BASEADDR"],[6,"WRBADDR"],[6,"CTRL"],[6,"STATUSA"],[6,"ADDR"],[6,"LENGTH"],[6,"DATA"],[6,"DCC"],[6,"CFG"],[6,"DCFG"],[6,"CTRLA"],[6,"NMICTRL"],[6,"NMIFLAG"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"ASYNCH"],[6,"CONFIG"],[6,"DEBOUNCEN"],[6,"DPRESCALER"],[6,"CHANNEL"],[6,"CHINTENCLR"],[6,"CHINTENSET"],[6,"CHINTFLAG"],[6,"CTRLA"],[6,"SWEVT"],[6,"PRICTRL"],[6,"INTPEND"],[6,"USER"],[6,"CTRLA"],[6,"CTRLB"],[6,"CFGA"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"CTRLA"],[6,"GENCTRL"],[6,"PCHCTRL"],[6,"PRAS"],[6,"PRBS"],[6,"CFG"],[6,"CTRL"],[6,"IER"],[6,"IDR"],[6,"DSCR"],[6,"HASH"],[6,"UIHVAL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CPUDIV"],[6,"AHBMASK"],[6,"APBAMASK"],[6,"APBBMASK"],[6,"APBCMASK"],[6,"APBDMASK"],[6,"CTRLA"],[6,"CTRLB"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"ADDR"],[6,"DBGCTRL"],[6,"SEECFG"],[6,"DPLLCTRLA"],[6,"DPLLRATIO"],[6,"DPLLCTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"XOSCCTRL"],[6,"DFLLCTRLA"],[6,"DFLLCTRLB"],[6,"DFLLVAL"],[6,"DFLLMUL"],[6,"DFLLSYNC"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"RTCCTRL"],[6,"XOSC32K"],[6,"CFDCTRL"],[6,"EVCTRL"],[6,"OSCULP32K"],[6,"WRCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAGAHB"],[6,"INTFLAGA"],[6,"INTFLAGB"],[6,"INTFLAGC"],[6,"INTFLAGD"],[6,"MR"],[6,"IER"],[6,"IDR"],[6,"WPMR"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"DBGCTRL"],[6,"PRESC"],[6,"FILTER"],[6,"PRESCBUF"],[6,"FILTERBUF"],[6,"COUNT"],[6,"CC"],[6,"CCBUF"],[6,"CTRLA"],[6,"SLEEPCFG"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STDBYCFG"],[6,"HIBCFG"],[6,"BKUPCFG"],[6,"PWSAKDLY"],[6,"DIR"],[6,"DIRCLR"],[6,"DIRSET"],[6,"DIRTGL"],[6,"OUT"],[6,"OUTCLR"],[6,"OUTSET"],[6,"OUTTGL"],[6,"CTRL"],[6,"WRCONFIG"],[6,"EVCTRL"],[6,"PMUX"],[6,"PINCFG"],[6,"CTRLA"],[6,"CTRLB"],[6,"BAUD"],[6,"TXDATA"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"INSTRADDR"],[6,"INSTRCTRL"],[6,"INSTRFRAME"],[6,"SCRAMBCTRL"],[6,"SCRAMBKEY"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"COUNT"],[6,"COMP"],[6,"GP"],[6,"TAMPCTRL"],[6,"TAMPID"],[6,"BKUP"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"COUNT"],[6,"PER"],[6,"COMP"],[6,"GP"],[6,"TAMPCTRL"],[6,"TAMPID"],[6,"BKUP"],[6,"CTRLA"],[6,"CTRLB"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DBGCTRL"],[6,"FREQCORR"],[6,"CLOCK"],[6,"GP"],[6,"ALARM0"],[6,"MASK0"],[6,"ALARM1"],[6,"MASK1"],[6,"TAMPCTRL"],[6,"TAMPID"],[6,"BKUP"],[6,"SSAR"],[6,"SSAR_CMD23_MODE"],[6,"BSR"],[6,"BCR"],[6,"ARG1R"],[6,"TMR"],[6,"CR"],[6,"BDPR"],[6,"HC1R"],[6,"HC1R_EMMC_MODE"],[6,"PCR"],[6,"BGCR"],[6,"BGCR_EMMC_MODE"],[6,"WCR"],[6,"CCR"],[6,"TCR"],[6,"SRR"],[6,"NISTR"],[6,"NISTR_EMMC_MODE"],[6,"EISTR"],[6,"EISTR_EMMC_MODE"],[6,"NISTER"],[6,"NISTER_EMMC_MODE"],[6,"EISTER"],[6,"EISTER_EMMC_MODE"],[6,"NISIER"],[6,"NISIER_EMMC_MODE"],[6,"EISIER"],[6,"EISIER_EMMC_MODE"],[6,"HC2R"],[6,"HC2R_EMMC_MODE"],[6,"FERACES"],[6,"FEREIS"],[6,"ASAR"],[6,"PVR"],[6,"MC1R"],[6,"MC2R"],[6,"ACR"],[6,"CC2R"],[6,"CACR"],[6,"DBGR"],[6,"CTRLA"],[6,"CTRLB"],[6,"CTRLC"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"CTRLC"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"LENGTH"],[6,"ADDR"],[6,"DATA"],[6,"CTRLA"],[6,"CTRLB"],[6,"CTRLC"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"LENGTH"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"CTRLC"],[6,"BAUD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"LENGTH"],[6,"ADDR"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"CTRLC"],[6,"BAUD"],[6,"BAUD_FRAC_MODE"],[6,"BAUD_FRACFP_MODE"],[6,"BAUD_USARTFP_MODE"],[6,"RXPL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"LENGTH"],[6,"DATA"],[6,"DBGCTRL"],[6,"CTRLA"],[6,"CTRLB"],[6,"CTRLC"],[6,"BAUD"],[6,"BAUD_FRAC_MODE"],[6,"BAUD_FRACFP_MODE"],[6,"BAUD_USARTFP_MODE"],[6,"RXPL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"LENGTH"],[6,"DATA"],[6,"DBGCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"BOD33"],[6,"VREG"],[6,"VREF"],[6,"BBPS"],[6,"BKOUT"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"WAVE"],[6,"DRVCTRL"],[6,"DBGCTRL"],[6,"COUNT"],[6,"PER"],[6,"CC"],[6,"PERBUF"],[6,"CCBUF"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"WAVE"],[6,"DRVCTRL"],[6,"DBGCTRL"],[6,"COUNT"],[6,"CC"],[6,"CCBUF"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"WAVE"],[6,"DRVCTRL"],[6,"DBGCTRL"],[6,"COUNT"],[6,"CC"],[6,"CCBUF"],[6,"CTRLA"],[6,"CTRLBCLR"],[6,"CTRLBSET"],[6,"FCTRLA"],[6,"FCTRLB"],[6,"WEXCTRL"],[6,"DRVCTRL"],[6,"DBGCTRL"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"STATUS"],[6,"COUNT"],[6,"COUNT_DITH4_MODE"],[6,"COUNT_DITH5_MODE"],[6,"COUNT_DITH6_MODE"],[6,"PATT"],[6,"WAVE"],[6,"PER"],[6,"PER_DITH4_MODE"],[6,"PER_DITH5_MODE"],[6,"PER_DITH6_MODE"],[6,"CC"],[6,"CC_DITH4_MODE"],[6,"CC_DITH5_MODE"],[6,"CC_DITH6_MODE"],[6,"PATTBUF"],[6,"PERBUF"],[6,"PERBUF_DITH4_MODE"],[6,"PERBUF_DITH5_MODE"],[6,"PERBUF_DITH6_MODE"],[6,"CCBUF"],[6,"CCBUF_DITH4_MODE"],[6,"CCBUF_DITH5_MODE"],[6,"CCBUF_DITH6_MODE"],[6,"CTRLA"],[6,"EVCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CTRLA"],[6,"QOSCTRL"],[6,"CTRLB"],[6,"DADD"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DESCADD"],[6,"PADCAL"],[6,"EPCFG"],[6,"EPSTATUSCLR"],[6,"EPSTATUSSET"],[6,"EPINTFLAG"],[6,"EPINTENCLR"],[6,"EPINTENSET"],[6,"CTRLA"],[6,"QOSCTRL"],[6,"CTRLB"],[6,"HSOFC"],[6,"STATUS"],[6,"FNUM"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"DESCADD"],[6,"PADCAL"],[6,"PCFG"],[6,"BINTERVAL"],[6,"PSTATUSCLR"],[6,"PSTATUSSET"],[6,"PINTFLAG"],[6,"PINTENCLR"],[6,"PINTENSET"],[6,"CTRLA"],[6,"CONFIG"],[6,"EWCTRL"],[6,"INTENCLR"],[6,"INTENSET"],[6,"INTFLAG"],[6,"CLEAR"],[6,"DHCSR"],[6,"DCRSR"],[6,"DCRDR"],[6,"DEMCR"],[6,"CR"],[6,"TRIGGER"],[6,"SR"],[6,"TEEVR"],[6,"TECR1"],[6,"FFLR"],[6,"CNTRLDVR1"],[6,"TESSEICR"],[6,"TSEVT"],[6,"TRACEIDR"],[6,"ITTRIGOUT"],[6,"ITATBCTR0"],[6,"ITCTRL"],[6,"CLAIMSET"],[6,"CLAIMCLR"],[6,"LAR"],[6,"CSR"],[6,"RVR"],[6,"CVR"],[6,"ACTLR"],[6,"ICSR"],[6,"VTOR"],[6,"AIRCR"],[6,"SCR"],[6,"CCR"],[6,"SHPR1"],[6,"SHPR2"],[6,"SHPR3"],[6,"SHCSR"],[6,"CFSR"],[6,"HFSR"],[6,"DFSR"],[6,"MMFAR"],[6,"BFAR"],[6,"AFSR"],[6,"PFR"],[6,"CPACR"],[6,"CSPSR"],[6,"ACPR"],[6,"SPPR"],[6,"FFCR"],[6,"ITCTRL"],[6,"CLAIMSET"],[6,"CLAIMCLR"]]},\
"atsamd_hal":{"doc":"","i":[[0,"typelevel","atsamd_hal","Module supporting type-level programming",null,null],[3,"NoneT","atsamd_hal::typelevel","Type-level version of the None variant",null,null],[0,"common","atsamd_hal","",null,null],[4,"ResetCause","atsamd_hal::common","ResetCause represents the reason the MCU was reset.",null,null],[13,"Unknown","","",0,null],[13,"POR","","",0,null],[13,"BOD12","","",0,null],[13,"BOD33","","",0,null],[13,"NVM","","",0,null],[13,"External","","",0,null],[13,"Watchdog","","",0,null],[13,"System","","",0,null],[13,"Backup","","",0,null],[5,"reset_cause","","Returns the cause of the last reset.",null,[[["rstc",3]],["resetcause",4]]],[5,"split_serial_number","","Returns the serial number of the chip as 4 32-bit…",null,[[]]],[5,"serial_number","","Returns the serial number of the chip as an array of…",null,[[]]],[0,"delay","","Delays",null,null],[3,"Delay","atsamd_hal::common::delay","System timer (SysTick) as a delay provider",null,null],[11,"new","","Configures the system timer (SysTick) as a delay provider",1,[[["syst",3],["genericclockcontroller",3]]]],[11,"free","","Releases the system timer (SysTick) resource",1,[[],["syst",3]]],[0,"gpio","atsamd_hal::common","GPIOThe GPIO module is used to configure GPIO pins through…",null,null],[0,"v1","atsamd_hal::common::gpio","Version 1 of the GPIO moduleThis module is a compatibility…",null,null],[3,"Pin","atsamd_hal::common::gpio::v1","Represents a GPIO pin with a corresponding `PinId` and…",null,null],[3,"Port","","Opaque port reference",null,null],[3,"Parts","","Holds the GPIO Port peripheral and broken out pin instances",null,null],[12,"port","","Opaque port reference",2,null],[12,"pa0","","",2,null],[12,"pa1","","",2,null],[12,"pa2","","",2,null],[12,"pa3","","",2,null],[12,"pa4","","",2,null],[12,"pa5","","",2,null],[12,"pa6","","",2,null],[12,"pa7","","",2,null],[12,"pa8","","",2,null],[12,"pa9","","",2,null],[12,"pa10","","",2,null],[12,"pa11","","",2,null],[12,"pa12","","",2,null],[12,"pa13","","",2,null],[12,"pa14","","",2,null],[12,"pa15","","",2,null],[12,"pa16","","",2,null],[12,"pa17","","",2,null],[12,"pa18","","",2,null],[12,"pa19","","",2,null],[12,"pa20","","",2,null],[12,"pa21","","",2,null],[12,"pa22","","",2,null],[12,"pa23","","",2,null],[12,"pa24","","",2,null],[12,"pa25","","",2,null],[12,"pa27","","",2,null],[12,"pa30","","",2,null],[12,"pa31","","",2,null],[12,"pb2","","",2,null],[12,"pb3","","",2,null],[12,"pb8","","",2,null],[12,"pb9","","",2,null],[12,"pb10","","",2,null],[12,"pb11","","",2,null],[12,"pb22","","",2,null],[12,"pb23","","",2,null],[6,"Input","","Represents a pin configured for input. The MODE type is…",null,null],[6,"Output","","Represents a pin configured for output. The MODE type is…",null,null],[6,"Floating","","Floating Input",null,null],[6,"PullDown","","Pulled down Input",null,null],[6,"PullUp","","Pulled up Input",null,null],[6,"PushPull","","Totem Pole aka Push-Pull",null,null],[6,"OpenDrain","","Open drain output. The SAMD5x/E5x chips don\'t actually…",null,null],[6,"ReadableOpenDrain","","Open drain output, which can be read when not driven The…",null,null],[6,"PfA","","Peripheral Function A",null,null],[6,"PfB","","Peripheral Function B",null,null],[6,"PfC","","Peripheral Function C",null,null],[6,"PfD","","Peripheral Function D",null,null],[6,"PfE","","Peripheral Function E",null,null],[6,"PfF","","Peripheral Function F",null,null],[6,"PfG","","Peripheral Function G",null,null],[6,"PfH","","Peripheral Function H",null,null],[6,"PfI","","Peripheral Function I",null,null],[6,"PfJ","","Peripheral Function J",null,null],[6,"PfK","","Peripheral Function K",null,null],[6,"PfL","","Peripheral Function L",null,null],[6,"PfM","","Peripheral Function M",null,null],[6,"PfN","","Peripheral Function N",null,null],[6,"Pa0","","Represents the IO pin with the matching name",null,null],[6,"Pa1","","Represents the IO pin with the matching name",null,null],[6,"Pa2","","Represents the IO pin with the matching name",null,null],[6,"Pa3","","Represents the IO pin with the matching name",null,null],[6,"Pa4","","Represents the IO pin with the matching name",null,null],[6,"Pa5","","Represents the IO pin with the matching name",null,null],[6,"Pa6","","Represents the IO pin with the matching name",null,null],[6,"Pa7","","Represents the IO pin with the matching name",null,null],[6,"Pa8","","Represents the IO pin with the matching name",null,null],[6,"Pa9","","Represents the IO pin with the matching name",null,null],[6,"Pa10","","Represents the IO pin with the matching name",null,null],[6,"Pa11","","Represents the IO pin with the matching name",null,null],[6,"Pa12","","Represents the IO pin with the matching name",null,null],[6,"Pa13","","Represents the IO pin with the matching name",null,null],[6,"Pa14","","Represents the IO pin with the matching name",null,null],[6,"Pa15","","Represents the IO pin with the matching name",null,null],[6,"Pa16","","Represents the IO pin with the matching name",null,null],[6,"Pa17","","Represents the IO pin with the matching name",null,null],[6,"Pa18","","Represents the IO pin with the matching name",null,null],[6,"Pa19","","Represents the IO pin with the matching name",null,null],[6,"Pa20","","Represents the IO pin with the matching name",null,null],[6,"Pa21","","Represents the IO pin with the matching name",null,null],[6,"Pa22","","Represents the IO pin with the matching name",null,null],[6,"Pa23","","Represents the IO pin with the matching name",null,null],[6,"Pa24","","Represents the IO pin with the matching name",null,null],[6,"Pa25","","Represents the IO pin with the matching name",null,null],[6,"Pa27","","Represents the IO pin with the matching name",null,null],[6,"Pa30","","Represents the IO pin with the matching name",null,null],[6,"Pa31","","Represents the IO pin with the matching name",null,null],[6,"Pb2","","Represents the IO pin with the matching name",null,null],[6,"Pb3","","Represents the IO pin with the matching name",null,null],[6,"Pb8","","Represents the IO pin with the matching name",null,null],[6,"Pb9","","Represents the IO pin with the matching name",null,null],[6,"Pb10","","Represents the IO pin with the matching name",null,null],[6,"Pb11","","Represents the IO pin with the matching name",null,null],[6,"Pb22","","Represents the IO pin with the matching name",null,null],[6,"Pb23","","Represents the IO pin with the matching name",null,null],[8,"GpioExt","","The GpioExt trait allows splitting the PORT hardware into…",null,null],[16,"Parts","","",3,null],[10,"split","","Consume and split the device into its constitent parts",3,[[]]],[8,"IntoFunction","","A trait that makes it easier to generically manage…",null,null],[10,"into_function","","Consume the pin and configure it to operate in the mode T.",4,[[["port",3]]]],[11,"into_floating_input","","Configures the pin to operate as a floating input",5,[[["port",3]],[["input",6],["pin",3]]]],[11,"into_pull_down_input","","Configures the pin to operate as a pulled down input pin",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_pull_up_input","","Configures the pin to operate as a pulled up input pin",5,[[["port",3]],[["pin",3],["input",6]]]],[11,"into_open_drain_output","","Configures the pin to operate as an open drain output",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_readable_open_drain_output","","Configures the pin to operate as an open drain output…",5,[[["port",3]],[["output",6],["pin",3]]]],[11,"into_push_pull_output","","Configures the pin to operate as a push-pull output",5,[[["port",3]],[["pin",3],["output",6]]]],[11,"into_function_a","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfa",6],["pin",3]]]],[11,"into_function_b","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfb",6]]]],[11,"into_function_c","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfc",6],["pin",3]]]],[11,"into_function_d","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfd",6]]]],[11,"into_function_e","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfe",6],["pin",3]]]],[11,"into_function_f","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pff",6],["pin",3]]]],[11,"into_function_g","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfg",6],["pin",3]]]],[11,"into_function_h","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfh",6],["pin",3]]]],[11,"into_function_i","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfi",6],["pin",3]]]],[11,"into_function_j","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfj",6],["pin",3]]]],[11,"into_function_k","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfk",6],["pin",3]]]],[11,"into_function_l","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfl",6]]]],[11,"into_function_m","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pin",3],["pfm",6]]]],[11,"into_function_n","","Configures the pin to operate with a peripheral",5,[[["port",3]],[["pfn",6],["pin",3]]]],[11,"internal_pull_up","","Control state of the internal pull up",5,[[["port",3]]]],[11,"toggle","","Toggle the logic level of the pin; if it is currently…",5,[[]]],[0,"v2","atsamd_hal::common::gpio","Version 2 of the GPIO moduleThe new API provides two…",null,null],[0,"pin","atsamd_hal::common::gpio::v2","Type-level module for GPIO pinsThis module provides a…",null,null],[3,"Disabled","atsamd_hal::common::gpio::v2::pin","Type-level variant of [`PinMode`] for disabled modes",null,null],[3,"Input","","Type-level variant of [`PinMode`] for input modes",null,null],[3,"Output","","Type-level variant of [`PinMode`] for output modes",null,null],[3,"Alternate","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[3,"Pin","","A type-level GPIO pin, parameterized by [`PinId`] and…",null,null],[3,"Pins","","Collection of all the individual [`Pin`]s",null,null],[12,"pa00","","Pin PA00",6,null],[12,"pa01","","Pin PA01",6,null],[12,"pa02","","Pin PA02",6,null],[12,"pa03","","Pin PA03",6,null],[12,"pa04","","Pin PA04",6,null],[12,"pa05","","Pin PA05",6,null],[12,"pa06","","Pin PA06",6,null],[12,"pa07","","Pin PA07",6,null],[12,"pa08","","Pin PA08",6,null],[12,"pa09","","Pin PA09",6,null],[12,"pa10","","Pin PA10",6,null],[12,"pa11","","Pin PA11",6,null],[12,"pa12","","Pin PA12",6,null],[12,"pa13","","Pin PA13",6,null],[12,"pa14","","Pin PA14",6,null],[12,"pa15","","Pin PA15",6,null],[12,"pa16","","Pin PA16",6,null],[12,"pa17","","Pin PA17",6,null],[12,"pa18","","Pin PA18",6,null],[12,"pa19","","Pin PA19",6,null],[12,"pa20","","Pin PA20",6,null],[12,"pa21","","Pin PA21",6,null],[12,"pa22","","Pin PA22",6,null],[12,"pa23","","Pin PA23",6,null],[12,"pa24","","Pin PA24",6,null],[12,"pa25","","Pin PA25",6,null],[12,"pa27","","Pin PA27",6,null],[12,"pa30","","Pin PA30",6,null],[12,"pa31","","Pin PA31",6,null],[12,"pb02","","Pin PB02",6,null],[12,"pb03","","Pin PB03",6,null],[12,"pb08","","Pin PB08",6,null],[12,"pb09","","Pin PB09",6,null],[12,"pb10","","Pin PB10",6,null],[12,"pb11","","Pin PB11",6,null],[12,"pb22","","Pin PB22",6,null],[12,"pb23","","Pin PB23",6,null],[4,"Floating","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PullDown","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PullUp","","Type-level variant of both [`DisabledConfig`] and…",null,null],[4,"PushPull","","Type-level variant of [`OutputConfig`] for a push-pull…",null,null],[4,"Readable","","Type-level variant of [`OutputConfig`] for a readable…",null,null],[4,"A","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"B","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"C","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"D","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"E","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"F","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"G","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"H","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"I","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"J","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"K","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"L","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"M","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"N","","Type-level variant of [`AlternateConfig`] for alternate…",null,null],[4,"GroupA","","Type-level variant of `Group`",null,null],[4,"GroupB","","Type-level variant of `Group`",null,null],[4,"PA00","","Pin ID representing pin PA00",null,null],[4,"PA01","","Pin ID representing pin PA01",null,null],[4,"PA02","","Pin ID representing pin PA02",null,null],[4,"PA03","","Pin ID representing pin PA03",null,null],[4,"PA04","","Pin ID representing pin PA04",null,null],[4,"PA05","","Pin ID representing pin PA05",null,null],[4,"PA06","","Pin ID representing pin PA06",null,null],[4,"PA07","","Pin ID representing pin PA07",null,null],[4,"PA08","","Pin ID representing pin PA08",null,null],[4,"PA09","","Pin ID representing pin PA09",null,null],[4,"PA10","","Pin ID representing pin PA10",null,null],[4,"PA11","","Pin ID representing pin PA11",null,null],[4,"PA12","","Pin ID representing pin PA12",null,null],[4,"PA13","","Pin ID representing pin PA13",null,null],[4,"PA14","","Pin ID representing pin PA14",null,null],[4,"PA15","","Pin ID representing pin PA15",null,null],[4,"PA16","","Pin ID representing pin PA16",null,null],[4,"PA17","","Pin ID representing pin PA17",null,null],[4,"PA18","","Pin ID representing pin PA18",null,null],[4,"PA19","","Pin ID representing pin PA19",null,null],[4,"PA20","","Pin ID representing pin PA20",null,null],[4,"PA21","","Pin ID representing pin PA21",null,null],[4,"PA22","","Pin ID representing pin PA22",null,null],[4,"PA23","","Pin ID representing pin PA23",null,null],[4,"PA24","","Pin ID representing pin PA24",null,null],[4,"PA25","","Pin ID representing pin PA25",null,null],[4,"PA27","","Pin ID representing pin PA27",null,null],[4,"PA30","","Pin ID representing pin PA30",null,null],[4,"PA31","","Pin ID representing pin PA31",null,null],[4,"PB02","","Pin ID representing pin PB02",null,null],[4,"PB03","","Pin ID representing pin PB03",null,null],[4,"PB08","","Pin ID representing pin PB08",null,null],[4,"PB09","","Pin ID representing pin PB09",null,null],[4,"PB10","","Pin ID representing pin PB10",null,null],[4,"PB11","","Pin ID representing pin PB11",null,null],[4,"PB22","","Pin ID representing pin PB22",null,null],[4,"PB23","","Pin ID representing pin PB23",null,null],[6,"FloatingDisabled","","Type-level variant of [`PinMode`] for floating disabled mode",null,null],[6,"PullDownDisabled","","Type-level variant of [`PinMode`] for pull-down disabled…",null,null],[6,"PullUpDisabled","","Type-level variant of [`PinMode`] for pull-up disabled mode",null,null],[6,"Reset","","Type alias for the [`PinMode`] at reset",null,null],[6,"FloatingInput","","Type-level variant of [`PinMode`] for floating input mode",null,null],[6,"PullDownInput","","Type-level variant of [`PinMode`] for pull-down input mode",null,null],[6,"PullUpInput","","Type-level variant of [`PinMode`] for pull-up input mode",null,null],[6,"PushPullOutput","","Type-level variant of [`PinMode`] for push-pull output mode",null,null],[6,"ReadableOutput","","Type-level variant of [`PinMode`] for readable push-pull…",null,null],[6,"AlternateA","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateB","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateC","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateD","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateE","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateF","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateG","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateH","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateI","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateJ","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateK","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateL","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateM","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"AlternateN","","Type-level variant of [`PinMode`] for alternate peripheral…",null,null],[6,"ConcretePin","","Type alias to recover the corresponding concrete [`Pin`]…",null,null],[8,"DisabledConfig","","Type-level `enum` for disabled configurations",null,null],[18,"DYN","","Corresponding `DynDisabled`",7,null],[18,"PULLEN","","Value of the PULLEN field in this configuration",7,null],[18,"OUT","","Value of the OUT field in this configuration",7,null],[8,"InputConfig","","Type-level `enum` for input configurations",null,null],[18,"DYN","","Corresponding `DynInput`",8,null],[18,"PULLEN","","Value of the PULLEN field in this configuration",8,null],[18,"OUT","","Value of the OUT field in this configuration",8,null],[8,"OutputConfig","","Type-level `enum` for output configurations",null,null],[18,"DYN","","Corresponding `DynOutput`",9,null],[18,"INEN","","Value of the INEN field in this configuration",9,null],[8,"AlternateConfig","","Type-level `enum` for alternate peripheral function…",null,null],[18,"DYN","","Corresponding `DynAlternate`",10,null],[18,"PMUX","","Value of the PMUXE/PMUXO field in this configuration",10,null],[8,"PinMode","","Type-level `enum` representing pin modes",null,null],[18,"DYN","","Corresponding `DynPinMode`",11,null],[18,"DIR","","Value of the DIR field in this mode",11,null],[18,"INEN","","Value of the INEN field in this mode",11,null],[18,"PULLEN","","Value of the PULLEN field in this mode",11,null],[18,"OUT","","Value of the OUT field in this mode",11,null],[18,"PMUXEN","","Value of the PMUXEN field in this mode",11,null],[18,"PMUX","","Value of the PMUXE/PMUXO field in this mode",11,null],[11,"into_mode","","Convert a [`Pin`] into this [`PinMode`]",11,[[["pin",3]],["pin",3]]],[8,"PinId","","Type-level `enum` for pin IDs",null,null],[18,"DYN","","Corresponding `DynPinId`",12,null],[16,"Group","","Pin group; Also acts as zero-sized reference to the GROUP…",12,null],[18,"NUM","","Pin number",12,null],[8,"AnyPin","","Meta-type representing any [`Pin`]",null,null],[16,"Id","","[`PinId`] of the corresponding [`Pin`]",13,null],[16,"Mode","","[`PinMode`] of the corresponding [`Pin`]",13,null],[10,"as_concrete","","Convert a type that implements [`AnyPin`] to a concrete…",13,[[],["concretepin",6]]],[10,"as_concrete_ref","","Implement `as_concrete` for references",13,[[],["concretepin",6]]],[10,"as_concrete_mut","","Implement `as_concrete` for mutable references",13,[[],["concretepin",6]]],[11,"into_mode","","Convert the pin to the requested [`PinMode`]",13,[[],[["pin",3],["pinmode",8]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",13,[[],[["pin",3],["floatingdisabled",6]]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",13,[[],[["pin",3],["pulldowndisabled",6]]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",13,[[],[["pin",3],["pullupdisabled",6]]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",13,[[],[["floatinginput",6],["pin",3]]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",13,[[],[["pulldowninput",6],["pin",3]]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",13,[[],[["pin",3],["pullupinput",6]]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",13,[[],[["pushpulloutput",6],["pin",3]]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",13,[[],[["readableoutput",6],["pin",3]]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",13,[[],[["alternate",3],["pin",3]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",13,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",13,[[]]],[8,"OptionalPin","","Meta-type representing an optional [`Pin`].",null,null],[8,"SomePin","","Meta-type representing a valid [`Pin`].",null,null],[11,"as_any","","Convert a [`Pin`] to a type that implements [`AnyPin`]",14,[[]]],[11,"as_any_ref","","Implement `as_any` for references",14,[[]]],[11,"as_any_mut","","Implement `as_any` for mutable references",14,[[]]],[11,"into_mode","","Convert the pin to the requested [`PinMode`]",14,[[],[["pinmode",8],["pin",3]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",14,[[],[["pin",3],["floatingdisabled",6]]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",14,[[],[["pulldowndisabled",6],["pin",3]]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",14,[[],[["pin",3],["pullupdisabled",6]]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",14,[[],[["floatinginput",6],["pin",3]]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",14,[[],[["pulldowninput",6],["pin",3]]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",14,[[],[["pin",3],["pullupinput",6]]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",14,[[],[["pushpulloutput",6],["pin",3]]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",14,[[],[["readableoutput",6],["pin",3]]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",14,[[],[["pin",3],["alternate",3]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",14,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",14,[[]]],[11,"new","","Take ownership of the PAC `PORT` and split it into…",6,[[["port",3]],["pins",3]]],[11,"port","","Get a reference to the PAC `PORT`",6,[[],["port",3]]],[11,"free","","Consume the [`Pins`] struct and return the PAC `PORT`",6,[[],["port",3]]],[0,"dynpin","atsamd_hal::common::gpio::v2","Type-erased, value-level module for GPIO pinsAlthough the…",null,null],[3,"DynPinId","atsamd_hal::common::gpio::v2::dynpin","Value-level `struct` representing pin IDs",null,null],[12,"group","","",15,null],[12,"num","","",15,null],[3,"DynPin","","A value-level pin, parameterized by [DynPinId] and…",null,null],[4,"Error","","GPIO error type",null,null],[13,"InvalidPinType","","The pin did not have the correct ID or mode for the…",16,null],[4,"DynDisabled","","Value-level `enum` for disabled configurations",null,null],[13,"Floating","","",17,null],[13,"PullDown","","",17,null],[13,"PullUp","","",17,null],[4,"DynInput","","Value-level `enum` for input configurations",null,null],[13,"Floating","","",18,null],[13,"PullDown","","",18,null],[13,"PullUp","","",18,null],[4,"DynOutput","","Value-level `enum` for output configurations",null,null],[13,"PushPull","","",19,null],[13,"Readable","","",19,null],[4,"DynAlternate","","Value-level `enum` for alternate peripheral function…",null,null],[13,"A","","",20,null],[13,"B","","",20,null],[13,"C","","",20,null],[13,"D","","",20,null],[13,"E","","",20,null],[13,"F","","",20,null],[13,"G","","",20,null],[13,"H","","",20,null],[13,"I","","",20,null],[13,"J","","",20,null],[13,"K","","",20,null],[13,"L","","",20,null],[13,"M","","",20,null],[13,"N","","",20,null],[4,"DynPinMode","","Value-level `enum` representing pin modes",null,null],[13,"Disabled","","",21,null],[13,"Input","","",21,null],[13,"Output","","",21,null],[13,"Alternate","","",21,null],[4,"DynGroup","","Value-level `enum` for pin groups",null,null],[13,"A","","",22,null],[13,"B","","",22,null],[17,"DYN_FLOATING_DISABLED","","Value-level variant of [DynPinMode] for floating disabled…",null,null],[17,"DYN_PULL_DOWN_DISABLED","","Value-level variant of [DynPinMode] for pull-down disabled…",null,null],[17,"DYN_PULL_UP_DISABLED","","Value-level variant of [DynPinMode] for pull-up disabled…",null,null],[17,"DYN_FLOATING_INPUT","","Value-level variant of [DynPinMode] for floating input mode",null,null],[17,"DYN_PULL_DOWN_INPUT","","Value-level variant of [DynPinMode] for pull-down input mode",null,null],[17,"DYN_PULL_UP_INPUT","","Value-level variant of [DynPinMode] for pull-up input mode",null,null],[17,"DYN_PUSH_PULL_OUTPUT","","Value-level variant of [DynPinMode] for push-pull output…",null,null],[17,"DYN_READABLE_OUTPUT","","Value-level variant of [DynPinMode] for readable push-pull…",null,null],[17,"DYN_ALTERNATE_A","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_B","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_C","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_D","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_E","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_F","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_G","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_H","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_I","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_J","","Value-level variant of `[DynPinMode]for alternate…",null,null],[17,"DYN_ALTERNATE_K","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_L","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_M","","Value-level variant of [DynPinMode] for alternate…",null,null],[17,"DYN_ALTERNATE_N","","Value-level variant of [DynPinMode] for alternate…",null,null],[11,"id","","Return a copy of the pin ID",23,[[],["dynpinid",3]]],[11,"mode","","Return a copy of the pin mode",23,[[],["dynpinmode",4]]],[11,"into_mode","","Convert the pin to the requested [DynPinMode]",23,[[["dynpinmode",4]]]],[11,"into_floating_disabled","","Disable the pin and set it to float",23,[[]]],[11,"into_pull_down_disabled","","Disable the pin and set it to pull down",23,[[]]],[11,"into_pull_up_disabled","","Disable the pin and set it to pull up",23,[[]]],[11,"into_floating_input","","Configure the pin to operate as a floating input",23,[[]]],[11,"into_pull_down_input","","Configure the pin to operate as a pulled down input",23,[[]]],[11,"into_pull_up_input","","Configure the pin to operate as a pulled up input",23,[[]]],[11,"into_push_pull_output","","Configure the pin to operate as a push-pull output",23,[[]]],[11,"into_readable_output","","Configure the pin to operate as a readable push pull output",23,[[]]],[11,"into_alternate","","Configure the pin to operate as the corresponding…",23,[[["dynalternate",4]]]],[11,"get_drive_strength","","Read the current drive strength of the pin.",23,[[]]],[11,"set_drive_strength","","Set the drive strength for the pin.",23,[[]]],[0,"prelude","atsamd_hal::common","Import the prelude to gain convenient access to helper…",null,null],[8,"_atsamd_hal_embedded_hal_digital_v2_InputPin","atsamd_hal::common::prelude","Single digital input pin",null,null],[16,"Error","","Error type",24,null],[10,"is_high","","Is the input pin high?",24,[[],["result",4]]],[10,"is_low","","Is the input pin low?",24,[[],["result",4]]],[8,"_atsamd_hal_embedded_hal_digital_v2_OutputPin","","Single digital push-pull output pin",null,null],[16,"Error","","Error type",25,null],[10,"set_low","","Drives the pin low",25,[[],["result",4]]],[10,"set_high","","Drives the pin high",25,[[],["result",4]]],[8,"_atsamd_hal_embedded_hal_digital_v2_ToggleableOutputPin","","Output pin that can be toggled",null,null],[16,"Error","","Error type",26,null],[10,"toggle","","Toggle pin output.",26,[[],["result",4]]],[8,"_embedded_hal_adc_OneShot","","ADCs that sample on single channels per request, and do so…",null,null],[16,"Error","","Error type returned by ADC methods",27,null],[10,"read","","Request that the ADC begin a conversion on the specified pin",27,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_blocking_delay_DelayMs","","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",28,[[]]],[8,"_embedded_hal_blocking_delay_DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",29,[[]]],[8,"_embedded_hal_blocking_i2c_Read","","Blocking read",null,null],[16,"Error","","Error type",30,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",30,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_Write","","Blocking write",null,null],[16,"Error","","Error type",31,null],[10,"write","","Sends bytes to slave with address `addr`",31,[[],["result",4]]],[8,"_embedded_hal_blocking_i2c_WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",32,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",32,[[],["result",4]]],[8,"_embedded_hal_blocking_rng_Read","","Blocking read",null,null],[16,"Error","","Error type",33,null],[10,"read","","Reads enough bytes from hardware random number generator…",33,[[],["result",4]]],[8,"_embedded_hal_blocking_serial_Write","","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",34,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",34,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered words",34,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Transfer","","Blocking transfer",null,null],[16,"Error","","Error type",35,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",35,[[],["result",4]]],[8,"_embedded_hal_blocking_spi_Write","","Blocking write",null,null],[16,"Error","","Error type",36,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",36,[[],["result",4]]],[8,"_embedded_hal_digital_InputPin","","Single digital input pin",null,null],[10,"is_high","","Is the input pin high?",37,[[]]],[10,"is_low","","Is the input pin low?",37,[[]]],[8,"_embedded_hal_digital_OutputPin","","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",38,[[]]],[10,"set_high","","Drives the pin high",38,[[]]],[8,"_embedded_hal_digital_ToggleableOutputPin","","Output pin that can be toggled",null,null],[10,"toggle","","Toggle pin output.",39,[[]]],[8,"_embedded_hal_serial_Read","","Read half of a serial interface",null,null],[16,"Error","","Read error",40,null],[10,"read","","Reads a single word from the serial interface",40,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_serial_Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",41,null],[10,"write","","Writes a single word to the serial interface",41,[[],[["error",4],["result",4]]]],[10,"flush","","Ensures that none of the previously written words are…",41,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_spi_FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",42,null],[10,"read","","Reads the word stored in the shift register",42,[[],[["result",4],["error",4]]]],[10,"send","","Sends a word to the slave",42,[[],[["result",4],["error",4]]]],[8,"_embedded_hal_timer_CountDown","","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",43,null],[10,"start","","Starts a new count down",43,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",43,[[],[["error",4],["result",4]]]],[8,"_embedded_hal_watchdog_Watchdog","","Feeds an existing watchdog to ensure the processor isn\'t…",null,null],[10,"feed","","Triggers the watchdog. This must be done once the watchdog…",44,[[]]],[8,"_embedded_hal_watchdog_WatchdogDisable","","Disables a running watchdog timer so the processor won\'t…",null,null],[10,"disable","","Disables the watchdog",45,[[]]],[8,"_embedded_hal_watchdog_WatchdogEnable","","Enables A watchdog timer to reset the processor if…",null,null],[16,"Time","","Unit of time used by the watchdog",46,null],[10,"start","","Starts the watchdog with a given period, typically once…",46,[[]]],[8,"_embedded_hal_Capture","","Input capture",null,null],[16,"Error","","Enumeration of `Capture` errors",47,null],[16,"Channel","","Enumeration of channels that can be used with this…",47,null],[16,"Time","","A time unit that can be converted into a human time unit…",47,null],[16,"Capture","","The type of the value returned by `capture`",47,null],[10,"capture","","\\\"Waits\\\" for a transition in the capture `channel` and…",47,[[],[["result",4],["error",4]]]],[10,"disable","","Disables a capture `channel`",47,[[]]],[10,"enable","","Enables a capture `channel`",47,[[]]],[10,"get_resolution","","Returns the current resolution",47,[[]]],[10,"set_resolution","","Sets the resolution of the capture timer",47,[[]]],[8,"_embedded_hal_Pwm","","Pulse Width Modulation",null,null],[16,"Channel","","Enumeration of channels that can be used with this `Pwm`…",48,null],[16,"Time","","A time unit that can be converted into a human time unit…",48,null],[16,"Duty","","Type for the `duty` methods",48,null],[10,"disable","","Disables a PWM `channel`",48,[[]]],[10,"enable","","Enables a PWM `channel`",48,[[]]],[10,"get_period","","Returns the current PWM period",48,[[]]],[10,"get_duty","","Returns the current duty cycle",48,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",48,[[]]],[10,"set_duty","","Sets a new duty cycle",48,[[]]],[10,"set_period","","Sets a new PWM period",48,[[]]],[8,"_embedded_hal_PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",49,null],[10,"disable","","Disables a PWM `channel`",49,[[]]],[10,"enable","","Enables a PWM `channel`",49,[[]]],[10,"get_duty","","Returns the current duty cycle",49,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",49,[[]]],[10,"set_duty","","Sets a new duty cycle",49,[[]]],[8,"_embedded_hal_Qei","","Quadrature encoder interface",null,null],[16,"Count","","The type of the value returned by `count`",50,null],[10,"count","","Returns the current pulse count of the encoder",50,[[]]],[10,"direction","","Returns the count direction",50,[[],["direction",4]]],[8,"EicPin","","The EicPin trait makes it more ergonomic to convert a gpio…",null,null],[10,"into_ei","","",51,[[["port",3]]]],[0,"rtc","atsamd_hal::common","Real-time clock/counter",null,null],[3,"Datetime","atsamd_hal::common::rtc","Datetime represents an RTC clock/calendar value.",null,null],[12,"seconds","","",52,null],[12,"minutes","","",52,null],[12,"hours","","",52,null],[12,"day","","",52,null],[12,"month","","",52,null],[12,"year","","",52,null],[3,"Rtc","","Rtc represents the RTC peripheral for either…",null,null],[3,"TimerParams","","Helper type for computing cycles and divider given frequency",null,null],[12,"divider","","",53,null],[12,"cycles","","",53,null],[11,"new","","Resets & does the basic configuration of the RTC…",54,[[["pm",3],["rtc",3],["hertz",3]]]],[11,"clock_mode","","Configures the peripheral for clock/calendar mode.…",54,[[]]],[11,"current_time","","Returns the current clock/calendar value.",54,[[],["datetime",3]]],[11,"set_time","","Updates the current clock/calendar value.",54,[[["datetime",3]]]],[11,"new","","calculates RTC timer paramters based on the input…",53,[[]]],[11,"new_us","","calculates RTC timer paramters based on the input…",53,[[]]],[0,"sercom","atsamd_hal::common","Configure the SERCOM peripheralsThe SERCOM module is used…",null,null],[0,"v1","atsamd_hal::common::sercom","Version 1 of the SERCOM moduleThis module retains the…",null,null],[3,"I2CMaster0","atsamd_hal::common::sercom::v1","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster1","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster2","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster3","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster4","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster5","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"SPIMaster0Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster0","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster1Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster1","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster2Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster2","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster3Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster3","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster4Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster4","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster5Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster5","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"UART0Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART0","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART1Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART1","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART2Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART2","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART3Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART3","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART4Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART4","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART5Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART5","","UARTX represents the corresponding SERCOMX instance…",null,null],[4,"I2CError","","",null,null],[13,"ArbitrationLost","","",55,null],[13,"AddressError","","",55,null],[13,"BusError","","",55,null],[13,"Timeout","","",55,null],[13,"Nack","","",55,null],[4,"Error","","",null,null],[13,"Overrun","","",56,null],[0,"pads","","Version 1 of the SERCOM pads module",null,null],[6,"Sercom0Pad0","atsamd_hal::common::sercom::v1::pads","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom0Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom1Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom2Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom3Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom4Pad3","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad0","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad1","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad2","","Represents a numbered pad for the associated sercom…",null,null],[6,"Sercom5Pad3","","Represents a numbered pad for the associated sercom…",null,null],[8,"PadPin","","The PadPin trait makes it more ergonomic to convert a pin…",null,null],[10,"into_pad","","",57,[[["port",3]]]],[0,"i2c","atsamd_hal::common::sercom::v1","",null,null],[3,"I2CMaster0","atsamd_hal::common::sercom::v1::i2c","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster1","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster2","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster3","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster4","","Represents the Sercom instance configured to act as an I2C…",null,null],[3,"I2CMaster5","","Represents the Sercom instance configured to act as an I2C…",null,null],[4,"I2CError","","",null,null],[13,"ArbitrationLost","","",55,null],[13,"AddressError","","",55,null],[13,"BusError","","",55,null],[13,"Timeout","","",55,null],[13,"Nack","","",55,null],[0,"pad_map","atsamd_hal::common::sercom::v1","Implementations of the `pads` `Map` trait",null,null],[0,"spi","","",null,null],[3,"SPIMaster0Padout","atsamd_hal::common::sercom::v1::spi","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster0","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster1Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster1","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster2Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster2","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster3Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster3","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster4Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster4","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[3,"SPIMaster5Padout","","A pad mapping configuration for the SERCOM in SPI master…",null,null],[3,"SPIMaster5","","SPIMasterX represents the corresponding SERCOMX instance…",null,null],[4,"Error","","",null,null],[13,"Overrun","","",56,null],[8,"DipoDopo","","The DipoDopo trait defines a way to get the data in and…",null,null],[10,"dipo_dopo","","",58,[[]]],[0,"uart","atsamd_hal::common::sercom::v1","",null,null],[3,"UART0Padout","atsamd_hal::common::sercom::v1::uart","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART0","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART1Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART1","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART2Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART2","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART3Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART3","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART4Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART4","","UARTX represents the corresponding SERCOMX instance…",null,null],[3,"UART5Padout","","A pad mapping configuration for the SERCOM in UART mode.",null,null],[3,"UART5","","UARTX represents the corresponding SERCOMX instance…",null,null],[8,"RxpoTxpo","","The RxpoTxpo trait defines a way to get the data in and…",null,null],[10,"rxpo_txpo","","",59,[[]]],[8,"DipoDopo","atsamd_hal::common::sercom::v1","The DipoDopo trait defines a way to get the data in and…",null,null],[10,"dipo_dopo","","",58,[[]]],[8,"RxpoTxpo","","The RxpoTxpo trait defines a way to get the data in and…",null,null],[10,"rxpo_txpo","","",59,[[]]],[0,"v2","atsamd_hal::common::sercom","Version 2 of the SERCOM moduleThis module provides a new…",null,null],[0,"pads","atsamd_hal::common::sercom::v2","Version 2 of the SERCOM pads module",null,null],[3,"Pads","atsamd_hal::common::sercom::v2::pads","Tuple struct containing all four [`Pad`]s for a given…",null,null],[12,"0","","",60,null],[12,"1","","",60,null],[12,"2","","",60,null],[12,"3","","",60,null],[3,"Pad","","Represents a SERCOM Pad configured to use a particular pin",null,null],[4,"Sercom0","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom1","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom2","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom3","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom4","","Represents the corresponding SERCOM instance",null,null],[4,"Sercom5","","Represents the corresponding SERCOM instance",null,null],[4,"Pad0","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad1","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad2","","Represents the corresponding SERCOM pad number",null,null],[4,"Pad3","","Represents the corresponding SERCOM pad number",null,null],[4,"IoSet1","","Represents the corresponding IOSET",null,null],[4,"IoSet2","","Represents the corresponding IOSET",null,null],[4,"IoSet3","","Represents the corresponding IOSET",null,null],[4,"IoSet4","","Represents the corresponding IOSET",null,null],[4,"IoSet6","","Represents the corresponding IOSET",null,null],[6,"SERCOM","","Type alias to extract the correct PAC SERCOM type from the…",null,null],[6,"ConcretePad","","Type alias to convert from an implementation of [`AnyPad`]…",null,null],[8,"Sercom","","Type-level `enum` representing a Serial Communication…",null,null],[16,"SERCOM","","Corresponding PAC SERCOM type",61,null],[8,"PadNum","","Type-level `enum` representing a SERCOM pad number",null,null],[8,"IoSet","","Type-level `enum` representing a SERCOM IOSET configuration",null,null],[8,"Map","","Type-level function mapping [`Pad`]s to [`Pin`]s",null,null],[16,"Id","","The [`PinId`] for the corresponding pin",62,null],[16,"Mode","","The [`PinMode`] for the corresponding pin",62,null],[8,"AnyPad","","Meta-type representing any [`Pad`]",null,null],[16,"Sercom","","",63,null],[16,"PadNum","","",63,null],[16,"Map","","",63,null],[10,"as_concrete","","Convert a type that implements [`AnyPad`] to a concrete…",63,[[],["concretepad",6]]],[8,"OptionalPad","","Meta-type representing an optional [`Pad`].",null,null],[8,"SomePad","","Meta-type representing a valid [`Pad`].",null,null],[11,"new","","Create a new SERCOM [`Pad`] from a [`Pin`]",64,[[["pin",3],["pinmode",8]]]],[11,"free","","Consume the [`Pad`] and release the corresponding [`Pin`]",64,[[],["pin",3]]],[11,"as_any","","Convert a [`Pad`] to a type that implements [`AnyPad`]",64,[[]]],[0,"pad_map","atsamd_hal::common::sercom::v2","Implementations of the `pads` `Map` trait",null,null],[0,"sleeping_delay","atsamd_hal::common","Delays with WFI sleep while we wait using a timer",null,null],[3,"SleepingDelay","atsamd_hal::common::sleeping_delay","Delay and sleep while we do (WFI) using a timer",null,null],[11,"new","","Initializes a new SleepingDelay struct",65,[[["atomicbool",3]],["sleepingdelay",3]]],[11,"free","","Releases the timer resource",65,[[]]],[0,"spi_common","atsamd_hal::common","",null,null],[8,"CommonSpi","atsamd_hal::common::spi_common","",null,null],[10,"spi","","Helper for accessing the spi member of the sercom instance",66,[[],["spi",3]]],[10,"spi_mut","","Helper for accessing the spi member of the sercom instance",66,[[],["spi",3]]],[11,"disable","","Disable the SPI",66,[[]]],[11,"enable","","Enable the SPI",66,[[]]],[11,"set_mode","","Set the polarity (CPOL) and phase (CPHA) of the SPI",66,[[["mode",3]]]],[11,"freq","","Method for calculating the output frequency given our baud…",66,[[["hertz",3]],["hertz",3]]],[11,"calculate_baud","","Helper for calculating our baudrate register",66,[[["into",8],["hertz",3]]]],[0,"time","atsamd_hal::common","Time units",null,null],[3,"Bps","atsamd_hal::common::time","Bits per second",null,null],[12,"0","","",67,null],[3,"Hertz","","Hertz",null,null],[12,"0","","",68,null],[3,"KiloHertz","","KiloHertz",null,null],[12,"0","","",69,null],[3,"MegaHertz","","MegaHertz",null,null],[12,"0","","",70,null],[3,"Seconds","","Seconds",null,null],[12,"0","","",71,null],[3,"Milliseconds","","Milliseconds",null,null],[12,"0","","",72,null],[3,"Microseconds","","Microseconds",null,null],[12,"0","","",73,null],[3,"Nanoseconds","","Nanoseconds",null,null],[12,"0","","",74,null],[8,"U32Ext","","Extension trait that adds convenience methods to the `u32`…",null,null],[10,"bps","","Wrap in `Bps`",75,[[],["bps",3]]],[10,"hz","","Wrap in `Hertz`",75,[[],["hertz",3]]],[10,"khz","","Wrap in `KiloHertz`",75,[[],["kilohertz",3]]],[10,"mhz","","Wrap in `MegaHertz`",75,[[],["megahertz",3]]],[10,"s","","Wrap in `Seconds`",75,[[],["seconds",3]]],[10,"ms","","Wrap in `Milliseconds`",75,[[],["milliseconds",3]]],[10,"us","","Wrap in `Microseconds`",75,[[],["microseconds",3]]],[10,"ns","","Wrap in `NanoSeconds`",75,[[],["nanoseconds",3]]],[0,"timer_params","atsamd_hal::common","helper struct to calculate divider & cycles settings for…",null,null],[3,"TimerParams","atsamd_hal::common::timer_params","Helper type for computing cycles and divider given frequency",null,null],[12,"divider","","",76,null],[12,"cycles","","",76,null],[11,"new","","calculates TimerParams from a given frequency based timeout.",76,[[]]],[11,"new_us","","calculates TimerParams from a given period based timeout.",76,[[]]],[0,"timer_traits","atsamd_hal::common","",null,null],[8,"InterruptDrivenTimer","atsamd_hal::common::timer_traits","Trait for timers that can enable & disable an interrupt…",null,null],[10,"enable_interrupt","","Enable the timer interrupt",77,[[]]],[10,"disable_interrupt","","Disable the timer interrupt",77,[[]]],[11,"new","atsamd_hal::common::sercom::v1","Configures the sercom instance to work as an I2C Master.…",78,[[["sercom0",3],["sercom0coreclock",3],["hertz",3],["mclk",3],["into",8]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",78,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",79,[[["hertz",3],["sercom1",3],["mclk",3],["sercom1coreclock",3],["into",8]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",79,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",80,[[["hertz",3],["sercom2",3],["mclk",3],["sercom2coreclock",3],["into",8]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",80,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",81,[[["sercom3coreclock",3],["hertz",3],["sercom3",3],["mclk",3],["into",8]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",81,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",82,[[["hertz",3],["sercom4coreclock",3],["mclk",3],["into",8],["sercom4",3]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",82,[[]]],[11,"new","","Configures the sercom instance to work as an I2C Master.…",83,[[["hertz",3],["mclk",3],["sercom5",3],["sercom5coreclock",3],["into",8]]]],[11,"free","","Breaks the sercom device up into its constituent pins and…",83,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",84,[[["into",8],["sercom0coreclock",3],["mclk",3],["mode",3],["sercom0",3],["hertz",3],["spimaster0padout",3],["into",8]]]],[11,"set_baud","","Set the baud rate",84,[[["sercom0coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",84,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",85,[[["mclk",3],["into",8],["sercom1coreclock",3],["mode",3],["hertz",3],["sercom1",3],["spimaster1padout",3],["into",8]]]],[11,"set_baud","","Set the baud rate",85,[[["sercom1coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",85,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",86,[[["into",8],["mclk",3],["sercom2",3],["mode",3],["spimaster2padout",3],["hertz",3],["sercom2coreclock",3],["into",8]]]],[11,"set_baud","","Set the baud rate",86,[[["sercom2coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",86,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",87,[[["mclk",3],["mode",3],["sercom3coreclock",3],["hertz",3],["sercom3",3],["spimaster3padout",3],["into",8],["into",8]]]],[11,"set_baud","","Set the baud rate",87,[[["sercom3coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",87,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",88,[[["sercom4coreclock",3],["mclk",3],["spimaster4padout",3],["mode",3],["hertz",3],["into",8],["sercom4",3],["into",8]]]],[11,"set_baud","","Set the baud rate",88,[[["sercom4coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",88,[[]]],[11,"new","","Power on and configure SERCOMX to work as an SPI Master…",89,[[["mclk",3],["mode",3],["sercom5coreclock",3],["into",8],["hertz",3],["sercom5",3],["into",8],["spimaster5padout",3]]]],[11,"set_baud","","Set the baud rate",89,[[["sercom5coreclock",3],["into",8],["hertz",3]]]],[11,"free","","Tear down the SPI instance and yield the constituent pins…",89,[[]]],[11,"new","","",90,[[["sercom0",3],["sercom0coreclock",3],["hertz",3],["mclk",3],["uart0padout",3],["into",8],["into",8]]]],[11,"free","","",90,[[]]],[11,"intenset","","",90,[[]]],[11,"intenclr","","",90,[[]]],[11,"flags","","",90,[[],["r",6]]],[11,"new","","",91,[[["uart1padout",3],["hertz",3],["sercom1",3],["mclk",3],["sercom1coreclock",3],["into",8],["into",8]]]],[11,"free","","",91,[[]]],[11,"intenset","","",91,[[]]],[11,"intenclr","","",91,[[]]],[11,"flags","","",91,[[],["r",6]]],[11,"new","","",92,[[["uart2padout",3],["hertz",3],["sercom2",3],["mclk",3],["into",8],["sercom2coreclock",3],["into",8]]]],[11,"free","","",92,[[]]],[11,"intenset","","",92,[[]]],[11,"intenclr","","",92,[[]]],[11,"flags","","",92,[[],["r",6]]],[11,"new","","",93,[[["sercom3coreclock",3],["hertz",3],["sercom3",3],["mclk",3],["into",8],["into",8],["uart3padout",3]]]],[11,"free","","",93,[[]]],[11,"intenset","","",93,[[]]],[11,"intenclr","","",93,[[]]],[11,"flags","","",93,[[],["r",6]]],[11,"new","","",94,[[["uart4padout",3],["hertz",3],["sercom4coreclock",3],["mclk",3],["into",8],["into",8],["sercom4",3]]]],[11,"free","","",94,[[]]],[11,"intenset","","",94,[[]]],[11,"intenclr","","",94,[[]]],[11,"flags","","",94,[[],["r",6]]],[11,"new","","",95,[[["uart5padout",3],["hertz",3],["mclk",3],["into",8],["sercom5",3],["sercom5coreclock",3],["into",8]]]],[11,"free","","",95,[[]]],[11,"intenset","","",95,[[]]],[11,"intenclr","","",95,[[]]],[11,"flags","","",95,[[],["r",6]]],[0,"calibration","atsamd_hal::common","NVM Software Calibration Area Mapping",null,null],[5,"usb_transn_cal","atsamd_hal::common::calibration","USB TRANSN calibration value. Should be written to USB…",null,[[]]],[5,"usb_transp_cal","","USB TRANSP calibration value. Should be written to USB…",null,[[]]],[5,"usb_trim_cal","","USB TRIM calibration value. Should be written to USB…",null,[[]]],[5,"adc0_biascomp_scale_cal","","ADC0 BIASCOMP calibration value. Should be written to ADC0…",null,[[]]],[5,"adc0_biasref_scale_cal","","ADC0 BIASREFBUF calibration value. Should be written to…",null,[[]]],[5,"adc0_biasr2r_scale_cal","","ADC0 BIASR2R calibration value. Should be written to ADC0…",null,[[]]],[5,"adc1_biascomp_scale_cal","","ADC1 BIASCOMP calibration value. Should be written to ADC1…",null,[[]]],[5,"adc1_biasref_scale_cal","","ADC1 BIASREFBUF calibration value. Should be written to…",null,[[]]],[5,"adc1_biasr2r_scale_cal","","ADC1 BIASR2R calibration value. Should be written to ADC1…",null,[[]]],[0,"clock","atsamd_hal::common","Configuring the system clock sources. You will typically…",null,null],[3,"GClock","atsamd_hal::common::clock","Represents a configured clock generator. Can be converted…",null,null],[3,"GenericClockController","","`GenericClockController` encapsulates the GCLK hardware.…",null,null],[3,"Tc0Tc1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tcc0Tcc1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tc2Tc3Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tcc2Tcc3Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tc4Tc5Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tcc4Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Tc6Tc7Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom0CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom1CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom2CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom3CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom4CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"Sercom5CoreClock","","A typed token that indicates that the clock for the…",null,null],[3,"UsbClock","","A typed token that indicates that the clock for the…",null,null],[3,"Adc0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Adc1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"EicClock","","A typed token that indicates that the clock for the…",null,null],[3,"FreqmMsrClock","","A typed token that indicates that the clock for the…",null,null],[3,"FreqmRefClock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys2Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys3Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys4Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys5Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys6Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys7Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys8Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys9Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys10Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Evsys11Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Can0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Can1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"PdecClock","","A typed token that indicates that the clock for the…",null,null],[3,"AcClock","","A typed token that indicates that the clock for the…",null,null],[3,"CclClock","","A typed token that indicates that the clock for the…",null,null],[3,"DacClock","","A typed token that indicates that the clock for the…",null,null],[3,"I2S0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"I2S1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Sdhc0Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Sdhc1Clock","","A typed token that indicates that the clock for the…",null,null],[3,"Cm4TraceClock","","A typed token that indicates that the clock for the…",null,null],[4,"ClockId","","",null,null],[13,"DFLL48","","",96,null],[13,"FDPLL0","","",96,null],[13,"FDPLL1","","",96,null],[13,"SLOW_32K","","",96,null],[13,"EIC","","",96,null],[13,"FREQM_MSR","","",96,null],[13,"FREQM_REF","","",96,null],[13,"SERCOM0_CORE","","",96,null],[13,"SERCOM1_CORE","","",96,null],[13,"TC0_TC1","","",96,null],[13,"USB","","",96,null],[13,"EVSYS0","","",96,null],[13,"EVSYS1","","",96,null],[13,"EVSYS2","","",96,null],[13,"EVSYS3","","",96,null],[13,"EVSYS4","","",96,null],[13,"EVSYS5","","",96,null],[13,"EVSYS6","","",96,null],[13,"EVSYS7","","",96,null],[13,"EVSYS8","","",96,null],[13,"EVSYS9","","",96,null],[13,"EVSYS10","","",96,null],[13,"EVSYS11","","",96,null],[13,"SERCOM2_CORE","","",96,null],[13,"SERCOM3_CORE","","",96,null],[13,"TCC0_TCC1","","",96,null],[13,"TC2_TC3","","",96,null],[13,"CAN0","","",96,null],[13,"CAN1","","",96,null],[13,"TCC2_TCC3","","",96,null],[13,"TC4_TC5","","",96,null],[13,"PDEC","","",96,null],[13,"AC","","",96,null],[13,"CCL","","",96,null],[13,"SERCOM4_CORE","","",96,null],[13,"SERCOM5_CORE","","",96,null],[13,"SERCOM6_CORE","","",96,null],[13,"SERCOM7_CORE","","",96,null],[13,"TCC4","","",96,null],[13,"TC6_TC7","","",96,null],[13,"ADC0","","",96,null],[13,"ADC1","","",96,null],[13,"DAC","","",96,null],[13,"I2S0","","",96,null],[13,"I2S1","","",96,null],[13,"SDHC0","","",96,null],[13,"SDHC1","","",96,null],[13,"CM4_TRACE","","",96,null],[6,"ClockGenId","","",null,null],[6,"ClockSource","","",null,null],[17,"OSC48M_FREQ","","The frequency of the 48Mhz source.",null,null],[17,"OSC32K_FREQ","","The frequency of the 32Khz source.",null,null],[17,"OSC120M_FREQ","","The frequency of the 120Mhz source.",null,null],[0,"eic","atsamd_hal::common","",null,null],[3,"ConfigurableEIC","atsamd_hal::common::eic","An External Interrupt Controller which is being configured.",null,null],[3,"EIC","","A configured External Interrupt Controller.",null,null],[5,"init_with_ulp32k","","init_with_ulp32k initializes the EIC and wires it up to…",null,[[["eicclock",3],["eic",3],["mclk",3]],["configurableeic",3]]],[0,"pin","","",null,null],[3,"ExtInt0","atsamd_hal::common::eic::pin","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt1","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt2","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt3","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt4","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt5","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt6","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt7","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt8","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt9","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt10","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt11","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt12","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt13","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt14","","Represents a numbered external interrupt. The external…",null,null],[3,"ExtInt15","","Represents a numbered external interrupt. The external…",null,null],[6,"Sense","","",null,null],[6,"ExternalInterruptID","","",null,null],[8,"EicPin","","The EicPin trait makes it more ergonomic to convert a gpio…",null,null],[10,"into_ei","","",51,[[["port",3]]]],[8,"ExternalInterrupt","","ExternalInterrupt describes something with an external…",null,null],[10,"id","","",97,[[],["externalinterruptid",6]]],[0,"qspi","atsamd_hal::common","",null,null],[3,"OneShot","atsamd_hal::common::qspi","Qspi used for read/write of fixed-size octet buffers",null,null],[3,"XIP","","Qspi is memory-mapped as read/execute",null,null],[3,"Qspi","","",null,null],[4,"Error","","",null,null],[13,"CommandFunctionMismatch","","The command you selected cannot be performed by this…",98,null],[4,"Command","","",null,null],[13,"Read","","",99,null],[13,"QuadRead","","",99,null],[13,"ReadId","","",99,null],[13,"PageProgram","","",99,null],[13,"QuadPageProgram","","",99,null],[13,"ReadStatus","","",99,null],[13,"ReadStatus2","","",99,null],[13,"WriteStatus","","",99,null],[13,"WriteStatus2","","",99,null],[13,"EnableReset","","",99,null],[13,"Reset","","",99,null],[13,"WriteEnable","","",99,null],[13,"WriteDisable","","",99,null],[13,"EraseSector","","",99,null],[13,"EraseBlock","","",99,null],[13,"EraseChip","","",99,null],[0,"timer","atsamd_hal::common","Working with timer counter hardware",null,null],[3,"TimerCounter","atsamd_hal::common::timer","A generic hardware timer counter. The counters are exposed…",null,null],[3,"SpinTimer","","",null,null],[6,"TimerCounter2","","",null,null],[6,"TimerCounter3","","",null,null],[8,"Count16","","This is a helper trait to make it easier to make most of…",null,null],[10,"count_16","","",100,[[],["count16",3]]],[0,"trng","atsamd_hal::common","",null,null],[3,"Trng","atsamd_hal::common::trng","",null,null],[0,"usb","atsamd_hal::common","USB Device support",null,null],[3,"UsbBus","atsamd_hal::common::usb","",null,null],[6,"SofPad","","Emit SOF at 1Khz on this pin when configured as function H",null,null],[6,"DmPad","","USB D- is connected here",null,null],[6,"DpPad","","USB D+ is connected here",null,null],[0,"adc","atsamd_hal::common","",null,null],[3,"InterruptAdc","atsamd_hal::common::adc","An ADC where results are accessible via interrupt servicing.",null,null],[3,"Adc","","",null,null],[3,"SingleConversion","","",null,null],[3,"FreeRunning","","",null,null],[8,"ConversionMode","","Describes how an interrupt-driven ADC should finalize the…",null,null],[10,"on_start","","",101,[[["adc",3]]]],[10,"on_complete","","",101,[[["adc",3]]]],[10,"on_stop","","",101,[[["adc",3]]]],[0,"pwm","atsamd_hal::common","",null,null],[3,"Pwm0","atsamd_hal::common::pwm","",null,null],[3,"Pwm1","","",null,null],[3,"Pwm2","","",null,null],[3,"Pwm3","","",null,null],[3,"Tcc0Pwm","","",null,null],[3,"Tcc1Pwm","","",null,null],[3,"Tcc2Pwm","","",null,null],[4,"TC0Pinout","","",null,null],[13,"Pa5","","",102,null],[13,"Pa9","","",102,null],[4,"TC1Pinout","","",null,null],[13,"Pa7","","",103,null],[13,"Pa11","","",103,null],[4,"TC2Pinout","","",null,null],[13,"Pa1","","",104,null],[13,"Pa13","","",104,null],[13,"Pa17","","",104,null],[4,"TC3Pinout","","",null,null],[13,"Pa15","","",105,null],[13,"Pa19","","",105,null],[4,"Channel","","",null,null],[13,"_0","","",106,null],[13,"_1","","",106,null],[13,"_2","","",106,null],[13,"_3","","",106,null],[13,"_4","","",106,null],[13,"_5","","",106,null],[13,"_6","","",106,null],[13,"_7","","",106,null],[4,"TCC0Pinout","","",null,null],[13,"Pa8","","",107,null],[13,"Pa9","","",107,null],[13,"Pa10","","",107,null],[13,"Pa11","","",107,null],[13,"Pa12","","",107,null],[13,"Pa13","","",107,null],[13,"Pa16","","",107,null],[13,"Pa17","","",107,null],[13,"Pa18","","",107,null],[13,"Pa19","","",107,null],[13,"Pa20","","",107,null],[13,"Pa21","","",107,null],[13,"Pa22","","",107,null],[13,"Pa23","","",107,null],[13,"Pb10","","",107,null],[13,"Pb11","","",107,null],[4,"TCC1Pinout","","",null,null],[13,"Pa8","","",108,null],[13,"Pa9","","",108,null],[13,"Pa10","","",108,null],[13,"Pa11","","",108,null],[13,"Pa12","","",108,null],[13,"Pa13","","",108,null],[13,"Pa14","","",108,null],[13,"Pa15","","",108,null],[13,"Pa16","","",108,null],[13,"Pa17","","",108,null],[13,"Pa18","","",108,null],[13,"Pa19","","",108,null],[13,"Pa20","","",108,null],[13,"Pa21","","",108,null],[13,"Pa22","","",108,null],[13,"Pa23","","",108,null],[13,"Pb10","","",108,null],[13,"Pb11","","",108,null],[4,"TCC2Pinout","","",null,null],[13,"Pa14","","",109,null],[13,"Pa15","","",109,null],[13,"Pa24","","",109,null],[13,"Pa30","","",109,null],[13,"Pa31","","",109,null],[13,"Pb2","","",109,null],[0,"watchdog","atsamd_hal::common","",null,null],[3,"Watchdog","atsamd_hal::common::watchdog","",null,null],[4,"WatchdogTimeout","","WatchdogTimeout enumerates usable values for configuring…",null,null],[13,"Cycles8","","",110,null],[13,"Cycles16","","",110,null],[13,"Cycles32","","",110,null],[13,"Cycles64","","",110,null],[13,"Cycles128","","",110,null],[13,"Cycles256","","",110,null],[13,"Cycles512","","",110,null],[13,"Cycles1K","","",110,null],[13,"Cycles2K","","",110,null],[13,"Cycles4K","","",110,null],[13,"Cycles8K","","",110,null],[13,"Cycles16K","","",110,null],[0,"pad","atsamd_hal::common","",null,null],[0,"samd51","atsamd_hal","",null,null],[0,"pwm","atsamd_hal::samd51","",null,null],[3,"Pwm0","atsamd_hal::samd51::pwm","",null,null],[3,"Pwm1","","",null,null],[3,"Pwm2","","",null,null],[3,"Pwm3","","",null,null],[3,"Tcc0Pwm","","",null,null],[3,"Tcc1Pwm","","",null,null],[3,"Tcc2Pwm","","",null,null],[4,"TC0Pinout","","",null,null],[13,"Pa5","","",102,null],[13,"Pa9","","",102,null],[4,"TC1Pinout","","",null,null],[13,"Pa7","","",103,null],[13,"Pa11","","",103,null],[4,"TC2Pinout","","",null,null],[13,"Pa1","","",104,null],[13,"Pa13","","",104,null],[13,"Pa17","","",104,null],[4,"TC3Pinout","","",null,null],[13,"Pa15","","",105,null],[13,"Pa19","","",105,null],[4,"Channel","","",null,null],[13,"_0","","",106,null],[13,"_1","","",106,null],[13,"_2","","",106,null],[13,"_3","","",106,null],[13,"_4","","",106,null],[13,"_5","","",106,null],[13,"_6","","",106,null],[13,"_7","","",106,null],[4,"TCC0Pinout","","",null,null],[13,"Pa8","","",107,null],[13,"Pa9","","",107,null],[13,"Pa10","","",107,null],[13,"Pa11","","",107,null],[13,"Pa12","","",107,null],[13,"Pa13","","",107,null],[13,"Pa16","","",107,null],[13,"Pa17","","",107,null],[13,"Pa18","","",107,null],[13,"Pa19","","",107,null],[13,"Pa20","","",107,null],[13,"Pa21","","",107,null],[13,"Pa22","","",107,null],[13,"Pa23","","",107,null],[13,"Pb10","","",107,null],[13,"Pb11","","",107,null],[4,"TCC1Pinout","","",null,null],[13,"Pa8","","",108,null],[13,"Pa9","","",108,null],[13,"Pa10","","",108,null],[13,"Pa11","","",108,null],[13,"Pa12","","",108,null],[13,"Pa13","","",108,null],[13,"Pa14","","",108,null],[13,"Pa15","","",108,null],[13,"Pa16","","",108,null],[13,"Pa17","","",108,null],[13,"Pa18","","",108,null],[13,"Pa19","","",108,null],[13,"Pa20","","",108,null],[13,"Pa21","","",108,null],[13,"Pa22","","",108,null],[13,"Pa23","","",108,null],[13,"Pb10","","",108,null],[13,"Pb11","","",108,null],[4,"TCC2Pinout","","",null,null],[13,"Pa14","","",109,null],[13,"Pa15","","",109,null],[13,"Pa24","","",109,null],[13,"Pa30","","",109,null],[13,"Pa31","","",109,null],[13,"Pb2","","",109,null],[14,"dbgprint","atsamd_hal","",null,null],[14,"define_pins","","This macro is a helper for defining a `Pins` type in a…",null,null],[11,"from","atsamd_hal::typelevel","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","atsamd_hal::common","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","atsamd_hal::common::delay","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v1","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"set_low","","",5,[[],["result",4]]],[11,"set_high","","",5,[[],["result",4]]],[11,"is_set_low","","",5,[[],["result",4]]],[11,"is_set_high","","",5,[[],["result",4]]],[11,"toggle","","Toggle pin output",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","","",5,[[],["result",4]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"set_low","","",14,[[],["result",4]]],[11,"set_high","","",14,[[],["result",4]]],[11,"is_set_low","","",14,[[],["result",4]]],[11,"is_set_high","","",14,[[],["result",4]]],[11,"toggle","","Toggle pin output",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","","",14,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","atsamd_hal::common::gpio::v2::dynpin","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"set_low","","",23,[[],["result",4]]],[11,"set_high","","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"is_set_high","","",23,[[],["result",4]]],[11,"toggle","","Toggle pin output",23,[[],["result",4]]],[11,"is_low","","",23,[[],["result",4]]],[11,"is_high","","",23,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","atsamd_hal::common::rtc","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sercom::v1","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"transfer","","",84,[[],["result",4]]],[11,"write","","",84,[[],["result",4]]],[11,"write_iter","","",84,[[],["result",4]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"transfer","","",85,[[],["result",4]]],[11,"write","","",85,[[],["result",4]]],[11,"write_iter","","",85,[[],["result",4]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"transfer","","",86,[[],["result",4]]],[11,"write","","",86,[[],["result",4]]],[11,"write_iter","","",86,[[],["result",4]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"transfer","","",87,[[],["result",4]]],[11,"write","","",87,[[],["result",4]]],[11,"write_iter","","",87,[[],["result",4]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"transfer","","",88,[[],["result",4]]],[11,"write","","",88,[[],["result",4]]],[11,"write_iter","","",88,[[],["result",4]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"transfer","","",89,[[],["result",4]]],[11,"write","","",89,[[],["result",4]]],[11,"write_iter","","",89,[[],["result",4]]],[11,"from","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"bwrite_all","","",90,[[],["result",4]]],[11,"bflush","","",90,[[],["result",4]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"bwrite_all","","",91,[[],["result",4]]],[11,"bflush","","",91,[[],["result",4]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"bwrite_all","","",92,[[],["result",4]]],[11,"bflush","","",92,[[],["result",4]]],[11,"from","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"bwrite_all","","",93,[[],["result",4]]],[11,"bflush","","",93,[[],["result",4]]],[11,"from","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"bwrite_all","","",94,[[],["result",4]]],[11,"bflush","","",94,[[],["result",4]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"bwrite_all","","",95,[[],["result",4]]],[11,"bflush","","",95,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sercom::v2::pads","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","atsamd_hal::common::sleeping_delay","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","atsamd_hal::common::time","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","atsamd_hal::common::timer_params","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","atsamd_hal::common::clock","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","atsamd_hal::common::eic","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","atsamd_hal::common::eic::pin","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"from","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","atsamd_hal::common::qspi","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","atsamd_hal::common::timer","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","atsamd_hal::common::trng","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","atsamd_hal::common::usb","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","atsamd_hal::common::adc","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","atsamd_hal::common::pwm","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","atsamd_hal::common::watchdog","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"write_str","atsamd_hal::common::prelude","",41,[[],[["error",3],["result",4]]]],[11,"into_function","atsamd_hal::common::gpio::v1","",5,[[["port",3]],[["pin",3],["alternate",3]]]],[11,"as_concrete","atsamd_hal::common::gpio::v2::pin","",14,[[],["concretepin",6]]],[11,"as_concrete_ref","","",14,[[],["concretepin",6]]],[11,"as_concrete_mut","","",14,[[],["concretepin",6]]],[11,"into_pad","atsamd_hal::common::gpio::v1","",5,[[["port",3]],[["pad",3],["pin",3]]]],[11,"as_concrete","atsamd_hal::common::sercom::v2::pads","",64,[[],["concretepad",6]]],[11,"spi","atsamd_hal::common::sercom::v1","Helper for accessing the spi member of the sercom instance",84,[[],["spim",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",84,[[],["spim",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",85,[[],["spim",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",85,[[],["spim",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",86,[[],["spim",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",86,[[],["spim",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",87,[[],["spim",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",87,[[],["spim",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",88,[[],["spim",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",88,[[],["spim",3]]],[11,"spi","","Helper for accessing the spi member of the sercom instance",89,[[],["spim",3]]],[11,"spi_mut","","Helper for accessing the spi member of the sercom instance",89,[[],["spim",3]]],[11,"enable_interrupt","atsamd_hal::common::rtc","Enable the interrupt generation for this hardware timer.…",54,[[]]],[11,"disable_interrupt","","Disables interrupt generation for this hardware timer.…",54,[[]]],[11,"enable_interrupt","atsamd_hal::common::timer","Enable the interrupt generation for this hardware timer.…",267,[[]]],[11,"disable_interrupt","","Disables interrupt generation for this hardware timer.…",267,[[]]],[11,"into_ei","atsamd_hal","",283,[[["port",3]],[["extint0",3],["pa0",6]]]],[11,"into_ei","","",284,[[["port",3]],[["extint0",3],["pa16",6]]]],[11,"into_ei","","",285,[[["port",3]],[["extint1",3],["pa1",6]]]],[11,"into_ei","","",286,[[["port",3]],[["extint1",3],["pa17",6]]]],[11,"into_ei","","",287,[[["port",3]],[["extint2",3],["pa2",6]]]],[11,"into_ei","","",288,[[["port",3]],[["extint2",3],["pa18",6]]]],[11,"into_ei","","",289,[[["port",3]],[["extint2",3],["pb2",6]]]],[11,"into_ei","","",290,[[["port",3]],[["extint3",3],["pa3",6]]]],[11,"into_ei","","",291,[[["port",3]],[["pa19",6],["extint3",3]]]],[11,"into_ei","","",292,[[["port",3]],[["pb3",6],["extint3",3]]]],[11,"into_ei","","",293,[[["port",3]],[["pa4",6],["extint4",3]]]],[11,"into_ei","","",294,[[["port",3]],[["extint4",3],["pa20",6]]]],[11,"into_ei","","",295,[[["port",3]],[["extint5",3],["pa5",6]]]],[11,"into_ei","","",296,[[["port",3]],[["extint5",3],["pa21",6]]]],[11,"into_ei","","",297,[[["port",3]],[["extint6",3],["pa6",6]]]],[11,"into_ei","","",298,[[["port",3]],[["extint6",3],["pa22",6]]]],[11,"into_ei","","",299,[[["port",3]],[["extint6",3],["pb22",6]]]],[11,"into_ei","","",300,[[["port",3]],[["pa7",6],["extint7",3]]]],[11,"into_ei","","",301,[[["port",3]],[["pa23",6],["extint7",3]]]],[11,"into_ei","","",302,[[["port",3]],[["pb23",6],["extint7",3]]]],[11,"into_ei","","",303,[[["port",3]],[["extint8",3],["pa24",6]]]],[11,"into_ei","","",304,[[["port",3]],[["pb8",6],["extint8",3]]]],[11,"into_ei","","",305,[[["port",3]],[["pa9",6],["extint9",3]]]],[11,"into_ei","","",306,[[["port",3]],[["extint9",3],["pa25",6]]]],[11,"into_ei","","",307,[[["port",3]],[["pb9",6],["extint9",3]]]],[11,"into_ei","","",308,[[["port",3]],[["pa10",6],["extint10",3]]]],[11,"into_ei","","",309,[[["port",3]],[["extint10",3],["pb10",6]]]],[11,"into_ei","","",310,[[["port",3]],[["extint11",3],["pa11",6]]]],[11,"into_ei","","",311,[[["port",3]],[["extint11",3],["pa27",6]]]],[11,"into_ei","","",312,[[["port",3]],[["extint11",3],["pb11",6]]]],[11,"into_ei","","",313,[[["port",3]],[["pa12",6],["extint12",3]]]],[11,"into_ei","","",314,[[["port",3]],[["extint13",3],["pa13",6]]]],[11,"into_ei","","",315,[[["port",3]],[["pa14",6],["extint14",3]]]],[11,"into_ei","","",316,[[["port",3]],[["pa30",6],["extint14",3]]]],[11,"into_ei","","",317,[[["port",3]],[["pa15",6],["extint15",3]]]],[11,"into_ei","","",318,[[["port",3]],[["extint15",3],["pa31",6]]]],[11,"dipo_dopo","atsamd_hal::common::sercom::v1","",175,[[]]],[11,"dipo_dopo","","",175,[[]]],[11,"dipo_dopo","","",175,[[]]],[11,"dipo_dopo","","",175,[[]]],[11,"dipo_dopo","","",176,[[]]],[11,"dipo_dopo","","",176,[[]]],[11,"dipo_dopo","","",176,[[]]],[11,"dipo_dopo","","",176,[[]]],[11,"dipo_dopo","","",177,[[]]],[11,"dipo_dopo","","",177,[[]]],[11,"dipo_dopo","","",177,[[]]],[11,"dipo_dopo","","",177,[[]]],[11,"dipo_dopo","","",178,[[]]],[11,"dipo_dopo","","",178,[[]]],[11,"dipo_dopo","","",178,[[]]],[11,"dipo_dopo","","",178,[[]]],[11,"dipo_dopo","","",179,[[]]],[11,"dipo_dopo","","",179,[[]]],[11,"dipo_dopo","","",179,[[]]],[11,"dipo_dopo","","",179,[[]]],[11,"dipo_dopo","","",180,[[]]],[11,"dipo_dopo","","",180,[[]]],[11,"dipo_dopo","","",180,[[]]],[11,"dipo_dopo","","",180,[[]]],[11,"rxpo_txpo","","",181,[[]]],[11,"rxpo_txpo","","",181,[[]]],[11,"rxpo_txpo","","",181,[[]]],[11,"rxpo_txpo","","",181,[[]]],[11,"rxpo_txpo","","",182,[[]]],[11,"rxpo_txpo","","",182,[[]]],[11,"rxpo_txpo","","",182,[[]]],[11,"rxpo_txpo","","",182,[[]]],[11,"rxpo_txpo","","",183,[[]]],[11,"rxpo_txpo","","",183,[[]]],[11,"rxpo_txpo","","",183,[[]]],[11,"rxpo_txpo","","",183,[[]]],[11,"rxpo_txpo","","",184,[[]]],[11,"rxpo_txpo","","",184,[[]]],[11,"rxpo_txpo","","",184,[[]]],[11,"rxpo_txpo","","",184,[[]]],[11,"rxpo_txpo","","",185,[[]]],[11,"rxpo_txpo","","",185,[[]]],[11,"rxpo_txpo","","",185,[[]]],[11,"rxpo_txpo","","",185,[[]]],[11,"rxpo_txpo","","",186,[[]]],[11,"rxpo_txpo","","",186,[[]]],[11,"rxpo_txpo","","",186,[[]]],[11,"rxpo_txpo","","",186,[[]]],[11,"on_start","atsamd_hal::common::adc","",273,[[["adc",3]]]],[11,"on_complete","","",273,[[["adc",3]]]],[11,"on_stop","","",273,[[["adc",3]]]],[11,"on_start","","",274,[[["adc",3]]]],[11,"on_complete","","",274,[[["adc",3]]]],[11,"on_stop","","",274,[[["adc",3]]]],[11,"on_start","","",273,[[["adc",3]]]],[11,"on_complete","","",273,[[["adc",3]]]],[11,"on_stop","","",273,[[["adc",3]]]],[11,"on_start","","",274,[[["adc",3]]]],[11,"on_complete","","",274,[[["adc",3]]]],[11,"on_stop","","",274,[[["adc",3]]]],[11,"from","atsamd_hal::common::gpio::v1","",5,[[["pin",3]],["pin",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","",14,[[["pin",3]],["pin",3]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullDownDisabled`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`FloatingDisabled`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullUpDisabled`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`FloatingDisabled`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`FloatingInput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`FloatingDisabled`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullDownInput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`FloatingDisabled`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PullUpInput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`FloatingDisabled`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`FloatingDisabled`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`FloatingDisabled`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateA`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateB`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`FloatingDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateC`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateD`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`FloatingDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateE`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`FloatingDisabled`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateF`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateG`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`FloatingDisabled`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateH`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateH`] to [`FloatingDisabled`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateI`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateI`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateJ`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateK`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateK`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateL`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateL`] to [`FloatingDisabled`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateM`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateM`] to [`FloatingDisabled`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`FloatingDisabled`] to [`AlternateN`]",14,[[["pin",3],["floatingdisabled",6]]]],[11,"from","","Convert from [`AlternateN`] to [`FloatingDisabled`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullUpDisabled`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullDownDisabled`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`FloatingInput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullDownDisabled`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullDownInput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullDownDisabled`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PullUpInput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullDownDisabled`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullDownDisabled`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullDownDisabled`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateA`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateB`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullDownDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateC`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateD`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullDownDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateE`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullDownDisabled`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateF`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateG`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullDownDisabled`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateH`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PullDownDisabled`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateI`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateI`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateJ`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateK`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateK`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateL`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateL`] to [`PullDownDisabled`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateM`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateM`] to [`PullDownDisabled`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`PullDownDisabled`] to [`AlternateN`]",14,[[["pin",3],["pulldowndisabled",6]]]],[11,"from","","Convert from [`AlternateN`] to [`PullDownDisabled`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`FloatingInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullUpDisabled`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullDownInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullUpDisabled`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PullUpInput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullUpDisabled`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`PushPullOutput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullUpDisabled`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`ReadableOutput`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullUpDisabled`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateA`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateB`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullUpDisabled`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateC`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateD`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullUpDisabled`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateE`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullUpDisabled`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateF`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateG`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullUpDisabled`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateH`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PullUpDisabled`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateI`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateI`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateJ`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateK`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateK`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateL`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateL`] to [`PullUpDisabled`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateM`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateM`] to [`PullUpDisabled`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`PullUpDisabled`] to [`AlternateN`]",14,[[["pin",3],["pullupdisabled",6]]]],[11,"from","","Convert from [`AlternateN`] to [`PullUpDisabled`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullDownInput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`FloatingInput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PullUpInput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`FloatingInput`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`PushPullOutput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`FloatingInput`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`ReadableOutput`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`FloatingInput`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateA`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`FloatingInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateB`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`FloatingInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateC`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`FloatingInput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateD`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`FloatingInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateE`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`FloatingInput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateF`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`FloatingInput`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateG`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`FloatingInput`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateH`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`FloatingInput`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateI`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`FloatingInput`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateJ`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`FloatingInput`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateK`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`FloatingInput`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateL`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`FloatingInput`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateM`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateM`] to [`FloatingInput`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`FloatingInput`] to [`AlternateN`]",14,[[["floatinginput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`FloatingInput`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PullUpInput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PullDownInput`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`PushPullOutput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullDownInput`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`ReadableOutput`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullDownInput`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateA`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullDownInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateB`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullDownInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateC`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullDownInput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateD`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullDownInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateE`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullDownInput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateF`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullDownInput`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateG`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullDownInput`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateH`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PullDownInput`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateI`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateI`] to [`PullDownInput`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateJ`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`PullDownInput`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateK`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateK`] to [`PullDownInput`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateL`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateL`] to [`PullDownInput`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateM`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateM`] to [`PullDownInput`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`PullDownInput`] to [`AlternateN`]",14,[[["pin",3],["pulldowninput",6]]]],[11,"from","","Convert from [`AlternateN`] to [`PullDownInput`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`PushPullOutput`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`PullUpInput`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`ReadableOutput`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PullUpInput`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateA`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateA`] to [`PullUpInput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateB`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateB`] to [`PullUpInput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateC`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateC`] to [`PullUpInput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateD`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateD`] to [`PullUpInput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateE`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateE`] to [`PullUpInput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateF`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateF`] to [`PullUpInput`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateG`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateG`] to [`PullUpInput`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateH`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateH`] to [`PullUpInput`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateI`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateI`] to [`PullUpInput`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateJ`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`PullUpInput`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateK`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateK`] to [`PullUpInput`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateL`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateL`] to [`PullUpInput`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateM`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateM`] to [`PullUpInput`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`PullUpInput`] to [`AlternateN`]",14,[[["pin",3],["pullupinput",6]]]],[11,"from","","Convert from [`AlternateN`] to [`PullUpInput`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`ReadableOutput`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`PushPullOutput`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateA`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`PushPullOutput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateB`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`PushPullOutput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateC`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`PushPullOutput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateD`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`PushPullOutput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateE`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`PushPullOutput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateF`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`PushPullOutput`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateG`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`PushPullOutput`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateH`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`PushPullOutput`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateI`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`PushPullOutput`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateJ`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`PushPullOutput`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateK`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`PushPullOutput`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateL`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`PushPullOutput`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateM`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateM`] to [`PushPullOutput`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`PushPullOutput`] to [`AlternateN`]",14,[[["pushpulloutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`PushPullOutput`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateA`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`ReadableOutput`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateB`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`ReadableOutput`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateC`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`ReadableOutput`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateD`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`ReadableOutput`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateE`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`ReadableOutput`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateF`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`ReadableOutput`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateG`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`ReadableOutput`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateH`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`ReadableOutput`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateI`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`ReadableOutput`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateJ`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`ReadableOutput`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateK`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`ReadableOutput`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateL`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`ReadableOutput`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateM`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateM`] to [`ReadableOutput`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`ReadableOutput`] to [`AlternateN`]",14,[[["readableoutput",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`ReadableOutput`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateB`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateA`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateC`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateA`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateD`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateA`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateE`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateA`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateF`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateA`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateG`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateA`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateH`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateA`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateI`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateA`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateJ`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateA`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateK`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateA`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateL`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateA`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateM`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateA`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateA`] to [`AlternateN`]",14,[[["pin",3],["alternatea",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateA`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateC`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateB`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateD`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateB`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateE`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateB`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateF`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateB`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateG`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateB`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateH`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateB`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateI`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateB`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateJ`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateB`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateK`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateB`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateL`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateB`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateM`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateB`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateB`] to [`AlternateN`]",14,[[["pin",3],["alternateb",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateB`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateD`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateC`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateE`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateC`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateF`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateC`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateG`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateC`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateH`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateC`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateI`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateC`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateJ`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateC`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateK`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateC`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateL`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateC`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateM`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateC`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateC`] to [`AlternateN`]",14,[[["pin",3],["alternatec",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateC`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateE`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateD`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateF`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateD`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateG`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateD`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateH`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateD`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateI`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateD`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateJ`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateD`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateK`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateD`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateL`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateD`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateM`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateD`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateD`] to [`AlternateN`]",14,[[["pin",3],["alternated",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateD`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateF`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateE`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateG`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateE`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateH`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateE`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateI`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateE`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateJ`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateE`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateK`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateE`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateL`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateE`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateM`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateE`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateE`] to [`AlternateN`]",14,[[["alternatee",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateE`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateG`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateF`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateH`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateF`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateI`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateF`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateJ`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateF`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateK`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateF`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateL`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateF`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateM`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateF`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateF`] to [`AlternateN`]",14,[[["pin",3],["alternatef",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateF`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateH`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateG`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateI`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateG`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateJ`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateG`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateK`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateG`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateL`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateG`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateM`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateG`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateG`] to [`AlternateN`]",14,[[["alternateg",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateG`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateI`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateH`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateJ`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateH`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateK`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateH`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateL`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateH`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateM`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateH`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateH`] to [`AlternateN`]",14,[[["alternateh",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateH`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateJ`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateI`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateK`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateI`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateL`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateI`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateM`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateI`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateI`] to [`AlternateN`]",14,[[["pin",3],["alternatei",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateI`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateK`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateJ`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateL`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateJ`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateM`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateJ`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateJ`] to [`AlternateN`]",14,[[["pin",3],["alternatej",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateJ`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateL`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateK`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateM`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateK`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateK`] to [`AlternateN`]",14,[[["pin",3],["alternatek",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateK`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateM`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateL`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateL`] to [`AlternateN`]",14,[[["pin",3],["alternatel",6]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateL`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","","Convert from [`AlternateM`] to [`AlternateN`]",14,[[["alternatem",6],["pin",3]]]],[11,"from","","Convert from [`AlternateN`] to [`AlternateM`]",14,[[["pin",3],["alternaten",6]]]],[11,"from","atsamd_hal::common::gpio::v2::dynpin","Erase the type-level information in a [Pin] and return a…",23,[[["pin",3]]]],[11,"from","atsamd_hal::common::rtc","",52,[[["r",6]],["datetime",3]]],[11,"from","atsamd_hal::common::sercom::v2::pads","",64,[[["pad",3]],[["pad",3],["pin",3]]]],[11,"from","","",64,[[["pad",3],["pin",3]],["pad",3]]],[11,"from","atsamd_hal::common::gpio::v2::pin","Convert from a [`Pad`] to its corresponding [`Pin`].",14,[[["pad",3]]]],[11,"from","atsamd_hal::common::sercom::v2::pads","Convert from a [`Pin`] to its corresponding [`Pad`].",64,[[["pin",3]]]],[11,"from","atsamd_hal::common::eic","",247,[[["configurableeic",3]]]],[11,"from","atsamd_hal::common::sercom::v1","",175,[[],[["sercom0pad1",6],["sercom0pad0",6],["spimaster0padout",3],["sercom0pad3",6]]]],[11,"from","","",175,[[],[["sercom0pad1",6],["spimaster0padout",3],["sercom0pad2",6],["sercom0pad0",6]]]],[11,"from","","",175,[[],[["sercom0pad1",6],["spimaster0padout",3],["sercom0pad2",6],["sercom0pad3",6]]]],[11,"from","","",175,[[],[["sercom0pad1",6],["sercom0pad0",6],["spimaster0padout",3],["sercom0pad3",6]]]],[11,"from","","",176,[[],[["sercom1pad1",6],["sercom1pad0",6],["spimaster1padout",3],["sercom1pad3",6]]]],[11,"from","","",176,[[],[["sercom1pad2",6],["sercom1pad1",6],["sercom1pad0",6],["spimaster1padout",3]]]],[11,"from","","",176,[[],[["spimaster1padout",3],["sercom1pad2",6],["sercom1pad1",6],["sercom1pad3",6]]]],[11,"from","","",176,[[],[["sercom1pad1",6],["spimaster1padout",3],["sercom1pad3",6],["sercom1pad0",6]]]],[11,"from","","",177,[[],[["sercom2pad1",6],["sercom2pad0",6],["spimaster2padout",3],["sercom2pad3",6]]]],[11,"from","","",177,[[],[["sercom2pad0",6],["sercom2pad2",6],["sercom2pad1",6],["spimaster2padout",3]]]],[11,"from","","",177,[[],[["spimaster2padout",3],["sercom2pad2",6],["sercom2pad1",6],["sercom2pad3",6]]]],[11,"from","","",177,[[],[["sercom2pad0",6],["sercom2pad3",6],["sercom2pad1",6],["spimaster2padout",3]]]],[11,"from","","",178,[[],[["sercom3pad0",6],["spimaster3padout",3],["sercom3pad3",6],["sercom3pad1",6]]]],[11,"from","","",178,[[],[["sercom3pad2",6],["spimaster3padout",3],["sercom3pad1",6],["sercom3pad0",6]]]],[11,"from","","",178,[[],[["spimaster3padout",3],["sercom3pad2",6],["sercom3pad3",6],["sercom3pad1",6]]]],[11,"from","","",178,[[],[["sercom3pad3",6],["sercom3pad1",6],["spimaster3padout",3],["sercom3pad0",6]]]],[11,"from","","",179,[[],[["sercom4pad1",6],["spimaster4padout",3],["sercom4pad0",6],["sercom4pad3",6]]]],[11,"from","","",179,[[],[["sercom4pad1",6],["spimaster4padout",3],["sercom4pad2",6],["sercom4pad0",6]]]],[11,"from","","",179,[[],[["sercom4pad1",6],["spimaster4padout",3],["sercom4pad2",6],["sercom4pad3",6]]]],[11,"from","","",179,[[],[["sercom4pad3",6],["sercom4pad1",6],["spimaster4padout",3],["sercom4pad0",6]]]],[11,"from","","",180,[[],[["sercom5pad1",6],["sercom5pad3",6],["spimaster5padout",3],["sercom5pad0",6]]]],[11,"from","","",180,[[],[["spimaster5padout",3],["sercom5pad1",6],["sercom5pad0",6],["sercom5pad2",6]]]],[11,"from","","",180,[[],[["sercom5pad1",6],["sercom5pad3",6],["spimaster5padout",3],["sercom5pad2",6]]]],[11,"from","","",180,[[],[["sercom5pad1",6],["sercom5pad0",6],["sercom5pad3",6],["spimaster5padout",3]]]],[11,"from","","",181,[[],[["sercom0pad0",6],["sercom0pad1",6],["uart0padout",3]]]],[11,"from","","",181,[[],[["sercom0pad3",6],["sercom0pad1",6],["uart0padout",3],["sercom0pad0",6],["sercom0pad2",6]]]],[11,"from","","",181,[[],[["uart0padout",3],["sercom0pad2",6],["sercom0pad0",6]]]],[11,"from","","",181,[[],[["sercom0pad0",6],["uart0padout",3],["sercom0pad3",6]]]],[11,"from","","",182,[[],[["uart1padout",3],["sercom1pad1",6],["sercom1pad0",6]]]],[11,"from","","",182,[[],[["sercom1pad2",6],["uart1padout",3],["sercom1pad1",6],["sercom1pad0",6],["sercom1pad3",6]]]],[11,"from","","",182,[[],[["sercom1pad2",6],["uart1padout",3],["sercom1pad0",6]]]],[11,"from","","",182,[[],[["sercom1pad3",6],["uart1padout",3],["sercom1pad0",6]]]],[11,"from","","",183,[[],[["sercom2pad0",6],["sercom2pad1",6],["uart2padout",3]]]],[11,"from","","",183,[[],[["sercom2pad0",6],["sercom2pad1",6],["sercom2pad2",6],["uart2padout",3],["sercom2pad3",6]]]],[11,"from","","",183,[[],[["sercom2pad0",6],["uart2padout",3],["sercom2pad2",6]]]],[11,"from","","",183,[[],[["sercom2pad3",6],["sercom2pad0",6],["uart2padout",3]]]],[11,"from","","",184,[[],[["sercom3pad0",6],["uart3padout",3],["sercom3pad1",6]]]],[11,"from","","",184,[[],[["uart3padout",3],["sercom3pad3",6],["sercom3pad2",6],["sercom3pad1",6],["sercom3pad0",6]]]],[11,"from","","",184,[[],[["sercom3pad0",6],["sercom3pad2",6],["uart3padout",3]]]],[11,"from","","",184,[[],[["sercom3pad0",6],["sercom3pad3",6],["uart3padout",3]]]],[11,"from","","",185,[[],[["sercom4pad0",6],["sercom4pad1",6],["uart4padout",3]]]],[11,"from","","",185,[[],[["sercom4pad2",6],["sercom4pad1",6],["uart4padout",3],["sercom4pad3",6],["sercom4pad0",6]]]],[11,"from","","",185,[[],[["uart4padout",3],["sercom4pad2",6],["sercom4pad0",6]]]],[11,"from","","",185,[[],[["uart4padout",3],["sercom4pad3",6],["sercom4pad0",6]]]],[11,"from","","",186,[[],[["uart5padout",3],["sercom5pad1",6],["sercom5pad0",6]]]],[11,"from","","",186,[[],[["sercom5pad1",6],["sercom5pad2",6],["sercom5pad0",6],["uart5padout",3],["sercom5pad3",6]]]],[11,"from","","",186,[[],[["uart5padout",3],["sercom5pad0",6],["sercom5pad2",6]]]],[11,"from","","",186,[[],[["sercom5pad3",6],["uart5padout",3],["sercom5pad0",6]]]],[11,"from","atsamd_hal::common","",0,[[],["resetcause",4]]],[11,"from","atsamd_hal::common::adc","",271,[[["adc",3],["adc0",3]]]],[11,"from","","",271,[[["adc",3],["adc1",3]]]],[11,"fmt","atsamd_hal::common::rtc","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::time","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::timer_params","",76,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::clock","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::qspi","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::sercom::v1","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common","",0,[[["formatter",3]],["result",6]]],[11,"fmt","atsamd_hal::common::watchdog","",110,[[["formatter",3]],["result",6]]],[11,"eq","atsamd_hal::common::gpio::v2::dynpin","",17,[[["dyndisabled",4]]]],[11,"eq","","",18,[[["dyninput",4]]]],[11,"eq","","",19,[[["dynoutput",4]]]],[11,"eq","","",20,[[["dynalternate",4]]]],[11,"eq","","",21,[[["dynpinmode",4]]]],[11,"ne","","",21,[[["dynpinmode",4]]]],[11,"eq","","",22,[[["dyngroup",4]]]],[11,"eq","","",15,[[["dynpinid",3]]]],[11,"ne","","",15,[[["dynpinid",3]]]],[11,"eq","atsamd_hal::common::time","",67,[[["bps",3]]]],[11,"ne","","",67,[[["bps",3]]]],[11,"eq","","",68,[[["hertz",3]]]],[11,"ne","","",68,[[["hertz",3]]]],[11,"eq","","",69,[[["kilohertz",3]]]],[11,"ne","","",69,[[["kilohertz",3]]]],[11,"eq","","",70,[[["megahertz",3]]]],[11,"ne","","",70,[[["megahertz",3]]]],[11,"eq","","",71,[[["seconds",3]]]],[11,"ne","","",71,[[["seconds",3]]]],[11,"eq","","",72,[[["milliseconds",3]]]],[11,"ne","","",72,[[["milliseconds",3]]]],[11,"eq","","",73,[[["microseconds",3]]]],[11,"ne","","",73,[[["microseconds",3]]]],[11,"eq","","",74,[[["nanoseconds",3]]]],[11,"ne","","",74,[[["nanoseconds",3]]]],[11,"eq","atsamd_hal::common::qspi","",98,[[["error",4]]]],[11,"eq","","",99,[[["command",4]]]],[11,"eq","atsamd_hal::common::watchdog","",110,[[["watchdogtimeout",4]]]],[11,"try_from","atsamd_hal::common::gpio::v2::pin","Try to recreate a type-level [Pin] from a value-level…",14,[[["dynpin",3]],[["result",4],["error",4]]]],[11,"write_str","atsamd_hal::common::sercom::v1","",90,[[],["result",6]]],[11,"write_str","","",91,[[],["result",6]]],[11,"write_str","","",92,[[],["result",6]]],[11,"write_str","","",93,[[],["result",6]]],[11,"write_str","","",94,[[],["result",6]]],[11,"write_str","","",95,[[],["result",6]]],[11,"into","atsamd_hal::common::time","",69,[[],["hertz",3]]],[11,"into","","",70,[[],["hertz",3]]],[11,"into","","",70,[[],["kilohertz",3]]],[11,"into","","",68,[[],["kilohertz",3]]],[11,"into","","",68,[[],["megahertz",3]]],[11,"into","","",69,[[],["megahertz",3]]],[11,"into","","",71,[[],["milliseconds",3]]],[11,"into","","",71,[[],["microseconds",3]]],[11,"into","","",71,[[],["nanoseconds",3]]],[11,"into","","",72,[[],["microseconds",3]]],[11,"into","","",73,[[],["nanoseconds",3]]],[11,"into","","",72,[[],["seconds",3]]],[11,"into","","",73,[[],["seconds",3]]],[11,"into","","",73,[[],["milliseconds",3]]],[11,"into","","",72,[[],["nanoseconds",3]]],[11,"into","","",74,[[],["hertz",3]]],[11,"into","","",73,[[],["hertz",3]]],[11,"into","","",74,[[],["kilohertz",3]]],[11,"into","","",74,[[],["megahertz",3]]],[11,"into","","",68,[[],["microseconds",3]]],[11,"into","","",68,[[],["nanoseconds",3]]],[11,"into","","",69,[[],["nanoseconds",3]]],[11,"into","","",70,[[],["nanoseconds",3]]],[11,"into","atsamd_hal::common::clock","",202,[[],["hertz",3]]],[11,"into","","",204,[[],["hertz",3]]],[11,"into","","",205,[[],["hertz",3]]],[11,"into","","",206,[[],["hertz",3]]],[11,"into","","",207,[[],["hertz",3]]],[11,"into","","",208,[[],["hertz",3]]],[11,"into","","",209,[[],["hertz",3]]],[11,"into","","",210,[[],["hertz",3]]],[11,"into","","",211,[[],["hertz",3]]],[11,"into","","",212,[[],["hertz",3]]],[11,"into","","",213,[[],["hertz",3]]],[11,"into","","",214,[[],["hertz",3]]],[11,"into","","",215,[[],["hertz",3]]],[11,"into","","",216,[[],["hertz",3]]],[11,"into","","",217,[[],["hertz",3]]],[11,"into","","",218,[[],["hertz",3]]],[11,"into","","",219,[[],["hertz",3]]],[11,"into","","",220,[[],["hertz",3]]],[11,"into","","",221,[[],["hertz",3]]],[11,"into","","",222,[[],["hertz",3]]],[11,"into","","",223,[[],["hertz",3]]],[11,"into","","",224,[[],["hertz",3]]],[11,"into","","",225,[[],["hertz",3]]],[11,"into","","",226,[[],["hertz",3]]],[11,"into","","",227,[[],["hertz",3]]],[11,"into","","",228,[[],["hertz",3]]],[11,"into","","",229,[[],["hertz",3]]],[11,"into","","",230,[[],["hertz",3]]],[11,"into","","",231,[[],["hertz",3]]],[11,"into","","",232,[[],["hertz",3]]],[11,"into","","",233,[[],["hertz",3]]],[11,"into","","",234,[[],["hertz",3]]],[11,"into","","",235,[[],["hertz",3]]],[11,"into","","",236,[[],["hertz",3]]],[11,"into","","",237,[[],["hertz",3]]],[11,"into","","",238,[[],["hertz",3]]],[11,"into","","",239,[[],["hertz",3]]],[11,"into","","",240,[[],["hertz",3]]],[11,"into","","",241,[[],["hertz",3]]],[11,"into","","",242,[[],["hertz",3]]],[11,"into","","",243,[[],["hertz",3]]],[11,"into","","",244,[[],["hertz",3]]],[11,"into","","",245,[[],["hertz",3]]],[11,"clone","atsamd_hal::common::gpio::v2::dynpin","",17,[[],["dyndisabled",4]]],[11,"clone","","",18,[[],["dyninput",4]]],[11,"clone","","",19,[[],["dynoutput",4]]],[11,"clone","","",20,[[],["dynalternate",4]]],[11,"clone","","",21,[[],["dynpinmode",4]]],[11,"clone","","",22,[[],["dyngroup",4]]],[11,"clone","","",15,[[],["dynpinid",3]]],[11,"clone","atsamd_hal::common::rtc","",52,[[],["datetime",3]]],[11,"clone","","",53,[[],["timerparams",3]]],[11,"clone","atsamd_hal::common::time","",67,[[],["bps",3]]],[11,"clone","","",68,[[],["hertz",3]]],[11,"clone","","",69,[[],["kilohertz",3]]],[11,"clone","","",70,[[],["megahertz",3]]],[11,"clone","","",71,[[],["seconds",3]]],[11,"clone","","",72,[[],["milliseconds",3]]],[11,"clone","","",73,[[],["microseconds",3]]],[11,"clone","","",74,[[],["nanoseconds",3]]],[11,"clone","atsamd_hal::common::timer_params","",76,[[],["timerparams",3]]],[11,"clone","atsamd_hal::common::qspi","",98,[[],["error",4]]],[11,"clone","","",99,[[],["command",4]]],[11,"clone","atsamd_hal::common::timer","",268,[[],["spintimer",3]]],[11,"clone","atsamd_hal::common","",0,[[],["resetcause",4]]],[11,"clone","atsamd_hal::common::pwm","",106,[[],["channel",4]]],[11,"clone","atsamd_hal::common::watchdog","",110,[[],["watchdogtimeout",4]]],[11,"channel","atsamd_hal","",287,[[]]],[11,"channel","","",290,[[]]],[11,"channel","","",304,[[]]],[11,"channel","","",307,[[]]],[11,"channel","","",293,[[]]],[11,"channel","","",295,[[]]],[11,"channel","","",297,[[]]],[11,"channel","","",300,[[]]],[11,"channel","","",319,[[]]],[11,"channel","","",305,[[]]],[11,"channel","","",308,[[]]],[11,"channel","","",310,[[]]],[11,"channel","","",289,[[]]],[11,"channel","","",292,[[]]],[11,"channel","","",304,[[]]],[11,"channel","","",307,[[]]],[11,"channel","","",319,[[]]],[11,"channel","","",305,[[]]],[11,"read","atsamd_hal::common::adc","",272,[[],["result",6]]],[11,"read","","",272,[[],["result",6]]],[11,"delay_ms","atsamd_hal::common::delay","",1,[[]]],[11,"delay_ms","","",1,[[]]],[11,"delay_ms","","",1,[[]]],[11,"delay_ms","atsamd_hal::common::sleeping_delay","",65,[[]]],[11,"delay_us","atsamd_hal::common::delay","",1,[[]]],[11,"delay_us","","",1,[[]]],[11,"delay_us","","",1,[[]]],[11,"delay_us","atsamd_hal::common::sleeping_delay","",65,[[]]],[11,"read","atsamd_hal::common::sercom::v1","",78,[[],["result",4]]],[11,"read","","",79,[[],["result",4]]],[11,"read","","",80,[[],["result",4]]],[11,"read","","",81,[[],["result",4]]],[11,"read","","",82,[[],["result",4]]],[11,"read","","",83,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",78,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",79,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",80,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",81,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",82,[[],["result",4]]],[11,"write","","Sends bytes to slave with address `addr`",83,[[],["result",4]]],[11,"write_read","","",78,[[],["result",4]]],[11,"write_read","","",79,[[],["result",4]]],[11,"write_read","","",80,[[],["result",4]]],[11,"write_read","","",81,[[],["result",4]]],[11,"write_read","","",82,[[],["result",4]]],[11,"write_read","","",83,[[],["result",4]]],[11,"read","atsamd_hal::common::trng","",269,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"set_low","","",5,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"set_low","","",14,[[],["result",4]]],[11,"set_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"set_low","","",23,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"is_set_low","","",5,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"is_set_low","","",14,[[],["result",4]]],[11,"is_set_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"toggle","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v1","",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","","",5,[[],["result",4]]],[11,"is_low","","",5,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v2::pin","",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","","",14,[[],["result",4]]],[11,"is_low","","",14,[[],["result",4]]],[11,"is_high","atsamd_hal::common::gpio::v2::dynpin","",23,[[],["result",4]]],[11,"is_low","","",23,[[],["result",4]]],[11,"read","atsamd_hal::common::sercom::v1","",90,[[],["result",6]]],[11,"read","","",91,[[],["result",6]]],[11,"read","","",92,[[],["result",6]]],[11,"read","","",93,[[],["result",6]]],[11,"read","","",94,[[],["result",6]]],[11,"read","","",95,[[],["result",6]]],[11,"write","","",90,[[],["result",6]]],[11,"flush","","",90,[[],["result",6]]],[11,"write","","",91,[[],["result",6]]],[11,"flush","","",91,[[],["result",6]]],[11,"write","","",92,[[],["result",6]]],[11,"flush","","",92,[[],["result",6]]],[11,"write","","",93,[[],["result",6]]],[11,"flush","","",93,[[],["result",6]]],[11,"write","","",94,[[],["result",6]]],[11,"flush","","",94,[[],["result",6]]],[11,"write","","",95,[[],["result",6]]],[11,"flush","","",95,[[],["result",6]]],[11,"read","","",84,[[],[["result",6],["error",4]]]],[11,"send","","",84,[[],[["result",6],["error",4]]]],[11,"read","","",85,[[],[["result",6],["error",4]]]],[11,"send","","",85,[[],[["result",6],["error",4]]]],[11,"read","","",86,[[],[["result",6],["error",4]]]],[11,"send","","",86,[[],[["result",6],["error",4]]]],[11,"read","","",87,[[],[["result",6],["error",4]]]],[11,"send","","",87,[[],[["result",6],["error",4]]]],[11,"read","","",88,[[],[["result",6],["error",4]]]],[11,"send","","",88,[[],[["result",6],["error",4]]]],[11,"read","","",89,[[],[["result",6],["error",4]]]],[11,"send","","",89,[[],[["result",6],["error",4]]]],[11,"start","atsamd_hal::common::rtc","",54,[[]]],[11,"wait","","",54,[[],[["result",6],["void",4]]]],[11,"start","atsamd_hal::common::timer","",267,[[]]],[11,"wait","","",267,[[],[["result",6],["void",4]]]],[11,"start","","",268,[[]]],[11,"wait","","",268,[[],[["void",4],["result",6]]]],[11,"feed","atsamd_hal::common::watchdog","Feeds an existing watchdog to ensure the processor isn\'t…",282,[[]]],[11,"disable","","",282,[[]]],[11,"start","","Enables a watchdog timer to reset the processor if…",282,[[]]],[11,"disable","atsamd_hal::common::pwm","",279,[[]]],[11,"enable","","",279,[[]]],[11,"get_period","","",279,[[]]],[11,"get_duty","","",279,[[]]],[11,"get_max_duty","","",279,[[]]],[11,"set_duty","","",279,[[]]],[11,"set_period","","",279,[[]]],[11,"disable","","",280,[[]]],[11,"enable","","",280,[[]]],[11,"get_period","","",280,[[]]],[11,"get_duty","","",280,[[]]],[11,"get_max_duty","","",280,[[]]],[11,"set_duty","","",280,[[]]],[11,"set_period","","",280,[[]]],[11,"disable","","",281,[[]]],[11,"enable","","",281,[[]]],[11,"get_period","","",281,[[]]],[11,"get_duty","","",281,[[]]],[11,"get_max_duty","","",281,[[]]],[11,"set_duty","","",281,[[]]],[11,"set_period","","",281,[[]]],[11,"disable","","",275,[[]]],[11,"enable","","",275,[[]]],[11,"get_duty","","",275,[[]]],[11,"get_max_duty","","",275,[[]]],[11,"set_duty","","",275,[[]]],[11,"disable","","",276,[[]]],[11,"enable","","",276,[[]]],[11,"get_duty","","",276,[[]]],[11,"get_max_duty","","",276,[[]]],[11,"set_duty","","",276,[[]]],[11,"disable","","",277,[[]]],[11,"enable","","",277,[[]]],[11,"get_duty","","",277,[[]]],[11,"get_max_duty","","",277,[[]]],[11,"set_duty","","",277,[[]]],[11,"disable","","",278,[[]]],[11,"enable","","",278,[[]]],[11,"get_duty","","",278,[[]]],[11,"get_max_duty","","",278,[[]]],[11,"set_duty","","",278,[[]]],[11,"next_u32","atsamd_hal::common::trng","",269,[[]]],[11,"next_u64","","",269,[[]]],[11,"fill_bytes","","",269,[[]]],[11,"try_fill_bytes","","",269,[[],[["error",3],["result",4]]]],[11,"enable","atsamd_hal::common::usb","",270,[[]]],[11,"reset","","",270,[[]]],[11,"suspend","","",270,[[]]],[11,"resume","","",270,[[]]],[11,"alloc_ep","","",270,[[["endpointtype",4],["endpointaddress",3],["usbdirection",4],["option",4]],[["endpointaddress",3],["usbresult",6]]]],[11,"set_device_address","","",270,[[]]],[11,"poll","","",270,[[],["pollresult",4]]],[11,"write","","",270,[[["endpointaddress",3]],["usbresult",6]]],[11,"read","","",270,[[["endpointaddress",3]],["usbresult",6]]],[11,"set_stalled","","",270,[[["endpointaddress",3]]]],[11,"is_stalled","","",270,[[["endpointaddress",3]]]],[11,"with_internal_32kosc","atsamd_hal::common::clock","Reset the clock controller, configure the system to run at…",203,[[["gclk",3],["mclk",3],["osc32kctrl",3],["oscctrl",3],["nvmctrl",3]]]],[11,"with_external_32kosc","","Reset the clock controller, configure the system to run at…",203,[[["gclk",3],["mclk",3],["osc32kctrl",3],["oscctrl",3],["nvmctrl",3]]]],[11,"gclk0","","Returns a `GClock` for gclk0, the 120MHz oscillator.",203,[[],["gclock",3]]],[11,"gclk1","","Returns a `GClock` for gclk1, the 32KHz oscillator.",203,[[],["gclock",3]]],[11,"get_gclk","","Returns the `GClock` for the specified clock generator. If…",203,[[["clockgenid",6]],[["gclock",3],["option",4]]]],[11,"configure_gclk_divider_and_source","","Configures a clock generator with the specified divider…",203,[[["clockgenid",6],["clocksource",6]],[["gclock",3],["option",4]]]],[11,"configure_standby","","Enables or disables the given GClk from operation in…",203,[[["clockgenid",6]]]],[11,"freq","","Returns the frequency of the configured clock",204,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",205,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",206,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",207,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",208,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",209,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",210,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",211,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",212,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",213,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",214,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",215,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",216,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",217,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",218,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",219,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",220,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",221,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",222,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",223,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",224,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",225,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",226,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",227,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",228,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",229,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",230,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",231,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",232,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",233,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",234,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",235,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",236,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",237,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",238,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",239,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",240,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",241,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",242,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",243,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",244,[[],["hertz",3]]],[11,"freq","","Returns the frequency of the configured clock",245,[[],["hertz",3]]],[11,"tc0_tc1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["tc0tc1clock",3],["option",4]]]],[11,"tcc0_tcc1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["tcc0tcc1clock",3],["option",4]]]],[11,"tc2_tc3","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["tc2tc3clock",3],["option",4]]]],[11,"tcc2_tcc3","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["tcc2tcc3clock",3]]]],[11,"tc4_tc5","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["tc4tc5clock",3]]]],[11,"tcc4","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["tcc4clock",3]]]],[11,"tc6_tc7","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["tc6tc7clock",3]]]],[11,"sercom0_core","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["sercom0coreclock",3],["option",4]]]],[11,"sercom1_core","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["sercom1coreclock",3]]]],[11,"sercom2_core","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["sercom2coreclock",3],["option",4]]]],[11,"sercom3_core","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["sercom3coreclock",3],["option",4]]]],[11,"sercom4_core","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["sercom4coreclock",3]]]],[11,"sercom5_core","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["sercom5coreclock",3]]]],[11,"usb","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["usbclock",3],["option",4]]]],[11,"adc0","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["adc0clock",3]]]],[11,"adc1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["adc1clock",3]]]],[11,"eic","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["eicclock",3],["option",4]]]],[11,"freq_m_msr","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["freqmmsrclock",3],["option",4]]]],[11,"freq_m_ref","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["freqmrefclock",3],["option",4]]]],[11,"evsys0","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys0clock",3],["option",4]]]],[11,"evsys1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["evsys1clock",3]]]],[11,"evsys2","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys2clock",3],["option",4]]]],[11,"evsys3","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys3clock",3],["option",4]]]],[11,"evsys4","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys4clock",3],["option",4]]]],[11,"evsys5","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys5clock",3],["option",4]]]],[11,"evsys6","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys6clock",3],["option",4]]]],[11,"evsys7","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys7clock",3],["option",4]]]],[11,"evsys8","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["evsys8clock",3]]]],[11,"evsys9","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["evsys9clock",3]]]],[11,"evsys10","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["evsys10clock",3]]]],[11,"evsys11","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["evsys11clock",3],["option",4]]]],[11,"can0","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["can0clock",3],["option",4]]]],[11,"can1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["can1clock",3],["option",4]]]],[11,"pdec","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["pdecclock",3],["option",4]]]],[11,"ac","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["acclock",3]]]],[11,"ccl","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["cclclock",3],["option",4]]]],[11,"dac","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["dacclock",3]]]],[11,"i2s0","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["i2s0clock",3],["option",4]]]],[11,"i2s1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["i2s1clock",3]]]],[11,"sdhc0","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["sdhc0clock",3]]]],[11,"sdhc1","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["sdhc1clock",3]]]],[11,"cm4_trace","","Configure the clock for peripheral(s) that match the name…",203,[[["gclock",3]],[["option",4],["cm4traceclock",3]]]],[11,"new","atsamd_hal::common::eic::pin","Construct pad from the appropriate pin in any mode. You…",248,[[]]],[11,"enable_event","","",248,[[["configurableeic",3]]]],[11,"enable_interrupt","","",248,[[["configurableeic",3]]]],[11,"disable_interrupt","","",248,[[["configurableeic",3]]]],[11,"is_interrupt","","",248,[[]]],[11,"state","","",248,[[]]],[11,"clear_interrupt","","",248,[[]]],[11,"sense","","",248,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",248,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",249,[[]]],[11,"enable_event","","",249,[[["configurableeic",3]]]],[11,"enable_interrupt","","",249,[[["configurableeic",3]]]],[11,"disable_interrupt","","",249,[[["configurableeic",3]]]],[11,"is_interrupt","","",249,[[]]],[11,"state","","",249,[[]]],[11,"clear_interrupt","","",249,[[]]],[11,"sense","","",249,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",249,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",250,[[]]],[11,"enable_event","","",250,[[["configurableeic",3]]]],[11,"enable_interrupt","","",250,[[["configurableeic",3]]]],[11,"disable_interrupt","","",250,[[["configurableeic",3]]]],[11,"is_interrupt","","",250,[[]]],[11,"state","","",250,[[]]],[11,"clear_interrupt","","",250,[[]]],[11,"sense","","",250,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",250,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",251,[[]]],[11,"enable_event","","",251,[[["configurableeic",3]]]],[11,"enable_interrupt","","",251,[[["configurableeic",3]]]],[11,"disable_interrupt","","",251,[[["configurableeic",3]]]],[11,"is_interrupt","","",251,[[]]],[11,"state","","",251,[[]]],[11,"clear_interrupt","","",251,[[]]],[11,"sense","","",251,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",251,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",252,[[]]],[11,"enable_event","","",252,[[["configurableeic",3]]]],[11,"enable_interrupt","","",252,[[["configurableeic",3]]]],[11,"disable_interrupt","","",252,[[["configurableeic",3]]]],[11,"is_interrupt","","",252,[[]]],[11,"state","","",252,[[]]],[11,"clear_interrupt","","",252,[[]]],[11,"sense","","",252,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",252,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",253,[[]]],[11,"enable_event","","",253,[[["configurableeic",3]]]],[11,"enable_interrupt","","",253,[[["configurableeic",3]]]],[11,"disable_interrupt","","",253,[[["configurableeic",3]]]],[11,"is_interrupt","","",253,[[]]],[11,"state","","",253,[[]]],[11,"clear_interrupt","","",253,[[]]],[11,"sense","","",253,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",253,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",254,[[]]],[11,"enable_event","","",254,[[["configurableeic",3]]]],[11,"enable_interrupt","","",254,[[["configurableeic",3]]]],[11,"disable_interrupt","","",254,[[["configurableeic",3]]]],[11,"is_interrupt","","",254,[[]]],[11,"state","","",254,[[]]],[11,"clear_interrupt","","",254,[[]]],[11,"sense","","",254,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",254,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",255,[[]]],[11,"enable_event","","",255,[[["configurableeic",3]]]],[11,"enable_interrupt","","",255,[[["configurableeic",3]]]],[11,"disable_interrupt","","",255,[[["configurableeic",3]]]],[11,"is_interrupt","","",255,[[]]],[11,"state","","",255,[[]]],[11,"clear_interrupt","","",255,[[]]],[11,"sense","","",255,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",255,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",256,[[]]],[11,"enable_event","","",256,[[["configurableeic",3]]]],[11,"enable_interrupt","","",256,[[["configurableeic",3]]]],[11,"disable_interrupt","","",256,[[["configurableeic",3]]]],[11,"is_interrupt","","",256,[[]]],[11,"state","","",256,[[]]],[11,"clear_interrupt","","",256,[[]]],[11,"sense","","",256,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",256,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",257,[[]]],[11,"enable_event","","",257,[[["configurableeic",3]]]],[11,"enable_interrupt","","",257,[[["configurableeic",3]]]],[11,"disable_interrupt","","",257,[[["configurableeic",3]]]],[11,"is_interrupt","","",257,[[]]],[11,"state","","",257,[[]]],[11,"clear_interrupt","","",257,[[]]],[11,"sense","","",257,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",257,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",258,[[]]],[11,"enable_event","","",258,[[["configurableeic",3]]]],[11,"enable_interrupt","","",258,[[["configurableeic",3]]]],[11,"disable_interrupt","","",258,[[["configurableeic",3]]]],[11,"is_interrupt","","",258,[[]]],[11,"state","","",258,[[]]],[11,"clear_interrupt","","",258,[[]]],[11,"sense","","",258,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",258,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",259,[[]]],[11,"enable_event","","",259,[[["configurableeic",3]]]],[11,"enable_interrupt","","",259,[[["configurableeic",3]]]],[11,"disable_interrupt","","",259,[[["configurableeic",3]]]],[11,"is_interrupt","","",259,[[]]],[11,"state","","",259,[[]]],[11,"clear_interrupt","","",259,[[]]],[11,"sense","","",259,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",259,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",260,[[]]],[11,"enable_event","","",260,[[["configurableeic",3]]]],[11,"enable_interrupt","","",260,[[["configurableeic",3]]]],[11,"disable_interrupt","","",260,[[["configurableeic",3]]]],[11,"is_interrupt","","",260,[[]]],[11,"state","","",260,[[]]],[11,"clear_interrupt","","",260,[[]]],[11,"sense","","",260,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",260,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",261,[[]]],[11,"enable_event","","",261,[[["configurableeic",3]]]],[11,"enable_interrupt","","",261,[[["configurableeic",3]]]],[11,"disable_interrupt","","",261,[[["configurableeic",3]]]],[11,"is_interrupt","","",261,[[]]],[11,"state","","",261,[[]]],[11,"clear_interrupt","","",261,[[]]],[11,"sense","","",261,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",261,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",262,[[]]],[11,"enable_event","","",262,[[["configurableeic",3]]]],[11,"enable_interrupt","","",262,[[["configurableeic",3]]]],[11,"disable_interrupt","","",262,[[["configurableeic",3]]]],[11,"is_interrupt","","",262,[[]]],[11,"state","","",262,[[]]],[11,"clear_interrupt","","",262,[[]]],[11,"sense","","",262,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",262,[[["configurableeic",3]]]],[11,"new","","Construct pad from the appropriate pin in any mode. You…",263,[[]]],[11,"enable_event","","",263,[[["configurableeic",3]]]],[11,"enable_interrupt","","",263,[[["configurableeic",3]]]],[11,"disable_interrupt","","",263,[[["configurableeic",3]]]],[11,"is_interrupt","","",263,[[]]],[11,"state","","",263,[[]]],[11,"clear_interrupt","","",263,[[]]],[11,"sense","","",263,[[["configurableeic",3],["sense",6]]]],[11,"filter","","",263,[[["configurableeic",3]]]],[11,"button_debounce_pins","atsamd_hal::common::eic","button_debounce_pins enables debouncing for the specified…",246,[[]]],[11,"finalize","","finalize enables the EIC.",246,[[],["eic",3]]],[11,"new","atsamd_hal::common::qspi","Enable the clocks for the qspi peripheral in single data…",266,[[["pa8",6],["mclk",3],["pa11",6],["qspi",3],["port",3],["pb10",6],["pa10",6],["pa9",6],["input",6],["pb11",6]],[["qspi",3],["oneshot",3]]]],[11,"run_command","","Run a generic command that neither takes nor receives data",266,[[["command",4]],[["result",4],["error",4]]]],[11,"read_command","","Run one of the read commands",266,[[["command",4]],[["result",4],["error",4]]]],[11,"write_command","","Run one of the write commands",266,[[["command",4]],[["result",4],["error",4]]]],[11,"erase_command","","Run one of the erase commands",266,[[["command",4]],[["result",4],["error",4]]]],[11,"read_memory","","Quad Fast Read a sequential block of memory to buf Note:…",266,[[]]],[11,"write_memory","","Page Program a sequential block of memory to addr.",266,[[]]],[11,"into_xip","","Latches the peripheral in a read/execute state, so it can…",266,[[],[["qspi",3],["xip",3]]]],[11,"into_oneshot","","Latches the peripheral in a read/execute state, so it can…",266,[[],[["qspi",3],["oneshot",3]]]],[11,"set_clk_divider","","Set the clock divider, relative to the main clock",266,[[]]],[11,"tc2_","atsamd_hal::common::timer","Configure this timer counter instance. The clock is…",267,[[["tc2tc3clock",3],["tc2",3],["mclk",3]]]],[11,"tc3_","","Configure this timer counter instance. The clock is…",267,[[["tc2tc3clock",3],["tc3",3],["mclk",3]]]],[11,"new","","",268,[[],["spintimer",3]]],[11,"new","atsamd_hal::common::trng","",269,[[["trng",3],["mclk",3]],["trng",3]]],[11,"random","","",269,[[]]],[11,"random_u8","","",269,[[]]],[11,"random_u16","","",269,[[]]],[11,"random_u32","","",269,[[]]],[11,"random_u64","","",269,[[]]],[11,"new","atsamd_hal::common::usb","",270,[[["dppad",6],["dmpad",6],["mclk",3],["usbclock",3],["usb",3]]]],[11,"adc0","atsamd_hal::common::adc","",272,[[["genericclockcontroller",3],["mclk",3],["gen_a",4],["adc0",3]]]],[11,"samples","","",272,[[["samplenum_a",4]]]],[11,"reference","","",272,[[["refsel_a",4]]]],[11,"service_interrupt_ready","","",271,[[],["option",4]]],[11,"start_conversion","","Starts a conversion sampling the specified pin.",271,[[]]],[11,"stop_conversion","","",271,[[]]],[11,"adc1","","",272,[[["mclk",3],["genericclockcontroller",3],["gen_a",4],["adc1",3]]]],[11,"samples","","",272,[[["samplenum_a",4]]]],[11,"reference","","",272,[[["refsel_a",4]]]],[11,"service_interrupt_ready","","",271,[[],["option",4]]],[11,"start_conversion","","Starts a conversion sampling the specified pin.",271,[[]]],[11,"stop_conversion","","",271,[[]]],[11,"new","atsamd_hal::common::pwm","",275,[[["tc0tc1clock",3],["tc0",3],["hertz",3],["tc0pinout",4],["mclk",3],["into",8]]]],[11,"get_period","","",275,[[],["hertz",3]]],[11,"set_period","","",275,[[]]],[11,"new","","",276,[[["tc0tc1clock",3],["hertz",3],["tc1pinout",4],["mclk",3],["tc1",3],["into",8]]]],[11,"get_period","","",276,[[],["hertz",3]]],[11,"set_period","","",276,[[]]],[11,"new","","",277,[[["tc2",3],["hertz",3],["tc2pinout",4],["tc2tc3clock",3],["mclk",3],["into",8]]]],[11,"get_period","","",277,[[],["hertz",3]]],[11,"set_period","","",277,[[]]],[11,"new","","",278,[[["tc3pinout",4],["tc3",3],["hertz",3],["mclk",3],["tc2tc3clock",3],["into",8]]]],[11,"get_period","","",278,[[],["hertz",3]]],[11,"set_period","","",278,[[]]],[11,"new","","",279,[[["hertz",3],["tcc0",3],["tcc0pinout",4],["mclk",3],["into",8],["tcc0tcc1clock",3]]]],[11,"new","","",280,[[["hertz",3],["tcc1pinout",4],["tcc1",3],["mclk",3],["into",8],["tcc0tcc1clock",3]]]],[11,"new","","",281,[[["tcc2pinout",4],["hertz",3],["tcc2tcc3clock",3],["tcc2",3],["mclk",3],["into",8]]]],[11,"new","atsamd_hal::common::watchdog","",282,[[["wdt",3]]]]],"p":[[4,"ResetCause"],[3,"Delay"],[3,"Parts"],[8,"GpioExt"],[8,"IntoFunction"],[3,"Pin"],[3,"Pins"],[8,"DisabledConfig"],[8,"InputConfig"],[8,"OutputConfig"],[8,"AlternateConfig"],[8,"PinMode"],[8,"PinId"],[8,"AnyPin"],[3,"Pin"],[3,"DynPinId"],[4,"Error"],[4,"DynDisabled"],[4,"DynInput"],[4,"DynOutput"],[4,"DynAlternate"],[4,"DynPinMode"],[4,"DynGroup"],[3,"DynPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_InputPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_OutputPin"],[8,"_atsamd_hal_embedded_hal_digital_v2_ToggleableOutputPin"],[8,"_embedded_hal_adc_OneShot"],[8,"_embedded_hal_blocking_delay_DelayMs"],[8,"_embedded_hal_blocking_delay_DelayUs"],[8,"_embedded_hal_blocking_i2c_Read"],[8,"_embedded_hal_blocking_i2c_Write"],[8,"_embedded_hal_blocking_i2c_WriteRead"],[8,"_embedded_hal_blocking_rng_Read"],[8,"_embedded_hal_blocking_serial_Write"],[8,"_embedded_hal_blocking_spi_Transfer"],[8,"_embedded_hal_blocking_spi_Write"],[8,"_embedded_hal_digital_InputPin"],[8,"_embedded_hal_digital_OutputPin"],[8,"_embedded_hal_digital_ToggleableOutputPin"],[8,"_embedded_hal_serial_Read"],[8,"_embedded_hal_serial_Write"],[8,"_embedded_hal_spi_FullDuplex"],[8,"_embedded_hal_timer_CountDown"],[8,"_embedded_hal_watchdog_Watchdog"],[8,"_embedded_hal_watchdog_WatchdogDisable"],[8,"_embedded_hal_watchdog_WatchdogEnable"],[8,"_embedded_hal_Capture"],[8,"_embedded_hal_Pwm"],[8,"_embedded_hal_PwmPin"],[8,"_embedded_hal_Qei"],[8,"EicPin"],[3,"Datetime"],[3,"TimerParams"],[3,"Rtc"],[4,"I2CError"],[4,"Error"],[8,"PadPin"],[8,"DipoDopo"],[8,"RxpoTxpo"],[3,"Pads"],[8,"Sercom"],[8,"Map"],[8,"AnyPad"],[3,"Pad"],[3,"SleepingDelay"],[8,"CommonSpi"],[3,"Bps"],[3,"Hertz"],[3,"KiloHertz"],[3,"MegaHertz"],[3,"Seconds"],[3,"Milliseconds"],[3,"Microseconds"],[3,"Nanoseconds"],[8,"U32Ext"],[3,"TimerParams"],[8,"InterruptDrivenTimer"],[3,"I2CMaster0"],[3,"I2CMaster1"],[3,"I2CMaster2"],[3,"I2CMaster3"],[3,"I2CMaster4"],[3,"I2CMaster5"],[3,"SPIMaster0"],[3,"SPIMaster1"],[3,"SPIMaster2"],[3,"SPIMaster3"],[3,"SPIMaster4"],[3,"SPIMaster5"],[3,"UART0"],[3,"UART1"],[3,"UART2"],[3,"UART3"],[3,"UART4"],[3,"UART5"],[4,"ClockId"],[8,"ExternalInterrupt"],[4,"Error"],[4,"Command"],[8,"Count16"],[8,"ConversionMode"],[4,"TC0Pinout"],[4,"TC1Pinout"],[4,"TC2Pinout"],[4,"TC3Pinout"],[4,"Channel"],[4,"TCC0Pinout"],[4,"TCC1Pinout"],[4,"TCC2Pinout"],[4,"WatchdogTimeout"],[3,"NoneT"],[3,"Port"],[3,"Disabled"],[3,"Input"],[3,"Output"],[3,"Alternate"],[4,"Floating"],[4,"PullDown"],[4,"PullUp"],[4,"PushPull"],[4,"Readable"],[4,"A"],[4,"B"],[4,"C"],[4,"D"],[4,"E"],[4,"F"],[4,"G"],[4,"H"],[4,"I"],[4,"J"],[4,"K"],[4,"L"],[4,"M"],[4,"N"],[4,"GroupA"],[4,"GroupB"],[4,"PA00"],[4,"PA01"],[4,"PA02"],[4,"PA03"],[4,"PA04"],[4,"PA05"],[4,"PA06"],[4,"PA07"],[4,"PA08"],[4,"PA09"],[4,"PA10"],[4,"PA11"],[4,"PA12"],[4,"PA13"],[4,"PA14"],[4,"PA15"],[4,"PA16"],[4,"PA17"],[4,"PA18"],[4,"PA19"],[4,"PA20"],[4,"PA21"],[4,"PA22"],[4,"PA23"],[4,"PA24"],[4,"PA25"],[4,"PA27"],[4,"PA30"],[4,"PA31"],[4,"PB02"],[4,"PB03"],[4,"PB08"],[4,"PB09"],[4,"PB10"],[4,"PB11"],[4,"PB22"],[4,"PB23"],[3,"SPIMaster0Padout"],[3,"SPIMaster1Padout"],[3,"SPIMaster2Padout"],[3,"SPIMaster3Padout"],[3,"SPIMaster4Padout"],[3,"SPIMaster5Padout"],[3,"UART0Padout"],[3,"UART1Padout"],[3,"UART2Padout"],[3,"UART3Padout"],[3,"UART4Padout"],[3,"UART5Padout"],[4,"Sercom0"],[4,"Sercom1"],[4,"Sercom2"],[4,"Sercom3"],[4,"Sercom4"],[4,"Sercom5"],[4,"Pad0"],[4,"Pad1"],[4,"Pad2"],[4,"Pad3"],[4,"IoSet1"],[4,"IoSet2"],[4,"IoSet3"],[4,"IoSet4"],[4,"IoSet6"],[3,"GClock"],[3,"GenericClockController"],[3,"Tc0Tc1Clock"],[3,"Tcc0Tcc1Clock"],[3,"Tc2Tc3Clock"],[3,"Tcc2Tcc3Clock"],[3,"Tc4Tc5Clock"],[3,"Tcc4Clock"],[3,"Tc6Tc7Clock"],[3,"Sercom0CoreClock"],[3,"Sercom1CoreClock"],[3,"Sercom2CoreClock"],[3,"Sercom3CoreClock"],[3,"Sercom4CoreClock"],[3,"Sercom5CoreClock"],[3,"UsbClock"],[3,"Adc0Clock"],[3,"Adc1Clock"],[3,"EicClock"],[3,"FreqmMsrClock"],[3,"FreqmRefClock"],[3,"Evsys0Clock"],[3,"Evsys1Clock"],[3,"Evsys2Clock"],[3,"Evsys3Clock"],[3,"Evsys4Clock"],[3,"Evsys5Clock"],[3,"Evsys6Clock"],[3,"Evsys7Clock"],[3,"Evsys8Clock"],[3,"Evsys9Clock"],[3,"Evsys10Clock"],[3,"Evsys11Clock"],[3,"Can0Clock"],[3,"Can1Clock"],[3,"PdecClock"],[3,"AcClock"],[3,"CclClock"],[3,"DacClock"],[3,"I2S0Clock"],[3,"I2S1Clock"],[3,"Sdhc0Clock"],[3,"Sdhc1Clock"],[3,"Cm4TraceClock"],[3,"ConfigurableEIC"],[3,"EIC"],[3,"ExtInt0"],[3,"ExtInt1"],[3,"ExtInt2"],[3,"ExtInt3"],[3,"ExtInt4"],[3,"ExtInt5"],[3,"ExtInt6"],[3,"ExtInt7"],[3,"ExtInt8"],[3,"ExtInt9"],[3,"ExtInt10"],[3,"ExtInt11"],[3,"ExtInt12"],[3,"ExtInt13"],[3,"ExtInt14"],[3,"ExtInt15"],[3,"OneShot"],[3,"XIP"],[3,"Qspi"],[3,"TimerCounter"],[3,"SpinTimer"],[3,"Trng"],[3,"UsbBus"],[3,"InterruptAdc"],[3,"Adc"],[3,"SingleConversion"],[3,"FreeRunning"],[3,"Pwm0"],[3,"Pwm1"],[3,"Pwm2"],[3,"Pwm3"],[3,"Tcc0Pwm"],[3,"Tcc1Pwm"],[3,"Tcc2Pwm"],[3,"Watchdog"],[6,"Pa0"],[6,"Pa16"],[6,"Pa1"],[6,"Pa17"],[6,"Pa2"],[6,"Pa18"],[6,"Pb2"],[6,"Pa3"],[6,"Pa19"],[6,"Pb3"],[6,"Pa4"],[6,"Pa20"],[6,"Pa5"],[6,"Pa21"],[6,"Pa6"],[6,"Pa22"],[6,"Pb22"],[6,"Pa7"],[6,"Pa23"],[6,"Pb23"],[6,"Pa24"],[6,"Pb8"],[6,"Pa9"],[6,"Pa25"],[6,"Pb9"],[6,"Pa10"],[6,"Pb10"],[6,"Pa11"],[6,"Pa27"],[6,"Pb11"],[6,"Pa12"],[6,"Pa13"],[6,"Pa14"],[6,"Pa30"],[6,"Pa15"],[6,"Pa31"],[6,"Pa8"]]},\
"bare_metal":{"doc":"Abstractions common to bare metal systems","i":[[3,"Peripheral","bare_metal","A peripheral",null,null],[3,"CriticalSection","","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[]]],[11,"new","","Creates a new peripheral",1,[[]]],[11,"borrow","","Borrows the peripheral for the duration of a critical…",1,[[["criticalsection",3]]]],[11,"get","","Returns a pointer to the register block",1,[[]]],[11,"new","","Creates a critical section token",2,[[]]],[11,"new","","Creates a new mutex",3,[[]]],[11,"borrow","","Borrows the data for the duration of the critical section",3,[[["criticalsection",3]]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[8,"Nr"],[3,"Peripheral"],[3,"CriticalSection"],[3,"Mutex"]]},\
"bitfield":{"doc":"This crate provides macros to generate bitfield-like struct.","i":[[8,"BitRange","bitfield","A trait to get or set ranges of bits.",null,null],[10,"bit_range","","Get a range of bits.",0,[[]]],[10,"set_bit_range","","Set a range of bits.",0,[[]]],[8,"Bit","","A trait to get or set a single bit.",null,null],[10,"bit","","Get a single bit.",1,[[]]],[10,"set_bit","","Set a single bit.",1,[[]]],[14,"bitfield_fields","","Declares the fields of struct.",null,null],[14,"bitfield_debug","","Generates a `fmt::Debug` implementation.",null,null],[14,"bitfield_bitrange","","Implements `BitRange` for a tuple struct (or \\\"newtype\\\").",null,null],[14,"bitfield","","Combines `bitfield_bitrange` and `bitfield_fields`.",null,null]],"p":[[8,"BitRange"],[8,"Bit"]]},\
"cortex_m":{"doc":"Low level access to Cortex-M processors","i":[[0,"asm","cortex_m","Miscellaneous assembly instructions",null,null],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick this…",null,[[]]],[5,"delay","","Blocks the program for at least `n` instruction cycles",null,[[]]],[5,"nop","","A no-operation. Useful to prevent delay loops from being…",null,[[]]],[5,"udf","","Generate an Undefined Instruction exception.",null,[[]]],[5,"wfe","","Wait For Event",null,[[]]],[5,"wfi","","Wait For Interrupt",null,[[]]],[5,"sev","","Send Event",null,[[]]],[5,"isb","","Instruction Synchronization Barrier",null,[[]]],[5,"dsb","","Data Synchronization Barrier",null,[[]]],[5,"dmb","","Data Memory Barrier",null,[[]]],[0,"interrupt","cortex_m","Interrupts",null,null],[3,"CriticalSection","cortex_m::interrupt","Critical section token",null,null],[3,"Mutex","","A \\\"mutex\\\" based on critical sections",null,null],[8,"Nr","","Interrupt number",null,null],[10,"nr","","Returns the number associated with an interrupt",0,[[]]],[5,"disable","","Disables all interrupts",null,[[]]],[5,"enable","","Enables all the interrupts",null,[[]]],[5,"free","","Execute closure `f` in an interrupt-free context.",null,[[]]],[0,"itm","cortex_m","Instrumentation Trace Macrocell",null,null],[5,"write_all","cortex_m::itm","Writes a `buffer` to the ITM `port`",null,[[["stim",3]]]],[5,"write_aligned","","Writes a 4-byte aligned `buffer` to the ITM `port`",null,[[["stim",3],["aligned",3]]]],[5,"write_fmt","","Writes `fmt::Arguments` to the ITM `port`",null,[[["stim",3],["arguments",3]]]],[5,"write_str","","Writes a string to the ITM `port`",null,[[["stim",3]]]],[0,"peripheral","cortex_m","Core peripherals",null,null],[3,"Peripherals","cortex_m::peripheral","Core peripherals",null,null],[12,"CBP","","Cache and branch predictor maintenance operations (not…",1,null],[12,"CPUID","","CPUID",1,null],[12,"DCB","","Debug Control Block",1,null],[12,"DWT","","Data Watchpoint and Trace unit",1,null],[12,"FPB","","Flash Patch and Breakpoint unit (not present on Cortex-M0…",1,null],[12,"FPU","","Floating Point Unit (only present on…",1,null],[12,"ITM","","Instrumentation Trace Macrocell (not present on Cortex-M0…",1,null],[12,"MPU","","Memory Protection Unit",1,null],[12,"NVIC","","Nested Vector Interrupt Controller",1,null],[12,"SCB","","System Control Block",1,null],[12,"SYST","","SysTick: System Timer",1,null],[12,"TPIU","","Trace Port Interface Unit (not present on Cortex-M0…",1,null],[3,"CBP","","Cache and branch predictor maintenance operations",null,null],[3,"CPUID","","CPUID",null,null],[3,"DCB","","Debug Control Block",null,null],[3,"DWT","","Data Watchpoint and Trace unit",null,null],[3,"FPB","","Flash Patch and Breakpoint unit",null,null],[3,"FPU","","Floating Point Unit",null,null],[3,"ITM","","Instrumentation Trace Macrocell",null,null],[3,"MPU","","Memory Protection Unit",null,null],[3,"NVIC","","Nested Vector Interrupt Controller",null,null],[3,"SCB","","System Control Block",null,null],[3,"SYST","","SysTick: System Timer",null,null],[3,"TPIU","","Trace Port Interface Unit",null,null],[0,"cbp","","Cache and branch predictor maintenance operations",null,null],[3,"RegisterBlock","cortex_m::peripheral::cbp","Register block",null,null],[12,"iciallu","","I-cache invalidate all to PoU",2,null],[12,"icimvau","","I-cache invalidate by MVA to PoU",2,null],[12,"dcimvac","","D-cache invalidate by MVA to PoC",2,null],[12,"dcisw","","D-cache invalidate by set-way",2,null],[12,"dccmvau","","D-cache clean by MVA to PoU",2,null],[12,"dccmvac","","D-cache clean by MVA to PoC",2,null],[12,"dccsw","","D-cache clean by set-way",2,null],[12,"dccimvac","","D-cache clean and invalidate by MVA to PoC",2,null],[12,"dccisw","","D-cache clean and invalidate by set-way",2,null],[12,"bpiall","","Branch predictor invalidate all",2,null],[11,"iciallu","cortex_m::peripheral","I-cache invalidate all to PoU",3,[[]]],[11,"icimvau","","I-cache invalidate by MVA to PoU",3,[[]]],[11,"dcimvac","","D-cache invalidate by MVA to PoC",3,[[]]],[11,"dcisw","","D-cache invalidate by set-way",3,[[]]],[11,"dccmvau","","D-cache clean by MVA to PoU",3,[[]]],[11,"dccmvac","","D-cache clean by MVA to PoC",3,[[]]],[11,"dccsw","","D-cache clean by set-way",3,[[]]],[11,"dccimvac","","D-cache clean and invalidate by MVA to PoC",3,[[]]],[11,"dccisw","","D-cache clean and invalidate by set-way",3,[[]]],[11,"bpiall","","Branch predictor invalidate all",3,[[]]],[0,"cpuid","","CPUID",null,null],[3,"RegisterBlock","cortex_m::peripheral::cpuid","Register block",null,null],[12,"base","","CPUID base",4,null],[12,"pfr","","Processor Feature (not present on Cortex-M0 variants)",4,null],[12,"dfr","","Debug Feature (not present on Cortex-M0 variants)",4,null],[12,"afr","","Auxiliary Feature (not present on Cortex-M0 variants)",4,null],[12,"mmfr","","Memory Model Feature (not present on Cortex-M0 variants)",4,null],[12,"isar","","Instruction Set Attribute (not present on Cortex-M0…",4,null],[12,"clidr","","Cache Level ID (only present on Cortex-M7)",4,null],[12,"ctr","","Cache Type (only present on Cortex-M7)",4,null],[12,"ccsidr","","Cache Size ID (only present on Cortex-M7)",4,null],[12,"csselr","","Cache Size Selection (only present on Cortex-M7)",4,null],[4,"CsselrCacheType","","Type of cache to select on CSSELR writes.",null,null],[13,"DataOrUnified","","Select DCache or unified cache",5,null],[13,"Instruction","","Select ICache",5,null],[11,"select_cache","cortex_m::peripheral","Selects the current CCSIDR",6,[[["csselrcachetype",4]]]],[11,"cache_num_sets_ways","","Returns the number of sets and ways in the selected cache",6,[[["csselrcachetype",4]]]],[0,"dcb","","Debug Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::dcb","Register block",null,null],[12,"dhcsr","","Debug Halting Control and Status",7,null],[12,"dcrsr","","Debug Core Register Selector",7,null],[12,"dcrdr","","Debug Core Register Data",7,null],[12,"demcr","","Debug Exception and Monitor Control",7,null],[11,"enable_trace","cortex_m::peripheral","Enables TRACE. This is for example required by the…",8,[[]]],[11,"disable_trace","","Disables TRACE. See `DCB::enable_trace()` for more details",8,[[]]],[11,"is_debugger_attached","","Is there a debugger attached? (see note)",8,[[]]],[0,"dwt","","Data Watchpoint and Trace unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::dwt","Register block",null,null],[12,"ctrl","","Control",9,null],[12,"cyccnt","","Cycle Count",9,null],[12,"cpicnt","","CPI Count",9,null],[12,"exccnt","","Exception Overhead Count",9,null],[12,"sleepcnt","","Sleep Count",9,null],[12,"lsucnt","","LSU Count",9,null],[12,"foldcnt","","Folded-instruction Count",9,null],[12,"pcsr","","Program Counter Sample",9,null],[12,"c","","Comparators",9,null],[12,"lar","","Lock Access",9,null],[12,"lsr","","Lock Status",9,null],[3,"Comparator","","Comparator",null,null],[12,"comp","","Comparator",10,null],[12,"mask","","Comparator Mask",10,null],[12,"function","","Comparator Function",10,null],[11,"enable_cycle_counter","cortex_m::peripheral","Enables the cycle counter",11,[[]]],[11,"get_cycle_count","","Returns the current clock cycle count",11,[[]]],[11,"unlock","","Removes the software lock on the DWT",11,[[]]],[0,"fpb","","Flash Patch and Breakpoint unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpb","Register block",null,null],[12,"ctrl","","Control",12,null],[12,"remap","","Remap",12,null],[12,"comp","","Comparator",12,null],[12,"lar","","Lock Access",12,null],[12,"lsr","","Lock Status",12,null],[0,"fpu","cortex_m::peripheral","Floating Point Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::fpu","Register block",null,null],[12,"fpccr","","Floating Point Context Control",13,null],[12,"fpcar","","Floating Point Context Address",13,null],[12,"fpdscr","","Floating Point Default Status Control",13,null],[12,"mvfr","","Media and FP Feature",13,null],[0,"itm","cortex_m::peripheral","Instrumentation Trace Macrocell",null,null],[3,"RegisterBlock","cortex_m::peripheral::itm","Register block",null,null],[12,"stim","","Stimulus Port",14,null],[12,"ter","","Trace Enable",14,null],[12,"tpr","","Trace Privilege",14,null],[12,"tcr","","Trace Control",14,null],[12,"lar","","Lock Access",14,null],[12,"lsr","","Lock Status",14,null],[3,"Stim","","Stimulus Port",null,null],[11,"write_u8","","Writes an `u8` payload into the stimulus port",15,[[]]],[11,"write_u16","","Writes an `u16` payload into the stimulus port",15,[[]]],[11,"write_u32","","Writes an `u32` payload into the stimulus port",15,[[]]],[11,"is_fifo_ready","","Returns `true` if the stimulus port is ready to accept…",15,[[]]],[0,"mpu","cortex_m::peripheral","Memory Protection Unit",null,null],[3,"RegisterBlock","cortex_m::peripheral::mpu","Register block",null,null],[12,"_type","","Type",16,null],[12,"ctrl","","Control",16,null],[12,"rnr","","Region Number",16,null],[12,"rbar","","Region Base Address",16,null],[12,"rasr","","Region Attribute and Size",16,null],[12,"rbar_a1","","Alias 1 of RBAR",16,null],[12,"rsar_a1","","Alias 1 of RSAR",16,null],[12,"rbar_a2","","Alias 2 of RBAR",16,null],[12,"rsar_a2","","Alias 2 of RSAR",16,null],[12,"rbar_a3","","Alias 3 of RBAR",16,null],[12,"rsar_a3","","Alias 3 of RSAR",16,null],[0,"nvic","cortex_m::peripheral","Nested Vector Interrupt Controller",null,null],[3,"RegisterBlock","cortex_m::peripheral::nvic","Register block",null,null],[12,"iser","","Interrupt Set-Enable",17,null],[12,"icer","","Interrupt Clear-Enable",17,null],[12,"ispr","","Interrupt Set-Pending",17,null],[12,"icpr","","Interrupt Clear-Pending",17,null],[12,"iabr","","Interrupt Active Bit (not present on Cortex-M0 variants)",17,null],[12,"ipr","","Interrupt Priority",17,null],[12,"stir","","Software Trigger Interrupt",17,null],[11,"request","cortex_m::peripheral","Request an IRQ in software",18,[[]]],[11,"clear_pending","","Clears `interrupt`\'s pending state",18,[[]]],[11,"mask","","Disables `interrupt`",18,[[]]],[11,"unmask","","Enables `interrupt`",18,[[]]],[11,"disable","","Disables `interrupt`",18,[[]]],[11,"enable","","WARNING This method is a soundness hole in the API; it…",18,[[]]],[11,"get_priority","","Returns the NVIC priority of `interrupt`",18,[[]]],[11,"is_active","","Is `interrupt` active or pre-empted and stacked",18,[[]]],[11,"is_enabled","","Checks if `interrupt` is enabled",18,[[]]],[11,"is_pending","","Checks if `interrupt` is pending",18,[[]]],[11,"pend","","Forces `interrupt` into pending state",18,[[]]],[11,"set_pending","","Forces `interrupt` into pending state",18,[[]]],[11,"set_priority","","Sets the \\\"priority\\\" of `interrupt` to `prio`",18,[[]]],[11,"unpend","","Clears `interrupt`\'s pending state",18,[[]]],[0,"scb","","System Control Block",null,null],[3,"RegisterBlock","cortex_m::peripheral::scb","Register block",null,null],[12,"icsr","","Interrupt Control and State",19,null],[12,"vtor","","Vector Table Offset (not present on Cortex-M0 variants)",19,null],[12,"aircr","","Application Interrupt and Reset Control",19,null],[12,"scr","","System Control",19,null],[12,"ccr","","Configuration and Control",19,null],[12,"shpr","","System Handler Priority (word accessible only on Cortex-M0…",19,null],[12,"shcsr","","System Handler Control and State",19,null],[12,"cfsr","","Configurable Fault Status (not present on Cortex-M0…",19,null],[12,"hfsr","","HardFault Status (not present on Cortex-M0 variants)",19,null],[12,"dfsr","","Debug Fault Status (not present on Cortex-M0 variants)",19,null],[12,"mmfar","","MemManage Fault Address (not present on Cortex-M0 variants)",19,null],[12,"bfar","","BusFault Address (not present on Cortex-M0 variants)",19,null],[12,"afsr","","Auxiliary Fault Status (not present on Cortex-M0 variants)",19,null],[12,"cpacr","","Coprocessor Access Control (not present on Cortex-M0…",19,null],[4,"FpuAccessMode","","FPU access mode",null,null],[13,"Disabled","","FPU is not accessible",20,null],[13,"Enabled","","FPU is accessible in Privileged and User mode",20,null],[13,"Privileged","","FPU is accessible in Privileged mode only",20,null],[4,"Exception","","Processor core exceptions (internal interrupts)",null,null],[13,"NonMaskableInt","","Non maskable interrupt",21,null],[13,"HardFault","","Hard fault interrupt",21,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0…",21,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",21,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",21,null],[13,"SVCall","","SV call interrupt",21,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 variants)",21,null],[13,"PendSV","","Pend SV interrupt",21,null],[13,"SysTick","","System Tick interrupt",21,null],[4,"VectActive","","Active exception number",null,null],[13,"ThreadMode","","Thread mode",22,null],[13,"Exception","","Processor core exception (internal interrupts)",22,null],[13,"Interrupt","","Device specific exception (external interrupts)",22,null],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open…",23,null],[4,"SystemHandler","cortex_m::peripheral::scb","System handlers, exceptions with configurable priority",null,null],[13,"MemoryManagement","","Memory management interrupt (not present on Cortex-M0…",24,null],[13,"BusFault","","Bus fault interrupt (not present on Cortex-M0 variants)",24,null],[13,"UsageFault","","Usage fault interrupt (not present on Cortex-M0 variants)",24,null],[13,"SVCall","","SV call interrupt",24,null],[13,"DebugMonitor","","Debug monitor interrupt (not present on Cortex-M0 variants)",24,null],[13,"PendSV","","Pend SV interrupt",24,null],[13,"SysTick","","System Tick interrupt",24,null],[11,"disable_fpu","cortex_m::peripheral","Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`",25,[[]]],[11,"enable_fpu","","Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`",25,[[]]],[11,"fpu_access_mode","","Gets FPU access mode",25,[[],["fpuaccessmode",4]]],[11,"set_fpu_access_mode","","Sets FPU access mode",25,[[["fpuaccessmode",4]]]],[11,"vect_active","","Returns the active exception number",25,[[],["vectactive",4]]],[11,"irqn","cortex_m::peripheral::scb","Returns the IRQ number of this `Exception`",21,[[]]],[11,"from","","Converts a `byte` into `VectActive`",22,[[],["option",4]]],[11,"enable_icache","cortex_m::peripheral","Enables I-Cache if currently disabled",25,[[]]],[11,"disable_icache","","Disables I-Cache if currently enabled",25,[[]]],[11,"icache_enabled","","Returns whether the I-Cache is currently enabled",25,[[]]],[11,"invalidate_icache","","Invalidates I-Cache",25,[[]]],[11,"enable_dcache","","Enables D-cache if currently disabled",25,[[["cpuid",3]]]],[11,"disable_dcache","","Disables D-cache if currently enabled",25,[[["cpuid",3]]]],[11,"dcache_enabled","","Returns whether the D-Cache is currently enabled",25,[[]]],[11,"clean_dcache","","Cleans D-cache",25,[[["cpuid",3]]]],[11,"clean_invalidate_dcache","","Cleans and invalidates D-cache",25,[[["cpuid",3]]]],[11,"invalidate_dcache_by_address","","Invalidates D-cache by address",25,[[]]],[11,"clean_dcache_by_address","","Cleans D-cache by address",25,[[]]],[11,"clean_invalidate_dcache_by_address","","Cleans and invalidates D-cache by address",25,[[]]],[11,"set_sleepdeep","","Set the SLEEPDEEP bit in the SCR register",25,[[]]],[11,"clear_sleepdeep","","Clear the SLEEPDEEP bit in the SCR register",25,[[]]],[11,"set_sleeponexit","","Set the SLEEPONEXIT bit in the SCR register",25,[[]]],[11,"clear_sleeponexit","","Clear the SLEEPONEXIT bit in the SCR register",25,[[]]],[11,"system_reset","","Initiate a system reset request to reset the MCU",25,[[]]],[11,"sys_reset","","Initiate a system reset request to reset the MCU",25,[[]]],[11,"set_pendsv","","Set the PENDSVSET bit in the ICSR register which will pend…",25,[[]]],[11,"is_pendsv_pending","","Check if PENDSVSET bit in the ICSR register is set meaning…",25,[[]]],[11,"clear_pendsv","","Set the PENDSVCLR bit in the ICSR register which will…",25,[[]]],[11,"set_pendst","","Set the PENDSTSET bit in the ICSR register which will pend…",25,[[]]],[11,"is_pendst_pending","","Check if PENDSTSET bit in the ICSR register is set meaning…",25,[[]]],[11,"clear_pendst","","Set the PENDSTCLR bit in the ICSR register which will…",25,[[]]],[11,"get_priority","","Returns the hardware priority of `system_handler`",25,[[["systemhandler",4]]]],[11,"set_priority","","Sets the hardware priority of `system_handler` to `prio`",25,[[["systemhandler",4]]]],[11,"enable","","Enable the exception",25,[[["exception",4]]]],[11,"disable","","Disable the exception",25,[[["exception",4]]]],[11,"is_enabled","","Check if an exception is enabled",25,[[["exception",4]]]],[0,"syst","","SysTick: System Timer",null,null],[3,"RegisterBlock","cortex_m::peripheral::syst","Register block",null,null],[12,"csr","","Control and Status",26,null],[12,"rvr","","Reload Value",26,null],[12,"cvr","","Current Value",26,null],[12,"calib","","Calibration Value",26,null],[4,"SystClkSource","","SysTick clock source",null,null],[13,"Core","","Core-provided clock",27,null],[13,"External","","External reference clock",27,null],[11,"clear_current","cortex_m::peripheral","Clears current value to 0",28,[[]]],[11,"disable_counter","","Disables counter",28,[[]]],[11,"disable_interrupt","","Disables SysTick interrupt",28,[[]]],[11,"enable_counter","","Enables counter",28,[[]]],[11,"enable_interrupt","","Enables SysTick interrupt",28,[[]]],[11,"get_clock_source","","Gets clock source",28,[[],["systclksource",4]]],[11,"get_current","","Gets current value",28,[[]]],[11,"get_reload","","Gets reload value",28,[[]]],[11,"get_ticks_per_10ms","","Returns the reload value with which the counter would wrap…",28,[[]]],[11,"has_reference_clock","","Checks if an external reference clock is available",28,[[]]],[11,"has_wrapped","","Checks if the counter wrapped (underflowed) since the last…",28,[[]]],[11,"is_counter_enabled","","Checks if counter is enabled",28,[[]]],[11,"is_interrupt_enabled","","Checks if SysTick interrupt is enabled",28,[[]]],[11,"is_precise","","Checks if the calibration value is precise",28,[[]]],[11,"set_clock_source","","Sets clock source",28,[[["systclksource",4]]]],[11,"set_reload","","Sets reload value",28,[[]]],[0,"tpiu","","Trace Port Interface Unit;",null,null],[3,"RegisterBlock","cortex_m::peripheral::tpiu","Register block",null,null],[12,"sspsr","","Supported Parallel Port Sizes",29,null],[12,"cspsr","","Current Parallel Port Size",29,null],[12,"acpr","","Asynchronous Clock Prescaler",29,null],[12,"sppr","","Selected Pin Control",29,null],[12,"ffcr","","Formatter and Flush Control",29,null],[12,"lar","","Lock Access",29,null],[12,"lsr","","Lock Status",29,null],[12,"_type","","TPIU Type",29,null],[11,"take","cortex_m::peripheral","Returns all the core peripherals once",1,[[],["option",4]]],[11,"steal","","Unchecked version of `Peripherals::take`",1,[[]]],[11,"ptr","","Returns a pointer to the register block",3,[[]]],[11,"ptr","","Returns a pointer to the register block",6,[[]]],[11,"ptr","","Returns a pointer to the register block",8,[[]]],[11,"ptr","","Returns a pointer to the register block",11,[[]]],[11,"ptr","","Returns a pointer to the register block",30,[[]]],[11,"ptr","","Returns a pointer to the register block",31,[[]]],[11,"ptr","","Returns a pointer to the register block",32,[[]]],[11,"ptr","","Returns a pointer to the register block",33,[[]]],[11,"ptr","","Returns a pointer to the register block",18,[[]]],[11,"ptr","","Returns a pointer to the register block",25,[[]]],[11,"ptr","","Returns a pointer to the register block",28,[[]]],[11,"ptr","","Returns a pointer to the register block",34,[[]]],[0,"register","cortex_m","Processor core registers",null,null],[0,"basepri","cortex_m::register","Base Priority Mask Register",null,null],[5,"read","cortex_m::register::basepri","Reads the CPU register",null,[[]]],[5,"write","","Writes to the CPU register",null,[[]]],[0,"basepri_max","cortex_m::register","Base Priority Mask Register (conditional write)",null,null],[5,"write","cortex_m::register::basepri_max","Writes to BASEPRI if",null,[[]]],[0,"control","cortex_m::register","Control register",null,null],[3,"Control","cortex_m::register::control","Control register",null,null],[4,"Npriv","","Thread mode privilege level",null,null],[13,"Privileged","","Privileged",35,null],[13,"Unprivileged","","Unprivileged",35,null],[4,"Spsel","","Currently active stack pointer",null,null],[13,"Msp","","MSP is the current stack pointer",36,null],[13,"Psp","","PSP is the current stack pointer",36,null],[4,"Fpca","","Whether context floating-point is currently active",null,null],[13,"Active","","Floating-point context active.",37,null],[13,"NotActive","","No floating-point context active",37,null],[5,"read","","Reads the CPU register",null,[[],["control",3]]],[5,"write","","Writes to the CPU register.",null,[[["control",3]]]],[11,"from_bits","","Creates a `Control` value from raw bits.",38,[[]]],[11,"bits","","Returns the contents of the register as raw bits",38,[[]]],[11,"npriv","","Thread mode privilege level",38,[[],["npriv",4]]],[11,"set_npriv","","Sets the thread mode privilege level value (nPRIV).",38,[[["npriv",4]]]],[11,"spsel","","Currently active stack pointer",38,[[],["spsel",4]]],[11,"set_spsel","","Sets the SPSEL value.",38,[[["spsel",4]]]],[11,"fpca","","Whether context floating-point is currently active",38,[[],["fpca",4]]],[11,"set_fpca","","Sets the FPCA value.",38,[[["fpca",4]]]],[11,"is_privileged","","Is in privileged thread mode?",35,[[]]],[11,"is_unprivileged","","Is in unprivileged thread mode?",35,[[]]],[11,"is_msp","","Is MSP the current stack pointer?",36,[[]]],[11,"is_psp","","Is PSP the current stack pointer?",36,[[]]],[11,"is_active","","Is a floating-point context active?",37,[[]]],[11,"is_not_active","","Is a floating-point context not active?",37,[[]]],[0,"faultmask","cortex_m::register","Fault Mask Register",null,null],[4,"Faultmask","cortex_m::register::faultmask","All exceptions are ...",null,null],[13,"Active","","Active",39,null],[13,"Inactive","","Inactive, expect for NMI",39,null],[5,"read","","Reads the CPU register",null,[[],["faultmask",4]]],[11,"is_active","","All exceptions are active",39,[[]]],[11,"is_inactive","","All exceptions, except for NMI, are inactive",39,[[]]],[0,"msp","cortex_m::register","Main Stack Pointer",null,null],[5,"read","cortex_m::register::msp","Reads the CPU register",null,[[]]],[5,"write","","Writes `bits` to the CPU register",null,[[]]],[0,"primask","cortex_m::register","Priority mask register",null,null],[4,"Primask","cortex_m::register::primask","All exceptions with configurable priority are ...",null,null],[13,"Active","","Active",40,null],[13,"Inactive","","Inactive",40,null],[5,"read","","Reads the CPU register",null,[[],["primask",4]]],[11,"is_active","","All exceptions with configurable priority are active",40,[[]]],[11,"is_inactive","","All exceptions with configurable priority are inactive",40,[[]]],[0,"psp","cortex_m::register","Process Stack Pointer",null,null],[5,"read","cortex_m::register::psp","Reads the CPU register",null,[[]]],[5,"write","","Writes `bits` to the CPU register",null,[[]]],[14,"iprint","cortex_m","Macro for sending a formatted string through an ITM channel",null,null],[14,"iprintln","","Macro for sending a formatted string through an ITM…",null,null],[14,"singleton","","Macro to create a mutable reference to a statically…",null,null],[11,"from","cortex_m::interrupt","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","cortex_m::peripheral","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::cbp","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::cpuid","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dcb","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::dwt","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::fpb","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::fpu","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::itm","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::mpu","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::nvic","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::scb","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::syst","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","cortex_m::peripheral::tpiu","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","cortex_m::register::control","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","cortex_m::register::faultmask","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","cortex_m::register::primask","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"deref","cortex_m::peripheral","",3,[[]]],[11,"deref","","",6,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",11,[[]]],[11,"deref","","",30,[[]]],[11,"deref","","",31,[[]]],[11,"deref","","",32,[[]]],[11,"deref","","",33,[[]]],[11,"deref","","",18,[[]]],[11,"deref","","",25,[[]]],[11,"deref","","",28,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",32,[[]]],[11,"fmt","cortex_m::peripheral::cpuid","",5,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::scb","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::peripheral::syst","",27,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::control","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::faultmask","",39,[[["formatter",3]],["result",6]]],[11,"fmt","cortex_m::register::primask","",40,[[["formatter",3]],["result",6]]],[11,"eq","cortex_m::peripheral::cpuid","",5,[[["csselrcachetype",4]]]],[11,"eq","cortex_m::peripheral::scb","",20,[[["fpuaccessmode",4]]]],[11,"eq","","",21,[[["exception",4]]]],[11,"eq","","",22,[[["vectactive",4]]]],[11,"ne","","",22,[[["vectactive",4]]]],[11,"eq","","",24,[[["systemhandler",4]]]],[11,"eq","cortex_m::peripheral::syst","",27,[[["systclksource",4]]]],[11,"eq","cortex_m::register::control","",35,[[["npriv",4]]]],[11,"eq","","",36,[[["spsel",4]]]],[11,"eq","","",37,[[["fpca",4]]]],[11,"eq","cortex_m::register::faultmask","",39,[[["faultmask",4]]]],[11,"eq","cortex_m::register::primask","",40,[[["primask",4]]]],[11,"clone","cortex_m::peripheral::cpuid","",5,[[],["csselrcachetype",4]]],[11,"clone","cortex_m::peripheral::scb","",20,[[],["fpuaccessmode",4]]],[11,"clone","","",21,[[],["exception",4]]],[11,"clone","","",22,[[],["vectactive",4]]],[11,"clone","","",24,[[],["systemhandler",4]]],[11,"clone","cortex_m::peripheral::syst","",27,[[],["systclksource",4]]],[11,"clone","cortex_m::register::control","",38,[[],["control",3]]],[11,"clone","","",35,[[],["npriv",4]]],[11,"clone","","",36,[[],["spsel",4]]],[11,"clone","","",37,[[],["fpca",4]]],[11,"clone","cortex_m::register::faultmask","",39,[[],["faultmask",4]]],[11,"clone","cortex_m::register::primask","",40,[[],["primask",4]]],[11,"new","cortex_m::interrupt","Creates a critical section token",41,[[],["criticalsection",3]]],[11,"new","","Creates a new mutex",42,[[],["mutex",3]]],[11,"borrow","","Borrows the data for the duration of the critical section",42,[[["criticalsection",3]]]]],"p":[[8,"Nr"],[3,"Peripherals"],[3,"RegisterBlock"],[3,"CBP"],[3,"RegisterBlock"],[4,"CsselrCacheType"],[3,"CPUID"],[3,"RegisterBlock"],[3,"DCB"],[3,"RegisterBlock"],[3,"Comparator"],[3,"DWT"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"Stim"],[3,"RegisterBlock"],[3,"RegisterBlock"],[3,"NVIC"],[3,"RegisterBlock"],[4,"FpuAccessMode"],[4,"Exception"],[4,"VectActive"],[13,"Interrupt"],[4,"SystemHandler"],[3,"SCB"],[3,"RegisterBlock"],[4,"SystClkSource"],[3,"SYST"],[3,"RegisterBlock"],[3,"FPB"],[3,"FPU"],[3,"ITM"],[3,"MPU"],[3,"TPIU"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[3,"Control"],[4,"Faultmask"],[4,"Primask"],[3,"CriticalSection"],[3,"Mutex"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","i":[[4,"Direction","embedded_hal","Count direction",null,null],[13,"Downcounting","","3, 2, 1",0,null],[13,"Upcounting","","1, 2, 3",0,null],[0,"adc","","Analog-digital conversion traits",null,null],[8,"Channel","embedded_hal::adc","A marker trait to identify MCU pins that can be used as…",null,null],[16,"ID","","Channel ID type",1,null],[10,"channel","","Get the specific ID that identifies this channel, for…",1,[[]]],[8,"OneShot","","ADCs that sample on single channels per request, and do so…",null,null],[16,"Error","","Error type returned by ADC methods",2,null],[10,"read","","Request that the ADC begin a conversion on the specified pin",2,[[],["result",6]]],[0,"blocking","embedded_hal","Blocking API",null,null],[0,"delay","embedded_hal::blocking","Delays",null,null],[8,"DelayMs","embedded_hal::blocking::delay","Millisecond delay",null,null],[10,"delay_ms","","Pauses execution for `ms` milliseconds",3,[[]]],[8,"DelayUs","","Microsecond delay",null,null],[10,"delay_us","","Pauses execution for `us` microseconds",4,[[]]],[0,"i2c","embedded_hal::blocking","Blocking I2C API",null,null],[8,"Read","embedded_hal::blocking::i2c","Blocking read",null,null],[16,"Error","","Error type",5,null],[10,"read","","Reads enough bytes from slave with `address` to fill…",5,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",6,null],[10,"write","","Sends bytes to slave with address `addr`",6,[[],["result",4]]],[8,"WriteIter","","Blocking write (iterator version)",null,null],[16,"Error","","Error type",7,null],[10,"write","","Sends bytes to slave with address `addr`",7,[[],["result",4]]],[8,"WriteRead","","Blocking write + read",null,null],[16,"Error","","Error type",8,null],[10,"write_read","","Sends bytes to slave with address `addr` and then reads…",8,[[],["result",4]]],[8,"WriteIterRead","","Blocking write (iterator version) + read",null,null],[16,"Error","","Error type",9,null],[10,"write_iter_read","","Sends bytes to slave with address `addr` and then reads…",9,[[],["result",4]]],[0,"rng","embedded_hal::blocking","Blocking hardware random number generator",null,null],[8,"Read","embedded_hal::blocking::rng","Blocking read",null,null],[16,"Error","","Error type",10,null],[10,"read","","Reads enough bytes from hardware random number generator…",10,[[],["result",4]]],[0,"serial","embedded_hal::blocking","Blocking serial API",null,null],[0,"write","embedded_hal::blocking::serial","Blocking serial write",null,null],[8,"Default","embedded_hal::blocking::serial::write","Marker trait to opt into default blocking write…",null,null],[8,"Write","embedded_hal::blocking::serial","Write half of a serial interface (blocking variant)",null,null],[16,"Error","","The type of error that can occur when writing",11,null],[10,"bwrite_all","","Writes a slice, blocking until everything has been written",11,[[],["result",4]]],[10,"bflush","","Block until the serial interface has sent all buffered words",11,[[],["result",4]]],[0,"spi","embedded_hal::blocking","Blocking SPI API",null,null],[0,"transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[8,"Default","embedded_hal::blocking::spi::transfer","Default implementation of `blocking::spi::Transfer<W>` for…",null,null],[0,"write","embedded_hal::blocking::spi","Blocking write",null,null],[8,"Default","embedded_hal::blocking::spi::write","Default implementation of `blocking::spi::Write<W>` for…",null,null],[0,"write_iter","embedded_hal::blocking::spi","Blocking write (iterator version)",null,null],[8,"Default","embedded_hal::blocking::spi::write_iter","Default implementation of `blocking::spi::WriteIter<W>`…",null,null],[8,"Transfer","embedded_hal::blocking::spi","Blocking transfer",null,null],[16,"Error","","Error type",12,null],[10,"transfer","","Sends `words` to the slave. Returns the `words` received…",12,[[],["result",4]]],[8,"Write","","Blocking write",null,null],[16,"Error","","Error type",13,null],[10,"write","","Sends `words` to the slave, ignoring all the incoming words",13,[[],["result",4]]],[8,"WriteIter","","Blocking write (iterator version)",null,null],[16,"Error","","Error type",14,null],[10,"write_iter","","Sends `words` to the slave, ignoring all the incoming words",14,[[],["result",4]]],[0,"digital","embedded_hal","Digital I/O",null,null],[0,"v1","embedded_hal::digital","Digital I/O",null,null],[0,"toggleable","embedded_hal::digital::v1","If you can read and write the output state, a pin is…",null,null],[8,"Default","embedded_hal::digital::v1::toggleable","Software-driven `toggle()` implementation.",null,null],[8,"OutputPin","embedded_hal::digital::v1","Single digital push-pull output pin",null,null],[10,"set_low","","Drives the pin low",15,[[]]],[10,"set_high","","Drives the pin high",15,[[]]],[8,"StatefulOutputPin","","Push-pull output pin that can read its output state",null,null],[10,"is_set_high","","Is the pin in drive high mode?",16,[[]]],[10,"is_set_low","","Is the pin in drive low mode?",16,[[]]],[8,"ToggleableOutputPin","","Output pin that can be toggled",null,null],[10,"toggle","","Toggle pin output.",17,[[]]],[8,"InputPin","","Single digital input pin",null,null],[10,"is_high","","Is the input pin high?",18,[[]]],[10,"is_low","","Is the input pin low?",18,[[]]],[0,"v2","embedded_hal::digital","Digital I/O",null,null],[0,"toggleable","embedded_hal::digital::v2","If you can read and write the output state, a pin is…",null,null],[8,"Default","embedded_hal::digital::v2::toggleable","Software-driven `toggle()` implementation.",null,null],[8,"OutputPin","embedded_hal::digital::v2","Single digital push-pull output pin",null,null],[16,"Error","","Error type",19,null],[10,"set_low","","Drives the pin low",19,[[],["result",4]]],[10,"set_high","","Drives the pin high",19,[[],["result",4]]],[8,"StatefulOutputPin","","Push-pull output pin that can read its output state",null,null],[10,"is_set_high","","Is the pin in drive high mode?",20,[[],["result",4]]],[10,"is_set_low","","Is the pin in drive low mode?",20,[[],["result",4]]],[8,"ToggleableOutputPin","","Output pin that can be toggled",null,null],[16,"Error","","Error type",21,null],[10,"toggle","","Toggle pin output.",21,[[],["result",4]]],[8,"InputPin","","Single digital input pin",null,null],[16,"Error","","Error type",22,null],[10,"is_high","","Is the input pin high?",22,[[],["result",4]]],[10,"is_low","","Is the input pin low?",22,[[],["result",4]]],[0,"v1_compat","embedded_hal::digital","v1 compatibility wrappers",null,null],[3,"OldOutputPin","embedded_hal::digital::v1_compat","Wrapper to allow fallible `v2::OutputPin` traits to be…",null,null],[3,"OldInputPin","","Wrapper to allow fallible `v2::InputPin` traits to be…",null,null],[11,"new","","Create a new OldOutputPin wrapper around a `v2::OutputPin`",23,[[]]],[11,"new","","Create an `OldInputPin` wrapper around a `v2::InputPin`.",24,[[]]],[0,"v2_compat","embedded_hal::digital","v2 compatibility shims",null,null],[0,"fmt","embedded_hal","Implementation of `core::fmt::Write` for the HAL\'s…",null,null],[0,"prelude","","The prelude is a collection of all the traits in this crate",null,null],[0,"serial","","Serial interface",null,null],[8,"Read","embedded_hal::serial","Read half of a serial interface",null,null],[16,"Error","","Read error",25,null],[10,"read","","Reads a single word from the serial interface",25,[[],["result",6]]],[8,"Write","","Write half of a serial interface",null,null],[16,"Error","","Write error",26,null],[10,"write","","Writes a single word to the serial interface",26,[[],["result",6]]],[10,"flush","","Ensures that none of the previously written words are…",26,[[],["result",6]]],[0,"spi","embedded_hal","Serial Peripheral Interface",null,null],[3,"Mode","embedded_hal::spi","SPI mode",null,null],[12,"polarity","","Clock polarity",27,null],[12,"phase","","Clock phase",27,null],[4,"Polarity","","Clock polarity",null,null],[13,"IdleLow","","Clock signal low when idle",28,null],[13,"IdleHigh","","Clock signal high when idle",28,null],[4,"Phase","","Clock phase",null,null],[13,"CaptureOnFirstTransition","","Data in \\\"captured\\\" on the first clock transition",29,null],[13,"CaptureOnSecondTransition","","Data in \\\"captured\\\" on the second clock transition",29,null],[17,"MODE_0","","Helper for CPOL = 0, CPHA = 0",null,null],[17,"MODE_1","","Helper for CPOL = 0, CPHA = 1",null,null],[17,"MODE_2","","Helper for CPOL = 1, CPHA = 0",null,null],[17,"MODE_3","","Helper for CPOL = 1, CPHA = 1",null,null],[8,"FullDuplex","","Full duplex (master mode)",null,null],[16,"Error","","An enumeration of SPI errors",30,null],[10,"read","","Reads the word stored in the shift register",30,[[],["result",6]]],[10,"send","","Sends a word to the slave",30,[[],["result",6]]],[0,"timer","embedded_hal","Timers",null,null],[8,"CountDown","embedded_hal::timer","A count down timer",null,null],[16,"Time","","The unit of time used by this timer",31,null],[10,"start","","Starts a new count down",31,[[]]],[10,"wait","","Non-blockingly \\\"waits\\\" until the count down finishes",31,[[],[["result",6],["void",4]]]],[8,"Periodic","","Marker trait that indicates that a timer is periodic",null,null],[8,"Cancel","","Trait for cancelable countdowns.",null,null],[16,"Error","","Error returned when a countdown can\'t be canceled.",32,null],[10,"cancel","","Tries to cancel this countdown.",32,[[],["result",4]]],[0,"watchdog","embedded_hal","Traits for interactions with a processors watchdog timer.",null,null],[8,"Watchdog","embedded_hal::watchdog","Feeds an existing watchdog to ensure the processor isn\'t…",null,null],[10,"feed","","Triggers the watchdog. This must be done once the watchdog…",33,[[]]],[8,"WatchdogEnable","","Enables A watchdog timer to reset the processor if…",null,null],[16,"Time","","Unit of time used by the watchdog",34,null],[10,"start","","Starts the watchdog with a given period, typically once…",34,[[]]],[8,"WatchdogDisable","","Disables a running watchdog timer so the processor won\'t…",null,null],[10,"disable","","Disables the watchdog",35,[[]]],[8,"Capture","embedded_hal","Input capture",null,null],[16,"Error","","Enumeration of `Capture` errors",36,null],[16,"Channel","","Enumeration of channels that can be used with this…",36,null],[16,"Time","","A time unit that can be converted into a human time unit…",36,null],[16,"Capture","","The type of the value returned by `capture`",36,null],[10,"capture","","\\\"Waits\\\" for a transition in the capture `channel` and…",36,[[],["result",6]]],[10,"disable","","Disables a capture `channel`",36,[[]]],[10,"enable","","Enables a capture `channel`",36,[[]]],[10,"get_resolution","","Returns the current resolution",36,[[]]],[10,"set_resolution","","Sets the resolution of the capture timer",36,[[]]],[8,"Pwm","","Pulse Width Modulation",null,null],[16,"Channel","","Enumeration of channels that can be used with this `Pwm`…",37,null],[16,"Time","","A time unit that can be converted into a human time unit…",37,null],[16,"Duty","","Type for the `duty` methods",37,null],[10,"disable","","Disables a PWM `channel`",37,[[]]],[10,"enable","","Enables a PWM `channel`",37,[[]]],[10,"get_period","","Returns the current PWM period",37,[[]]],[10,"get_duty","","Returns the current duty cycle",37,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",37,[[]]],[10,"set_duty","","Sets a new duty cycle",37,[[]]],[10,"set_period","","Sets a new PWM period",37,[[]]],[8,"PwmPin","","A single PWM channel / pin",null,null],[16,"Duty","","Type for the `duty` methods",38,null],[10,"disable","","Disables a PWM `channel`",38,[[]]],[10,"enable","","Enables a PWM `channel`",38,[[]]],[10,"get_duty","","Returns the current duty cycle",38,[[]]],[10,"get_max_duty","","Returns the maximum duty cycle value",38,[[]]],[10,"set_duty","","Sets a new duty cycle",38,[[]]],[8,"Qei","","Quadrature encoder interface",null,null],[16,"Count","","The type of the value returned by `count`",39,null],[10,"count","","Returns the current pulse count of the encoder",39,[[]]],[10,"direction","","Returns the count direction",39,[[],["direction",4]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",23,[[],["result",4]]],[11,"set_high","","",23,[[],["result",4]]],[11,"is_set_low","","",23,[[],["result",4]]],[11,"is_set_high","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"is_low","","",24,[[],["result",4]]],[11,"is_high","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","embedded_hal::spi","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"set_low","embedded_hal::digital::v1_compat","",23,[[]]],[11,"set_high","","",23,[[]]],[11,"is_set_low","","",23,[[]]],[11,"is_set_high","","",23,[[]]],[11,"is_low","","",24,[[]]],[11,"is_high","","",24,[[]]],[11,"from","","",23,[[]]],[11,"from","","",24,[[]]],[11,"fmt","embedded_hal","",0,[[["formatter",3]],["result",6]]],[11,"eq","embedded_hal::spi","",28,[[["polarity",4]]]],[11,"eq","","",29,[[["phase",4]]]],[11,"eq","","",27,[[["mode",3]]]],[11,"ne","","",27,[[["mode",3]]]],[11,"eq","embedded_hal","",0,[[["direction",4]]]],[11,"write_str","embedded_hal::serial","",26,[[],["result",6]]],[11,"clone","embedded_hal::spi","",28,[[],["polarity",4]]],[11,"clone","","",29,[[],["phase",4]]],[11,"clone","","",27,[[],["mode",3]]],[11,"clone","embedded_hal","",0,[[],["direction",4]]]],"p":[[4,"Direction"],[8,"Channel"],[8,"OneShot"],[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteIter"],[8,"WriteRead"],[8,"WriteIterRead"],[8,"Read"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"WriteIter"],[8,"OutputPin"],[8,"StatefulOutputPin"],[8,"ToggleableOutputPin"],[8,"InputPin"],[8,"OutputPin"],[8,"StatefulOutputPin"],[8,"ToggleableOutputPin"],[8,"InputPin"],[3,"OldOutputPin"],[3,"OldInputPin"],[8,"Read"],[8,"Write"],[3,"Mode"],[4,"Polarity"],[4,"Phase"],[8,"FullDuplex"],[8,"CountDown"],[8,"Cancel"],[8,"Watchdog"],[8,"WatchdogEnable"],[8,"WatchdogDisable"],[8,"Capture"],[8,"Pwm"],[8,"PwmPin"],[8,"Qei"]]},\
"generic_array":{"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[],["mappedsequence",6]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[],["mappedsequence",6]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray",3]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray",3]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray",3]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[],["option",4]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","generic_array::iter","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"map","generic_array","",10,[[],["mappedsequence",6]]],[11,"zip","","",10,[[],["mappedsequence",6]]],[11,"fold","","",10,[[]]],[11,"generate","","",10,[[],["genericarray",3]]],[11,"append","","",10,[[]]],[11,"prepend","","",10,[[]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","generic_array::iter","",3,[[["formatter",3]],["result",6]]],[11,"eq","generic_array","",10,[[]]],[11,"cmp","","",10,[[["genericarray",3]],["ordering",4]]],[11,"partial_cmp","","",10,[[["genericarray",3]],[["option",4],["ordering",4]]]],[11,"drop","generic_array::iter","",3,[[]]],[11,"hash","generic_array","",10,[[]]],[11,"len","generic_array::iter","",3,[[]]],[11,"borrow","generic_array","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"from_iter","","",10,[[],["genericarray",3]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"next_back","generic_array::iter","",3,[[],["option",4]]],[11,"rfold","","",3,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"fold","","",3,[[]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[]]],[11,"nth","","",3,[[],["option",4]]],[11,"last","","",3,[[],["option",4]]],[11,"into_iter","generic_array","",10,[[]]],[11,"clone","","",10,[[],["genericarray",3]]],[11,"clone","generic_array::iter","",3,[[]]],[11,"default","generic_array","",10,[[]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]},\
"nb":{"doc":"Minimal and reusable non-blocking I/O layer","i":[[14,"block","nb","Turns the non-blocking expression `$e` into a blocking…",null,null],[4,"Error","","A non-blocking error",null,null],[13,"Other","","A different kind of error",0,null],[13,"WouldBlock","","This operation requires blocking behavior to complete",0,null],[6,"Result","","A non-blocking result",null,null],[14,"await","","Await operation (won\'t work until the language gains…",null,null],[14,"try_nb","","Future adapter",null,null],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"hash","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[],["error",4]]],[11,"cmp","","",0,[[["error",4]],["ordering",4]]],[11,"clone","","",0,[[],["error",4]]],[11,"partial_cmp","","",0,[[["error",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["error",4]]]],[11,"le","","",0,[[["error",4]]]],[11,"gt","","",0,[[["error",4]]]],[11,"ge","","",0,[[["error",4]]]],[11,"map","","Maps an `Error<E>` to `Error<T>` by applying a function to…",0,[[],["error",4]]]],"p":[[4,"Error"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",0,[[],[["option",4],["nonzerou32",3]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"from_seed","","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",0,[[["nonzerou32",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",0,[[["formatter",3]],["result",6]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",null,null],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",null,null]],"p":[]},\
"usb_device":{"doc":"Experimental device-side USB stack for embedded devices.","i":[[4,"UsbError","usb_device","A USB stack error.",null,null],[13,"WouldBlock","","An operation would block because the device is currently…",0,null],[13,"ParseError","","Parsing failed due to invalid input.",0,null],[13,"BufferOverflow","","A buffer too short for the data to read was passed, or…",0,null],[13,"EndpointOverflow","","Classes attempted to allocate more endpoints than the…",0,null],[13,"EndpointMemoryOverflow","","Classes attempted to allocate more packet buffer memory…",0,null],[13,"InvalidEndpoint","","The endpoint address is invalid or already used.",0,null],[13,"Unsupported","","Operation is not supported by device or configuration.",0,null],[13,"InvalidState","","Operation is not valid in the current state of the object.",0,null],[4,"UsbDirection","","Direction of USB traffic. Note that in the USB standard…",null,null],[13,"Out","","Host to device (OUT)",1,null],[13,"In","","Device to host (IN)",1,null],[0,"control","","USB control transfers and the SETUP packet.",null,null],[3,"Request","usb_device::control","A control request read from a SETUP packet.",null,null],[12,"direction","","Direction of the request.",2,null],[12,"request_type","","Type of the request.",2,null],[12,"recipient","","Recipient of the request.",2,null],[12,"request","","Request code. The meaning of the value depends on the…",2,null],[12,"value","","Request value. The meaning of the value depends on the…",2,null],[12,"index","","Request index. The meaning of the value depends on the…",2,null],[12,"length","","Length of the DATA stage. For control OUT transfers this…",2,null],[4,"RequestType","","Control request type.",null,null],[13,"Standard","","Request is a USB standard request. Usually handled by…",3,null],[13,"Class","","Request is intended for a USB class.",3,null],[13,"Vendor","","Request is vendor-specific.",3,null],[13,"Reserved","","Reserved.",3,null],[4,"Recipient","","Control request recipient.",null,null],[13,"Device","","Request is intended for the entire device.",4,null],[13,"Interface","","Request is intended for an interface. Generally, the…",4,null],[13,"Endpoint","","Request is intended for an endpoint. Generally, the…",4,null],[13,"Other","","None of the above.",4,null],[13,"Reserved","","Reserved.",4,null],[18,"GET_STATUS","","Standard USB control request Get Status",2,null],[18,"CLEAR_FEATURE","","Standard USB control request Clear Feature",2,null],[18,"SET_FEATURE","","Standard USB control request Set Feature",2,null],[18,"SET_ADDRESS","","Standard USB control request Set Address",2,null],[18,"GET_DESCRIPTOR","","Standard USB control request Get Descriptor",2,null],[18,"SET_DESCRIPTOR","","Standard USB control request Set Descriptor",2,null],[18,"GET_CONFIGURATION","","Standard USB control request Get Configuration",2,null],[18,"SET_CONFIGURATION","","Standard USB control request Set Configuration",2,null],[18,"GET_INTERFACE","","Standard USB control request Get Interface",2,null],[18,"SET_INTERFACE","","Standard USB control request Set Interface",2,null],[18,"SYNCH_FRAME","","Standard USB control request Synch Frame",2,null],[18,"FEATURE_ENDPOINT_HALT","","Standard USB feature Endpoint Halt for Set/Clear Feature",2,null],[18,"FEATURE_DEVICE_REMOTE_WAKEUP","","Standard USB feature Device Remote Wakeup for Set/Clear…",2,null],[11,"descriptor_type_index","","Gets the descriptor type and index from the value field of…",2,[[]]],[0,"bus","usb_device","For implementing peripheral drivers.",null,null],[3,"UsbBusAllocator","usb_device::bus","Helper type used for UsbBus resource allocation and…",null,null],[3,"InterfaceNumber","","A handle for a USB interface that contains its number.",null,null],[3,"StringIndex","","A handle for a USB string descriptor that contains its…",null,null],[4,"PollResult","","Event and incoming packet information returned by…",null,null],[13,"None","","No events or packets to report.",5,null],[13,"Reset","","The USB reset condition has been detected.",5,null],[13,"Data","","USB packets have been received or sent. Each data field is…",5,null],[12,"ep_out","usb_device::bus::PollResult","An OUT packet has been received. This event should…",6,null],[12,"ep_in_complete","","An IN packet has finished transmitting. This event should…",6,null],[12,"ep_setup","","A SETUP packet has been received. This event should…",6,null],[13,"Suspend","usb_device::bus","A USB suspend request has been detected or, in the case of…",5,null],[13,"Resume","","A USB resume request has been detected after being…",5,null],[8,"UsbBus","","A trait for device-specific USB peripherals. Implement…",null,null],[10,"alloc_ep","","Allocates an endpoint and specified endpoint parameters.…",7,[[["endpointaddress",3],["usbdirection",4],["option",4],["endpointtype",4]],[["result",6],["endpointaddress",3]]]],[10,"enable","","Enables and initializes the USB peripheral. Soon after…",7,[[]]],[10,"reset","","Performs a USB reset. This method should reset the…",7,[[]]],[10,"set_device_address","","Sets the device USB address to `addr`.",7,[[]]],[10,"write","","Writes a single packet of data to the specified endpoint…",7,[[["endpointaddress",3]],["result",6]]],[10,"read","","Reads a single packet of data from the specified endpoint…",7,[[["endpointaddress",3]],["result",6]]],[10,"set_stalled","","Sets or clears the STALL condition for an endpoint. If the…",7,[[["endpointaddress",3]]]],[10,"is_stalled","","Gets whether the STALL condition is set for an endpoint.",7,[[["endpointaddress",3]]]],[10,"suspend","","Causes the USB peripheral to enter USB suspend mode,…",7,[[]]],[10,"resume","","Resumes from suspend mode. This may only be called after…",7,[[]]],[10,"poll","","Gets information about events and incoming data. Usually…",7,[[],["pollresult",4]]],[11,"force_reset","","Simulates a disconnect from the USB bus, causing the host…",7,[[],["result",6]]],[18,"QUIRK_SET_ADDRESS_BEFORE_STATUS","","Indicates that `set_device_address` must be called before…",7,null],[11,"new","","Creates a new [`UsbBusAllocator`] that wraps the provided…",8,[[],["usbbusallocator",3]]],[11,"interface","","Allocates a new interface number.",8,[[],["interfacenumber",3]]],[11,"string","","Allocates a new string index.",8,[[],["stringindex",3]]],[11,"alloc","","Allocates an endpoint with the specified direction and…",8,[[["endpointtype",4],["option",4],["endpointaddress",3]],[["result",6],["endpoint",3]]]],[11,"control","","Allocates a control endpoint.",8,[[],[["endpointdirection",8],["endpoint",3]]]],[11,"bulk","","Allocates a bulk endpoint.",8,[[],[["endpointdirection",8],["endpoint",3]]]],[11,"interrupt","","Allocates an interrupt endpoint.",8,[[],[["endpointdirection",8],["endpoint",3]]]],[0,"class","usb_device","For implementing standard as well as vendor-specific USB…",null,null],[3,"ControlIn","usb_device::class","Handle for a control IN transfer. When implementing a…",null,null],[3,"ControlOut","","Handle for a control OUT transfer. When implementing a…",null,null],[8,"UsbClass","","A trait for implementing USB classes.",null,null],[11,"get_configuration_descriptors","","Called when a GET_DESCRIPTOR request is received for a…",9,[[["descriptorwriter",3]],["result",6]]],[11,"get_bos_descriptors","","Called when a GET_DESCRIPTOR request is received for a BOS…",9,[[["boswriter",3]],["result",6]]],[11,"get_string","","Gets a class-specific string descriptor.",9,[[["stringindex",3]],["option",4]]],[11,"reset","","Called after a USB reset after the bus reset sequence is…",9,[[]]],[11,"poll","","Called whenever the `UsbDevice` is polled.",9,[[]]],[11,"control_out","","Called when a control request is received with direction…",9,[[["controlout",3]]]],[11,"control_in","","Called when a control request is received with direction…",9,[[["controlin",3]]]],[11,"endpoint_setup","","Called when endpoint with address `addr` has received a…",9,[[["endpointaddress",3]]]],[11,"endpoint_out","","Called when endpoint with address `addr` has received data…",9,[[["endpointaddress",3]]]],[11,"endpoint_in_complete","","Called when endpoint with address `addr` has completed…",9,[[["endpointaddress",3]]]],[11,"request","","Gets the request from the SETUP packet.",10,[[],["request",3]]],[11,"accept_with","","Accepts the transfer with the supplied buffer.",10,[[],["result",6]]],[11,"accept_with_static","","Accepts the transfer with the supplied static buffer. This…",10,[[],["result",6]]],[11,"accept","","Accepts the transfer with a callback that can write to the…",10,[[],["result",6]]],[11,"reject","","Rejects the transfer by stalling the pipe.",10,[[],["result",6]]],[11,"request","","Gets the request from the SETUP packet.",11,[[],["request",3]]],[11,"data","","Gets the data from the data stage of the request. May be…",11,[[]]],[11,"accept","","Accepts the transfer by succesfully responding to the…",11,[[],["result",6]]],[11,"reject","","Rejects the transfer by stalling the pipe.",11,[[],["result",6]]],[0,"endpoint","usb_device","USB endpoints.",null,null],[3,"Out","usb_device::endpoint","Marker type for OUT endpoints.",null,null],[3,"In","","Marker type for IN endpoints.",null,null],[3,"Endpoint","","Handle for a USB endpoint. The endpoint direction is…",null,null],[3,"EndpointAddress","","Type-safe endpoint address.",null,null],[4,"EndpointType","","USB endpoint transfer type. The values of this enum can be…",null,null],[13,"Control","","Control endpoint. Used for device management. Only the…",12,null],[13,"Isochronous","","Isochronous endpoint. Used for time-critical unreliable…",12,null],[13,"Bulk","","Bulk endpoint. Used for large amounts of best-effort…",12,null],[13,"Interrupt","","Interrupt endpoint. Used for small amounts of…",12,null],[6,"EndpointOut","","A host-to-device (OUT) endpoint.",null,null],[6,"EndpointIn","","A device-to-host (IN) endpoint.",null,null],[8,"EndpointDirection","","Trait for endpoint type markers.",null,null],[18,"DIRECTION","","Direction value of the marker type.",13,null],[11,"address","","Gets the endpoint address including direction bit.",14,[[],["endpointaddress",3]]],[11,"ep_type","","Gets the endpoint transfer type.",14,[[],["endpointtype",4]]],[11,"max_packet_size","","Gets the maximum packet size for the endpoint.",14,[[]]],[11,"interval","","Gets the poll interval for interrupt endpoints.",14,[[]]],[11,"stall","","Sets the STALL condition for the endpoint.",14,[[]]],[11,"unstall","","Clears the STALL condition of the endpoint.",14,[[]]],[11,"write","","Writes a single packet of data to the specified endpoint…",14,[[],["result",6]]],[11,"read","","Reads a single packet of data from the specified endpoint…",14,[[],["result",6]]],[11,"from_parts","","Constructs a new EndpointAddress with the given index and…",15,[[["usbdirection",4]]]],[11,"direction","","Gets the direction part of the address.",15,[[],["usbdirection",4]]],[11,"is_in","","Returns true if the direction is IN, otherwise false.",15,[[]]],[11,"is_out","","Returns true if the direction is OUT, otherwise false.",15,[[]]],[11,"index","","Gets the index part of the endpoint address.",15,[[]]],[0,"device","usb_device","USB composite device.",null,null],[3,"UsbDeviceBuilder","usb_device::device","Used to build new [`UsbDevice`]s.",null,null],[3,"UsbVidPid","","A USB vendor ID and product ID pair.",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[3,"UsbDevice","","A USB device consisting of one or more device classes.",null,null],[4,"UsbDeviceState","","The global state of the USB device.",null,null],[13,"Default","","The USB device has just been created or reset.",17,null],[13,"Addressed","","The USB device has received an address from the host.",17,null],[13,"Configured","","The USB device has been configured and is fully functional.",17,null],[13,"Suspend","","The USB device has been suspended by the host or it has…",17,null],[17,"CONFIGURATION_NONE","","The bConfiguration value for the not configured state.",null,null],[17,"CONFIGURATION_VALUE","","The bConfiguration value for the single configuration…",null,null],[17,"DEFAULT_ALTERNATE_SETTING","","The default value for bAlternateSetting for all interfaces.",null,null],[11,"bus","","Gets a reference to the [`UsbBus`] implementation used by…",18,[[]]],[11,"state","","Gets the current state of the device.",18,[[],["usbdevicestate",4]]],[11,"remote_wakeup_enabled","","Gets whether host remote wakeup has been enabled by the…",18,[[]]],[11,"self_powered","","Gets whether the device is currently self powered.",18,[[]]],[11,"set_self_powered","","Sets whether the device is currently self powered.",18,[[]]],[11,"force_reset","","Simulates a disconnect from the USB bus, causing the host…",18,[[],["result",6]]],[11,"poll","","Polls the [`UsbBus`] for new events and dispatches them to…",18,[[]]],[0,"descriptor","usb_device","Creating USB descriptors",null,null],[3,"DescriptorWriter","usb_device::descriptor","A writer for USB descriptors.",null,null],[3,"BosWriter","","A writer for Binary Object Store descriptor.",null,null],[0,"descriptor_type","","Standard descriptor types",null,null],[17,"DEVICE","usb_device::descriptor::descriptor_type","",null,null],[17,"CONFIGURATION","","",null,null],[17,"STRING","","",null,null],[17,"INTERFACE","","",null,null],[17,"ENDPOINT","","",null,null],[17,"IAD","","",null,null],[17,"BOS","","",null,null],[17,"CAPABILITY","","",null,null],[0,"lang_id","usb_device::descriptor","String descriptor language IDs.",null,null],[17,"ENGLISH_US","usb_device::descriptor::lang_id","English (US)",null,null],[0,"capability_type","usb_device::descriptor","Standard capability descriptor types",null,null],[17,"WIRELESS_USB","usb_device::descriptor::capability_type","",null,null],[17,"USB_2_0_EXTENSION","","",null,null],[17,"SS_USB_DEVICE","","",null,null],[17,"CONTAINER_ID","","",null,null],[17,"PLATFORM","","",null,null],[11,"position","usb_device::descriptor","Gets the current position in the buffer, i.e. the number…",19,[[]]],[11,"write","","Writes an arbitrary (usually class-specific) descriptor.",19,[[],["result",6]]],[11,"iad","","Writes a interface association descriptor. Call from…",19,[[["interfacenumber",3]],["result",6]]],[11,"interface","","Writes a interface descriptor.",19,[[["interfacenumber",3]],["result",6]]],[11,"endpoint","","Writes an endpoint descriptor.",19,[[["endpoint",3]],["result",6]]],[11,"capability","","Writes capability descriptor to a BOS",20,[[],["result",6]]],[0,"test_class","usb_device","Test USB class for testing USB driver implementations.…",null,null],[3,"TestClass","usb_device::test_class","Test USB class for testing USB driver implementations.…",null,null],[17,"VID","","",null,null],[17,"PID","","",null,null],[17,"MANUFACTURER","","",null,null],[17,"PRODUCT","","",null,null],[17,"SERIAL_NUMBER","","",null,null],[17,"CUSTOM_STRING","","",null,null],[17,"REQ_STORE_REQUEST","","",null,null],[17,"REQ_READ_BUFFER","","",null,null],[17,"REQ_WRITE_BUFFER","","",null,null],[17,"REQ_SET_BENCH_ENABLED","","",null,null],[17,"REQ_READ_LONG_DATA","","",null,null],[17,"REQ_UNKNOWN","","",null,null],[17,"LONG_DATA","","",null,null],[11,"new","","Creates a new TestClass.",21,[[["usbbusallocator",3]],["testclass",3]]],[11,"make_device","","Convenience method to create a UsbDevice that is…",21,[[["usbbusallocator",3]],["usbdevice",3]]],[11,"poll","","Must be called after polling the UsbDevice.",21,[[]]],[11,"new","usb_device::device","Creates a builder for constructing a new [`UsbDevice`].",22,[[["usbvidpid",3],["usbbusallocator",3]],["usbdevicebuilder",3]]],[11,"build","","Creates the [`UsbDevice`] instance with the configuration…",22,[[],["usbdevice",3]]],[11,"device_class","","Sets the device class code assigned by USB.org. Set to…",22,[[]]],[11,"device_sub_class","","Sets the device sub-class code. Depends on class.",22,[[]]],[11,"device_protocol","","Sets the device protocol code. Depends on class and…",22,[[]]],[11,"device_release","","Sets the device release version in BCD.",22,[[]]],[11,"self_powered","","Sets whether the device may have an external power source.",22,[[]]],[11,"supports_remote_wakeup","","Sets whether the device supports remotely waking up the…",22,[[]]],[11,"composite_with_iads","","Configures the device as a composite device with interface…",22,[[]]],[11,"manufacturer","","Sets the manufacturer name string descriptor.",22,[[]]],[11,"product","","Sets the product name string descriptor.",22,[[]]],[11,"serial_number","","Sets the serial number string descriptor.",22,[[]]],[11,"max_packet_size_0","","Sets the maximum packet size in bytes for the control…",22,[[]]],[11,"max_power","","Sets the maximum current drawn from the USB bus by the…",22,[[]]],[0,"prelude","usb_device","Prelude for device implementors.",null,null],[3,"UsbDeviceBuilder","usb_device::prelude","Used to build new [`UsbDevice`]s.",null,null],[3,"UsbVidPid","","A USB vendor ID and product ID pair.",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[0,"class_prelude","usb_device","Prelude for class implementors.",null,null],[6,"Result","","Result for USB operations.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","usb_device::control","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","usb_device::bus","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","usb_device::class","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","usb_device::endpoint","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","usb_device::device","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","usb_device::descriptor","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","usb_device::test_class","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"reset","","",21,[[]]],[11,"get_configuration_descriptors","","",21,[[["descriptorwriter",3]],["result",6]]],[11,"get_string","","",21,[[["stringindex",3]],["option",4]]],[11,"endpoint_in_complete","","",21,[[["endpointaddress",3]]]],[11,"endpoint_out","","",21,[[["endpointaddress",3]]]],[11,"control_in","","",21,[[["controlin",3]]]],[11,"control_out","","",21,[[["controlout",3]]]],[11,"from","usb_device","",1,[[]]],[11,"from","usb_device::endpoint","",15,[[],["endpointaddress",3]]],[11,"fmt","usb_device","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","usb_device::control","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","usb_device::endpoint","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","usb_device::device","",17,[[["formatter",3]],["result",6]]],[11,"eq","usb_device","",1,[[["usbdirection",4]]]],[11,"eq","usb_device::control","",3,[[["requesttype",4]]]],[11,"eq","","",4,[[["recipient",4]]]],[11,"eq","","",2,[[["request",3]]]],[11,"ne","","",2,[[["request",3]]]],[11,"eq","usb_device::bus","",23,[[["interfacenumber",3]]]],[11,"ne","","",23,[[["interfacenumber",3]]]],[11,"eq","","",24,[[["stringindex",3]]]],[11,"ne","","",24,[[["stringindex",3]]]],[11,"eq","usb_device::endpoint","",12,[[["endpointtype",4]]]],[11,"eq","","",15,[[["endpointaddress",3]]]],[11,"ne","","",15,[[["endpointaddress",3]]]],[11,"eq","usb_device::device","",17,[[["usbdevicestate",4]]]],[11,"clone","usb_device","",1,[[],["usbdirection",4]]],[11,"clone","usb_device::control","",3,[[],["requesttype",4]]],[11,"clone","","",4,[[],["recipient",4]]],[11,"clone","","",2,[[],["request",3]]],[11,"clone","usb_device::bus","",23,[[],["interfacenumber",3]]],[11,"clone","","",24,[[],["stringindex",3]]],[11,"clone","usb_device::endpoint","",12,[[],["endpointtype",4]]],[11,"clone","","",15,[[],["endpointaddress",3]]],[11,"clone","usb_device::device","",17,[[],["usbdevicestate",4]]]],"p":[[4,"UsbError"],[4,"UsbDirection"],[3,"Request"],[4,"RequestType"],[4,"Recipient"],[4,"PollResult"],[13,"Data"],[8,"UsbBus"],[3,"UsbBusAllocator"],[8,"UsbClass"],[3,"ControlIn"],[3,"ControlOut"],[4,"EndpointType"],[8,"EndpointDirection"],[3,"Endpoint"],[3,"EndpointAddress"],[3,"UsbVidPid"],[4,"UsbDeviceState"],[3,"UsbDevice"],[3,"DescriptorWriter"],[3,"BosWriter"],[3,"TestClass"],[3,"UsbDeviceBuilder"],[3,"InterfaceNumber"],[3,"StringIndex"],[3,"Out"],[3,"In"]]},\
"vcell":{"doc":"Just like `Cell` but with volatile read / write operations","i":[[3,"VolatileCell","vcell","Just like `Cell` but with volatile read / write operations",null,null],[11,"new","","Creates a new `VolatileCell` containing the given value",0,[[]]],[11,"get","","Returns a copy of the contained value",0,[[]]],[11,"set","","Sets the contained value",0,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in the cell",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"VolatileCell"]]},\
"void":{"doc":"VoidThe uninhabited void type for use in statically…","i":[[4,"Void","void","The empty type for cases which can\'t occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,[[["void",4]]]],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[]]],[11,"partial_cmp","","",2,[[],[["option",4],["ordering",4]]]],[11,"clone","","",2,[[],["void",4]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]},\
"volatile_register":{"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",null,null],[3,"RW","","Read-Write register",null,null],[3,"WO","","Write-Only register",null,null],[11,"read","","Reads the value of the register",0,[[]]],[11,"modify","","Performs a read-modify-write operation",1,[[]]],[11,"read","","Reads the value of the register",1,[[]]],[11,"write","","Writes a `value` into the register",1,[[]]],[11,"write","","Writes `value` into the register",2,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);