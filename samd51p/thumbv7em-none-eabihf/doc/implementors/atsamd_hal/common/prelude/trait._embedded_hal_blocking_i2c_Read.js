(function() {var implementors = {};
implementors["atsamd_hal"] = [{"text":"impl&lt;Sercom0Pad0, Sercom0Pad1&gt; Read for I2CMaster0&lt;Sercom0Pad0, Sercom0Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom1Pad0, Sercom1Pad1&gt; Read for I2CMaster1&lt;Sercom1Pad0, Sercom1Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom2Pad0, Sercom2Pad1&gt; Read for I2CMaster2&lt;Sercom2Pad0, Sercom2Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom3Pad0, Sercom3Pad1&gt; Read for I2CMaster3&lt;Sercom3Pad0, Sercom3Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom4Pad0, Sercom4Pad1&gt; Read for I2CMaster4&lt;Sercom4Pad0, Sercom4Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom5Pad0, Sercom5Pad1&gt; Read for I2CMaster5&lt;Sercom5Pad0, Sercom5Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom6Pad0, Sercom6Pad1&gt; Read for I2CMaster6&lt;Sercom6Pad0, Sercom6Pad1&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Sercom7Pad0, Sercom7Pad1&gt; Read for I2CMaster7&lt;Sercom7Pad0, Sercom7Pad1&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()