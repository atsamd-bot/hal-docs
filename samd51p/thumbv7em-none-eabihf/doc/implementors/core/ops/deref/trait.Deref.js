(function() {var implementors = {};
implementors["aligned"] = [{"text":"impl&lt;A, T&gt; Deref for Aligned&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Alignment,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ?Sized,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["atsamd51p"] = [{"text":"impl Deref for AC","synthetic":false,"types":[]},{"text":"impl Deref for ADC0","synthetic":false,"types":[]},{"text":"impl Deref for ADC1","synthetic":false,"types":[]},{"text":"impl Deref for AES","synthetic":false,"types":[]},{"text":"impl Deref for CCL","synthetic":false,"types":[]},{"text":"impl Deref for CMCC","synthetic":false,"types":[]},{"text":"impl Deref for DAC","synthetic":false,"types":[]},{"text":"impl Deref for DMAC","synthetic":false,"types":[]},{"text":"impl Deref for DSU","synthetic":false,"types":[]},{"text":"impl Deref for EIC","synthetic":false,"types":[]},{"text":"impl Deref for EVSYS","synthetic":false,"types":[]},{"text":"impl Deref for FREQM","synthetic":false,"types":[]},{"text":"impl Deref for GCLK","synthetic":false,"types":[]},{"text":"impl Deref for HMATRIX","synthetic":false,"types":[]},{"text":"impl Deref for ICM","synthetic":false,"types":[]},{"text":"impl Deref for I2S","synthetic":false,"types":[]},{"text":"impl Deref for MCLK","synthetic":false,"types":[]},{"text":"impl Deref for NVMCTRL","synthetic":false,"types":[]},{"text":"impl Deref for OSCCTRL","synthetic":false,"types":[]},{"text":"impl Deref for OSC32KCTRL","synthetic":false,"types":[]},{"text":"impl Deref for PAC","synthetic":false,"types":[]},{"text":"impl Deref for PCC","synthetic":false,"types":[]},{"text":"impl Deref for PDEC","synthetic":false,"types":[]},{"text":"impl Deref for PM","synthetic":false,"types":[]},{"text":"impl Deref for PORT","synthetic":false,"types":[]},{"text":"impl Deref for QSPI","synthetic":false,"types":[]},{"text":"impl Deref for RAMECC","synthetic":false,"types":[]},{"text":"impl Deref for RSTC","synthetic":false,"types":[]},{"text":"impl Deref for RTC","synthetic":false,"types":[]},{"text":"impl Deref for SDHC0","synthetic":false,"types":[]},{"text":"impl Deref for SDHC1","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM0","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM1","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM2","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM3","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM4","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM5","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM6","synthetic":false,"types":[]},{"text":"impl Deref for SERCOM7","synthetic":false,"types":[]},{"text":"impl Deref for SUPC","synthetic":false,"types":[]},{"text":"impl Deref for TC0","synthetic":false,"types":[]},{"text":"impl Deref for TC1","synthetic":false,"types":[]},{"text":"impl Deref for TC2","synthetic":false,"types":[]},{"text":"impl Deref for TC3","synthetic":false,"types":[]},{"text":"impl Deref for TC4","synthetic":false,"types":[]},{"text":"impl Deref for TC5","synthetic":false,"types":[]},{"text":"impl Deref for TC6","synthetic":false,"types":[]},{"text":"impl Deref for TC7","synthetic":false,"types":[]},{"text":"impl Deref for TCC0","synthetic":false,"types":[]},{"text":"impl Deref for TCC1","synthetic":false,"types":[]},{"text":"impl Deref for TCC2","synthetic":false,"types":[]},{"text":"impl Deref for TCC3","synthetic":false,"types":[]},{"text":"impl Deref for TCC4","synthetic":false,"types":[]},{"text":"impl Deref for TRNG","synthetic":false,"types":[]},{"text":"impl Deref for USB","synthetic":false,"types":[]},{"text":"impl Deref for WDT","synthetic":false,"types":[]},{"text":"impl Deref for COREDEBUG","synthetic":false,"types":[]},{"text":"impl Deref for ETM","synthetic":false,"types":[]},{"text":"impl Deref for SYSTICK","synthetic":false,"types":[]},{"text":"impl Deref for SYSTEMCONTROL","synthetic":false,"types":[]},{"text":"impl Deref for TPI","synthetic":false,"types":[]}];
implementors["cortex_m"] = [{"text":"impl Deref for CBP","synthetic":false,"types":[]},{"text":"impl Deref for CPUID","synthetic":false,"types":[]},{"text":"impl Deref for DCB","synthetic":false,"types":[]},{"text":"impl Deref for DWT","synthetic":false,"types":[]},{"text":"impl Deref for FPB","synthetic":false,"types":[]},{"text":"impl Deref for FPU","synthetic":false,"types":[]},{"text":"impl Deref for ITM","synthetic":false,"types":[]},{"text":"impl Deref for MPU","synthetic":false,"types":[]},{"text":"impl Deref for NVIC","synthetic":false,"types":[]},{"text":"impl Deref for SCB","synthetic":false,"types":[]},{"text":"impl Deref for SYST","synthetic":false,"types":[]},{"text":"impl Deref for TPIU","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Deref for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()